(function($){function findValue(parent,dotNot){if(!dotNot||!dotNot)return undefined;var splits=dotNot.split(".");var value;for(var i=0;i<splits.length;++i){value=parent[splits[i]];if(value===undefined)return undefined;if(typeof value==="object")parent=value}return value}function flattenObject(obj){var result={};for(var key in obj){if(!obj.hasOwnProperty(key))continue;if(obj[key]&&obj[key].constructor===Object){var flat=flattenObject(obj[key]);for(var x in flat){if(!flat.hasOwnProperty(x)){continue}result[key+"."+x]=flat[x]}}else{result[key]=obj[key]}}return result}function unflattenObject(flat){var result={};var parentObj=result;var keys=Object.keys(flat);for(var i=0;i<keys.length;++i){var key=keys[i];var subkeys=key.split(".");var last=subkeys.pop();for(var ii=0;ii<subkeys.length;++ii){var subkey=subkeys[ii];parentObj[subkey]=typeof parentObj[subkey]==="undefined"?{}:parentObj[subkey];parentObj=parentObj[subkey]}parentObj[last]=flat[key];parentObj=result}return result}function handleArrays(obj){var convert=true;var keys=Object.keys(obj).map(function(key){var val=parseInt(key,10);if(isNaN(val)){convert=false}return val}).sort();var arr=convert?[]:obj;if(!convert){for(var k in obj){if(obj[k]&&obj[k].constructor===Object){arr[k]=handleArrays(obj[k])}}}else{keys.forEach(function(key){if(obj[key]&&obj[key].constructor===Object)return arr[key]=handleArrays(obj[key]);arr.push(obj[key])})}return arr}function mergeRecursive(obj1,obj2){for(var p in obj2){try{if(obj2[p].constructor==Object){obj1[p]=mergeRecursive(obj1[p],obj2[p])}else{obj1[p]=obj2[p]}}catch(e){obj1[p]=obj2[p]}}return obj1}function sch(obj,out,path){var schema=out||{};path=path||"";var t=getTypeOf(obj);if(t!=="object"){return{type:t}}else{for(var k in obj){var c=obj[k];t=getTypeOf(c);if(t==="array"||t==="object"){schema[path+k]={schema:t==="array"?sch(c[0]):sch(c),type:t};continue}schema[path+k]={type:t}}}return schema}function schemaCoreFields(obj,path){path=path||"";for(var k in obj){var c=obj[k];if(c.type==="array"&&typeof Object(c.schema).type!=="string"||c.type==="object"){schemaCoreFields(c.schema,path+k+".")}c.label=c.label||k;c.path=path+k;c.name=k}}function getTypeOf(o){var types={undefined:"undefined",number:"number","boolean":"boolean",string:"string","[object Function]":"function","[object RegExp]":"regexp","function Array() { [native code] }":"array","function Date() { [native code] }":"date","[object Error]":"error"};return types[o&&o.constructor]||types[typeof o]||types[o]||(o?"object":"null")}var JsonEdit=$.fn.jsonEdit=function(opt_options){var settings=$.extend({data:{},schema:{},autoInit:true},opt_options);var self={labels:$.extend(JsonEdit.labels,opt_options.labels),groups:$.extend(JsonEdit.groups,opt_options.groups),inputs:$.extend(JsonEdit.inputs,opt_options.inputs),container:this,converters:$.extend(JsonEdit.converters,opt_options.converters)};self.createGroup=function(field){var $group=self.groups[field.type].clone(true);$group.find("label").append(self.labels[field.type].clone(true).text(field.label));var fieldData=field.data===undefined?self.getValue(field.path):field.data;if(fieldData===undefined){return}var $input=null;if(field.type=="array"){var $thead=null;var $tbody=null;var $headers=null;$input=$("<table>",{border:"1","data-json-editor-path":field.path,"data-json-editor-type":"array"}).append([$thead=$("<thead>").append("<tr>"),$tbody=$("<tbody>")]);$headers=$thead.children("tr");var headers=[];for(var k in field.schema){var c=field.schema[k];headers.push(c.name);$headers.append($("<th>",{text:c.label||"Values"}))}for(var i=0;i<fieldData.length;++i){var cFieldData=fieldData[i];var $tr=$("<tr>").appendTo($tbody);if(typeof Object(field.schema).type==="string"){var path=null;$tr.append($("<td>").append(self.createGroup({type:getTypeOf(cFieldData),path:field.path+"."+i,schema:field.schema})))}else{for(var ii=0;ii<headers.length;++ii){var sch=field.schema[headers[ii]];var path=field.path+"."+i+"."+headers[ii];$tr.append($("<td>").append(self.createGroup({type:sch.type,path:path,schema:sch.schema,name:sch.name})))}}}}else if(field.type==="object"){$input=[];for(var k in field.schema){var cField=field.schema[k];$input.push(self.createGroup({path:field.path+"."+k,type:cField.type,schema:cField.schema,name:cField.name,label:cField.label}))}}else{$input=self.inputs[field.type].clone(true).attr({"data-json-editor-path":field.path,"data-json-editor-type":field.type});if(field.type==="boolean"){$input.prop("checked",fieldData)}else if(field.type==="date"){$input[0].valueAsDate=fieldData}else{$input.val(fieldData)}}$group.find("label").append($input);return $group};self.addControls=function(path){var $table=$("table[data-json-editor-path='"+path+"']",self.container);if(!$table.length){return}$table.children("thead").children("tr").append($("<th>"));$table.children("tbody").children("tr").append($("<td>").append($("<button>",{text:"Delete","data-json-editor-control":"delete"})));$table.on("click","[data-json-editor-control='delete']",function(){self.delete($(this).closest("tr"))})};self.add=function(path,data){var $elm=null;if(path.constructor===jQuery){$elm=path;$elm=$elm.closest("[data-json-editor-path]");path=$elm.attr("data-json-editor-path")}else{$elm=$("[data-json-editor-path='"+path+"']",self.container)}var fieldSchema=findValue(settings.schema,path);var $tbody=$elm.children("tbody");if(typeof Object(fieldSchema.schema).type==="string"){var $td=$("<td>").appendTo($("<tr>").appendTo($tbody));$td.append(self.createGroup({path:fieldSchema.path+"."+$tbody.children("tr").length,type:fieldSchema.schema.type,schema:fieldSchema.schema,data:data}))}else{throw new Error("Not yet implemented.")}};self["delete"]=function(path){$(path).remove()};self.getValue=function(fieldPath){return findValue(settings.data,fieldPath)};self.initUi=function(){function create(obj){for(var k in obj){var c=obj[k];self.container.append(self.createGroup(c))}}create(settings.schema)};self.getData=function(){var data={};$("[data-json-editor-path]",self.container).each(function(){var $this=$(this);var type=$(this).attr("data-json-editor-type");if(type==="array"){return}var path=$this.attr("data-json-editor-path");if($this.attr("type")==="checkbox"){data[path]=$this.prop("checked")}else{data[path]=$this.val()}var converter=self.converters[type];if(typeof converter==="function"){data[path]=converter(data[path])}});return handleArrays(unflattenObject(data))};settings.schema=mergeRecursive(sch(settings.data),settings.schema);schemaCoreFields(settings.schema);if(settings.autoInit===true){self.initUi()}return self};JsonEdit.converters={"boolean":function(value){return value===true||value==="true"||value==="on"||typeof value=="number"&&value>0||value==="1"},string:function(value){return value.toString()},number:function(value){return Number(value)},regexp:function(value){return new RegExp(value)},date:function(value){return new Date(value)}};JsonEdit.groups={number:$("<div>").append($("<label>")),"boolean":$("<div>").append($("<label>")),string:$("<div>").append($("<label>")),regexp:$("<div>").append($("<label>")),array:$("<div>").append($("<label>")),object:$("<div>").append($("<label>")),date:$("<div>").append($("<label>"))};JsonEdit.labels={number:$("<span>"),"boolean":$("<span>"),string:$("<span>"),regexp:$("<span>"),date:$("<span>"),object:$("<h3>"),array:$("<h3>")};JsonEdit.inputs={number:$("<input>",{type:"number"}),"boolean":$("<input>",{type:"checkbox"}),string:$("<input>",{type:"text"}),regexp:$("<input>",{type:"text"}),date:$("<input>",{type:"date"}),array:$("<input>",{type:"text"})}})($);