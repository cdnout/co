#!/usr/bin/env node
function cli(m){"use strict";var e={help:{format:"",description:"Displays this information."},format:{format:"<format>",description:"Indicate which format to use for output."},"list-rules":{format:"",description:"Outputs all of the rules available."},quiet:{format:"",description:"Only output when errors are present."},errors:{format:"<rule[,rule]+>",description:"Indicate which rules to include as errors."},warnings:{format:"<rule[,rule]+>",description:"Indicate which rules to include as warnings."},ignore:{format:"<rule[,rule]+>",description:"Indicate which rules to ignore completely."},"exclude-list":{format:"<file|dir[,file|dir]+>",description:"Indicate which files/directories to exclude from being linted."},config:{format:"<file>",description:"Reads csslint options from specified file."},version:{format:"",description:"Outputs the current version number."}};function r(t,r){var i,e,n,o,s,a,c,l,f=m.readFile(t),u=(a=r.ignore,c=null,a&&(c=CSSLint.getRuleset(),a.split(",").forEach(function(t){c[t]=0})),c),p=CSSLint.verify(f,(n=u,o=(e=r).rules||e.warnings,s=e.errors,o&&(n=n||{},o.split(",").forEach(function(t){n[t]=1})),s&&(n=n||{},s.split(",").forEach(function(t){n[t]=2})),n)),h=CSSLint.getFormatter(r.format||"text"),d=p.messages||[],g=0;return f?(r.fullPath=m.getFullPath(t),(i=h.formatResults(p,t,r))&&m.print(i),0<d.length&&(l="error",0<d.filter(function(t){return t.type===l}).length)&&(g=1)):(h.readError?m.print(h.readError(t,"Could not read file data. Is the file empty?")):m.print("csslint: Could not read file data in "+t+". Is the file empty?"),g=1),g}function i(){var t="",r="";for(var i in m.print(["\nUsage: csslint-rhino.js [options]* [file|dir]*"," ","Global Options"].join("\n")),e)e.hasOwnProperty(i)&&(t+="  --"+i,""!==e[i].format?t+=r="="+e[i].format:r="",t+=new Array(40-(i.length+r.length)).join(" "),t+=e[i].description+"\n");m.print(t)}function a(t,r){for(var i,e,n=t.shift(),o=r||{},s=[];n;)0===n.indexOf("--")?-1<(i=n.substring(2)).indexOf("=")?o[(e=i.split("="))[0]]=e[1]:o[i]=!0:m.isDirectory(n)?s=s.concat(m.getFiles(n)):s.push(n),n=t.shift();return o.files=s,o}var t,n,o,s,c,l,f,u,p,h,d,g,y,S,v=m.args,F=v.length,w=a(v);!w.help&&0!==F||(i(),m.quit(0)),w.version&&(m.print("v"+CSSLint.version),m.quit(0)),w["list-rules"]&&(m.print(""),CSSLint.getRules().forEach(function(t){m.print(t.id+"\n  "+t.desc+"\n")}),m.quit(0)),n=function(t){var r,i,e,n,o=(n=t||".csslintrc",m.readFile(m.getFullPath(n))),s={};if(o){if("{"===o.charAt(0))try{for(i in r=JSON.parse(o),o="",r)r.hasOwnProperty(i)&&(e=r[i],Array.isArray(e)&&(e=e.join(",")),o+="--"+i+"="+e)}catch(t){}s=a(o.replace(/\s+/g,"").split(/(?=--)/))}return s}(w.config),CSSLint.Util.mix(n,w),function(t){for(var r in t)e.hasOwnProperty(r)||"files"===r||(m.print(r+" is not a valid option. Exiting..."),i(),m.quit(0))}(t=n),m.quit((o=t.files,g=0,y=(s=t).format||"text",f=o,p=s["exclude-list"],h=[],d=f.map(m.getFullPath),p&&(p.split(",").forEach(function(t){m.isDirectory(t)?h=h.concat(m.getFiles(t)):h.push(t)}),h.forEach(function(t){u=m.getFullPath(t),-1<d.indexOf(u)&&d.splice(d.indexOf(u),1)})),(S=d).length?CSSLint.hasFormat(y)?((l=(c=CSSLint.getFormatter(y)).startFormat())&&m.print(l),S.forEach(function(t){0===g?g=r(t,s):r(t,s)}),(l=c.endFormat())&&m.print(l)):(m.print("csslint: Unknown format '"+y+"'. Cannot proceed."),g=1):(m.print("csslint: No files specified."),g=1),g))}var fs=require("fs"),path=require("path"),CSSLint=require("./csslint-node").CSSLint;cli({args:process.argv.slice(2),print:function(t){fs.writeSync(1,t+"\n")},quit:function(t){process.exit(t||0)},isDirectory:function(t){try{return fs.statSync(t).isDirectory()}catch(t){return!1}},getFiles:function(t){var o=[];try{fs.statSync(t)}catch(t){return[]}return function e(t,n){n.push(t),fs.readdirSync(n.join("/")).forEach(function(t){var r=n.concat([t]).join("/"),i=fs.statSync(r);"."!==t[0]&&(i.isFile()&&/\.css$/.test(t)?o.push(r):i.isDirectory()&&e(t,n))}),n.pop()}(t,[]),o},getWorkingDirectory:function(){return process.cwd()},getFullPath:function(t){return path.resolve(process.cwd(),t)},readFile:function(t){try{return fs.readFileSync(t,"utf-8")}catch(t){return""}}});