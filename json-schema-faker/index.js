/*
 json-schema-faker library v0.4.7
 http://json-schema-faker.js.org
 @preserve

 Copyright (c) 2014-2016 Alvaro Cabrera & Tomasz Ducin
 Released under the MIT license

 Date: 2018-02-08 05:26:09.380Z
 *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
**************************************************************************** @description Recursive object extending
 @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>
 @license MIT

 The MIT License (MIT)

 Copyright (c) 2013-2015 Viacheslav Lotsmanov

 Permission is hereby granted, free of charge, to any person obtaining a copy of
 this software and associated documentation files (the "Software"), to deal in
 the Software without restriction, including without limitation the rights to
 use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 the Software, and to permit persons to whom the Software is furnished to do so,
 subject to the following conditions:

 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?module.exports=factory():typeof define==="function"&&define.amd?define(factory):global.JSONSchemaFaker=factory()})(this,function(){function createCommonjsModule(fn,module){return module={exports:{}},fn(module,module.exports),module.exports}var types={ROOT:0,GROUP:1,POSITION:2,SET:3,RANGE:4,REPETITION:5,REFERENCE:6,CHAR:7};var INTS=function(){return[{type:types.RANGE,from:48,to:57}]};var WORDS=function(){return[{type:types.CHAR,
value:95},{type:types.RANGE,from:97,to:122},{type:types.RANGE,from:65,to:90}].concat(INTS())};var WHITESPACE=function(){return[{type:types.CHAR,value:9},{type:types.CHAR,value:10},{type:types.CHAR,value:11},{type:types.CHAR,value:12},{type:types.CHAR,value:13},{type:types.CHAR,value:32},{type:types.CHAR,value:160},{type:types.CHAR,value:5760},{type:types.CHAR,value:6158},{type:types.CHAR,value:8192},{type:types.CHAR,value:8193},{type:types.CHAR,value:8194},{type:types.CHAR,value:8195},{type:types.CHAR,
value:8196},{type:types.CHAR,value:8197},{type:types.CHAR,value:8198},{type:types.CHAR,value:8199},{type:types.CHAR,value:8200},{type:types.CHAR,value:8201},{type:types.CHAR,value:8202},{type:types.CHAR,value:8232},{type:types.CHAR,value:8233},{type:types.CHAR,value:8239},{type:types.CHAR,value:8287},{type:types.CHAR,value:12288},{type:types.CHAR,value:65279}]};var NOTANYCHAR=function(){return[{type:types.CHAR,value:10},{type:types.CHAR,value:13},{type:types.CHAR,value:8232},{type:types.CHAR,value:8233}]};
var words=function(){return{type:types.SET,set:WORDS(),not:false}};var notWords=function(){return{type:types.SET,set:WORDS(),not:true}};var ints=function(){return{type:types.SET,set:INTS(),not:false}};var notInts=function(){return{type:types.SET,set:INTS(),not:true}};var whitespace=function(){return{type:types.SET,set:WHITESPACE(),not:false}};var notWhitespace=function(){return{type:types.SET,set:WHITESPACE(),not:true}};var anyChar=function(){return{type:types.SET,set:NOTANYCHAR(),not:true}};var sets=
{words:words,notWords:notWords,ints:ints,notInts:notInts,whitespace:whitespace,notWhitespace:notWhitespace,anyChar:anyChar};var util=createCommonjsModule(function(module,exports){var CTRL="@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^ ?";var SLSH={0:0,"t":9,"n":10,"v":11,"f":12,"r":13};exports.strToChars=function(str){var chars_regex=/(\[\\b\])|(\\)?\\(?:u([A-F0-9]{4})|x([A-F0-9]{2})|(0?[0-7]{2})|c([@A-Z\[\\\]\^?])|([0tnvfr]))/g;str=str.replace(chars_regex,function(s,b,lbs,a16,b16,c8,dctrl,eslsh){if(lbs)return s;
var code=b?8:a16?parseInt(a16,16):b16?parseInt(b16,16):c8?parseInt(c8,8):dctrl?CTRL.indexOf(dctrl):SLSH[eslsh];var c=String.fromCharCode(code);if(/[\[\]{}\^$.|?*+()]/.test(c))c="\\"+c;return c});return str};exports.tokenizeClass=function(str,regexpStr){var tokens=[];var regexp=/\\(?:(w)|(d)|(s)|(W)|(D)|(S))|((?:(?:\\)(.)|([^\]\\]))-(?:\\)?([^\]]))|(\])|(?:\\)?(.)/g;var rs,c;while((rs=regexp.exec(str))!=null)if(rs[1])tokens.push(sets.words());else if(rs[2])tokens.push(sets.ints());else if(rs[3])tokens.push(sets.whitespace());
else if(rs[4])tokens.push(sets.notWords());else if(rs[5])tokens.push(sets.notInts());else if(rs[6])tokens.push(sets.notWhitespace());else if(rs[7])tokens.push({type:types.RANGE,from:(rs[8]||rs[9]).charCodeAt(0),to:rs[10].charCodeAt(0)});else if(c=rs[12])tokens.push({type:types.CHAR,value:c.charCodeAt(0)});else return[tokens,regexp.lastIndex];exports.error(regexpStr,"Unterminated character class")};exports.error=function(regexp,msg){throw new SyntaxError("Invalid regular expression: /"+regexp+"/: "+
msg);}});var util_1=util.strToChars;var util_2=util.tokenizeClass;var util_3=util.error;var wordBoundary=function(){return{type:types.POSITION,value:"b"}};var nonWordBoundary=function(){return{type:types.POSITION,value:"B"}};var begin=function(){return{type:types.POSITION,value:"^"}};var end=function(){return{type:types.POSITION,value:"$"}};var positions={wordBoundary:wordBoundary,nonWordBoundary:nonWordBoundary,begin:begin,end:end};var lib$2=function(regexpStr){var i=0,l,c,start={type:types.ROOT,
stack:[]},lastGroup=start,last=start.stack,groupStack=[];var repeatErr=function(i){util.error(regexpStr,"Nothing to repeat at column "+(i-1))};var str=util.strToChars(regexpStr);l=str.length;while(i<l){c=str[i++];switch(c){case "\\":c=str[i++];switch(c){case "b":last.push(positions.wordBoundary());break;case "B":last.push(positions.nonWordBoundary());break;case "w":last.push(sets.words());break;case "W":last.push(sets.notWords());break;case "d":last.push(sets.ints());break;case "D":last.push(sets.notInts());
break;case "s":last.push(sets.whitespace());break;case "S":last.push(sets.notWhitespace());break;default:if(/\d/.test(c))last.push({type:types.REFERENCE,value:parseInt(c,10)});else last.push({type:types.CHAR,value:c.charCodeAt(0)})}break;case "^":last.push(positions.begin());break;case "$":last.push(positions.end());break;case "[":var not;if(str[i]==="^"){not=true;i++}else not=false;var classTokens=util.tokenizeClass(str.slice(i),regexpStr);i+=classTokens[1];last.push({type:types.SET,set:classTokens[0],
not:not});break;case ".":last.push(sets.anyChar());break;case "(":var group={type:types.GROUP,stack:[],remember:true};c=str[i];if(c==="?"){c=str[i+1];i+=2;if(c==="\x3d")group.followedBy=true;else if(c==="!")group.notFollowedBy=true;else if(c!==":")util.error(regexpStr,"Invalid group, character '"+c+"' after '?' at column "+(i-1));group.remember=false}last.push(group);groupStack.push(lastGroup);lastGroup=group;last=group.stack;break;case ")":if(groupStack.length===0)util.error(regexpStr,"Unmatched ) at column "+
(i-1));lastGroup=groupStack.pop();last=lastGroup.options?lastGroup.options[lastGroup.options.length-1]:lastGroup.stack;break;case "|":if(!lastGroup.options){lastGroup.options=[lastGroup.stack];delete lastGroup.stack}var stack=[];lastGroup.options.push(stack);last=stack;break;case "{":var rs=/^(\d+)(,(\d+)?)?\}/.exec(str.slice(i)),min,max;if(rs!==null){if(last.length===0)repeatErr(i);min=parseInt(rs[1],10);max=rs[2]?rs[3]?parseInt(rs[3],10):Infinity:min;i+=rs[0].length;last.push({type:types.REPETITION,
min:min,max:max,value:last.pop()})}else last.push({type:types.CHAR,value:123});break;case "?":if(last.length===0)repeatErr(i);last.push({type:types.REPETITION,min:0,max:1,value:last.pop()});break;case "+":if(last.length===0)repeatErr(i);last.push({type:types.REPETITION,min:1,max:Infinity,value:last.pop()});break;case "*":if(last.length===0)repeatErr(i);last.push({type:types.REPETITION,min:0,max:Infinity,value:last.pop()});break;default:last.push({type:types.CHAR,value:c.charCodeAt(0)})}}if(groupStack.length!==
0)util.error(regexpStr,"Unterminated group");return start};var types_1=types;lib$2.types=types_1;function _SubRange(low,high){this.low=low;this.high=high;this.length=1+high-low}_SubRange.prototype.overlaps=function(range){return!(this.high<range.low||this.low>range.high)};_SubRange.prototype.touches=function(range){return!(this.high+1<range.low||this.low-1>range.high)};_SubRange.prototype.add=function(range){return this.touches(range)&&new _SubRange(Math.min(this.low,range.low),Math.max(this.high,
range.high))};_SubRange.prototype.subtract=function(range){if(!this.overlaps(range))return false;if(range.low<=this.low&&range.high>=this.high)return[];if(range.low>this.low&&range.high<this.high)return[new _SubRange(this.low,range.low-1),new _SubRange(range.high+1,this.high)];if(range.low<=this.low)return[new _SubRange(range.high+1,this.high)];return[new _SubRange(this.low,range.low-1)]};_SubRange.prototype.toString=function(){if(this.low==this.high)return this.low.toString();return this.low+"-"+
this.high};_SubRange.prototype.clone=function(){return new _SubRange(this.low,this.high)};function DiscontinuousRange(a,b){if(this instanceof DiscontinuousRange){this.ranges=[];this.length=0;if(a!==undefined)this.add(a,b)}else return new DiscontinuousRange(a,b)}function _update_length(self){self.length=self.ranges.reduce(function(previous,range){return previous+range.length},0)}DiscontinuousRange.prototype.add=function(a,b){var self=this;function _add(subrange){var new_ranges=[];var i=0;while(i<self.ranges.length&&
!subrange.touches(self.ranges[i])){new_ranges.push(self.ranges[i].clone());i++}while(i<self.ranges.length&&subrange.touches(self.ranges[i])){subrange=subrange.add(self.ranges[i]);i++}new_ranges.push(subrange);while(i<self.ranges.length){new_ranges.push(self.ranges[i].clone());i++}self.ranges=new_ranges;_update_length(self)}if(a instanceof DiscontinuousRange)a.ranges.forEach(_add);else if(a instanceof _SubRange)_add(a);else{if(b===undefined)b=a;_add(new _SubRange(a,b))}return this};DiscontinuousRange.prototype.subtract=
function(a,b){var self=this;function _subtract(subrange){var new_ranges=[];var i=0;while(i<self.ranges.length&&!subrange.overlaps(self.ranges[i])){new_ranges.push(self.ranges[i].clone());i++}while(i<self.ranges.length&&subrange.overlaps(self.ranges[i])){new_ranges=new_ranges.concat(self.ranges[i].subtract(subrange));i++}while(i<self.ranges.length){new_ranges.push(self.ranges[i].clone());i++}self.ranges=new_ranges;_update_length(self)}if(a instanceof DiscontinuousRange)a.ranges.forEach(_subtract);
else if(a instanceof _SubRange)_subtract(a);else{if(b===undefined)b=a;_subtract(new _SubRange(a,b))}return this};DiscontinuousRange.prototype.index=function(index){var i=0;while(i<this.ranges.length&&this.ranges[i].length<=index){index-=this.ranges[i].length;i++}if(i>=this.ranges.length)return null;return this.ranges[i].low+index};DiscontinuousRange.prototype.toString=function(){return"[ "+this.ranges.join(", ")+" ]"};DiscontinuousRange.prototype.clone=function(){return new DiscontinuousRange(this)};
var discontinuousRange=DiscontinuousRange;var randexp$1$1=createCommonjsModule(function(module){var types=lib$2.types;function toOtherCase(code){return code+(97<=code&&code<=122?-32:65<=code&&code<=90?32:0)}function randBool(){return!this.randInt(0,1)}function randSelect(arr){if(arr instanceof discontinuousRange)return arr.index(this.randInt(0,arr.length-1));return arr[this.randInt(0,arr.length-1)]}function expand(token){if(token.type===lib$2.types.CHAR)return new discontinuousRange(token.value);
else if(token.type===lib$2.types.RANGE)return new discontinuousRange(token.from,token.to);else{var drange=new discontinuousRange;for(var i=0;i<token.set.length;i++){var subrange=expand.call(this,token.set[i]);drange.add(subrange);if(this.ignoreCase)for(var j=0;j<subrange.length;j++){var code=subrange.index(j);var otherCaseCode=toOtherCase(code);if(code!==otherCaseCode)drange.add(otherCaseCode)}}if(token.not)return this.defaultRange.clone().subtract(drange);else return drange}}function checkCustom(randexp,
regexp){if(typeof regexp.max==="number")randexp.max=regexp.max;if(regexp.defaultRange instanceof discontinuousRange)randexp.defaultRange=regexp.defaultRange;if(typeof regexp.randInt==="function")randexp.randInt=regexp.randInt}var RandExp=module.exports=function(regexp,m){this.defaultRange=this.defaultRange.clone();if(regexp instanceof RegExp){this.ignoreCase=regexp.ignoreCase;this.multiline=regexp.multiline;checkCustom(this,regexp);regexp=regexp.source}else if(typeof regexp==="string"){this.ignoreCase=
m&&m.indexOf("i")!==-1;this.multiline=m&&m.indexOf("m")!==-1}else throw new Error("Expected a regexp or string");this.tokens=lib$2(regexp)};RandExp.prototype.max=100;RandExp.prototype.gen=function(){return gen.call(this,this.tokens,[])};RandExp.randexp=function(regexp,m){var randexp;if(regexp._randexp===undefined){randexp=new RandExp(regexp,m);regexp._randexp=randexp}else randexp=regexp._randexp;checkCustom(randexp,regexp);return randexp.gen()};RandExp.sugar=function(){RegExp.prototype.gen=function(){return RandExp.randexp(this)}};
RandExp.prototype.defaultRange=new discontinuousRange(32,126);RandExp.prototype.randInt=function(a,b){return a+Math.floor(Math.random()*(1+b-a))};function gen(token,groups){var stack,str,n,i,l;switch(token.type){case types.ROOT:case types.GROUP:if(token.followedBy||token.notFollowedBy)return"";if(token.remember&&token.groupNumber===undefined)token.groupNumber=groups.push(null)-1;stack=token.options?randSelect.call(this,token.options):token.stack;str="";for(i=0,l=stack.length;i<l;i++)str+=gen.call(this,
stack[i],groups);if(token.remember)groups[token.groupNumber]=str;return str;case types.POSITION:return"";case types.SET:var expandedSet=expand.call(this,token);if(!expandedSet.length)return"";return String.fromCharCode(randSelect.call(this,expandedSet));case types.REPETITION:n=this.randInt(token.min,token.max===Infinity?token.min+this.max:token.max);str="";for(i=0;i<n;i++)str+=gen.call(this,token.value,groups);return str;case types.REFERENCE:return groups[token.value-1]||"";case types.CHAR:var code=
this.ignoreCase&&randBool.call(this)?toOtherCase(token.value):token.value;return String.fromCharCode(code)}}});var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p]};function __extends(d,b){extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}var __assign=Object.assign||function __assign(t){for(var s,i=1,n=arguments.length;i<
n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};function __rest(s,e){var t={};for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++)if(e.indexOf(p[i])<0)t[p[i]]=s[p[i]];return t}function __decorate(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,
key):desc,d;if(typeof Reflect==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;return c>3&&r&&Object.defineProperty(target,key,r),r}function __param(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}}function __metadata(metadataKey,metadataValue){if(typeof Reflect==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(metadataKey,
metadataValue)}function __awaiter(thisArg,_arguments,P,generator){return new (P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):(new P(function(resolve){resolve(result.value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})}function __generator(thisArg,
body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),"throw":verb(1),"return":verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(_)try{if(f=1,y&&(t=y[op[0]&2?"return":op[0]?"throw":"next"])&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[0,t.value];switch(op[0]){case 0:case 1:t=
op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=
0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}}function __exportStar(m,exports){for(var p in m)if(!exports.hasOwnProperty(p))exports[p]=m[p]}function __values(o){var m=typeof Symbol==="function"&&o[Symbol.iterator],i=0;if(m)return m.call(o);return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}}}function __read(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e=
{error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error;}}return ar}function __spread(){for(var ar=[],i=0;i<arguments.length;i++)ar=ar.concat(__read(arguments[i]));return ar}function __await(v){return this instanceof __await?(this.v=v,this):new __await(v)}function __asyncGenerator(thisArg,_arguments,generator){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var g=generator.apply(thisArg,_arguments||[]),i,q=[];return i={},verb("next"),
verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i;function verb(n){if(g[n])i[n]=function(v){return new Promise(function(a,b){q.push([n,v,a,b])>1||resume(n,v)})}}function resume(n,v){try{step(g[n](v))}catch(e){settle(q[0][3],e)}}function step(r){r.value instanceof __await?Promise.resolve(r.value.v).then(fulfill,reject):settle(q[0][2],r)}function fulfill(value){resume("next",value)}function reject(value){resume("throw",value)}function settle(f,v){if(f(v),q.shift(),q.length)resume(q[0][0],
q[0][1])}}function __asyncDelegator(o){var i,p;return i={},verb("next"),verb("throw",function(e){throw e;}),verb("return"),i[Symbol.iterator]=function(){return this},i;function verb(n,f){if(o[n])i[n]=function(v){return(p=!p)?{value:__await(o[n](v)),done:n==="return"}:f?f(v):v}}}function __asyncValues(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var m=o[Symbol.asyncIterator];return m?m.call(o):typeof __values==="function"?__values(o):o[Symbol.iterator]()}
function __makeTemplateObject(cooked,raw){if(Object.defineProperty)Object.defineProperty(cooked,"raw",{value:raw});else cooked.raw=raw;return cooked}var tslib_es6=Object.freeze({__extends:__extends,__assign:__assign,__rest:__rest,__decorate:__decorate,__param:__param,__metadata:__metadata,__awaiter:__awaiter,__generator:__generator,__exportStar:__exportStar,__values:__values,__read:__read,__spread:__spread,__await:__await,__asyncGenerator:__asyncGenerator,__asyncDelegator:__asyncDelegator,__asyncValues:__asyncValues,
__makeTemplateObject:__makeTemplateObject});function URLUtils(url,baseURL){url=url.replace(/^\.\//,"");var m=String(url).replace(/^\s+|\s+$/g,"").match(/^([^:\/?#]+:)?(?:\/\/(?:([^:@]*)(?::([^:@]*))?@)?(([^:\/?#]*)(?::(\d*))?))?([^?#]*)(\?[^#]*)?(#[\s\S]*)?/);if(!m)throw new RangeError;var href=m[0]||"";var protocol=m[1]||"";var username=m[2]||"";var password=m[3]||"";var host=m[4]||"";var hostname=m[5]||"";var port=m[6]||"";var pathname=m[7]||"";var search=m[8]||"";var hash=m[9]||"";if(baseURL!==
undefined){var base=new URLUtils(baseURL);var flag=protocol===""&&host===""&&username==="";if(flag&&pathname===""&&search==="")search=base.search;if(flag&&pathname.charAt(0)!=="/")pathname=pathname!==""?base.pathname.slice(0,base.pathname.lastIndexOf("/")+1)+pathname:base.pathname;var output=[];pathname.replace(/\/?[^\/]+/g,function(p){if(p==="/..")output.pop();else output.push(p)});pathname=output.join("")||"/";if(flag){port=base.port;hostname=base.hostname;host=base.host;password=base.password;
username=base.username}if(protocol==="")protocol=base.protocol;href=protocol+(host!==""?"//":"")+(username!==""?username+(password!==""?":"+password:"")+"@":"")+host+pathname+search+hash}this.href=href;this.origin=protocol+(host!==""?"//"+host:"");this.protocol=protocol;this.username=username;this.password=password;this.host=host;this.hostname=hostname;this.port=port;this.pathname=pathname;this.search=search;this.hash=hash}function isURL(path){if(typeof path==="string"&&/^\w+:\/\//.test(path))return true}
function parseURI(href,base){return new URLUtils(href,base)}function resolveURL(base,href){base=base||"http://json-schema.org/schema#";href=parseURI(href,base);base=parseURI(base);if(base.hash&&!href.hash)return href.href+base.hash;return href.href}function getDocumentURI(uri){return typeof uri==="string"&&uri.split("#")[0]}function isKeyword(prop){return prop==="enum"||prop==="default"||prop==="required"}var helpers={isURL:isURL,parseURI:parseURI,isKeyword:isKeyword,resolveURL:resolveURL,getDocumentURI:getDocumentURI};
var findReference=createCommonjsModule(function(module){function get(obj,path){var hash=path.split("#")[1];var parts=hash.split("/").slice(1);while(parts.length){var key=decodeURIComponent(parts.shift()).replace(/~1/g,"/").replace(/~0/g,"~");if(typeof obj[key]==="undefined")throw new Error("JSON pointer not found: "+path);obj=obj[key]}return obj}var find=module.exports=function(id,refs,filter){var target=refs[id]||refs[id.split("#")[1]]||refs[helpers.getDocumentURI(id)];try{if(target)target=id.indexOf("#/")>
-1?get(target,id):target;else for(var key in refs)if(helpers.resolveURL(refs[key].id,id)===refs[key].id){target=refs[key];break}}catch(e){if(typeof filter==="function")target=filter(id,refs);else throw e;}if(!target)throw new Error("Reference not found: "+id);while(target.$ref)target=find(target.$ref,refs);return target}});var deepExtend_1=createCommonjsModule(function(module){function isSpecificValue(val){return val instanceof Buffer||val instanceof Date||val instanceof RegExp?true:false}function cloneSpecificValue(val){if(val instanceof
Buffer){var x=new Buffer(val.length);val.copy(x);return x}else if(val instanceof Date)return new Date(val.getTime());else if(val instanceof RegExp)return new RegExp(val);else throw new Error("Unexpected situation");}function deepCloneArray(arr){var clone=[];arr.forEach(function(item,index){if(typeof item==="object"&&item!==null)if(Array.isArray(item))clone[index]=deepCloneArray(item);else if(isSpecificValue(item))clone[index]=cloneSpecificValue(item);else clone[index]=deepExtend({},item);else clone[index]=
item});return clone}var deepExtend=module.exports=function(){if(arguments.length<1||typeof arguments[0]!=="object")return false;if(arguments.length<2)return arguments[0];var target=arguments[0];var args=Array.prototype.slice.call(arguments,1);var val,src;args.forEach(function(obj){if(typeof obj!=="object"||obj===null||Array.isArray(obj))return;Object.keys(obj).forEach(function(key){src=target[key];val=obj[key];if(val===target)return;else if(typeof val!=="object"||val===null){target[key]=val;return}else if(Array.isArray(val)){target[key]=
deepCloneArray(val);return}else if(isSpecificValue(val)){target[key]=cloneSpecificValue(val);return}else if(typeof src!=="object"||src===null||Array.isArray(src)){target[key]=deepExtend({},val);return}else{target[key]=deepExtend(src,val);return}})});return target}});function copy(_,obj,refs,parent,resolve,callback){var target=Array.isArray(obj)?[]:{};if(typeof obj.$ref==="string"){var id=obj.$ref;var base=helpers.getDocumentURI(id);var local=id.indexOf("#/")>-1;if(local||resolve&&base!==parent){var fixed=
findReference(id,refs,callback);deepExtend_1(obj,fixed);delete obj.$ref;delete obj.id}if(_[id])return obj;_[id]=1}for(var prop in obj)if(typeof obj[prop]==="object"&&obj[prop]!==null&&!helpers.isKeyword(prop))target[prop]=copy(_,obj[prop],refs,parent,resolve,callback);else target[prop]=obj[prop];return target}var resolveSchema=function(obj,refs,resolve,callback){var fixedId=helpers.resolveURL(obj.$schema,obj.id),parent=helpers.getDocumentURI(fixedId);return copy({},obj,refs,parent,resolve,callback)};
var cloneObj=createCommonjsModule(function(module){var clone=module.exports=function(obj,seen){seen=seen||[];if(seen.indexOf(obj)>-1)throw new Error("unable dereference circular structures");if(!obj||typeof obj!=="object")return obj;seen=seen.concat([obj]);var target=Array.isArray(obj)?[]:{};function copy(key,value){target[key]=clone(value,seen)}if(Array.isArray(target))obj.forEach(function(value,key){copy(key,value)});else if(Object.prototype.toString.call(obj)==="[object Object]")Object.keys(obj).forEach(function(key){copy(key,
obj[key])});return target}});var SCHEMA_URI=["http://json-schema.org/schema#","http://json-schema.org/draft-04/schema#"];function expand(obj,parent,callback){if(obj){var id=typeof obj.id==="string"?obj.id:"#";if(!helpers.isURL(id))id=helpers.resolveURL(parent===id?null:parent,id);if(typeof obj.$ref==="string"&&!helpers.isURL(obj.$ref))obj.$ref=helpers.resolveURL(id,obj.$ref);if(typeof obj.id==="string")obj.id=parent=id}for(var key in obj){var value=obj[key];if(typeof value==="object"&&value!==null&&
!helpers.isKeyword(key))expand(value,parent,callback)}if(typeof callback==="function")callback(obj)}var normalizeSchema=function(fakeroot,schema,push){if(typeof fakeroot==="object"){push=schema;schema=fakeroot;fakeroot=null}var base=fakeroot||"",copy=cloneObj(schema);if(copy.$schema&&SCHEMA_URI.indexOf(copy.$schema)===-1)throw new Error("Unsupported schema version (v4 only)");base=helpers.resolveURL(copy.$schema||SCHEMA_URI[0],base);expand(copy,helpers.resolveURL(copy.id||"#",base),push);copy.id=
copy.id||base;return copy};var lib$4=createCommonjsModule(function(module){helpers.findByRef=findReference;helpers.resolveSchema=resolveSchema;helpers.normalizeSchema=normalizeSchema;var instance=module.exports=function(f){function $ref(fakeroot,schema,refs,ex){if(typeof fakeroot==="object"){ex=refs;refs=schema;schema=fakeroot;fakeroot=undefined}if(typeof schema!=="object")throw new Error("schema must be an object");if(typeof refs==="object"&&refs!==null){var aux=refs;refs=[];for(var k in aux){aux[k].id=
aux[k].id||k;refs.push(aux[k])}}if(typeof refs!=="undefined"&&!Array.isArray(refs)){ex=!!refs;refs=[]}function push(ref){if(typeof ref.id==="string"){var id=helpers.resolveURL(fakeroot,ref.id).replace(/\/#?$/,"");if(id.indexOf("#")>-1){var parts=id.split("#");if(parts[1].charAt()==="/")id=parts[0];else id=parts[1]||parts[0]}if(!$ref.refs[id])$ref.refs[id]=ref}}(refs||[]).concat([schema]).forEach(function(ref){schema=helpers.normalizeSchema(fakeroot,ref,push);push(schema)});return helpers.resolveSchema(schema,
$ref.refs,ex,f)}$ref.refs={};$ref.util=helpers;return $ref};instance.util=helpers});function _interopDefault$1(ex){return ex&&typeof ex==="object"&&"default"in ex?ex["default"]:ex}var RandExp=_interopDefault$1(randexp$1$1);var deref=_interopDefault$1(lib$4);var Registry=function(){function Registry(){this.data={}}Registry.prototype.register=function(name,callback){this.data[name]=callback};Registry.prototype.registerMany=function(formats){for(var name in formats)this.data[name]=formats[name]};Registry.prototype.get=
function(name){var format=this.data[name];if(typeof format==="undefined")throw new Error("unknown registry key "+JSON.stringify(name));return format};Registry.prototype.list=function(){return this.data};return Registry}();var OptionRegistry=function(_super){tslib_es6.__extends(OptionRegistry,_super);function OptionRegistry(){var _this=_super.call(this)||this;_this.data["failOnInvalidTypes"]=true;_this.data["defaultInvalidTypeProduct"]=null;_this.data["useDefaultValue"]=false;_this.data["requiredOnly"]=
false;_this.data["maxItems"]=null;_this.data["maxLength"]=null;_this.data["defaultMinItems"]=0;_this.data["defaultRandExpMax"]=10;_this.data["alwaysFakeOptionals"]=false;_this.data["random"]=Math.random;return _this}return OptionRegistry}(Registry);var registry=new OptionRegistry;function optionAPI(nameOrOptionMap){if(typeof nameOrOptionMap==="string")return registry.get(nameOrOptionMap);else return registry.registerMany(nameOrOptionMap)}RandExp.prototype.max=10;RandExp.prototype.randInt=function(a,
b){return a+Math.floor(optionAPI("random")()*(1+b-a))};var Container=function(){function Container(){this.registry={faker:null,chance:null,casual:null,randexp:RandExp}}Container.prototype.extend=function(name,callback){if(typeof this.registry[name]==="undefined")throw new ReferenceError('"'+name+'" dependency is not allowed.');this.registry[name]=callback(this.registry[name])};Container.prototype.get=function(name){if(typeof this.registry[name]==="undefined")throw new ReferenceError('"'+name+"\" dependency doesn't exist.");
else if(name==="randexp"){var RandExp_=this.registry["randexp"];return function(pattern){var re=new RandExp_(pattern);re.max=optionAPI("defaultRandExpMax");return re.gen()}}return this.registry[name]};Container.prototype.getAll=function(){return{faker:this.get("faker"),chance:this.get("chance"),randexp:this.get("randexp"),casual:this.get("casual")}};return Container}();var container=new Container;var registry$1=new Registry;function formatAPI(nameOrFormatMap,callback){if(typeof nameOrFormatMap===
"undefined")return registry$1.list();else if(typeof nameOrFormatMap==="string")if(typeof callback==="function")registry$1.register(nameOrFormatMap,callback);else return registry$1.get(nameOrFormatMap);else registry$1.registerMany(nameOrFormatMap)}function pick(collection){return collection[Math.floor(optionAPI("random")()*collection.length)]}function shuffle(collection){var tmp,key,copy=collection.slice(),length=collection.length;for(;length>0;){key=Math.floor(optionAPI("random")()*length);tmp=copy[--length];
copy[length]=copy[key];copy[key]=tmp}return copy}var MIN_NUMBER=-100;var MAX_NUMBER=100;function getRandomInt(min,max){return Math.floor(optionAPI("random")()*(max-min+1))+min}function number(min,max,defMin,defMax,hasPrecision){if(hasPrecision===void 0)hasPrecision=false;defMin=typeof defMin==="undefined"?MIN_NUMBER:defMin;defMax=typeof defMax==="undefined"?MAX_NUMBER:defMax;min=typeof min==="undefined"?defMin:min;max=typeof max==="undefined"?defMax:max;if(max<min)max+=min;var result=getRandomInt(min,
max);if(!hasPrecision)return parseInt(result+"",10);return result}var random={pick:pick,shuffle:shuffle,number:number};var ParseError=function(_super){tslib_es6.__extends(ParseError,_super);function ParseError(message,path){var _this=_super.call(this)||this;_this.path=path;Error.captureStackTrace(_this,_this.constructor);_this.name="ParseError";_this.message=message;_this.path=path;return _this}return ParseError}(Error);var inferredProperties={array:["additionalItems","items","maxItems","minItems",
"uniqueItems"],integer:["exclusiveMaximum","exclusiveMinimum","maximum","minimum","multipleOf"],object:["additionalProperties","dependencies","maxProperties","minProperties","patternProperties","properties","required"],string:["maxLength","minLength","pattern"]};inferredProperties.number=inferredProperties.integer;var subschemaProperties=["additionalItems","items","additionalProperties","dependencies","patternProperties","properties"];function matchesType(obj,lastElementInPath,inferredTypeProperties){return Object.keys(obj).filter(function(prop){var isSubschema=
subschemaProperties.indexOf(lastElementInPath)>-1,inferredPropertyFound=inferredTypeProperties.indexOf(prop)>-1;if(inferredPropertyFound&&!isSubschema)return true}).length>0}function inferType(obj,schemaPath){for(var typeName in inferredProperties){var lastElementInPath=schemaPath[schemaPath.length-1];if(matchesType(obj,lastElementInPath,inferredProperties[typeName]))return typeName}}function booleanGenerator(){return optionAPI("random")()>.5}var booleanType=booleanGenerator;function nullGenerator(){return null}
var nullType=nullGenerator;function getSubAttribute(obj,dotSeparatedKey){var keyElements=dotSeparatedKey.split(".");while(keyElements.length){var prop=keyElements.shift();if(!obj[prop])break;obj=obj[prop]}return obj}function hasProperties(obj){var properties=[];for(var _i=1;_i<arguments.length;_i++)properties[_i-1]=arguments[_i];return properties.filter(function(key){return typeof obj[key]!=="undefined"}).length>0}function typecast(value,targetType){switch(targetType){case "integer":return parseInt(value,
10);case "number":return parseFloat(value);case "string":return""+value;case "boolean":return!!value;default:return value}}function clone(arr){var out=[];arr.forEach(function(item,index){if(typeof item==="object"&&item!==null)out[index]=Array.isArray(item)?clone(item):merge({},item);else out[index]=item});return out}function merge(a,b){for(var key in b)if(typeof b[key]!=="object"||b[key]===null)a[key]=b[key];else if(Array.isArray(b[key]))a[key]=(a[key]||[]).concat(clone(b[key]));else if(typeof a[key]!==
"object"||a[key]===null||Array.isArray(a[key]))a[key]=merge({},b[key]);else a[key]=merge(a[key],b[key]);return a}var utils={getSubAttribute:getSubAttribute,hasProperties:hasProperties,typecast:typecast,clone:clone,merge:merge};function unique(path,items,value,sample,resolve,traverseCallback){var tmp=[],seen=[];function walk(obj){var json=JSON.stringify(obj);if(seen.indexOf(json)===-1){seen.push(json);tmp.push(obj)}}items.forEach(walk);var limit=100;while(tmp.length!==items.length){walk(traverseCallback(value.items||
sample,path,resolve));if(!limit--)break}return tmp}var arrayType=function arrayType(value,path,resolve,traverseCallback){var items=[];if(!(value.items||value.additionalItems)){if(utils.hasProperties(value,"minItems","maxItems","uniqueItems"))throw new ParseError("missing items for "+JSON.stringify(value),path);return items}var tmpItems=value.items;if(tmpItems instanceof Array)return Array.prototype.concat.apply(items,tmpItems.map(function(item,key){var itemSubpath=path.concat(["items",key+""]);return traverseCallback(item,
itemSubpath,resolve)}));var minItems=value.minItems;var maxItems=value.maxItems;if(optionAPI("defaultMinItems")&&minItems===undefined)minItems=!maxItems?optionAPI("defaultMinItems"):Math.min(optionAPI("defaultMinItems"),maxItems);if(optionAPI("maxItems")){if(maxItems&&maxItems>optionAPI("maxItems"))maxItems=optionAPI("maxItems");if(minItems&&minItems>optionAPI("maxItems"))minItems=maxItems}var length=random.number(minItems,maxItems,1,5),sample=typeof value.additionalItems==="object"?value.additionalItems:
{};for(var current=items.length;current<length;current++){var itemSubpath=path.concat(["items",current+""]);var element=traverseCallback(value.items||sample,itemSubpath,resolve);items.push(element)}if(value.uniqueItems)return unique(path.concat(["items"]),items,value,sample,resolve,traverseCallback);return items};var MIN_INTEGER=-1E8;var MAX_INTEGER=1E8;var numberType=function numberType(value){var min=typeof value.minimum==="undefined"?MIN_INTEGER:value.minimum,max=typeof value.maximum==="undefined"?
MAX_INTEGER:value.maximum,multipleOf=value.multipleOf;if(multipleOf){max=Math.floor(max/multipleOf)*multipleOf;min=Math.ceil(min/multipleOf)*multipleOf}if(value.exclusiveMinimum&&value.minimum&&min===value.minimum)min+=multipleOf||1;if(value.exclusiveMaximum&&value.maximum&&max===value.maximum)max-=multipleOf||1;if(min>max)return NaN;if(multipleOf)return Math.floor(random.number(min,max)/multipleOf)*multipleOf;return random.number(min,max,undefined,undefined,true)};var integerType=function integerType(value){var generated=
numberType(value);return generated>0?Math.floor(generated):Math.ceil(generated)};var LIPSUM_WORDS=("Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore"+" et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea"+" commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla"+" pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est"+
" laborum").split(" ");function wordsGenerator(length){var words=random.shuffle(LIPSUM_WORDS);return words.slice(0,length)}function isArray(obj){return obj&&Array.isArray(obj)}function isObject(obj){return obj&&obj!==null&&typeof obj==="object"}function hasNothing(obj){if(isArray(obj))return obj.length===0;if(isObject(obj))return Object.keys(obj).length===0;return typeof obj==="undefined"||obj===null}function removeProps(obj,key,parent,required){var i,value,isFullyEmpty=true;if(isArray(obj))for(i=
0;i<obj.length;++i){value=obj[i];if(isObject(value))removeProps(value,i,obj);if(hasNothing(value))obj.splice(i--,1);else isFullyEmpty=false}else for(i in obj){value=obj[i];if(required&&required.indexOf(i)>-1){isFullyEmpty=false;removeProps(value);continue}if(isObject(value))removeProps(value,i,obj);if(hasNothing(value))delete obj[i];else isFullyEmpty=false}if(typeof key!=="undefined"&&isFullyEmpty){delete parent[key];removeProps(obj)}}function clean(obj,required){removeProps(obj,undefined,undefined,
required);return obj}var randexp=container.get("randexp");var anyType={type:["string","number","integer","boolean"]};var objectType=function objectType(value,path,resolve,traverseCallback){var props={};var properties=value.properties||{};var patternProperties=value.patternProperties||{};var requiredProperties=(value.required||[]).slice();var allowsAdditional=value.additionalProperties===false?false:true;var propertyKeys=Object.keys(properties);var patternPropertyKeys=Object.keys(patternProperties);
var additionalProperties=allowsAdditional?value.additionalProperties===true?{}:value.additionalProperties:null;if(!allowsAdditional&&propertyKeys.length===0&&patternPropertyKeys.length===0&&utils.hasProperties(value,"minProperties","maxProperties","dependencies","required"))throw new ParseError("missing properties for:\n"+JSON.stringify(value,null,"  "),path);if(optionAPI("requiredOnly")===true){requiredProperties.forEach(function(key){if(properties[key])props[key]=properties[key]});return clean(traverseCallback(props,
path.concat(["properties"]),resolve),value.required)}var min=Math.max(value.minProperties||0,requiredProperties.length);var max=Math.max(value.maxProperties||random.number(min,min+5));random.shuffle(patternPropertyKeys.concat(propertyKeys)).forEach(function(_key){if(requiredProperties.indexOf(_key)===-1)requiredProperties.push(_key)});var _props=optionAPI("alwaysFakeOptionals")?requiredProperties:requiredProperties.slice(0,random.number(min,max));_props.forEach(function(key){if(properties[key])props[key]=
properties[key];else{var found;patternPropertyKeys.forEach(function(_key){if(key.match(new RegExp(_key))){found=true;props[randexp(key)]=patternProperties[_key]}});if(!found){var subschema=patternProperties[key]||additionalProperties;if(subschema)props[patternProperties[key]?randexp(key):key]=subschema}}});var current=Object.keys(props).length;while(true){if(!(patternPropertyKeys.length||allowsAdditional))break;if(current>=min)break;if(allowsAdditional){var word=wordsGenerator(1)+randexp("[a-f\\d]{1,3}");
if(!props[word]){props[word]=additionalProperties||anyType;current+=1}}patternPropertyKeys.forEach(function(_key){var word=randexp(_key);if(!props[word]){props[word]=patternProperties[_key];current+=1}})}if(!allowsAdditional&&current<min)throw new ParseError("properties constraints were too strong to successfully generate a valid object for:\n"+JSON.stringify(value,null,"  "),path);return clean(traverseCallback(props,path.concat(["properties"]),resolve),value.required)};function produce(){var length=
random.number(1,5);return wordsGenerator(length).join(" ")}function thunkGenerator(min,max){if(min===void 0)min=0;if(max===void 0)max=140;var min=Math.max(0,min),max=random.number(min,max),result=produce();while(result.length<min)result+=produce();if(result.length>max)result=result.substr(0,max);return result}function ipv4Generator(){return[0,0,0,0].map(function(){return random.number(0,255)}).join(".")}function dateTimeGenerator(){return(new Date(random.number(0,1E14))).toISOString()}var randexp$2=
container.get("randexp");var regexps={email:"[a-zA-Z\\d][a-zA-Z\\d-]{1,13}[a-zA-Z\\d]@{hostname}",hostname:"[a-zA-Z]{1,33}\\.[a-z]{2,4}",ipv6:"[a-f\\d]{4}(:[a-f\\d]{4}){7}",uri:"[a-zA-Z][a-zA-Z0-9+-.]*"};function coreFormatGenerator(coreFormat){return randexp$2(regexps[coreFormat]).replace(/\{(\w+)\}/,function(match,key){return randexp$2(regexps[key])})}var randexp$1=container.get("randexp");function generateFormat(value){switch(value.format){case "date-time":return dateTimeGenerator();case "ipv4":return ipv4Generator();
case "regex":return".+?";case "email":case "hostname":case "ipv6":case "uri":return coreFormatGenerator(value.format);default:var callback=formatAPI(value.format);return callback(container.getAll(),value)}}var stringType=function stringType(value){var output;var minLength=value.minLength;var maxLength=value.maxLength;if(optionAPI("maxLength")){if(maxLength&&maxLength>optionAPI("maxLength"))maxLength=optionAPI("maxLength");if(minLength&&minLength>optionAPI("maxLength"))minLength=optionAPI("maxLength")}if(value.format)output=
generateFormat(value);else if(value.pattern)output=randexp$1(value.pattern);else output=thunkGenerator(minLength,maxLength);while(output.length<minLength)output+=optionAPI("random")()>.7?thunkGenerator():randexp$1(".+");if(output.length>maxLength)output=output.substr(0,maxLength);return output};var externalType=function externalType(value,path){var libraryName=value.faker?"faker":value.chance?"chance":"casual",libraryModule=container.get(libraryName),key=value.faker||value.chance||value.casual,path=
key,args=[];if(typeof path==="object"){path=Object.keys(path)[0];if(Array.isArray(key[path]))args=key[path];else args.push(key[path])}var genFunction=utils.getSubAttribute(libraryModule,path);try{var contextObject=libraryModule;if(libraryName==="faker"){var parts=path.split(".");while(parts.length>1)contextObject=libraryModule[parts.shift()];genFunction=contextObject[parts[0]]}}catch(e){throw new Error("cannot resolve "+libraryName+"-generator for "+JSON.stringify(key));}if(typeof genFunction!=="function"){if(libraryName===
"casual")return utils.typecast(genFunction,value.type);throw new Error("unknown "+libraryName+"-generator for "+JSON.stringify(key));}var result=genFunction.apply(contextObject,args);return utils.typecast(result,value.type)};var typeMap={boolean:booleanType,null:nullType,array:arrayType,integer:integerType,number:numberType,object:objectType,string:stringType,external:externalType};function isExternal(schema){return schema.faker||schema.chance||schema.casual}function reduceExternal(schema,path){if(schema["x-faker"])schema.faker=
schema["x-faker"];if(schema["x-chance"])schema.chance=schema["x-chance"];if(schema["x-casual"])schema.casual=schema["x-casual"];var count=(schema.faker!==undefined?1:0)+(schema.chance!==undefined?1:0)+(schema.casual!==undefined?1:0);if(count>1)throw new ParseError("ambiguous generator mixing faker, chance or casual: "+JSON.stringify(schema),path);return schema}function traverse(schema,path,resolve){resolve(schema);if(Array.isArray(schema.enum))return random.pick(schema.enum);if(optionAPI("useDefaultValue")&&
"default"in schema)return schema.default;var type=schema.type;if(Array.isArray(type))type=random.pick(type);else if(typeof type==="undefined")type=inferType(schema,path)||type;schema=reduceExternal(schema,path);if(isExternal(schema))type="external";if(typeof type==="string")if(!typeMap[type])if(optionAPI("failOnInvalidTypes"))throw new ParseError("unknown primitive "+JSON.stringify(type),path.concat(["type"]));else return optionAPI("defaultInvalidTypeProduct");else try{return typeMap[type](schema,
path,resolve,traverse)}catch(e){if(typeof e.path==="undefined")throw new ParseError(e.message,path);throw e;}var copy={};if(Array.isArray(schema))copy=[];for(var prop in schema)if(typeof schema[prop]==="object"&&prop!=="definitions")copy[prop]=traverse(schema[prop],path.concat([prop]),resolve);else copy[prop]=schema[prop];return copy}function isKey(prop){return prop==="enum"||prop==="default"||prop==="required"||prop==="definitions"}function run(schema,refs,ex){var $=deref();var _={};try{return traverse($(schema,
refs,ex),[],function reduce(sub,maxReduceDepth){if(typeof maxReduceDepth==="undefined")maxReduceDepth=random.number(1,3);if(!sub)return null;if(typeof sub.$ref==="string"){var id=sub.$ref;if(!_[id])_[id]=0;_[id]+=1;delete sub.$ref;if(_[id]>maxReduceDepth){delete sub.oneOf;delete sub.anyOf;delete sub.allOf;return sub}utils.merge(sub,$.util.findByRef(id,$.refs))}if(Array.isArray(sub.allOf)){var schemas=sub.allOf;delete sub.allOf;schemas.forEach(function(schema){utils.merge(sub,reduce(schema,maxReduceDepth+
1))})}if(Array.isArray(sub.oneOf||sub.anyOf)){var mix=sub.oneOf||sub.anyOf;delete sub.anyOf;delete sub.oneOf;utils.merge(sub,random.pick(mix))}for(var prop in sub)if((Array.isArray(sub[prop])||typeof sub[prop]==="object")&&!isKey(prop))sub[prop]=reduce(sub[prop],maxReduceDepth);return sub})}catch(e){if(e.path)throw new Error(e.message+" in "+"/"+e.path.join("/"));else throw e;}}var jsf=function(schema,refs){return run(schema,refs)};jsf.format=formatAPI;jsf.option=optionAPI;jsf.extend=function(name,
cb){container.extend(name,cb);return jsf};var VERSION="0.4.7";jsf.version=VERSION;var lib=jsf;var chance_1=createCommonjsModule(function(module,exports){(function(){var MAX_INT=9007199254740992;var MIN_INT=-MAX_INT;var NUMBERS="0123456789";var CHARS_LOWER="abcdefghijklmnopqrstuvwxyz";var CHARS_UPPER=CHARS_LOWER.toUpperCase();var HEX_POOL=NUMBERS+"abcdef";var slice=Array.prototype.slice;function Chance(seed){if(!(this instanceof Chance)){if(!seed)seed=null;return seed===null?new Chance:new Chance(seed)}if(typeof seed===
"function"){this.random=seed;return this}if(arguments.length)this.seed=0;for(var i=0;i<arguments.length;i++){var seedling=0;if(Object.prototype.toString.call(arguments[i])==="[object String]")for(var j=0;j<arguments[i].length;j++){var hash=0;for(var k=0;k<arguments[i].length;k++)hash=arguments[i].charCodeAt(k)+(hash<<6)+(hash<<16)-hash;seedling+=hash}else seedling=arguments[i];this.seed+=(arguments.length-i)*seedling}this.mt=this.mersenne_twister(this.seed);this.bimd5=this.blueimp_md5();this.random=
function(){return this.mt.random(this.seed)};return this}Chance.prototype.VERSION="1.0.12";function initOptions(options,defaults){options=options||{};if(defaults)for(var i in defaults)if(typeof options[i]==="undefined")options[i]=defaults[i];return options}function testRange(test,errorMessage){if(test)throw new RangeError(errorMessage);}var base64=function(){throw new Error("No Base64 encoder available.");};(function determineBase64Encoder(){if(typeof btoa==="function")base64=btoa;else if(typeof Buffer===
"function")base64=function(input){return(new Buffer(input)).toString("base64")}})();Chance.prototype.bool=function(options){options=initOptions(options,{likelihood:50});testRange(options.likelihood<0||options.likelihood>100,"Chance: Likelihood accepts values from 0 to 100.");return this.random()*100<options.likelihood};Chance.prototype.character=function(options){options=initOptions(options);testRange(options.alpha&&options.symbols,"Chance: Cannot specify both alpha and symbols.");var symbols="!@#$%^\x26*()[]",
letters,pool;if(options.casing==="lower")letters=CHARS_LOWER;else if(options.casing==="upper")letters=CHARS_UPPER;else letters=CHARS_LOWER+CHARS_UPPER;if(options.pool)pool=options.pool;else if(options.alpha)pool=letters;else if(options.symbols)pool=symbols;else pool=letters+NUMBERS+symbols;return pool.charAt(this.natural({max:pool.length-1}))};Chance.prototype.floating=function(options){options=initOptions(options,{fixed:4});testRange(options.fixed&&options.precision,"Chance: Cannot specify both fixed and precision.");
var num;var fixed=Math.pow(10,options.fixed);var max=MAX_INT/fixed;var min=-max;testRange(options.min&&options.fixed&&options.min<min,"Chance: Min specified is out of range with fixed. Min should be, at least, "+min);testRange(options.max&&options.fixed&&options.max>max,"Chance: Max specified is out of range with fixed. Max should be, at most, "+max);options=initOptions(options,{min:min,max:max});num=this.integer({min:options.min*fixed,max:options.max*fixed});var num_fixed=(num/fixed).toFixed(options.fixed);
return parseFloat(num_fixed)};Chance.prototype.integer=function(options){options=initOptions(options,{min:MIN_INT,max:MAX_INT});testRange(options.min>options.max,"Chance: Min cannot be greater than Max.");return Math.floor(this.random()*(options.max-options.min+1)+options.min)};Chance.prototype.natural=function(options){options=initOptions(options,{min:0,max:MAX_INT});if(typeof options.numerals==="number"){testRange(options.numerals<1,"Chance: Numerals cannot be less than one.");options.min=Math.pow(10,
options.numerals-1);options.max=Math.pow(10,options.numerals)-1}testRange(options.min<0,"Chance: Min cannot be less than zero.");return this.integer(options)};Chance.prototype.hex=function(options){options=initOptions(options,{min:0,max:MAX_INT,casing:"lower"});testRange(options.min<0,"Chance: Min cannot be less than zero.");var integer=this.natural({min:options.min,max:options.max});if(options.casing==="upper")return integer.toString(16).toUpperCase();return integer.toString(16)};Chance.prototype.letter=
function(options){options=initOptions(options,{casing:"lower"});var pool="abcdefghijklmnopqrstuvwxyz";var letter=this.character({pool:pool});if(options.casing==="upper")letter=letter.toUpperCase();return letter};Chance.prototype.string=function(options){options=initOptions(options,{length:this.natural({min:5,max:20})});testRange(options.length<0,"Chance: Length cannot be less than zero.");var length=options.length,text=this.n(this.character,length,options);return text.join("")};Chance.prototype.capitalize=
function(word){return word.charAt(0).toUpperCase()+word.substr(1)};Chance.prototype.mixin=function(obj){for(var func_name in obj)Chance.prototype[func_name]=obj[func_name];return this};Chance.prototype.unique=function(fn,num,options){testRange(typeof fn!=="function","Chance: The first argument must be a function.");var comparator=function(arr,val){return arr.indexOf(val)!==-1};if(options)comparator=options.comparator||comparator;var arr=[],count=0,result,MAX_DUPLICATES=num*50,params=slice.call(arguments,
2);while(arr.length<num){var clonedParams=JSON.parse(JSON.stringify(params));result=fn.apply(this,clonedParams);if(!comparator(arr,result)){arr.push(result);count=0}if(++count>MAX_DUPLICATES)throw new RangeError("Chance: num is likely too large for sample set");}return arr};Chance.prototype.n=function(fn,n){testRange(typeof fn!=="function","Chance: The first argument must be a function.");if(typeof n==="undefined")n=1;var i=n,arr=[],params=slice.call(arguments,2);i=Math.max(0,i);for(;i--;)arr.push(fn.apply(this,
params));return arr};Chance.prototype.pad=function(number,width,pad){pad=pad||"0";number=number+"";return number.length>=width?number:(new Array(width-number.length+1)).join(pad)+number};Chance.prototype.pick=function(arr,count){if(arr.length===0)throw new RangeError("Chance: Cannot pick() from an empty array");if(!count||count===1)return arr[this.natural({max:arr.length-1})];else return this.shuffle(arr).slice(0,count)};Chance.prototype.pickone=function(arr){if(arr.length===0)throw new RangeError("Chance: Cannot pickone() from an empty array");
return arr[this.natural({max:arr.length-1})]};Chance.prototype.pickset=function(arr,count){if(count===0)return[];if(arr.length===0)throw new RangeError("Chance: Cannot pickset() from an empty array");if(count<0)throw new RangeError("Chance: Count must be a positive number");if(!count||count===1)return[this.pickone(arr)];else return this.shuffle(arr).slice(0,count)};Chance.prototype.shuffle=function(arr){var old_array=arr.slice(0),new_array=[],j=0,length=Number(old_array.length);for(var i=0;i<length;i++){j=
this.natural({max:old_array.length-1});new_array[i]=old_array[j];old_array.splice(j,1)}return new_array};Chance.prototype.weighted=function(arr,weights,trim){if(arr.length!==weights.length)throw new RangeError("Chance: Length of array and weights must match");var sum=0;var val;for(var weightIndex=0;weightIndex<weights.length;++weightIndex){val=weights[weightIndex];if(isNaN(val))throw new RangeError("Chance: All weights must be numbers");if(val>0)sum+=val}if(sum===0)throw new RangeError("Chance: No valid entries in array weights");
var selected=this.random()*sum;var total=0;var lastGoodIdx=-1;var chosenIdx;for(weightIndex=0;weightIndex<weights.length;++weightIndex){val=weights[weightIndex];total+=val;if(val>0){if(selected<=total){chosenIdx=weightIndex;break}lastGoodIdx=weightIndex}if(weightIndex===weights.length-1)chosenIdx=lastGoodIdx}var chosen=arr[chosenIdx];trim=typeof trim==="undefined"?false:trim;if(trim){arr.splice(chosenIdx,1);weights.splice(chosenIdx,1)}return chosen};Chance.prototype.paragraph=function(options){options=
initOptions(options);var sentences=options.sentences||this.natural({min:3,max:7}),sentence_array=this.n(this.sentence,sentences);return sentence_array.join(" ")};Chance.prototype.sentence=function(options){options=initOptions(options);var words=options.words||this.natural({min:12,max:18}),punctuation=options.punctuation,text,word_array=this.n(this.word,words);text=word_array.join(" ");text=this.capitalize(text);if(punctuation!==false&&!/^[\.\?;!:]$/.test(punctuation))punctuation=".";if(punctuation)text+=
punctuation;return text};Chance.prototype.syllable=function(options){options=initOptions(options);var length=options.length||this.natural({min:2,max:3}),consonants="bcdfghjklmnprstvwz",vowels="aeiou",all=consonants+vowels,text="",chr;for(var i=0;i<length;i++){if(i===0)chr=this.character({pool:all});else if(consonants.indexOf(chr)===-1)chr=this.character({pool:consonants});else chr=this.character({pool:vowels});text+=chr}if(options.capitalize)text=this.capitalize(text);return text};Chance.prototype.word=
function(options){options=initOptions(options);testRange(options.syllables&&options.length,"Chance: Cannot specify both syllables AND length.");var syllables=options.syllables||this.natural({min:1,max:3}),text="";if(options.length){do text+=this.syllable();while(text.length<options.length);text=text.substring(0,options.length)}else for(var i=0;i<syllables;i++)text+=this.syllable();if(options.capitalize)text=this.capitalize(text);return text};Chance.prototype.age=function(options){options=initOptions(options);
var ageRange;switch(options.type){case "child":ageRange={min:0,max:12};break;case "teen":ageRange={min:13,max:19};break;case "adult":ageRange={min:18,max:65};break;case "senior":ageRange={min:65,max:100};break;case "all":ageRange={min:0,max:100};break;default:ageRange={min:18,max:65};break}return this.natural(ageRange)};Chance.prototype.birthday=function(options){var age=this.age(options);var currentYear=(new Date).getFullYear();if(options&&options.type){var min=new Date;var max=new Date;min.setFullYear(currentYear-
age-1);max.setFullYear(currentYear-age);options=initOptions(options,{min:min,max:max})}else options=initOptions(options,{year:currentYear-age});return this.date(options)};Chance.prototype.cpf=function(options){options=initOptions(options,{formatted:true});var n=this.n(this.natural,9,{max:9});var d1=n[8]*2+n[7]*3+n[6]*4+n[5]*5+n[4]*6+n[3]*7+n[2]*8+n[1]*9+n[0]*10;d1=11-d1%11;if(d1>=10)d1=0;var d2=d1*2+n[8]*3+n[7]*4+n[6]*5+n[5]*6+n[4]*7+n[3]*8+n[2]*9+n[1]*10+n[0]*11;d2=11-d2%11;if(d2>=10)d2=0;var cpf=
""+n[0]+n[1]+n[2]+"."+n[3]+n[4]+n[5]+"."+n[6]+n[7]+n[8]+"-"+d1+d2;return options.formatted?cpf:cpf.replace(/\D/g,"")};Chance.prototype.cnpj=function(options){options=initOptions(options,{formatted:true});var n=this.n(this.natural,12,{max:12});var d1=n[11]*2+n[10]*3+n[9]*4+n[8]*5+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;d1=11-d1%11;if(d1<2)d1=0;var d2=d1*2+n[11]*3+n[10]*4+n[9]*5+n[8]*6+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;d2=11-d2%11;if(d2<2)d2=0;var cnpj=""+n[0]+
n[1]+"."+n[2]+n[3]+n[4]+"."+n[5]+n[6]+n[7]+"/"+n[8]+n[9]+n[10]+n[11]+"-"+d1+d2;return options.formatted?cnpj:cnpj.replace(/\D/g,"")};Chance.prototype.first=function(options){options=initOptions(options,{gender:this.gender(),nationality:"en"});return this.pick(this.get("firstNames")[options.gender.toLowerCase()][options.nationality.toLowerCase()])};Chance.prototype.profession=function(options){options=initOptions(options);if(options.rank)return this.pick(["Apprentice ","Junior ","Senior ","Lead "])+
this.pick(this.get("profession"));else return this.pick(this.get("profession"))};Chance.prototype.company=function(){return this.pick(this.get("company"))};Chance.prototype.gender=function(options){options=initOptions(options,{extraGenders:[]});return this.pick(["Male","Female"].concat(options.extraGenders))};Chance.prototype.last=function(options){options=initOptions(options,{nationality:"en"});return this.pick(this.get("lastNames")[options.nationality.toLowerCase()])};Chance.prototype.israelId=
function(){var x=this.string({pool:"0123456789",length:8});var y=0;for(var i=0;i<x.length;i++){var thisDigit=x[i]*(i/2===parseInt(i/2)?1:2);thisDigit=this.pad(thisDigit,2).toString();thisDigit=parseInt(thisDigit[0])+parseInt(thisDigit[1]);y=y+thisDigit}x=x+(10-parseInt(y.toString().slice(-1))).toString().slice(-1);return x};Chance.prototype.mrz=function(options){var checkDigit=function(input){var alpha="\x3cABCDEFGHIJKLMNOPQRSTUVWXYXZ".split(""),multipliers=[7,3,1],runningTotal=0;if(typeof input!==
"string")input=input.toString();input.split("").forEach(function(character,idx){var pos=alpha.indexOf(character);if(pos!==-1)character=pos===0?0:pos+9;else character=parseInt(character,10);character*=multipliers[idx%multipliers.length];runningTotal+=character});return runningTotal%10};var generate=function(opts){var pad=function(length){return(new Array(length+1)).join("\x3c")};var number=["P\x3c",opts.issuer,opts.last.toUpperCase(),"\x3c\x3c",opts.first.toUpperCase(),pad(39-(opts.last.length+opts.first.length+
2)),opts.passportNumber,checkDigit(opts.passportNumber),opts.nationality,opts.dob,checkDigit(opts.dob),opts.gender,opts.expiry,checkDigit(opts.expiry),pad(14),checkDigit(pad(14))].join("");return number+checkDigit(number.substr(44,10)+number.substr(57,7)+number.substr(65,7))};var that=this;options=initOptions(options,{first:this.first(),last:this.last(),passportNumber:this.integer({min:1E8,max:999999999}),dob:function(){var date=that.birthday({type:"adult"});return[date.getFullYear().toString().substr(2),
that.pad(date.getMonth()+1,2),that.pad(date.getDate(),2)].join("")}(),expiry:function(){var date=new Date;return[(date.getFullYear()+5).toString().substr(2),that.pad(date.getMonth()+1,2),that.pad(date.getDate(),2)].join("")}(),gender:this.gender()==="Female"?"F":"M",issuer:"GBR",nationality:"GBR"});return generate(options)};Chance.prototype.name=function(options){options=initOptions(options);var first=this.first(options),last=this.last(options),name;if(options.middle)name=first+" "+this.first(options)+
" "+last;else if(options.middle_initial)name=first+" "+this.character({alpha:true,casing:"upper"})+". "+last;else name=first+" "+last;if(options.prefix)name=this.prefix(options)+" "+name;if(options.suffix)name=name+" "+this.suffix(options);return name};Chance.prototype.name_prefixes=function(gender){gender=gender||"all";gender=gender.toLowerCase();var prefixes=[{name:"Doctor",abbreviation:"Dr."}];if(gender==="male"||gender==="all")prefixes.push({name:"Mister",abbreviation:"Mr."});if(gender==="female"||
gender==="all"){prefixes.push({name:"Miss",abbreviation:"Miss"});prefixes.push({name:"Misses",abbreviation:"Mrs."})}return prefixes};Chance.prototype.prefix=function(options){return this.name_prefix(options)};Chance.prototype.name_prefix=function(options){options=initOptions(options,{gender:"all"});return options.full?this.pick(this.name_prefixes(options.gender)).name:this.pick(this.name_prefixes(options.gender)).abbreviation};Chance.prototype.HIDN=function(){var idn_pool="0123456789";var idn_chrs=
"ABCDEFGHIJKLMNOPQRSTUVWXYXZ";var idn="";idn+=this.string({pool:idn_pool,length:6});idn+=this.string({pool:idn_chrs,length:2});return idn};Chance.prototype.ssn=function(options){options=initOptions(options,{ssnFour:false,dashes:true});var ssn_pool="1234567890",ssn,dash=options.dashes?"-":"";if(!options.ssnFour)ssn=this.string({pool:ssn_pool,length:3})+dash+this.string({pool:ssn_pool,length:2})+dash+this.string({pool:ssn_pool,length:4});else ssn=this.string({pool:ssn_pool,length:4});return ssn};Chance.prototype.name_suffixes=
function(){var suffixes=[{name:"Doctor of Osteopathic Medicine",abbreviation:"D.O."},{name:"Doctor of Philosophy",abbreviation:"Ph.D."},{name:"Esquire",abbreviation:"Esq."},{name:"Junior",abbreviation:"Jr."},{name:"Juris Doctor",abbreviation:"J.D."},{name:"Master of Arts",abbreviation:"M.A."},{name:"Master of Business Administration",abbreviation:"M.B.A."},{name:"Master of Science",abbreviation:"M.S."},{name:"Medical Doctor",abbreviation:"M.D."},{name:"Senior",abbreviation:"Sr."},{name:"The Third",
abbreviation:"III"},{name:"The Fourth",abbreviation:"IV"},{name:"Bachelor of Engineering",abbreviation:"B.E"},{name:"Bachelor of Technology",abbreviation:"B.TECH"}];return suffixes};Chance.prototype.suffix=function(options){return this.name_suffix(options)};Chance.prototype.name_suffix=function(options){options=initOptions(options);return options.full?this.pick(this.name_suffixes()).name:this.pick(this.name_suffixes()).abbreviation};Chance.prototype.nationalities=function(){return this.get("nationalities")};
Chance.prototype.nationality=function(){var nationality=this.pick(this.nationalities());return nationality.name};Chance.prototype.android_id=function(){return"APA91"+this.string({pool:"0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_",length:178})};Chance.prototype.apple_token=function(){return this.string({pool:"abcdef1234567890",length:64})};Chance.prototype.wp8_anid2=function(){return base64(this.hash({length:32}))};Chance.prototype.wp7_anid=function(){return"A\x3d"+this.guid().replace(/-/g,
"").toUpperCase()+"\x26E\x3d"+this.hash({length:3})+"\x26W\x3d"+this.integer({min:0,max:9})};Chance.prototype.bb_pin=function(){return this.hash({length:8})};Chance.prototype.avatar=function(options){var url=null;var URL_BASE="//www.gravatar.com/avatar/";var PROTOCOLS={http:"http",https:"https"};var FILE_TYPES={bmp:"bmp",gif:"gif",jpg:"jpg",png:"png"};var FALLBACKS={404:"404",mm:"mm",identicon:"identicon",monsterid:"monsterid",wavatar:"wavatar",retro:"retro",blank:"blank"};var RATINGS={g:"g",pg:"pg",
r:"r",x:"x"};var opts={protocol:null,email:null,fileExtension:null,size:null,fallback:null,rating:null};if(!options){opts.email=this.email();options={}}else if(typeof options==="string"){opts.email=options;options={}}else if(typeof options!=="object")return null;else if(options.constructor==="Array")return null;opts=initOptions(options,opts);if(!opts.email)opts.email=this.email();opts.protocol=PROTOCOLS[opts.protocol]?opts.protocol+":":"";opts.size=parseInt(opts.size,0)?opts.size:"";opts.rating=RATINGS[opts.rating]?
opts.rating:"";opts.fallback=FALLBACKS[opts.fallback]?opts.fallback:"";opts.fileExtension=FILE_TYPES[opts.fileExtension]?opts.fileExtension:"";url=opts.protocol+URL_BASE+this.bimd5.md5(opts.email)+(opts.fileExtension?"."+opts.fileExtension:"")+(opts.size||opts.rating||opts.fallback?"?":"")+(opts.size?"\x26s\x3d"+opts.size.toString():"")+(opts.rating?"\x26r\x3d"+opts.rating:"")+(opts.fallback?"\x26d\x3d"+opts.fallback:"");return url};Chance.prototype.color=function(options){function gray(value,delimiter){return[value,
value,value].join(delimiter||"")}function rgb(hasAlpha){var rgbValue=hasAlpha?"rgba":"rgb";var alphaChannel=hasAlpha?","+this.floating({min:min_alpha,max:max_alpha}):"";var colorValue=isGrayscale?gray(this.natural({min:min_rgb,max:max_rgb}),","):this.natural({min:min_green,max:max_green})+","+this.natural({min:min_blue,max:max_blue})+","+this.natural({max:255});return rgbValue+"("+colorValue+alphaChannel+")"}function hex(start,end,withHash){var symbol=withHash?"#":"";var hexstring="";if(isGrayscale){hexstring=
gray(this.pad(this.hex({min:min_rgb,max:max_rgb}),2));if(options.format==="shorthex")hexstring=gray(this.hex({min:0,max:15}))}else if(options.format==="shorthex")hexstring=this.pad(this.hex({min:Math.floor(min_red/16),max:Math.floor(max_red/16)}),1)+this.pad(this.hex({min:Math.floor(min_green/16),max:Math.floor(max_green/16)}),1)+this.pad(this.hex({min:Math.floor(min_blue/16),max:Math.floor(max_blue/16)}),1);else if(min_red!==undefined||max_red!==undefined||min_green!==undefined||max_green!==undefined||
min_blue!==undefined||max_blue!==undefined)hexstring=this.pad(this.hex({min:min_red,max:max_red}),2)+this.pad(this.hex({min:min_green,max:max_green}),2)+this.pad(this.hex({min:min_blue,max:max_blue}),2);else hexstring=this.pad(this.hex({min:min_rgb,max:max_rgb}),2)+this.pad(this.hex({min:min_rgb,max:max_rgb}),2)+this.pad(this.hex({min:min_rgb,max:max_rgb}),2);return symbol+hexstring}options=initOptions(options,{format:this.pick(["hex","shorthex","rgb","rgba","0x","name"]),grayscale:false,casing:"lower",
min:0,max:255,min_red:undefined,max_red:undefined,min_green:undefined,max_green:undefined,min_blue:undefined,max_blue:undefined,min_alpha:0,max_alpha:1});var isGrayscale=options.grayscale;var min_rgb=options.min;var max_rgb=options.max;var min_red=options.min_red;var max_red=options.max_red;var min_green=options.min_green;var max_green=options.max_green;var min_blue=options.min_blue;var max_blue=options.max_blue;var min_alpha=options.min_alpha;var max_alpha=options.max_alpha;if(options.min_red===
undefined)min_red=min_rgb;if(options.max_red===undefined)max_red=max_rgb;if(options.min_green===undefined)min_green=min_rgb;if(options.max_green===undefined)max_green=max_rgb;if(options.min_blue===undefined)min_blue=min_rgb;if(options.max_blue===undefined)max_blue=max_rgb;if(options.min_alpha===undefined)min_alpha=0;if(options.max_alpha===undefined)max_alpha=1;if(isGrayscale&&min_rgb===0&&max_rgb===255&&min_red!==undefined&&max_red!==undefined){min_rgb=(min_red+min_green+min_blue)/3;max_rgb=(max_red+
max_green+max_blue)/3}var colorValue;if(options.format==="hex")colorValue=hex.call(this,2,6,true);else if(options.format==="shorthex")colorValue=hex.call(this,1,3,true);else if(options.format==="rgb")colorValue=rgb.call(this,false);else if(options.format==="rgba")colorValue=rgb.call(this,true);else if(options.format==="0x")colorValue="0x"+hex.call(this,2,6);else if(options.format==="name")return this.pick(this.get("colorNames"));else throw new RangeError('Invalid format provided. Please provide one of "hex", "shorthex", "rgb", "rgba", "0x" or "name".');
if(options.casing==="upper")colorValue=colorValue.toUpperCase();return colorValue};Chance.prototype.domain=function(options){options=initOptions(options);return this.word()+"."+(options.tld||this.tld())};Chance.prototype.email=function(options){options=initOptions(options);return this.word({length:options.length})+"@"+(options.domain||this.domain())};Chance.prototype.fbid=function(){return"10000"+this.string({pool:"1234567890",length:11})};Chance.prototype.google_analytics=function(){var account=
this.pad(this.natural({max:999999}),6);var property=this.pad(this.natural({max:99}),2);return"UA-"+account+"-"+property};Chance.prototype.hashtag=function(){return"#"+this.word()};Chance.prototype.ip=function(){return this.natural({min:1,max:254})+"."+this.natural({max:255})+"."+this.natural({max:255})+"."+this.natural({min:1,max:254})};Chance.prototype.ipv6=function(){var ip_addr=this.n(this.hash,8,{length:4});return ip_addr.join(":")};Chance.prototype.klout=function(){return this.natural({min:1,
max:99})};Chance.prototype.semver=function(options){options=initOptions(options,{include_prerelease:true});var range=this.pickone(["^","~","\x3c","\x3e","\x3c\x3d","\x3e\x3d","\x3d"]);if(options.range)range=options.range;var prerelease="";if(options.include_prerelease)prerelease=this.weighted(["","-dev","-beta","-alpha"],[50,10,5,1]);return range+this.rpg("3d10").join(".")+prerelease};Chance.prototype.tlds=function(){return["com","org","edu","gov","co.uk","net","io","ac","ad","ae","af","ag","ai",
"al","am","an","ao","aq","ar","as","at","au","aw","ax","az","ba","bb","bd","be","bf","bg","bh","bi","bj","bm","bn","bo","bq","br","bs","bt","bv","bw","by","bz","ca","cc","cd","cf","cg","ch","ci","ck","cl","cm","cn","co","cr","cu","cv","cw","cx","cy","cz","de","dj","dk","dm","do","dz","ec","ee","eg","eh","er","es","et","eu","fi","fj","fk","fm","fo","fr","ga","gb","gd","ge","gf","gg","gh","gi","gl","gm","gn","gp","gq","gr","gs","gt","gu","gw","gy","hk","hm","hn","hr","ht","hu","id","ie","il","im","in",
"io","iq","ir","is","it","je","jm","jo","jp","ke","kg","kh","ki","km","kn","kp","kr","kw","ky","kz","la","lb","lc","li","lk","lr","ls","lt","lu","lv","ly","ma","mc","md","me","mg","mh","mk","ml","mm","mn","mo","mp","mq","mr","ms","mt","mu","mv","mw","mx","my","mz","na","nc","ne","nf","ng","ni","nl","no","np","nr","nu","nz","om","pa","pe","pf","pg","ph","pk","pl","pm","pn","pr","ps","pt","pw","py","qa","re","ro","rs","ru","rw","sa","sb","sc","sd","se","sg","sh","si","sj","sk","sl","sm","sn","so","sr",
"ss","st","su","sv","sx","sy","sz","tc","td","tf","tg","th","tj","tk","tl","tm","tn","to","tp","tr","tt","tv","tw","tz","ua","ug","uk","us","uy","uz","va","vc","ve","vg","vi","vn","vu","wf","ws","ye","yt","za","zm","zw"]};Chance.prototype.tld=function(){return this.pick(this.tlds())};Chance.prototype.twitter=function(){return"@"+this.word()};Chance.prototype.url=function(options){options=initOptions(options,{protocol:"http",domain:this.domain(options),domain_prefix:"",path:this.word(),extensions:[]});
var extension=options.extensions.length>0?"."+this.pick(options.extensions):"";var domain=options.domain_prefix?options.domain_prefix+"."+options.domain:options.domain;return options.protocol+"://"+domain+"/"+options.path+extension};Chance.prototype.port=function(){return this.integer({min:0,max:65535})};Chance.prototype.locale=function(options){options=initOptions(options);if(options.region)return this.pick(this.get("locale_regions"));else return this.pick(this.get("locale_languages"))};Chance.prototype.locales=
function(options){options=initOptions(options);if(options.region)return this.get("locale_regions");else return this.get("locale_languages")};Chance.prototype.address=function(options){options=initOptions(options);return this.natural({min:5,max:2E3})+" "+this.street(options)};Chance.prototype.altitude=function(options){options=initOptions(options,{fixed:5,min:0,max:8848});return this.floating({min:options.min,max:options.max,fixed:options.fixed})};Chance.prototype.areacode=function(options){options=
initOptions(options,{parens:true});var areacode=this.natural({min:2,max:9}).toString()+this.natural({min:0,max:8}).toString()+this.natural({min:0,max:9}).toString();return options.parens?"("+areacode+")":areacode};Chance.prototype.city=function(){return this.capitalize(this.word({syllables:3}))};Chance.prototype.coordinates=function(options){return this.latitude(options)+", "+this.longitude(options)};Chance.prototype.countries=function(){return this.get("countries")};Chance.prototype.country=function(options){options=
initOptions(options);var country=this.pick(this.countries());return options.full?country.name:country.abbreviation};Chance.prototype.depth=function(options){options=initOptions(options,{fixed:5,min:-10994,max:0});return this.floating({min:options.min,max:options.max,fixed:options.fixed})};Chance.prototype.geohash=function(options){options=initOptions(options,{length:7});return this.string({length:options.length,pool:"0123456789bcdefghjkmnpqrstuvwxyz"})};Chance.prototype.geojson=function(options){return this.latitude(options)+
", "+this.longitude(options)+", "+this.altitude(options)};Chance.prototype.latitude=function(options){options=initOptions(options,{fixed:5,min:-90,max:90});return this.floating({min:options.min,max:options.max,fixed:options.fixed})};Chance.prototype.longitude=function(options){options=initOptions(options,{fixed:5,min:-180,max:180});return this.floating({min:options.min,max:options.max,fixed:options.fixed})};Chance.prototype.phone=function(options){var self=this,numPick,ukNum=function(parts){var section=
[];parts.sections.forEach(function(n){section.push(self.string({pool:"0123456789",length:n}))});return parts.area+section.join(" ")};options=initOptions(options,{formatted:true,country:"us",mobile:false});if(!options.formatted)options.parens=false;var phone;switch(options.country){case "fr":if(!options.mobile){numPick=this.pick(["01"+this.pick(["30","34","39","40","41","42","43","44","45","46","47","48","49","53","55","56","58","60","64","69","70","72","73","74","75","76","77","78","79","80","81",
"82","83"])+self.string({pool:"0123456789",length:6}),"02"+this.pick(["14","18","22","23","28","29","30","31","32","33","34","35","36","37","38","40","41","43","44","45","46","47","48","49","50","51","52","53","54","56","57","61","62","69","72","76","77","78","85","90","96","97","98","99"])+self.string({pool:"0123456789",length:6}),"03"+this.pick(["10","20","21","22","23","24","25","26","27","28","29","39","44","45","51","52","54","55","57","58","59","60","61","62","63","64","65","66","67","68","69",
"70","71","72","73","80","81","82","83","84","85","86","87","88","89","90"])+self.string({pool:"0123456789",length:6}),"04"+this.pick(["11","13","15","20","22","26","27","30","32","34","37","42","43","44","50","56","57","63","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","88","89","90","91","92","93","94","95","97","98"])+self.string({pool:"0123456789",length:6}),"05"+this.pick(["08","16","17","19","24","31","32","33","34","35","40","45","46",
"47","49","53","55","56","57","58","59","61","62","63","64","65","67","79","81","82","86","87","90","94"])+self.string({pool:"0123456789",length:6}),"09"+self.string({pool:"0123456789",length:8})]);phone=options.formatted?numPick.match(/../g).join(" "):numPick}else{numPick=this.pick(["06","07"])+self.string({pool:"0123456789",length:8});phone=options.formatted?numPick.match(/../g).join(" "):numPick}break;case "uk":if(!options.mobile){numPick=this.pick([{area:"01"+this.character({pool:"234569"})+"1 ",
sections:[3,4]},{area:"020 "+this.character({pool:"378"}),sections:[3,4]},{area:"023 "+this.character({pool:"89"}),sections:[3,4]},{area:"024 7",sections:[3,4]},{area:"028 "+this.pick(["25","28","37","71","82","90","92","95"]),sections:[2,4]},{area:"012"+this.pick(["04","08","54","76","97","98"])+" ",sections:[6]},{area:"013"+this.pick(["63","64","84","86"])+" ",sections:[6]},{area:"014"+this.pick(["04","20","60","61","80","88"])+" ",sections:[6]},{area:"015"+this.pick(["24","27","62","66"])+" ",
sections:[6]},{area:"016"+this.pick(["06","29","35","47","59","95"])+" ",sections:[6]},{area:"017"+this.pick(["26","44","50","68"])+" ",sections:[6]},{area:"018"+this.pick(["27","37","84","97"])+" ",sections:[6]},{area:"019"+this.pick(["00","05","35","46","49","63","95"])+" ",sections:[6]}]);phone=options.formatted?ukNum(numPick):ukNum(numPick).replace(" ","","g")}else{numPick=this.pick([{area:"07"+this.pick(["4","5","7","8","9"]),sections:[2,6]},{area:"07624 ",sections:[6]}]);phone=options.formatted?
ukNum(numPick):ukNum(numPick).replace(" ","")}break;case "za":if(!options.mobile){numPick=this.pick(["01"+this.pick(["0","1","2","3","4","5","6","7","8"])+self.string({pool:"0123456789",length:7}),"02"+this.pick(["1","2","3","4","7","8"])+self.string({pool:"0123456789",length:7}),"03"+this.pick(["1","2","3","5","6","9"])+self.string({pool:"0123456789",length:7}),"04"+this.pick(["1","2","3","4","5","6","7","8","9"])+self.string({pool:"0123456789",length:7}),"05"+this.pick(["1","3","4","6","7","8"])+
self.string({pool:"0123456789",length:7})]);phone=options.formatted||numPick}else{numPick=this.pick(["060"+this.pick(["3","4","5","6","7","8","9"])+self.string({pool:"0123456789",length:6}),"061"+this.pick(["0","1","2","3","4","5","8"])+self.string({pool:"0123456789",length:6}),"06"+self.string({pool:"0123456789",length:7}),"071"+this.pick(["0","1","2","3","4","5","6","7","8","9"])+self.string({pool:"0123456789",length:6}),"07"+this.pick(["2","3","4","6","7","8","9"])+self.string({pool:"0123456789",
length:7}),"08"+this.pick(["0","1","2","3","4","5"])+self.string({pool:"0123456789",length:7})]);phone=options.formatted||numPick}break;case "us":var areacode=this.areacode(options).toString();var exchange=this.natural({min:2,max:9}).toString()+this.natural({min:0,max:9}).toString()+this.natural({min:0,max:9}).toString();var subscriber=this.natural({min:1E3,max:9999}).toString();phone=options.formatted?areacode+" "+exchange+"-"+subscriber:areacode+exchange+subscriber}return phone};Chance.prototype.postal=
function(){var pd=this.character({pool:"XVTSRPNKLMHJGECBA"});var fsa=pd+this.natural({max:9})+this.character({alpha:true,casing:"upper"});var ldu=this.natural({max:9})+this.character({alpha:true,casing:"upper"})+this.natural({max:9});return fsa+" "+ldu};Chance.prototype.counties=function(options){options=initOptions(options,{country:"uk"});return this.get("counties")[options.country.toLowerCase()]};Chance.prototype.county=function(options){return this.pick(this.counties(options)).name};Chance.prototype.provinces=
function(options){options=initOptions(options,{country:"ca"});return this.get("provinces")[options.country.toLowerCase()]};Chance.prototype.province=function(options){return options&&options.full?this.pick(this.provinces(options)).name:this.pick(this.provinces(options)).abbreviation};Chance.prototype.state=function(options){return options&&options.full?this.pick(this.states(options)).name:this.pick(this.states(options)).abbreviation};Chance.prototype.states=function(options){options=initOptions(options,
{country:"us",us_states_and_dc:true});var states;switch(options.country.toLowerCase()){case "us":var us_states_and_dc=this.get("us_states_and_dc"),territories=this.get("territories"),armed_forces=this.get("armed_forces");states=[];if(options.us_states_and_dc)states=states.concat(us_states_and_dc);if(options.territories)states=states.concat(territories);if(options.armed_forces)states=states.concat(armed_forces);break;case "it":states=this.get("country_regions")[options.country.toLowerCase()];break;
case "uk":states=this.get("counties")[options.country.toLowerCase()];break}return states};Chance.prototype.street=function(options){options=initOptions(options,{country:"us",syllables:2});var street;switch(options.country.toLowerCase()){case "us":street=this.word({syllables:options.syllables});street=this.capitalize(street);street+=" ";street+=options.short_suffix?this.street_suffix(options).abbreviation:this.street_suffix(options).name;break;case "it":street=this.word({syllables:options.syllables});
street=this.capitalize(street);street=(options.short_suffix?this.street_suffix(options).abbreviation:this.street_suffix(options).name)+" "+street;break}return street};Chance.prototype.street_suffix=function(options){options=initOptions(options,{country:"us"});return this.pick(this.street_suffixes(options))};Chance.prototype.street_suffixes=function(options){options=initOptions(options,{country:"us"});return this.get("street_suffixes")[options.country.toLowerCase()]};Chance.prototype.zip=function(options){var zip=
this.n(this.natural,5,{max:9});if(options&&options.plusfour===true){zip.push("-");zip=zip.concat(this.n(this.natural,4,{max:9}))}return zip.join("")};Chance.prototype.ampm=function(){return this.bool()?"am":"pm"};Chance.prototype.date=function(options){var date_string,date;if(options&&(options.min||options.max)){options=initOptions(options,{american:true,string:false});var min=typeof options.min!=="undefined"?options.min.getTime():1;var max=typeof options.max!=="undefined"?options.max.getTime():864E13;
date=new Date(this.integer({min:min,max:max}))}else{var m=this.month({raw:true});var daysInMonth=m.days;if(options&&options.month)daysInMonth=this.get("months")[(options.month%12+12)%12].days;options=initOptions(options,{year:parseInt(this.year(),10),month:m.numeric-1,day:this.natural({min:1,max:daysInMonth}),hour:this.hour({twentyfour:true}),minute:this.minute(),second:this.second(),millisecond:this.millisecond(),american:true,string:false});date=new Date(options.year,options.month,options.day,options.hour,
options.minute,options.second,options.millisecond)}if(options.american)date_string=date.getMonth()+1+"/"+date.getDate()+"/"+date.getFullYear();else date_string=date.getDate()+"/"+(date.getMonth()+1)+"/"+date.getFullYear();return options.string?date_string:date};Chance.prototype.hammertime=function(options){return this.date(options).getTime()};Chance.prototype.hour=function(options){options=initOptions(options,{min:options&&options.twentyfour?0:1,max:options&&options.twentyfour?23:12});testRange(options.min<
0,"Chance: Min cannot be less than 0.");testRange(options.twentyfour&&options.max>23,"Chance: Max cannot be greater than 23 for twentyfour option.");testRange(!options.twentyfour&&options.max>12,"Chance: Max cannot be greater than 12.");testRange(options.min>options.max,"Chance: Min cannot be greater than Max.");return this.natural({min:options.min,max:options.max})};Chance.prototype.millisecond=function(){return this.natural({max:999})};Chance.prototype.minute=Chance.prototype.second=function(options){options=
initOptions(options,{min:0,max:59});testRange(options.min<0,"Chance: Min cannot be less than 0.");testRange(options.max>59,"Chance: Max cannot be greater than 59.");testRange(options.min>options.max,"Chance: Min cannot be greater than Max.");return this.natural({min:options.min,max:options.max})};Chance.prototype.month=function(options){options=initOptions(options,{min:1,max:12});testRange(options.min<1,"Chance: Min cannot be less than 1.");testRange(options.max>12,"Chance: Max cannot be greater than 12.");
testRange(options.min>options.max,"Chance: Min cannot be greater than Max.");var month=this.pick(this.months().slice(options.min-1,options.max));return options.raw?month:month.name};Chance.prototype.months=function(){return this.get("months")};Chance.prototype.second=function(){return this.natural({max:59})};Chance.prototype.timestamp=function(){return this.natural({min:1,max:parseInt((new Date).getTime()/1E3,10)})};Chance.prototype.weekday=function(options){options=initOptions(options,{weekday_only:false});
var weekdays=["Monday","Tuesday","Wednesday","Thursday","Friday"];if(!options.weekday_only){weekdays.push("Saturday");weekdays.push("Sunday")}return this.pickone(weekdays)};Chance.prototype.year=function(options){options=initOptions(options,{min:(new Date).getFullYear()});options.max=typeof options.max!=="undefined"?options.max:options.min+100;return this.natural(options).toString()};Chance.prototype.cc=function(options){options=initOptions(options);var type,number,to_generate;type=options.type?this.cc_type({name:options.type,
raw:true}):this.cc_type({raw:true});number=type.prefix.split("");to_generate=type.length-type.prefix.length-1;number=number.concat(this.n(this.integer,to_generate,{min:0,max:9}));number.push(this.luhn_calculate(number.join("")));return number.join("")};Chance.prototype.cc_types=function(){return this.get("cc_types")};Chance.prototype.cc_type=function(options){options=initOptions(options);var types=this.cc_types(),type=null;if(options.name){for(var i=0;i<types.length;i++)if(types[i].name===options.name||
types[i].short_name===options.name){type=types[i];break}if(type===null)throw new RangeError("Chance: Credit card type '"+options.name+"' is not supported");}else type=this.pick(types);return options.raw?type:type.name};Chance.prototype.currency_types=function(){return this.get("currency_types")};Chance.prototype.currency=function(){return this.pick(this.currency_types())};Chance.prototype.timezones=function(){return this.get("timezones")};Chance.prototype.timezone=function(){return this.pick(this.timezones())};
Chance.prototype.currency_pair=function(returnAsString){var currencies=this.unique(this.currency,2,{comparator:function(arr,val){return arr.reduce(function(acc,item){return acc||item.code===val.code},false)}});if(returnAsString)return currencies[0].code+"/"+currencies[1].code;else return currencies};Chance.prototype.dollar=function(options){options=initOptions(options,{max:1E4,min:0});var dollar=this.floating({min:options.min,max:options.max,fixed:2}).toString(),cents=dollar.split(".")[1];if(cents===
undefined)dollar+=".00";else if(cents.length<2)dollar=dollar+"0";if(dollar<0)return"-$"+dollar.replace("-","");else return"$"+dollar};Chance.prototype.euro=function(options){return Number(this.dollar(options).replace("$","")).toLocaleString()+"\u20ac"};Chance.prototype.exp=function(options){options=initOptions(options);var exp={};exp.year=this.exp_year();if(exp.year===(new Date).getFullYear().toString())exp.month=this.exp_month({future:true});else exp.month=this.exp_month();return options.raw?exp:
exp.month+"/"+exp.year};Chance.prototype.exp_month=function(options){options=initOptions(options);var month,month_int,curMonth=(new Date).getMonth()+1;if(options.future&&curMonth!==12){do{month=this.month({raw:true}).numeric;month_int=parseInt(month,10)}while(month_int<=curMonth)}else month=this.month({raw:true}).numeric;return month};Chance.prototype.exp_year=function(){var curMonth=(new Date).getMonth()+1,curYear=(new Date).getFullYear();return this.year({min:curMonth===12?curYear+1:curYear,max:curYear+
10})};Chance.prototype.vat=function(options){options=initOptions(options,{country:"it"});switch(options.country.toLowerCase()){case "it":return this.it_vat()}};Chance.prototype.iban=function(){var alpha="ABCDEFGHIJKLMNOPQRSTUVWXYZ";var alphanum=alpha+"0123456789";var iban=this.string({length:2,pool:alpha})+this.pad(this.integer({min:0,max:99}),2)+this.string({length:4,pool:alphanum})+this.pad(this.natural(),this.natural({min:6,max:26}));return iban};Chance.prototype.it_vat=function(){var it_vat=this.natural({min:1,
max:18E5});it_vat=this.pad(it_vat,7)+this.pad(this.pick(this.provinces({country:"it"})).code,3);return it_vat+this.luhn_calculate(it_vat)};Chance.prototype.cf=function(options){options=options||{};var gender=!!options.gender?options.gender:this.gender(),first=!!options.first?options.first:this.first({gender:gender,nationality:"it"}),last=!!options.last?options.last:this.last({nationality:"it"}),birthday=!!options.birthday?options.birthday:this.birthday(),city=!!options.city?options.city:this.pickone(["A",
"B","C","D","E","F","G","H","I","L","M","Z"])+this.pad(this.natural({max:999}),3),cf=[],name_generator=function(name,isLast){var temp,return_value=[];if(name.length<3)return_value=name.split("").concat("XXX".split("")).splice(0,3);else{temp=name.toUpperCase().split("").map(function(c){return"BCDFGHJKLMNPRSTVWZ".indexOf(c)!==-1?c:undefined}).join("");if(temp.length>3)if(isLast)temp=temp.substr(0,3);else temp=temp[0]+temp.substr(2,2);if(temp.length<3){return_value=temp;temp=name.toUpperCase().split("").map(function(c){return"AEIOU".indexOf(c)!==
-1?c:undefined}).join("").substr(0,3-return_value.length)}return_value=return_value+temp}return return_value},date_generator=function(birthday,gender,that){var lettermonths=["A","B","C","D","E","H","L","M","P","R","S","T"];return birthday.getFullYear().toString().substr(2)+lettermonths[birthday.getMonth()]+that.pad(birthday.getDate()+(gender.toLowerCase()==="female"?40:0),2)},checkdigit_generator=function(cf){var range1="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",range2="ABCDEFGHIJABCDEFGHIJKLMNOPQRSTUVWXYZ",
evens="ABCDEFGHIJKLMNOPQRSTUVWXYZ",odds="BAKPLCQDREVOSFTGUHMINJWZYX",digit=0;for(var i=0;i<15;i++)if(i%2!==0)digit+=evens.indexOf(range2[range1.indexOf(cf[i])]);else digit+=odds.indexOf(range2[range1.indexOf(cf[i])]);return evens[digit%26]};cf=cf.concat(name_generator(last,true),name_generator(first),date_generator(birthday,gender,this),city.toUpperCase().split("")).join("");cf+=checkdigit_generator(cf.toUpperCase(),this);return cf.toUpperCase()};Chance.prototype.pl_pesel=function(){var number=this.natural({min:1,
max:9999999999});var arr=this.pad(number,10).split("");for(var i=0;i<arr.length;i++)arr[i]=parseInt(arr[i]);var controlNumber=(1*arr[0]+3*arr[1]+7*arr[2]+9*arr[3]+1*arr[4]+3*arr[5]+7*arr[6]+9*arr[7]+1*arr[8]+3*arr[9])%10;if(controlNumber!==0)controlNumber=10-controlNumber;return arr.join("")+controlNumber};Chance.prototype.pl_nip=function(){var number=this.natural({min:1,max:999999999});var arr=this.pad(number,9).split("");for(var i=0;i<arr.length;i++)arr[i]=parseInt(arr[i]);var controlNumber=(6*
arr[0]+5*arr[1]+7*arr[2]+2*arr[3]+3*arr[4]+4*arr[5]+5*arr[6]+6*arr[7]+7*arr[8])%11;if(controlNumber===10)return this.pl_nip();return arr.join("")+controlNumber};Chance.prototype.pl_regon=function(){var number=this.natural({min:1,max:99999999});var arr=this.pad(number,8).split("");for(var i=0;i<arr.length;i++)arr[i]=parseInt(arr[i]);var controlNumber=(8*arr[0]+9*arr[1]+2*arr[2]+3*arr[3]+4*arr[4]+5*arr[5]+6*arr[6]+7*arr[7])%11;if(controlNumber===10)controlNumber=0;return arr.join("")+controlNumber};
Chance.prototype.note=function(options){options=initOptions(options,{notes:"flatKey"});var scales={naturals:["C","D","E","F","G","A","B"],flats:["D\u266d","E\u266d","G\u266d","A\u266d","B\u266d"],sharps:["C\u266f","D\u266f","F\u266f","G\u266f","A\u266f"]};scales.all=scales.naturals.concat(scales.flats.concat(scales.sharps));scales.flatKey=scales.naturals.concat(scales.flats);scales.sharpKey=scales.naturals.concat(scales.sharps);return this.pickone(scales[options.notes])};Chance.prototype.midi_note=
function(options){var min=0;var max=127;options=initOptions(options,{min:min,max:max});return this.integer({min:options.min,max:options.max})};Chance.prototype.chord_quality=function(options){options=initOptions(options,{jazz:true});var chord_qualities=["maj","min","aug","dim"];if(options.jazz)chord_qualities=["maj7","min7","7","sus","dim","\u00f8"];return this.pickone(chord_qualities)};Chance.prototype.chord=function(options){options=initOptions(options);return this.note(options)+this.chord_quality(options)};
Chance.prototype.tempo=function(options){var min=40;var max=320;options=initOptions(options,{min:min,max:max});return this.integer({min:options.min,max:options.max})};Chance.prototype.coin=function(options){return this.bool()?"heads":"tails"};function diceFn(range){return function(){return this.natural(range)}}Chance.prototype.d4=diceFn({min:1,max:4});Chance.prototype.d6=diceFn({min:1,max:6});Chance.prototype.d8=diceFn({min:1,max:8});Chance.prototype.d10=diceFn({min:1,max:10});Chance.prototype.d12=
diceFn({min:1,max:12});Chance.prototype.d20=diceFn({min:1,max:20});Chance.prototype.d30=diceFn({min:1,max:30});Chance.prototype.d100=diceFn({min:1,max:100});Chance.prototype.rpg=function(thrown,options){options=initOptions(options);if(!thrown)throw new RangeError("Chance: A type of die roll must be included");else{var bits=thrown.toLowerCase().split("d"),rolls=[];if(bits.length!==2||!parseInt(bits[0],10)||!parseInt(bits[1],10))throw new Error("Chance: Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die");
for(var i=bits[0];i>0;i--)rolls[i-1]=this.natural({min:1,max:bits[1]});return typeof options.sum!=="undefined"&&options.sum?rolls.reduce(function(p,c){return p+c}):rolls}};Chance.prototype.guid=function(options){options=initOptions(options,{version:5});var guid_pool="abcdef1234567890",variant_pool="ab89",guid=this.string({pool:guid_pool,length:8})+"-"+this.string({pool:guid_pool,length:4})+"-"+options.version+this.string({pool:guid_pool,length:3})+"-"+this.string({pool:variant_pool,length:1})+this.string({pool:guid_pool,
length:3})+"-"+this.string({pool:guid_pool,length:12});return guid};Chance.prototype.hash=function(options){options=initOptions(options,{length:40,casing:"lower"});var pool=options.casing==="upper"?HEX_POOL.toUpperCase():HEX_POOL;return this.string({pool:pool,length:options.length})};Chance.prototype.luhn_check=function(num){var str=num.toString();var checkDigit=+str.substring(str.length-1);return checkDigit===this.luhn_calculate(+str.substring(0,str.length-1))};Chance.prototype.luhn_calculate=function(num){var digits=
num.toString().split("").reverse();var sum=0;var digit;for(var i=0,l=digits.length;l>i;++i){digit=+digits[i];if(i%2===0){digit*=2;if(digit>9)digit-=9}sum+=digit}return sum*9%10};Chance.prototype.md5=function(options){var opts={str:"",key:null,raw:false};if(!options){opts.str=this.string();options={}}else if(typeof options==="string"){opts.str=options;options={}}else if(typeof options!=="object")return null;else if(options.constructor==="Array")return null;opts=initOptions(options,opts);if(!opts.str)throw new Error("A parameter is required to return an md5 hash.");
return this.bimd5.md5(opts.str,opts.key,opts.raw)};Chance.prototype.file=function(options){var fileOptions=options||{};var poolCollectionKey="fileExtension";var typeRange=Object.keys(this.get("fileExtension"));var fileName;var fileExtension;fileName=this.word({length:fileOptions.length});if(fileOptions.extension){fileExtension=fileOptions.extension;return fileName+"."+fileExtension}if(fileOptions.extensions){if(Array.isArray(fileOptions.extensions)){fileExtension=this.pickone(fileOptions.extensions);
return fileName+"."+fileExtension}else if(fileOptions.extensions.constructor===Object){var extensionObjectCollection=fileOptions.extensions;var keys=Object.keys(extensionObjectCollection);fileExtension=this.pickone(extensionObjectCollection[this.pickone(keys)]);return fileName+"."+fileExtension}throw new Error("Chance: Extensions must be an Array or Object");}if(fileOptions.fileType){var fileType=fileOptions.fileType;if(typeRange.indexOf(fileType)!==-1){fileExtension=this.pickone(this.get(poolCollectionKey)[fileType]);
return fileName+"."+fileExtension}throw new RangeError("Chance: Expect file type value to be 'raster', 'vector', '3d' or 'document'");}fileExtension=this.pickone(this.get(poolCollectionKey)[this.pickone(typeRange)]);return fileName+"."+fileExtension};var data={firstNames:{"male":{"en":["James","John","Robert","Michael","William","David","Richard","Joseph","Charles","Thomas","Christopher","Daniel","Matthew","George","Donald","Anthony","Paul","Mark","Edward","Steven","Kenneth","Andrew","Brian","Joshua",
"Kevin","Ronald","Timothy","Jason","Jeffrey","Frank","Gary","Ryan","Nicholas","Eric","Stephen","Jacob","Larry","Jonathan","Scott","Raymond","Justin","Brandon","Gregory","Samuel","Benjamin","Patrick","Jack","Henry","Walter","Dennis","Jerry","Alexander","Peter","Tyler","Douglas","Harold","Aaron","Jose","Adam","Arthur","Zachary","Carl","Nathan","Albert","Kyle","Lawrence","Joe","Willie","Gerald","Roger","Keith","Jeremy","Terry","Harry","Ralph","Sean","Jesse","Roy","Louis","Billy","Austin","Bruce","Eugene",
"Christian","Bryan","Wayne","Russell","Howard","Fred","Ethan","Jordan","Philip","Alan","Juan","Randy","Vincent","Bobby","Dylan","Johnny","Phillip","Victor","Clarence","Ernest","Martin","Craig","Stanley","Shawn","Travis","Bradley","Leonard","Earl","Gabriel","Jimmy","Francis","Todd","Noah","Danny","Dale","Cody","Carlos","Allen","Frederick","Logan","Curtis","Alex","Joel","Luis","Norman","Marvin","Glenn","Tony","Nathaniel","Rodney","Melvin","Alfred","Steve","Cameron","Chad","Edwin","Caleb","Evan","Antonio",
"Lee","Herbert","Jeffery","Isaac","Derek","Ricky","Marcus","Theodore","Elijah","Luke","Jesus","Eddie","Troy","Mike","Dustin","Ray","Adrian","Bernard","Leroy","Angel","Randall","Wesley","Ian","Jared","Mason","Hunter","Calvin","Oscar","Clifford","Jay","Shane","Ronnie","Barry","Lucas","Corey","Manuel","Leo","Tommy","Warren","Jackson","Isaiah","Connor","Don","Dean","Jon","Julian","Miguel","Bill","Lloyd","Charlie","Mitchell","Leon","Jerome","Darrell","Jeremiah","Alvin","Brett","Seth","Floyd","Jim","Blake",
"Micheal","Gordon","Trevor","Lewis","Erik","Edgar","Vernon","Devin","Gavin","Jayden","Chris","Clyde","Tom","Derrick","Mario","Brent","Marc","Herman","Chase","Dominic","Ricardo","Franklin","Maurice","Max","Aiden","Owen","Lester","Gilbert","Elmer","Gene","Francisco","Glen","Cory","Garrett","Clayton","Sam","Jorge","Chester","Alejandro","Jeff","Harvey","Milton","Cole","Ivan","Andre","Duane","Landon"],"it":["Adolfo","Alberto","Aldo","Alessandro","Alessio","Alfredo","Alvaro","Andrea","Angelo","Angiolo",
"Antonino","Antonio","Attilio","Benito","Bernardo","Bruno","Carlo","Cesare","Christian","Claudio","Corrado","Cosimo","Cristian","Cristiano","Daniele","Dario","David","Davide","Diego","Dino","Domenico","Duccio","Edoardo","Elia","Elio","Emanuele","Emiliano","Emilio","Enrico","Enzo","Ettore","Fabio","Fabrizio","Federico","Ferdinando","Fernando","Filippo","Francesco","Franco","Gabriele","Giacomo","Giampaolo","Giampiero","Giancarlo","Gianfranco","Gianluca","Gianmarco","Gianni","Gino","Giorgio","Giovanni",
"Giuliano","Giulio","Giuseppe","Graziano","Gregorio","Guido","Iacopo","Jacopo","Lapo","Leonardo","Lorenzo","Luca","Luciano","Luigi","Manuel","Marcello","Marco","Marino","Mario","Massimiliano","Massimo","Matteo","Mattia","Maurizio","Mauro","Michele","Mirko","Mohamed","Nello","Neri","Niccol\u00f2","Nicola","Osvaldo","Otello","Paolo","Pier Luigi","Piero","Pietro","Raffaele","Remo","Renato","Renzo","Riccardo","Roberto","Rolando","Romano","Salvatore","Samuele","Sandro","Sergio","Silvano","Simone","Stefano",
"Thomas","Tommaso","Ubaldo","Ugo","Umberto","Valerio","Valter","Vasco","Vincenzo","Vittorio"],"nl":["Aaron","Abel","Adam","Adriaan","Albert","Alexander","Ali","Arjen","Arno","Bart","Bas","Bastiaan","Benjamin","Bob","Boris","Bram","Brent","Cas","Casper","Chris","Christiaan","Cornelis","Daan","Daley","Damian","Dani","Daniel","Dani\u00ebl","David","Dean","Dirk","Dylan","Egbert","Elijah","Erik","Erwin","Evert","Ezra","Fabian","Fedde","Finn","Florian","Floris","Frank","Frans","Frederik","Freek","Geert",
"Gerard","Gerben","Gerrit","Gijs","Guus","Hans","Hendrik","Henk","Herman","Hidde","Hugo","Jaap","Jan Jaap","Jan-Willem","Jack","Jacob","Jan","Jason","Jasper","Jayden","Jelle","Jelte","Jens","Jeroen","Jesse","Jim","Job","Joep","Johannes","John","Jonathan","Joris","Joshua","Jo\u00ebl","Julian","Kees","Kevin","Koen","Lars","Laurens","Leendert","Lennard","Lodewijk","Luc","Luca","Lucas","Lukas","Luuk","Maarten","Marcus","Martijn","Martin","Matthijs","Maurits","Max","Mees","Melle","Mick","Mika","Milan",
"Mohamed","Mohammed","Morris","Muhammed","Nathan","Nick","Nico","Niek","Niels","Noah","Noud","Olivier","Oscar","Owen","Paul","Pepijn","Peter","Pieter","Pim","Quinten","Reinier","Rens","Robin","Ruben","Sam","Samuel","Sander","Sebastiaan","Sem","Sep","Sepp","Siem","Simon","Stan","Stef","Steven","Stijn","Sven","Teun","Thijmen","Thijs","Thomas","Tijn","Tim","Timo","Tobias","Tom","Victor","Vince","Willem","Wim","Wouter","Yusuf"]},"female":{"en":["Mary","Emma","Elizabeth","Minnie","Margaret","Ida","Alice",
"Bertha","Sarah","Annie","Clara","Ella","Florence","Cora","Martha","Laura","Nellie","Grace","Carrie","Maude","Mabel","Bessie","Jennie","Gertrude","Julia","Hattie","Edith","Mattie","Rose","Catherine","Lillian","Ada","Lillie","Helen","Jessie","Louise","Ethel","Lula","Myrtle","Eva","Frances","Lena","Lucy","Edna","Maggie","Pearl","Daisy","Fannie","Josephine","Dora","Rosa","Katherine","Agnes","Marie","Nora","May","Mamie","Blanche","Stella","Ellen","Nancy","Effie","Sallie","Nettie","Della","Lizzie","Flora",
"Susie","Maud","Mae","Etta","Harriet","Sadie","Caroline","Katie","Lydia","Elsie","Kate","Susan","Mollie","Alma","Addie","Georgia","Eliza","Lulu","Nannie","Lottie","Amanda","Belle","Charlotte","Rebecca","Ruth","Viola","Olive","Amelia","Hannah","Jane","Virginia","Emily","Matilda","Irene","Kathryn","Esther","Willie","Henrietta","Ollie","Amy","Rachel","Sara","Estella","Theresa","Augusta","Ora","Pauline","Josie","Lola","Sophia","Leona","Anne","Mildred","Ann","Beulah","Callie","Lou","Delia","Eleanor","Barbara",
"Iva","Louisa","Maria","Mayme","Evelyn","Estelle","Nina","Betty","Marion","Bettie","Dorothy","Luella","Inez","Lela","Rosie","Allie","Millie","Janie","Cornelia","Victoria","Ruby","Winifred","Alta","Celia","Christine","Beatrice","Birdie","Harriett","Mable","Myra","Sophie","Tillie","Isabel","Sylvia","Carolyn","Isabelle","Leila","Sally","Ina","Essie","Bertie","Nell","Alberta","Katharine","Lora","Rena","Mina","Rhoda","Mathilda","Abbie","Eula","Dollie","Hettie","Eunice","Fanny","Ola","Lenora","Adelaide",
"Christina","Lelia","Nelle","Sue","Johanna","Lilly","Lucinda","Minerva","Lettie","Roxie","Cynthia","Helena","Hilda","Hulda","Bernice","Genevieve","Jean","Cordelia","Marian","Francis","Jeanette","Adeline","Gussie","Leah","Lois","Lura","Mittie","Hallie","Isabella","Olga","Phoebe","Teresa","Hester","Lida","Lina","Winnie","Claudia","Marguerite","Vera","Cecelia","Bess","Emilie","Rosetta","Verna","Myrtie","Cecilia","Elva","Olivia","Ophelia","Georgie","Elnora","Violet","Adele","Lily","Linnie","Loretta",
"Madge","Polly","Virgie","Eugenia","Lucile","Lucille","Mabelle","Rosalie"],"it":["Ada","Adriana","Alessandra","Alessia","Alice","Angela","Anna","Anna Maria","Annalisa","Annita","Annunziata","Antonella","Arianna","Asia","Assunta","Aurora","Barbara","Beatrice","Benedetta","Bianca","Bruna","Camilla","Carla","Carlotta","Carmela","Carolina","Caterina","Catia","Cecilia","Chiara","Cinzia","Clara","Claudia","Costanza","Cristina","Daniela","Debora","Diletta","Dina","Donatella","Elena","Eleonora","Elisa","Elisabetta",
"Emanuela","Emma","Eva","Federica","Fernanda","Fiorella","Fiorenza","Flora","Franca","Francesca","Gabriella","Gaia","Gemma","Giada","Gianna","Gina","Ginevra","Giorgia","Giovanna","Giulia","Giuliana","Giuseppa","Giuseppina","Grazia","Graziella","Greta","Ida","Ilaria","Ines","Iolanda","Irene","Irma","Isabella","Jessica","Laura","Lea","Letizia","Licia","Lidia","Liliana","Lina","Linda","Lisa","Livia","Loretta","Luana","Lucia","Luciana","Lucrezia","Luisa","Manuela","Mara","Marcella","Margherita","Maria",
"Maria Cristina","Maria Grazia","Maria Luisa","Maria Pia","Maria Teresa","Marina","Marisa","Marta","Martina","Marzia","Matilde","Melissa","Michela","Milena","Mirella","Monica","Natalina","Nella","Nicoletta","Noemi","Olga","Paola","Patrizia","Piera","Pierina","Raffaella","Rebecca","Renata","Rina","Rita","Roberta","Rosa","Rosanna","Rossana","Rossella","Sabrina","Sandra","Sara","Serena","Silvana","Silvia","Simona","Simonetta","Sofia","Sonia","Stefania","Susanna","Teresa","Tina","Tiziana","Tosca","Valentina",
"Valeria","Vanda","Vanessa","Vanna","Vera","Veronica","Vilma","Viola","Virginia","Vittoria"],"nl":["Ada","Arianne","Afke","Amanda","Amber","Amy","Aniek","Anita","Anja","Anna","Anne","Annelies","Annemarie","Annette","Anouk","Astrid","Aukje","Barbara","Bianca","Carla","Carlijn","Carolien","Chantal","Charlotte","Claudia","Dani\u00eblle","Debora","Diane","Dora","Eline","Elise","Ella","Ellen","Emma","Esmee","Evelien","Esther","Erica","Eva","Femke","Fleur","Floor","Froukje","Gea","Gerda","Hanna","Hanneke",
"Heleen","Hilde","Ilona","Ina","Inge","Ingrid","Iris","Isabel","Isabelle","Janneke","Jasmijn","Jeanine","Jennifer","Jessica","Johanna","Joke","Julia","Julie","Karen","Karin","Katja","Kim","Lara","Laura","Lena","Lianne","Lieke","Lilian","Linda","Lisa","Lisanne","Lotte","Louise","Maaike","Manon","Marga","Maria","Marissa","Marit","Marjolein","Martine","Marleen","Melissa","Merel","Miranda","Michelle","Mirjam","Mirthe","Naomi","Natalie","Nienke","Nina","Noortje","Olivia","Patricia","Paula","Paulien","Ramona",
"Ria","Rianne","Roos","Rosanne","Ruth","Sabrina","Sandra","Sanne","Sara","Saskia","Silvia","Sofia","Sophie","Sonja","Suzanne","Tamara","Tess","Tessa","Tineke","Valerie","Vanessa","Veerle","Vera","Victoria","Wendy","Willeke","Yvonne","Zo\u00eb"]}},lastNames:{"en":["Smith","Johnson","Williams","Jones","Brown","Davis","Miller","Wilson","Moore","Taylor","Anderson","Thomas","Jackson","White","Harris","Martin","Thompson","Garcia","Martinez","Robinson","Clark","Rodriguez","Lewis","Lee","Walker","Hall","Allen",
"Young","Hernandez","King","Wright","Lopez","Hill","Scott","Green","Adams","Baker","Gonzalez","Nelson","Carter","Mitchell","Perez","Roberts","Turner","Phillips","Campbell","Parker","Evans","Edwards","Collins","Stewart","Sanchez","Morris","Rogers","Reed","Cook","Morgan","Bell","Murphy","Bailey","Rivera","Cooper","Richardson","Cox","Howard","Ward","Torres","Peterson","Gray","Ramirez","James","Watson","Brooks","Kelly","Sanders","Price","Bennett","Wood","Barnes","Ross","Henderson","Coleman","Jenkins",
"Perry","Powell","Long","Patterson","Hughes","Flores","Washington","Butler","Simmons","Foster","Gonzales","Bryant","Alexander","Russell","Griffin","Diaz","Hayes","Myers","Ford","Hamilton","Graham","Sullivan","Wallace","Woods","Cole","West","Jordan","Owens","Reynolds","Fisher","Ellis","Harrison","Gibson","McDonald","Cruz","Marshall","Ortiz","Gomez","Murray","Freeman","Wells","Webb","Simpson","Stevens","Tucker","Porter","Hunter","Hicks","Crawford","Henry","Boyd","Mason","Morales","Kennedy","Warren",
"Dixon","Ramos","Reyes","Burns","Gordon","Shaw","Holmes","Rice","Robertson","Hunt","Black","Daniels","Palmer","Mills","Nichols","Grant","Knight","Ferguson","Rose","Stone","Hawkins","Dunn","Perkins","Hudson","Spencer","Gardner","Stephens","Payne","Pierce","Berry","Matthews","Arnold","Wagner","Willis","Ray","Watkins","Olson","Carroll","Duncan","Snyder","Hart","Cunningham","Bradley","Lane","Andrews","Ruiz","Harper","Fox","Riley","Armstrong","Carpenter","Weaver","Greene","Lawrence","Elliott","Chavez",
"Sims","Austin","Peters","Kelley","Franklin","Lawson","Fields","Gutierrez","Ryan","Schmidt","Carr","Vasquez","Castillo","Wheeler","Chapman","Oliver","Montgomery","Richards","Williamson","Johnston","Banks","Meyer","Bishop","McCoy","Howell","Alvarez","Morrison","Hansen","Fernandez","Garza","Harvey","Little","Burton","Stanley","Nguyen","George","Jacobs","Reid","Kim","Fuller","Lynch","Dean","Gilbert","Garrett","Romero","Welch","Larson","Frazier","Burke","Hanson","Day","Mendoza","Moreno","Bowman","Medina",
"Fowler","Brewer","Hoffman","Carlson","Silva","Pearson","Holland","Douglas","Fleming","Jensen","Vargas","Byrd","Davidson","Hopkins","May","Terry","Herrera","Wade","Soto","Walters","Curtis","Neal","Caldwell","Lowe","Jennings","Barnett","Graves","Jimenez","Horton","Shelton","Barrett","Obrien","Castro","Sutton","Gregory","McKinney","Lucas","Miles","Craig","Rodriquez","Chambers","Holt","Lambert","Fletcher","Watts","Bates","Hale","Rhodes","Pena","Beck","Newman","Haynes","McDaniel","Mendez","Bush","Vaughn",
"Parks","Dawson","Santiago","Norris","Hardy","Love","Steele","Curry","Powers","Schultz","Barker","Guzman","Page","Munoz","Ball","Keller","Chandler","Weber","Leonard","Walsh","Lyons","Ramsey","Wolfe","Schneider","Mullins","Benson","Sharp","Bowen","Daniel","Barber","Cummings","Hines","Baldwin","Griffith","Valdez","Hubbard","Salazar","Reeves","Warner","Stevenson","Burgess","Santos","Tate","Cross","Garner","Mann","Mack","Moss","Thornton","Dennis","McGee","Farmer","Delgado","Aguilar","Vega","Glover","Manning",
"Cohen","Harmon","Rodgers","Robbins","Newton","Todd","Blair","Higgins","Ingram","Reese","Cannon","Strickland","Townsend","Potter","Goodwin","Walton","Rowe","Hampton","Ortega","Patton","Swanson","Joseph","Francis","Goodman","Maldonado","Yates","Becker","Erickson","Hodges","Rios","Conner","Adkins","Webster","Norman","Malone","Hammond","Flowers","Cobb","Moody","Quinn","Blake","Maxwell","Pope","Floyd","Osborne","Paul","McCarthy","Guerrero","Lindsey","Estrada","Sandoval","Gibbs","Tyler","Gross","Fitzgerald",
"Stokes","Doyle","Sherman","Saunders","Wise","Colon","Gill","Alvarado","Greer","Padilla","Simon","Waters","Nunez","Ballard","Schwartz","McBride","Houston","Christensen","Klein","Pratt","Briggs","Parsons","McLaughlin","Zimmerman","French","Buchanan","Moran","Copeland","Roy","Pittman","Brady","McCormick","Holloway","Brock","Poole","Frank","Logan","Owen","Bass","Marsh","Drake","Wong","Jefferson","Park","Morton","Abbott","Sparks","Patrick","Norton","Huff","Clayton","Massey","Lloyd","Figueroa","Carson",
"Bowers","Roberson","Barton","Tran","Lamb","Harrington","Casey","Boone","Cortez","Clarke","Mathis","Singleton","Wilkins","Cain","Bryan","Underwood","Hogan","McKenzie","Collier","Luna","Phelps","McGuire","Allison","Bridges","Wilkerson","Nash","Summers","Atkins"],"it":["Acciai","Aglietti","Agostini","Agresti","Ahmed","Aiazzi","Albanese","Alberti","Alessi","Alfani","Alinari","Alterini","Amato","Ammannati","Ancillotti","Andrei","Andreini","Andreoni","Angeli","Anichini","Antonelli","Antonini","Arena",
"Ariani","Arnetoli","Arrighi","Baccani","Baccetti","Bacci","Bacherini","Badii","Baggiani","Baglioni","Bagni","Bagnoli","Baldassini","Baldi","Baldini","Ballerini","Balli","Ballini","Balloni","Bambi","Banchi","Bandinelli","Bandini","Bani","Barbetti","Barbieri","Barchielli","Bardazzi","Bardelli","Bardi","Barducci","Bargellini","Bargiacchi","Barni","Baroncelli","Baroncini","Barone","Baroni","Baronti","Bartalesi","Bartoletti","Bartoli","Bartolini","Bartoloni","Bartolozzi","Basagni","Basile","Bassi","Batacchi",
"Battaglia","Battaglini","Bausi","Becagli","Becattini","Becchi","Becucci","Bellandi","Bellesi","Belli","Bellini","Bellucci","Bencini","Benedetti","Benelli","Beni","Benini","Bensi","Benucci","Benvenuti","Berlincioni","Bernacchioni","Bernardi","Bernardini","Berni","Bernini","Bertelli","Berti","Bertini","Bessi","Betti","Bettini","Biagi","Biagini","Biagioni","Biagiotti","Biancalani","Bianchi","Bianchini","Bianco","Biffoli","Bigazzi","Bigi","Biliotti","Billi","Binazzi","Bindi","Bini","Biondi","Bizzarri",
"Bocci","Bogani","Bolognesi","Bonaiuti","Bonanni","Bonciani","Boncinelli","Bondi","Bonechi","Bongini","Boni","Bonini","Borchi","Boretti","Borghi","Borghini","Borgioli","Borri","Borselli","Boschi","Bottai","Bracci","Braccini","Brandi","Braschi","Bravi","Brazzini","Breschi","Brilli","Brizzi","Brogelli","Brogi","Brogioni","Brunelli","Brunetti","Bruni","Bruno","Brunori","Bruschi","Bucci","Bucciarelli","Buccioni","Bucelli","Bulli","Burberi","Burchi","Burgassi","Burroni","Bussotti","Buti","Caciolli","Caiani",
"Calabrese","Calamai","Calamandrei","Caldini","Calo'","Calonaci","Calosi","Calvelli","Cambi","Camiciottoli","Cammelli","Cammilli","Campolmi","Cantini","Capanni","Capecchi","Caponi","Cappelletti","Cappelli","Cappellini","Cappugi","Capretti","Caputo","Carbone","Carboni","Cardini","Carlesi","Carletti","Carli","Caroti","Carotti","Carrai","Carraresi","Carta","Caruso","Casalini","Casati","Caselli","Casini","Castagnoli","Castellani","Castelli","Castellucci","Catalano","Catarzi","Catelani","Cavaciocchi",
"Cavallaro","Cavallini","Cavicchi","Cavini","Ceccarelli","Ceccatelli","Ceccherelli","Ceccherini","Cecchi","Cecchini","Cecconi","Cei","Cellai","Celli","Cellini","Cencetti","Ceni","Cenni","Cerbai","Cesari","Ceseri","Checcacci","Checchi","Checcucci","Cheli","Chellini","Chen","Cheng","Cherici","Cherubini","Chiaramonti","Chiarantini","Chiarelli","Chiari","Chiarini","Chiarugi","Chiavacci","Chiesi","Chimenti","Chini","Chirici","Chiti","Ciabatti","Ciampi","Cianchi","Cianfanelli","Cianferoni","Ciani","Ciapetti",
"Ciappi","Ciardi","Ciatti","Cicali","Ciccone","Cinelli","Cini","Ciobanu","Ciolli","Cioni","Cipriani","Cirillo","Cirri","Ciucchi","Ciuffi","Ciulli","Ciullini","Clemente","Cocchi","Cognome","Coli","Collini","Colombo","Colzi","Comparini","Conforti","Consigli","Conte","Conti","Contini","Coppini","Coppola","Corsi","Corsini","Corti","Cortini","Cosi","Costa","Costantini","Costantino","Cozzi","Cresci","Crescioli","Cresti","Crini","Curradi","D'Agostino","D'Alessandro","D'Amico","D'Angelo","Daddi","Dainelli",
"Dallai","Danti","Davitti","De Angelis","De Luca","De Marco","De Rosa","De Santis","De Simone","De Vita","Degl'Innocenti","Degli Innocenti","Dei","Del Lungo","Del Re","Di Marco","Di Stefano","Dini","Diop","Dobre","Dolfi","Donati","Dondoli","Dong","Donnini","Ducci","Dumitru","Ermini","Esposito","Evangelisti","Fabbri","Fabbrini","Fabbrizzi","Fabbroni","Fabbrucci","Fabiani","Facchini","Faggi","Fagioli","Failli","Faini","Falciani","Falcini","Falcone","Fallani","Falorni","Falsini","Falugiani","Fancelli",
"Fanelli","Fanetti","Fanfani","Fani","Fantappie'","Fantechi","Fanti","Fantini","Fantoni","Farina","Fattori","Favilli","Fedi","Fei","Ferrante","Ferrara","Ferrari","Ferraro","Ferretti","Ferri","Ferrini","Ferroni","Fiaschi","Fibbi","Fiesoli","Filippi","Filippini","Fini","Fioravanti","Fiore","Fiorentini","Fiorini","Fissi","Focardi","Foggi","Fontana","Fontanelli","Fontani","Forconi","Formigli","Forte","Forti","Fortini","Fossati","Fossi","Francalanci","Franceschi","Franceschini","Franchi","Franchini","Franci",
"Francini","Francioni","Franco","Frassineti","Frati","Fratini","Frilli","Frizzi","Frosali","Frosini","Frullini","Fusco","Fusi","Gabbrielli","Gabellini","Gagliardi","Galanti","Galardi","Galeotti","Galletti","Galli","Gallo","Gallori","Gambacciani","Gargani","Garofalo","Garuglieri","Gashi","Gasperini","Gatti","Gelli","Gensini","Gentile","Gentili","Geri","Gerini","Gheri","Ghini","Giachetti","Giachi","Giacomelli","Gianassi","Giani","Giannelli","Giannetti","Gianni","Giannini","Giannoni","Giannotti","Giannozzi",
"Gigli","Giordano","Giorgetti","Giorgi","Giovacchini","Giovannelli","Giovannetti","Giovannini","Giovannoni","Giuliani","Giunti","Giuntini","Giusti","Gonnelli","Goretti","Gori","Gradi","Gramigni","Grassi","Grasso","Graziani","Grazzini","Greco","Grifoni","Grillo","Grimaldi","Grossi","Gualtieri","Guarducci","Guarino","Guarnieri","Guasti","Guerra","Guerri","Guerrini","Guidi","Guidotti","He","Hoxha","Hu","Huang","Iandelli","Ignesti","Innocenti","Jin","La Rosa","Lai","Landi","Landini","Lanini","Lapi","Lapini",
"Lari","Lascialfari","Lastrucci","Latini","Lazzeri","Lazzerini","Lelli","Lenzi","Leonardi","Leoncini","Leone","Leoni","Lepri","Li","Liao","Lin","Linari","Lippi","Lisi","Livi","Lombardi","Lombardini","Lombardo","Longo","Lopez","Lorenzi","Lorenzini","Lorini","Lotti","Lu","Lucchesi","Lucherini","Lunghi","Lupi","Madiai","Maestrini","Maffei","Maggi","Maggini","Magherini","Magini","Magnani","Magnelli","Magni","Magnolfi","Magrini","Malavolti","Malevolti","Manca","Mancini","Manetti","Manfredi","Mangani",
"Mannelli","Manni","Mannini","Mannucci","Manuelli","Manzini","Marcelli","Marchese","Marchetti","Marchi","Marchiani","Marchionni","Marconi","Marcucci","Margheri","Mari","Mariani","Marilli","Marinai","Marinari","Marinelli","Marini","Marino","Mariotti","Marsili","Martelli","Martinelli","Martini","Martino","Marzi","Masi","Masini","Masoni","Massai","Materassi","Mattei","Matteini","Matteucci","Matteuzzi","Mattioli","Mattolini","Matucci","Mauro","Mazzanti","Mazzei","Mazzetti","Mazzi","Mazzini","Mazzocchi",
"Mazzoli","Mazzoni","Mazzuoli","Meacci","Mecocci","Meini","Melani","Mele","Meli","Mengoni","Menichetti","Meoni","Merlini","Messeri","Messina","Meucci","Miccinesi","Miceli","Micheli","Michelini","Michelozzi","Migliori","Migliorini","Milani","Miniati","Misuri","Monaco","Montagnani","Montagni","Montanari","Montelatici","Monti","Montigiani","Montini","Morandi","Morandini","Morelli","Moretti","Morganti","Mori","Morini","Moroni","Morozzi","Mugnai","Mugnaini","Mustafa","Naldi","Naldini","Nannelli","Nanni",
"Nannini","Nannucci","Nardi","Nardini","Nardoni","Natali","Ndiaye","Nencetti","Nencini","Nencioni","Neri","Nesi","Nesti","Niccolai","Niccoli","Niccolini","Nigi","Nistri","Nocentini","Noferini","Novelli","Nucci","Nuti","Nutini","Oliva","Olivieri","Olmi","Orlandi","Orlandini","Orlando","Orsini","Ortolani","Ottanelli","Pacciani","Pace","Paci","Pacini","Pagani","Pagano","Paggetti","Pagliai","Pagni","Pagnini","Paladini","Palagi","Palchetti","Palloni","Palmieri","Palumbo","Pampaloni","Pancani","Pandolfi",
"Pandolfini","Panerai","Panichi","Paoletti","Paoli","Paolini","Papi","Papini","Papucci","Parenti","Parigi","Parisi","Parri","Parrini","Pasquini","Passeri","Pecchioli","Pecorini","Pellegrini","Pepi","Perini","Perrone","Peruzzi","Pesci","Pestelli","Petri","Petrini","Petrucci","Pettini","Pezzati","Pezzatini","Piani","Piazza","Piazzesi","Piazzini","Piccardi","Picchi","Piccini","Piccioli","Pieraccini","Pieraccioni","Pieralli","Pierattini","Pieri","Pierini","Pieroni","Pietrini","Pini","Pinna","Pinto","Pinzani",
"Pinzauti","Piras","Pisani","Pistolesi","Poggesi","Poggi","Poggiali","Poggiolini","Poli","Pollastri","Porciani","Pozzi","Pratellesi","Pratesi","Prosperi","Pruneti","Pucci","Puccini","Puccioni","Pugi","Pugliese","Puliti","Querci","Quercioli","Raddi","Radu","Raffaelli","Ragazzini","Ranfagni","Ranieri","Rastrelli","Raugei","Raveggi","Renai","Renzi","Rettori","Ricci","Ricciardi","Ridi","Ridolfi","Rigacci","Righi","Righini","Rinaldi","Risaliti","Ristori","Rizzo","Rocchi","Rocchini","Rogai","Romagnoli",
"Romanelli","Romani","Romano","Romei","Romeo","Romiti","Romoli","Romolini","Rontini","Rosati","Roselli","Rosi","Rossetti","Rossi","Rossini","Rovai","Ruggeri","Ruggiero","Russo","Sabatini","Saccardi","Sacchetti","Sacchi","Sacco","Salerno","Salimbeni","Salucci","Salvadori","Salvestrini","Salvi","Salvini","Sanesi","Sani","Sanna","Santi","Santini","Santoni","Santoro","Santucci","Sardi","Sarri","Sarti","Sassi","Sbolci","Scali","Scarpelli","Scarselli","Scopetani","Secci","Selvi","Senatori","Senesi","Serafini",
"Sereni","Serra","Sestini","Sguanci","Sieni","Signorini","Silvestri","Simoncini","Simonetti","Simoni","Singh","Sodi","Soldi","Somigli","Sorbi","Sorelli","Sorrentino","Sottili","Spina","Spinelli","Staccioli","Staderini","Stefanelli","Stefani","Stefanini","Stella","Susini","Tacchi","Tacconi","Taddei","Tagliaferri","Tamburini","Tanganelli","Tani","Tanini","Tapinassi","Tarchi","Tarchiani","Targioni","Tassi","Tassini","Tempesti","Terzani","Tesi","Testa","Testi","Tilli","Tinti","Tirinnanzi","Toccafondi",
"Tofanari","Tofani","Tognaccini","Tonelli","Tonini","Torelli","Torrini","Tosi","Toti","Tozzi","Trambusti","Trapani","Tucci","Turchi","Ugolini","Ulivi","Valente","Valenti","Valentini","Vangelisti","Vanni","Vannini","Vannoni","Vannozzi","Vannucchi","Vannucci","Ventura","Venturi","Venturini","Vestri","Vettori","Vichi","Viciani","Vieri","Vigiani","Vignoli","Vignolini","Vignozzi","Villani","Vinci","Visani","Vitale","Vitali","Viti","Viviani","Vivoli","Volpe","Volpi","Wang","Wu","Xu","Yang","Ye","Zagli",
"Zani","Zanieri","Zanobini","Zecchi","Zetti","Zhang","Zheng","Zhou","Zhu","Zingoni","Zini","Zoppi"],"nl":["Albers","Alblas","Appelman","Baars","Baas","Bakker","Blank","Bleeker","Blok","Blom","Boer","Boers","Boldewijn","Boon","Boot","Bos","Bosch","Bosma","Bosman","Bouma","Bouman","Bouwman","Brands","Brouwer","Burger","Buijs","Buitenhuis","Ceder","Cohen","Dekker","Dekkers","Dijkman","Dijkstra","Driessen","Drost","Engel","Evers","Faber","Franke","Gerritsen","Goedhart","Goossens","Groen","Groenenberg",
"Groot","Haan","Hart","Heemskerk","Hendriks","Hermans","Hoekstra","Hofman","Hopman","Huisman","Jacobs","Jansen","Janssen","Jonker","Jaspers","Keijzer","Klaassen","Klein","Koek","Koenders","Kok","Kool","Koopman","Koopmans","Koning","Koster","Kramer","Kroon","Kuijpers","Kuiper","Kuipers","Kurt","Koster","Kwakman","Los","Lubbers","Maas","Markus","Martens","Meijer","Mol","Molenaar","Mulder","Nieuwenhuis","Peeters","Peters","Pengel","Pieters","Pool","Post","Postma","Prins","Pronk","Reijnders","Rietveld",
"Roest","Roos","Sanders","Schaap","Scheffer","Schenk","Schilder","Schipper","Schmidt","Scholten","Schouten","Schut","Schutte","Schuurman","Simons","Smeets","Smit","Smits","Snel","Swinkels","Tas","Terpstra","Timmermans","Tol","Tromp","Troost","Valk","Veenstra","Veldkamp","Verbeek","Verheul","Verhoeven","Vermeer","Vermeulen","Verweij","Vink","Visser","Voorn","Vos","Wagenaar","Wiersema","Willems","Willemsen","Witteveen","Wolff","Wolters","Zijlstra","Zwart","de Beer","de Boer","de Bruijn","de Bruin",
"de Graaf","de Groot","de Haan","de Haas","de Jager","de Jong","de Jonge","de Koning","de Lange","de Leeuw","de Ridder","de Rooij","de Ruiter","de Vos","de Vries","de Waal","de Wit","de Zwart","van Beek","van Boven","van Dam","van Dijk","van Dongen","van Doorn","van Egmond","van Eijk","van Es","van Gelder","van Gelderen","van Houten","van Hulst","van Kempen","van Kesteren","van Leeuwen","van Loon","van Mill","van Noord","van Ommen","van Ommeren","van Oosten","van Oostveen","van Rijn","van Schaik",
"van Veen","van Vliet","van Wijk","van Wijngaarden","van den Poel","van de Pol","van den Ploeg","van de Ven","van den Berg","van den Bosch","van den Brink","van den Broek","van den Heuvel","van der Heijden","van der Horst","van der Hulst","van der Kroon","van der Laan","van der Linden","van der Meer","van der Meij","van der Meulen","van der Molen","van der Sluis","van der Spek","van der Veen","van der Velde","van der Velden","van der Vliet","van der Wal"]},countries:[{"name":"Afghanistan","abbreviation":"AF"},
{"name":"\u00c5land Islands","abbreviation":"AX"},{"name":"Albania","abbreviation":"AL"},{"name":"Algeria","abbreviation":"DZ"},{"name":"American Samoa","abbreviation":"AS"},{"name":"Andorra","abbreviation":"AD"},{"name":"Angola","abbreviation":"AO"},{"name":"Anguilla","abbreviation":"AI"},{"name":"Antarctica","abbreviation":"AQ"},{"name":"Antigua \x26 Barbuda","abbreviation":"AG"},{"name":"Argentina","abbreviation":"AR"},{"name":"Armenia","abbreviation":"AM"},{"name":"Aruba","abbreviation":"AW"},
{"name":"Ascension Island","abbreviation":"AC"},{"name":"Australia","abbreviation":"AU"},{"name":"Austria","abbreviation":"AT"},{"name":"Azerbaijan","abbreviation":"AZ"},{"name":"Bahamas","abbreviation":"BS"},{"name":"Bahrain","abbreviation":"BH"},{"name":"Bangladesh","abbreviation":"BD"},{"name":"Barbados","abbreviation":"BB"},{"name":"Belarus","abbreviation":"BY"},{"name":"Belgium","abbreviation":"BE"},{"name":"Belize","abbreviation":"BZ"},{"name":"Benin","abbreviation":"BJ"},{"name":"Bermuda",
"abbreviation":"BM"},{"name":"Bhutan","abbreviation":"BT"},{"name":"Bolivia","abbreviation":"BO"},{"name":"Bosnia \x26 Herzegovina","abbreviation":"BA"},{"name":"Botswana","abbreviation":"BW"},{"name":"Brazil","abbreviation":"BR"},{"name":"British Indian Ocean Territory","abbreviation":"IO"},{"name":"British Virgin Islands","abbreviation":"VG"},{"name":"Brunei","abbreviation":"BN"},{"name":"Bulgaria","abbreviation":"BG"},{"name":"Burkina Faso","abbreviation":"BF"},{"name":"Burundi","abbreviation":"BI"},
{"name":"Cambodia","abbreviation":"KH"},{"name":"Cameroon","abbreviation":"CM"},{"name":"Canada","abbreviation":"CA"},{"name":"Canary Islands","abbreviation":"IC"},{"name":"Cape Verde","abbreviation":"CV"},{"name":"Caribbean Netherlands","abbreviation":"BQ"},{"name":"Cayman Islands","abbreviation":"KY"},{"name":"Central African Republic","abbreviation":"CF"},{"name":"Ceuta \x26 Melilla","abbreviation":"EA"},{"name":"Chad","abbreviation":"TD"},{"name":"Chile","abbreviation":"CL"},{"name":"China","abbreviation":"CN"},
{"name":"Christmas Island","abbreviation":"CX"},{"name":"Cocos (Keeling) Islands","abbreviation":"CC"},{"name":"Colombia","abbreviation":"CO"},{"name":"Comoros","abbreviation":"KM"},{"name":"Congo - Brazzaville","abbreviation":"CG"},{"name":"Congo - Kinshasa","abbreviation":"CD"},{"name":"Cook Islands","abbreviation":"CK"},{"name":"Costa Rica","abbreviation":"CR"},{"name":"C\u00f4te d'Ivoire","abbreviation":"CI"},{"name":"Croatia","abbreviation":"HR"},{"name":"Cuba","abbreviation":"CU"},{"name":"Cura\u00e7ao",
"abbreviation":"CW"},{"name":"Cyprus","abbreviation":"CY"},{"name":"Czech Republic","abbreviation":"CZ"},{"name":"Denmark","abbreviation":"DK"},{"name":"Diego Garcia","abbreviation":"DG"},{"name":"Djibouti","abbreviation":"DJ"},{"name":"Dominica","abbreviation":"DM"},{"name":"Dominican Republic","abbreviation":"DO"},{"name":"Ecuador","abbreviation":"EC"},{"name":"Egypt","abbreviation":"EG"},{"name":"El Salvador","abbreviation":"SV"},{"name":"Equatorial Guinea","abbreviation":"GQ"},{"name":"Eritrea",
"abbreviation":"ER"},{"name":"Estonia","abbreviation":"EE"},{"name":"Ethiopia","abbreviation":"ET"},{"name":"Falkland Islands","abbreviation":"FK"},{"name":"Faroe Islands","abbreviation":"FO"},{"name":"Fiji","abbreviation":"FJ"},{"name":"Finland","abbreviation":"FI"},{"name":"France","abbreviation":"FR"},{"name":"French Guiana","abbreviation":"GF"},{"name":"French Polynesia","abbreviation":"PF"},{"name":"French Southern Territories","abbreviation":"TF"},{"name":"Gabon","abbreviation":"GA"},{"name":"Gambia",
"abbreviation":"GM"},{"name":"Georgia","abbreviation":"GE"},{"name":"Germany","abbreviation":"DE"},{"name":"Ghana","abbreviation":"GH"},{"name":"Gibraltar","abbreviation":"GI"},{"name":"Greece","abbreviation":"GR"},{"name":"Greenland","abbreviation":"GL"},{"name":"Grenada","abbreviation":"GD"},{"name":"Guadeloupe","abbreviation":"GP"},{"name":"Guam","abbreviation":"GU"},{"name":"Guatemala","abbreviation":"GT"},{"name":"Guernsey","abbreviation":"GG"},{"name":"Guinea","abbreviation":"GN"},{"name":"Guinea-Bissau",
"abbreviation":"GW"},{"name":"Guyana","abbreviation":"GY"},{"name":"Haiti","abbreviation":"HT"},{"name":"Honduras","abbreviation":"HN"},{"name":"Hong Kong SAR China","abbreviation":"HK"},{"name":"Hungary","abbreviation":"HU"},{"name":"Iceland","abbreviation":"IS"},{"name":"India","abbreviation":"IN"},{"name":"Indonesia","abbreviation":"ID"},{"name":"Iran","abbreviation":"IR"},{"name":"Iraq","abbreviation":"IQ"},{"name":"Ireland","abbreviation":"IE"},{"name":"Isle of Man","abbreviation":"IM"},{"name":"Israel",
"abbreviation":"IL"},{"name":"Italy","abbreviation":"IT"},{"name":"Jamaica","abbreviation":"JM"},{"name":"Japan","abbreviation":"JP"},{"name":"Jersey","abbreviation":"JE"},{"name":"Jordan","abbreviation":"JO"},{"name":"Kazakhstan","abbreviation":"KZ"},{"name":"Kenya","abbreviation":"KE"},{"name":"Kiribati","abbreviation":"KI"},{"name":"Kosovo","abbreviation":"XK"},{"name":"Kuwait","abbreviation":"KW"},{"name":"Kyrgyzstan","abbreviation":"KG"},{"name":"Laos","abbreviation":"LA"},{"name":"Latvia","abbreviation":"LV"},
{"name":"Lebanon","abbreviation":"LB"},{"name":"Lesotho","abbreviation":"LS"},{"name":"Liberia","abbreviation":"LR"},{"name":"Libya","abbreviation":"LY"},{"name":"Liechtenstein","abbreviation":"LI"},{"name":"Lithuania","abbreviation":"LT"},{"name":"Luxembourg","abbreviation":"LU"},{"name":"Macau SAR China","abbreviation":"MO"},{"name":"Macedonia","abbreviation":"MK"},{"name":"Madagascar","abbreviation":"MG"},{"name":"Malawi","abbreviation":"MW"},{"name":"Malaysia","abbreviation":"MY"},{"name":"Maldives",
"abbreviation":"MV"},{"name":"Mali","abbreviation":"ML"},{"name":"Malta","abbreviation":"MT"},{"name":"Marshall Islands","abbreviation":"MH"},{"name":"Martinique","abbreviation":"MQ"},{"name":"Mauritania","abbreviation":"MR"},{"name":"Mauritius","abbreviation":"MU"},{"name":"Mayotte","abbreviation":"YT"},{"name":"Mexico","abbreviation":"MX"},{"name":"Micronesia","abbreviation":"FM"},{"name":"Moldova","abbreviation":"MD"},{"name":"Monaco","abbreviation":"MC"},{"name":"Mongolia","abbreviation":"MN"},
{"name":"Montenegro","abbreviation":"ME"},{"name":"Montserrat","abbreviation":"MS"},{"name":"Morocco","abbreviation":"MA"},{"name":"Mozambique","abbreviation":"MZ"},{"name":"Myanmar (Burma)","abbreviation":"MM"},{"name":"Namibia","abbreviation":"NA"},{"name":"Nauru","abbreviation":"NR"},{"name":"Nepal","abbreviation":"NP"},{"name":"Netherlands","abbreviation":"NL"},{"name":"New Caledonia","abbreviation":"NC"},{"name":"New Zealand","abbreviation":"NZ"},{"name":"Nicaragua","abbreviation":"NI"},{"name":"Niger",
"abbreviation":"NE"},{"name":"Nigeria","abbreviation":"NG"},{"name":"Niue","abbreviation":"NU"},{"name":"Norfolk Island","abbreviation":"NF"},{"name":"North Korea","abbreviation":"KP"},{"name":"Northern Mariana Islands","abbreviation":"MP"},{"name":"Norway","abbreviation":"NO"},{"name":"Oman","abbreviation":"OM"},{"name":"Pakistan","abbreviation":"PK"},{"name":"Palau","abbreviation":"PW"},{"name":"Palestinian Territories","abbreviation":"PS"},{"name":"Panama","abbreviation":"PA"},{"name":"Papua New Guinea",
"abbreviation":"PG"},{"name":"Paraguay","abbreviation":"PY"},{"name":"Peru","abbreviation":"PE"},{"name":"Philippines","abbreviation":"PH"},{"name":"Pitcairn Islands","abbreviation":"PN"},{"name":"Poland","abbreviation":"PL"},{"name":"Portugal","abbreviation":"PT"},{"name":"Puerto Rico","abbreviation":"PR"},{"name":"Qatar","abbreviation":"QA"},{"name":"R\u00e9union","abbreviation":"RE"},{"name":"Romania","abbreviation":"RO"},{"name":"Russia","abbreviation":"RU"},{"name":"Rwanda","abbreviation":"RW"},
{"name":"Samoa","abbreviation":"WS"},{"name":"San Marino","abbreviation":"SM"},{"name":"S\u00e3o Tom\u00e9 and Pr\u00edncipe","abbreviation":"ST"},{"name":"Saudi Arabia","abbreviation":"SA"},{"name":"Senegal","abbreviation":"SN"},{"name":"Serbia","abbreviation":"RS"},{"name":"Seychelles","abbreviation":"SC"},{"name":"Sierra Leone","abbreviation":"SL"},{"name":"Singapore","abbreviation":"SG"},{"name":"Sint Maarten","abbreviation":"SX"},{"name":"Slovakia","abbreviation":"SK"},{"name":"Slovenia","abbreviation":"SI"},
{"name":"Solomon Islands","abbreviation":"SB"},{"name":"Somalia","abbreviation":"SO"},{"name":"South Africa","abbreviation":"ZA"},{"name":"South Georgia \x26 South Sandwich Islands","abbreviation":"GS"},{"name":"South Korea","abbreviation":"KR"},{"name":"South Sudan","abbreviation":"SS"},{"name":"Spain","abbreviation":"ES"},{"name":"Sri Lanka","abbreviation":"LK"},{"name":"St. Barth\u00e9lemy","abbreviation":"BL"},{"name":"St. Helena","abbreviation":"SH"},{"name":"St. Kitts \x26 Nevis","abbreviation":"KN"},
{"name":"St. Lucia","abbreviation":"LC"},{"name":"St. Martin","abbreviation":"MF"},{"name":"St. Pierre \x26 Miquelon","abbreviation":"PM"},{"name":"St. Vincent \x26 Grenadines","abbreviation":"VC"},{"name":"Sudan","abbreviation":"SD"},{"name":"Suriname","abbreviation":"SR"},{"name":"Svalbard \x26 Jan Mayen","abbreviation":"SJ"},{"name":"Swaziland","abbreviation":"SZ"},{"name":"Sweden","abbreviation":"SE"},{"name":"Switzerland","abbreviation":"CH"},{"name":"Syria","abbreviation":"SY"},{"name":"Taiwan",
"abbreviation":"TW"},{"name":"Tajikistan","abbreviation":"TJ"},{"name":"Tanzania","abbreviation":"TZ"},{"name":"Thailand","abbreviation":"TH"},{"name":"Timor-Leste","abbreviation":"TL"},{"name":"Togo","abbreviation":"TG"},{"name":"Tokelau","abbreviation":"TK"},{"name":"Tonga","abbreviation":"TO"},{"name":"Trinidad \x26 Tobago","abbreviation":"TT"},{"name":"Tristan da Cunha","abbreviation":"TA"},{"name":"Tunisia","abbreviation":"TN"},{"name":"Turkey","abbreviation":"TR"},{"name":"Turkmenistan","abbreviation":"TM"},
{"name":"Turks \x26 Caicos Islands","abbreviation":"TC"},{"name":"Tuvalu","abbreviation":"TV"},{"name":"U.S. Outlying Islands","abbreviation":"UM"},{"name":"U.S. Virgin Islands","abbreviation":"VI"},{"name":"Uganda","abbreviation":"UG"},{"name":"Ukraine","abbreviation":"UA"},{"name":"United Arab Emirates","abbreviation":"AE"},{"name":"United Kingdom","abbreviation":"GB"},{"name":"United States","abbreviation":"US"},{"name":"Uruguay","abbreviation":"UY"},{"name":"Uzbekistan","abbreviation":"UZ"},{"name":"Vanuatu",
"abbreviation":"VU"},{"name":"Vatican City","abbreviation":"VA"},{"name":"Venezuela","abbreviation":"VE"},{"name":"Vietnam","abbreviation":"VN"},{"name":"Wallis \x26 Futuna","abbreviation":"WF"},{"name":"Western Sahara","abbreviation":"EH"},{"name":"Yemen","abbreviation":"YE"},{"name":"Zambia","abbreviation":"ZM"},{"name":"Zimbabwe","abbreviation":"ZW"}],counties:{"uk":[{name:"Bath and North East Somerset"},{name:"Aberdeenshire"},{name:"Anglesey"},{name:"Angus"},{name:"Bedford"},{name:"Blackburn with Darwen"},
{name:"Blackpool"},{name:"Bournemouth"},{name:"Bracknell Forest"},{name:"Brighton \x26 Hove"},{name:"Bristol"},{name:"Buckinghamshire"},{name:"Cambridgeshire"},{name:"Carmarthenshire"},{name:"Central Bedfordshire"},{name:"Ceredigion"},{name:"Cheshire East"},{name:"Cheshire West and Chester"},{name:"Clackmannanshire"},{name:"Conwy"},{name:"Cornwall"},{name:"County Antrim"},{name:"County Armagh"},{name:"County Down"},{name:"County Durham"},{name:"County Fermanagh"},{name:"County Londonderry"},{name:"County Tyrone"},
{name:"Cumbria"},{name:"Darlington"},{name:"Denbighshire"},{name:"Derby"},{name:"Derbyshire"},{name:"Devon"},{name:"Dorset"},{name:"Dumfries and Galloway"},{name:"Dundee"},{name:"East Lothian"},{name:"East Riding of Yorkshire"},{name:"East Sussex"},{name:"Edinburgh?"},{name:"Essex"},{name:"Falkirk"},{name:"Fife"},{name:"Flintshire"},{name:"Gloucestershire"},{name:"Greater London"},{name:"Greater Manchester"},{name:"Gwent"},{name:"Gwynedd"},{name:"Halton"},{name:"Hampshire"},{name:"Hartlepool"},{name:"Herefordshire"},
{name:"Hertfordshire"},{name:"Highlands"},{name:"Hull"},{name:"Isle of Wight"},{name:"Isles of Scilly"},{name:"Kent"},{name:"Lancashire"},{name:"Leicester"},{name:"Leicestershire"},{name:"Lincolnshire"},{name:"Lothian"},{name:"Luton"},{name:"Medway"},{name:"Merseyside"},{name:"Mid Glamorgan"},{name:"Middlesbrough"},{name:"Milton Keynes"},{name:"Monmouthshire"},{name:"Moray"},{name:"Norfolk"},{name:"North East Lincolnshire"},{name:"North Lincolnshire"},{name:"North Somerset"},{name:"North Yorkshire"},
{name:"Northamptonshire"},{name:"Northumberland"},{name:"Nottingham"},{name:"Nottinghamshire"},{name:"Oxfordshire"},{name:"Pembrokeshire"},{name:"Perth and Kinross"},{name:"Peterborough"},{name:"Plymouth"},{name:"Poole"},{name:"Portsmouth"},{name:"Powys"},{name:"Reading"},{name:"Redcar and Cleveland"},{name:"Rutland"},{name:"Scottish Borders"},{name:"Shropshire"},{name:"Slough"},{name:"Somerset"},{name:"South Glamorgan"},{name:"South Gloucestershire"},{name:"South Yorkshire"},{name:"Southampton"},
{name:"Southend-on-Sea"},{name:"Staffordshire"},{name:"Stirlingshire"},{name:"Stockton-on-Tees"},{name:"Stoke-on-Trent"},{name:"Strathclyde"},{name:"Suffolk"},{name:"Surrey"},{name:"Swindon"},{name:"Telford and Wrekin"},{name:"Thurrock"},{name:"Torbay"},{name:"Tyne and Wear"},{name:"Warrington"},{name:"Warwickshire"},{name:"West Berkshire"},{name:"West Glamorgan"},{name:"West Lothian"},{name:"West Midlands"},{name:"West Sussex"},{name:"West Yorkshire"},{name:"Western Isles"},{name:"Wiltshire"},{name:"Windsor and Maidenhead"},
{name:"Wokingham"},{name:"Worcestershire"},{name:"Wrexham"},{name:"York"}]},provinces:{"ca":[{name:"Alberta",abbreviation:"AB"},{name:"British Columbia",abbreviation:"BC"},{name:"Manitoba",abbreviation:"MB"},{name:"New Brunswick",abbreviation:"NB"},{name:"Newfoundland and Labrador",abbreviation:"NL"},{name:"Nova Scotia",abbreviation:"NS"},{name:"Ontario",abbreviation:"ON"},{name:"Prince Edward Island",abbreviation:"PE"},{name:"Quebec",abbreviation:"QC"},{name:"Saskatchewan",abbreviation:"SK"},{name:"Northwest Territories",
abbreviation:"NT"},{name:"Nunavut",abbreviation:"NU"},{name:"Yukon",abbreviation:"YT"}],"it":[{name:"Agrigento",abbreviation:"AG",code:84},{name:"Alessandria",abbreviation:"AL",code:6},{name:"Ancona",abbreviation:"AN",code:42},{name:"Aosta",abbreviation:"AO",code:7},{name:"L'Aquila",abbreviation:"AQ",code:66},{name:"Arezzo",abbreviation:"AR",code:51},{name:"Ascoli-Piceno",abbreviation:"AP",code:44},{name:"Asti",abbreviation:"AT",code:5},{name:"Avellino",abbreviation:"AV",code:64},{name:"Bari",abbreviation:"BA",
code:72},{name:"Barletta-Andria-Trani",abbreviation:"BT",code:72},{name:"Belluno",abbreviation:"BL",code:25},{name:"Benevento",abbreviation:"BN",code:62},{name:"Bergamo",abbreviation:"BG",code:16},{name:"Biella",abbreviation:"BI",code:96},{name:"Bologna",abbreviation:"BO",code:37},{name:"Bolzano",abbreviation:"BZ",code:21},{name:"Brescia",abbreviation:"BS",code:17},{name:"Brindisi",abbreviation:"BR",code:74},{name:"Cagliari",abbreviation:"CA",code:92},{name:"Caltanissetta",abbreviation:"CL",code:85},
{name:"Campobasso",abbreviation:"CB",code:70},{name:"Carbonia Iglesias",abbreviation:"CI",code:70},{name:"Caserta",abbreviation:"CE",code:61},{name:"Catania",abbreviation:"CT",code:87},{name:"Catanzaro",abbreviation:"CZ",code:79},{name:"Chieti",abbreviation:"CH",code:69},{name:"Como",abbreviation:"CO",code:13},{name:"Cosenza",abbreviation:"CS",code:78},{name:"Cremona",abbreviation:"CR",code:19},{name:"Crotone",abbreviation:"KR",code:101},{name:"Cuneo",abbreviation:"CN",code:4},{name:"Enna",abbreviation:"EN",
code:86},{name:"Fermo",abbreviation:"FM",code:86},{name:"Ferrara",abbreviation:"FE",code:38},{name:"Firenze",abbreviation:"FI",code:48},{name:"Foggia",abbreviation:"FG",code:71},{name:"Forli-Cesena",abbreviation:"FC",code:71},{name:"Frosinone",abbreviation:"FR",code:60},{name:"Genova",abbreviation:"GE",code:10},{name:"Gorizia",abbreviation:"GO",code:31},{name:"Grosseto",abbreviation:"GR",code:53},{name:"Imperia",abbreviation:"IM",code:8},{name:"Isernia",abbreviation:"IS",code:94},{name:"La-Spezia",
abbreviation:"SP",code:66},{name:"Latina",abbreviation:"LT",code:59},{name:"Lecce",abbreviation:"LE",code:75},{name:"Lecco",abbreviation:"LC",code:97},{name:"Livorno",abbreviation:"LI",code:49},{name:"Lodi",abbreviation:"LO",code:98},{name:"Lucca",abbreviation:"LU",code:46},{name:"Macerata",abbreviation:"MC",code:43},{name:"Mantova",abbreviation:"MN",code:20},{name:"Massa-Carrara",abbreviation:"MS",code:45},{name:"Matera",abbreviation:"MT",code:77},{name:"Medio Campidano",abbreviation:"VS",code:77},
{name:"Messina",abbreviation:"ME",code:83},{name:"Milano",abbreviation:"MI",code:15},{name:"Modena",abbreviation:"MO",code:36},{name:"Monza-Brianza",abbreviation:"MB",code:36},{name:"Napoli",abbreviation:"NA",code:63},{name:"Novara",abbreviation:"NO",code:3},{name:"Nuoro",abbreviation:"NU",code:91},{name:"Ogliastra",abbreviation:"OG",code:91},{name:"Olbia Tempio",abbreviation:"OT",code:91},{name:"Oristano",abbreviation:"OR",code:95},{name:"Padova",abbreviation:"PD",code:28},{name:"Palermo",abbreviation:"PA",
code:82},{name:"Parma",abbreviation:"PR",code:34},{name:"Pavia",abbreviation:"PV",code:18},{name:"Perugia",abbreviation:"PG",code:54},{name:"Pesaro-Urbino",abbreviation:"PU",code:41},{name:"Pescara",abbreviation:"PE",code:68},{name:"Piacenza",abbreviation:"PC",code:33},{name:"Pisa",abbreviation:"PI",code:50},{name:"Pistoia",abbreviation:"PT",code:47},{name:"Pordenone",abbreviation:"PN",code:93},{name:"Potenza",abbreviation:"PZ",code:76},{name:"Prato",abbreviation:"PO",code:100},{name:"Ragusa",abbreviation:"RG",
code:88},{name:"Ravenna",abbreviation:"RA",code:39},{name:"Reggio-Calabria",abbreviation:"RC",code:35},{name:"Reggio-Emilia",abbreviation:"RE",code:35},{name:"Rieti",abbreviation:"RI",code:57},{name:"Rimini",abbreviation:"RN",code:99},{name:"Roma",abbreviation:"Roma",code:58},{name:"Rovigo",abbreviation:"RO",code:29},{name:"Salerno",abbreviation:"SA",code:65},{name:"Sassari",abbreviation:"SS",code:90},{name:"Savona",abbreviation:"SV",code:9},{name:"Siena",abbreviation:"SI",code:52},{name:"Siracusa",
abbreviation:"SR",code:89},{name:"Sondrio",abbreviation:"SO",code:14},{name:"Taranto",abbreviation:"TA",code:73},{name:"Teramo",abbreviation:"TE",code:67},{name:"Terni",abbreviation:"TR",code:55},{name:"Torino",abbreviation:"TO",code:1},{name:"Trapani",abbreviation:"TP",code:81},{name:"Trento",abbreviation:"TN",code:22},{name:"Treviso",abbreviation:"TV",code:26},{name:"Trieste",abbreviation:"TS",code:32},{name:"Udine",abbreviation:"UD",code:30},{name:"Varese",abbreviation:"VA",code:12},{name:"Venezia",
abbreviation:"VE",code:27},{name:"Verbania",abbreviation:"VB",code:27},{name:"Vercelli",abbreviation:"VC",code:2},{name:"Verona",abbreviation:"VR",code:23},{name:"Vibo-Valentia",abbreviation:"VV",code:102},{name:"Vicenza",abbreviation:"VI",code:24},{name:"Viterbo",abbreviation:"VT",code:56}]},nationalities:[{name:"Afghan"},{name:"Albanian"},{name:"Algerian"},{name:"American"},{name:"Andorran"},{name:"Angolan"},{name:"Antiguans"},{name:"Argentinean"},{name:"Armenian"},{name:"Australian"},{name:"Austrian"},
{name:"Azerbaijani"},{name:"Bahami"},{name:"Bahraini"},{name:"Bangladeshi"},{name:"Barbadian"},{name:"Barbudans"},{name:"Batswana"},{name:"Belarusian"},{name:"Belgian"},{name:"Belizean"},{name:"Beninese"},{name:"Bhutanese"},{name:"Bolivian"},{name:"Bosnian"},{name:"Brazilian"},{name:"British"},{name:"Bruneian"},{name:"Bulgarian"},{name:"Burkinabe"},{name:"Burmese"},{name:"Burundian"},{name:"Cambodian"},{name:"Cameroonian"},{name:"Canadian"},{name:"Cape Verdean"},{name:"Central African"},{name:"Chadian"},
{name:"Chilean"},{name:"Chinese"},{name:"Colombian"},{name:"Comoran"},{name:"Congolese"},{name:"Costa Rican"},{name:"Croatian"},{name:"Cuban"},{name:"Cypriot"},{name:"Czech"},{name:"Danish"},{name:"Djibouti"},{name:"Dominican"},{name:"Dutch"},{name:"East Timorese"},{name:"Ecuadorean"},{name:"Egyptian"},{name:"Emirian"},{name:"Equatorial Guinean"},{name:"Eritrean"},{name:"Estonian"},{name:"Ethiopian"},{name:"Fijian"},{name:"Filipino"},{name:"Finnish"},{name:"French"},{name:"Gabonese"},{name:"Gambian"},
{name:"Georgian"},{name:"German"},{name:"Ghanaian"},{name:"Greek"},{name:"Grenadian"},{name:"Guatemalan"},{name:"Guinea-Bissauan"},{name:"Guinean"},{name:"Guyanese"},{name:"Haitian"},{name:"Herzegovinian"},{name:"Honduran"},{name:"Hungarian"},{name:"I-Kiribati"},{name:"Icelander"},{name:"Indian"},{name:"Indonesian"},{name:"Iranian"},{name:"Iraqi"},{name:"Irish"},{name:"Israeli"},{name:"Italian"},{name:"Ivorian"},{name:"Jamaican"},{name:"Japanese"},{name:"Jordanian"},{name:"Kazakhstani"},{name:"Kenyan"},
{name:"Kittian and Nevisian"},{name:"Kuwaiti"},{name:"Kyrgyz"},{name:"Laotian"},{name:"Latvian"},{name:"Lebanese"},{name:"Liberian"},{name:"Libyan"},{name:"Liechtensteiner"},{name:"Lithuanian"},{name:"Luxembourger"},{name:"Macedonian"},{name:"Malagasy"},{name:"Malawian"},{name:"Malaysian"},{name:"Maldivan"},{name:"Malian"},{name:"Maltese"},{name:"Marshallese"},{name:"Mauritanian"},{name:"Mauritian"},{name:"Mexican"},{name:"Micronesian"},{name:"Moldovan"},{name:"Monacan"},{name:"Mongolian"},{name:"Moroccan"},
{name:"Mosotho"},{name:"Motswana"},{name:"Mozambican"},{name:"Namibian"},{name:"Nauruan"},{name:"Nepalese"},{name:"New Zealander"},{name:"Nicaraguan"},{name:"Nigerian"},{name:"Nigerien"},{name:"North Korean"},{name:"Northern Irish"},{name:"Norwegian"},{name:"Omani"},{name:"Pakistani"},{name:"Palauan"},{name:"Panamanian"},{name:"Papua New Guinean"},{name:"Paraguayan"},{name:"Peruvian"},{name:"Polish"},{name:"Portuguese"},{name:"Qatari"},{name:"Romani"},{name:"Russian"},{name:"Rwandan"},{name:"Saint Lucian"},
{name:"Salvadoran"},{name:"Samoan"},{name:"San Marinese"},{name:"Sao Tomean"},{name:"Saudi"},{name:"Scottish"},{name:"Senegalese"},{name:"Serbian"},{name:"Seychellois"},{name:"Sierra Leonean"},{name:"Singaporean"},{name:"Slovakian"},{name:"Slovenian"},{name:"Solomon Islander"},{name:"Somali"},{name:"South African"},{name:"South Korean"},{name:"Spanish"},{name:"Sri Lankan"},{name:"Sudanese"},{name:"Surinamer"},{name:"Swazi"},{name:"Swedish"},{name:"Swiss"},{name:"Syrian"},{name:"Taiwanese"},{name:"Tajik"},
{name:"Tanzanian"},{name:"Thai"},{name:"Togolese"},{name:"Tongan"},{name:"Trinidadian or Tobagonian"},{name:"Tunisian"},{name:"Turkish"},{name:"Tuvaluan"},{name:"Ugandan"},{name:"Ukrainian"},{name:"Uruguaya"},{name:"Uzbekistani"},{name:"Venezuela"},{name:"Vietnamese"},{name:"Wels"},{name:"Yemenit"},{name:"Zambia"},{name:"Zimbabwe"}],locale_languages:["aa","ab","ae","af","ak","am","an","ar","as","av","ay","az","ba","be","bg","bh","bi","bm","bn","bo","br","bs","ca","ce","ch","co","cr","cs","cu","cv",
"cy","da","de","dv","dz","ee","el","en","eo","es","et","eu","fa","ff","fi","fj","fo","fr","fy","ga","gd","gl","gn","gu","gv","ha","he","hi","ho","hr","ht","hu","hy","hz","ia","id","ie","ig","ii","ik","io","is","it","iu","ja","jv","ka","kg","ki","kj","kk","kl","km","kn","ko","kr","ks","ku","kv","kw","ky","la","lb","lg","li","ln","lo","lt","lu","lv","mg","mh","mi","mk","ml","mn","mr","ms","mt","my","na","nb","nd","ne","ng","nl","nn","no","nr","nv","ny","oc","oj","om","or","os","pa","pi","pl","ps","pt",
"qu","rm","rn","ro","ru","rw","sa","sc","sd","se","sg","si","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tg","th","ti","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","wo","xh","yi","yo","za","zh","zu"],locale_regions:["agq-CM","asa-TZ","ast-ES","bas-CM","bem-ZM","bez-TZ","brx-IN","cgg-UG","chr-US","dav-KE","dje-NE","dsb-DE","dua-CM","dyo-SN","ebu-KE","ewo-CM","fil-PH","fur-IT","gsw-CH","gsw-FR","gsw-LI","guz-KE","haw-US","hsb-DE","jgo-CM",
"jmc-TZ","kab-DZ","kam-KE","kde-TZ","kea-CV","khq-ML","kkj-CM","kln-KE","kok-IN","ksb-TZ","ksf-CM","ksh-DE","lag-TZ","lkt-US","luo-KE","luy-KE","mas-KE","mas-TZ","mer-KE","mfe-MU","mgh-MZ","mgo-CM","mua-CM","naq-NA","nmg-CM","nnh-CM","nus-SD","nyn-UG","rof-TZ","rwk-TZ","sah-RU","saq-KE","sbp-TZ","seh-MZ","ses-ML","shi-Latn","shi-Latn-MA","shi-Tfng","shi-Tfng-MA","smn-FI","teo-KE","teo-UG","twq-NE","tzm-Latn","tzm-Latn-MA","vai-Latn","vai-Latn-LR","vai-Vaii","vai-Vaii-LR","vun-TZ","wae-CH","xog-UG",
"yav-CM","zgh-MA","af-NA","af-ZA","ak-GH","am-ET","ar-001","ar-AE","ar-BH","ar-DJ","ar-DZ","ar-EG","ar-EH","ar-ER","ar-IL","ar-IQ","ar-JO","ar-KM","ar-KW","ar-LB","ar-LY","ar-MA","ar-MR","ar-OM","ar-PS","ar-QA","ar-SA","ar-SD","ar-SO","ar-SS","ar-SY","ar-TD","ar-TN","ar-YE","as-IN","az-Cyrl","az-Cyrl-AZ","az-Latn","az-Latn-AZ","be-BY","bg-BG","bm-Latn","bm-Latn-ML","bn-BD","bn-IN","bo-CN","bo-IN","br-FR","bs-Cyrl","bs-Cyrl-BA","bs-Latn","bs-Latn-BA","ca-AD","ca-ES","ca-ES-VALENCIA","ca-FR","ca-IT",
"cs-CZ","cy-GB","da-DK","da-GL","de-AT","de-BE","de-CH","de-DE","de-LI","de-LU","dz-BT","ee-GH","ee-TG","el-CY","el-GR","en-001","en-150","en-AG","en-AI","en-AS","en-AU","en-BB","en-BE","en-BM","en-BS","en-BW","en-BZ","en-CA","en-CC","en-CK","en-CM","en-CX","en-DG","en-DM","en-ER","en-FJ","en-FK","en-FM","en-GB","en-GD","en-GG","en-GH","en-GI","en-GM","en-GU","en-GY","en-HK","en-IE","en-IM","en-IN","en-IO","en-JE","en-JM","en-KE","en-KI","en-KN","en-KY","en-LC","en-LR","en-LS","en-MG","en-MH","en-MO",
"en-MP","en-MS","en-MT","en-MU","en-MW","en-MY","en-NA","en-NF","en-NG","en-NR","en-NU","en-NZ","en-PG","en-PH","en-PK","en-PN","en-PR","en-PW","en-RW","en-SB","en-SC","en-SD","en-SG","en-SH","en-SL","en-SS","en-SX","en-SZ","en-TC","en-TK","en-TO","en-TT","en-TV","en-TZ","en-UG","en-UM","en-US","en-US-POSIX","en-VC","en-VG","en-VI","en-VU","en-WS","en-ZA","en-ZM","en-ZW","eo-001","es-419","es-AR","es-BO","es-CL","es-CO","es-CR","es-CU","es-DO","es-EA","es-EC","es-ES","es-GQ","es-GT","es-HN","es-IC",
"es-MX","es-NI","es-PA","es-PE","es-PH","es-PR","es-PY","es-SV","es-US","es-UY","es-VE","et-EE","eu-ES","fa-AF","fa-IR","ff-CM","ff-GN","ff-MR","ff-SN","fi-FI","fo-FO","fr-BE","fr-BF","fr-BI","fr-BJ","fr-BL","fr-CA","fr-CD","fr-CF","fr-CG","fr-CH","fr-CI","fr-CM","fr-DJ","fr-DZ","fr-FR","fr-GA","fr-GF","fr-GN","fr-GP","fr-GQ","fr-HT","fr-KM","fr-LU","fr-MA","fr-MC","fr-MF","fr-MG","fr-ML","fr-MQ","fr-MR","fr-MU","fr-NC","fr-NE","fr-PF","fr-PM","fr-RE","fr-RW","fr-SC","fr-SN","fr-SY","fr-TD","fr-TG",
"fr-TN","fr-VU","fr-WF","fr-YT","fy-NL","ga-IE","gd-GB","gl-ES","gu-IN","gv-IM","ha-Latn","ha-Latn-GH","ha-Latn-NE","ha-Latn-NG","he-IL","hi-IN","hr-BA","hr-HR","hu-HU","hy-AM","id-ID","ig-NG","ii-CN","is-IS","it-CH","it-IT","it-SM","ja-JP","ka-GE","ki-KE","kk-Cyrl","kk-Cyrl-KZ","kl-GL","km-KH","kn-IN","ko-KP","ko-KR","ks-Arab","ks-Arab-IN","kw-GB","ky-Cyrl","ky-Cyrl-KG","lb-LU","lg-UG","ln-AO","ln-CD","ln-CF","ln-CG","lo-LA","lt-LT","lu-CD","lv-LV","mg-MG","mk-MK","ml-IN","mn-Cyrl","mn-Cyrl-MN",
"mr-IN","ms-Latn","ms-Latn-BN","ms-Latn-MY","ms-Latn-SG","mt-MT","my-MM","nb-NO","nb-SJ","nd-ZW","ne-IN","ne-NP","nl-AW","nl-BE","nl-BQ","nl-CW","nl-NL","nl-SR","nl-SX","nn-NO","om-ET","om-KE","or-IN","os-GE","os-RU","pa-Arab","pa-Arab-PK","pa-Guru","pa-Guru-IN","pl-PL","ps-AF","pt-AO","pt-BR","pt-CV","pt-GW","pt-MO","pt-MZ","pt-PT","pt-ST","pt-TL","qu-BO","qu-EC","qu-PE","rm-CH","rn-BI","ro-MD","ro-RO","ru-BY","ru-KG","ru-KZ","ru-MD","ru-RU","ru-UA","rw-RW","se-FI","se-NO","se-SE","sg-CF","si-LK",
"sk-SK","sl-SI","sn-ZW","so-DJ","so-ET","so-KE","so-SO","sq-AL","sq-MK","sq-XK","sr-Cyrl","sr-Cyrl-BA","sr-Cyrl-ME","sr-Cyrl-RS","sr-Cyrl-XK","sr-Latn","sr-Latn-BA","sr-Latn-ME","sr-Latn-RS","sr-Latn-XK","sv-AX","sv-FI","sv-SE","sw-CD","sw-KE","sw-TZ","sw-UG","ta-IN","ta-LK","ta-MY","ta-SG","te-IN","th-TH","ti-ER","ti-ET","to-TO","tr-CY","tr-TR","ug-Arab","ug-Arab-CN","uk-UA","ur-IN","ur-PK","uz-Arab","uz-Arab-AF","uz-Cyrl","uz-Cyrl-UZ","uz-Latn","uz-Latn-UZ","vi-VN","yi-001","yo-BJ","yo-NG","zh-Hans",
"zh-Hans-CN","zh-Hans-HK","zh-Hans-MO","zh-Hans-SG","zh-Hant","zh-Hant-HK","zh-Hant-MO","zh-Hant-TW","zu-ZA"],us_states_and_dc:[{name:"Alabama",abbreviation:"AL"},{name:"Alaska",abbreviation:"AK"},{name:"Arizona",abbreviation:"AZ"},{name:"Arkansas",abbreviation:"AR"},{name:"California",abbreviation:"CA"},{name:"Colorado",abbreviation:"CO"},{name:"Connecticut",abbreviation:"CT"},{name:"Delaware",abbreviation:"DE"},{name:"District of Columbia",abbreviation:"DC"},{name:"Florida",abbreviation:"FL"},{name:"Georgia",
abbreviation:"GA"},{name:"Hawaii",abbreviation:"HI"},{name:"Idaho",abbreviation:"ID"},{name:"Illinois",abbreviation:"IL"},{name:"Indiana",abbreviation:"IN"},{name:"Iowa",abbreviation:"IA"},{name:"Kansas",abbreviation:"KS"},{name:"Kentucky",abbreviation:"KY"},{name:"Louisiana",abbreviation:"LA"},{name:"Maine",abbreviation:"ME"},{name:"Maryland",abbreviation:"MD"},{name:"Massachusetts",abbreviation:"MA"},{name:"Michigan",abbreviation:"MI"},{name:"Minnesota",abbreviation:"MN"},{name:"Mississippi",abbreviation:"MS"},
{name:"Missouri",abbreviation:"MO"},{name:"Montana",abbreviation:"MT"},{name:"Nebraska",abbreviation:"NE"},{name:"Nevada",abbreviation:"NV"},{name:"New Hampshire",abbreviation:"NH"},{name:"New Jersey",abbreviation:"NJ"},{name:"New Mexico",abbreviation:"NM"},{name:"New York",abbreviation:"NY"},{name:"North Carolina",abbreviation:"NC"},{name:"North Dakota",abbreviation:"ND"},{name:"Ohio",abbreviation:"OH"},{name:"Oklahoma",abbreviation:"OK"},{name:"Oregon",abbreviation:"OR"},{name:"Pennsylvania",abbreviation:"PA"},
{name:"Rhode Island",abbreviation:"RI"},{name:"South Carolina",abbreviation:"SC"},{name:"South Dakota",abbreviation:"SD"},{name:"Tennessee",abbreviation:"TN"},{name:"Texas",abbreviation:"TX"},{name:"Utah",abbreviation:"UT"},{name:"Vermont",abbreviation:"VT"},{name:"Virginia",abbreviation:"VA"},{name:"Washington",abbreviation:"WA"},{name:"West Virginia",abbreviation:"WV"},{name:"Wisconsin",abbreviation:"WI"},{name:"Wyoming",abbreviation:"WY"}],territories:[{name:"American Samoa",abbreviation:"AS"},
{name:"Federated States of Micronesia",abbreviation:"FM"},{name:"Guam",abbreviation:"GU"},{name:"Marshall Islands",abbreviation:"MH"},{name:"Northern Mariana Islands",abbreviation:"MP"},{name:"Puerto Rico",abbreviation:"PR"},{name:"Virgin Islands, U.S.",abbreviation:"VI"}],armed_forces:[{name:"Armed Forces Europe",abbreviation:"AE"},{name:"Armed Forces Pacific",abbreviation:"AP"},{name:"Armed Forces the Americas",abbreviation:"AA"}],country_regions:{it:[{name:"Valle d'Aosta",abbreviation:"VDA"},{name:"Piemonte",
abbreviation:"PIE"},{name:"Lombardia",abbreviation:"LOM"},{name:"Veneto",abbreviation:"VEN"},{name:"Trentino Alto Adige",abbreviation:"TAA"},{name:"Friuli Venezia Giulia",abbreviation:"FVG"},{name:"Liguria",abbreviation:"LIG"},{name:"Emilia Romagna",abbreviation:"EMR"},{name:"Toscana",abbreviation:"TOS"},{name:"Umbria",abbreviation:"UMB"},{name:"Marche",abbreviation:"MAR"},{name:"Abruzzo",abbreviation:"ABR"},{name:"Lazio",abbreviation:"LAZ"},{name:"Campania",abbreviation:"CAM"},{name:"Puglia",abbreviation:"PUG"},
{name:"Basilicata",abbreviation:"BAS"},{name:"Molise",abbreviation:"MOL"},{name:"Calabria",abbreviation:"CAL"},{name:"Sicilia",abbreviation:"SIC"},{name:"Sardegna",abbreviation:"SAR"}]},street_suffixes:{"us":[{name:"Avenue",abbreviation:"Ave"},{name:"Boulevard",abbreviation:"Blvd"},{name:"Center",abbreviation:"Ctr"},{name:"Circle",abbreviation:"Cir"},{name:"Court",abbreviation:"Ct"},{name:"Drive",abbreviation:"Dr"},{name:"Extension",abbreviation:"Ext"},{name:"Glen",abbreviation:"Gln"},{name:"Grove",
abbreviation:"Grv"},{name:"Heights",abbreviation:"Hts"},{name:"Highway",abbreviation:"Hwy"},{name:"Junction",abbreviation:"Jct"},{name:"Key",abbreviation:"Key"},{name:"Lane",abbreviation:"Ln"},{name:"Loop",abbreviation:"Loop"},{name:"Manor",abbreviation:"Mnr"},{name:"Mill",abbreviation:"Mill"},{name:"Park",abbreviation:"Park"},{name:"Parkway",abbreviation:"Pkwy"},{name:"Pass",abbreviation:"Pass"},{name:"Path",abbreviation:"Path"},{name:"Pike",abbreviation:"Pike"},{name:"Place",abbreviation:"Pl"},
{name:"Plaza",abbreviation:"Plz"},{name:"Point",abbreviation:"Pt"},{name:"Ridge",abbreviation:"Rdg"},{name:"River",abbreviation:"Riv"},{name:"Road",abbreviation:"Rd"},{name:"Square",abbreviation:"Sq"},{name:"Street",abbreviation:"St"},{name:"Terrace",abbreviation:"Ter"},{name:"Trail",abbreviation:"Trl"},{name:"Turnpike",abbreviation:"Tpke"},{name:"View",abbreviation:"Vw"},{name:"Way",abbreviation:"Way"}],"it":[{name:"Accesso",abbreviation:"Acc."},{name:"Alzaia",abbreviation:"Alz."},{name:"Arco",abbreviation:"Arco"},
{name:"Archivolto",abbreviation:"Acv."},{name:"Arena",abbreviation:"Arena"},{name:"Argine",abbreviation:"Argine"},{name:"Bacino",abbreviation:"Bacino"},{name:"Banchi",abbreviation:"Banchi"},{name:"Banchina",abbreviation:"Ban."},{name:"Bastioni",abbreviation:"Bas."},{name:"Belvedere",abbreviation:"Belv."},{name:"Borgata",abbreviation:"B.ta"},{name:"Borgo",abbreviation:"B.go"},{name:"Calata",abbreviation:"Cal."},{name:"Calle",abbreviation:"Calle"},{name:"Campiello",abbreviation:"Cam."},{name:"Campo",
abbreviation:"Cam."},{name:"Canale",abbreviation:"Can."},{name:"Carraia",abbreviation:"Carr."},{name:"Cascina",abbreviation:"Cascina"},{name:"Case sparse",abbreviation:"c.s."},{name:"Cavalcavia",abbreviation:"Cv."},{name:"Circonvallazione",abbreviation:"Cv."},{name:"Complanare",abbreviation:"C.re"},{name:"Contrada",abbreviation:"C.da"},{name:"Corso",abbreviation:"C.so"},{name:"Corte",abbreviation:"C.te"},{name:"Cortile",abbreviation:"C.le"},{name:"Diramazione",abbreviation:"Dir."},{name:"Fondaco",
abbreviation:"F.co"},{name:"Fondamenta",abbreviation:"F.ta"},{name:"Fondo",abbreviation:"F.do"},{name:"Frazione",abbreviation:"Fr."},{name:"Isola",abbreviation:"Is."},{name:"Largo",abbreviation:"L.go"},{name:"Litoranea",abbreviation:"Lit."},{name:"Lungolago",abbreviation:"L.go lago"},{name:"Lungo Po",abbreviation:"l.go Po"},{name:"Molo",abbreviation:"Molo"},{name:"Mura",abbreviation:"Mura"},{name:"Passaggio privato",abbreviation:"pass. priv."},{name:"Passeggiata",abbreviation:"Pass."},{name:"Piazza",
abbreviation:"P.zza"},{name:"Piazzale",abbreviation:"P.le"},{name:"Ponte",abbreviation:"P.te"},{name:"Portico",abbreviation:"P.co"},{name:"Rampa",abbreviation:"Rampa"},{name:"Regione",abbreviation:"Reg."},{name:"Rione",abbreviation:"R.ne"},{name:"Rio",abbreviation:"Rio"},{name:"Ripa",abbreviation:"Ripa"},{name:"Riva",abbreviation:"Riva"},{name:"Rond\u00f2",abbreviation:"Rond\u00f2"},{name:"Rotonda",abbreviation:"Rot."},{name:"Sagrato",abbreviation:"Sagr."},{name:"Salita",abbreviation:"Sal."},{name:"Scalinata",
abbreviation:"Scal."},{name:"Scalone",abbreviation:"Scal."},{name:"Slargo",abbreviation:"Sl."},{name:"Sottoportico",abbreviation:"Sott."},{name:"Strada",abbreviation:"Str."},{name:"Stradale",abbreviation:"Str.le"},{name:"Strettoia",abbreviation:"Strett."},{name:"Traversa",abbreviation:"Trav."},{name:"Via",abbreviation:"V."},{name:"Viale",abbreviation:"V.le"},{name:"Vicinale",abbreviation:"Vic.le"},{name:"Vicolo",abbreviation:"Vic."}],"uk":[{name:"Avenue",abbreviation:"Ave"},{name:"Close",abbreviation:"Cl"},
{name:"Court",abbreviation:"Ct"},{name:"Crescent",abbreviation:"Cr"},{name:"Drive",abbreviation:"Dr"},{name:"Garden",abbreviation:"Gdn"},{name:"Gardens",abbreviation:"Gdns"},{name:"Green",abbreviation:"Gn"},{name:"Grove",abbreviation:"Gr"},{name:"Lane",abbreviation:"Ln"},{name:"Mount",abbreviation:"Mt"},{name:"Place",abbreviation:"Pl"},{name:"Park",abbreviation:"Pk"},{name:"Ridge",abbreviation:"Rdg"},{name:"Road",abbreviation:"Rd"},{name:"Square",abbreviation:"Sq"},{name:"Street",abbreviation:"St"},
{name:"Terrace",abbreviation:"Ter"},{name:"Valley",abbreviation:"Val"}]},months:[{name:"January",short_name:"Jan",numeric:"01",days:31},{name:"February",short_name:"Feb",numeric:"02",days:28},{name:"March",short_name:"Mar",numeric:"03",days:31},{name:"April",short_name:"Apr",numeric:"04",days:30},{name:"May",short_name:"May",numeric:"05",days:31},{name:"June",short_name:"Jun",numeric:"06",days:30},{name:"July",short_name:"Jul",numeric:"07",days:31},{name:"August",short_name:"Aug",numeric:"08",days:31},
{name:"September",short_name:"Sep",numeric:"09",days:30},{name:"October",short_name:"Oct",numeric:"10",days:31},{name:"November",short_name:"Nov",numeric:"11",days:30},{name:"December",short_name:"Dec",numeric:"12",days:31}],cc_types:[{name:"American Express",short_name:"amex",prefix:"34",length:15},{name:"Bankcard",short_name:"bankcard",prefix:"5610",length:16},{name:"China UnionPay",short_name:"chinaunion",prefix:"62",length:16},{name:"Diners Club Carte Blanche",short_name:"dccarte",prefix:"300",
length:14},{name:"Diners Club enRoute",short_name:"dcenroute",prefix:"2014",length:15},{name:"Diners Club International",short_name:"dcintl",prefix:"36",length:14},{name:"Diners Club United States \x26 Canada",short_name:"dcusc",prefix:"54",length:16},{name:"Discover Card",short_name:"discover",prefix:"6011",length:16},{name:"InstaPayment",short_name:"instapay",prefix:"637",length:16},{name:"JCB",short_name:"jcb",prefix:"3528",length:16},{name:"Laser",short_name:"laser",prefix:"6304",length:16},{name:"Maestro",
short_name:"maestro",prefix:"5018",length:16},{name:"Mastercard",short_name:"mc",prefix:"51",length:16},{name:"Solo",short_name:"solo",prefix:"6334",length:16},{name:"Switch",short_name:"switch",prefix:"4903",length:16},{name:"Visa",short_name:"visa",prefix:"4",length:16},{name:"Visa Electron",short_name:"electron",prefix:"4026",length:16}],currency_types:[{"code":"AED","name":"United Arab Emirates Dirham"},{"code":"AFN","name":"Afghanistan Afghani"},{"code":"ALL","name":"Albania Lek"},{"code":"AMD",
"name":"Armenia Dram"},{"code":"ANG","name":"Netherlands Antilles Guilder"},{"code":"AOA","name":"Angola Kwanza"},{"code":"ARS","name":"Argentina Peso"},{"code":"AUD","name":"Australia Dollar"},{"code":"AWG","name":"Aruba Guilder"},{"code":"AZN","name":"Azerbaijan New Manat"},{"code":"BAM","name":"Bosnia and Herzegovina Convertible Marka"},{"code":"BBD","name":"Barbados Dollar"},{"code":"BDT","name":"Bangladesh Taka"},{"code":"BGN","name":"Bulgaria Lev"},{"code":"BHD","name":"Bahrain Dinar"},{"code":"BIF",
"name":"Burundi Franc"},{"code":"BMD","name":"Bermuda Dollar"},{"code":"BND","name":"Brunei Darussalam Dollar"},{"code":"BOB","name":"Bolivia Boliviano"},{"code":"BRL","name":"Brazil Real"},{"code":"BSD","name":"Bahamas Dollar"},{"code":"BTN","name":"Bhutan Ngultrum"},{"code":"BWP","name":"Botswana Pula"},{"code":"BYR","name":"Belarus Ruble"},{"code":"BZD","name":"Belize Dollar"},{"code":"CAD","name":"Canada Dollar"},{"code":"CDF","name":"Congo/Kinshasa Franc"},{"code":"CHF","name":"Switzerland Franc"},
{"code":"CLP","name":"Chile Peso"},{"code":"CNY","name":"China Yuan Renminbi"},{"code":"COP","name":"Colombia Peso"},{"code":"CRC","name":"Costa Rica Colon"},{"code":"CUC","name":"Cuba Convertible Peso"},{"code":"CUP","name":"Cuba Peso"},{"code":"CVE","name":"Cape Verde Escudo"},{"code":"CZK","name":"Czech Republic Koruna"},{"code":"DJF","name":"Djibouti Franc"},{"code":"DKK","name":"Denmark Krone"},{"code":"DOP","name":"Dominican Republic Peso"},{"code":"DZD","name":"Algeria Dinar"},{"code":"EGP",
"name":"Egypt Pound"},{"code":"ERN","name":"Eritrea Nakfa"},{"code":"ETB","name":"Ethiopia Birr"},{"code":"EUR","name":"Euro Member Countries"},{"code":"FJD","name":"Fiji Dollar"},{"code":"FKP","name":"Falkland Islands (Malvinas) Pound"},{"code":"GBP","name":"United Kingdom Pound"},{"code":"GEL","name":"Georgia Lari"},{"code":"GGP","name":"Guernsey Pound"},{"code":"GHS","name":"Ghana Cedi"},{"code":"GIP","name":"Gibraltar Pound"},{"code":"GMD","name":"Gambia Dalasi"},{"code":"GNF","name":"Guinea Franc"},
{"code":"GTQ","name":"Guatemala Quetzal"},{"code":"GYD","name":"Guyana Dollar"},{"code":"HKD","name":"Hong Kong Dollar"},{"code":"HNL","name":"Honduras Lempira"},{"code":"HRK","name":"Croatia Kuna"},{"code":"HTG","name":"Haiti Gourde"},{"code":"HUF","name":"Hungary Forint"},{"code":"IDR","name":"Indonesia Rupiah"},{"code":"ILS","name":"Israel Shekel"},{"code":"IMP","name":"Isle of Man Pound"},{"code":"INR","name":"India Rupee"},{"code":"IQD","name":"Iraq Dinar"},{"code":"IRR","name":"Iran Rial"},
{"code":"ISK","name":"Iceland Krona"},{"code":"JEP","name":"Jersey Pound"},{"code":"JMD","name":"Jamaica Dollar"},{"code":"JOD","name":"Jordan Dinar"},{"code":"JPY","name":"Japan Yen"},{"code":"KES","name":"Kenya Shilling"},{"code":"KGS","name":"Kyrgyzstan Som"},{"code":"KHR","name":"Cambodia Riel"},{"code":"KMF","name":"Comoros Franc"},{"code":"KPW","name":"Korea (North) Won"},{"code":"KRW","name":"Korea (South) Won"},{"code":"KWD","name":"Kuwait Dinar"},{"code":"KYD","name":"Cayman Islands Dollar"},
{"code":"KZT","name":"Kazakhstan Tenge"},{"code":"LAK","name":"Laos Kip"},{"code":"LBP","name":"Lebanon Pound"},{"code":"LKR","name":"Sri Lanka Rupee"},{"code":"LRD","name":"Liberia Dollar"},{"code":"LSL","name":"Lesotho Loti"},{"code":"LTL","name":"Lithuania Litas"},{"code":"LYD","name":"Libya Dinar"},{"code":"MAD","name":"Morocco Dirham"},{"code":"MDL","name":"Moldova Leu"},{"code":"MGA","name":"Madagascar Ariary"},{"code":"MKD","name":"Macedonia Denar"},{"code":"MMK","name":"Myanmar (Burma) Kyat"},
{"code":"MNT","name":"Mongolia Tughrik"},{"code":"MOP","name":"Macau Pataca"},{"code":"MRO","name":"Mauritania Ouguiya"},{"code":"MUR","name":"Mauritius Rupee"},{"code":"MVR","name":"Maldives (Maldive Islands) Rufiyaa"},{"code":"MWK","name":"Malawi Kwacha"},{"code":"MXN","name":"Mexico Peso"},{"code":"MYR","name":"Malaysia Ringgit"},{"code":"MZN","name":"Mozambique Metical"},{"code":"NAD","name":"Namibia Dollar"},{"code":"NGN","name":"Nigeria Naira"},{"code":"NIO","name":"Nicaragua Cordoba"},{"code":"NOK",
"name":"Norway Krone"},{"code":"NPR","name":"Nepal Rupee"},{"code":"NZD","name":"New Zealand Dollar"},{"code":"OMR","name":"Oman Rial"},{"code":"PAB","name":"Panama Balboa"},{"code":"PEN","name":"Peru Nuevo Sol"},{"code":"PGK","name":"Papua New Guinea Kina"},{"code":"PHP","name":"Philippines Peso"},{"code":"PKR","name":"Pakistan Rupee"},{"code":"PLN","name":"Poland Zloty"},{"code":"PYG","name":"Paraguay Guarani"},{"code":"QAR","name":"Qatar Riyal"},{"code":"RON","name":"Romania New Leu"},{"code":"RSD",
"name":"Serbia Dinar"},{"code":"RUB","name":"Russia Ruble"},{"code":"RWF","name":"Rwanda Franc"},{"code":"SAR","name":"Saudi Arabia Riyal"},{"code":"SBD","name":"Solomon Islands Dollar"},{"code":"SCR","name":"Seychelles Rupee"},{"code":"SDG","name":"Sudan Pound"},{"code":"SEK","name":"Sweden Krona"},{"code":"SGD","name":"Singapore Dollar"},{"code":"SHP","name":"Saint Helena Pound"},{"code":"SLL","name":"Sierra Leone Leone"},{"code":"SOS","name":"Somalia Shilling"},{"code":"SPL","name":"Seborga Luigino"},
{"code":"SRD","name":"Suriname Dollar"},{"code":"STD","name":"S\u00e3o Tom\u00e9 and Pr\u00edncipe Dobra"},{"code":"SVC","name":"El Salvador Colon"},{"code":"SYP","name":"Syria Pound"},{"code":"SZL","name":"Swaziland Lilangeni"},{"code":"THB","name":"Thailand Baht"},{"code":"TJS","name":"Tajikistan Somoni"},{"code":"TMT","name":"Turkmenistan Manat"},{"code":"TND","name":"Tunisia Dinar"},{"code":"TOP","name":"Tonga Pa'anga"},{"code":"TRY","name":"Turkey Lira"},{"code":"TTD","name":"Trinidad and Tobago Dollar"},
{"code":"TVD","name":"Tuvalu Dollar"},{"code":"TWD","name":"Taiwan New Dollar"},{"code":"TZS","name":"Tanzania Shilling"},{"code":"UAH","name":"Ukraine Hryvnia"},{"code":"UGX","name":"Uganda Shilling"},{"code":"USD","name":"United States Dollar"},{"code":"UYU","name":"Uruguay Peso"},{"code":"UZS","name":"Uzbekistan Som"},{"code":"VEF","name":"Venezuela Bolivar"},{"code":"VND","name":"Viet Nam Dong"},{"code":"VUV","name":"Vanuatu Vatu"},{"code":"WST","name":"Samoa Tala"},{"code":"XAF","name":"Communaut\u00e9 Financi\u00e8re Africaine (BEAC) CFA Franc BEAC"},
{"code":"XCD","name":"East Caribbean Dollar"},{"code":"XDR","name":"International Monetary Fund (IMF) Special Drawing Rights"},{"code":"XOF","name":"Communaut\u00e9 Financi\u00e8re Africaine (BCEAO) Franc"},{"code":"XPF","name":"Comptoirs Fran\u00e7ais du Pacifique (CFP) Franc"},{"code":"YER","name":"Yemen Rial"},{"code":"ZAR","name":"South Africa Rand"},{"code":"ZMW","name":"Zambia Kwacha"},{"code":"ZWD","name":"Zimbabwe Dollar"}],colorNames:["AliceBlue","Black","Navy","DarkBlue","MediumBlue","Blue",
"DarkGreen","Green","Teal","DarkCyan","DeepSkyBlue","DarkTurquoise","MediumSpringGreen","Lime","SpringGreen","Aqua","Cyan","MidnightBlue","DodgerBlue","LightSeaGreen","ForestGreen","SeaGreen","DarkSlateGray","LimeGreen","MediumSeaGreen","Turquoise","RoyalBlue","SteelBlue","DarkSlateBlue","MediumTurquoise","Indigo","DarkOliveGreen","CadetBlue","CornflowerBlue","RebeccaPurple","MediumAquaMarine","DimGray","SlateBlue","OliveDrab","SlateGray","LightSlateGray","MediumSlateBlue","LawnGreen","Chartreuse",
"Aquamarine","Maroon","Purple","Olive","Gray","SkyBlue","LightSkyBlue","BlueViolet","DarkRed","DarkMagenta","SaddleBrown","Ivory","White","DarkSeaGreen","LightGreen","MediumPurple","DarkViolet","PaleGreen","DarkOrchid","YellowGreen","Sienna","Brown","DarkGray","LightBlue","GreenYellow","PaleTurquoise","LightSteelBlue","PowderBlue","FireBrick","DarkGoldenRod","MediumOrchid","RosyBrown","DarkKhaki","Silver","MediumVioletRed","IndianRed","Peru","Chocolate","Tan","LightGray","Thistle","Orchid","GoldenRod",
"PaleVioletRed","Crimson","Gainsboro","Plum","BurlyWood","LightCyan","Lavender","DarkSalmon","Violet","PaleGoldenRod","LightCoral","Khaki","AliceBlue","HoneyDew","Azure","SandyBrown","Wheat","Beige","WhiteSmoke","MintCream","GhostWhite","Salmon","AntiqueWhite","Linen","LightGoldenRodYellow","OldLace","Red","Fuchsia","Magenta","DeepPink","OrangeRed","Tomato","HotPink","Coral","DarkOrange","LightSalmon","Orange","LightPink","Pink","Gold","PeachPuff","NavajoWhite","Moccasin","Bisque","MistyRose","BlanchedAlmond",
"PapayaWhip","LavenderBlush","SeaShell","Cornsilk","LemonChiffon","FloralWhite","Snow","Yellow","LightYellow"],company:["3Com Corp","3M Company","A.G. Edwards Inc.","Abbott Laboratories","Abercrombie \x26 Fitch Co.","ABM Industries Incorporated","Ace Hardware Corporation","ACT Manufacturing Inc.","Acterna Corp.","Adams Resources \x26 Energy, Inc.","ADC Telecommunications, Inc.","Adelphia Communications Corporation","Administaff, Inc.","Adobe Systems Incorporated","Adolph Coors Company","Advance Auto Parts, Inc.",
"Advanced Micro Devices, Inc.","AdvancePCS, Inc.","Advantica Restaurant Group, Inc.","The AES Corporation","Aetna Inc.","Affiliated Computer Services, Inc.","AFLAC Incorporated","AGCO Corporation","Agilent Technologies, Inc.","Agway Inc.","Apartment Investment and Management Company","Air Products and Chemicals, Inc.","Airborne, Inc.","Airgas, Inc.","AK Steel Holding Corporation","Alaska Air Group, Inc.","Alberto-Culver Company","Albertson's, Inc.","Alcoa Inc.","Alleghany Corporation","Allegheny Energy, Inc.",
"Allegheny Technologies Incorporated","Allergan, Inc.","ALLETE, Inc.","Alliant Energy Corporation","Allied Waste Industries, Inc.","Allmerica Financial Corporation","The Allstate Corporation","ALLTEL Corporation","The Alpine Group, Inc.","Amazon.com, Inc.","AMC Entertainment Inc.","American Power Conversion Corporation","Amerada Hess Corporation","AMERCO","Ameren Corporation","America West Holdings Corporation","American Axle \x26 Manufacturing Holdings, Inc.","American Eagle Outfitters, Inc.","American Electric Power Company, Inc.",
"American Express Company","American Financial Group, Inc.","American Greetings Corporation","American International Group, Inc.","American Standard Companies Inc.","American Water Works Company, Inc.","AmerisourceBergen Corporation","Ames Department Stores, Inc.","Amgen Inc.","Amkor Technology, Inc.","AMR Corporation","AmSouth Bancorp.","Amtran, Inc.","Anadarko Petroleum Corporation","Analog Devices, Inc.","Anheuser-Busch Companies, Inc.","Anixter International Inc.","AnnTaylor Inc.","Anthem, Inc.",
"AOL Time Warner Inc.","Aon Corporation","Apache Corporation","Apple Computer, Inc.","Applera Corporation","Applied Industrial Technologies, Inc.","Applied Materials, Inc.","Aquila, Inc.","ARAMARK Corporation","Arch Coal, Inc.","Archer Daniels Midland Company","Arkansas Best Corporation","Armstrong Holdings, Inc.","Arrow Electronics, Inc.","ArvinMeritor, Inc.","Ashland Inc.","Astoria Financial Corporation","AT\x26T Corp.","Atmel Corporation","Atmos Energy Corporation","Audiovox Corporation","Autoliv, Inc.",
"Automatic Data Processing, Inc.","AutoNation, Inc.","AutoZone, Inc.","Avaya Inc.","Avery Dennison Corporation","Avista Corporation","Avnet, Inc.","Avon Products, Inc.","Baker Hughes Incorporated","Ball Corporation","Bank of America Corporation","The Bank of New York Company, Inc.","Bank One Corporation","Banknorth Group, Inc.","Banta Corporation","Barnes \x26 Noble, Inc.","Bausch \x26 Lomb Incorporated","Baxter International Inc.","BB\x26T Corporation","The Bear Stearns Companies Inc.","Beazer Homes USA, Inc.",
"Beckman Coulter, Inc.","Becton, Dickinson and Company","Bed Bath \x26 Beyond Inc.","Belk, Inc.","Bell Microproducts Inc.","BellSouth Corporation","Belo Corp.","Bemis Company, Inc.","Benchmark Electronics, Inc.","Berkshire Hathaway Inc.","Best Buy Co., Inc.","Bethlehem Steel Corporation","Beverly Enterprises, Inc.","Big Lots, Inc.","BJ Services Company","BJ's Wholesale Club, Inc.","The Black \x26 Decker Corporation","Black Hills Corporation","BMC Software, Inc.","The Boeing Company","Boise Cascade Corporation",
"Borders Group, Inc.","BorgWarner Inc.","Boston Scientific Corporation","Bowater Incorporated","Briggs \x26 Stratton Corporation","Brightpoint, Inc.","Brinker International, Inc.","Bristol-Myers Squibb Company","Broadwing, Inc.","Brown Shoe Company, Inc.","Brown-Forman Corporation","Brunswick Corporation","Budget Group, Inc.","Burlington Coat Factory Warehouse Corporation","Burlington Industries, Inc.","Burlington Northern Santa Fe Corporation","Burlington Resources Inc.","C. H. Robinson Worldwide Inc.",
"Cablevision Systems Corp","Cabot Corp","Cadence Design Systems, Inc.","Calpine Corp.","Campbell Soup Co.","Capital One Financial Corp.","Cardinal Health Inc.","Caremark Rx Inc.","Carlisle Cos. Inc.","Carpenter Technology Corp.","Casey's General Stores Inc.","Caterpillar Inc.","CBRL Group Inc.","CDI Corp.","CDW Computer Centers Inc.","CellStar Corp.","Cendant Corp","Cenex Harvest States Cooperatives","Centex Corp.","CenturyTel Inc.","Ceridian Corp.","CH2M Hill Cos. Ltd.","Champion Enterprises Inc.",
"Charles Schwab Corp.","Charming Shoppes Inc.","Charter Communications Inc.","Charter One Financial Inc.","ChevronTexaco Corp.","Chiquita Brands International Inc.","Chubb Corp","Ciena Corp.","Cigna Corp","Cincinnati Financial Corp.","Cinergy Corp.","Cintas Corp.","Circuit City Stores Inc.","Cisco Systems Inc.","Citigroup, Inc","Citizens Communications Co.","CKE Restaurants Inc.","Clear Channel Communications Inc.","The Clorox Co.","CMGI Inc.","CMS Energy Corp.","CNF Inc.","Coca-Cola Co.","Coca-Cola Enterprises Inc.",
"Colgate-Palmolive Co.","Collins \x26 Aikman Corp.","Comcast Corp.","Comdisco Inc.","Comerica Inc.","Comfort Systems USA Inc.","Commercial Metals Co.","Community Health Systems Inc.","Compass Bancshares Inc","Computer Associates International Inc.","Computer Sciences Corp.","Compuware Corp.","Comverse Technology Inc.","ConAgra Foods Inc.","Concord EFS Inc.","Conectiv, Inc","Conoco Inc","Conseco Inc.","Consolidated Freightways Corp.","Consolidated Edison Inc.","Constellation Brands Inc.","Constellation Emergy Group Inc.",
"Continental Airlines Inc.","Convergys Corp.","Cooper Cameron Corp.","Cooper Industries Ltd.","Cooper Tire \x26 Rubber Co.","Corn Products International Inc.","Corning Inc.","Costco Wholesale Corp.","Countrywide Credit Industries Inc.","Coventry Health Care Inc.","Cox Communications Inc.","Crane Co.","Crompton Corp.","Crown Cork \x26 Seal Co. Inc.","CSK Auto Corp.","CSX Corp.","Cummins Inc.","CVS Corp.","Cytec Industries Inc.","D\x26K Healthcare Resources, Inc.","D.R. Horton Inc.","Dana Corporation",
"Danaher Corporation","Darden Restaurants Inc.","DaVita Inc.","Dean Foods Company","Deere \x26 Company","Del Monte Foods Co","Dell Computer Corporation","Delphi Corp.","Delta Air Lines Inc.","Deluxe Corporation","Devon Energy Corporation","Di Giorgio Corporation","Dial Corporation","Diebold Incorporated","Dillard's Inc.","DIMON Incorporated","Dole Food Company, Inc.","Dollar General Corporation","Dollar Tree Stores, Inc.","Dominion Resources, Inc.","Domino's Pizza LLC","Dover Corporation, Inc.","Dow Chemical Company",
"Dow Jones \x26 Company, Inc.","DPL Inc.","DQE Inc.","Dreyer's Grand Ice Cream, Inc.","DST Systems, Inc.","DTE Energy Co.","E.I. Du Pont de Nemours and Company","Duke Energy Corp","Dun \x26 Bradstreet Inc.","DURA Automotive Systems Inc.","DynCorp","Dynegy Inc.","E*Trade Group, Inc.","E.W. Scripps Company","Earthlink, Inc.","Eastman Chemical Company","Eastman Kodak Company","Eaton Corporation","Echostar Communications Corporation","Ecolab Inc.","Edison International","EGL Inc.","El Paso Corporation",
"Electronic Arts Inc.","Electronic Data Systems Corp.","Eli Lilly and Company","EMC Corporation","Emcor Group Inc.","Emerson Electric Co.","Encompass Services Corporation","Energizer Holdings Inc.","Energy East Corporation","Engelhard Corporation","Enron Corp.","Entergy Corporation","Enterprise Products Partners L.P.","EOG Resources, Inc.","Equifax Inc.","Equitable Resources Inc.","Equity Office Properties Trust","Equity Residential Properties Trust","Estee Lauder Companies Inc.","Exelon Corporation",
"Exide Technologies","Expeditors International of Washington Inc.","Express Scripts Inc.","ExxonMobil Corporation","Fairchild Semiconductor International Inc.","Family Dollar Stores Inc.","Farmland Industries Inc.","Federal Mogul Corp.","Federated Department Stores Inc.","Federal Express Corp.","Felcor Lodging Trust Inc.","Ferro Corp.","Fidelity National Financial Inc.","Fifth Third Bancorp","First American Financial Corp.","First Data Corp.","First National of Nebraska Inc.","First Tennessee National Corp.",
"FirstEnergy Corp.","Fiserv Inc.","Fisher Scientific International Inc.","FleetBoston Financial Co.","Fleetwood Enterprises Inc.","Fleming Companies Inc.","Flowers Foods Inc.","Flowserv Corp","Fluor Corp","FMC Corp","Foamex International Inc","Foot Locker Inc","Footstar Inc.","Ford Motor Co","Forest Laboratories Inc.","Fortune Brands Inc.","Foster Wheeler Ltd.","FPL Group Inc.","Franklin Resources Inc.","Freeport McMoran Copper \x26 Gold Inc.","Frontier Oil Corp","Furniture Brands International Inc.",
"Gannett Co., Inc.","Gap Inc.","Gateway Inc.","GATX Corporation","Gemstar-TV Guide International Inc.","GenCorp Inc.","General Cable Corporation","General Dynamics Corporation","General Electric Company","General Mills Inc","General Motors Corporation","Genesis Health Ventures Inc.","Gentek Inc.","Gentiva Health Services Inc.","Genuine Parts Company","Genuity Inc.","Genzyme Corporation","Georgia Gulf Corporation","Georgia-Pacific Corporation","Gillette Company","Gold Kist Inc.","Golden State Bancorp Inc.",
"Golden West Financial Corporation","Goldman Sachs Group Inc.","Goodrich Corporation","The Goodyear Tire \x26 Rubber Company","Granite Construction Incorporated","Graybar Electric Company Inc.","Great Lakes Chemical Corporation","Great Plains Energy Inc.","GreenPoint Financial Corp.","Greif Bros. Corporation","Grey Global Group Inc.","Group 1 Automotive Inc.","Guidant Corporation","H\x26R Block Inc.","H.B. Fuller Company","H.J. Heinz Company","Halliburton Co.","Harley-Davidson Inc.","Harman International Industries Inc.",
"Harrah's Entertainment Inc.","Harris Corp.","Harsco Corp.","Hartford Financial Services Group Inc.","Hasbro Inc.","Hawaiian Electric Industries Inc.","HCA Inc.","Health Management Associates Inc.","Health Net Inc.","Healthsouth Corp","Henry Schein Inc.","Hercules Inc.","Herman Miller Inc.","Hershey Foods Corp.","Hewlett-Packard Company","Hibernia Corp.","Hillenbrand Industries Inc.","Hilton Hotels Corp.","Hollywood Entertainment Corp.","Home Depot Inc.","Hon Industries Inc.","Honeywell International Inc.",
"Hormel Foods Corp.","Host Marriott Corp.","Household International Corp.","Hovnanian Enterprises Inc.","Hub Group Inc.","Hubbell Inc.","Hughes Supply Inc.","Humana Inc.","Huntington Bancshares Inc.","Idacorp Inc.","IDT Corporation","IKON Office Solutions Inc.","Illinois Tool Works Inc.","IMC Global Inc.","Imperial Sugar Company","IMS Health Inc.","Ingles Market Inc","Ingram Micro Inc.","Insight Enterprises Inc.","Integrated Electrical Services Inc.","Intel Corporation","International Paper Co.",
"Interpublic Group of Companies Inc.","Interstate Bakeries Corporation","International Business Machines Corp.","International Flavors \x26 Fragrances Inc.","International Multifoods Corporation","Intuit Inc.","IT Group Inc.","ITT Industries Inc.","Ivax Corp.","J.B. Hunt Transport Services Inc.","J.C. Penny Co.","J.P. Morgan Chase \x26 Co.","Jabil Circuit Inc.","Jack In The Box Inc.","Jacobs Engineering Group Inc.","JDS Uniphase Corp.","Jefferson-Pilot Co.","John Hancock Financial Services Inc.",
"Johnson \x26 Johnson","Johnson Controls Inc.","Jones Apparel Group Inc.","KB Home","Kellogg Company","Kellwood Company","Kelly Services Inc.","Kemet Corp.","Kennametal Inc.","Kerr-McGee Corporation","KeyCorp","KeySpan Corp.","Kimball International Inc.","Kimberly-Clark Corporation","Kindred Healthcare Inc.","KLA-Tencor Corporation","K-Mart Corp.","Knight-Ridder Inc.","Kohl's Corp.","KPMG Consulting Inc.","Kroger Co.","L-3 Communications Holdings Inc.","Laboratory Corporation of America Holdings",
"Lam Research Corporation","LandAmerica Financial Group Inc.","Lands' End Inc.","Landstar System Inc.","La-Z-Boy Inc.","Lear Corporation","Legg Mason Inc.","Leggett \x26 Platt Inc.","Lehman Brothers Holdings Inc.","Lennar Corporation","Lennox International Inc.","Level 3 Communications Inc.","Levi Strauss \x26 Co.","Lexmark International Inc.","Limited Inc.","Lincoln National Corporation","Linens 'n Things Inc.","Lithia Motors Inc.","Liz Claiborne Inc.","Lockheed Martin Corporation","Loews Corporation",
"Longs Drug Stores Corporation","Louisiana-Pacific Corporation","Lowe's Companies Inc.","LSI Logic Corporation","The LTV Corporation","The Lubrizol Corporation","Lucent Technologies Inc.","Lyondell Chemical Company","M \x26 T Bank Corporation","Magellan Health Services Inc.","Mail-Well Inc.","Mandalay Resort Group","Manor Care Inc.","Manpower Inc.","Marathon Oil Corporation","Mariner Health Care Inc.","Markel Corporation","Marriott International Inc.","Marsh \x26 McLennan Companies Inc.","Marsh Supermarkets Inc.",
"Marshall \x26 Ilsley Corporation","Martin Marietta Materials Inc.","Masco Corporation","Massey Energy Company","MasTec Inc.","Mattel Inc.","Maxim Integrated Products Inc.","Maxtor Corporation","Maxxam Inc.","The May Department Stores Company","Maytag Corporation","MBNA Corporation","McCormick \x26 Company Incorporated","McDonald's Corporation","The McGraw-Hill Companies Inc.","McKesson Corporation","McLeodUSA Incorporated","M.D.C. Holdings Inc.","MDU Resources Group Inc.","MeadWestvaco Corporation",
"Medtronic Inc.","Mellon Financial Corporation","The Men's Wearhouse Inc.","Merck \x26 Co., Inc.","Mercury General Corporation","Merrill Lynch \x26 Co. Inc.","Metaldyne Corporation","Metals USA Inc.","MetLife Inc.","Metris Companies Inc","MGIC Investment Corporation","MGM Mirage","Michaels Stores Inc.","Micron Technology Inc.","Microsoft Corporation","Milacron Inc.","Millennium Chemicals Inc.","Mirant Corporation","Mohawk Industries Inc.","Molex Incorporated","The MONY Group Inc.","Morgan Stanley Dean Witter \x26 Co.",
"Motorola Inc.","MPS Group Inc.","Murphy Oil Corporation","Nabors Industries Inc","Nacco Industries Inc","Nash Finch Company","National City Corp.","National Commerce Financial Corporation","National Fuel Gas Company","National Oilwell Inc","National Rural Utilities Cooperative Finance Corporation","National Semiconductor Corporation","National Service Industries Inc","Navistar International Corporation","NCR Corporation","The Neiman Marcus Group Inc.","New Jersey Resources Corporation","New York Times Company",
"Newell Rubbermaid Inc","Newmont Mining Corporation","Nextel Communications Inc","Nicor Inc","Nike Inc","NiSource Inc","Noble Energy Inc","Nordstrom Inc","Norfolk Southern Corporation","Nortek Inc","North Fork Bancorporation Inc","Northeast Utilities System","Northern Trust Corporation","Northrop Grumman Corporation","NorthWestern Corporation","Novellus Systems Inc","NSTAR","NTL Incorporated","Nucor Corp","Nvidia Corp","NVR Inc","Northwest Airlines Corp","Occidental Petroleum Corp","Ocean Energy Inc",
"Office Depot Inc.","OfficeMax Inc","OGE Energy Corp","Oglethorpe Power Corp.","Ohio Casualty Corp.","Old Republic International Corp.","Olin Corp.","OM Group Inc","Omnicare Inc","Omnicom Group","On Semiconductor Corp","ONEOK Inc","Oracle Corp","Oshkosh Truck Corp","Outback Steakhouse Inc.","Owens \x26 Minor Inc.","Owens Corning","Owens-Illinois Inc","Oxford Health Plans Inc","Paccar Inc","PacifiCare Health Systems Inc","Packaging Corp. of America","Pactiv Corp","Pall Corp","Pantry Inc","Park Place Entertainment Corp",
"Parker Hannifin Corp.","Pathmark Stores Inc.","Paychex Inc","Payless Shoesource Inc","Penn Traffic Co.","Pennzoil-Quaker State Company","Pentair Inc","Peoples Energy Corp.","PeopleSoft Inc","Pep Boys Manny, Moe \x26 Jack","Potomac Electric Power Co.","Pepsi Bottling Group Inc.","PepsiAmericas Inc.","PepsiCo Inc.","Performance Food Group Co.","Perini Corp","PerkinElmer Inc","Perot Systems Corp","Petco Animal Supplies Inc.","Peter Kiewit Sons', Inc.","PETsMART Inc","Pfizer Inc","Pacific Gas \x26 Electric Corp.",
"Pharmacia Corp","Phar Mor Inc.","Phelps Dodge Corp.","Philip Morris Companies Inc.","Phillips Petroleum Co","Phillips Van Heusen Corp.","Phoenix Companies Inc","Pier 1 Imports Inc.","Pilgrim's Pride Corporation","Pinnacle West Capital Corp","Pioneer-Standard Electronics Inc.","Pitney Bowes Inc.","Pittston Brinks Group","Plains All American Pipeline LP","PNC Financial Services Group Inc.","PNM Resources Inc","Polaris Industries Inc.","Polo Ralph Lauren Corp","PolyOne Corp","Popular Inc","Potlatch Corp",
"PPG Industries Inc","PPL Corp","Praxair Inc","Precision Castparts Corp","Premcor Inc.","Pride International Inc","Primedia Inc","Principal Financial Group Inc.","Procter \x26 Gamble Co.","Pro-Fac Cooperative Inc.","Progress Energy Inc","Progressive Corporation","Protective Life Corp","Provident Financial Group","Providian Financial Corp.","Prudential Financial Inc.","PSS World Medical Inc","Public Service Enterprise Group Inc.","Publix Super Markets Inc.","Puget Energy Inc.","Pulte Homes Inc","Qualcomm Inc",
"Quanta Services Inc.","Quantum Corp","Quest Diagnostics Inc.","Questar Corp","Quintiles Transnational","Qwest Communications Intl Inc","R.J. Reynolds Tobacco Company","R.R. Donnelley \x26 Sons Company","Radio Shack Corporation","Raymond James Financial Inc.","Raytheon Company","Reader's Digest Association Inc.","Reebok International Ltd.","Regions Financial Corp.","Regis Corporation","Reliance Steel \x26 Aluminum Co.","Reliant Energy Inc.","Rent A Center Inc","Republic Services Inc","Revlon Inc",
"RGS Energy Group Inc","Rite Aid Corp","Riverwood Holding Inc.","RoadwayCorp","Robert Half International Inc.","Rock-Tenn Co","Rockwell Automation Inc","Rockwell Collins Inc","Rohm \x26 Haas Co.","Ross Stores Inc","RPM Inc.","Ruddick Corp","Ryder System Inc","Ryerson Tull Inc","Ryland Group Inc.","Sabre Holdings Corp","Safeco Corp","Safeguard Scientifics Inc.","Safeway Inc","Saks Inc","Sanmina-SCI Inc","Sara Lee Corp","SBC Communications Inc","Scana Corp.","Schering-Plough Corp","Scholastic Corp",
"SCI Systems Onc.","Science Applications Intl. Inc.","Scientific-Atlanta Inc","Scotts Company","Seaboard Corp","Sealed Air Corp","Sears Roebuck \x26 Co","Sempra Energy","Sequa Corp","Service Corp. International","ServiceMaster Co","Shaw Group Inc","Sherwin-Williams Company","Shopko Stores Inc","Siebel Systems Inc","Sierra Health Services Inc","Sierra Pacific Resources","Silgan Holdings Inc.","Silicon Graphics Inc","Simon Property Group Inc","SLM Corporation","Smith International Inc","Smithfield Foods Inc",
"Smurfit-Stone Container Corp","Snap-On Inc","Solectron Corp","Solutia Inc","Sonic Automotive Inc.","Sonoco Products Co.","Southern Company","Southern Union Company","SouthTrust Corp.","Southwest Airlines Co","Southwest Gas Corp","Sovereign Bancorp Inc.","Spartan Stores Inc","Spherion Corp","Sports Authority Inc","Sprint Corp.","SPX Corp","St. Jude Medical Inc","St. Paul Cos.","Staff Leasing Inc.","StanCorp Financial Group Inc","Standard Pacific Corp.","Stanley Works","Staples Inc","Starbucks Corp",
"Starwood Hotels \x26 Resorts Worldwide Inc","State Street Corp.","Stater Bros. Holdings Inc.","Steelcase Inc","Stein Mart Inc","Stewart \x26 Stevenson Services Inc","Stewart Information Services Corp","Stilwell Financial Inc","Storage Technology Corporation","Stryker Corp","Sun Healthcare Group Inc.","Sun Microsystems Inc.","SunGard Data Systems Inc.","Sunoco Inc.","SunTrust Banks Inc","Supervalu Inc","Swift Transportation, Co., Inc","Symbol Technologies Inc","Synovus Financial Corp.","Sysco Corp",
"Systemax Inc.","Target Corp.","Tech Data Corporation","TECO Energy Inc","Tecumseh Products Company","Tektronix Inc","Teleflex Incorporated","Telephone \x26 Data Systems Inc","Tellabs Inc.","Temple-Inland Inc","Tenet Healthcare Corporation","Tenneco Automotive Inc.","Teradyne Inc","Terex Corp","Tesoro Petroleum Corp.","Texas Industries Inc.","Texas Instruments Incorporated","Textron Inc","Thermo Electron Corporation","Thomas \x26 Betts Corporation","Tiffany \x26 Co","Timken Company","TJX Companies Inc",
"TMP Worldwide Inc","Toll Brothers Inc","Torchmark Corporation","Toro Company","Tower Automotive Inc.","Toys 'R' Us Inc","Trans World Entertainment Corp.","TransMontaigne Inc","Transocean Inc","TravelCenters of America Inc.","Triad Hospitals Inc","Tribune Company","Trigon Healthcare Inc.","Trinity Industries Inc","Trump Hotels \x26 Casino Resorts Inc.","TruServ Corporation","TRW Inc","TXU Corp","Tyson Foods Inc","U.S. Bancorp","U.S. Industries Inc.","UAL Corporation","UGI Corporation","Unified Western Grocers Inc",
"Union Pacific Corporation","Union Planters Corp","Unisource Energy Corp","Unisys Corporation","United Auto Group Inc","United Defense Industries Inc.","United Parcel Service Inc","United Rentals Inc","United Stationers Inc","United Technologies Corporation","UnitedHealth Group Incorporated","Unitrin Inc","Universal Corporation","Universal Forest Products Inc","Universal Health Services Inc","Unocal Corporation","Unova Inc","UnumProvident Corporation","URS Corporation","US Airways Group Inc","US Oncology Inc",
"USA Interactive","USFreighways Corporation","USG Corporation","UST Inc","Valero Energy Corporation","Valspar Corporation","Value City Department Stores Inc","Varco International Inc","Vectren Corporation","Veritas Software Corporation","Verizon Communications Inc","VF Corporation","Viacom Inc","Viad Corp","Viasystems Group Inc","Vishay Intertechnology Inc","Visteon Corporation","Volt Information Sciences Inc","Vulcan Materials Company","W.R. Berkley Corporation","W.R. Grace \x26 Co","W.W. Grainger Inc",
"Wachovia Corporation","Wakenhut Corporation","Walgreen Co","Wallace Computer Services Inc","Wal-Mart Stores Inc","Walt Disney Co","Walter Industries Inc","Washington Mutual Inc","Washington Post Co.","Waste Management Inc","Watsco Inc","Weatherford International Inc","Weis Markets Inc.","Wellpoint Health Networks Inc","Wells Fargo \x26 Company","Wendy's International Inc","Werner Enterprises Inc","WESCO International Inc","Western Digital Inc","Western Gas Resources Inc","WestPoint Stevens Inc",
"Weyerhauser Company","WGL Holdings Inc","Whirlpool Corporation","Whole Foods Market Inc","Willamette Industries Inc.","Williams Companies Inc","Williams Sonoma Inc","Winn Dixie Stores Inc","Wisconsin Energy Corporation","Wm Wrigley Jr Company","World Fuel Services Corporation","WorldCom Inc","Worthington Industries Inc","WPS Resources Corporation","Wyeth","Wyndham International Inc","Xcel Energy Inc","Xerox Corp","Xilinx Inc","XO Communications Inc","Yellow Corporation","York International Corp",
"Yum Brands Inc.","Zale Corporation","Zions Bancorporation"],fileExtension:{"raster":["bmp","gif","gpl","ico","jpeg","psd","png","psp","raw","tiff"],"vector":["3dv","amf","awg","ai","cgm","cdr","cmx","dxf","e2d","egt","eps","fs","odg","svg","xar"],"3d":["3dmf","3dm","3mf","3ds","an8","aoi","blend","cal3d","cob","ctm","iob","jas","max","mb","mdx","obj","x","x3d"],"document":["doc","docx","dot","html","xml","odt","odm","ott","csv","rtf","tex","xhtml","xps"]},timezones:[{"name":"Dateline Standard Time",
"abbr":"DST","offset":-12,"isdst":false,"text":"(UTC-12:00) International Date Line West","utc":["Etc/GMT+12"]},{"name":"UTC-11","abbr":"U","offset":-11,"isdst":false,"text":"(UTC-11:00) Coordinated Universal Time-11","utc":["Etc/GMT+11","Pacific/Midway","Pacific/Niue","Pacific/Pago_Pago"]},{"name":"Hawaiian Standard Time","abbr":"HST","offset":-10,"isdst":false,"text":"(UTC-10:00) Hawaii","utc":["Etc/GMT+10","Pacific/Honolulu","Pacific/Johnston","Pacific/Rarotonga","Pacific/Tahiti"]},{"name":"Alaskan Standard Time",
"abbr":"AKDT","offset":-8,"isdst":true,"text":"(UTC-09:00) Alaska","utc":["America/Anchorage","America/Juneau","America/Nome","America/Sitka","America/Yakutat"]},{"name":"Pacific Standard Time (Mexico)","abbr":"PDT","offset":-7,"isdst":true,"text":"(UTC-08:00) Baja California","utc":["America/Santa_Isabel"]},{"name":"Pacific Standard Time","abbr":"PDT","offset":-7,"isdst":true,"text":"(UTC-08:00) Pacific Time (US \x26 Canada)","utc":["America/Dawson","America/Los_Angeles","America/Tijuana","America/Vancouver",
"America/Whitehorse","PST8PDT"]},{"name":"US Mountain Standard Time","abbr":"UMST","offset":-7,"isdst":false,"text":"(UTC-07:00) Arizona","utc":["America/Creston","America/Dawson_Creek","America/Hermosillo","America/Phoenix","Etc/GMT+7"]},{"name":"Mountain Standard Time (Mexico)","abbr":"MDT","offset":-6,"isdst":true,"text":"(UTC-07:00) Chihuahua, La Paz, Mazatlan","utc":["America/Chihuahua","America/Mazatlan"]},{"name":"Mountain Standard Time","abbr":"MDT","offset":-6,"isdst":true,"text":"(UTC-07:00) Mountain Time (US \x26 Canada)",
"utc":["America/Boise","America/Cambridge_Bay","America/Denver","America/Edmonton","America/Inuvik","America/Ojinaga","America/Yellowknife","MST7MDT"]},{"name":"Central America Standard Time","abbr":"CAST","offset":-6,"isdst":false,"text":"(UTC-06:00) Central America","utc":["America/Belize","America/Costa_Rica","America/El_Salvador","America/Guatemala","America/Managua","America/Tegucigalpa","Etc/GMT+6","Pacific/Galapagos"]},{"name":"Central Standard Time","abbr":"CDT","offset":-5,"isdst":true,"text":"(UTC-06:00) Central Time (US \x26 Canada)",
"utc":["America/Chicago","America/Indiana/Knox","America/Indiana/Tell_City","America/Matamoros","America/Menominee","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Rainy_River","America/Rankin_Inlet","America/Resolute","America/Winnipeg","CST6CDT"]},{"name":"Central Standard Time (Mexico)","abbr":"CDT","offset":-5,"isdst":true,"text":"(UTC-06:00) Guadalajara, Mexico City, Monterrey","utc":["America/Bahia_Banderas","America/Cancun","America/Merida",
"America/Mexico_City","America/Monterrey"]},{"name":"Canada Central Standard Time","abbr":"CCST","offset":-6,"isdst":false,"text":"(UTC-06:00) Saskatchewan","utc":["America/Regina","America/Swift_Current"]},{"name":"SA Pacific Standard Time","abbr":"SPST","offset":-5,"isdst":false,"text":"(UTC-05:00) Bogota, Lima, Quito","utc":["America/Bogota","America/Cayman","America/Coral_Harbour","America/Eirunepe","America/Guayaquil","America/Jamaica","America/Lima","America/Panama","America/Rio_Branco","Etc/GMT+5"]},
{"name":"Eastern Standard Time","abbr":"EDT","offset":-4,"isdst":true,"text":"(UTC-05:00) Eastern Time (US \x26 Canada)","utc":["America/Detroit","America/Havana","America/Indiana/Petersburg","America/Indiana/Vincennes","America/Indiana/Winamac","America/Iqaluit","America/Kentucky/Monticello","America/Louisville","America/Montreal","America/Nassau","America/New_York","America/Nipigon","America/Pangnirtung","America/Port-au-Prince","America/Thunder_Bay","America/Toronto","EST5EDT"]},{"name":"US Eastern Standard Time",
"abbr":"UEDT","offset":-4,"isdst":true,"text":"(UTC-05:00) Indiana (East)","utc":["America/Indiana/Marengo","America/Indiana/Vevay","America/Indianapolis"]},{"name":"Venezuela Standard Time","abbr":"VST","offset":-4.5,"isdst":false,"text":"(UTC-04:30) Caracas","utc":["America/Caracas"]},{"name":"Paraguay Standard Time","abbr":"PST","offset":-4,"isdst":false,"text":"(UTC-04:00) Asuncion","utc":["America/Asuncion"]},{"name":"Atlantic Standard Time","abbr":"ADT","offset":-3,"isdst":true,"text":"(UTC-04:00) Atlantic Time (Canada)",
"utc":["America/Glace_Bay","America/Goose_Bay","America/Halifax","America/Moncton","America/Thule","Atlantic/Bermuda"]},{"name":"Central Brazilian Standard Time","abbr":"CBST","offset":-4,"isdst":false,"text":"(UTC-04:00) Cuiaba","utc":["America/Campo_Grande","America/Cuiaba"]},{"name":"SA Western Standard Time","abbr":"SWST","offset":-4,"isdst":false,"text":"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan","utc":["America/Anguilla","America/Antigua","America/Aruba","America/Barbados","America/Blanc-Sablon",
"America/Boa_Vista","America/Curacao","America/Dominica","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guyana","America/Kralendijk","America/La_Paz","America/Lower_Princes","America/Manaus","America/Marigot","America/Martinique","America/Montserrat","America/Port_of_Spain","America/Porto_Velho","America/Puerto_Rico","America/Santo_Domingo","America/St_Barthelemy","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Tortola","Etc/GMT+4"]},{"name":"Pacific SA Standard Time",
"abbr":"PSST","offset":-4,"isdst":false,"text":"(UTC-04:00) Santiago","utc":["America/Santiago","Antarctica/Palmer"]},{"name":"Newfoundland Standard Time","abbr":"NDT","offset":-2.5,"isdst":true,"text":"(UTC-03:30) Newfoundland","utc":["America/St_Johns"]},{"name":"E. South America Standard Time","abbr":"ESAST","offset":-3,"isdst":false,"text":"(UTC-03:00) Brasilia","utc":["America/Sao_Paulo"]},{"name":"Argentina Standard Time","abbr":"AST","offset":-3,"isdst":false,"text":"(UTC-03:00) Buenos Aires",
"utc":["America/Argentina/La_Rioja","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Buenos_Aires","America/Catamarca","America/Cordoba","America/Jujuy","America/Mendoza"]},{"name":"SA Eastern Standard Time","abbr":"SEST","offset":-3,"isdst":false,"text":"(UTC-03:00) Cayenne, Fortaleza","utc":["America/Araguaina","America/Belem","America/Cayenne","America/Fortaleza",
"America/Maceio","America/Paramaribo","America/Recife","America/Santarem","Antarctica/Rothera","Atlantic/Stanley","Etc/GMT+3"]},{"name":"Greenland Standard Time","abbr":"GDT","offset":-2,"isdst":true,"text":"(UTC-03:00) Greenland","utc":["America/Godthab"]},{"name":"Montevideo Standard Time","abbr":"MST","offset":-3,"isdst":false,"text":"(UTC-03:00) Montevideo","utc":["America/Montevideo"]},{"name":"Bahia Standard Time","abbr":"BST","offset":-3,"isdst":false,"text":"(UTC-03:00) Salvador","utc":["America/Bahia"]},
{"name":"UTC-02","abbr":"U","offset":-2,"isdst":false,"text":"(UTC-02:00) Coordinated Universal Time-02","utc":["America/Noronha","Atlantic/South_Georgia","Etc/GMT+2"]},{"name":"Mid-Atlantic Standard Time","abbr":"MDT","offset":-1,"isdst":true,"text":"(UTC-02:00) Mid-Atlantic - Old"},{"name":"Azores Standard Time","abbr":"ADT","offset":0,"isdst":true,"text":"(UTC-01:00) Azores","utc":["America/Scoresbysund","Atlantic/Azores"]},{"name":"Cape Verde Standard Time","abbr":"CVST","offset":-1,"isdst":false,
"text":"(UTC-01:00) Cape Verde Is.","utc":["Atlantic/Cape_Verde","Etc/GMT+1"]},{"name":"Morocco Standard Time","abbr":"MDT","offset":1,"isdst":true,"text":"(UTC) Casablanca","utc":["Africa/Casablanca","Africa/El_Aaiun"]},{"name":"UTC","abbr":"CUT","offset":0,"isdst":false,"text":"(UTC) Coordinated Universal Time","utc":["America/Danmarkshavn","Etc/GMT"]},{"name":"GMT Standard Time","abbr":"GDT","offset":1,"isdst":true,"text":"(UTC) Dublin, Edinburgh, Lisbon, London","utc":["Atlantic/Canary","Atlantic/Faeroe",
"Atlantic/Madeira","Europe/Dublin","Europe/Guernsey","Europe/Isle_of_Man","Europe/Jersey","Europe/Lisbon","Europe/London"]},{"name":"Greenwich Standard Time","abbr":"GST","offset":0,"isdst":false,"text":"(UTC) Monrovia, Reykjavik","utc":["Africa/Abidjan","Africa/Accra","Africa/Bamako","Africa/Banjul","Africa/Bissau","Africa/Conakry","Africa/Dakar","Africa/Freetown","Africa/Lome","Africa/Monrovia","Africa/Nouakchott","Africa/Ouagadougou","Africa/Sao_Tome","Atlantic/Reykjavik","Atlantic/St_Helena"]},
{"name":"W. Europe Standard Time","abbr":"WEDT","offset":2,"isdst":true,"text":"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna","utc":["Arctic/Longyearbyen","Europe/Amsterdam","Europe/Andorra","Europe/Berlin","Europe/Busingen","Europe/Gibraltar","Europe/Luxembourg","Europe/Malta","Europe/Monaco","Europe/Oslo","Europe/Rome","Europe/San_Marino","Europe/Stockholm","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Zurich"]},{"name":"Central Europe Standard Time","abbr":"CEDT","offset":2,
"isdst":true,"text":"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague","utc":["Europe/Belgrade","Europe/Bratislava","Europe/Budapest","Europe/Ljubljana","Europe/Podgorica","Europe/Prague","Europe/Tirane"]},{"name":"Romance Standard Time","abbr":"RDT","offset":2,"isdst":true,"text":"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris","utc":["Africa/Ceuta","Europe/Brussels","Europe/Copenhagen","Europe/Madrid","Europe/Paris"]},{"name":"Central European Standard Time","abbr":"CEDT","offset":2,
"isdst":true,"text":"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb","utc":["Europe/Sarajevo","Europe/Skopje","Europe/Warsaw","Europe/Zagreb"]},{"name":"W. Central Africa Standard Time","abbr":"WCAST","offset":1,"isdst":false,"text":"(UTC+01:00) West Central Africa","utc":["Africa/Algiers","Africa/Bangui","Africa/Brazzaville","Africa/Douala","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Luanda","Africa/Malabo","Africa/Ndjamena","Africa/Niamey","Africa/Porto-Novo","Africa/Tunis","Etc/GMT-1"]},
{"name":"Namibia Standard Time","abbr":"NST","offset":1,"isdst":false,"text":"(UTC+01:00) Windhoek","utc":["Africa/Windhoek"]},{"name":"GTB Standard Time","abbr":"GDT","offset":3,"isdst":true,"text":"(UTC+02:00) Athens, Bucharest","utc":["Asia/Nicosia","Europe/Athens","Europe/Bucharest","Europe/Chisinau"]},{"name":"Middle East Standard Time","abbr":"MEDT","offset":3,"isdst":true,"text":"(UTC+02:00) Beirut","utc":["Asia/Beirut"]},{"name":"Egypt Standard Time","abbr":"EST","offset":2,"isdst":false,
"text":"(UTC+02:00) Cairo","utc":["Africa/Cairo"]},{"name":"Syria Standard Time","abbr":"SDT","offset":3,"isdst":true,"text":"(UTC+02:00) Damascus","utc":["Asia/Damascus"]},{"name":"E. Europe Standard Time","abbr":"EEDT","offset":3,"isdst":true,"text":"(UTC+02:00) E. Europe"},{"name":"South Africa Standard Time","abbr":"SAST","offset":2,"isdst":false,"text":"(UTC+02:00) Harare, Pretoria","utc":["Africa/Blantyre","Africa/Bujumbura","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Kigali",
"Africa/Lubumbashi","Africa/Lusaka","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Etc/GMT-2"]},{"name":"FLE Standard Time","abbr":"FDT","offset":3,"isdst":true,"text":"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius","utc":["Europe/Helsinki","Europe/Kiev","Europe/Mariehamn","Europe/Riga","Europe/Sofia","Europe/Tallinn","Europe/Uzhgorod","Europe/Vilnius","Europe/Zaporozhye"]},{"name":"Turkey Standard Time","abbr":"TDT","offset":3,"isdst":true,"text":"(UTC+02:00) Istanbul","utc":["Europe/Istanbul"]},
{"name":"Israel Standard Time","abbr":"JDT","offset":3,"isdst":true,"text":"(UTC+02:00) Jerusalem","utc":["Asia/Jerusalem"]},{"name":"Libya Standard Time","abbr":"LST","offset":2,"isdst":false,"text":"(UTC+02:00) Tripoli","utc":["Africa/Tripoli"]},{"name":"Jordan Standard Time","abbr":"JST","offset":3,"isdst":false,"text":"(UTC+03:00) Amman","utc":["Asia/Amman"]},{"name":"Arabic Standard Time","abbr":"AST","offset":3,"isdst":false,"text":"(UTC+03:00) Baghdad","utc":["Asia/Baghdad"]},{"name":"Kaliningrad Standard Time",
"abbr":"KST","offset":3,"isdst":false,"text":"(UTC+03:00) Kaliningrad, Minsk","utc":["Europe/Kaliningrad","Europe/Minsk"]},{"name":"Arab Standard Time","abbr":"AST","offset":3,"isdst":false,"text":"(UTC+03:00) Kuwait, Riyadh","utc":["Asia/Aden","Asia/Bahrain","Asia/Kuwait","Asia/Qatar","Asia/Riyadh"]},{"name":"E. Africa Standard Time","abbr":"EAST","offset":3,"isdst":false,"text":"(UTC+03:00) Nairobi","utc":["Africa/Addis_Ababa","Africa/Asmera","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Juba",
"Africa/Kampala","Africa/Khartoum","Africa/Mogadishu","Africa/Nairobi","Antarctica/Syowa","Etc/GMT-3","Indian/Antananarivo","Indian/Comoro","Indian/Mayotte"]},{"name":"Iran Standard Time","abbr":"IDT","offset":4.5,"isdst":true,"text":"(UTC+03:30) Tehran","utc":["Asia/Tehran"]},{"name":"Arabian Standard Time","abbr":"AST","offset":4,"isdst":false,"text":"(UTC+04:00) Abu Dhabi, Muscat","utc":["Asia/Dubai","Asia/Muscat","Etc/GMT-4"]},{"name":"Azerbaijan Standard Time","abbr":"ADT","offset":5,"isdst":true,
"text":"(UTC+04:00) Baku","utc":["Asia/Baku"]},{"name":"Russian Standard Time","abbr":"RST","offset":4,"isdst":false,"text":"(UTC+04:00) Moscow, St. Petersburg, Volgograd","utc":["Europe/Moscow","Europe/Samara","Europe/Simferopol","Europe/Volgograd"]},{"name":"Mauritius Standard Time","abbr":"MST","offset":4,"isdst":false,"text":"(UTC+04:00) Port Louis","utc":["Indian/Mahe","Indian/Mauritius","Indian/Reunion"]},{"name":"Georgian Standard Time","abbr":"GST","offset":4,"isdst":false,"text":"(UTC+04:00) Tbilisi",
"utc":["Asia/Tbilisi"]},{"name":"Caucasus Standard Time","abbr":"CST","offset":4,"isdst":false,"text":"(UTC+04:00) Yerevan","utc":["Asia/Yerevan"]},{"name":"Afghanistan Standard Time","abbr":"AST","offset":4.5,"isdst":false,"text":"(UTC+04:30) Kabul","utc":["Asia/Kabul"]},{"name":"West Asia Standard Time","abbr":"WAST","offset":5,"isdst":false,"text":"(UTC+05:00) Ashgabat, Tashkent","utc":["Antarctica/Mawson","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Dushanbe","Asia/Oral","Asia/Samarkand",
"Asia/Tashkent","Etc/GMT-5","Indian/Kerguelen","Indian/Maldives"]},{"name":"Pakistan Standard Time","abbr":"PST","offset":5,"isdst":false,"text":"(UTC+05:00) Islamabad, Karachi","utc":["Asia/Karachi"]},{"name":"India Standard Time","abbr":"IST","offset":5.5,"isdst":false,"text":"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi","utc":["Asia/Calcutta"]},{"name":"Sri Lanka Standard Time","abbr":"SLST","offset":5.5,"isdst":false,"text":"(UTC+05:30) Sri Jayawardenepura","utc":["Asia/Colombo"]},{"name":"Nepal Standard Time",
"abbr":"NST","offset":5.75,"isdst":false,"text":"(UTC+05:45) Kathmandu","utc":["Asia/Katmandu"]},{"name":"Central Asia Standard Time","abbr":"CAST","offset":6,"isdst":false,"text":"(UTC+06:00) Astana","utc":["Antarctica/Vostok","Asia/Almaty","Asia/Bishkek","Asia/Qyzylorda","Asia/Urumqi","Etc/GMT-6","Indian/Chagos"]},{"name":"Bangladesh Standard Time","abbr":"BST","offset":6,"isdst":false,"text":"(UTC+06:00) Dhaka","utc":["Asia/Dhaka","Asia/Thimphu"]},{"name":"Ekaterinburg Standard Time","abbr":"EST",
"offset":6,"isdst":false,"text":"(UTC+06:00) Ekaterinburg","utc":["Asia/Yekaterinburg"]},{"name":"Myanmar Standard Time","abbr":"MST","offset":6.5,"isdst":false,"text":"(UTC+06:30) Yangon (Rangoon)","utc":["Asia/Rangoon","Indian/Cocos"]},{"name":"SE Asia Standard Time","abbr":"SAST","offset":7,"isdst":false,"text":"(UTC+07:00) Bangkok, Hanoi, Jakarta","utc":["Antarctica/Davis","Asia/Bangkok","Asia/Hovd","Asia/Jakarta","Asia/Phnom_Penh","Asia/Pontianak","Asia/Saigon","Asia/Vientiane","Etc/GMT-7","Indian/Christmas"]},
{"name":"N. Central Asia Standard Time","abbr":"NCAST","offset":7,"isdst":false,"text":"(UTC+07:00) Novosibirsk","utc":["Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk"]},{"name":"China Standard Time","abbr":"CST","offset":8,"isdst":false,"text":"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi","utc":["Asia/Hong_Kong","Asia/Macau","Asia/Shanghai"]},{"name":"North Asia Standard Time","abbr":"NAST","offset":8,"isdst":false,"text":"(UTC+08:00) Krasnoyarsk","utc":["Asia/Krasnoyarsk"]},{"name":"Singapore Standard Time",
"abbr":"MPST","offset":8,"isdst":false,"text":"(UTC+08:00) Kuala Lumpur, Singapore","utc":["Asia/Brunei","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Makassar","Asia/Manila","Asia/Singapore","Etc/GMT-8"]},{"name":"W. Australia Standard Time","abbr":"WAST","offset":8,"isdst":false,"text":"(UTC+08:00) Perth","utc":["Antarctica/Casey","Australia/Perth"]},{"name":"Taipei Standard Time","abbr":"TST","offset":8,"isdst":false,"text":"(UTC+08:00) Taipei","utc":["Asia/Taipei"]},{"name":"Ulaanbaatar Standard Time",
"abbr":"UST","offset":8,"isdst":false,"text":"(UTC+08:00) Ulaanbaatar","utc":["Asia/Choibalsan","Asia/Ulaanbaatar"]},{"name":"North Asia East Standard Time","abbr":"NAEST","offset":9,"isdst":false,"text":"(UTC+09:00) Irkutsk","utc":["Asia/Irkutsk"]},{"name":"Tokyo Standard Time","abbr":"TST","offset":9,"isdst":false,"text":"(UTC+09:00) Osaka, Sapporo, Tokyo","utc":["Asia/Dili","Asia/Jayapura","Asia/Tokyo","Etc/GMT-9","Pacific/Palau"]},{"name":"Korea Standard Time","abbr":"KST","offset":9,"isdst":false,
"text":"(UTC+09:00) Seoul","utc":["Asia/Pyongyang","Asia/Seoul"]},{"name":"Cen. Australia Standard Time","abbr":"CAST","offset":9.5,"isdst":false,"text":"(UTC+09:30) Adelaide","utc":["Australia/Adelaide","Australia/Broken_Hill"]},{"name":"AUS Central Standard Time","abbr":"ACST","offset":9.5,"isdst":false,"text":"(UTC+09:30) Darwin","utc":["Australia/Darwin"]},{"name":"E. Australia Standard Time","abbr":"EAST","offset":10,"isdst":false,"text":"(UTC+10:00) Brisbane","utc":["Australia/Brisbane","Australia/Lindeman"]},
{"name":"AUS Eastern Standard Time","abbr":"AEST","offset":10,"isdst":false,"text":"(UTC+10:00) Canberra, Melbourne, Sydney","utc":["Australia/Melbourne","Australia/Sydney"]},{"name":"West Pacific Standard Time","abbr":"WPST","offset":10,"isdst":false,"text":"(UTC+10:00) Guam, Port Moresby","utc":["Antarctica/DumontDUrville","Etc/GMT-10","Pacific/Guam","Pacific/Port_Moresby","Pacific/Saipan","Pacific/Truk"]},{"name":"Tasmania Standard Time","abbr":"TST","offset":10,"isdst":false,"text":"(UTC+10:00) Hobart",
"utc":["Australia/Currie","Australia/Hobart"]},{"name":"Yakutsk Standard Time","abbr":"YST","offset":10,"isdst":false,"text":"(UTC+10:00) Yakutsk","utc":["Asia/Chita","Asia/Khandyga","Asia/Yakutsk"]},{"name":"Central Pacific Standard Time","abbr":"CPST","offset":11,"isdst":false,"text":"(UTC+11:00) Solomon Is., New Caledonia","utc":["Antarctica/Macquarie","Etc/GMT-11","Pacific/Efate","Pacific/Guadalcanal","Pacific/Kosrae","Pacific/Noumea","Pacific/Ponape"]},{"name":"Vladivostok Standard Time","abbr":"VST",
"offset":11,"isdst":false,"text":"(UTC+11:00) Vladivostok","utc":["Asia/Sakhalin","Asia/Ust-Nera","Asia/Vladivostok"]},{"name":"New Zealand Standard Time","abbr":"NZST","offset":12,"isdst":false,"text":"(UTC+12:00) Auckland, Wellington","utc":["Antarctica/McMurdo","Pacific/Auckland"]},{"name":"UTC+12","abbr":"U","offset":12,"isdst":false,"text":"(UTC+12:00) Coordinated Universal Time+12","utc":["Etc/GMT-12","Pacific/Funafuti","Pacific/Kwajalein","Pacific/Majuro","Pacific/Nauru","Pacific/Tarawa","Pacific/Wake",
"Pacific/Wallis"]},{"name":"Fiji Standard Time","abbr":"FST","offset":12,"isdst":false,"text":"(UTC+12:00) Fiji","utc":["Pacific/Fiji"]},{"name":"Magadan Standard Time","abbr":"MST","offset":12,"isdst":false,"text":"(UTC+12:00) Magadan","utc":["Asia/Anadyr","Asia/Kamchatka","Asia/Magadan","Asia/Srednekolymsk"]},{"name":"Kamchatka Standard Time","abbr":"KDT","offset":13,"isdst":true,"text":"(UTC+12:00) Petropavlovsk-Kamchatsky - Old"},{"name":"Tonga Standard Time","abbr":"TST","offset":13,"isdst":false,
"text":"(UTC+13:00) Nuku'alofa","utc":["Etc/GMT-13","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Tongatapu"]},{"name":"Samoa Standard Time","abbr":"SST","offset":13,"isdst":false,"text":"(UTC+13:00) Samoa","utc":["Pacific/Apia"]}],profession:["Airline Pilot","Academic Team","Accountant","Account Executive","Actor","Actuary","Acquisition Analyst","Administrative Asst.","Administrative Analyst","Administrator","Advertising Director","Aerospace Engineer","Agent","Agricultural Inspector","Agricultural Scientist",
"Air Traffic Controller","Animal Trainer","Anthropologist","Appraiser","Architect","Art Director","Artist","Astronomer","Athletic Coach","Auditor","Author","Baker","Banker","Bankruptcy Attorney","Benefits Manager","Biologist","Bio-feedback Specialist","Biomedical Engineer","Biotechnical Researcher","Broadcaster","Broker","Building Manager","Building Contractor","Building Inspector","Business Analyst","Business Planner","Business Manager","Buyer","Call Center Manager","Career Counselor","Cash Manager",
"Ceramic Engineer","Chief Executive Officer","Chief Operation Officer","Chef","Chemical Engineer","Chemist","Child Care Manager","Chief Medical Officer","Chiropractor","Cinematographer","City Housing Manager","City Manager","Civil Engineer","Claims Manager","Clinical Research Assistant","Collections Manager.","Compliance Manager","Comptroller","Computer Manager","Commercial Artist","Communications Affairs Director","Communications Director","Communications Engineer","Compensation Analyst","Computer Programmer",
"Computer Ops. Manager","Computer Engineer","Computer Operator","Computer Graphics Specialist","Construction Engineer","Construction Manager","Consultant","Consumer Relations Manager","Contract Administrator","Copyright Attorney","Copywriter","Corporate Planner","Corrections Officer","Cosmetologist","Credit Analyst","Cruise Director","Chief Information Officer","Chief Technology Officer","Customer Service Manager","Cryptologist","Dancer","Data Security Manager","Database Manager","Day Care Instructor",
"Dentist","Designer","Design Engineer","Desktop Publisher","Developer","Development Officer","Diamond Merchant","Dietitian","Direct Marketer","Director","Distribution Manager","Diversity Manager","Economist","EEO Compliance Manager","Editor","Education Adminator","Electrical Engineer","Electro Optical Engineer","Electronics Engineer","Embassy Management","Employment Agent","Engineer Technician","Entrepreneur","Environmental Analyst","Environmental Attorney","Environmental Engineer","Environmental Specialist",
"Escrow Officer","Estimator","Executive Assistant","Executive Director","Executive Recruiter","Facilities Manager","Family Counselor","Fashion Events Manager","Fashion Merchandiser","Fast Food Manager","Film Producer","Film Production Assistant","Financial Analyst","Financial Planner","Financier","Fine Artist","Wildlife Specialist","Fitness Consultant","Flight Attendant","Flight Engineer","Floral Designer","Food \x26 Beverage Director","Food Service Manager","Forestry Technician","Franchise Management",
"Franchise Sales","Fraud Investigator","Freelance Writer","Fund Raiser","General Manager","Geologist","General Counsel","Geriatric Specialist","Gerontologist","Glamour Photographer","Golf Club Manager","Gourmet Chef","Graphic Designer","Grounds Keeper","Hazardous Waste Manager","Health Care Manager","Health Therapist","Health Service Administrator","Hearing Officer","Home Economist","Horticulturist","Hospital Administrator","Hotel Manager","Human Resources Manager","Importer","Industrial Designer",
"Industrial Engineer","Information Director","Inside Sales","Insurance Adjuster","Interior Decorator","Internal Controls Director","International Acct.","International Courier","International Lawyer","Interpreter","Investigator","Investment Banker","Investment Manager","IT Architect","IT Project Manager","IT Systems Analyst","Jeweler","Joint Venture Manager","Journalist","Labor Negotiator","Labor Organizer","Labor Relations Manager","Lab Services Director","Lab Technician","Land Developer","Landscape Architect",
"Law Enforcement Officer","Lawyer","Lead Software Engineer","Lead Software Test Engineer","Leasing Manager","Legal Secretary","Library Manager","Litigation Attorney","Loan Officer","Lobbyist","Logistics Manager","Maintenance Manager","Management Consultant","Managed Care Director","Managing Partner","Manufacturing Director","Manpower Planner","Marine Biologist","Market Res. Analyst","Marketing Director","Materials Manager","Mathematician","Membership Chairman","Mechanic","Mechanical Engineer","Media Buyer",
"Medical Investor","Medical Secretary","Medical Technician","Mental Health Counselor","Merchandiser","Metallurgical Engineering","Meteorologist","Microbiologist","MIS Manager","Motion Picture Director","Multimedia Director","Musician","Network Administrator","Network Specialist","Network Operator","New Product Manager","Novelist","Nuclear Engineer","Nuclear Specialist","Nutritionist","Nursing Administrator","Occupational Therapist","Oceanographer","Office Manager","Operations Manager","Operations Research Director",
"Optical Technician","Optometrist","Organizational Development Manager","Outplacement Specialist","Paralegal","Park Ranger","Patent Attorney","Payroll Specialist","Personnel Specialist","Petroleum Engineer","Pharmacist","Photographer","Physical Therapist","Physician","Physician Assistant","Physicist","Planning Director","Podiatrist","Political Analyst","Political Scientist","Politician","Portfolio Manager","Preschool Management","Preschool Teacher","Principal","Private Banker","Private Investigator",
"Probation Officer","Process Engineer","Producer","Product Manager","Product Engineer","Production Engineer","Production Planner","Professional Athlete","Professional Coach","Professor","Project Engineer","Project Manager","Program Manager","Property Manager","Public Administrator","Public Safety Director","PR Specialist","Publisher","Purchasing Agent","Publishing Director","Quality Assurance Specialist","Quality Control Engineer","Quality Control Inspector","Radiology Manager","Railroad Engineer",
"Real Estate Broker","Recreational Director","Recruiter","Redevelopment Specialist","Regulatory Affairs Manager","Registered Nurse","Rehabilitation Counselor","Relocation Manager","Reporter","Research Specialist","Restaurant Manager","Retail Store Manager","Risk Analyst","Safety Engineer","Sales Engineer","Sales Trainer","Sales Promotion Manager","Sales Representative","Sales Manager","Service Manager","Sanitation Engineer","Scientific Programmer","Scientific Writer","Securities Analyst","Security Consultant",
"Security Director","Seminar Presenter","Ship's Officer","Singer","Social Director","Social Program Planner","Social Research","Social Scientist","Social Worker","Sociologist","Software Developer","Software Engineer","Software Test Engineer","Soil Scientist","Special Events Manager","Special Education Teacher","Special Projects Director","Speech Pathologist","Speech Writer","Sports Event Manager","Statistician","Store Manager","Strategic Alliance Director","Strategic Planning Director","Stress Reduction Specialist",
"Stockbroker","Surveyor","Structural Engineer","Superintendent","Supply Chain Director","System Engineer","Systems Analyst","Systems Programmer","System Administrator","Tax Specialist","Teacher","Technical Support Specialist","Technical Illustrator","Technical Writer","Technology Director","Telecom Analyst","Telemarketer","Theatrical Director","Title Examiner","Tour Escort","Tour Guide Director","Traffic Manager","Trainer Translator","Transportation Manager","Travel Agent","Treasurer","TV Programmer",
"Underwriter","Union Representative","University Administrator","University Dean","Urban Planner","Veterinarian","Vendor Relations Director","Viticulturist","Warehouse Manager"]};var o_hasOwnProperty=Object.prototype.hasOwnProperty;var o_keys=Object.keys||function(obj){var result=[];for(var key in obj)if(o_hasOwnProperty.call(obj,key))result.push(key);return result};function _copyObject(source,target){var keys=o_keys(source);var key;for(var i=0,l=keys.length;i<l;i++){key=keys[i];target[key]=source[key]||
target[key]}}function _copyArray(source,target){for(var i=0,l=source.length;i<l;i++)target[i]=source[i]}function copyObject(source,_target){var isArray=Array.isArray(source);var target=_target||(isArray?new Array(source.length):{});if(isArray)_copyArray(source,target);else _copyObject(source,target);return target}Chance.prototype.get=function(name){return copyObject(data[name])};Chance.prototype.mac_address=function(options){options=initOptions(options);if(!options.separator)options.separator=options.networkVersion?
".":":";var mac_pool="ABCDEF1234567890",mac="";if(!options.networkVersion)mac=this.n(this.string,6,{pool:mac_pool,length:2}).join(options.separator);else mac=this.n(this.string,3,{pool:mac_pool,length:4}).join(options.separator);return mac};Chance.prototype.normal=function(options){options=initOptions(options,{mean:0,dev:1,pool:[]});testRange(options.pool.constructor!==Array,"Chance: The pool option must be a valid array.");testRange(typeof options.mean!=="number","Chance: Mean (mean) must be a number");
testRange(typeof options.dev!=="number","Chance: Standard deviation (dev) must be a number");if(options.pool.length>0)return this.normal_pool(options);var s,u,v,norm,mean=options.mean,dev=options.dev;do{u=this.random()*2-1;v=this.random()*2-1;s=u*u+v*v}while(s>=1);norm=u*Math.sqrt(-2*Math.log(s)/s);return dev*norm+mean};Chance.prototype.normal_pool=function(options){var performanceCounter=0;do{var idx=Math.round(this.normal({mean:options.mean,dev:options.dev}));if(idx<options.pool.length&&idx>=0)return options.pool[idx];
else performanceCounter++}while(performanceCounter<100);throw new RangeError("Chance: Your pool is too small for the given mean and standard deviation. Please adjust.");};Chance.prototype.radio=function(options){options=initOptions(options,{side:"?"});var fl="";switch(options.side.toLowerCase()){case "east":case "e":fl="W";break;case "west":case "w":fl="K";break;default:fl=this.character({pool:"KW"});break}return fl+this.character({alpha:true,casing:"upper"})+this.character({alpha:true,casing:"upper"})+
this.character({alpha:true,casing:"upper"})};Chance.prototype.set=function(name,values){if(typeof name==="string")data[name]=values;else data=copyObject(name,data)};Chance.prototype.tv=function(options){return this.radio(options)};Chance.prototype.cnpj=function(){var n=this.n(this.natural,8,{max:9});var d1=2+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;d1=11-d1%11;if(d1>=10)d1=0;var d2=d1*2+3+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;d2=11-d2%11;if(d2>=10)d2=0;return""+n[0]+
n[1]+"."+n[2]+n[3]+n[4]+"."+n[5]+n[6]+n[7]+"/0001-"+d1+d2};Chance.prototype.mersenne_twister=function(seed){return new MersenneTwister(seed)};Chance.prototype.blueimp_md5=function(){return new BlueImpMD5};var MersenneTwister=function(seed){if(seed===undefined)seed=Math.floor(Math.random()*Math.pow(10,13));this.N=624;this.M=397;this.MATRIX_A=2567483615;this.UPPER_MASK=2147483648;this.LOWER_MASK=2147483647;this.mt=new Array(this.N);this.mti=this.N+1;this.init_genrand(seed)};MersenneTwister.prototype.init_genrand=
function(s){this.mt[0]=s>>>0;for(this.mti=1;this.mti<this.N;this.mti++){s=this.mt[this.mti-1]^this.mt[this.mti-1]>>>30;this.mt[this.mti]=(((s&4294901760)>>>16)*1812433253<<16)+(s&65535)*1812433253+this.mti;this.mt[this.mti]>>>=0}};MersenneTwister.prototype.init_by_array=function(init_key,key_length){var i=1,j=0,k,s;this.init_genrand(19650218);k=this.N>key_length?this.N:key_length;for(;k;k--){s=this.mt[i-1]^this.mt[i-1]>>>30;this.mt[i]=(this.mt[i]^(((s&4294901760)>>>16)*1664525<<16)+(s&65535)*1664525)+
init_key[j]+j;this.mt[i]>>>=0;i++;j++;if(i>=this.N){this.mt[0]=this.mt[this.N-1];i=1}if(j>=key_length)j=0}for(k=this.N-1;k;k--){s=this.mt[i-1]^this.mt[i-1]>>>30;this.mt[i]=(this.mt[i]^(((s&4294901760)>>>16)*1566083941<<16)+(s&65535)*1566083941)-i;this.mt[i]>>>=0;i++;if(i>=this.N){this.mt[0]=this.mt[this.N-1];i=1}}this.mt[0]=2147483648};MersenneTwister.prototype.genrand_int32=function(){var y;var mag01=new Array(0,this.MATRIX_A);if(this.mti>=this.N){var kk;if(this.mti===this.N+1)this.init_genrand(5489);
for(kk=0;kk<this.N-this.M;kk++){y=this.mt[kk]&this.UPPER_MASK|this.mt[kk+1]&this.LOWER_MASK;this.mt[kk]=this.mt[kk+this.M]^y>>>1^mag01[y&1]}for(;kk<this.N-1;kk++){y=this.mt[kk]&this.UPPER_MASK|this.mt[kk+1]&this.LOWER_MASK;this.mt[kk]=this.mt[kk+(this.M-this.N)]^y>>>1^mag01[y&1]}y=this.mt[this.N-1]&this.UPPER_MASK|this.mt[0]&this.LOWER_MASK;this.mt[this.N-1]=this.mt[this.M-1]^y>>>1^mag01[y&1];this.mti=0}y=this.mt[this.mti++];y^=y>>>11;y^=y<<7&2636928640;y^=y<<15&4022730752;y^=y>>>18;return y>>>0};
MersenneTwister.prototype.genrand_int31=function(){return this.genrand_int32()>>>1};MersenneTwister.prototype.genrand_real1=function(){return this.genrand_int32()*(1/4294967295)};MersenneTwister.prototype.random=function(){return this.genrand_int32()*(1/4294967296)};MersenneTwister.prototype.genrand_real3=function(){return(this.genrand_int32()+.5)*(1/4294967296)};MersenneTwister.prototype.genrand_res53=function(){var a=this.genrand_int32()>>>5,b=this.genrand_int32()>>>6;return(a*67108864+b)*(1/9007199254740992)};
var BlueImpMD5=function(){};BlueImpMD5.prototype.VERSION="1.0.1";BlueImpMD5.prototype.safe_add=function safe_add(x,y){var lsw=(x&65535)+(y&65535),msw=(x>>16)+(y>>16)+(lsw>>16);return msw<<16|lsw&65535};BlueImpMD5.prototype.bit_roll=function(num,cnt){return num<<cnt|num>>>32-cnt};BlueImpMD5.prototype.md5_cmn=function(q,a,b,x,s,t){return this.safe_add(this.bit_roll(this.safe_add(this.safe_add(a,q),this.safe_add(x,t)),s),b)};BlueImpMD5.prototype.md5_ff=function(a,b,c,d,x,s,t){return this.md5_cmn(b&c|
~b&d,a,b,x,s,t)};BlueImpMD5.prototype.md5_gg=function(a,b,c,d,x,s,t){return this.md5_cmn(b&d|c&~d,a,b,x,s,t)};BlueImpMD5.prototype.md5_hh=function(a,b,c,d,x,s,t){return this.md5_cmn(b^c^d,a,b,x,s,t)};BlueImpMD5.prototype.md5_ii=function(a,b,c,d,x,s,t){return this.md5_cmn(c^(b|~d),a,b,x,s,t)};BlueImpMD5.prototype.binl_md5=function(x,len){x[len>>5]|=128<<len%32;x[(len+64>>>9<<4)+14]=len;var i,olda,oldb,oldc,oldd,a=1732584193,b=-271733879,c=-1732584194,d=271733878;for(i=0;i<x.length;i+=16){olda=a;oldb=
b;oldc=c;oldd=d;a=this.md5_ff(a,b,c,d,x[i],7,-680876936);d=this.md5_ff(d,a,b,c,x[i+1],12,-389564586);c=this.md5_ff(c,d,a,b,x[i+2],17,606105819);b=this.md5_ff(b,c,d,a,x[i+3],22,-1044525330);a=this.md5_ff(a,b,c,d,x[i+4],7,-176418897);d=this.md5_ff(d,a,b,c,x[i+5],12,1200080426);c=this.md5_ff(c,d,a,b,x[i+6],17,-1473231341);b=this.md5_ff(b,c,d,a,x[i+7],22,-45705983);a=this.md5_ff(a,b,c,d,x[i+8],7,1770035416);d=this.md5_ff(d,a,b,c,x[i+9],12,-1958414417);c=this.md5_ff(c,d,a,b,x[i+10],17,-42063);b=this.md5_ff(b,
c,d,a,x[i+11],22,-1990404162);a=this.md5_ff(a,b,c,d,x[i+12],7,1804603682);d=this.md5_ff(d,a,b,c,x[i+13],12,-40341101);c=this.md5_ff(c,d,a,b,x[i+14],17,-1502002290);b=this.md5_ff(b,c,d,a,x[i+15],22,1236535329);a=this.md5_gg(a,b,c,d,x[i+1],5,-165796510);d=this.md5_gg(d,a,b,c,x[i+6],9,-1069501632);c=this.md5_gg(c,d,a,b,x[i+11],14,643717713);b=this.md5_gg(b,c,d,a,x[i],20,-373897302);a=this.md5_gg(a,b,c,d,x[i+5],5,-701558691);d=this.md5_gg(d,a,b,c,x[i+10],9,38016083);c=this.md5_gg(c,d,a,b,x[i+15],14,-660478335);
b=this.md5_gg(b,c,d,a,x[i+4],20,-405537848);a=this.md5_gg(a,b,c,d,x[i+9],5,568446438);d=this.md5_gg(d,a,b,c,x[i+14],9,-1019803690);c=this.md5_gg(c,d,a,b,x[i+3],14,-187363961);b=this.md5_gg(b,c,d,a,x[i+8],20,1163531501);a=this.md5_gg(a,b,c,d,x[i+13],5,-1444681467);d=this.md5_gg(d,a,b,c,x[i+2],9,-51403784);c=this.md5_gg(c,d,a,b,x[i+7],14,1735328473);b=this.md5_gg(b,c,d,a,x[i+12],20,-1926607734);a=this.md5_hh(a,b,c,d,x[i+5],4,-378558);d=this.md5_hh(d,a,b,c,x[i+8],11,-2022574463);c=this.md5_hh(c,d,a,
b,x[i+11],16,1839030562);b=this.md5_hh(b,c,d,a,x[i+14],23,-35309556);a=this.md5_hh(a,b,c,d,x[i+1],4,-1530992060);d=this.md5_hh(d,a,b,c,x[i+4],11,1272893353);c=this.md5_hh(c,d,a,b,x[i+7],16,-155497632);b=this.md5_hh(b,c,d,a,x[i+10],23,-1094730640);a=this.md5_hh(a,b,c,d,x[i+13],4,681279174);d=this.md5_hh(d,a,b,c,x[i],11,-358537222);c=this.md5_hh(c,d,a,b,x[i+3],16,-722521979);b=this.md5_hh(b,c,d,a,x[i+6],23,76029189);a=this.md5_hh(a,b,c,d,x[i+9],4,-640364487);d=this.md5_hh(d,a,b,c,x[i+12],11,-421815835);
c=this.md5_hh(c,d,a,b,x[i+15],16,530742520);b=this.md5_hh(b,c,d,a,x[i+2],23,-995338651);a=this.md5_ii(a,b,c,d,x[i],6,-198630844);d=this.md5_ii(d,a,b,c,x[i+7],10,1126891415);c=this.md5_ii(c,d,a,b,x[i+14],15,-1416354905);b=this.md5_ii(b,c,d,a,x[i+5],21,-57434055);a=this.md5_ii(a,b,c,d,x[i+12],6,1700485571);d=this.md5_ii(d,a,b,c,x[i+3],10,-1894986606);c=this.md5_ii(c,d,a,b,x[i+10],15,-1051523);b=this.md5_ii(b,c,d,a,x[i+1],21,-2054922799);a=this.md5_ii(a,b,c,d,x[i+8],6,1873313359);d=this.md5_ii(d,a,b,
c,x[i+15],10,-30611744);c=this.md5_ii(c,d,a,b,x[i+6],15,-1560198380);b=this.md5_ii(b,c,d,a,x[i+13],21,1309151649);a=this.md5_ii(a,b,c,d,x[i+4],6,-145523070);d=this.md5_ii(d,a,b,c,x[i+11],10,-1120210379);c=this.md5_ii(c,d,a,b,x[i+2],15,718787259);b=this.md5_ii(b,c,d,a,x[i+9],21,-343485551);a=this.safe_add(a,olda);b=this.safe_add(b,oldb);c=this.safe_add(c,oldc);d=this.safe_add(d,oldd)}return[a,b,c,d]};BlueImpMD5.prototype.binl2rstr=function(input){var i,output="";for(i=0;i<input.length*32;i+=8)output+=
String.fromCharCode(input[i>>5]>>>i%32&255);return output};BlueImpMD5.prototype.rstr2binl=function(input){var i,output=[];output[(input.length>>2)-1]=undefined;for(i=0;i<output.length;i+=1)output[i]=0;for(i=0;i<input.length*8;i+=8)output[i>>5]|=(input.charCodeAt(i/8)&255)<<i%32;return output};BlueImpMD5.prototype.rstr_md5=function(s){return this.binl2rstr(this.binl_md5(this.rstr2binl(s),s.length*8))};BlueImpMD5.prototype.rstr_hmac_md5=function(key,data){var i,bkey=this.rstr2binl(key),ipad=[],opad=
[],hash;ipad[15]=opad[15]=undefined;if(bkey.length>16)bkey=this.binl_md5(bkey,key.length*8);for(i=0;i<16;i+=1){ipad[i]=bkey[i]^909522486;opad[i]=bkey[i]^1549556828}hash=this.binl_md5(ipad.concat(this.rstr2binl(data)),512+data.length*8);return this.binl2rstr(this.binl_md5(opad.concat(hash),512+128))};BlueImpMD5.prototype.rstr2hex=function(input){var hex_tab="0123456789abcdef",output="",x,i;for(i=0;i<input.length;i+=1){x=input.charCodeAt(i);output+=hex_tab.charAt(x>>>4&15)+hex_tab.charAt(x&15)}return output};
BlueImpMD5.prototype.str2rstr_utf8=function(input){return unescape(encodeURIComponent(input))};BlueImpMD5.prototype.raw_md5=function(s){return this.rstr_md5(this.str2rstr_utf8(s))};BlueImpMD5.prototype.hex_md5=function(s){return this.rstr2hex(this.raw_md5(s))};BlueImpMD5.prototype.raw_hmac_md5=function(k,d){return this.rstr_hmac_md5(this.str2rstr_utf8(k),this.str2rstr_utf8(d))};BlueImpMD5.prototype.hex_hmac_md5=function(k,d){return this.rstr2hex(this.raw_hmac_md5(k,d))};BlueImpMD5.prototype.md5=function(string,
key,raw){if(!key){if(!raw)return this.hex_md5(string);return this.raw_md5(string)}if(!raw)return this.hex_hmac_md5(key,string);return this.raw_hmac_md5(key,string)};{if("object"!=="undefined"&&module.exports)exports=module.exports=Chance;exports.Chance=Chance}if(typeof undefined==="function"&&undefined.amd)undefined([],function(){return Chance});if(typeof importScripts!=="undefined"){chance=new Chance;self.Chance=Chance}if(typeof window==="object"&&typeof window.document==="object"){window.Chance=
Chance;window.chance=new Chance}})()});var chance_2=chance_1.Chance;var fake=createCommonjsModule(function(module){function Fake(faker){this.fake=function fake(str){var res="";if(typeof str!=="string"||str.length===0){res="string parameter is required!";return res}var start=str.search("{{");var end=str.search("}}");if(start===-1&&end===-1)return str;var token=str.substr(start+2,end-start-2);var method=token.replace("}}","").replace("{{","");var regExp=/\(([^)]+)\)/;var matches=regExp.exec(method);
var parameters="";if(matches){method=method.replace(regExp,"");parameters=matches[1]}var parts=method.split(".");if(typeof faker[parts[0]]==="undefined")throw new Error("Invalid module: "+parts[0]);if(typeof faker[parts[0]][parts[1]]==="undefined")throw new Error("Invalid method: "+parts[0]+"."+parts[1]);var fn=faker[parts[0]][parts[1]];var params;try{params=JSON.parse(parameters)}catch(err){params=parameters}var result;if(typeof params==="string"&&params.length===0)result=fn.call(this);else result=
fn.call(this,params);res=str.replace("{{"+token+"}}",result);return fake(res)};return this}module["exports"]=Fake});function MersenneTwister19937(){var N,M,MATRIX_A,UPPER_MASK,LOWER_MASK;N=624;M=397;MATRIX_A=2567483615;UPPER_MASK=2147483648;LOWER_MASK=2147483647;var mt=new Array(N);var mti=N+1;function unsigned32(n1){return n1<0?(n1^UPPER_MASK)+UPPER_MASK:n1}function subtraction32(n1,n2){return n1<n2?unsigned32(4294967296-(n2-n1)&4294967295):n1-n2}function addition32(n1,n2){return unsigned32(n1+n2&
4294967295)}function multiplication32(n1,n2){var sum=0;for(var i=0;i<32;++i)if(n1>>>i&1)sum=addition32(sum,unsigned32(n2<<i));return sum}this.init_genrand=function(s){mt[0]=unsigned32(s&4294967295);for(mti=1;mti<N;mti++){mt[mti]=addition32(multiplication32(1812433253,unsigned32(mt[mti-1]^mt[mti-1]>>>30)),mti);mt[mti]=unsigned32(mt[mti]&4294967295)}};this.init_by_array=function(init_key,key_length){var i,j,k;this.init_genrand(19650218);i=1;j=0;k=N>key_length?N:key_length;for(;k;k--){mt[i]=addition32(addition32(unsigned32(mt[i]^
multiplication32(unsigned32(mt[i-1]^mt[i-1]>>>30),1664525)),init_key[j]),j);mt[i]=unsigned32(mt[i]&4294967295);i++;j++;if(i>=N){mt[0]=mt[N-1];i=1}if(j>=key_length)j=0}for(k=N-1;k;k--){mt[i]=subtraction32(unsigned32((dbg=mt[i])^multiplication32(unsigned32(mt[i-1]^mt[i-1]>>>30),1566083941)),i);mt[i]=unsigned32(mt[i]&4294967295);i++;if(i>=N){mt[0]=mt[N-1];i=1}}mt[0]=2147483648};var mag01=[0,MATRIX_A];this.genrand_int32=function(){var y;if(mti>=N){var kk;if(mti==N+1)this.init_genrand(5489);for(kk=0;kk<
N-M;kk++){y=unsigned32(mt[kk]&UPPER_MASK|mt[kk+1]&LOWER_MASK);mt[kk]=unsigned32(mt[kk+M]^y>>>1^mag01[y&1])}for(;kk<N-1;kk++){y=unsigned32(mt[kk]&UPPER_MASK|mt[kk+1]&LOWER_MASK);mt[kk]=unsigned32(mt[kk+(M-N)]^y>>>1^mag01[y&1])}y=unsigned32(mt[N-1]&UPPER_MASK|mt[0]&LOWER_MASK);mt[N-1]=unsigned32(mt[M-1]^y>>>1^mag01[y&1]);mti=0}y=mt[mti++];y=unsigned32(y^y>>>11);y=unsigned32(y^y<<7&2636928640);y=unsigned32(y^y<<15&4022730752);y=unsigned32(y^y>>>18);return y};this.genrand_int31=function(){return this.genrand_int32()>>>
1};this.genrand_real1=function(){return this.genrand_int32()*(1/4294967295)};this.genrand_real2=function(){return this.genrand_int32()*(1/4294967296)};this.genrand_real3=function(){return(this.genrand_int32()+.5)*(1/4294967296)};this.genrand_res53=function(){var a=this.genrand_int32()>>>5,b=this.genrand_int32()>>>6;return(a*67108864+b)*(1/9007199254740992)}}var MersenneTwister19937_1=MersenneTwister19937;var gen=new MersenneTwister19937;gen.init_genrand((new Date).getTime()%1E9);var rand=function(max,
min){if(max===undefined){min=0;max=32768}return Math.floor(gen.genrand_real2()*(max-min)+min)};var seed=function(S){if(typeof S!="number")throw new Error("seed(S) must take numeric argument; is "+typeof S);gen.init_genrand(S)};var seed_array=function(A){if(typeof A!="object")throw new Error("seed_array(A) must take array of numbers; is "+typeof A);gen.init_by_array(A)};var mersenne={MersenneTwister19937:MersenneTwister19937_1,rand:rand,seed:seed,seed_array:seed_array};var random$1=createCommonjsModule(function(module){function Random(faker,
seed){if(seed)if(Array.isArray(seed)&&seed.length)mersenne.seed_array(seed);else mersenne.seed(seed);this.number=function(options){if(typeof options==="number")options={max:options};options=options||{};if(typeof options.min==="undefined")options.min=0;if(typeof options.max==="undefined")options.max=99999;if(typeof options.precision==="undefined")options.precision=1;var max=options.max;if(max>=0)max+=options.precision;var randomNumber=options.precision*Math.floor(mersenne.rand(max/options.precision,
options.min/options.precision));return randomNumber};this.arrayElement=function(array){array=array||["a","b","c"];var r=faker.random.number({max:array.length-1});return array[r]};this.objectElement=function(object,field){object=object||{"foo":"bar","too":"car"};var array=Object.keys(object);var key=faker.random.arrayElement(array);return field==="key"?key:object[key]};this.uuid=function(){var self=this;var RFC4122_TEMPLATE="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx";var replacePlaceholders=function(placeholder){var random=
self.number({min:0,max:15});var value=placeholder=="x"?random:random&3|8;return value.toString(16)};return RFC4122_TEMPLATE.replace(/[xy]/g,replacePlaceholders)};this.boolean=function(){return!!faker.random.number(1)};this.word=function randomWord(type){var wordMethods=["commerce.department","commerce.productName","commerce.productAdjective","commerce.productMaterial","commerce.product","commerce.color","company.catchPhraseAdjective","company.catchPhraseDescriptor","company.catchPhraseNoun","company.bsAdjective",
"company.bsBuzz","company.bsNoun","address.streetSuffix","address.county","address.country","address.state","finance.accountName","finance.transactionType","finance.currencyName","hacker.noun","hacker.verb","hacker.adjective","hacker.ingverb","hacker.abbreviation","name.jobDescriptor","name.jobArea","name.jobType"];var randomWordMethod=faker.random.arrayElement(wordMethods);return faker.fake("{{"+randomWordMethod+"}}")};this.words=function randomWords(count){var words=[];if(typeof count==="undefined")count=
faker.random.number({min:1,max:3});for(var i=0;i<count;i++)words.push(faker.random.word());return words.join(" ")};this.image=function randomImage(){return faker.image.image()};this.locale=function randomLocale(){return faker.random.arrayElement(Object.keys(faker.locales))};this.alphaNumeric=function alphaNumeric(count){if(typeof count==="undefined")count=1;var wholeString="";for(var i=0;i<count;i++)wholeString+=faker.random.arrayElement(["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e",
"f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]);return wholeString};return this}module["exports"]=Random});var helpers$2=createCommonjsModule(function(module){var Helpers=function(faker){var self=this;self.randomize=function(array){array=array||["a","b","c"];return faker.random.arrayElement(array)};self.slugify=function(string){string=string||"";return string.replace(/ /g,"-").replace(/[^\w\.\-]+/g,"")};self.replaceSymbolWithNumber=function(string,symbol){string=
string||"";if(symbol===undefined)symbol="#";var str="";for(var i=0;i<string.length;i++)if(string.charAt(i)==symbol)str+=faker.random.number(9);else str+=string.charAt(i);return str};self.replaceSymbols=function(string){string=string||"";var alpha=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"];var str="";for(var i=0;i<string.length;i++)if(string.charAt(i)=="#")str+=faker.random.number(9);else if(string.charAt(i)=="?")str+=faker.random.arrayElement(alpha);
else str+=string.charAt(i);return str};self.shuffle=function(o){if(typeof o==="undefined"||o.length===0)return[];o=o||["a","b","c"];for(var j,x,i=o.length-1;i;j=faker.random.number(i),x=o[--i],o[i]=o[j],o[j]=x);return o};self.mustache=function(str,data){if(typeof str==="undefined")return"";for(var p in data){var re=new RegExp("{{"+p+"}}","g");str=str.replace(re,data[p])}return str};self.createCard=function(){return{"name":faker.name.findName(),"username":faker.internet.userName(),"email":faker.internet.email(),
"address":{"streetA":faker.address.streetName(),"streetB":faker.address.streetAddress(),"streetC":faker.address.streetAddress(true),"streetD":faker.address.secondaryAddress(),"city":faker.address.city(),"state":faker.address.state(),"country":faker.address.country(),"zipcode":faker.address.zipCode(),"geo":{"lat":faker.address.latitude(),"lng":faker.address.longitude()}},"phone":faker.phone.phoneNumber(),"website":faker.internet.domainName(),"company":{"name":faker.company.companyName(),"catchPhrase":faker.company.catchPhrase(),
"bs":faker.company.bs()},"posts":[{"words":faker.lorem.words(),"sentence":faker.lorem.sentence(),"sentences":faker.lorem.sentences(),"paragraph":faker.lorem.paragraph()},{"words":faker.lorem.words(),"sentence":faker.lorem.sentence(),"sentences":faker.lorem.sentences(),"paragraph":faker.lorem.paragraph()},{"words":faker.lorem.words(),"sentence":faker.lorem.sentence(),"sentences":faker.lorem.sentences(),"paragraph":faker.lorem.paragraph()}],"accountHistory":[faker.helpers.createTransaction(),faker.helpers.createTransaction(),
faker.helpers.createTransaction()]}};self.contextualCard=function(){var name=faker.name.firstName(),userName=faker.internet.userName(name);return{"name":name,"username":userName,"avatar":faker.internet.avatar(),"email":faker.internet.email(userName),"dob":faker.date.past(50,new Date("Sat Sep 20 1992 21:35:02 GMT+0200 (CEST)")),"phone":faker.phone.phoneNumber(),"address":{"street":faker.address.streetName(true),"suite":faker.address.secondaryAddress(),"city":faker.address.city(),"zipcode":faker.address.zipCode(),
"geo":{"lat":faker.address.latitude(),"lng":faker.address.longitude()}},"website":faker.internet.domainName(),"company":{"name":faker.company.companyName(),"catchPhrase":faker.company.catchPhrase(),"bs":faker.company.bs()}}};self.userCard=function(){return{"name":faker.name.findName(),"username":faker.internet.userName(),"email":faker.internet.email(),"address":{"street":faker.address.streetName(true),"suite":faker.address.secondaryAddress(),"city":faker.address.city(),"zipcode":faker.address.zipCode(),
"geo":{"lat":faker.address.latitude(),"lng":faker.address.longitude()}},"phone":faker.phone.phoneNumber(),"website":faker.internet.domainName(),"company":{"name":faker.company.companyName(),"catchPhrase":faker.company.catchPhrase(),"bs":faker.company.bs()}}};self.createTransaction=function(){return{"amount":faker.finance.amount(),"date":new Date(2012,1,2),"business":faker.company.companyName(),"name":[faker.finance.accountName(),faker.finance.mask()].join(" "),"type":self.randomize(faker.definitions.finance.transaction_type),
"account":faker.finance.account()}};return self};module["exports"]=Helpers});var name=createCommonjsModule(function(module){function Name(faker){this.firstName=function(gender){if(typeof faker.definitions.name.male_first_name!=="undefined"&&typeof faker.definitions.name.female_first_name!=="undefined"){if(typeof gender!=="number")gender=faker.random.number(1);if(gender===0)return faker.random.arrayElement(faker.locales[faker.locale].name.male_first_name);else return faker.random.arrayElement(faker.locales[faker.locale].name.female_first_name)}return faker.random.arrayElement(faker.definitions.name.first_name)};
this.lastName=function(gender){if(typeof faker.definitions.name.male_last_name!=="undefined"&&typeof faker.definitions.name.female_last_name!=="undefined"){if(typeof gender!=="number")gender=faker.random.number(1);if(gender===0)return faker.random.arrayElement(faker.locales[faker.locale].name.male_last_name);else return faker.random.arrayElement(faker.locales[faker.locale].name.female_last_name)}return faker.random.arrayElement(faker.definitions.name.last_name)};this.findName=function(firstName,lastName,
gender){var r=faker.random.number(8);var prefix,suffix;if(typeof gender!=="number")gender=faker.random.number(1);firstName=firstName||faker.name.firstName(gender);lastName=lastName||faker.name.lastName(gender);switch(r){case 0:prefix=faker.name.prefix(gender);if(prefix)return prefix+" "+firstName+" "+lastName;case 1:suffix=faker.name.suffix(gender);if(suffix)return firstName+" "+lastName+" "+suffix}return firstName+" "+lastName};this.jobTitle=function(){return faker.name.jobDescriptor()+" "+faker.name.jobArea()+
" "+faker.name.jobType()};this.prefix=function(gender){if(typeof faker.definitions.name.male_prefix!=="undefined"&&typeof faker.definitions.name.female_prefix!=="undefined"){if(typeof gender!=="number")gender=faker.random.number(1);if(gender===0)return faker.random.arrayElement(faker.locales[faker.locale].name.male_prefix);else return faker.random.arrayElement(faker.locales[faker.locale].name.female_prefix)}return faker.random.arrayElement(faker.definitions.name.prefix)};this.suffix=function(){return faker.random.arrayElement(faker.definitions.name.suffix)};
this.title=function(){var descriptor=faker.random.arrayElement(faker.definitions.name.title.descriptor),level=faker.random.arrayElement(faker.definitions.name.title.level),job=faker.random.arrayElement(faker.definitions.name.title.job);return descriptor+" "+level+" "+job};this.jobDescriptor=function(){return faker.random.arrayElement(faker.definitions.name.title.descriptor)};this.jobArea=function(){return faker.random.arrayElement(faker.definitions.name.title.level)};this.jobType=function(){return faker.random.arrayElement(faker.definitions.name.title.job)}}
module["exports"]=Name});function Address(faker){var f=faker.fake,Helpers=faker.helpers;this.zipCode=function(format){if(typeof format==="undefined"){var localeFormat=faker.definitions.address.postcode;if(typeof localeFormat==="string")format=localeFormat;else format=faker.random.arrayElement(localeFormat)}return Helpers.replaceSymbols(format)};this.city=function(format){var formats=["{{address.cityPrefix}} {{name.firstName}}{{address.citySuffix}}","{{address.cityPrefix}} {{name.firstName}}","{{name.firstName}}{{address.citySuffix}}",
"{{name.lastName}}{{address.citySuffix}}"];if(typeof format!=="number")format=faker.random.number(formats.length-1);return f(formats[format])};this.cityPrefix=function(){return faker.random.arrayElement(faker.definitions.address.city_prefix)};this.citySuffix=function(){return faker.random.arrayElement(faker.definitions.address.city_suffix)};this.streetName=function(){var result;var suffix=faker.address.streetSuffix();if(suffix!=="")suffix=" "+suffix;switch(faker.random.number(1)){case 0:result=faker.name.lastName()+
suffix;break;case 1:result=faker.name.firstName()+suffix;break}return result};this.streetAddress=function(useFullAddress){if(useFullAddress===undefined)useFullAddress=false;var address="";switch(faker.random.number(2)){case 0:address=Helpers.replaceSymbolWithNumber("#####")+" "+faker.address.streetName();break;case 1:address=Helpers.replaceSymbolWithNumber("####")+" "+faker.address.streetName();break;case 2:address=Helpers.replaceSymbolWithNumber("###")+" "+faker.address.streetName();break}return useFullAddress?
address+" "+faker.address.secondaryAddress():address};this.streetSuffix=function(){return faker.random.arrayElement(faker.definitions.address.street_suffix)};this.streetPrefix=function(){return faker.random.arrayElement(faker.definitions.address.street_prefix)};this.secondaryAddress=function(){return Helpers.replaceSymbolWithNumber(faker.random.arrayElement(["Apt. ###","Suite ###"]))};this.county=function(){return faker.random.arrayElement(faker.definitions.address.county)};this.country=function(){return faker.random.arrayElement(faker.definitions.address.country)};
this.countryCode=function(){return faker.random.arrayElement(faker.definitions.address.country_code)};this.state=function(useAbbr){return faker.random.arrayElement(faker.definitions.address.state)};this.stateAbbr=function(){return faker.random.arrayElement(faker.definitions.address.state_abbr)};this.latitude=function(){return(faker.random.number(180*1E4)/1E4-90).toFixed(4)};this.longitude=function(){return(faker.random.number(360*1E4)/1E4-180).toFixed(4)};return this}var address=Address;var company=
createCommonjsModule(function(module){var Company=function(faker){var f=faker.fake;this.suffixes=function(){return faker.definitions.company.suffix.slice(0)};this.companyName=function(format){var formats=["{{name.lastName}} {{company.companySuffix}}","{{name.lastName}} - {{name.lastName}}","{{name.lastName}}, {{name.lastName}} and {{name.lastName}}"];if(typeof format!=="number")format=faker.random.number(formats.length-1);return f(formats[format])};this.companySuffix=function(){return faker.random.arrayElement(faker.company.suffixes())};
this.catchPhrase=function(){return f("{{company.catchPhraseAdjective}} {{company.catchPhraseDescriptor}} {{company.catchPhraseNoun}}")};this.bs=function(){return f("{{company.bsAdjective}} {{company.bsBuzz}} {{company.bsNoun}}")};this.catchPhraseAdjective=function(){return faker.random.arrayElement(faker.definitions.company.adjective)};this.catchPhraseDescriptor=function(){return faker.random.arrayElement(faker.definitions.company.descriptor)};this.catchPhraseNoun=function(){return faker.random.arrayElement(faker.definitions.company.noun)};
this.bsAdjective=function(){return faker.random.arrayElement(faker.definitions.company.bs_adjective)};this.bsBuzz=function(){return faker.random.arrayElement(faker.definitions.company.bs_verb)};this.bsNoun=function(){return faker.random.arrayElement(faker.definitions.company.bs_noun)}};module["exports"]=Company});var iban=createCommonjsModule(function(module){module["exports"]={alpha:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],pattern10:["01",
"02","03","04","05","06","07","08","09"],pattern100:["001","002","003","004","005","006","007","008","009"],toDigitString:function(str){return str.replace(/[A-Z]/gi,function(match){return match.toUpperCase().charCodeAt(0)-55})},mod97:function(digitStr){var m=0;for(var i=0;i<digitStr.length;i++)m=(m*10+(digitStr[i]|0))%97;return m},formats:[{country:"AL",total:28,bban:[{type:"n",count:8},{type:"c",count:16}],format:"ALkk bbbs sssx cccc cccc cccc cccc"},{country:"AD",total:24,bban:[{type:"n",count:8},
{type:"c",count:12}],format:"ADkk bbbb ssss cccc cccc cccc"},{country:"AT",total:20,bban:[{type:"n",count:5},{type:"n",count:11}],format:"ATkk bbbb bccc cccc cccc"},{country:"AZ",total:28,bban:[{type:"c",count:4},{type:"n",count:20}],format:"AZkk bbbb cccc cccc cccc cccc cccc"},{country:"BH",total:22,bban:[{type:"a",count:4},{type:"c",count:14}],format:"BHkk bbbb cccc cccc cccc cc"},{country:"BE",total:16,bban:[{type:"n",count:3},{type:"n",count:9}],format:"BEkk bbbc cccc ccxx"},{country:"BA",total:20,
bban:[{type:"n",count:6},{type:"n",count:10}],format:"BAkk bbbs sscc cccc ccxx"},{country:"BR",total:29,bban:[{type:"n",count:13},{type:"n",count:10},{type:"a",count:1},{type:"c",count:1}],format:"BRkk bbbb bbbb ssss sccc cccc ccct n"},{country:"BG",total:22,bban:[{type:"a",count:4},{type:"n",count:6},{type:"c",count:8}],format:"BGkk bbbb ssss ddcc cccc cc"},{country:"CR",total:21,bban:[{type:"n",count:3},{type:"n",count:14}],format:"CRkk bbbc cccc cccc cccc c"},{country:"HR",total:21,bban:[{type:"n",
count:7},{type:"n",count:10}],format:"HRkk bbbb bbbc cccc cccc c"},{country:"CY",total:28,bban:[{type:"n",count:8},{type:"c",count:16}],format:"CYkk bbbs ssss cccc cccc cccc cccc"},{country:"CZ",total:24,bban:[{type:"n",count:10},{type:"n",count:10}],format:"CZkk bbbb ssss sscc cccc cccc"},{country:"DK",total:18,bban:[{type:"n",count:4},{type:"n",count:10}],format:"DKkk bbbb cccc cccc cc"},{country:"DO",total:28,bban:[{type:"a",count:4},{type:"n",count:20}],format:"DOkk bbbb cccc cccc cccc cccc cccc"},
{country:"TL",total:23,bban:[{type:"n",count:3},{type:"n",count:16}],format:"TLkk bbbc cccc cccc cccc cxx"},{country:"EE",total:20,bban:[{type:"n",count:4},{type:"n",count:12}],format:"EEkk bbss cccc cccc cccx"},{country:"FO",total:18,bban:[{type:"n",count:4},{type:"n",count:10}],format:"FOkk bbbb cccc cccc cx"},{country:"FI",total:18,bban:[{type:"n",count:6},{type:"n",count:8}],format:"FIkk bbbb bbcc cccc cx"},{country:"FR",total:27,bban:[{type:"n",count:10},{type:"c",count:11},{type:"n",count:2}],
format:"FRkk bbbb bggg ggcc cccc cccc cxx"},{country:"GE",total:22,bban:[{type:"c",count:2},{type:"n",count:16}],format:"GEkk bbcc cccc cccc cccc cc"},{country:"DE",total:22,bban:[{type:"n",count:8},{type:"n",count:10}],format:"DEkk bbbb bbbb cccc cccc cc"},{country:"GI",total:23,bban:[{type:"a",count:4},{type:"c",count:15}],format:"GIkk bbbb cccc cccc cccc ccc"},{country:"GR",total:27,bban:[{type:"n",count:7},{type:"c",count:16}],format:"GRkk bbbs sssc cccc cccc cccc ccc"},{country:"GL",total:18,
bban:[{type:"n",count:4},{type:"n",count:10}],format:"GLkk bbbb cccc cccc cc"},{country:"GT",total:28,bban:[{type:"c",count:4},{type:"c",count:4},{type:"c",count:16}],format:"GTkk bbbb mmtt cccc cccc cccc cccc"},{country:"HU",total:28,bban:[{type:"n",count:8},{type:"n",count:16}],format:"HUkk bbbs sssk cccc cccc cccc cccx"},{country:"IS",total:26,bban:[{type:"n",count:6},{type:"n",count:16}],format:"ISkk bbbb sscc cccc iiii iiii ii"},{country:"IE",total:22,bban:[{type:"c",count:4},{type:"n",count:6},
{type:"n",count:8}],format:"IEkk aaaa bbbb bbcc cccc cc"},{country:"IL",total:23,bban:[{type:"n",count:6},{type:"n",count:13}],format:"ILkk bbbn nncc cccc cccc ccc"},{country:"IT",total:27,bban:[{type:"a",count:1},{type:"n",count:10},{type:"c",count:12}],format:"ITkk xaaa aabb bbbc cccc cccc ccc"},{country:"JO",total:30,bban:[{type:"a",count:4},{type:"n",count:4},{type:"n",count:18}],format:"JOkk bbbb nnnn cccc cccc cccc cccc cc"},{country:"KZ",total:20,bban:[{type:"n",count:3},{type:"c",count:13}],
format:"KZkk bbbc cccc cccc cccc"},{country:"XK",total:20,bban:[{type:"n",count:4},{type:"n",count:12}],format:"XKkk bbbb cccc cccc cccc"},{country:"KW",total:30,bban:[{type:"a",count:4},{type:"c",count:22}],format:"KWkk bbbb cccc cccc cccc cccc cccc cc"},{country:"LV",total:21,bban:[{type:"a",count:4},{type:"c",count:13}],format:"LVkk bbbb cccc cccc cccc c"},{country:"LB",total:28,bban:[{type:"n",count:4},{type:"c",count:20}],format:"LBkk bbbb cccc cccc cccc cccc cccc"},{country:"LI",total:21,bban:[{type:"n",
count:5},{type:"c",count:12}],format:"LIkk bbbb bccc cccc cccc c"},{country:"LT",total:20,bban:[{type:"n",count:5},{type:"n",count:11}],format:"LTkk bbbb bccc cccc cccc"},{country:"LU",total:20,bban:[{type:"n",count:3},{type:"c",count:13}],format:"LUkk bbbc cccc cccc cccc"},{country:"MK",total:19,bban:[{type:"n",count:3},{type:"c",count:10},{type:"n",count:2}],format:"MKkk bbbc cccc cccc cxx"},{country:"MT",total:31,bban:[{type:"a",count:4},{type:"n",count:5},{type:"c",count:18}],format:"MTkk bbbb ssss sccc cccc cccc cccc ccc"},
{country:"MR",total:27,bban:[{type:"n",count:10},{type:"n",count:13}],format:"MRkk bbbb bsss sscc cccc cccc cxx"},{country:"MU",total:30,bban:[{type:"a",count:4},{type:"n",count:4},{type:"n",count:15},{type:"a",count:3}],format:"MUkk bbbb bbss cccc cccc cccc 000d dd"},{country:"MC",total:27,bban:[{type:"n",count:10},{type:"c",count:11},{type:"n",count:2}],format:"MCkk bbbb bsss sscc cccc cccc cxx"},{country:"MD",total:24,bban:[{type:"c",count:2},{type:"c",count:18}],format:"MDkk bbcc cccc cccc cccc cccc"},
{country:"ME",total:22,bban:[{type:"n",count:3},{type:"n",count:15}],format:"MEkk bbbc cccc cccc cccc xx"},{country:"NL",total:18,bban:[{type:"a",count:4},{type:"n",count:10}],format:"NLkk bbbb cccc cccc cc"},{country:"NO",total:15,bban:[{type:"n",count:4},{type:"n",count:7}],format:"NOkk bbbb cccc ccx"},{country:"PK",total:24,bban:[{type:"c",count:4},{type:"n",count:16}],format:"PKkk bbbb cccc cccc cccc cccc"},{country:"PS",total:29,bban:[{type:"c",count:4},{type:"n",count:9},{type:"n",count:12}],
format:"PSkk bbbb xxxx xxxx xccc cccc cccc c"},{country:"PL",total:28,bban:[{type:"n",count:8},{type:"n",count:16}],format:"PLkk bbbs sssx cccc cccc cccc cccc"},{country:"PT",total:25,bban:[{type:"n",count:8},{type:"n",count:13}],format:"PTkk bbbb ssss cccc cccc cccx x"},{country:"QA",total:29,bban:[{type:"a",count:4},{type:"c",count:21}],format:"QAkk bbbb cccc cccc cccc cccc cccc c"},{country:"RO",total:24,bban:[{type:"a",count:4},{type:"c",count:16}],format:"ROkk bbbb cccc cccc cccc cccc"},{country:"SM",
total:27,bban:[{type:"a",count:1},{type:"n",count:10},{type:"c",count:12}],format:"SMkk xaaa aabb bbbc cccc cccc ccc"},{country:"SA",total:24,bban:[{type:"n",count:2},{type:"c",count:18}],format:"SAkk bbcc cccc cccc cccc cccc"},{country:"RS",total:22,bban:[{type:"n",count:3},{type:"n",count:15}],format:"RSkk bbbc cccc cccc cccc xx"},{country:"SK",total:24,bban:[{type:"n",count:10},{type:"n",count:10}],format:"SKkk bbbb ssss sscc cccc cccc"},{country:"SI",total:19,bban:[{type:"n",count:5},{type:"n",
count:10}],format:"SIkk bbss sccc cccc cxx"},{country:"ES",total:24,bban:[{type:"n",count:10},{type:"n",count:10}],format:"ESkk bbbb gggg xxcc cccc cccc"},{country:"SE",total:24,bban:[{type:"n",count:3},{type:"n",count:17}],format:"SEkk bbbc cccc cccc cccc cccc"},{country:"CH",total:21,bban:[{type:"n",count:5},{type:"c",count:12}],format:"CHkk bbbb bccc cccc cccc c"},{country:"TN",total:24,bban:[{type:"n",count:5},{type:"n",count:15}],format:"TNkk bbss sccc cccc cccc cccc"},{country:"TR",total:26,
bban:[{type:"n",count:5},{type:"c",count:1},{type:"c",count:16}],format:"TRkk bbbb bxcc cccc cccc cccc cc"},{country:"AE",total:23,bban:[{type:"n",count:3},{type:"n",count:16}],format:"AEkk bbbc cccc cccc cccc ccc"},{country:"GB",total:22,bban:[{type:"a",count:4},{type:"n",count:6},{type:"n",count:8}],format:"GBkk bbbb ssss sscc cccc cc"},{country:"VG",total:24,bban:[{type:"c",count:4},{type:"n",count:16}],format:"VGkk bbbb cccc cccc cccc cccc"}],iso3166:["AC","AD","AE","AF","AG","AI","AL","AM","AN",
"AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BU","BV","BW","BY","BZ","CA","CC","CD","CE","CF","CG","CH","CI","CK","CL","CM","CN","CO","CP","CR","CS","CS","CU","CV","CW","CX","CY","CZ","DD","DE","DG","DJ","DK","DM","DO","DZ","EA","EC","EE","EG","EH","ER","ES","ET","EU","FI","FJ","FK","FM","FO","FR","FX","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR",
"HT","HU","IC","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NT","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE",
"SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SU","SV","SX","SY","SZ","TA","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","YU","ZA","ZM","ZR","ZW"]}});var finance=createCommonjsModule(function(module){var Finance=function(faker){var ibanLib=iban;var Helpers=faker.helpers,self=this;self.account=function(length){length=length||8;var template="";for(var i=0;i<length;i++)template=
template+"#";length=null;return Helpers.replaceSymbolWithNumber(template)};self.accountName=function(){return[Helpers.randomize(faker.definitions.finance.account_type),"Account"].join(" ")};self.mask=function(length,parens,ellipsis){length=length==0||!length||typeof length=="undefined"?4:length;parens=parens===null?true:parens;ellipsis=ellipsis===null?true:ellipsis;var template="";for(var i=0;i<length;i++)template=template+"#";template=ellipsis?["...",template].join(""):template;template=parens?["(",
template,")"].join(""):template;template=Helpers.replaceSymbolWithNumber(template);return template};self.amount=function(min,max,dec,symbol){min=min||0;max=max||1E3;dec=dec===undefined?2:dec;symbol=symbol||"";var randValue=faker.random.number({max:max,min:min,precision:Math.pow(10,-dec)});return symbol+randValue.toFixed(dec)};self.transactionType=function(){return Helpers.randomize(faker.definitions.finance.transaction_type)};self.currencyCode=function(){return faker.random.objectElement(faker.definitions.finance.currency)["code"]};
self.currencyName=function(){return faker.random.objectElement(faker.definitions.finance.currency,"key")};self.currencySymbol=function(){var symbol;while(!symbol)symbol=faker.random.objectElement(faker.definitions.finance.currency)["symbol"];return symbol};self.bitcoinAddress=function(){var addressLength=faker.random.number({min:27,max:34});var address=faker.random.arrayElement(["1","3"]);for(var i=0;i<addressLength-1;i++)address+=faker.random.alphaNumeric().toUpperCase();return address};self.iban=
function(formatted){var ibanFormat=faker.random.arrayElement(ibanLib.formats);var s="";var count=0;for(var b=0;b<ibanFormat.bban.length;b++){var bban=ibanFormat.bban[b];var c=bban.count;count+=bban.count;while(c>0){if(bban.type=="a")s+=faker.random.arrayElement(ibanLib.alpha);else if(bban.type=="c")if(faker.random.number(100)<80)s+=faker.random.number(9);else s+=faker.random.arrayElement(ibanLib.alpha);else if(c>=3&&faker.random.number(100)<30)if(faker.random.boolean()){s+=faker.random.arrayElement(ibanLib.pattern100);
c-=2}else{s+=faker.random.arrayElement(ibanLib.pattern10);c--}else s+=faker.random.number(9);c--}s=s.substring(0,count)}var checksum=98-ibanLib.mod97(ibanLib.toDigitString(s+ibanFormat.country+"00"));if(checksum<10)checksum="0"+checksum;var iban$$1=ibanFormat.country+checksum+s;return formatted?iban$$1.match(/.{1,4}/g).join(" "):iban$$1};self.bic=function(){var vowels=["A","E","I","O","U"];var prob=faker.random.number(100);return Helpers.replaceSymbols("???")+faker.random.arrayElement(vowels)+faker.random.arrayElement(ibanLib.iso3166)+
Helpers.replaceSymbols("?")+"1"+(prob<10?Helpers.replaceSymbols("?"+faker.random.arrayElement(vowels)+"?"):prob<40?Helpers.replaceSymbols("###"):"")}};module["exports"]=Finance});var image=createCommonjsModule(function(module){var Image=function(faker){var self=this;self.image=function(width,height,randomize){var categories=["abstract","animals","business","cats","city","food","nightlife","fashion","people","nature","sports","technics","transport"];return self[faker.random.arrayElement(categories)](width,
height,randomize)};self.avatar=function(){return faker.internet.avatar()};self.imageUrl=function(width,height,category,randomize,https){var width=width||640;var height=height||480;var protocol="http://";if(typeof https!=="undefined"&&https===true)protocol="https://";var url=protocol+"lorempixel.com/"+width+"/"+height;if(typeof category!=="undefined")url+="/"+category;if(randomize)url+="?"+faker.random.number();return url};self.abstract=function(width,height,randomize){return faker.image.imageUrl(width,
height,"abstract",randomize)};self.animals=function(width,height,randomize){return faker.image.imageUrl(width,height,"animals",randomize)};self.business=function(width,height,randomize){return faker.image.imageUrl(width,height,"business",randomize)};self.cats=function(width,height,randomize){return faker.image.imageUrl(width,height,"cats",randomize)};self.city=function(width,height,randomize){return faker.image.imageUrl(width,height,"city",randomize)};self.food=function(width,height,randomize){return faker.image.imageUrl(width,
height,"food",randomize)};self.nightlife=function(width,height,randomize){return faker.image.imageUrl(width,height,"nightlife",randomize)};self.fashion=function(width,height,randomize){return faker.image.imageUrl(width,height,"fashion",randomize)};self.people=function(width,height,randomize){return faker.image.imageUrl(width,height,"people",randomize)};self.nature=function(width,height,randomize){return faker.image.imageUrl(width,height,"nature",randomize)};self.sports=function(width,height,randomize){return faker.image.imageUrl(width,
height,"sports",randomize)};self.technics=function(width,height,randomize){return faker.image.imageUrl(width,height,"technics",randomize)};self.transport=function(width,height,randomize){return faker.image.imageUrl(width,height,"transport",randomize)};self.dataUri=function(width,height){var rawPrefix="data:image/svg+xml;charset\x3dUTF-8,";var svgString='\x3csvg xmlns\x3d"http://www.w3.org/2000/svg" version\x3d"1.1" baseProfile\x3d"full" width\x3d"'+width+'" height\x3d"'+height+'"\x3e \x3crect width\x3d"100%" height\x3d"100%" fill\x3d"grey"/\x3e  \x3ctext x\x3d"0" y\x3d"20" font-size\x3d"20" text-anchor\x3d"start" fill\x3d"white"\x3e'+
width+"x"+height+"\x3c/text\x3e \x3c/svg\x3e";return rawPrefix+encodeURIComponent(svgString)}};module["exports"]=Image});var lorem=createCommonjsModule(function(module){var Lorem=function(faker){var self=this;var Helpers=faker.helpers;self.word=function(num){return faker.random.arrayElement(faker.definitions.lorem.words)};self.words=function(num){if(typeof num=="undefined")num=3;var words=[];for(var i=0;i<num;i++)words.push(faker.lorem.word());return words.join(" ")};self.sentence=function(wordCount,
range){if(typeof wordCount=="undefined")wordCount=faker.random.number({min:3,max:10});var sentence=faker.lorem.words(wordCount);return sentence.charAt(0).toUpperCase()+sentence.slice(1)+"."};self.slug=function(wordCount){var words=faker.lorem.words(wordCount);return Helpers.slugify(words)};self.sentences=function(sentenceCount,separator){if(typeof sentenceCount==="undefined")sentenceCount=faker.random.number({min:2,max:6});if(typeof separator=="undefined")separator=" ";var sentences=[];for(;sentenceCount>
0;sentenceCount--)sentences.push(faker.lorem.sentence());return sentences.join(separator)};self.paragraph=function(sentenceCount){if(typeof sentenceCount=="undefined")sentenceCount=3;return faker.lorem.sentences(sentenceCount+faker.random.number(3))};self.paragraphs=function(paragraphCount,separator){if(typeof separator==="undefined")separator="\n \r";if(typeof paragraphCount=="undefined")paragraphCount=3;var paragraphs=[];for(;paragraphCount>0;paragraphCount--)paragraphs.push(faker.lorem.paragraph());
return paragraphs.join(separator)};self.text=function loremText(times){var loremMethods=["lorem.word","lorem.words","lorem.sentence","lorem.sentences","lorem.paragraph","lorem.paragraphs","lorem.lines"];var randomLoremMethod=faker.random.arrayElement(loremMethods);return faker.fake("{{"+randomLoremMethod+"}}")};self.lines=function lines(lineCount){if(typeof lineCount==="undefined")lineCount=faker.random.number({min:1,max:5});return faker.lorem.sentences(lineCount,"\n")};return self};module["exports"]=
Lorem});var hacker=createCommonjsModule(function(module){var Hacker=function(faker){var self=this;self.abbreviation=function(){return faker.random.arrayElement(faker.definitions.hacker.abbreviation)};self.adjective=function(){return faker.random.arrayElement(faker.definitions.hacker.adjective)};self.noun=function(){return faker.random.arrayElement(faker.definitions.hacker.noun)};self.verb=function(){return faker.random.arrayElement(faker.definitions.hacker.verb)};self.ingverb=function(){return faker.random.arrayElement(faker.definitions.hacker.ingverb)};
self.phrase=function(){var data={abbreviation:self.abbreviation,adjective:self.adjective,ingverb:self.ingverb,noun:self.noun,verb:self.verb};var phrase=faker.random.arrayElement(["If we {{verb}} the {{noun}}, we can get to the {{abbreviation}} {{noun}} through the {{adjective}} {{abbreviation}} {{noun}}!","We need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!","Try to {{verb}} the {{abbreviation}} {{noun}}, maybe it will {{verb}} the {{adjective}} {{noun}}!","You can't {{verb}} the {{noun}} without {{ingverb}} the {{adjective}} {{abbreviation}} {{noun}}!",
"Use the {{adjective}} {{abbreviation}} {{noun}}, then you can {{verb}} the {{adjective}} {{noun}}!","The {{abbreviation}} {{noun}} is down, {{verb}} the {{adjective}} {{noun}} so we can {{verb}} the {{abbreviation}} {{noun}}!","{{ingverb}} the {{noun}} won't do anything, we need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!","I'll {{verb}} the {{adjective}} {{abbreviation}} {{noun}}, that should {{noun}} the {{abbreviation}} {{noun}}!"]);return faker.helpers.mustache(phrase,data)};return self};
module["exports"]=Hacker});function rnd(a,b){a=a||0;b=b||100;if(typeof b==="number"&&typeof a==="number")return function(min,max){if(min>max)throw new RangeError("expected min \x3c\x3d max; got min \x3d "+min+", max \x3d "+max);return Math.floor(Math.random()*(max-min+1))+min}(a,b);if(Object.prototype.toString.call(a)==="[object Array]")return a[Math.floor(Math.random()*a.length)];if(a&&typeof a==="object")return function(obj){var rand=rnd(0,100)/100,min=0,max=0,key,return_val;for(key in obj)if(obj.hasOwnProperty(key)){max=
obj[key]+min;return_val=key;if(rand>=min&&rand<=max)break;min=min+obj[key]}return return_val}(a);throw new TypeError("Invalid arguments passed to rnd. ("+(b?a+", "+b:a)+")");}function randomLang(){return rnd(["AB","AF","AN","AR","AS","AZ","BE","BG","BN","BO","BR","BS","CA","CE","CO","CS","CU","CY","DA","DE","EL","EN","EO","ES","ET","EU","FA","FI","FJ","FO","FR","FY","GA","GD","GL","GV","HE","HI","HR","HT","HU","HY","ID","IS","IT","JA","JV","KA","KG","KO","KU","KW","KY","LA","LB","LI","LN","LT","LV",
"MG","MK","MN","MO","MS","MT","MY","NB","NE","NL","NN","NO","OC","PL","PT","RM","RO","RU","SC","SE","SK","SL","SO","SQ","SR","SV","SW","TK","TR","TY","UK","UR","UZ","VI","VO","YI","ZH"])}function randomBrowserAndOS(){var browser=rnd({chrome:.45132810566,iexplorer:.27477061836,firefox:.19384170608,safari:.06186781118,opera:.01574236955}),os={chrome:{win:.89,mac:.09,lin:.02},firefox:{win:.83,mac:.16,lin:.01},opera:{win:.91,mac:.03,lin:.06},safari:{win:.04,mac:.96},iexplorer:["win"]};return[browser,
rnd(os[browser])]}function randomProc(arch){var procs={lin:["i686","x86_64"],mac:{"Intel":.48,"PPC":.01,"U; Intel":.48,"U; PPC":.01},win:["","WOW64","Win64; x64"]};return rnd(procs[arch])}function randomRevision(dots){var return_val="";for(var x=0;x<dots;x++)return_val+="."+rnd(0,9);return return_val}var version_string={net:function(){return[rnd(1,4),rnd(0,9),rnd(1E4,99999),rnd(0,9)].join(".")},nt:function(){return rnd(5,6)+"."+rnd(0,3)},ie:function(){return rnd(7,11)},trident:function(){return rnd(3,
7)+"."+rnd(0,1)},osx:function(delim){return[10,rnd(5,10),rnd(0,9)].join(delim||".")},chrome:function(){return[rnd(13,39),0,rnd(800,899),0].join(".")},presto:function(){return"2.9."+rnd(160,190)},presto2:function(){return rnd(10,12)+".00"},safari:function(){return rnd(531,538)+"."+rnd(0,2)+"."+rnd(0,2)}};var browser={firefox:function firefox(arch){var firefox_ver=rnd(5,15)+randomRevision(2),gecko_ver="Gecko/20100101 Firefox/"+firefox_ver,proc=randomProc(arch),os_ver=arch==="win"?"(Windows NT "+version_string.nt()+
(proc?"; "+proc:""):arch==="mac"?"(Macintosh; "+proc+" Mac OS X "+version_string.osx():"(X11; Linux "+proc;return"Mozilla/5.0 "+os_ver+"; rv:"+firefox_ver.slice(0,-2)+") "+gecko_ver},iexplorer:function iexplorer(){var ver=version_string.ie();if(ver>=11)return"Mozilla/5.0 (Windows NT 6."+rnd(1,3)+"; Trident/7.0; "+rnd(["Touch; ",""])+"rv:11.0) like Gecko";return"Mozilla/5.0 (compatible; MSIE "+ver+".0; Windows NT "+version_string.nt()+"; Trident/"+version_string.trident()+(rnd(0,1)===1?"; .NET CLR "+
version_string.net():"")+")"},opera:function opera(arch){var presto_ver=" Presto/"+version_string.presto()+" Version/"+version_string.presto2()+")",os_ver=arch==="win"?"(Windows NT "+version_string.nt()+"; U; "+randomLang()+presto_ver:arch==="lin"?"(X11; Linux "+randomProc(arch)+"; U; "+randomLang()+presto_ver:"(Macintosh; Intel Mac OS X "+version_string.osx()+" U; "+randomLang()+" Presto/"+version_string.presto()+" Version/"+version_string.presto2()+")";return"Opera/"+rnd(9,14)+"."+rnd(0,99)+" "+
os_ver},safari:function safari(arch){var safari=version_string.safari(),ver=rnd(4,7)+"."+rnd(0,1)+"."+rnd(0,10),os_ver=arch==="mac"?"(Macintosh; "+randomProc("mac")+" Mac OS X "+version_string.osx("_")+" rv:"+rnd(2,6)+".0; "+randomLang()+") ":"(Windows; U; Windows NT "+version_string.nt()+")";return"Mozilla/5.0 "+os_ver+"AppleWebKit/"+safari+" (KHTML, like Gecko) Version/"+ver+" Safari/"+safari},chrome:function chrome(arch){var safari=version_string.safari(),os_ver=arch==="mac"?"(Macintosh; "+randomProc("mac")+
" Mac OS X "+version_string.osx("_")+") ":arch==="win"?"(Windows; U; Windows NT "+version_string.nt()+")":"(X11; Linux "+randomProc(arch);return"Mozilla/5.0 "+os_ver+" AppleWebKit/"+safari+" (KHTML, like Gecko) Chrome/"+version_string.chrome()+" Safari/"+safari}};var generate=function generate(){var random=randomBrowserAndOS();return browser[random[0]](random[1])};var userAgent={generate:generate};var internet=createCommonjsModule(function(module){var Internet=function(faker){var self=this;self.avatar=
function(){return faker.random.arrayElement(faker.definitions.internet.avatar_uri)};self.avatar.schema={"description":"Generates a URL for an avatar.","sampleResults":["https://s3.amazonaws.com/uifaces/faces/twitter/igorgarybaldi/128.jpg"]};self.email=function(firstName,lastName,provider){provider=provider||faker.random.arrayElement(faker.definitions.internet.free_email);return faker.helpers.slugify(faker.internet.userName(firstName,lastName))+"@"+provider};self.email.schema={"description":"Generates a valid email address based on optional input criteria",
"sampleResults":["foo.bar@gmail.com"],"properties":{"firstName":{"type":"string","required":false,"description":"The first name of the user"},"lastName":{"type":"string","required":false,"description":"The last name of the user"},"provider":{"type":"string","required":false,"description":"The domain of the user"}}};self.exampleEmail=function(firstName,lastName){var provider=faker.random.arrayElement(faker.definitions.internet.example_email);return self.email(firstName,lastName,provider)};self.userName=
function(firstName,lastName){var result;firstName=firstName||faker.name.firstName();lastName=lastName||faker.name.lastName();switch(faker.random.number(2)){case 0:result=firstName+faker.random.number(99);break;case 1:result=firstName+faker.random.arrayElement([".","_"])+lastName;break;case 2:result=firstName+faker.random.arrayElement([".","_"])+lastName+faker.random.number(99);break}result=result.toString().replace(/'/g,"");result=result.replace(/ /g,"");return result};self.userName.schema={"description":"Generates a username based on one of several patterns. The pattern is chosen randomly.",
"sampleResults":["Kirstin39","Kirstin.Smith","Kirstin.Smith39","KirstinSmith","KirstinSmith39"],"properties":{"firstName":{"type":"string","required":false,"description":"The first name of the user"},"lastName":{"type":"string","required":false,"description":"The last name of the user"}}};self.protocol=function(){var protocols=["http","https"];return faker.random.arrayElement(protocols)};self.protocol.schema={"description":"Randomly generates http or https","sampleResults":["https","http"]};self.url=
function(){return faker.internet.protocol()+"://"+faker.internet.domainName()};self.url.schema={"description":"Generates a random URL. The URL could be secure or insecure.","sampleResults":["http://rashawn.name","https://rashawn.name"]};self.domainName=function(){return faker.internet.domainWord()+"."+faker.internet.domainSuffix()};self.domainName.schema={"description":"Generates a random domain name.","sampleResults":["marvin.org"]};self.domainSuffix=function(){return faker.random.arrayElement(faker.definitions.internet.domain_suffix)};
self.domainSuffix.schema={"description":"Generates a random domain suffix.","sampleResults":["net"]};self.domainWord=function(){return faker.name.firstName().replace(/([\\~#&*{}/:<>?|"'])/ig,"").toLowerCase()};self.domainWord.schema={"description":"Generates a random domain word.","sampleResults":["alyce"]};self.ip=function(){var randNum=function(){return faker.random.number(255).toFixed(0)};var result=[];for(var i=0;i<4;i++)result[i]=randNum();return result.join(".")};self.ip.schema={"description":"Generates a random IP.",
"sampleResults":["97.238.241.11"]};self.ipv6=function(){var randHash=function(){var result="";for(var i=0;i<4;i++)result+=faker.random.arrayElement(["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"]);return result};var result=[];for(var i=0;i<8;i++)result[i]=randHash();return result.join(":")};self.ipv6.schema={"description":"Generates a random IPv6 address.","sampleResults":["2001:0db8:6276:b1a7:5213:22f1:25df:c8a0"]};self.userAgent=function(){return userAgent.generate()};self.userAgent.schema=
{"description":"Generates a random user agent.","sampleResults":["Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_7_5 rv:6.0; SL) AppleWebKit/532.0.1 (KHTML, like Gecko) Version/7.1.6 Safari/532.0.1"]};self.color=function(baseRed255,baseGreen255,baseBlue255){baseRed255=baseRed255||0;baseGreen255=baseGreen255||0;baseBlue255=baseBlue255||0;var red=Math.floor((faker.random.number(256)+baseRed255)/2);var green=Math.floor((faker.random.number(256)+baseGreen255)/2);var blue=Math.floor((faker.random.number(256)+
baseBlue255)/2);var redStr=red.toString(16);var greenStr=green.toString(16);var blueStr=blue.toString(16);return"#"+(redStr.length===1?"0":"")+redStr+(greenStr.length===1?"0":"")+greenStr+(blueStr.length===1?"0":"")+blueStr};self.color.schema={"description":"Generates a random hexadecimal color.","sampleResults":["#06267f"],"properties":{"baseRed255":{"type":"number","required":false,"description":"The red value. Valid values are 0 - 255."},"baseGreen255":{"type":"number","required":false,"description":"The green value. Valid values are 0 - 255."},
"baseBlue255":{"type":"number","required":false,"description":"The blue value. Valid values are 0 - 255."}}};self.mac=function(){var i,mac="";for(i=0;i<12;i++){mac+=faker.random.number(15).toString(16);if(i%2==1&&i!=11)mac+=":"}return mac};self.mac.schema={"description":"Generates a random mac address.","sampleResults":["78:06:cc:ae:b3:81"]};self.password=function(len,memorable,pattern,prefix){len=len||15;if(typeof memorable==="undefined")memorable=false;var consonant,letter,password,vowel;vowel=
/[aeiouAEIOU]$/;consonant=/[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]$/;var _password=function(length,memorable,pattern,prefix){var char,n;if(length==null)length=10;if(memorable==null)memorable=true;if(pattern==null)pattern=/\w/;if(prefix==null)prefix="";if(prefix.length>=length)return prefix;if(memorable)if(prefix.match(consonant))pattern=vowel;else pattern=consonant;n=faker.random.number(94)+33;char=String.fromCharCode(n);if(memorable)char=char.toLowerCase();if(!char.match(pattern))return _password(length,
memorable,pattern,prefix);return _password(length,memorable,pattern,""+prefix+char)};return _password(len,memorable,pattern,prefix)};self.password.schema={"description":"Generates a random password.","sampleResults":["AM7zl6Mg","susejofe"],"properties":{"length":{"type":"number","required":false,"description":"The number of characters in the password."},"memorable":{"type":"boolean","required":false,"description":"Whether a password should be easy to remember."},"pattern":{"type":"regex","required":false,
"description":"A regex to match each character of the password against. This parameter will be negated if the memorable setting is turned on."},"prefix":{"type":"string","required":false,"description":"A value to prepend to the generated password. The prefix counts towards the length of the password."}}}};module["exports"]=Internet});var database=createCommonjsModule(function(module){var Database=function(faker){var self=this;self.column=function(){return faker.random.arrayElement(faker.definitions.database.column)};
self.column.schema={"description":"Generates a column name.","sampleResults":["id","title","createdAt"]};self.type=function(){return faker.random.arrayElement(faker.definitions.database.type)};self.type.schema={"description":"Generates a column type.","sampleResults":["byte","int","varchar","timestamp"]};self.collation=function(){return faker.random.arrayElement(faker.definitions.database.collation)};self.collation.schema={"description":"Generates a collation.","sampleResults":["utf8_unicode_ci",
"utf8_bin"]};self.engine=function(){return faker.random.arrayElement(faker.definitions.database.engine)};self.engine.schema={"description":"Generates a storage engine.","sampleResults":["MyISAM","InnoDB"]}};module["exports"]=Database});var phone_number=createCommonjsModule(function(module){var Phone=function(faker){var self=this;self.phoneNumber=function(format){format=format||faker.phone.phoneFormats();return faker.helpers.replaceSymbolWithNumber(format)};self.phoneNumberFormat=function(phoneFormatsArrayIndex){phoneFormatsArrayIndex=
phoneFormatsArrayIndex||0;return faker.helpers.replaceSymbolWithNumber(faker.definitions.phone_number.formats[phoneFormatsArrayIndex])};self.phoneFormats=function(){return faker.random.arrayElement(faker.definitions.phone_number.formats)};return self};module["exports"]=Phone});var date=createCommonjsModule(function(module){var _Date=function(faker){var self=this;self.past=function(years,refDate){var date=refDate?new Date(Date.parse(refDate)):new Date;var range={min:1E3,max:(years||1)*365*24*3600*
1E3};var past=date.getTime();past-=faker.random.number(range);date.setTime(past);return date};self.future=function(years,refDate){var date=refDate?new Date(Date.parse(refDate)):new Date;var range={min:1E3,max:(years||1)*365*24*3600*1E3};var future=date.getTime();future+=faker.random.number(range);date.setTime(future);return date};self.between=function(from,to){var fromMilli=Date.parse(from);var dateOffset=faker.random.number(Date.parse(to)-fromMilli);var newDate=new Date(fromMilli+dateOffset);return newDate};
self.recent=function(days){var date=new Date;var range={min:1E3,max:(days||1)*24*3600*1E3};var future=date.getTime();future-=faker.random.number(range);date.setTime(future);return date};self.month=function(options){options=options||{};var type="wide";if(options.abbr)type="abbr";if(options.context&&typeof faker.definitions.date.month[type+"_context"]!=="undefined")type+="_context";var source=faker.definitions.date.month[type];return faker.random.arrayElement(source)};self.weekday=function(options){options=
options||{};var type="wide";if(options.abbr)type="abbr";if(options.context&&typeof faker.definitions.date.weekday[type+"_context"]!=="undefined")type+="_context";var source=faker.definitions.date.weekday[type];return faker.random.arrayElement(source)};return self};module["exports"]=_Date});var commerce=createCommonjsModule(function(module){var Commerce=function(faker){var self=this;self.color=function(){return faker.random.arrayElement(faker.definitions.commerce.color)};self.department=function(){return faker.random.arrayElement(faker.definitions.commerce.department)};
self.productName=function(){return faker.commerce.productAdjective()+" "+faker.commerce.productMaterial()+" "+faker.commerce.product()};self.price=function(min,max,dec,symbol){min=min||0;max=max||1E3;dec=dec===undefined?2:dec;symbol=symbol||"";if(min<0||max<0)return symbol+0;var randValue=faker.random.number({max:max,min:min});return symbol+(Math.round(randValue*Math.pow(10,dec))/Math.pow(10,dec)).toFixed(dec)};self.productAdjective=function(){return faker.random.arrayElement(faker.definitions.commerce.product_name.adjective)};
self.productMaterial=function(){return faker.random.arrayElement(faker.definitions.commerce.product_name.material)};self.product=function(){return faker.random.arrayElement(faker.definitions.commerce.product_name.product)};return self};module["exports"]=Commerce});var system=createCommonjsModule(function(module){function System(faker){this.fileName=function(ext,type){var str=faker.fake("{{random.words}}.{{system.fileExt}}");str=str.replace(/ /g,"_");str=str.replace(/,/g,"_");str=str.replace(/\-/g,
"_");str=str.replace(/\\/g,"_");str=str.replace(/\//g,"_");str=str.toLowerCase();return str};this.commonFileName=function(ext,type){var str=faker.random.words()+"."+(ext||faker.system.commonFileExt());str=str.replace(/ /g,"_");str=str.replace(/,/g,"_");str=str.replace(/\-/g,"_");str=str.replace(/\\/g,"_");str=str.replace(/\//g,"_");str=str.toLowerCase();return str};this.mimeType=function(){return faker.random.arrayElement(Object.keys(faker.definitions.system.mimeTypes))};this.commonFileType=function(){var types=
["video","audio","image","text","application"];return faker.random.arrayElement(types)};this.commonFileExt=function(type){var types=["application/pdf","audio/mpeg","audio/wav","image/png","image/jpeg","image/gif","video/mp4","video/mpeg","text/html"];return faker.system.fileExt(faker.random.arrayElement(types))};this.fileType=function(){var types=[];var mimes=faker.definitions.system.mimeTypes;Object.keys(mimes).forEach(function(m){var parts=m.split("/");if(types.indexOf(parts[0])===-1)types.push(parts[0])});
return faker.random.arrayElement(types)};this.fileExt=function(mimeType){var exts=[];var mimes=faker.definitions.system.mimeTypes;if(typeof mimes[mimeType]==="object")return faker.random.arrayElement(mimes[mimeType].extensions);Object.keys(mimes).forEach(function(m){if(mimes[m].extensions instanceof Array)mimes[m].extensions.forEach(function(ext){exts.push(ext)})});return faker.random.arrayElement(exts)};this.directoryPath=function(){};this.filePath=function(){};this.semver=function(){return[faker.random.number(9),
faker.random.number(9),faker.random.number(9)].join(".")}}module["exports"]=System});var lib$6=createCommonjsModule(function(module){function Faker(opts){var self=this;opts=opts||{};var locales=self.locales||opts.locales||{};var locale=self.locale||opts.locale||"en";var localeFallback=self.localeFallback||opts.localeFallback||"en";self.locales=locales;self.locale=locale;self.localeFallback=localeFallback;self.definitions={};function bindAll(obj){Object.keys(obj).forEach(function(meth){if(typeof obj[meth]===
"function")obj[meth]=obj[meth].bind(obj)});return obj}var Fake=fake;self.fake=(new Fake(self)).fake;var Random=random$1;self.random=bindAll(new Random(self));var Helpers=helpers$2;self.helpers=new Helpers(self);var Name=name;self.name=bindAll(new Name(self));var Address=address;self.address=bindAll(new Address(self));var Company=company;self.company=bindAll(new Company(self));var Finance=finance;self.finance=bindAll(new Finance(self));var Image=image;self.image=bindAll(new Image(self));var Lorem=
lorem;self.lorem=bindAll(new Lorem(self));var Hacker=hacker;self.hacker=bindAll(new Hacker(self));var Internet=internet;self.internet=bindAll(new Internet(self));var Database=database;self.database=bindAll(new Database(self));var Phone=phone_number;self.phone=bindAll(new Phone(self));var _Date=date;self.date=bindAll(new _Date(self));var Commerce=commerce;self.commerce=bindAll(new Commerce(self));var System=system;self.system=bindAll(new System(self));var _definitions={"name":["first_name","last_name",
"prefix","suffix","title","male_first_name","female_first_name","male_middle_name","female_middle_name","male_last_name","female_last_name"],"address":["city_prefix","city_suffix","street_suffix","county","country","country_code","state","state_abbr","street_prefix","postcode"],"company":["adjective","noun","descriptor","bs_adjective","bs_noun","bs_verb","suffix"],"lorem":["words"],"hacker":["abbreviation","adjective","noun","verb","ingverb"],"phone_number":["formats"],"finance":["account_type","transaction_type",
"currency","iban"],"internet":["avatar_uri","domain_suffix","free_email","example_email","password"],"commerce":["color","department","product_name","price","categories"],"database":["collation","column","engine","type"],"system":["mimeTypes"],"date":["month","weekday"],"title":"","separator":""};Object.keys(_definitions).forEach(function(d){if(typeof self.definitions[d]==="undefined")self.definitions[d]={};if(typeof _definitions[d]==="string"){self.definitions[d]=_definitions[d];return}_definitions[d].forEach(function(p){Object.defineProperty(self.definitions[d],
p,{get:function(){if(typeof self.locales[self.locale][d]==="undefined"||typeof self.locales[self.locale][d][p]==="undefined")return self.locales[localeFallback][d][p];else return self.locales[self.locale][d][p]}})})})}Faker.prototype.seed=function(value){var Random=random$1;this.seedValue=value;this.random=new Random(this,this.seedValue)};module["exports"]=Faker});var jsonSchemaFaker=lib.extend("chance",function(){try{return chance_1.Chance()}catch(e){return null}}).extend("faker",function(){try{return lib$6}catch(e){return null}});
return jsonSchemaFaker});