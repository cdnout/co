{"version":3,"file":"esri-leaflet-related.js","sources":["src/EsriLeafletRelated.js"],"names":["exports","VERSION","Query","esri_leaflet","Task","extend","setters","offset","limit","outFields","objectIds","relationshipId","definitionExpression","precision","featureIds","returnGeometry","returnZ","returnM","token","path","params","outSr","initialize","endpoint","service","prototype","call","this","simplify","map","factor","mapWidth","Math","abs","getBounds","getWest","getEast","maxAllowableOffset","getSize","y","run","callback","context","request","error","response","result","features","i","relatedRecordGroups","length","k","relatedRecords","push","Util","responseToFeatureCollection","query","options","EsriLeafletRelated"],"mappings":"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","sourcesContent":["export var VERSION = '2.0.0';\n\nimport { Task, Util } from 'esri-leaflet';\n\nexport var Query = Task.extend({\n    setters: {\n      'offset': 'offset',\n      'limit': 'limit',\n      'outFields': 'fields',\n      'objectIds': 'objectIds',\n      'relationshipId': 'relationshipId',\n      'definitionExpression': 'definitionExpression',\n      'precision': 'geometryPrecision',\n      'featureIds': 'objectIds',\n      'returnGeometry': 'returnGeometry',\n      'returnZ': 'returnZ',\n      'returnM': 'returnM',\n      'token': 'token'\n    },\n\n    path: 'queryRelatedRecords',\n\n    params: {\n      returnGeometry: true,\n      outSr: 4326,\n      outFields: '*',\n      returnZ: true,\n      returnM: false\n    },\n\n    // http://resources.arcgis.com/en/help/arcgis-rest-api/#/Query_Related_Records/02r300000115000000/\n\n    initialize: function (endpoint) {\n      // don't replace parent initialize, either pass FeatureLayer._service or the raw options object\n      if (endpoint.service) {\n        Task.prototype.initialize.call(this, endpoint.service);\n      } else {\n        Task.prototype.initialize.call(this, endpoint);\n      }\n    },\n\n    simplify: function (map, factor) {\n      // not sure if there's a better way to port L.esri.Tasks.Query.simplify() than just copy/pasting the function\n      var mapWidth = Math.abs(map.getBounds().getWest() - map.getBounds().getEast());\n      this.params.maxAllowableOffset = (mapWidth / map.getSize().y) * factor;\n      return this;\n    },\n\n    run: function (callback, context) {\n      return this.request(function (error, response) {\n        // if more than one objectId is specified, we loop through the features and pass a single collection to the utility method which converts to geoJson\n        var result = {\n          'features': []\n        };\n        for (var i = 0; i < response.relatedRecordGroups.length; i++) {\n          for (var k = 0; k < response.relatedRecordGroups[i].relatedRecords.length; k++) {\n            result.features.push(response.relatedRecordGroups[i].relatedRecords[k]);\n          }\n        }\n        callback.call(context, error, (response && Util.responseToFeatureCollection(result)), response);\n      }, context);\n    }\n  });\n\nexport function query (options) {\n  return new Query(options);\n}\n\nexport default query;\n"]}