"use strict";var Queue=require("tinyqueue");function polylabel(e,t,n){var r,l,o,a;t=t||1;for(var u=0;u<e[0].length;u++){var i=e[0][u];(!u||i[0]<r)&&(r=i[0]),(!u||i[1]<l)&&(l=i[1]),(!u||i[0]>o)&&(o=i[0]),(!u||i[1]>a)&&(a=i[1])}var s=o-r,h=a-l,d=Math.min(s,h),f=d/2;if(0===d){var v=[r,l];return v.distance=0,v}for(var p=new Queue(void 0,compareMax),g=r;g<o;g+=d)for(var c=l;c<a;c+=d)p.push(new Cell(g+f,c+f,f,e));var x=getCentroidCell(e),C=new Cell(r+s/2,l+h/2,0,e);C.d>x.d&&(x=C);for(var y=p.length;p.length;){var m=p.pop();m.d>x.d&&(x=m,n&&console.log("found best %d after %d probes",Math.round(1e4*m.d)/1e4,y)),m.max-x.d<=t||(f=m.h/2,p.push(new Cell(m.x-f,m.y-f,f,e)),p.push(new Cell(m.x+f,m.y-f,f,e)),p.push(new Cell(m.x-f,m.y+f,f,e)),p.push(new Cell(m.x+f,m.y+f,f,e)),y+=4)}n&&(console.log("num probes: "+y),console.log("best distance: "+x.d));var w=[x.x,x.y];return w.distance=x.d,w}function compareMax(e,t){return t.max-e.max}function Cell(e,t,n,r){this.x=e,this.y=t,this.h=n,this.d=pointToPolygonDist(e,t,r),this.max=this.d+this.h*Math.SQRT2}function pointToPolygonDist(e,t,n){for(var r=!1,l=1/0,o=0;o<n.length;o++)for(var a=n[o],u=0,i=a.length,s=i-1;u<i;s=u++){var h=a[u],d=a[s];h[1]>t!=d[1]>t&&e<(d[0]-h[0])*(t-h[1])/(d[1]-h[1])+h[0]&&(r=!r),l=Math.min(l,getSegDistSq(e,t,h,d))}return 0===l?0:(r?1:-1)*Math.sqrt(l)}function getCentroidCell(e){for(var t=0,n=0,r=0,l=e[0],o=0,a=l.length,u=a-1;o<a;u=o++){var i=l[o],s=l[u],h=i[0]*s[1]-s[0]*i[1];n+=(i[0]+s[0])*h,r+=(i[1]+s[1])*h,t+=3*h}return 0===t?new Cell(l[0][0],l[0][1],0,e):new Cell(n/t,r/t,0,e)}function getSegDistSq(e,t,n,r){var l,o=n[0],a=n[1],u=r[0]-o,i=r[1]-a;return 0===u&&0===i||(1<(l=((e-o)*u+(t-a)*i)/(u*u+i*i))?(o=r[0],a=r[1]):0<l&&(o+=u*l,a+=i*l)),(u=e-o)*u+(i=t-a)*i}Queue.default&&(Queue=Queue.default),module.exports=polylabel,module.exports.default=polylabel;