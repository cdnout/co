import{tw as defaultTW}from"twind";var ensureMaxSize=(e,t)=>{e.size>t&&e.delete(e.keys().next().value)},escape="undefined"!=typeof CSS&&CSS.escape||(e=>e.replace(/[!"'`*+.,;:\\/<=>?@#$%&^|~()[\]{}]/g,"\\$&").replace(/^\d/,"\\3$& "));export*from"twind";var caches=new WeakMap,getCache=e=>{let t=caches.get(e);return t||(t=new Map,caches.set(e,t)),t},uniq=(e,t,r)=>r.indexOf(e)==t,createObserver=({tw:n=defaultTW}={})=>{if("function"!=typeof MutationObserver)return{observe(){return this},disconnect(){return this}};{const i=getCache(n),t=({target:t,addedNodes:r})=>{var s=t.getAttribute?.("class");if(s){let e=i.get(s);e||(e=n(s).split(/ +/g).filter(uniq).join(" "),i.set(s,e),i.set(e,e),ensureMaxSize(i,3e4)),s!==e&&t.setAttribute("class",e)}for(let e=r.length;e--;){var a=r[e];c([{target:a,addedNodes:a.children||[]}])}},c=e=>{e.forEach(t),(e=r.takeRecords())&&e.forEach(t)},r=new MutationObserver(c);return{observe(e){return c([{target:e,addedNodes:[e]}]),r.observe(e,{attributes:!0,attributeFilter:["class"],subtree:!0,childList:!0}),this},disconnect(){return r.disconnect(),this}}}};function observe(e,t="function"==typeof this?void 0:this){return createObserver(t).observe(e)}export{createObserver,observe};