import{apply,hash,directive}from"twind";var includes=(e,r)=>!!~e.indexOf(r),join=(e,r="-")=>e.join(r),hyphenate=e=>e.replace(/[A-Z]/g,"-$&").toLowerCase(),evalThunk=(e,r)=>{for(;"function"==typeof e;)e=e(r);return e},isCSSProperty=(e,r)=>!includes("@:&",e[0])&&(includes("rg",(typeof r)[5])||Array.isArray(r)),merge=(e,s,t)=>s?Object.keys(s).reduce((e,r)=>{var a=evalThunk(s[r],t);return isCSSProperty(r,a)?e[hyphenate(r)]=a:e[r]="@"==r[0]&&includes("figa",r[1])?(e[r]||[]).concat(a):merge(e[r]||{},a,t),e},e):e,escape="undefined"!=typeof CSS&&CSS.escape||(e=>e.replace(/[!"'`*+.,;:\\/<=>?@#$%&^|~()[\]{}]/g,"\\$&").replace(/^\d/,"\\3$& ")),buildMediaQuery=e=>(Array.isArray(e)||(e=[e]),"@media "+join(e.map(r=>(r="string"==typeof r?{min:r}:r).raw||join(Object.keys(r).map(e=>`(${e}-width:${r[e]})`)," and ")),","));export*from"twind";var translate=(e,a)=>{const s=(e,r)=>Array.isArray(r)?r.reduce(s,e):merge(e,evalThunk(r,a),a);return e.reduce(s,{})},newRule=/\s*(?:([\w-%@]+)\s*:?\s*([^{;]+?)\s*(?:;|$|})|([^;}{]*?)\s*{)|(})/gi,ruleClean=/\/\*[\s\S]*?\*\/|\s+|\n/gm,decorate=(e,r)=>e.reduceRight((e,r)=>({[r]:e}),r),saveBlock=(e,r,a)=>{a&&e.push(decorate(r,a))},interleave=(r,a,s)=>{let t=r[0];const n=[];for(let e=0;e<a.length;){var i=evalThunk(a[e],s);i&&"object"==typeof i?(n.push(t,i),t=r[++e]):t+=(i||"")+r[++e]}return n.push(t),n},astish=(r,a)=>{const s=[],t=[];let n;var i,c;for(let e=0;e<r.length;e++){const o=r[e];if("string"==typeof o)for(;i=newRule.exec(o.replace(ruleClean," "));)i[0]&&(i[4]&&(n=saveBlock(t,s,n),s.pop()),i[3]?(n=saveBlock(t,s,n),s.push(i[3])):i[4]||(n=n||{},(c=i[2]&&/\S/.test(i[2])?i[2]:r[++e])&&("@apply"==i[1]?merge(n,evalThunk(apply(c),a),a):n[i[1]]=c)));else n=saveBlock(t,s,n),t.push(decorate(s,o))}return saveBlock(t,s,n),t},cssFactory=(e,r)=>translate(Array.isArray(e[0])&&Array.isArray(e[0].raw)?astish(interleave(e[0],e.slice(1),r),r):e,r),css=(...e)=>directive(cssFactory,e),keyframesFactory=(e,r)=>{const a=cssFactory(e,r),s=hash(JSON.stringify(a));return r.tw(()=>({["@keyframes "+s]:a})),s},keyframes=(...e)=>directive(keyframesFactory,e),animation=(r,e)=>void 0===e?(...e)=>animation(r,keyframes(...e)):css({...r&&"object"==typeof r?r:{animation:r},animationName:"function"==typeof e?e:keyframes(e)}),screenFactory=({size:e,rules:r},a)=>{e=buildMediaQuery(a.theme("screens",e));return void 0===r?e:{[e]:"function"==typeof r?evalThunk(r,a):cssFactory([r],a)}},screen=(e,r)=>directive(screenFactory,{size:e,rules:r});export{animation,css,keyframes,screen};