"use strict";exports.__esModule=!0,exports.receiveMessage=receiveMessage,exports.setupGlobalReceiveMessage=setupGlobalReceiveMessage,exports.messageListener=messageListener,exports.listenForMessages=listenForMessages,exports.stopListenForMessages=stopListenForMessages;var _src=require("zalgo-promise/src"),_src2=require("cross-domain-utils/src"),_src3=require("belter/src"),_conf=require("../../conf"),_lib=require("../../lib"),_serialize=require("../../serialize"),_global=require("../../global"),_types=require("./types");function deserializeMessages(e,s,r,{on:o,send:n}){let i;try{i=(0,_serialize.deserializeMessage)(s,r,e,{on:o,send:n})}catch(e){return}if(!i)return;if("object"!=typeof i||null===i)return;const t=i[(0,_global.getGlobalKey)()];return Array.isArray(t)?t:void 0}function receiveMessage(e,{on:s,send:r}){const o=(0,_global.globalStore)("receivedMessages");try{if(!window||window.closed||!e.source)return}catch(e){return}let{source:n,origin:i,data:t}=e;if(__TEST__){if((0,_src2.isWindowClosed)(n))return;i=(0,_src2.getDomain)(n)}const a=deserializeMessages(t,n,i,{on:s,send:r});if(a){(0,_lib.markWindowKnown)(n);for(const e of a){if(o.has(e.id))return;if(o.set(e.id,!0),(0,_src2.isWindowClosed)(n)&&!e.fireAndForget)return;0===e.origin.indexOf(_src2.PROTOCOL.FILE)&&(i=`${_src2.PROTOCOL.FILE}//`);try{e.type===_conf.MESSAGE_TYPE.REQUEST?(0,_types.handleRequest)(n,i,e,{on:s,send:r}):e.type===_conf.MESSAGE_TYPE.RESPONSE?(0,_types.handleResponse)(n,i,e):e.type===_conf.MESSAGE_TYPE.ACK&&(0,_types.handleAck)(n,i,e)}catch(e){setTimeout(()=>{throw e},0)}}}}function setupGlobalReceiveMessage({on:e,send:s}){const r=(0,_global.getGlobal)();r.receiveMessage=r.receiveMessage||(r=>receiveMessage(r,{on:e,send:s}))}function messageListener(e,{on:s,send:r}){_src.ZalgoPromise.try(()=>{try{(0,_src3.noop)(e.source)}catch(e){return}const o=e.source||e.sourceElement;let n=e.origin||e.originalEvent&&e.originalEvent.origin;const i=e.data;if("null"===n&&(n=`${_src2.PROTOCOL.FILE}//`),o){if(!n)throw new Error("Post message did not have origin domain");__TEST__&&(0,_lib.needsGlobalMessagingForBrowser)()&&!1===(0,_src2.isSameTopWindow)(o,window)||receiveMessage({source:o,origin:n,data:i},{on:s,send:r})}})}function listenForMessages({on:e,send:s}){return(0,_global.globalStore)().getOrSet("postMessageListener",()=>(0,_src3.addEventListener)(window,"message",r=>{messageListener(r,{on:e,send:s})}))}function stopListenForMessages(){const e=(0,_global.globalStore)().get("postMessageListener");e&&e.cancel()}