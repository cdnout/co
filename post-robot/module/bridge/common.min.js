"use strict";exports.__esModule=!0,exports.needsBridgeForBrowser=needsBridgeForBrowser,exports.needsBridgeForWin=needsBridgeForWin,exports.needsBridgeForDomain=needsBridgeForDomain,exports.needsBridge=needsBridge,exports.getBridgeName=getBridgeName,exports.isBridge=isBridge,exports.registerRemoteWindow=registerRemoteWindow,exports.findRemoteWindow=findRemoteWindow,exports.registerRemoteSendMessage=registerRemoteSendMessage,exports.rejectRemoteSendMessage=rejectRemoteSendMessage,exports.sendBridgeMessage=sendBridgeMessage,exports.documentBodyReady=void 0;var _src=require("zalgo-promise/src"),_src2=require("cross-domain-utils/src"),_src3=require("belter/src"),_conf=require("../conf"),_global=require("../global");function needsBridgeForBrowser(){return!!(0,_src2.getUserAgent)(window).match(/MSIE|trident|edge\/12|edge\/13/i)}function needsBridgeForWin(e){return!(0,_src2.isSameTopWindow)(window,e)}function needsBridgeForDomain(e,o){if(e){if((0,_src2.getDomain)()!==(0,_src2.getDomainFromUrl)(e))return!0}else if(o&&!(0,_src2.isSameDomain)(o))return!0;return!1}function needsBridge({win:e,domain:o}){return!!needsBridgeForBrowser()&&(!(o&&!needsBridgeForDomain(o,e))&&!(e&&!needsBridgeForWin(e)))}function getBridgeName(e){const o=(e=e||(0,_src2.getDomainFromUrl)(e)).replace(/[^a-zA-Z0-9]+/g,"_");return`${_conf.BRIDGE_NAME_PREFIX}_${o}`}function isBridge(){return Boolean(window.name&&window.name===getBridgeName((0,_src2.getDomain)()))}const documentBodyReady=new _src.ZalgoPromise(e=>{if(window.document&&window.document.body)return e(window.document.body);const o=setInterval(()=>{if(window.document&&window.document.body)return clearInterval(o),e(window.document.body)},10)});function registerRemoteWindow(e){(0,_global.windowStore)("remoteWindowPromises").getOrSet(e,()=>new _src.ZalgoPromise)}function findRemoteWindow(e){const o=(0,_global.windowStore)("remoteWindowPromises").get(e);if(!o)throw new Error("Remote window promise not found");return o}function registerRemoteSendMessage(e,o,r){findRemoteWindow(e).resolve((n,i,d)=>{if(n!==e)throw new Error("Remote window does not match window");if(!(0,_src2.matchDomain)(i,o))throw new Error(`Remote domain ${i} does not match domain ${o}`);r.fireAndForget(d)})}function rejectRemoteSendMessage(e,o){findRemoteWindow(e).reject(o).catch(_src3.noop)}function sendBridgeMessage(e,o,r){const n=(0,_src2.isOpener)(window,e),i=(0,_src2.isOpener)(e,window);if(!n&&!i)throw new Error("Can only send messages to and from parent and popup windows");return findRemoteWindow(e).then(n=>n(e,o,r))}exports.documentBodyReady=documentBodyReady;