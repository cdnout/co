import{assert}from"../asserts.js";import GeometryType from"../geom/GeometryType.js";import CircleStyle from"./Circle.js";import Fill from"./Fill.js";import Stroke from"./Stroke.js";class Style{constructor(e){e=e||{};this.geometry_=null,this.geometryFunction_=defaultGeometryFunction,void 0!==e.geometry&&this.setGeometry(e.geometry),this.fill_=void 0!==e.fill?e.fill:null,this.image_=void 0!==e.image?e.image:null,this.renderer_=void 0!==e.renderer?e.renderer:null,this.stroke_=void 0!==e.stroke?e.stroke:null,this.text_=void 0!==e.text?e.text:null,this.zIndex_=e.zIndex}clone(){let e=this.getGeometry();return e&&"object"==typeof e&&(e=e.clone()),new Style({geometry:e,fill:this.getFill()?this.getFill().clone():void 0,image:this.getImage()?this.getImage().clone():void 0,stroke:this.getStroke()?this.getStroke().clone():void 0,text:this.getText()?this.getText().clone():void 0,zIndex:this.getZIndex()})}getRenderer(){return this.renderer_}setRenderer(e){this.renderer_=e}getGeometry(){return this.geometry_}getGeometryFunction(){return this.geometryFunction_}getFill(){return this.fill_}setFill(e){this.fill_=e}getImage(){return this.image_}setImage(e){this.image_=e}getStroke(){return this.stroke_}setStroke(e){this.stroke_=e}getText(){return this.text_}setText(e){this.text_=e}getZIndex(){return this.zIndex_}setGeometry(t){"function"==typeof t?this.geometryFunction_=t:"string"==typeof t?this.geometryFunction_=function(e){return e.get(t)}:t?void 0!==t&&(this.geometryFunction_=function(){return t}):this.geometryFunction_=defaultGeometryFunction,this.geometry_=t}setZIndex(e){this.zIndex_=e}}function toFunction(t){let r;if("function"==typeof t)r=t;else{let e;e=Array.isArray(t)?t:(assert("function"==typeof t.getZIndex,41),[t]),r=function(){return e}}return r}let defaultStyles=null;function createDefaultStyle(e,t){var r,o;return defaultStyles||(r=new Fill({color:"rgba(255,255,255,0.4)"}),o=new Stroke({color:"#3399CC",width:1.25}),defaultStyles=[new Style({image:new CircleStyle({fill:r,stroke:o,radius:5}),fill:r,stroke:o})]),defaultStyles}function createEditingStyle(){const e={};var t=[255,255,255,1],r=[0,153,255,1];return e[GeometryType.POLYGON]=[new Style({fill:new Fill({color:[255,255,255,.5]})})],e[GeometryType.MULTI_POLYGON]=e[GeometryType.POLYGON],e[GeometryType.LINE_STRING]=[new Style({stroke:new Stroke({color:t,width:5})}),new Style({stroke:new Stroke({color:r,width:3})})],e[GeometryType.MULTI_LINE_STRING]=e[GeometryType.LINE_STRING],e[GeometryType.CIRCLE]=e[GeometryType.POLYGON].concat(e[GeometryType.LINE_STRING]),e[GeometryType.POINT]=[new Style({image:new CircleStyle({radius:6,fill:new Fill({color:r}),stroke:new Stroke({color:t,width:1.5})}),zIndex:1/0})],e[GeometryType.MULTI_POINT]=e[GeometryType.POINT],e[GeometryType.GEOMETRY_COLLECTION]=e[GeometryType.POLYGON].concat(e[GeometryType.LINE_STRING],e[GeometryType.POINT]),e}function defaultGeometryFunction(e){return e.getGeometry()}export default Style;export{toFunction,createDefaultStyle,createEditingStyle};