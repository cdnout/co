import{squaredSegmentDistance,toRadians,toDegrees}from"../../math.js";import{get as getProjection,getTransform}from"../../proj.js";function line(t,n,a){const r=[];var e,o=t(0),i=t(1),s=n(o);const c=[i,o],p=[n(i),s],h=[1,0],u={};let g=1e5,f,M,l,m,d,R;for(;0<--g&&0<h.length;)l=h.pop(),o=c.pop(),s=p.pop(),(R=l.toString())in u||(r.push(s[0],s[1]),u[R]=!0),m=h.pop(),i=c.pop(),e=p.pop(),M=n(f=t(d=(l+m)/2)),squaredSegmentDistance(M[0],M[1],s[0],s[1],e[0],e[1])<a?(r.push(e[0],e[1]),R=m.toString(),u[R]=!0):(h.push(m,d,d,l),p.push(e,M,M,s),c.push(i,f,f,o));return r}function greatCircleArc(e,t,o,i,n,a){var r=getProjection("EPSG:4326");const s=Math.cos(toRadians(t)),c=Math.sin(toRadians(t)),p=Math.cos(toRadians(i)),h=Math.sin(toRadians(i)),u=Math.cos(toRadians(o-e)),g=Math.sin(toRadians(o-e)),f=c*h+s*p*u;return line(function(t){if(1<=f)return[o,i];var t=t*Math.acos(f),n=Math.cos(t),t=Math.sin(t),a=g*p,r=s*h-c*p*u,a=Math.atan2(a,r),r=Math.asin(c*n+s*t*Math.cos(a)),a=toRadians(e)+Math.atan2(Math.sin(a)*t*s,n-c*Math.sin(r));return[toDegrees(a),toDegrees(r)]},getTransform(r,n),a)}function meridian(n,a,r,t,e){var o=getProjection("EPSG:4326");return line(function(t){return[n,a+(r-a)*t]},getTransform(o,t),e)}function parallel(n,a,r,t,e){var o=getProjection("EPSG:4326");return line(function(t){return[a+(r-a)*t,n]},getTransform(o,t),e)}export{greatCircleArc,meridian,parallel};