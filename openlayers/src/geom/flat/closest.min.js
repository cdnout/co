import{lerp,squaredDistance as squaredDx}from"../../math.js";function assignClosest(t,a,e,s,r,n,l){var i=t[a],o=t[a+1],u=t[e]-i,f=t[e+1]-o;let g;if(0==u&&0==f)g=a;else{var q=((r-i)*u+(n-o)*f)/(u*u+f*f);if(1<q)g=e;else{if(0<q){for(let r=0;r<s;++r)l[r]=lerp(t[a+r],t[e+r],q);return void(l.length=s)}g=a}}for(let r=0;r<s;++r)l[r]=t[g+r];l.length=s}function maxSquaredDelta(r,t,a,e,s){let n=r[t],l=r[t+1];for(t+=e;t<a;t+=e){var i=r[t],o=r[t+1],u=squaredDx(n,l,i,o);s<u&&(s=u),n=i,l=o}return s}function arrayMaxSquaredDelta(a,e,s,n,l){for(let r=0,t=s.length;r<t;++r){var i=s[r];l=maxSquaredDelta(a,e,i,n,l),e=i}return l}function multiArrayMaxSquaredDelta(a,e,s,n,l){for(let r=0,t=s.length;r<t;++r){var i=s[r];l=arrayMaxSquaredDelta(a,e,i,n,l),e=i[i.length-1]}return l}function assignClosestPoint(r,t,a,e,s,n,l,i,o,u,f){if(t==a)return u;let g,q;if(0===s){if((q=squaredDx(l,i,r[t],r[t+1]))<u){for(g=0;g<e;++g)o[g]=r[t+g];return o.length=e,q}return u}var d=f||[NaN,NaN];let h=t+e;for(;h<a;)if(assignClosest(r,h-e,h,e,l,i,d),(q=squaredDx(l,i,d[0],d[1]))<u){for(u=q,g=0;g<e;++g)o[g]=d[g];o.length=e,h+=e}else h+=e*Math.max((Math.sqrt(q)-Math.sqrt(u))/s|0,1);if(n&&(assignClosest(r,a-e,t,e,l,i,d),(q=squaredDx(l,i,d[0],d[1]))<u)){for(u=q,g=0;g<e;++g)o[g]=d[g];o.length=e}return u}function assignClosestArrayPoint(a,e,s,n,l,i,o,u,f,g,r){var q=r||[NaN,NaN];for(let r=0,t=s.length;r<t;++r){var d=s[r];g=assignClosestPoint(a,e,d,n,l,i,o,u,f,g,q),e=d}return g}function assignClosestMultiArrayPoint(a,e,s,n,l,i,o,u,f,g,r){var q=r||[NaN,NaN];for(let r=0,t=s.length;r<t;++r){var d=s[r];g=assignClosestArrayPoint(a,e,d,n,l,i,o,u,f,g,q),e=d[d.length-1]}return g}export{maxSquaredDelta,arrayMaxSquaredDelta,multiArrayMaxSquaredDelta,assignClosestPoint,assignClosestArrayPoint,assignClosestMultiArrayPoint};