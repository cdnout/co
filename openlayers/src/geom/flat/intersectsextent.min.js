import{containsExtent,createEmpty,extendFlatCoordinates,intersects,intersectsSegment}from"../../extent.js";import{linearRingContainsXY,linearRingContainsExtent}from"./contains.js";import{forEach as forEachSegment}from"./segments.js";function intersectsLineString(n,t,e,r,i){var s=extendFlatCoordinates(createEmpty(),n,t,e,r);return!!intersects(i,s)&&(!!containsExtent(i,s)||(s[0]>=i[0]&&s[2]<=i[2]||(s[1]>=i[1]&&s[3]<=i[3]||forEachSegment(n,t,e,r,function(n,t){return intersectsSegment(i,n,t)}))))}function intersectsLineStringArray(e,r,i,s,a){for(let n=0,t=i.length;n<t;++n){if(intersectsLineString(e,r,i[n],s,a))return!0;r=i[n]}return!1}function intersectsLinearRing(n,t,e,r,i){return!!intersectsLineString(n,t,e,r,i)||(!!linearRingContainsXY(n,t,e,r,i[0],i[1])||(!!linearRingContainsXY(n,t,e,r,i[0],i[3])||(!!linearRingContainsXY(n,t,e,r,i[2],i[1])||!!linearRingContainsXY(n,t,e,r,i[2],i[3]))))}function intersectsLinearRingArray(e,n,r,i,s){if(!intersectsLinearRing(e,n,r[0],i,s))return!1;if(1===r.length)return!0;for(let n=1,t=r.length;n<t;++n)if(linearRingContainsExtent(e,r[n-1],r[n],i,s)&&!intersectsLineString(e,r[n-1],r[n],i,s))return!1;return!0}function intersectsLinearRingMultiArray(e,r,i,s,a){for(let n=0,t=i.length;n<t;++n){var c=i[n];if(intersectsLinearRingArray(e,r,c,s,a))return!0;r=c[c.length-1]}return!1}export{intersectsLineString,intersectsLineStringArray,intersectsLinearRing,intersectsLinearRingArray,intersectsLinearRingMultiArray};