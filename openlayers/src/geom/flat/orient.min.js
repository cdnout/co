import{coordinates as reverseCoordinates}from"./reverse.js";function linearRingIsClockwise(e,r,n,i){let t=0,o=e[n-i],s=e[n-i+1];for(;r<n;r+=i){var a=e[r],l=e[r+1];t+=(a-o)*(l+s),o=a,s=l}return 0<t}function linearRingsAreOriented(n,i,t,o,e){var s=void 0!==e&&e;for(let e=0,r=t.length;e<r;++e){var a=t[e],l=linearRingIsClockwise(n,i,a,o);if(0===e){if(s&&l||!s&&!l)return!1}else if(s&&!l||!s&&l)return!1;i=a}return!0}function linearRingssAreOriented(n,i,t,o,s){for(let e=0,r=t.length;e<r;++e){var a=t[e];if(!linearRingsAreOriented(n,i,a,o,s))return!1;a.length&&(i=a[a.length-1])}return!0}function orientLinearRings(n,i,t,o,e){var s=void 0!==e&&e;for(let e=0,r=t.length;e<r;++e){var a=t[e],l=linearRingIsClockwise(n,i,a,o);(0===e?s&&l||!s&&!l:s&&!l||!s&&l)&&reverseCoordinates(n,i,a,o),i=a}return i}function orientLinearRingsArray(n,i,t,o,s){for(let e=0,r=t.length;e<r;++e)i=orientLinearRings(n,i,t[e],o,s);return i}export{linearRingIsClockwise,linearRingsAreOriented,linearRingssAreOriented,orientLinearRings,orientLinearRingsArray};