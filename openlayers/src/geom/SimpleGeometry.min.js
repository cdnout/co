import{abstract}from"../util.js";import{createOrUpdateFromFlatCoordinates,getCenter}from"../extent.js";import Geometry from"./Geometry.js";import GeometryLayout from"./GeometryLayout.js";import{rotate,scale,translate,transform2D}from"./flat/transform.js";import{clear}from"../obj.js";class SimpleGeometry extends Geometry{constructor(){super(),this.layout=GeometryLayout.XY,this.stride=2,this.flatCoordinates=null}computeExtent(t){return createOrUpdateFromFlatCoordinates(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t)}getCoordinates(){return abstract()}getFirstCoordinate(){return this.flatCoordinates.slice(0,this.stride)}getFlatCoordinates(){return this.flatCoordinates}getLastCoordinate(){return this.flatCoordinates.slice(this.flatCoordinates.length-this.stride)}getLayout(){return this.layout}getSimplifiedGeometry(t){if(this.simplifiedGeometryRevision!=this.getRevision()&&(clear(this.simplifiedGeometryCache),this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),t<0||0!==this.simplifiedGeometryMaxMinSquaredTolerance&&t<=this.simplifiedGeometryMaxMinSquaredTolerance)return this;var e=t.toString();if(this.simplifiedGeometryCache.hasOwnProperty(e))return this.simplifiedGeometryCache[e];{const r=this.getSimplifiedGeometryInternal(t);return r.getFlatCoordinates().length<this.flatCoordinates.length?this.simplifiedGeometryCache[e]=r:(this.simplifiedGeometryMaxMinSquaredTolerance=t,this)}}getSimplifiedGeometryInternal(t){return this}getStride(){return this.stride}setFlatCoordinates(t,e){this.stride=getStrideForLayout(t),this.layout=t,this.flatCoordinates=e}setCoordinates(t,e){abstract()}setLayout(t,e,r){let i;if(t)i=getStrideForLayout(t);else{for(let t=0;t<r;++t){if(0===e.length)return this.layout=GeometryLayout.XY,void(this.stride=2);e=e[0]}t=getLayoutForStride(i=e.length)}this.layout=t,this.stride=i}applyTransform(t){this.flatCoordinates&&(t(this.flatCoordinates,this.flatCoordinates,this.stride),this.changed())}rotate(t,e){var r,i=this.getFlatCoordinates();i&&(r=this.getStride(),rotate(i,0,i.length,r,t,e,i),this.changed())}scale(t,e,r){let i=e,o=(void 0===i&&(i=t),r);o=o||getCenter(this.getExtent());e=this.getFlatCoordinates();e&&(r=this.getStride(),scale(e,0,e.length,r,t,i,o,e),this.changed())}translate(t,e){var r,i=this.getFlatCoordinates();i&&(r=this.getStride(),translate(i,0,i.length,r,t,e,i),this.changed())}}function getLayoutForStride(t){let e;return 2==t?e=GeometryLayout.XY:3==t?e=GeometryLayout.XYZ:4==t&&(e=GeometryLayout.XYZM),e}function getStrideForLayout(t){let e;return t==GeometryLayout.XY?e=2:t==GeometryLayout.XYZ||t==GeometryLayout.XYM?e=3:t==GeometryLayout.XYZM&&(e=4),e}function transformGeom2D(t,e,r){var i=t.getFlatCoordinates();return i?(t=t.getStride(),transform2D(i,0,i.length,t,e,r)):null}export default SimpleGeometry;export{getStrideForLayout,transformGeom2D};