import{listen,unlistenByKey}from"../events.js";import EventType from"../events/EventType.js";import{createOrUpdateEmpty,closestSquaredDistanceXY,extend,getCenter}from"../extent.js";import Geometry from"./Geometry.js";import GeometryType from"./GeometryType.js";import{clear}from"../obj.js";class GeometryCollection extends Geometry{constructor(e){super(),this.geometries_=e||null,this.changeEventsKeys_=[],this.listenGeometriesChange_()}unlistenGeometriesChange_(){this.changeEventsKeys_.forEach(unlistenByKey),this.changeEventsKeys_.length=0}listenGeometriesChange_(){if(this.geometries_)for(let e=0,t=this.geometries_.length;e<t;++e)this.changeEventsKeys_.push(listen(this.geometries_[e],EventType.CHANGE,this.changed,this))}clone(){const e=new GeometryCollection(null);return e.setGeometries(this.geometries_),e}closestPointXY(s,i,r,n){if(n<closestSquaredDistanceXY(this.getExtent(),s,i))return n;const o=this.geometries_;for(let e=0,t=o.length;e<t;++e)n=o[e].closestPointXY(s,i,r,n);return n}containsXY(s,i){const r=this.geometries_;for(let e=0,t=r.length;e<t;++e)if(r[e].containsXY(s,i))return!0;return!1}computeExtent(s){createOrUpdateEmpty(s);const i=this.geometries_;for(let e=0,t=i.length;e<t;++e)extend(s,i[e].getExtent());return s}getGeometries(){return cloneGeometries(this.geometries_)}getGeometriesArray(){return this.geometries_}getSimplifiedGeometry(i){if(this.simplifiedGeometryRevision!=this.getRevision()&&(clear(this.simplifiedGeometryCache),this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),i<0||0!==this.simplifiedGeometryMaxMinSquaredTolerance&&i<this.simplifiedGeometryMaxMinSquaredTolerance)return this;var e=i.toString();if(this.simplifiedGeometryCache.hasOwnProperty(e))return this.simplifiedGeometryCache[e];{const o=[];var r=this.geometries_;let s=!1;for(let e=0,t=r.length;e<t;++e){const h=r[e];var n=h.getSimplifiedGeometry(i);o.push(n),n!==h&&(s=!0)}if(s){const t=new GeometryCollection(null);return t.setGeometriesArray(o),this.simplifiedGeometryCache[e]=t}return this.simplifiedGeometryMaxMinSquaredTolerance=i,this}}getType(){return GeometryType.GEOMETRY_COLLECTION}intersectsExtent(s){const i=this.geometries_;for(let e=0,t=i.length;e<t;++e)if(i[e].intersectsExtent(s))return!0;return!1}isEmpty(){return 0===this.geometries_.length}rotate(s,i){const r=this.geometries_;for(let e=0,t=r.length;e<t;++e)r[e].rotate(s,i);this.changed()}scale(s,i,e){let r=e;r=r||getCenter(this.getExtent());const n=this.geometries_;for(let e=0,t=n.length;e<t;++e)n[e].scale(s,i,r);this.changed()}setGeometries(e){this.setGeometriesArray(cloneGeometries(e))}setGeometriesArray(e){this.unlistenGeometriesChange_(),this.geometries_=e,this.listenGeometriesChange_(),this.changed()}applyTransform(s){const i=this.geometries_;for(let e=0,t=i.length;e<t;++e)i[e].applyTransform(s);this.changed()}translate(s,i){const r=this.geometries_;for(let e=0,t=r.length;e<t;++e)r[e].translate(s,i);this.changed()}disposeInternal(){this.unlistenGeometriesChange_(),super.disposeInternal()}}function cloneGeometries(s){const i=[];for(let e=0,t=s.length;e<t;++e)i.push(s[e].clone());return i}export default GeometryCollection;