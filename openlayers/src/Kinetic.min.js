class Kinetic{constructor(t,i,s){this.decay_=t,this.minVelocity_=i,this.delay_=s,this.points_=[],this.angle_=0,this.initialVelocity_=0}begin(){this.points_.length=0,this.angle_=0,this.initialVelocity_=0}update(t,i){this.points_.push(t,i,Date.now())}end(){if(this.points_.length<6)return!1;var t=Date.now()-this.delay_,i=this.points_.length-3;if(this.points_[2+i]<t)return!1;let s=i-3;for(;0<s&&this.points_[s+2]>t;)s-=3;var n=this.points_[2+i]-this.points_[s+2];if(n<1e3/60)return!1;var e=this.points_[i]-this.points_[s],i=this.points_[1+i]-this.points_[s+1];return this.angle_=Math.atan2(i,e),this.initialVelocity_=Math.sqrt(e*e+i*i)/n,this.initialVelocity_>this.minVelocity_}getDistance(){return(this.minVelocity_-this.initialVelocity_)/this.decay_}getAngle(){return this.angle_}}export default Kinetic;