import{ENABLE_RASTER_REPROJECTION}from"../../reproj/common.js";import ViewHint from"../../ViewHint.js";import{containsExtent,intersects}from"../../extent.js";import{fromUserExtent}from"../../proj.js";import{getIntersection,isEmpty}from"../../extent.js";import CanvasLayerRenderer from"./Layer.js";import{compose as composeTransform,makeInverse,toString as transformToString}from"../../transform.js";class CanvasImageLayerRenderer extends CanvasLayerRenderer{constructor(e){super(e),this.image_=null}getImage(){return this.image_?this.image_.getImage():null}prepareFrame(t){var r=t.layerStatesArray[t.layerIndex],n=t.pixelRatio,o=t.viewState,i=o.resolution;const s=this.getLayer().getSource();var e=t.viewHints;let a=t.extent;if(void 0!==r.extent&&(a=getIntersection(a,fromUserExtent(r.extent,o.projection))),!e[ViewHint.ANIMATING]&&!e[ViewHint.INTERACTING]&&!isEmpty(a)){let e=o.projection;ENABLE_RASTER_REPROJECTION||(t=s.getProjection())&&(e=t);r=s.getImage(a,i,n,e);r&&this.loadImage(r)&&(this.image_=r)}return!!this.image_}renderFrame(e,t){const r=this.image_;var n=r.getExtent(),o=r.getResolution(),i=r.getPixelRatio(),s=e.layerStatesArray[e.layerIndex],a=e.pixelRatio,m=e.viewState,h=m.center,l=m.resolution;const c=e.size;l=a*o/(l*i);let p=Math.round(c[0]*a),g=Math.round(c[1]*a);var x=m.rotation;if(x){const c=Math.round(Math.sqrt(p*p+g*g));p=g=c}composeTransform(this.pixelTransform,e.size[0]/2,e.size[1]/2,1/a,1/a,x,-p/2,-g/2),makeInverse(this.inversePixelTransform,this.pixelTransform),this.useContainer(t,this.pixelTransform,s.opacity);const d=this.context,f=d.canvas;f.width!=p||f.height!=g?(f.width=p,f.height=g):this.containerReused||d.clearRect(0,0,p,g);let u=!1;s.extent&&(x=fromUserExtent(s.extent,m.projection),(u=!containsExtent(x,e.extent)&&intersects(x,e.extent))&&this.clipUnrotated(d,e,x));t=r.getImage(),m=composeTransform(this.tempTransform_,p/2,g/2,l,l,0,i*(n[0]-h[0])/o,i*(h[1]-n[3])/o),this.renderedResolution=o*a/i,x=m[4],l=m[5],h=t.width*m[0],n=t.height*m[3];if(this.preRender(d,e),.5<=h&&.5<=n){o=s.opacity;let e;1!==o&&(e=this.context.globalAlpha,this.context.globalAlpha=o),this.context.drawImage(t,0,0,+t.width,+t.height,Math.round(x),Math.round(l),Math.round(h),Math.round(n)),1!==o&&(this.context.globalAlpha=e)}this.postRender(d,e),u&&d.restore();a=transformToString(this.pixelTransform);return a!==f.style.transform&&(f.style.transform=a),this.container}}export default CanvasImageLayerRenderer;