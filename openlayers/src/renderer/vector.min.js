import{getUid}from"../util.js";import ImageState from"../ImageState.js";import GeometryType from"../geom/GeometryType.js";import BuilderType from"../render/canvas/BuilderType.js";const SIMPLIFY_TOLERANCE=.5,GEOMETRY_RENDERERS={Point:renderPointGeometry,LineString:renderLineStringGeometry,Polygon:renderPolygonGeometry,MultiPoint:renderMultiPointGeometry,MultiLineString:renderMultiLineStringGeometry,MultiPolygon:renderMultiPolygonGeometry,GeometryCollection:renderGeometryCollectionGeometry,Circle:renderCircleGeometry};function defaultOrder(e,t){return parseInt(getUid(e),10)-parseInt(getUid(t),10)}function getSquaredTolerance(e,t){e=getTolerance(e,t);return e*e}function getTolerance(e,t){return SIMPLIFY_TOLERANCE*e/t}function renderCircleGeometry(e,t,r,n){var i=r.getFill(),l=r.getStroke();if(i||l){const o=e.getBuilder(r.getZIndex(),BuilderType.CIRCLE);o.setFillStrokeStyle(i,l),o.drawCircle(t,n)}i=r.getText();if(i){const d=e.getBuilder(r.getZIndex(),BuilderType.TEXT);d.setTextStyle(i,e.addDeclutter(!1)),d.drawText(t,n)}}function renderFeature(e,t,r,n,i){let l=!1;const o=r.getImage();if(o){let e=o.getImageState();e==ImageState.LOADED||e==ImageState.ERROR?o.unlistenImageChange(i):(e==ImageState.IDLE&&o.load(),e=o.getImageState(),o.listenImageChange(i),l=!0)}return renderFeatureInternal(e,t,r,n),l}function renderFeatureInternal(e,t,r,n){const i=r.getGeometryFunction()(t);if(i){const l=i.getSimplifiedGeometry(n);if(r.getRenderer())renderGeometry(e,l,r,t);else{const o=GEOMETRY_RENDERERS[l.getType()];o(e,l,r,t)}}}function renderGeometry(r,e,n,i){if(e.getType()==GeometryType.GEOMETRY_COLLECTION){var l=e.getGeometries();for(let e=0,t=l.length;e<t;++e)renderGeometry(r,l[e],n,i)}else{const t=r.getBuilder(n.getZIndex(),BuilderType.DEFAULT);t.drawCustom(e,i,n.getRenderer())}}function renderGeometryCollectionGeometry(e,t,r,n){const i=t.getGeometriesArray();let l,o;for(l=0,o=i.length;l<o;++l){const d=GEOMETRY_RENDERERS[i[l].getType()];d(e,i[l],r,n)}}function renderLineStringGeometry(e,t,r,n){var i=r.getStroke();if(i){const l=e.getBuilder(r.getZIndex(),BuilderType.LINE_STRING);l.setFillStrokeStyle(null,i),l.drawLineString(t,n)}i=r.getText();if(i){const o=e.getBuilder(r.getZIndex(),BuilderType.TEXT);o.setTextStyle(i,e.addDeclutter(!1)),o.drawText(t,n)}}function renderMultiLineStringGeometry(e,t,r,n){var i=r.getStroke();if(i){const l=e.getBuilder(r.getZIndex(),BuilderType.LINE_STRING);l.setFillStrokeStyle(null,i),l.drawMultiLineString(t,n)}i=r.getText();if(i){const o=e.getBuilder(r.getZIndex(),BuilderType.TEXT);o.setTextStyle(i,e.addDeclutter(!1)),o.drawText(t,n)}}function renderMultiPolygonGeometry(e,t,r,n){var i=r.getFill(),l=r.getStroke();if(l||i){const o=e.getBuilder(r.getZIndex(),BuilderType.POLYGON);o.setFillStrokeStyle(i,l),o.drawMultiPolygon(t,n)}i=r.getText();if(i){const d=e.getBuilder(r.getZIndex(),BuilderType.TEXT);d.setTextStyle(i,e.addDeclutter(!1)),d.drawText(t,n)}}function renderPointGeometry(e,t,r,n){const i=r.getImage();if(i){if(i.getImageState()!=ImageState.LOADED)return;const o=e.getBuilder(r.getZIndex(),BuilderType.IMAGE);o.setImageStyle(i,e.addDeclutter(!1)),o.drawPoint(t,n)}var l=r.getText();if(l){const d=e.getBuilder(r.getZIndex(),BuilderType.TEXT);d.setTextStyle(l,e.addDeclutter(!!i)),d.drawText(t,n)}}function renderMultiPointGeometry(e,t,r,n){const i=r.getImage();if(i){if(i.getImageState()!=ImageState.LOADED)return;const o=e.getBuilder(r.getZIndex(),BuilderType.IMAGE);o.setImageStyle(i,e.addDeclutter(!1)),o.drawMultiPoint(t,n)}var l=r.getText();if(l){const d=e.getBuilder(r.getZIndex(),BuilderType.TEXT);d.setTextStyle(l,e.addDeclutter(!!i)),d.drawText(t,n)}}function renderPolygonGeometry(e,t,r,n){var i=r.getFill(),l=r.getStroke();if(i||l){const o=e.getBuilder(r.getZIndex(),BuilderType.POLYGON);o.setFillStrokeStyle(i,l),o.drawPolygon(t,n)}i=r.getText();if(i){const d=e.getBuilder(r.getZIndex(),BuilderType.TEXT);d.setTextStyle(i,e.addDeclutter(!1)),d.drawText(t,n)}}export{defaultOrder,getSquaredTolerance,getTolerance,renderFeature};