import LayerRenderer from"../Layer.js";import WebGLHelper from"../../webgl/Helper.js";const WebGLWorkerMessageType={GENERATE_BUFFERS:"GENERATE_BUFFERS"};class WebGLLayerRenderer extends LayerRenderer{constructor(e,t){super(e);e=t||{};this.helper=new WebGLHelper({postProcesses:e.postProcesses,uniforms:e.uniforms})}disposeInternal(){super.disposeInternal()}getShaderCompileErrors(){return this.helper.getShaderCompileErrors()}}function writePointFeatureInstructions(e,t,r,o,n,s,i,a,T,u,I,N){return e[t++]=r,e[t++]=o,e[t++]=n,e[t++]=s,e[t++]=i,e[t++]=a,e[t++]=T,e[t++]=u,e[t++]=I?1:0,e[t++]=N[0],e[t++]=N[1],e[t++]=N[2],e[t++]=N[3],t}const tmpArray_=[],bufferPositions_={vertexPosition:0,indexPosition:0},POINT_INSTRUCTIONS_COUNT=13,POINT_VERTEX_STRIDE=12;function writePointVertex(e,t,r,o,n,s,i,a,T,u,I,N,c,d){e[t+0]=r,e[t+1]=o,e[t+2]=n,e[t+3]=s,e[t+4]=i,e[t+5]=a,e[t+6]=T,e[t+7]=u,e[t+8]=I,e[t+9]=N,e[t+10]=c,e[t+11]=d}function writeCustomAttrs(e,t,r){r.length&&e.set(r,t)}function writePointFeatureToBuffers(t,r,e,o,n,s){var s=s>POINT_INSTRUCTIONS_COUNT?s:POINT_INSTRUCTIONS_COUNT,i=t[r+0],a=t[r+1],T=t[r+2],u=t[r+3],I=t[r+4],N=t[r+5],c=t[r+6],d=t[r+7],P=t[r+8],f=t[r+9],_=t[r+10],l=t[r+11],O=t[r+12],C=POINT_VERTEX_STRIDE,E=C+s-POINT_INSTRUCTIONS_COUNT;const p=tmpArray_;p.length=s-POINT_INSTRUCTIONS_COUNT;for(let e=0;e<p.length;e++)p[e]=t[r+POINT_INSTRUCTIONS_COUNT+e];var s=n?n.vertexPosition:0,n=n?n.indexPosition:0,R=s/E;return writePointVertex(e,s,i,a,-c/2,-c/2,T,u,d,P,f,_,l,O),writeCustomAttrs(e,s+C,p),writePointVertex(e,s+=E,i,a,+c/2,-c/2,I,u,d,P,f,_,l,O),writeCustomAttrs(e,s+C,p),writePointVertex(e,s+=E,i,a,+c/2,+c/2,I,N,d,P,f,_,l,O),writeCustomAttrs(e,s+C,p),writePointVertex(e,s+=E,i,a,-c/2,+c/2,T,N,d,P,f,_,l,O),writeCustomAttrs(e,s+C,p),s+=E,o[n++]=R,o[n++]=1+R,o[n++]=3+R,o[n++]=1+R,o[n++]=2+R,o[n++]=3+R,bufferPositions_.vertexPosition=s,bufferPositions_.indexPosition=n,bufferPositions_}function getBlankImageData(){const e=document.createElement("canvas"),t=e.getContext("2d").createImageData(1,1);return t.data[0]=t.data[1]=t.data[2]=t.data[3]=255,t}function colorEncodeId(e,t){const r=t||[];t=256;return r[0]=Math.floor(e/t/t/t)/255,r[1]=Math.floor(e/t/t)%t/255,r[2]=Math.floor(e/t)%t/255,r[3]=e%t/255,r}function colorDecodeId(e){var t=0;return(t+=Math.round(256*e[0]*256*256*255))+Math.round(256*e[1]*256*255)+Math.round(256*e[2]*255)+Math.round(255*e[3])}export default WebGLLayerRenderer;export{WebGLWorkerMessageType,writePointFeatureInstructions,POINT_INSTRUCTIONS_COUNT,POINT_VERTEX_STRIDE,writePointFeatureToBuffers,getBlankImageData,colorEncodeId,colorDecodeId};