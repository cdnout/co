import MapBrowserEventType from"../MapBrowserEventType.js";import Interaction from"./Interaction.js";import{getValues}from"../obj.js";class PointerInteraction extends Interaction{constructor(e){e=e||{};super(e),e.handleDownEvent&&(this.handleDownEvent=e.handleDownEvent),e.handleDragEvent&&(this.handleDragEvent=e.handleDragEvent),e.handleMoveEvent&&(this.handleMoveEvent=e.handleMoveEvent),e.handleUpEvent&&(this.handleUpEvent=e.handleUpEvent),e.stopDown&&(this.stopDown=e.stopDown),this.handlingDownUpSequence=!1,this.trackedPointers_={},this.targetPointers=[]}handleDownEvent(e){return!1}handleDragEvent(e){}handleEvent(e){if(!e.pointerEvent)return!0;let t=!1;var n;return this.updateTrackedPointers_(e),this.handlingDownUpSequence?e.type==MapBrowserEventType.POINTERDRAG?this.handleDragEvent(e):e.type==MapBrowserEventType.POINTERUP&&(n=this.handleUpEvent(e),this.handlingDownUpSequence=n&&0<this.targetPointers.length):e.type==MapBrowserEventType.POINTERDOWN?((n=this.handleDownEvent(e))&&e.preventDefault(),this.handlingDownUpSequence=n,t=this.stopDown(n)):e.type==MapBrowserEventType.POINTERMOVE&&this.handleMoveEvent(e),!t}handleMoveEvent(e){}handleUpEvent(e){return!1}stopDown(e){return e}updateTrackedPointers_(e){if(isPointerDraggingEvent(e)){const n=e.pointerEvent;var t=n.pointerId.toString();e.type==MapBrowserEventType.POINTERUP?delete this.trackedPointers_[t]:(e.type==MapBrowserEventType.POINTERDOWN||t in this.trackedPointers_)&&(this.trackedPointers_[t]=n),this.targetPointers=getValues(this.trackedPointers_)}}}function centroid(t){var n=t.length;let r=0,o=0;for(let e=0;e<n;e++)r+=t[e].clientX,o+=t[e].clientY;return[r/n,o/n]}function isPointerDraggingEvent(e){e=e.type;return e===MapBrowserEventType.POINTERDOWN||e===MapBrowserEventType.POINTERDRAG||e===MapBrowserEventType.POINTERUP}export default PointerInteraction;export{centroid};