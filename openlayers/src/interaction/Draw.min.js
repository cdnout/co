import EventType from"../events/EventType.js";import Feature from"../Feature.js";import MapBrowserEventType from"../MapBrowserEventType.js";import MapBrowserPointerEvent from"../MapBrowserPointerEvent.js";import{getChangeEventType}from"../Object.js";import{squaredDistance as squaredCoordinateDistance}from"../coordinate.js";import Event from"../events/Event.js";import{noModifierKeys,always,shiftKeyOnly}from"../events/condition.js";import{boundingExtent,getBottomLeft,getBottomRight,getTopLeft,getTopRight}from"../extent.js";import{TRUE,FALSE}from"../functions.js";import Circle from"../geom/Circle.js";import GeometryType from"../geom/GeometryType.js";import LineString from"../geom/LineString.js";import MultiLineString from"../geom/MultiLineString.js";import MultiPoint from"../geom/MultiPoint.js";import MultiPolygon from"../geom/MultiPolygon.js";import Point from"../geom/Point.js";import Polygon,{fromCircle,makeRegular}from"../geom/Polygon.js";import PointerInteraction from"./Pointer.js";import InteractionProperty from"./Property.js";import VectorLayer from"../layer/Vector.js";import VectorSource from"../source/Vector.js";import{createEditingStyle}from"../style/Style.js";const Mode={POINT:"Point",LINE_STRING:"LineString",POLYGON:"Polygon",CIRCLE:"Circle"},DrawEventType={DRAWSTART:"drawstart",DRAWEND:"drawend"};class DrawEvent extends Event{constructor(e,t){super(e),this.feature=t}}class Draw extends PointerInteraction{constructor(e){const t=e;t.stopDown||(t.stopDown=FALSE),super(t),this.shouldHandle_=!1,this.downPx_=null,this.downTimeout_,this.lastDragTime_,this.freehand_=!1,this.source_=e.source||null,this.features_=e.features||null,this.snapTolerance_=e.snapTolerance||12,this.type_=e.type,this.mode_=getMode(this.type_),this.stopClick_=!!e.stopClick,this.minPoints_=e.minPoints||(this.mode_===Mode.POLYGON?3:2),this.maxPoints_=e.maxPoints||1/0,this.finishCondition_=e.finishCondition||TRUE;let i=e.geometryFunction;if(!i)if(this.type_===GeometryType.CIRCLE)i=function(e,t){const i=t||new Circle([NaN,NaN]);t=squaredCoordinateDistance(e[0],e[1]);return i.setCenterAndRadius(e[0],Math.sqrt(t)),i};else{let s;const o=this.mode_;o===Mode.POINT?s=Point:o===Mode.LINE_STRING?s=LineString:o===Mode.POLYGON&&(s=Polygon),i=function(e,t){let i=t;return i?o===Mode.POLYGON?e[0].length?i.setCoordinates([e[0].concat([e[0][0]])]):i.setCoordinates([]):i.setCoordinates(e):i=new s(e),i}}this.geometryFunction_=i,this.dragVertexDelay_=void 0!==e.dragVertexDelay?e.dragVertexDelay:500,this.finishCoordinate_=null,this.sketchFeature_=null,this.sketchPoint_=null,this.sketchCoords_=null,this.sketchLine_=null,this.sketchLineCoords_=null,this.squaredClickTolerance_=e.clickTolerance?e.clickTolerance*e.clickTolerance:36,this.overlay_=new VectorLayer({source:new VectorSource({useSpatialIndex:!1,wrapX:e.wrapX||!1}),style:e.style||getDefaultStyleFunction(),updateWhileInteracting:!0}),this.geometryName_=e.geometryName,this.condition_=e.condition||noModifierKeys,this.freehandCondition_,e.freehand?this.freehandCondition_=always:this.freehandCondition_=e.freehandCondition||shiftKeyOnly,this.addEventListener(getChangeEventType(InteractionProperty.ACTIVE),this.updateState_)}setMap(e){super.setMap(e),this.updateState_()}getOverlay(){return this.overlay_}handleEvent(e){e.originalEvent.type===EventType.CONTEXTMENU&&e.preventDefault(),this.freehand_=this.mode_!==Mode.POINT&&this.freehandCondition_(e);let t=e.type===MapBrowserEventType.POINTERMOVE,i=!0;return!this.freehand_&&this.lastDragTime_&&e.type===MapBrowserEventType.POINTERDRAG&&(Date.now()-this.lastDragTime_>=this.dragVertexDelay_?(this.downPx_=e.pixel,this.shouldHandle_=!this.freehand_,t=!0):this.lastDragTime_=void 0,this.shouldHandle_&&void 0!==this.downTimeout_&&(clearTimeout(this.downTimeout_),this.downTimeout_=void 0)),this.freehand_&&e.type===MapBrowserEventType.POINTERDRAG&&null!==this.sketchFeature_?(this.addToDrawing_(e),i=!1):this.freehand_&&e.type===MapBrowserEventType.POINTERDOWN?i=!1:t?(i=e.type===MapBrowserEventType.POINTERMOVE)&&this.freehand_?i=this.handlePointerMove_(e):("mouse"==e.pointerEvent.pointerType||e.type===MapBrowserEventType.POINTERDRAG&&void 0===this.downTimeout_)&&this.handlePointerMove_(e):e.type===MapBrowserEventType.DBLCLICK&&(i=!1),super.handleEvent(e)&&i}handleDownEvent(e){return this.shouldHandle_=!this.freehand_,this.freehand_?(this.downPx_=e.pixel,this.finishCoordinate_||this.startDrawing_(e),!0):this.condition_(e)?(this.lastDragTime_=Date.now(),this.downTimeout_=setTimeout(function(){this.handlePointerMove_(new MapBrowserPointerEvent(MapBrowserEventType.POINTERMOVE,e.map,e.pointerEvent,!1,e.frameState))}.bind(this),this.dragVertexDelay_),this.downPx_=e.pixel,!0):(this.lastDragTime_=void 0,!1)}handleUpEvent(e){let t=!0;this.downTimeout_&&(clearTimeout(this.downTimeout_),this.downTimeout_=void 0),this.handlePointerMove_(e);var i=this.mode_===Mode.CIRCLE;return this.shouldHandle_?(this.finishCoordinate_?this.freehand_||i?this.finishDrawing():this.atFinish_(e)?this.finishCondition_(e)&&this.finishDrawing():this.addToDrawing_(e):(this.startDrawing_(e),this.mode_===Mode.POINT&&this.finishDrawing()),t=!1):this.freehand_&&(this.finishCoordinate_=null,this.abortDrawing_()),!t&&this.stopClick_&&e.stopPropagation(),t}handlePointerMove_(e){if(this.downPx_&&(!this.freehand_&&this.shouldHandle_||this.freehand_&&!this.shouldHandle_)){var t=this.downPx_,i=e.pixel,s=t[0]-i[0],t=t[1]-i[1],i=s*s+t*t;if(this.shouldHandle_=this.freehand_?i>this.squaredClickTolerance_:i<=this.squaredClickTolerance_,!this.shouldHandle_)return!0}return this.finishCoordinate_?this.modifyDrawing_(e):this.createOrUpdateSketchPoint_(e),!0}atFinish_(s){let o=!1;if(this.sketchFeature_){let e=!1,i=[this.finishCoordinate_];var t;if(this.mode_===Mode.LINE_STRING?e=this.sketchCoords_.length>this.minPoints_:this.mode_===Mode.POLYGON&&(t=this.sketchCoords_,e=t[0].length>this.minPoints_,i=[t[0][0],t[0][t[0].length-2]]),e){const d=s.map;for(let e=0,t=i.length;e<t;e++){var n=i[e],r=d.getPixelFromCoordinate(n),h=s.pixel,a=h[0]-r[0],h=h[1]-r[1],r=this.freehand_?1:this.snapTolerance_;if(o=Math.sqrt(a*a+h*h)<=r){this.finishCoordinate_=n;break}}}}return o}createOrUpdateSketchPoint_(e){e=e.coordinate.slice();if(this.sketchPoint_){const t=this.sketchPoint_.getGeometry();t.setCoordinates(e)}else this.sketchPoint_=new Feature(new Point(e)),this.updateSketchFeatures_()}startDrawing_(e){const t=e.coordinate;this.finishCoordinate_=t,this.mode_===Mode.POINT?this.sketchCoords_=t.slice():this.mode_===Mode.POLYGON?(this.sketchCoords_=[[t.slice(),t.slice()]],this.sketchLineCoords_=this.sketchCoords_[0]):this.sketchCoords_=[t.slice(),t.slice()],this.sketchLineCoords_&&(this.sketchLine_=new Feature(new LineString(this.sketchLineCoords_)));e=this.geometryFunction_(this.sketchCoords_);this.sketchFeature_=new Feature,this.geometryName_&&this.sketchFeature_.setGeometryName(this.geometryName_),this.sketchFeature_.setGeometry(e),this.updateSketchFeatures_(),this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART,this.sketchFeature_))}modifyDrawing_(e){let t=e.coordinate;const i=this.sketchFeature_.getGeometry();let s,o;if(this.mode_===Mode.POINT?o=this.sketchCoords_:this.mode_===Mode.POLYGON?(s=this.sketchCoords_[0],o=s[s.length-1],this.atFinish_(e)&&(t=this.finishCoordinate_.slice())):(s=this.sketchCoords_,o=s[s.length-1]),o[0]=t[0],o[1]=t[1],this.geometryFunction_(this.sketchCoords_,i),this.sketchPoint_){const r=this.sketchPoint_.getGeometry();r.setCoordinates(t)}let n;if(i.getType()==GeometryType.POLYGON&&this.mode_!==Mode.POLYGON){this.sketchLine_||(this.sketchLine_=new Feature);const h=i.getLinearRing(0);(n=this.sketchLine_.getGeometry())?(n.setFlatCoordinates(h.getLayout(),h.getFlatCoordinates()),n.changed()):(n=new LineString(h.getFlatCoordinates(),h.getLayout()),this.sketchLine_.setGeometry(n))}else this.sketchLineCoords_&&(n=this.sketchLine_.getGeometry()).setCoordinates(this.sketchLineCoords_);this.updateSketchFeatures_()}addToDrawing_(e){const t=e.coordinate;e=this.sketchFeature_.getGeometry();let i,s;this.mode_===Mode.LINE_STRING?(this.finishCoordinate_=t.slice(),(s=this.sketchCoords_).length>=this.maxPoints_&&(this.freehand_?s.pop():i=!0),s.push(t.slice()),this.geometryFunction_(s,e)):this.mode_===Mode.POLYGON&&((s=this.sketchCoords_[0]).length>=this.maxPoints_&&(this.freehand_?s.pop():i=!0),s.push(t.slice()),i&&(this.finishCoordinate_=s[0]),this.geometryFunction_(this.sketchCoords_,e)),this.updateSketchFeatures_(),i&&this.finishDrawing()}removeLastPoint(){if(this.sketchFeature_){var i=this.sketchFeature_.getGeometry();let e,t;this.mode_===Mode.LINE_STRING?((e=this.sketchCoords_).splice(-2,1),this.geometryFunction_(e,i),2<=e.length&&(this.finishCoordinate_=e[e.length-2].slice())):this.mode_===Mode.POLYGON&&((e=this.sketchCoords_[0]).splice(-2,1),(t=this.sketchLine_.getGeometry()).setCoordinates(e),this.geometryFunction_(this.sketchCoords_,i)),0===e.length&&(this.finishCoordinate_=null),this.updateSketchFeatures_()}}finishDrawing(){const t=this.abortDrawing_();if(t){let e=this.sketchCoords_;const i=t.getGeometry();this.mode_===Mode.LINE_STRING?(e.pop(),this.geometryFunction_(e,i)):this.mode_===Mode.POLYGON&&(e[0].pop(),this.geometryFunction_(e,i),e=i.getCoordinates()),this.type_===GeometryType.MULTI_POINT?t.setGeometry(new MultiPoint([e])):this.type_===GeometryType.MULTI_LINE_STRING?t.setGeometry(new MultiLineString([e])):this.type_===GeometryType.MULTI_POLYGON&&t.setGeometry(new MultiPolygon([e])),this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND,t)),this.features_&&this.features_.push(t),this.source_&&this.source_.addFeature(t)}}abortDrawing_(){this.finishCoordinate_=null;var e=this.sketchFeature_;return e&&(this.sketchFeature_=null,this.sketchPoint_=null,this.sketchLine_=null,this.overlay_.getSource().clear(!0)),e}extend(e){const t=e.getGeometry(),i=(this.sketchFeature_=e,this.sketchCoords_=t.getCoordinates(),this.sketchCoords_[this.sketchCoords_.length-1]);this.finishCoordinate_=i.slice(),this.sketchCoords_.push(i.slice()),this.updateSketchFeatures_(),this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART,this.sketchFeature_))}updateSketchFeatures_(){const e=[],t=(this.sketchFeature_&&e.push(this.sketchFeature_),this.sketchLine_&&e.push(this.sketchLine_),this.sketchPoint_&&e.push(this.sketchPoint_),this.overlay_.getSource());t.clear(!0),t.addFeatures(e)}updateState_(){var e=this.getMap(),t=this.getActive();e&&t||this.abortDrawing_(),this.overlay_.setMap(t?e:null)}}function getDefaultStyleFunction(){const i=createEditingStyle();return function(e,t){return i[e.getGeometry().getType()]}}function createRegularPolygon(r,h){return function(e,t){var i,s=e[0],e=e[1],o=Math.sqrt(squaredCoordinateDistance(s,e)),t=t||fromCircle(new Circle(s),r);let n=h;return h||(i=e[0]-s[0],e=e[1]-s[1],n=Math.atan(e/i)-(i<0?Math.PI:0)),makeRegular(t,s,o,n),t}}function createBox(){return function(e,t){e=boundingExtent(e),e=[[getBottomLeft(e),getBottomRight(e),getTopRight(e),getTopLeft(e),getBottomLeft(e)]];let i=t;return i?i.setCoordinates(e):i=new Polygon(e),i}}function getMode(e){let t;return e===GeometryType.POINT||e===GeometryType.MULTI_POINT?t=Mode.POINT:e===GeometryType.LINE_STRING||e===GeometryType.MULTI_LINE_STRING?t=Mode.LINE_STRING:e===GeometryType.POLYGON||e===GeometryType.MULTI_POLYGON?t=Mode.POLYGON:e===GeometryType.CIRCLE&&(t=Mode.CIRCLE),t}export default Draw;export{createRegularPolygon,createBox};