import Feature from"../Feature.js";import MapBrowserEventType from"../MapBrowserEventType.js";import{squaredDistanceToSegment,closestOnSegment,distance as coordinateDistance,squaredDistance as squaredCoordinateDistance}from"../coordinate.js";import Event from"../events/Event.js";import{boundingExtent,getArea}from"../extent.js";import GeometryType from"../geom/GeometryType.js";import Point from"../geom/Point.js";import{fromExtent as polygonFromExtent}from"../geom/Polygon.js";import PointerInteraction from"./Pointer.js";import VectorLayer from"../layer/Vector.js";import VectorSource from"../source/Vector.js";import{createEditingStyle}from"../style/Style.js";const ExtentEventType={EXTENTCHANGED:"extentchanged"};class ExtentEvent extends Event{constructor(e){super(ExtentEventType.EXTENTCHANGED),this.extent=e}}class Extent extends PointerInteraction{constructor(e){var t=e||{};super(t),this.extent_=null,this.pointerHandler_=null,this.pixelTolerance_=void 0!==t.pixelTolerance?t.pixelTolerance:10,this.snappedToVertex_=!1,this.extentFeature_=null,this.vertexFeature_=null,this.extentOverlay_=new VectorLayer({source:new VectorSource({useSpatialIndex:!1,wrapX:!!(e=e||{}).wrapX}),style:e.boxStyle||getDefaultExtentStyleFunction(),updateWhileAnimating:!0,updateWhileInteracting:!0}),this.vertexOverlay_=new VectorLayer({source:new VectorSource({useSpatialIndex:!1,wrapX:!!e.wrapX}),style:e.pointerStyle||getDefaultPointerStyleFunction(),updateWhileAnimating:!0,updateWhileInteracting:!0}),e.extent&&this.setExtent(e.extent)}snapToVertex_(t,n){const r=n.getCoordinateFromPixel(t);var o=this.getExtent();if(o){const a=getSegments(o);a.sort(function(e,t){return squaredDistanceToSegment(r,e)-squaredDistanceToSegment(r,t)});o=a[0];let e=closestOnSegment(r,o);var i=n.getPixelFromCoordinate(e);if(coordinateDistance(t,i)<=this.pixelTolerance_)return t=n.getPixelFromCoordinate(o[0]),n=n.getPixelFromCoordinate(o[1]),t=squaredCoordinateDistance(i,t),i=squaredCoordinateDistance(i,n),n=Math.sqrt(Math.min(t,i)),this.snappedToVertex_=n<=this.pixelTolerance_,e=this.snappedToVertex_?i<t?o[1]:o[0]:e}return null}handlePointerMove_(e){var t=e.pixel;const n=e.map;let r=this.snapToVertex_(t,n);r=r||n.getCoordinateFromPixel(t),this.createOrUpdatePointerFeature_(r)}createOrUpdateExtentFeature_(e){let t=this.extentFeature_;return t?e?t.setGeometry(polygonFromExtent(e)):t.setGeometry(void 0):(t=new Feature(e?polygonFromExtent(e):{}),this.extentFeature_=t,this.extentOverlay_.getSource().addFeature(t)),t}createOrUpdatePointerFeature_(e){let t=this.vertexFeature_;if(t){const n=t.getGeometry();n.setCoordinates(e)}else t=new Feature(new Point(e)),this.vertexFeature_=t,this.vertexOverlay_.getSource().addFeature(t);return t}handleEvent(e){return!e.pointerEvent||(e.type!=MapBrowserEventType.POINTERMOVE||this.handlingDownUpSequence||this.handlePointerMove_(e),super.handleEvent(e),!1)}handleDownEvent(e){var t=e.pixel;const n=e.map,r=this.getExtent();let o=this.snapToVertex_(t,n);function i(e){let t=null,n=null;return e[0]==r[0]?t=r[2]:e[0]==r[2]&&(t=r[0]),e[1]==r[1]?n=r[3]:e[1]==r[3]&&(n=r[1]),null!==t&&null!==n?[t,n]:null}var a;return o&&r?(e=o[0]==r[0]||o[0]==r[2]?o[0]:null,a=o[1]==r[1]||o[1]==r[3]?o[1]:null,null!==e&&null!==a?this.pointerHandler_=getPointHandler(i(o)):null!==e?this.pointerHandler_=getEdgeHandler(i([e,r[1]]),i([e,r[3]])):null!==a&&(this.pointerHandler_=getEdgeHandler(i([r[0],a]),i([r[2],a])))):(o=n.getCoordinateFromPixel(t),this.setExtent([o[0],o[1],o[0],o[1]]),this.pointerHandler_=getPointHandler(o)),!0}handleDragEvent(e){return this.pointerHandler_&&(e=e.coordinate,this.setExtent(this.pointerHandler_(e)),this.createOrUpdatePointerFeature_(e)),!0}handleUpEvent(e){this.pointerHandler_=null;var t=this.getExtent();return t&&0!==getArea(t)||this.setExtent(null),!1}setMap(e){this.extentOverlay_.setMap(e),this.vertexOverlay_.setMap(e),super.setMap(e)}getExtent(){return this.extent_}setExtent(e){this.extent_=e||null,this.createOrUpdateExtentFeature_(e),this.dispatchEvent(new ExtentEvent(this.extent_))}}function getDefaultExtentStyleFunction(){const n=createEditingStyle();return function(e,t){return n[GeometryType.POLYGON]}}function getDefaultPointerStyleFunction(){const n=createEditingStyle();return function(e,t){return n[GeometryType.POINT]}}function getPointHandler(t){return function(e){return boundingExtent([t,e])}}function getEdgeHandler(t,n){return t[0]==n[0]?function(e){return boundingExtent([t,[e[0],n[1]]])}:t[1]==n[1]?function(e){return boundingExtent([t,[n[0],e[1]]])}:null}function getSegments(e){return[[[e[0],e[1]],[e[0],e[3]]],[[e[0],e[3]],[e[2],e[3]]],[[e[2],e[3]],[e[2],e[1]]],[[e[2],e[1]],[e[0],e[1]]]]}export default Extent;