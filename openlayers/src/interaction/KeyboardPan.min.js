import{rotate as rotateCoordinate}from"../coordinate.js";import EventType from"../events/EventType.js";import KeyCode from"../events/KeyCode.js";import{noModifierKeys,targetNotEditable}from"../events/condition.js";import Interaction,{pan}from"./Interaction.js";class KeyboardPan extends Interaction{constructor(e){super({handleEvent:handleEvent});e=e||{};this.defaultCondition_=function(e){return noModifierKeys(e)&&targetNotEditable(e)},this.condition_=void 0!==e.condition?e.condition:this.defaultCondition_,this.duration_=void 0!==e.duration?e.duration:100,this.pixelDelta_=void 0!==e.pixelDelta?e.pixelDelta:128}}function handleEvent(o){let i=!1;if(o.type==EventType.KEYDOWN){var n=o.originalEvent.keyCode;if(this.condition_(o)&&(n==KeyCode.DOWN||n==KeyCode.LEFT||n==KeyCode.RIGHT||n==KeyCode.UP)){const r=o.map,d=r.getView();var a=d.getResolution()*this.pixelDelta_;let e=0,t=0;n==KeyCode.DOWN?t=-a:n==KeyCode.LEFT?e=-a:n==KeyCode.RIGHT?e=a:t=a;n=[e,t];rotateCoordinate(n,d.getRotation()),pan(d,n,this.duration_),o.preventDefault(),i=!0}}return!i}export default KeyboardPan;