import{TRUE}from"../functions.js";import{listen,unlistenByKey}from"../events.js";import Event from"../events/Event.js";import EventType from"../events/EventType.js";import Interaction from"./Interaction.js";import{get as getProjection}from"../proj.js";const DragAndDropEventType={ADD_FEATURES:"addfeatures"};class DragAndDropEvent extends Event{constructor(t,e,s,r){super(t),this.features=s,this.file=e,this.projection=r}}class DragAndDrop extends Interaction{constructor(t){t=t||{};super({handleEvent:TRUE}),this.formatConstructors_=t.formatConstructors||[],this.projection_=t.projection?getProjection(t.projection):null,this.dropListenKeys_=null,this.source_=t.source||null,this.target=t.target||null}handleResult_(t,e){var s=e.target.result;const r=this.getMap();let n=this.projection_;if(!n){const p=r.getView();n=p.getProjection()}const i=this.formatConstructors_;let o=[];for(let t=0,e=i.length;t<e;++t){var a=new i[t];if((o=this.tryReadFeatures_(a,s,{featureProjection:n}))&&0<o.length)break}this.source_&&(this.source_.clear(),this.source_.addFeatures(o)),this.dispatchEvent(new DragAndDropEvent(DragAndDropEventType.ADD_FEATURES,t,o,n))}registerListeners_(){const t=this.getMap();var e;t&&(e=this.target||t.getViewport(),this.dropListenKeys_=[listen(e,EventType.DROP,handleDrop,this),listen(e,EventType.DRAGENTER,handleStop,this),listen(e,EventType.DRAGOVER,handleStop,this),listen(e,EventType.DROP,handleStop,this)])}setActive(t){!this.getActive()&&t&&this.registerListeners_(),this.getActive()&&!t&&this.unregisterListeners_(),super.setActive(t)}setMap(t){this.unregisterListeners_(),super.setMap(t),this.getActive()&&this.registerListeners_()}tryReadFeatures_(t,e,s){try{return t.readFeatures(e,s)}catch(t){return null}}unregisterListeners_(){this.dropListenKeys_&&(this.dropListenKeys_.forEach(unlistenByKey),this.dropListenKeys_=null)}}function handleDrop(t){const s=t.dataTransfer.files;for(let t=0,e=s.length;t<e;++t){var r=s.item(t);const n=new FileReader;n.addEventListener(EventType.LOAD,this.handleResult_.bind(this,r)),n.readAsText(r)}}function handleStop(t){t.stopPropagation(),t.preventDefault(),t.dataTransfer.dropEffect="copy"}export default DragAndDrop;