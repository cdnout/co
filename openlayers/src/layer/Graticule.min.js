import VectorLayer from"./Vector.js";import{assign}from"../obj.js";import{degreesToStringHDMS}from"../coordinate.js";import Text from"../style/Text.js";import Fill from"../style/Fill.js";import Stroke from"../style/Stroke.js";import LineString from"../geom/LineString.js";import VectorSource from"../source/Vector.js";import{equivalent as equivalentProjection,get as getProjection,getTransform,transformExtent}from"../proj.js";import{getCenter,intersects,equals,getIntersection,isEmpty}from"../extent.js";import{clamp}from"../math.js";import Style from"../style/Style.js";import Feature from"../Feature.js";import{bbox}from"../loadingstrategy.js";import{meridian,parallel}from"../geom/flat/geodesic.js";import GeometryLayout from"../geom/GeometryLayout.js";import Point from"../geom/Point.js";import Collection from"../Collection.js";const DEFAULT_STROKE_STYLE=new Stroke({color:"rgba(0,0,0,0.2)"}),INTERVALS=[90,45,30,20,10,5,2,1,.5,.2,.1,.05,.01,.005,.002,.001];class Graticule extends VectorLayer{constructor(t){const e=t||{},i=assign({updateWhileAnimating:!0,updateWhileInteracting:!0,renderBuffer:0},e);delete i.maxLines,delete i.strokeStyle,delete i.targetSize,delete i.showLabels,delete i.lonLabelFormatter,delete i.latLabelFormatter,delete i.lonLabelPosition,delete i.latLabelPosition,delete i.lonLabelStyle,delete i.latLabelStyle,delete i.intervals,super(i),this.projection_=null,this.maxLat_=1/0,this.maxLon_=1/0,this.minLat_=-1/0,this.minLon_=-1/0,this.maxLatP_=1/0,this.maxLonP_=1/0,this.minLatP_=-1/0,this.minLonP_=-1/0,this.targetSize_=void 0!==e.targetSize?e.targetSize:100,this.maxLines_=void 0!==e.maxLines?e.maxLines:100,this.meridians_=[],this.parallels_=[],this.strokeStyle_=void 0!==e.strokeStyle?e.strokeStyle:DEFAULT_STROKE_STYLE,this.fromLonLatTransform_=void 0,this.toLonLatTransform_=void 0,this.projectionCenterLonLat_=null,this.meridiansLabels_=null,this.parallelsLabels_=null,e.showLabels&&(this.lonLabelFormatter_=null==e.lonLabelFormatter?degreesToStringHDMS.bind(this,"EW"):e.lonLabelFormatter,this.latLabelFormatter_=null==e.latLabelFormatter?degreesToStringHDMS.bind(this,"NS"):e.latLabelFormatter,this.lonLabelPosition_=null==e.lonLabelPosition?0:e.lonLabelPosition,this.latLabelPosition_=null==e.latLabelPosition?1:e.latLabelPosition,this.lonLabelStyleCache_={},this.lonLabelStyle_=function(t){t=t.get("graticule_label");return this.lonLabelStyleCache_[t]||(this.lonLabelStyleCache_[t]=new Style({text:void 0!==e.lonLabelStyle?e.lonLabelStyle:new Text({text:t,font:"12px Calibri,sans-serif",textBaseline:"bottom",fill:new Fill({color:"rgba(0,0,0,1)"}),stroke:new Stroke({color:"rgba(255,255,255,1)",width:3})})})),this.lonLabelStyleCache_[t]}.bind(this),this.latLabelStyleCache_={},this.latLabelStyle_=function(t){t=t.get("graticule_label");return this.latLabelStyleCache_[t]||(this.latLabelStyleCache_[t]=new Style({text:void 0!==e.latLabelStyle?e.latLabelStyle:new Text({text:t,font:"12px Calibri,sans-serif",textAlign:"right",fill:new Fill({color:"rgba(0,0,0,1)"}),stroke:new Stroke({color:"rgba(255,255,255,1)",width:3})})})),this.latLabelStyleCache_[t]}.bind(this),this.meridiansLabels_=[],this.parallelsLabels_=[]),this.intervals_=void 0!==e.intervals?e.intervals:INTERVALS,this.setSource(new VectorSource({loader:this.loaderFunction.bind(this),strategy:bbox,features:new Collection,overlaps:!1,useSpatialIndex:!1,wrapX:e.wrapX})),this.featurePool_=[],this.lineStyle_=new Style({stroke:this.strokeStyle_}),this.renderedExtent_=null,this.setRenderOrder(null),this.tmpExtent_=null}loaderFunction(t,r,o){const n=this.getSource();var h=this.getExtent()||[-1/0,-1/0,1/0,1/0],h=getIntersection(h,t,this.tmpExtent_);if(setTimeout(function(){n.removeLoadedExtent(t)},0),!(this.renderedExtent_&&equals(this.renderedExtent_,h)||(this.renderedExtent_=h,isEmpty(h)))){var m=getCenter(h),_=r*r/4;(!this.projection_||!equivalentProjection(this.projection_,o))&&this.updateProjectionInfo_(o),this.createGraticule_(h,m,r,_);let t=this.meridians_.length+this.parallels_.length;this.meridiansLabels_&&(t+=this.meridiansLabels_.length),this.parallelsLabels_&&(t+=this.parallelsLabels_.length);let e;for(;t>this.featurePool_.length;)e=new Feature,this.featurePool_.push(e);const L=n.getFeaturesCollection();L.clear();let i=0,a,l;for(a=0,l=this.meridians_.length;a<l;++a)(e=this.featurePool_[i++]).setGeometry(this.meridians_[a]),e.setStyle(this.lineStyle_),L.push(e);for(a=0,l=this.parallels_.length;a<l;++a)(e=this.featurePool_[i++]).setGeometry(this.parallels_[a]),e.setStyle(this.lineStyle_),L.push(e);let s;if(this.meridiansLabels_)for(a=0,l=this.meridiansLabels_.length;a<l;++a)s=this.meridiansLabels_[a],(e=this.featurePool_[i++]).setGeometry(s.geom),e.setStyle(this.lonLabelStyle_),e.set("graticule_label",s.text),L.push(e);if(this.parallelsLabels_)for(a=0,l=this.parallelsLabels_.length;a<l;++a)s=this.parallelsLabels_[a],(e=this.featurePool_[i++]).setGeometry(s.geom),e.setStyle(this.latLabelStyle_),e.set("graticule_label",s.text),L.push(e)}}addMeridian_(t,e,i,a,l,s){const r=this.getMeridian_(t,e,i,a,s);return intersects(r.getExtent(),l)&&(this.meridiansLabels_&&(e=this.getMeridianPoint_(r,l,s),this.meridiansLabels_[s]={geom:e,text:this.lonLabelFormatter_(t)}),this.meridians_[s++]=r),s}addParallel_(t,e,i,a,l,s){const r=this.getParallel_(t,e,i,a,s);return intersects(r.getExtent(),l)&&(this.parallelsLabels_&&(e=this.getParallelPoint_(r,l,s),this.parallelsLabels_[s]={geom:e,text:this.latLabelFormatter_(t)}),this.parallels_[s++]=r),s}createGraticule_(t,e,i,a){var l=this.getInterval_(i);if(-1==l)return this.meridians_.length=this.parallels_.length=0,this.meridiansLabels_&&(this.meridiansLabels_.length=0),void(this.parallelsLabels_&&(this.parallelsLabels_.length=0));var i=this.toLonLatTransform_(e),e=i[0],i=i[1],s=this.maxLines_;let r,o,n,h;var m=[Math.max(t[0],this.minLonP_),Math.max(t[1],this.minLatP_),Math.min(t[2],this.maxLonP_),Math.min(t[3],this.maxLatP_)],_=(m=transformExtent(m,this.projection_,"EPSG:4326"))[3],L=m[2],d=m[1],g=m[0],e=Math.floor(e/l)*l;for(h=clamp(e,this.minLon_,this.maxLon_),o=this.addMeridian_(h,d,_,a,t,0),r=0;h!=this.minLon_&&r++<s;)h=Math.max(h-l,this.minLon_),o=this.addMeridian_(h,d,_,a,t,o);for(h=clamp(e,this.minLon_,this.maxLon_),r=0;h!=this.maxLon_&&r++<s;)h=Math.min(h+l,this.maxLon_),o=this.addMeridian_(h,d,_,a,t,o);for(this.meridians_.length=o,this.meridiansLabels_&&(this.meridiansLabels_.length=o),i=Math.floor(i/l)*l,n=clamp(i,this.minLat_,this.maxLat_),o=this.addParallel_(n,g,L,a,t,0),r=0;n!=this.minLat_&&r++<s;)n=Math.max(n-l,this.minLat_),o=this.addParallel_(n,g,L,a,t,o);for(n=clamp(i,this.minLat_,this.maxLat_),r=0;n!=this.maxLat_&&r++<s;)n=Math.min(n+l,this.maxLat_),o=this.addParallel_(n,g,L,a,t,o);this.parallels_.length=o,this.parallelsLabels_&&(this.parallelsLabels_.length=o)}getInterval_(t){var i=this.projectionCenterLonLat_[0],a=this.projectionCenterLonLat_[1];let l=-1;var s=Math.pow(this.targetSize_*t,2);const r=[],o=[];for(let t=0,e=this.intervals_.length;t<e;++t){var n=this.intervals_[t]/2,n=(r[0]=i-n,r[1]=a-n,o[0]=i+n,o[1]=a+n,this.fromLonLatTransform_(r,r),this.fromLonLatTransform_(o,o),Math.pow(o[0]-r[0],2)+Math.pow(o[1]-r[1],2));if(n<=s)break;l=this.intervals_[t]}return l}getMeridian_(t,e,i,a,l){t=meridian(t,e,i,this.projection_,a);let s=this.meridians_[l];return s?(s.setFlatCoordinates(GeometryLayout.XY,t),s.changed()):s=this.meridians_[l]=new LineString(t,GeometryLayout.XY),s}getMeridianPoint_(t,e,i){var t=t.getFlatCoordinates(),a=Math.max(e[1],t[1]),l=Math.min(e[3],t[t.length-1]),e=clamp(e[1]+Math.abs(e[1]-e[3])*this.lonLabelPosition_,a,l),a=[t[0],e];let s;return i in this.meridiansLabels_?(s=this.meridiansLabels_[i].geom).setCoordinates(a):s=new Point(a),s}getMeridians(){return this.meridians_}getParallel_(t,e,i,a,l){t=parallel(t,e,i,this.projection_,a);let s=this.parallels_[l];return s?(s.setFlatCoordinates(GeometryLayout.XY,t),s.changed()):s=new LineString(t,GeometryLayout.XY),s}getParallelPoint_(t,e,i){var t=t.getFlatCoordinates(),a=Math.max(e[0],t[0]),l=Math.min(e[2],t[t.length-2]),e=[clamp(e[0]+Math.abs(e[0]-e[2])*this.latLabelPosition_,a,l),t[1]];let s;return i in this.parallelsLabels_?(s=this.parallelsLabels_[i].geom).setCoordinates(e):s=new Point(e),s}getParallels(){return this.parallels_}updateProjectionInfo_(t){var e=getProjection("EPSG:4326"),i=t.getWorldExtent(),a=transformExtent(i,e,t);this.maxLat_=i[3],this.maxLon_=i[2],this.minLat_=i[1],this.minLon_=i[0],this.maxLatP_=a[3],this.maxLonP_=a[2],this.minLatP_=a[1],this.minLonP_=a[0],this.fromLonLatTransform_=getTransform(e,t),this.toLonLatTransform_=getTransform(t,e),this.projectionCenterLonLat_=this.toLonLatTransform_(getCenter(t.getExtent())),this.projection_=t}}export default Graticule;