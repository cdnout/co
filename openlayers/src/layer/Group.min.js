import{getUid}from"../util.js";import Collection from"../Collection.js";import CollectionEventType from"../CollectionEventType.js";import{getChangeEventType}from"../Object.js";import ObjectEventType from"../ObjectEventType.js";import{assert}from"../asserts.js";import{listen,unlistenByKey}from"../events.js";import EventType from"../events/EventType.js";import{getIntersection}from"../extent.js";import BaseLayer from"./Base.js";import{assign,clear}from"../obj.js";import SourceState from"../source/State.js";const Property={LAYERS:"layers"};class LayerGroup extends BaseLayer{constructor(e){e=e||{};const t=assign({},e);delete t.layers;let s=e.layers;super(t),this.layersListenerKeys_=[],this.listenerKeys_={},this.addEventListener(getChangeEventType(Property.LAYERS),this.handleLayersChanged_),s?Array.isArray(s)?s=new Collection(s.slice(),{unique:!0}):assert("function"==typeof s.getArray,43):s=new Collection(void 0,{unique:!0}),this.setLayers(s)}handleLayerChange_(){this.changed()}handleLayersChanged_(){this.layersListenerKeys_.forEach(unlistenByKey),this.layersListenerKeys_.length=0;const e=this.getLayers();this.layersListenerKeys_.push(listen(e,CollectionEventType.ADD,this.handleLayersAdd_,this),listen(e,CollectionEventType.REMOVE,this.handleLayersRemove_,this));for(const t in this.listenerKeys_)this.listenerKeys_[t].forEach(unlistenByKey);clear(this.listenerKeys_);var s=e.getArray();for(let e=0,t=s.length;e<t;e++){var n=s[e];this.listenerKeys_[getUid(n)]=[listen(n,ObjectEventType.PROPERTYCHANGE,this.handleLayerChange_,this),listen(n,EventType.CHANGE,this.handleLayerChange_,this)]}this.changed()}handleLayersAdd_(e){e=e.element;this.listenerKeys_[getUid(e)]=[listen(e,ObjectEventType.PROPERTYCHANGE,this.handleLayerChange_,this),listen(e,EventType.CHANGE,this.handleLayerChange_,this)],this.changed()}handleLayersRemove_(e){e=e.element,e=getUid(e);this.listenerKeys_[e].forEach(unlistenByKey),delete this.listenerKeys_[e],this.changed()}getLayers(){return this.get(Property.LAYERS)}setLayers(e){this.set(Property.LAYERS,e)}getLayersArray(e){const t=void 0!==e?e:[];return this.getLayers().forEach(function(e){e.getLayersArray(t)}),t}getLayerStatesArray(s){const n=void 0!==s?s:[];var s=n.length,r=(this.getLayers().forEach(function(e){e.getLayerStatesArray(n)}),this.getLayerState());for(let e=s,t=n.length;e<t;e++){const i=n[e];i.opacity*=r.opacity,i.visible=i.visible&&r.visible,i.maxResolution=Math.min(i.maxResolution,r.maxResolution),i.minResolution=Math.max(i.minResolution,r.minResolution),i.minZoom=Math.max(i.minZoom,r.minZoom),i.maxZoom=Math.min(i.maxZoom,r.maxZoom),void 0!==r.extent&&(void 0!==i.extent?i.extent=getIntersection(i.extent,r.extent):i.extent=r.extent)}return n}getSourceState(){return SourceState.READY}}export default LayerGroup;