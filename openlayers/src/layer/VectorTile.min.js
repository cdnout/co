import{assert}from"../asserts.js";import TileProperty from"./TileProperty.js";import BaseVectorLayer from"./BaseVector.js";import VectorTileRenderType from"./VectorTileRenderType.js";import CanvasVectorTileLayerRenderer from"../renderer/canvas/VectorTileLayer.js";import{assign}from"../obj.js";class VectorTileLayer extends BaseVectorLayer{constructor(e){e=e||{};const r=assign({},e);delete r.preload,delete r.useInterimTilesOnError,super(r);var t=e.renderMode||VectorTileRenderType.HYBRID;assert(null==t||t==VectorTileRenderType.IMAGE||t==VectorTileRenderType.HYBRID,28),this.renderMode_=t,this.setPreload(e.preload||0),this.setUseInterimTilesOnError(void 0===e.useInterimTilesOnError||e.useInterimTilesOnError)}createRenderer(){return new CanvasVectorTileLayerRenderer(this)}getRenderMode(){return this.renderMode_}getPreload(){return this.get(TileProperty.PRELOAD)}getUseInterimTilesOnError(){return this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)}setPreload(e){this.set(TileProperty.PRELOAD,e)}setUseInterimTilesOnError(e){this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR,e)}}export default VectorTileLayer;