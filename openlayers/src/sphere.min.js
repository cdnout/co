import{toRadians,toDegrees}from"./math.js";import GeometryType from"./geom/GeometryType.js";const DEFAULT_RADIUS=6371008.8;function getDistance(e,t,a){var a=a||DEFAULT_RADIUS,r=toRadians(e[1]),n=toRadians(t[1]),o=(n-r)/2,t=toRadians(t[0]-e[0])/2,e=Math.sin(o)*Math.sin(o)+Math.sin(t)*Math.sin(t)*Math.cos(r)*Math.cos(n);return 2*a*Math.atan2(Math.sqrt(e),Math.sqrt(1-e))}function getLengthInternal(a,r){let n=0;for(let e=0,t=a.length;e<t-1;++e)n+=getDistance(a[e],a[e+1],r);return n}function getLength(e,t){var a=t||{},r=a.radius||DEFAULT_RADIUS,a=a.projection||"EPSG:3857",n=e.getType();n!==GeometryType.GEOMETRY_COLLECTION&&(e=e.clone().transform(a,"EPSG:4326"));let o=0,s,g,h,T,i,y;switch(n){case GeometryType.POINT:case GeometryType.MULTI_POINT:break;case GeometryType.LINE_STRING:case GeometryType.LINEAR_RING:s=e.getCoordinates(),o=getLengthInternal(s,r);break;case GeometryType.MULTI_LINE_STRING:case GeometryType.POLYGON:for(s=e.getCoordinates(),h=0,T=s.length;h<T;++h)o+=getLengthInternal(s[h],r);break;case GeometryType.MULTI_POLYGON:for(s=e.getCoordinates(),h=0,T=s.length;h<T;++h)for(g=s[h],i=0,y=g.length;i<y;++i)o+=getLengthInternal(g[i],r);break;case GeometryType.GEOMETRY_COLLECTION:var I=e.getGeometries();for(h=0,T=I.length;h<T;++h)o+=getLength(I[h],t);break;default:throw new Error("Unsupported geometry type: "+n)}return o}function getAreaInternal(t,e){let a=0;var r=t.length;let n=t[r-1][0],o=t[r-1][1];for(let e=0;e<r;e++){var s=t[e][0],g=t[e][1];a+=toRadians(s-n)*(2+Math.sin(toRadians(o))+Math.sin(toRadians(g))),n=s,o=g}return a*e*e/2}function getArea(e,t){var a=t||{},r=a.radius||DEFAULT_RADIUS,a=a.projection||"EPSG:3857",n=e.getType();n!==GeometryType.GEOMETRY_COLLECTION&&(e=e.clone().transform(a,"EPSG:4326"));let o=0,s,g,h,T,i,y;switch(n){case GeometryType.POINT:case GeometryType.MULTI_POINT:case GeometryType.LINE_STRING:case GeometryType.MULTI_LINE_STRING:case GeometryType.LINEAR_RING:break;case GeometryType.POLYGON:for(s=e.getCoordinates(),o=Math.abs(getAreaInternal(s[0],r)),h=1,T=s.length;h<T;++h)o-=Math.abs(getAreaInternal(s[h],r));break;case GeometryType.MULTI_POLYGON:for(s=e.getCoordinates(),h=0,T=s.length;h<T;++h)for(g=s[h],o+=Math.abs(getAreaInternal(g[0],r)),i=1,y=g.length;i<y;++i)o-=Math.abs(getAreaInternal(g[i],r));break;case GeometryType.GEOMETRY_COLLECTION:var I=e.getGeometries();for(h=0,T=I.length;h<T;++h)o+=getArea(I[h],t);break;default:throw new Error("Unsupported geometry type: "+n)}return o}function offset(e,t,a,r){var r=r||DEFAULT_RADIUS,n=toRadians(e[1]),e=toRadians(e[0]),t=t/r,r=Math.asin(Math.sin(n)*Math.cos(t)+Math.cos(n)*Math.sin(t)*Math.cos(a)),e=e+Math.atan2(Math.sin(a)*Math.sin(t)*Math.cos(n),Math.cos(t)-Math.sin(n)*Math.sin(r));return[toDegrees(e),toDegrees(r)]}export{DEFAULT_RADIUS,getDistance,getLength,getArea,offset};