import Feature from"../Feature.js";import{extend,includes}from"../array.js";import{assert}from"../asserts.js";import{asArray}from"../color.js";import{transformGeometryWithOptions}from"./Feature.js";import XMLFeature from"./XMLFeature.js";import{readDecimal,readBoolean,readString,writeStringTextNode,writeCDATASection,writeDecimalTextNode,writeBooleanTextNode}from"./xsd.js";import GeometryCollection from"../geom/GeometryCollection.js";import GeometryLayout from"../geom/GeometryLayout.js";import GeometryType from"../geom/GeometryType.js";import LineString from"../geom/LineString.js";import MultiLineString from"../geom/MultiLineString.js";import MultiPoint from"../geom/MultiPoint.js";import MultiPolygon from"../geom/MultiPolygon.js";import Point from"../geom/Point.js";import Polygon from"../geom/Polygon.js";import{toRadians}from"../math.js";import{get as getProjection}from"../proj.js";import Fill from"../style/Fill.js";import Icon from"../style/Icon.js";import IconAnchorUnits from"../style/IconAnchorUnits.js";import IconOrigin from"../style/IconOrigin.js";import Stroke from"../style/Stroke.js";import Style from"../style/Style.js";import Text from"../style/Text.js";import{createElementNS,getAllTextContent,isDocument,makeArrayExtender,makeArrayPusher,makeChildAppender,makeObjectPropertySetter,makeReplacer,makeSequence,makeSimpleNodeFactory,makeStructureNS,OBJECT_PROPERTY_NODE_FACTORY,parse,parseNode,pushParseAndPop,pushSerializeAndPop,XML_SCHEMA_INSTANCE_URI}from"../xml.js";const GX_NAMESPACE_URIS=["http://www.google.com/kml/ext/2.2"],NAMESPACE_URIS=[null,"http://earth.google.com/kml/2.0","http://earth.google.com/kml/2.1","http://earth.google.com/kml/2.2","http://www.opengis.net/kml/2.2"],SCHEMA_LOCATION="http://www.opengis.net/kml/2.2 https://developers.google.com/kml/schema/kml22gx.xsd",ICON_ANCHOR_UNITS_MAP={fraction:IconAnchorUnits.FRACTION,pixels:IconAnchorUnits.PIXELS,insetPixels:IconAnchorUnits.PIXELS},PLACEMARK_PARSERS=makeStructureNS(NAMESPACE_URIS,{ExtendedData:extendedDataParser,Region:regionParser,MultiGeometry:makeObjectPropertySetter(readMultiGeometry,"geometry"),LineString:makeObjectPropertySetter(readLineString,"geometry"),LinearRing:makeObjectPropertySetter(readLinearRing,"geometry"),Point:makeObjectPropertySetter(readPoint,"geometry"),Polygon:makeObjectPropertySetter(readPolygon,"geometry"),Style:makeObjectPropertySetter(readStyle),StyleMap:placemarkStyleMapParser,address:makeObjectPropertySetter(readString),description:makeObjectPropertySetter(readString),name:makeObjectPropertySetter(readString),open:makeObjectPropertySetter(readBoolean),phoneNumber:makeObjectPropertySetter(readString),styleUrl:makeObjectPropertySetter(readURI),visibility:makeObjectPropertySetter(readBoolean)},makeStructureNS(GX_NAMESPACE_URIS,{MultiTrack:makeObjectPropertySetter(readGxMultiTrack,"geometry"),Track:makeObjectPropertySetter(readGxTrack,"geometry")})),NETWORK_LINK_PARSERS=makeStructureNS(NAMESPACE_URIS,{ExtendedData:extendedDataParser,Region:regionParser,Link:linkParser,address:makeObjectPropertySetter(readString),description:makeObjectPropertySetter(readString),name:makeObjectPropertySetter(readString),open:makeObjectPropertySetter(readBoolean),phoneNumber:makeObjectPropertySetter(readString),visibility:makeObjectPropertySetter(readBoolean)}),LINK_PARSERS=makeStructureNS(NAMESPACE_URIS,{href:makeObjectPropertySetter(readURI)}),REGION_PARSERS=makeStructureNS(NAMESPACE_URIS,{LatLonAltBox:latLonAltBoxParser,Lod:lodParser}),KML_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["Document","Placemark"]),KML_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{Document:makeChildAppender(writeDocument),Placemark:makeChildAppender(writePlacemark)});let DEFAULT_COLOR,DEFAULT_FILL_STYLE=null;function getDefaultFillStyle(){return DEFAULT_FILL_STYLE}let DEFAULT_IMAGE_STYLE_ANCHOR,DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,DEFAULT_IMAGE_STYLE_SIZE,DEFAULT_IMAGE_STYLE_SRC,DEFAULT_IMAGE_SCALE_MULTIPLIER,DEFAULT_IMAGE_STYLE=null;function getDefaultImageStyle(){return DEFAULT_IMAGE_STYLE}let DEFAULT_NO_IMAGE_STYLE,DEFAULT_STROKE_STYLE=null;function getDefaultStrokeStyle(){return DEFAULT_STROKE_STYLE}let DEFAULT_TEXT_STROKE_STYLE,DEFAULT_TEXT_STYLE=null;function getDefaultTextStyle(){return DEFAULT_TEXT_STYLE}let DEFAULT_STYLE=null;function getDefaultStyle(){return DEFAULT_STYLE}let DEFAULT_STYLE_ARRAY=null;function getDefaultStyleArray(){return DEFAULT_STYLE_ARRAY}function createStyleDefaults(){DEFAULT_COLOR=[255,255,255,1],DEFAULT_FILL_STYLE=new Fill({color:DEFAULT_COLOR}),DEFAULT_IMAGE_STYLE_ANCHOR=[20,2],DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS=IconAnchorUnits.PIXELS,DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS=IconAnchorUnits.PIXELS,DEFAULT_IMAGE_STYLE_SIZE=[64,64],DEFAULT_IMAGE_STYLE_SRC="https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png",DEFAULT_IMAGE_SCALE_MULTIPLIER=.5,DEFAULT_IMAGE_STYLE=new Icon({anchor:DEFAULT_IMAGE_STYLE_ANCHOR,anchorOrigin:IconOrigin.BOTTOM_LEFT,anchorXUnits:DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,anchorYUnits:DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,crossOrigin:"anonymous",rotation:0,scale:DEFAULT_IMAGE_SCALE_MULTIPLIER,size:DEFAULT_IMAGE_STYLE_SIZE,src:DEFAULT_IMAGE_STYLE_SRC}),DEFAULT_NO_IMAGE_STYLE="NO_IMAGE",DEFAULT_STROKE_STYLE=new Stroke({color:DEFAULT_COLOR,width:1}),DEFAULT_TEXT_STROKE_STYLE=new Stroke({color:[51,51,51,1],width:2}),DEFAULT_TEXT_STYLE=new Text({font:"bold 16px Helvetica",fill:DEFAULT_FILL_STYLE,stroke:DEFAULT_TEXT_STROKE_STYLE,scale:.8}),DEFAULT_STYLE=new Style({fill:DEFAULT_FILL_STYLE,image:DEFAULT_IMAGE_STYLE,text:DEFAULT_TEXT_STYLE,stroke:DEFAULT_STROKE_STYLE,zIndex:0}),DEFAULT_STYLE_ARRAY=[DEFAULT_STYLE]}class KML extends XMLFeature{constructor(e){super();e=e||{};DEFAULT_STYLE_ARRAY||createStyleDefaults(),this.dataProjection=getProjection("EPSG:4326"),this.defaultStyle_=e.defaultStyle||DEFAULT_STYLE_ARRAY,this.extractStyles_=void 0===e.extractStyles||e.extractStyles,this.writeStyles_=void 0===e.writeStyles||e.writeStyles,this.sharedStyles_={},this.showPointNames_=void 0===e.showPointNames||e.showPointNames}readDocumentOrFolder_(e,t){var r=makeStructureNS(NAMESPACE_URIS,{Document:makeArrayExtender(this.readDocumentOrFolder_,this),Folder:makeArrayExtender(this.readDocumentOrFolder_,this),Placemark:makeArrayPusher(this.readPlacemark_,this),Style:this.readSharedStyle_.bind(this),StyleMap:this.readSharedStyleMap_.bind(this)}),r=pushParseAndPop([],r,e,t,this);if(r)return r}readPlacemark_(e,t){const r=pushParseAndPop({geometry:null},PLACEMARK_PARSERS,e,t);if(r){const o=new Feature;var e=e.getAttribute("id"),e=(null!==e&&o.setId(e),t[0]),t=r.geometry;return t&&transformGeometryWithOptions(t,!1,e),o.setGeometry(t),delete r.geometry,this.extractStyles_&&(e=createFeatureStyleFunction(r.Style,r.styleUrl,this.defaultStyle_,this.sharedStyles_,this.showPointNames_),o.setStyle(e)),delete r.Style,o.setProperties(r,!0),o}}readSharedStyle_(r,o){var n=r.getAttribute("id");if(null!==n){o=readStyle(r,o);if(o){let e,t=r.baseURI;t&&"about:blank"!=t||(t=window.location.href),e=t?new URL("#"+n,t).href:"#"+n,this.sharedStyles_[e]=o}}}readSharedStyleMap_(r,o){var n=r.getAttribute("id");if(null!==n){o=readStyleMapValue(r,o);if(o){let e,t=r.baseURI;t&&"about:blank"!=t||(t=window.location.href),e=t?new URL("#"+n,t).href:"#"+n,this.sharedStyles_[e]=o}}}readFeatureFromNode(e,t){if(!includes(NAMESPACE_URIS,e.namespaceURI))return null;e=this.readPlacemark_(e,[this.getReadOptions(e,t)]);return e||null}readFeaturesFromNode(t,r){if(!includes(NAMESPACE_URIS,t.namespaceURI))return[];let o;var e,n=t.localName;if("Document"==n||"Folder"==n)return(o=this.readDocumentOrFolder_(t,[this.getReadOptions(t,r)]))||[];if("Placemark"==n)return(e=this.readPlacemark_(t,[this.getReadOptions(t,r)]))?[e]:[];if("kml"!=n)return[];o=[];for(let e=t.firstElementChild;e;e=e.nextElementSibling){var a=this.readFeaturesFromNode(e,r);a&&extend(o,a)}return o}readName(e){var t;if(e)return"string"==typeof e?(t=parse(e),this.readNameFromDocument(t)):isDocument(e)?this.readNameFromDocument(e):this.readNameFromNode(e)}readNameFromDocument(t){for(let e=t.firstChild;e;e=e.nextSibling)if(e.nodeType==Node.ELEMENT_NODE){var r=this.readNameFromNode(e);if(r)return r}}readNameFromNode(t){for(let e=t.firstElementChild;e;e=e.nextElementSibling)if(includes(NAMESPACE_URIS,e.namespaceURI)&&"name"==e.localName)return readString(e);for(let e=t.firstElementChild;e;e=e.nextElementSibling){var r=e.localName;if(includes(NAMESPACE_URIS,e.namespaceURI)&&("Document"==r||"Folder"==r||"Placemark"==r||"kml"==r)){r=this.readNameFromNode(e);if(r)return r}}}readNetworkLinks(e){var t,r=[];return"string"==typeof e?(t=parse(e),extend(r,this.readNetworkLinksFromDocument(t))):isDocument(e)?extend(r,this.readNetworkLinksFromDocument(e)):extend(r,this.readNetworkLinksFromNode(e)),r}readNetworkLinksFromDocument(t){var r=[];for(let e=t.firstChild;e;e=e.nextSibling)e.nodeType==Node.ELEMENT_NODE&&extend(r,this.readNetworkLinksFromNode(e));return r}readNetworkLinksFromNode(t){const r=[];for(let e=t.firstElementChild;e;e=e.nextElementSibling){var o;includes(NAMESPACE_URIS,e.namespaceURI)&&"NetworkLink"==e.localName&&(o=pushParseAndPop({},NETWORK_LINK_PARSERS,e,[]),r.push(o))}for(let e=t.firstElementChild;e;e=e.nextElementSibling){var n=e.localName;!includes(NAMESPACE_URIS,e.namespaceURI)||"Document"!=n&&"Folder"!=n&&"kml"!=n||extend(r,this.readNetworkLinksFromNode(e))}return r}readRegion(e){var t,r=[];return"string"==typeof e?(t=parse(e),extend(r,this.readRegionFromDocument(t))):isDocument(e)?extend(r,this.readRegionFromDocument(e)):extend(r,this.readRegionFromNode(e)),r}readRegionFromDocument(t){var r=[];for(let e=t.firstChild;e;e=e.nextSibling)e.nodeType==Node.ELEMENT_NODE&&extend(r,this.readRegionFromNode(e));return r}readRegionFromNode(t){const r=[];for(let e=t.firstElementChild;e;e=e.nextElementSibling){var o;includes(NAMESPACE_URIS,e.namespaceURI)&&"Region"==e.localName&&(o=pushParseAndPop({},REGION_PARSERS,e,[]),r.push(o))}for(let e=t.firstElementChild;e;e=e.nextElementSibling){var n=e.localName;!includes(NAMESPACE_URIS,e.namespaceURI)||"Document"!=n&&"Folder"!=n&&"kml"!=n||extend(r,this.readRegionFromNode(e))}return r}writeFeaturesNode(e,t){t=this.adaptOptions(t);const r=createElementNS(NAMESPACE_URIS[4],"kml");var o="http://www.w3.org/2000/xmlns/",o=(r.setAttributeNS(o,"xmlns:gx",GX_NAMESPACE_URIS[0]),r.setAttributeNS(o,"xmlns:xsi",XML_SCHEMA_INSTANCE_URI),r.setAttributeNS(XML_SCHEMA_INSTANCE_URI,"xsi:schemaLocation",SCHEMA_LOCATION),{node:r});const n={};1<e.length?n.Document=e:1==e.length&&(n.Placemark=e[0]);var e=KML_SEQUENCE[r.namespaceURI],a=makeSequence(n,e);return pushSerializeAndPop(o,KML_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,a,[t],e,this),r}}function createNameStyleFunction(t,e){let r=null;const o=[0,0];let n="start";if(t.getImage()){let e=t.getImage().getImageSize();var a;2==(e=null===e?DEFAULT_IMAGE_STYLE_SIZE:e).length&&(a=t.getImage().getScale(),o[0]=a*e[0]/2,o[1]=-a*e[1]/2,n="left")}if(null!==t.getText()){const i=t.getText();(r=i.clone()).setFont(i.getFont()||DEFAULT_TEXT_STYLE.getFont()),r.setScale(i.getScale()||DEFAULT_TEXT_STYLE.getScale()),r.setFill(i.getFill()||DEFAULT_TEXT_STYLE.getFill()),r.setStroke(i.getStroke()||DEFAULT_TEXT_STROKE_STYLE)}else r=DEFAULT_TEXT_STYLE.clone();return r.setText(e),r.setOffsetX(o[0]),r.setOffsetY(o[1]),r.setTextAlign(n),new Style({text:r})}function createFeatureStyleFunction(S,l,E,s,A){return function(e,t){let r=A,o,n="";if(r){const a=e.getGeometry();a&&(r=a.getType()===GeometryType.POINT)}if(r&&(n=e.get("name"),r=r&&!!n),S)return r?(o=createNameStyleFunction(S[0],n),S.concat(o)):S;if(l){const i=findStyle(l,E,s);return r?(o=createNameStyleFunction(i[0],n),i.concat(o)):i}return r?(o=createNameStyleFunction(E[0],n),E.concat(o)):E}}function findStyle(e,t,r){return Array.isArray(e)?e:"string"==typeof e?findStyle(r[e=!(e in r)&&"#"+e in r?"#"+e:e],t,r):t}function readColor(e){e=getAllTextContent(e,!1),e=/^\s*#?\s*([0-9A-Fa-f]{8})\s*$/.exec(e);if(e){const t=e[1];return[parseInt(t.substr(6,2),16),parseInt(t.substr(4,2),16),parseInt(t.substr(2,2),16),parseInt(t.substr(0,2),16)/255]}}function readFlatCoordinates(e){let t=getAllTextContent(e,!1);const r=[],o=/^\s*([+\-]?\d*\.?\d+(?:e[+\-]?\d+)?)\s*,\s*([+\-]?\d*\.?\d+(?:e[+\-]?\d+)?)(?:\s*,\s*([+\-]?\d*\.?\d+(?:e[+\-]?\d+)?))?\s*/i;for(var n;n=o.exec(t);){var a=parseFloat(n[1]),i=parseFloat(n[2]),S=n[3]?parseFloat(n[3]):0;r.push(a,i,S),t=t.substr(n[0].length)}if(""===t)return r}function readURI(e){var t=getAllTextContent(e,!1).trim();let r=e.baseURI;return(r=r&&"about:blank"!=r?r:window.location.href)?new URL(t,r).href:t}function readVec2(e){var t=e.getAttribute("xunits"),r=e.getAttribute("yunits");let o;return o="insetPixels"!==t?"insetPixels"!==r?IconOrigin.BOTTOM_LEFT:IconOrigin.TOP_LEFT:"insetPixels"!==r?IconOrigin.BOTTOM_RIGHT:IconOrigin.TOP_RIGHT,{x:parseFloat(e.getAttribute("x")),xunits:ICON_ANCHOR_UNITS_MAP[t],y:parseFloat(e.getAttribute("y")),yunits:ICON_ANCHOR_UNITS_MAP[r],origin:o}}function readScale(e){return readDecimal(e)}const STYLE_MAP_PARSERS=makeStructureNS(NAMESPACE_URIS,{Pair:pairDataParser});function readStyleMapValue(e,t){return pushParseAndPop(void 0,STYLE_MAP_PARSERS,e,t)}const ICON_STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{Icon:makeObjectPropertySetter(readIcon),heading:makeObjectPropertySetter(readDecimal),hotSpot:makeObjectPropertySetter(readVec2),scale:makeObjectPropertySetter(readScale)});function iconStyleParser(E,s){E=pushParseAndPop({},ICON_STYLE_PARSERS,E,s);if(E){const m=s[s.length-1];var s="Icon"in E?E.Icon:{},A=!("Icon"in E)||0<Object.keys(s).length;let e;var d=s.href;d?e=d:A&&(e=DEFAULT_IMAGE_STYLE_SRC);let t,r,o,n=IconOrigin.BOTTOM_LEFT;d=E.hotSpot;d?(t=[d.x,d.y],r=d.xunits,o=d.yunits,n=d.origin):e===DEFAULT_IMAGE_STYLE_SRC?(t=DEFAULT_IMAGE_STYLE_ANCHOR,r=DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,o=DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS):/^http:\/\/maps\.(?:google|gstatic)\.com\//.test(e)&&(t=[.5,0],r=IconAnchorUnits.FRACTION,o=IconAnchorUnits.FRACTION);let a;var d=s.x,_=s.y;void 0!==d&&void 0!==_&&(a=[d,_]);let i;d=s.w,_=s.h;void 0!==d&&void 0!==_&&(i=[d,_]);let S;s=E.heading;void 0!==s&&(S=toRadians(s));let l=E.scale;A?(e==DEFAULT_IMAGE_STYLE_SRC&&(i=DEFAULT_IMAGE_STYLE_SIZE,void 0===l&&(l=DEFAULT_IMAGE_SCALE_MULTIPLIER)),d=new Icon({anchor:t,anchorOrigin:n,anchorXUnits:r,anchorYUnits:o,crossOrigin:"anonymous",offset:a,offsetOrigin:IconOrigin.BOTTOM_LEFT,rotation:S,scale:l,size:i,src:e}),m.imageStyle=d):m.imageStyle=DEFAULT_NO_IMAGE_STYLE}}const LABEL_STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{color:makeObjectPropertySetter(readColor),scale:makeObjectPropertySetter(readScale)});function labelStyleParser(e,t){e=pushParseAndPop({},LABEL_STYLE_PARSERS,e,t);if(e){const r=t[t.length-1];t=new Text({fill:new Fill({color:"color"in e?e.color:DEFAULT_COLOR}),scale:e.scale});r.textStyle=t}}const LINE_STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{color:makeObjectPropertySetter(readColor),width:makeObjectPropertySetter(readDecimal)});function lineStyleParser(e,t){e=pushParseAndPop({},LINE_STYLE_PARSERS,e,t);if(e){const r=t[t.length-1];t=new Stroke({color:"color"in e?e.color:DEFAULT_COLOR,width:"width"in e?e.width:1});r.strokeStyle=t}}const POLY_STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{color:makeObjectPropertySetter(readColor),fill:makeObjectPropertySetter(readBoolean),outline:makeObjectPropertySetter(readBoolean)});function polyStyleParser(e,t){e=pushParseAndPop({},POLY_STYLE_PARSERS,e,t);if(e){const r=t[t.length-1];t=new Fill({color:"color"in e?e.color:DEFAULT_COLOR}),t=(r.fillStyle=t,e.fill),t=(void 0!==t&&(r.fill=t),e.outline);void 0!==t&&(r.outline=t)}}const FLAT_LINEAR_RING_PARSERS=makeStructureNS(NAMESPACE_URIS,{coordinates:makeReplacer(readFlatCoordinates)});function readFlatLinearRing(e,t){return pushParseAndPop(null,FLAT_LINEAR_RING_PARSERS,e,t)}function gxCoordParser(e,t){const r=t[t.length-1].flatCoordinates;var o,t=getAllTextContent(e,!1),e=/^\s*([+\-]?\d+(?:\.\d*)?(?:e[+\-]?\d*)?)\s+([+\-]?\d+(?:\.\d*)?(?:e[+\-]?\d*)?)\s+([+\-]?\d+(?:\.\d*)?(?:e[+\-]?\d*)?)\s*$/i.exec(t);e?(t=parseFloat(e[1]),o=parseFloat(e[2]),e=parseFloat(e[3]),r.push(t,o,e,0)):r.push(0,0,0,0)}const GX_MULTITRACK_GEOMETRY_PARSERS=makeStructureNS(GX_NAMESPACE_URIS,{Track:makeArrayPusher(readGxTrack)});function readGxMultiTrack(e,t){e=pushParseAndPop([],GX_MULTITRACK_GEOMETRY_PARSERS,e,t);if(e)return new MultiLineString(e)}const GX_TRACK_PARSERS=makeStructureNS(NAMESPACE_URIS,{when:whenParser},makeStructureNS(GX_NAMESPACE_URIS,{coord:gxCoordParser}));function readGxTrack(e,t){e=pushParseAndPop({flatCoordinates:[],whens:[]},GX_TRACK_PARSERS,e,t);if(e){const o=e.flatCoordinates;var r=e.whens;for(let e=0,t=Math.min(o.length,r.length);e<t;++e)o[4*e+3]=r[e];return new LineString(o,GeometryLayout.XYZM)}}const ICON_PARSERS=makeStructureNS(NAMESPACE_URIS,{href:makeObjectPropertySetter(readURI)},makeStructureNS(GX_NAMESPACE_URIS,{x:makeObjectPropertySetter(readDecimal),y:makeObjectPropertySetter(readDecimal),w:makeObjectPropertySetter(readDecimal),h:makeObjectPropertySetter(readDecimal)}));function readIcon(e,t){e=pushParseAndPop({},ICON_PARSERS,e,t);return e||null}const GEOMETRY_FLAT_COORDINATES_PARSERS=makeStructureNS(NAMESPACE_URIS,{coordinates:makeReplacer(readFlatCoordinates)});function readFlatCoordinatesFromNode(e,t){return pushParseAndPop(null,GEOMETRY_FLAT_COORDINATES_PARSERS,e,t)}const EXTRUDE_AND_ALTITUDE_MODE_PARSERS=makeStructureNS(NAMESPACE_URIS,{extrude:makeObjectPropertySetter(readBoolean),tessellate:makeObjectPropertySetter(readBoolean),altitudeMode:makeObjectPropertySetter(readString)});function readLineString(e,t){var r=pushParseAndPop({},EXTRUDE_AND_ALTITUDE_MODE_PARSERS,e,t),e=readFlatCoordinatesFromNode(e,t);if(e){const o=new LineString(e,GeometryLayout.XYZ);return o.setProperties(r,!0),o}}function readLinearRing(e,t){var r=pushParseAndPop({},EXTRUDE_AND_ALTITUDE_MODE_PARSERS,e,t),e=readFlatCoordinatesFromNode(e,t);if(e){const o=new Polygon(e,GeometryLayout.XYZ,[e.length]);return o.setProperties(r,!0),o}}const MULTI_GEOMETRY_PARSERS=makeStructureNS(NAMESPACE_URIS,{LineString:makeArrayPusher(readLineString),LinearRing:makeArrayPusher(readLinearRing),MultiGeometry:makeArrayPusher(readMultiGeometry),Point:makeArrayPusher(readPoint),Polygon:makeArrayPusher(readPolygon)});function readMultiGeometry(e,t){const r=pushParseAndPop([],MULTI_GEOMETRY_PARSERS,e,t);if(!r)return null;if(0===r.length)return new GeometryCollection(r);let o,n=!0;var a,i=r[0].getType();let S;for(let e=1,t=r.length;e<t;++e)if((S=r[e]).getType()!=i){n=!1;break}if(n)if(i==GeometryType.POINT){const l=r[0];e=l.getLayout(),a=l.getFlatCoordinates();for(let e=1,t=r.length;e<t;++e)S=r[e],extend(a,S.getFlatCoordinates());setCommonGeometryProperties(o=new MultiPoint(a,e),r)}else i==GeometryType.LINE_STRING?setCommonGeometryProperties(o=new MultiLineString(r),r):i==GeometryType.POLYGON?setCommonGeometryProperties(o=new MultiPolygon(r),r):i==GeometryType.GEOMETRY_COLLECTION?o=new GeometryCollection(r):assert(!1,37);else o=new GeometryCollection(r);return o}function readPoint(e,t){var r=pushParseAndPop({},EXTRUDE_AND_ALTITUDE_MODE_PARSERS,e,t),e=readFlatCoordinatesFromNode(e,t);if(e){const o=new Point(e,GeometryLayout.XYZ);return o.setProperties(r,!0),o}}const FLAT_LINEAR_RINGS_PARSERS=makeStructureNS(NAMESPACE_URIS,{innerBoundaryIs:innerBoundaryIsParser,outerBoundaryIs:outerBoundaryIsParser});function readPolygon(e,t){var r=pushParseAndPop({},EXTRUDE_AND_ALTITUDE_MODE_PARSERS,e,t),o=pushParseAndPop([null],FLAT_LINEAR_RINGS_PARSERS,e,t);if(o&&o[0]){var n=o[0];const a=[n.length];for(let e=1,t=o.length;e<t;++e)extend(n,o[e]),a.push(n.length);const i=new Polygon(n,GeometryLayout.XYZ,a);return i.setProperties(r,!0),i}}const STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{IconStyle:iconStyleParser,LabelStyle:labelStyleParser,LineStyle:lineStyleParser,PolyStyle:polyStyleParser});function readStyle(e,t){e=pushParseAndPop({},STYLE_PARSERS,e,t);if(!e)return null;let r="fillStyle"in e?e.fillStyle:DEFAULT_FILL_STYLE;t=e.fill;void 0===t||t||(r=null);let o;"imageStyle"in e?e.imageStyle!=DEFAULT_NO_IMAGE_STYLE&&(o=e.imageStyle):o=DEFAULT_IMAGE_STYLE;t="textStyle"in e?e.textStyle:DEFAULT_TEXT_STYLE;let n="strokeStyle"in e?e.strokeStyle:DEFAULT_STROKE_STYLE;e=e.outline;return void 0===e||e||(n=null),[new Style({fill:r,image:o,stroke:n,text:t,zIndex:void 0})]}function setCommonGeometryProperties(e,t){var r=t.length;const o=new Array(t.length),n=new Array(t.length),a=new Array(t.length);let i,S,l;i=S=l=!1;for(let e=0;e<r;++e){const E=t[e];o[e]=E.get("extrude"),n[e]=E.get("tessellate"),a[e]=E.get("altitudeMode"),i=i||void 0!==o[e],S=S||void 0!==n[e],l=l||a[e]}i&&e.set("extrude",o),S&&e.set("tessellate",n),l&&e.set("altitudeMode",a)}const DATA_PARSERS=makeStructureNS(NAMESPACE_URIS,{displayName:makeObjectPropertySetter(readString),value:makeObjectPropertySetter(readString)});function dataParser(e,t){var r=e.getAttribute("name");parseNode(DATA_PARSERS,e,t);const o=t[t.length-1];r&&o.displayName?o[r]={value:o.value,displayName:o.displayName,toString:function(){return o.value}}:null!==r?o[r]=o.value:null!==o.displayName&&(o[o.displayName]=o.value),delete o.value}const EXTENDED_DATA_PARSERS=makeStructureNS(NAMESPACE_URIS,{Data:dataParser,SchemaData:schemaDataParser});function extendedDataParser(e,t){parseNode(EXTENDED_DATA_PARSERS,e,t)}function regionParser(e,t){parseNode(REGION_PARSERS,e,t)}const PAIR_PARSERS=makeStructureNS(NAMESPACE_URIS,{Style:makeObjectPropertySetter(readStyle),key:makeObjectPropertySetter(readString),styleUrl:makeObjectPropertySetter(readURI)});function pairDataParser(e,t){var r,e=pushParseAndPop({},PAIR_PARSERS,e,t);!e||(r=e.key)&&"normal"==r&&((r=e.styleUrl)&&(t[t.length-1]=r),(r=e.Style)&&(t[t.length-1]=r))}function placemarkStyleMapParser(e,t){e=readStyleMapValue(e,t);if(e){const r=t[t.length-1];Array.isArray(e)?r.Style=e:"string"==typeof e?r.styleUrl=e:assert(!1,38)}}const SCHEMA_DATA_PARSERS=makeStructureNS(NAMESPACE_URIS,{SimpleData:simpleDataParser});function schemaDataParser(e,t){parseNode(SCHEMA_DATA_PARSERS,e,t)}function simpleDataParser(e,t){var r=e.getAttribute("name");if(null!==r){e=readString(e);const o=t[t.length-1];o[r]=e}}const LAT_LON_ALT_BOX_PARSERS=makeStructureNS(NAMESPACE_URIS,{altitudeMode:makeObjectPropertySetter(readString),minAltitude:makeObjectPropertySetter(readDecimal),maxAltitude:makeObjectPropertySetter(readDecimal),north:makeObjectPropertySetter(readDecimal),south:makeObjectPropertySetter(readDecimal),east:makeObjectPropertySetter(readDecimal),west:makeObjectPropertySetter(readDecimal)});function latLonAltBoxParser(e,t){e=pushParseAndPop({},LAT_LON_ALT_BOX_PARSERS,e,t);if(e){const r=t[t.length-1];t=[parseFloat(e.west),parseFloat(e.south),parseFloat(e.east),parseFloat(e.north)];r.extent=t,r.altitudeMode=e.altitudeMode,r.minAltitude=parseFloat(e.minAltitude),r.maxAltitude=parseFloat(e.maxAltitude)}}const LOD_PARSERS=makeStructureNS(NAMESPACE_URIS,{minLodPixels:makeObjectPropertySetter(readDecimal),maxLodPixels:makeObjectPropertySetter(readDecimal),minFadeExtent:makeObjectPropertySetter(readDecimal),maxFadeExtent:makeObjectPropertySetter(readDecimal)});function lodParser(e,t){e=pushParseAndPop({},LOD_PARSERS,e,t);if(e){const r=t[t.length-1];r.minLodPixels=parseFloat(e.minLodPixels),r.maxLodPixels=parseFloat(e.maxLodPixels),r.minFadeExtent=parseFloat(e.minFadeExtent),r.maxFadeExtent=parseFloat(e.maxFadeExtent)}}const INNER_BOUNDARY_IS_PARSERS=makeStructureNS(NAMESPACE_URIS,{LinearRing:makeReplacer(readFlatLinearRing)});function innerBoundaryIsParser(e,t){e=pushParseAndPop(void 0,INNER_BOUNDARY_IS_PARSERS,e,t);if(e){const r=t[t.length-1];r.push(e)}}const OUTER_BOUNDARY_IS_PARSERS=makeStructureNS(NAMESPACE_URIS,{LinearRing:makeReplacer(readFlatLinearRing)});function outerBoundaryIsParser(e,t){e=pushParseAndPop(void 0,OUTER_BOUNDARY_IS_PARSERS,e,t);if(e){const r=t[t.length-1];r[0]=e}}function linkParser(e,t){parseNode(LINK_PARSERS,e,t)}function whenParser(e,t){const r=t[t.length-1].whens;t=getAllTextContent(e,!1),e=Date.parse(t);r.push(isNaN(e)?0:e)}function writeColorTextNode(e,t){t=asArray(t);const r=[255*(4==t.length?t[3]:1),t[2],t[1],t[0]];for(let e=0;e<4;++e){var o=Math.floor(r[e]).toString(16);r[e]=1==o.length?"0"+o:o}writeStringTextNode(e,r.join(""))}function writeCoordinatesTextNode(e,r,t){var t=t[t.length-1],o=t.layout,n=t.stride;let a;o==GeometryLayout.XY||o==GeometryLayout.XYM?a=2:o==GeometryLayout.XYZ||o==GeometryLayout.XYZM?a=3:assert(!1,34);var i=r.length;let S="";if(0<i){S+=r[0];for(let e=1;e<a;++e)S+=","+r[e];for(let t=n;t<i;t+=n){S+=" "+r[t];for(let e=1;e<a;++e)S+=","+r[t+e]}}writeStringTextNode(e,S)}const EXTENDEDDATA_NODE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{Data:makeChildAppender(writeDataNode),value:makeChildAppender(writeDataNodeValue),displayName:makeChildAppender(writeDataNodeName)});function writeDataNode(e,t,r){e.setAttribute("name",t.name);e={node:e},t=t.value;"object"==typeof t?(null!==t&&t.displayName&&pushSerializeAndPop(e,EXTENDEDDATA_NODE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,[t.displayName],r,["displayName"]),null!==t&&t.value&&pushSerializeAndPop(e,EXTENDEDDATA_NODE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,[t.value],r,["value"])):pushSerializeAndPop(e,EXTENDEDDATA_NODE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,[t],r,["value"])}function writeDataNodeName(e,t){writeCDATASection(e,t)}function writeDataNodeValue(e,t){writeStringTextNode(e,t)}const DOCUMENT_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{Placemark:makeChildAppender(writePlacemark)}),DOCUMENT_NODE_FACTORY=function(e,t,r){t=t[t.length-1].node;return createElementNS(t.namespaceURI,"Placemark")};function writeDocument(e,t,r){pushSerializeAndPop({node:e},DOCUMENT_SERIALIZERS,DOCUMENT_NODE_FACTORY,t,r,void 0,this)}const DATA_NODE_FACTORY=makeSimpleNodeFactory("Data");function writeExtendedData(e,t,r){var o={node:e},n=t.names,a=t.values,i=n.length;for(let e=0;e<i;e++)pushSerializeAndPop(o,EXTENDEDDATA_NODE_SERIALIZERS,DATA_NODE_FACTORY,[{name:n[e],value:a[e]}],r)}const ICON_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["href"],makeStructureNS(GX_NAMESPACE_URIS,["x","y","w","h"])),ICON_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{href:makeChildAppender(writeStringTextNode)},makeStructureNS(GX_NAMESPACE_URIS,{x:makeChildAppender(writeDecimalTextNode),y:makeChildAppender(writeDecimalTextNode),w:makeChildAppender(writeDecimalTextNode),h:makeChildAppender(writeDecimalTextNode)})),GX_NODE_FACTORY=function(e,t,r){return createElementNS(GX_NAMESPACE_URIS[0],"gx:"+r)};function writeIcon(e,t,r){var e={node:e},o=r[r.length-1].node,o=ICON_SEQUENCE[o.namespaceURI],n=makeSequence(t,o);pushSerializeAndPop(e,ICON_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,n,r,o),o=ICON_SEQUENCE[GX_NAMESPACE_URIS[0]],n=makeSequence(t,o),pushSerializeAndPop(e,ICON_SERIALIZERS,GX_NODE_FACTORY,n,r,o)}const ICON_STYLE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["scale","heading","Icon","hotSpot"]),ICON_STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{Icon:makeChildAppender(writeIcon),heading:makeChildAppender(writeDecimalTextNode),hotSpot:makeChildAppender(writeVec2),scale:makeChildAppender(writeScaleTextNode)});function writeIconStyle(e,t,r){e={node:e};const o={};var n=t.getSrc(),a=t.getSize(),i=t.getImageSize();const S={href:n};a&&(S.w=a[0],S.h=a[1],n=t.getAnchor(),(l=t.getOrigin())&&i&&0!==l[0]&&l[1]!==a[1]&&(S.x=l[0],S.y=i[1]-(l[1]+a[1])),!n||n[0]===a[0]/2&&n[1]===a[1]/2||(i={x:n[0],xunits:IconAnchorUnits.PIXELS,y:a[1]-n[1],yunits:IconAnchorUnits.PIXELS},o.hotSpot=i)),o.Icon=S;var l=t.getScale(),a=(1!==l&&(o.scale=l),t.getRotation()),n=(0!==a&&(o.heading=a),r[r.length-1].node),i=ICON_STYLE_SEQUENCE[n.namespaceURI],l=makeSequence(o,i);pushSerializeAndPop(e,ICON_STYLE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,l,r,i)}const LABEL_STYLE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["color","scale"]),LABEL_STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{color:makeChildAppender(writeColorTextNode),scale:makeChildAppender(writeScaleTextNode)});function writeLabelStyle(e,t,r){e={node:e};const o={},n=t.getFill();n&&(o.color=n.getColor());var t=t.getScale(),t=(t&&1!==t&&(o.scale=t),r[r.length-1].node),t=LABEL_STYLE_SEQUENCE[t.namespaceURI],a=makeSequence(o,t);pushSerializeAndPop(e,LABEL_STYLE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,a,r,t)}const LINE_STYLE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["color","width"]),LINE_STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{color:makeChildAppender(writeColorTextNode),width:makeChildAppender(writeDecimalTextNode)});function writeLineStyle(e,t,r){var e={node:e},t={color:t.getColor(),width:t.getWidth()},o=r[r.length-1].node,o=LINE_STYLE_SEQUENCE[o.namespaceURI],t=makeSequence(t,o);pushSerializeAndPop(e,LINE_STYLE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,t,r,o)}const GEOMETRY_TYPE_TO_NODENAME={Point:"Point",LineString:"LineString",LinearRing:"LinearRing",Polygon:"Polygon",MultiPoint:"MultiGeometry",MultiLineString:"MultiGeometry",MultiPolygon:"MultiGeometry",GeometryCollection:"MultiGeometry"},GEOMETRY_NODE_FACTORY=function(e,t,r){if(e)return t=t[t.length-1].node,createElementNS(t.namespaceURI,GEOMETRY_TYPE_TO_NODENAME[e.getType()])},POINT_NODE_FACTORY=makeSimpleNodeFactory("Point"),LINE_STRING_NODE_FACTORY=makeSimpleNodeFactory("LineString"),LINEAR_RING_NODE_FACTORY=makeSimpleNodeFactory("LinearRing"),POLYGON_NODE_FACTORY=makeSimpleNodeFactory("Polygon"),MULTI_GEOMETRY_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{LineString:makeChildAppender(writePrimitiveGeometry),Point:makeChildAppender(writePrimitiveGeometry),Polygon:makeChildAppender(writePolygon),GeometryCollection:makeChildAppender(writeMultiGeometry)});function writeMultiGeometry(e,t,r){var e={node:e},o=t.getType();let n,a;o==GeometryType.GEOMETRY_COLLECTION?(n=t.getGeometries(),a=GEOMETRY_NODE_FACTORY):o==GeometryType.MULTI_POINT?(n=t.getPoints(),a=POINT_NODE_FACTORY):o==GeometryType.MULTI_LINE_STRING?(n=t.getLineStrings(),a=LINE_STRING_NODE_FACTORY):o==GeometryType.MULTI_POLYGON?(n=t.getPolygons(),a=POLYGON_NODE_FACTORY):assert(!1,39),pushSerializeAndPop(e,MULTI_GEOMETRY_SERIALIZERS,a,n,r)}const BOUNDARY_IS_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{LinearRing:makeChildAppender(writePrimitiveGeometry)});function writeBoundaryIs(e,t,r){pushSerializeAndPop({node:e},BOUNDARY_IS_SERIALIZERS,LINEAR_RING_NODE_FACTORY,[t],r)}const PLACEMARK_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{ExtendedData:makeChildAppender(writeExtendedData),MultiGeometry:makeChildAppender(writeMultiGeometry),LineString:makeChildAppender(writePrimitiveGeometry),LinearRing:makeChildAppender(writePrimitiveGeometry),Point:makeChildAppender(writePrimitiveGeometry),Polygon:makeChildAppender(writePolygon),Style:makeChildAppender(writeStyle),address:makeChildAppender(writeStringTextNode),description:makeChildAppender(writeStringTextNode),name:makeChildAppender(writeStringTextNode),open:makeChildAppender(writeBooleanTextNode),phoneNumber:makeChildAppender(writeStringTextNode),styleUrl:makeChildAppender(writeStringTextNode),visibility:makeChildAppender(writeBooleanTextNode)}),PLACEMARK_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["name","open","visibility","address","phoneNumber","description","styleUrl","Style"]),EXTENDEDDATA_NODE_FACTORY=makeSimpleNodeFactory("ExtendedData");function writePlacemark(e,t,r){var o={node:e};t.getId()&&e.setAttribute("id",t.getId());const n=t.getProperties(),a={address:1,description:1,name:1,open:1,phoneNumber:1,styleUrl:1,visibility:1};a[t.getGeometryName()]=1;e=Object.keys(n||{}).sort().filter(function(e){return!a[e]});const i=t.getStyleFunction();if(i){var S=i(t,0);if(S){const s=Array.isArray(S)?S[0]:S,A=(this.writeStyles_&&(n.Style=s),s.getText());A&&(n.name=A.getText())}}var S=r[r.length-1].node,S=PLACEMARK_SEQUENCE[S.namespaceURI],l=makeSequence(n,S),S=(pushSerializeAndPop(o,PLACEMARK_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,l,r,S),0<e.length&&(l={names:e,values:makeSequence(n,e)},pushSerializeAndPop(o,PLACEMARK_SERIALIZERS,EXTENDEDDATA_NODE_FACTORY,[l],r)),r[0]);let E=t.getGeometry();E=E&&transformGeometryWithOptions(E,!0,S),pushSerializeAndPop(o,PLACEMARK_SERIALIZERS,GEOMETRY_NODE_FACTORY,[E],r)}const PRIMITIVE_GEOMETRY_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["extrude","tessellate","altitudeMode","coordinates"]),PRIMITIVE_GEOMETRY_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{extrude:makeChildAppender(writeBooleanTextNode),tessellate:makeChildAppender(writeBooleanTextNode),altitudeMode:makeChildAppender(writeStringTextNode),coordinates:makeChildAppender(writeCoordinatesTextNode)});function writePrimitiveGeometry(e,t,r){var o=t.getFlatCoordinates();const n={node:e},a=(n.layout=t.getLayout(),n.stride=t.getStride(),t.getProperties());a.coordinates=o;e=r[r.length-1].node,t=PRIMITIVE_GEOMETRY_SEQUENCE[e.namespaceURI],o=makeSequence(a,t);pushSerializeAndPop(n,PRIMITIVE_GEOMETRY_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,o,r,t)}const POLYGON_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{outerBoundaryIs:makeChildAppender(writeBoundaryIs),innerBoundaryIs:makeChildAppender(writeBoundaryIs)}),INNER_BOUNDARY_NODE_FACTORY=makeSimpleNodeFactory("innerBoundaryIs"),OUTER_BOUNDARY_NODE_FACTORY=makeSimpleNodeFactory("outerBoundaryIs");function writePolygon(e,t,r){const o=t.getLinearRings();t=o.shift(),e={node:e};pushSerializeAndPop(e,POLYGON_SERIALIZERS,INNER_BOUNDARY_NODE_FACTORY,o,r),pushSerializeAndPop(e,POLYGON_SERIALIZERS,OUTER_BOUNDARY_NODE_FACTORY,[t],r)}const POLY_STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{color:makeChildAppender(writeColorTextNode)}),COLOR_NODE_FACTORY=makeSimpleNodeFactory("color");function writePolyStyle(e,t,r){pushSerializeAndPop({node:e},POLY_STYLE_SERIALIZERS,COLOR_NODE_FACTORY,[t.getColor()],r)}function writeScaleTextNode(e,t){writeDecimalTextNode(e,Math.round(1e6*t)/1e6)}const STYLE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["IconStyle","LabelStyle","LineStyle","PolyStyle"]),STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{IconStyle:makeChildAppender(writeIconStyle),LabelStyle:makeChildAppender(writeLabelStyle),LineStyle:makeChildAppender(writeLineStyle),PolyStyle:makeChildAppender(writePolyStyle)});function writeStyle(e,t,r){e={node:e};const o={};var n=t.getFill(),a=t.getStroke(),i=t.getImage(),t=t.getText(),i=(i&&"function"==typeof i.getSrc&&(o.IconStyle=i),t&&(o.LabelStyle=t),a&&(o.LineStyle=a),n&&(o.PolyStyle=n),r[r.length-1].node),t=STYLE_SEQUENCE[i.namespaceURI],a=makeSequence(o,t);pushSerializeAndPop(e,STYLE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,a,r,t)}function writeVec2(e,t){e.setAttribute("x",String(t.x)),e.setAttribute("y",String(t.y)),e.setAttribute("xunits",t.xunits),e.setAttribute("yunits",t.yunits)}export default KML;export{getDefaultFillStyle,getDefaultImageStyle,getDefaultStrokeStyle,getDefaultTextStyle,getDefaultStyle,getDefaultStyleArray,readFlatCoordinates};