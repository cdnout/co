import{abstract}from"../util.js";import FeatureFormat from"./Feature.js";import FormatType from"./FormatType.js";class JSONFeature extends FeatureFormat{constructor(){super()}getType(){return FormatType.JSON}readFeature(e,t){return this.readFeatureFromObject(getObject(e),this.getReadOptions(e,t))}readFeatures(e,t){return this.readFeaturesFromObject(getObject(e),this.getReadOptions(e,t))}readFeatureFromObject(e,t){return abstract()}readFeaturesFromObject(e,t){return abstract()}readGeometry(e,t){return this.readGeometryFromObject(getObject(e),this.getReadOptions(e,t))}readGeometryFromObject(e,t){return abstract()}readProjection(e){return this.readProjectionFromObject(getObject(e))}readProjectionFromObject(e){return abstract()}writeFeature(e,t){return JSON.stringify(this.writeFeatureObject(e,t))}writeFeatureObject(e,t){return abstract()}writeFeatures(e,t){return JSON.stringify(this.writeFeaturesObject(e,t))}writeFeaturesObject(e,t){return abstract()}writeGeometry(e,t){return JSON.stringify(this.writeGeometryObject(e,t))}writeGeometryObject(e,t){return abstract()}}function getObject(e){return"string"==typeof e?JSON.parse(e)||null:null!==e?e:null}export default JSONFeature;