import Feature from"../Feature.js";import{transformGeometryWithOptions}from"./Feature.js";import TextFeature from"./TextFeature.js";import GeometryCollection from"../geom/GeometryCollection.js";import GeometryType from"../geom/GeometryType.js";import GeometryLayout from"../geom/GeometryLayout.js";import LineString from"../geom/LineString.js";import MultiLineString from"../geom/MultiLineString.js";import MultiPoint from"../geom/MultiPoint.js";import MultiPolygon from"../geom/MultiPolygon.js";import Point from"../geom/Point.js";import Polygon from"../geom/Polygon.js";const GeometryConstructor={POINT:Point,LINESTRING:LineString,POLYGON:Polygon,MULTIPOINT:MultiPoint,MULTILINESTRING:MultiLineString,MULTIPOLYGON:MultiPolygon},EMPTY="EMPTY",Z="Z",M="M",ZM="ZM",TokenType={TEXT:1,LEFT_PAREN:2,RIGHT_PAREN:3,NUMBER:4,COMMA:5,EOF:6},WKTGeometryType={};for(const a in GeometryType)WKTGeometryType[a]=GeometryType[a].toUpperCase();class Lexer{constructor(e){this.wkt=e,this.index_=-1}isAlpha_(e){return"a"<=e&&e<="z"||"A"<=e&&e<="Z"}isNumeric_(e,t){return"0"<=e&&e<="9"||"."==e&&!(void 0!==t&&t)}isWhiteSpace_(e){return" "==e||"\t"==e||"\r"==e||"\n"==e}nextChar_(){return this.wkt.charAt(++this.index_)}nextToken(){var e=this.nextChar_(),t=this.index_;let r=e,o;if("("==e)o=TokenType.LEFT_PAREN;else if(","==e)o=TokenType.COMMA;else if(")"==e)o=TokenType.RIGHT_PAREN;else if(this.isNumeric_(e)||"-"==e)o=TokenType.NUMBER,r=this.readNumber_();else if(this.isAlpha_(e))o=TokenType.TEXT,r=this.readText_();else{if(this.isWhiteSpace_(e))return this.nextToken();if(""!==e)throw new Error("Unexpected character: "+e);o=TokenType.EOF}return{position:t,value:r,type:o}}readNumber_(){let e;var t=this.index_;let r=!1,o=!1;for(;"."==e?r=!0:"e"!=e&&"E"!=e||(o=!0),e=this.nextChar_(),this.isNumeric_(e,r)||!o&&("e"==e||"E"==e)||o&&("-"==e||"+"==e););return parseFloat(this.wkt.substring(t,this.index_--))}readText_(){for(var e,t=this.index_;e=this.nextChar_(),this.isAlpha_(e););return this.wkt.substring(t,this.index_--).toUpperCase()}}class Parser{constructor(e){this.lexer_=e,this.token_,this.layout_=GeometryLayout.XY}consume_(){this.token_=this.lexer_.nextToken()}isTokenType(e){return this.token_.type==e}match(e){e=this.isTokenType(e);return e&&this.consume_(),e}parse(){return this.consume_(),this.parseGeometry_()}parseGeometryLayout_(){let e=GeometryLayout.XY;var t=this.token_;return this.isTokenType(TokenType.TEXT)&&((t=t.value)===Z?e=GeometryLayout.XYZ:t===M?e=GeometryLayout.XYM:t===ZM&&(e=GeometryLayout.XYZM),e!==GeometryLayout.XY&&this.consume_()),e}parseGeometryCollectionText_(){if(this.match(TokenType.LEFT_PAREN)){const e=[];for(;e.push(this.parseGeometry_()),this.match(TokenType.COMMA););if(this.match(TokenType.RIGHT_PAREN))return e}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parsePointText_(){if(this.match(TokenType.LEFT_PAREN)){var e=this.parsePoint_();if(this.match(TokenType.RIGHT_PAREN))return e}else if(this.isEmptyGeometry_())return null;throw new Error(this.formatErrorMessage_())}parseLineStringText_(){if(this.match(TokenType.LEFT_PAREN)){var e=this.parsePointList_();if(this.match(TokenType.RIGHT_PAREN))return e}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parsePolygonText_(){if(this.match(TokenType.LEFT_PAREN)){var e=this.parseLineStringTextList_();if(this.match(TokenType.RIGHT_PAREN))return e}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parseMultiPointText_(){if(this.match(TokenType.LEFT_PAREN)){let e;if(e=this.token_.type==TokenType.LEFT_PAREN?this.parsePointTextList_():this.parsePointList_(),this.match(TokenType.RIGHT_PAREN))return e}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parseMultiLineStringText_(){if(this.match(TokenType.LEFT_PAREN)){var e=this.parseLineStringTextList_();if(this.match(TokenType.RIGHT_PAREN))return e}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parseMultiPolygonText_(){if(this.match(TokenType.LEFT_PAREN)){var e=this.parsePolygonTextList_();if(this.match(TokenType.RIGHT_PAREN))return e}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parsePoint_(){const t=[];var r=this.layout_.length;for(let e=0;e<r;++e){var o=this.token_;if(!this.match(TokenType.NUMBER))break;t.push(o.value)}if(t.length==r)return t;throw new Error(this.formatErrorMessage_())}parsePointList_(){const e=[this.parsePoint_()];for(;this.match(TokenType.COMMA);)e.push(this.parsePoint_());return e}parsePointTextList_(){const e=[this.parsePointText_()];for(;this.match(TokenType.COMMA);)e.push(this.parsePointText_());return e}parseLineStringTextList_(){const e=[this.parseLineStringText_()];for(;this.match(TokenType.COMMA);)e.push(this.parseLineStringText_());return e}parsePolygonTextList_(){const e=[this.parsePolygonText_()];for(;this.match(TokenType.COMMA);)e.push(this.parsePolygonText_());return e}isEmptyGeometry_(){var e=this.isTokenType(TokenType.TEXT)&&this.token_.value==EMPTY;return e&&this.consume_(),e}formatErrorMessage_(){return"Unexpected `"+this.token_.value+"` at position "+this.token_.position+" in `"+this.lexer_.wkt+"`"}parseGeometry_(){var e=this.token_;if(this.match(TokenType.TEXT)){var t=e.value;if(this.layout_=this.parseGeometryLayout_(),"GEOMETRYCOLLECTION"==t)return e=this.parseGeometryCollectionText_(),new GeometryCollection(e);{const r=GeometryConstructor[t];if(!r)throw new Error("Invalid geometry type: "+t);let e;switch(t){case"POINT":e=this.parsePointText_();break;case"LINESTRING":e=this.parseLineStringText_();break;case"POLYGON":e=this.parsePolygonText_();break;case"MULTIPOINT":e=this.parseMultiPointText_();break;case"MULTILINESTRING":e=this.parseMultiLineStringText_();break;case"MULTIPOLYGON":e=this.parseMultiPolygonText_();break;default:throw new Error("Invalid geometry type: "+t)}return e=e||(r===GeometryConstructor.POINT?[NaN,NaN]:[]),new r(e,this.layout_)}}throw new Error(this.formatErrorMessage_())}}class WKT extends TextFeature{constructor(e){super();e=e||{};this.splitCollection_=void 0!==e.splitCollection&&e.splitCollection}parse_(e){e=new Lexer(e);const t=new Parser(e);return t.parse()}readFeatureFromText(e,t){e=this.readGeometryFromText(e,t);if(e){const r=new Feature;return r.setGeometry(e),r}return null}readFeaturesFromText(e,t){let r=[];const o=this.readGeometryFromText(e,t),i=[];for(let e=0,t=(r=this.splitCollection_&&o.getType()==GeometryType.GEOMETRY_COLLECTION?o.getGeometriesArray():[o]).length;e<t;++e){const n=new Feature;n.setGeometry(r[e]),i.push(n)}return i}readGeometryFromText(e,t){e=this.parse_(e);return e?transformGeometryWithOptions(e,!1,t):null}writeFeatureText(e,t){e=e.getGeometry();return e?this.writeGeometryText(e,t):""}writeFeaturesText(r,e){if(1==r.length)return this.writeFeatureText(r[0],e);const o=[];for(let e=0,t=r.length;e<t;++e)o.push(r[e].getGeometry());var t=new GeometryCollection(o);return this.writeGeometryText(t,e)}writeGeometryText(e,t){return encode(transformGeometryWithOptions(e,!0,t))}}function encodePointGeometry(e){const t=e.getCoordinates();return 0===t.length?"":t.join(" ")}function encodeMultiPointGeometry(e){const r=[];var o=e.getPoints();for(let e=0,t=o.length;e<t;++e)r.push("("+encodePointGeometry(o[e])+")");return r.join(",")}function encodeGeometryCollectionGeometry(e){const r=[];var o=e.getGeometries();for(let e=0,t=o.length;e<t;++e)r.push(encode(o[e]));return r.join(",")}function encodeLineStringGeometry(e){const r=e.getCoordinates(),o=[];for(let e=0,t=r.length;e<t;++e)o.push(r[e].join(" "));return o.join(",")}function encodeMultiLineStringGeometry(e){const r=[];var o=e.getLineStrings();for(let e=0,t=o.length;e<t;++e)r.push("("+encodeLineStringGeometry(o[e])+")");return r.join(",")}function encodePolygonGeometry(e){const r=[];var o=e.getLinearRings();for(let e=0,t=o.length;e<t;++e)r.push("("+encodeLineStringGeometry(o[e])+")");return r.join(",")}function encodeMultiPolygonGeometry(e){const r=[];var o=e.getPolygons();for(let e=0,t=o.length;e<t;++e)r.push("("+encodePolygonGeometry(o[e])+")");return r.join(",")}function encodeGeometryLayout(e){e=e.getLayout();let t="";return e!==GeometryLayout.XYZ&&e!==GeometryLayout.XYZM||(t+=Z),e!==GeometryLayout.XYM&&e!==GeometryLayout.XYZM||(t+=M),t}const GeometryEncoder={Point:encodePointGeometry,LineString:encodeLineStringGeometry,Polygon:encodePolygonGeometry,MultiPoint:encodeMultiPointGeometry,MultiLineString:encodeMultiLineStringGeometry,MultiPolygon:encodeMultiPolygonGeometry,GeometryCollection:encodeGeometryCollectionGeometry};function encode(e){let t=e.getType();const r=GeometryEncoder[t];var o=r(e);return t=t.toUpperCase(),"function"==typeof e.getFlatCoordinates&&0<(e=encodeGeometryLayout(e)).length&&(t+=" "+e),0===o.length?t+" "+EMPTY:t+"("+o+")"}export default WKT;