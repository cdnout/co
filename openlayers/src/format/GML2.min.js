import{createOrUpdate}from"../extent.js";import{transformExtentWithOptions,transformGeometryWithOptions}from"./Feature.js";import GMLBase,{GMLNS}from"./GMLBase.js";import{writeStringTextNode}from"./xsd.js";import{assign}from"../obj.js";import{get as getProjection}from"../proj.js";import{createElementNS,getAllTextContent,makeArrayPusher,makeChildAppender,makeReplacer,makeSimpleNodeFactory,OBJECT_PROPERTY_NODE_FACTORY,pushParseAndPop,pushSerializeAndPop}from"../xml.js";const schemaLocation=GMLNS+" http://schemas.opengis.net/gml/2.1.2/feature.xsd",MULTIGEOMETRY_TO_MEMBER_NODENAME={MultiLineString:"lineStringMember",MultiCurve:"curveMember",MultiPolygon:"polygonMember",MultiSurface:"surfaceMember"};class GML2 extends GMLBase{constructor(e){e=e||{};super(e),this.FEATURE_COLLECTION_PARSERS[GMLNS].featureMember=makeArrayPusher(this.readFeaturesInternal),this.schemaLocation=e.schemaLocation||schemaLocation}readFlatCoordinates_(e,t){const r=getAllTextContent(e,!1).replace(/^\s*|\s*$/g,"");e=t[0].srsName;let i="enu";if(e){const l=getProjection(e);l&&(i=l.getAxisOrientation())}const n=r.trim().split(/\s+/),o=[];for(let e=0,t=n.length;e<t;e++){var a=n[e].split(/,+/),s=parseFloat(a[0]),p=parseFloat(a[1]),a=3===a.length?parseFloat(a[2]):0;"en"===i.substr(0,2)?o.push(s,p,a):o.push(p,s,a)}return o}readBox_(e,t){e=pushParseAndPop([null],this.BOX_PARSERS_,e,t,this);return createOrUpdate(e[1][0],e[1][1],e[1][3],e[1][4])}innerBoundaryIsParser_(e,t){e=pushParseAndPop(void 0,this.RING_PARSERS,e,t,this);if(e){const r=t[t.length-1];r.push(e)}}outerBoundaryIsParser_(e,t){e=pushParseAndPop(void 0,this.RING_PARSERS,e,t,this);if(e){const r=t[t.length-1];r[0]=e}}GEOMETRY_NODE_FACTORY_(e,t,r){var t=t[t.length-1],i=t.multiSurface,n=t.surface,t=t.multiCurve;let o;return Array.isArray(e)?o="Envelope":"MultiPolygon"===(o=e.getType())&&!0===i?o="MultiSurface":"Polygon"===o&&!0===n?o="Surface":"MultiLineString"===o&&!0===t&&(o="MultiCurve"),createElementNS("http://www.opengis.net/gml",o)}writeFeatureElement(e,t,r){var i=t.getId();i&&e.setAttribute("fid",i);const n=r[r.length-1];var o=n.featureNS,a=t.getGeometryName(),s=(n.serializers||(n.serializers={},n.serializers[o]={}),t.getProperties());const p=[],l=[];for(const h in s){var d=s[h];null!==d&&(p.push(h),l.push(d),h==a||"function"==typeof d.getSimplifiedGeometry?h in n.serializers[o]||(n.serializers[o][h]=makeChildAppender(this.writeGeometryElement,this)):h in n.serializers[o]||(n.serializers[o][h]=makeChildAppender(writeStringTextNode)))}const m=assign({},n);m.node=e,pushSerializeAndPop(m,n.serializers,makeSimpleNodeFactory(void 0,o),l,r,p)}writeCurveOrLineString_(e,t,r){var i=r[r.length-1].srsName;"LineStringSegment"!==e.nodeName&&i&&e.setAttribute("srsName",i),"LineString"===e.nodeName||"LineStringSegment"===e.nodeName?(i=this.createCoordinatesNode_(e.namespaceURI),e.appendChild(i),this.writeCoordinates_(i,t,r)):"Curve"===e.nodeName&&(i=createElementNS(e.namespaceURI,"segments"),e.appendChild(i),this.writeCurveSegments_(i,t,r))}writeLineStringOrCurveMember_(e,t,r){var i=this.GEOMETRY_NODE_FACTORY_(t,r);i&&(e.appendChild(i),this.writeCurveOrLineString_(i,t,r))}writeMultiCurveOrLineString_(e,t,r){var i=r[r.length-1],n=i.hasZ,o=i.srsName,i=i.curve,t=(o&&e.setAttribute("srsName",o),t.getLineStrings());pushSerializeAndPop({node:e,hasZ:n,srsName:o,curve:i},this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,t,r,void 0,this)}writeGeometryElement(e,t,r){var i=r[r.length-1];const n=assign({},i);n.node=e;let o;o=Array.isArray(t)?transformExtentWithOptions(t,i):transformGeometryWithOptions(t,!0,i),pushSerializeAndPop(n,this.GEOMETRY_SERIALIZERS_,this.GEOMETRY_NODE_FACTORY_,[o],r,void 0,this)}createCoordinatesNode_(e){const t=createElementNS(e,"coordinates");return t.setAttribute("decimal","."),t.setAttribute("cs",","),t.setAttribute("ts"," "),t}writeCoordinates_(e,t,r){var r=r[r.length-1],i=r.hasZ,n=r.srsName,o=t.getCoordinates(),a=o.length;const s=new Array(a);for(let e=0;e<a;++e){var p=o[e];s[e]=this.getCoords_(p,n,i)}writeStringTextNode(e,s.join(" "))}writeCurveSegments_(e,t,r){var i=createElementNS(e.namespaceURI,"LineStringSegment");e.appendChild(i),this.writeCurveOrLineString_(i,t,r)}writeSurfaceOrPolygon_(e,t,r){var i,n=r[r.length-1],o=n.hasZ,n=n.srsName;"PolygonPatch"!==e.nodeName&&n&&e.setAttribute("srsName",n),"Polygon"===e.nodeName||"PolygonPatch"===e.nodeName?(i=t.getLinearRings(),pushSerializeAndPop({node:e,hasZ:o,srsName:n},this.RING_SERIALIZERS_,this.RING_NODE_FACTORY_,i,r,void 0,this)):"Surface"===e.nodeName&&(o=createElementNS(e.namespaceURI,"patches"),e.appendChild(o),this.writeSurfacePatches_(o,t,r))}RING_NODE_FACTORY_(e,t,r){const i=t[t.length-1];var t=i.node,n=i.exteriorWritten;return void 0===n&&(i.exteriorWritten=!0),createElementNS(t.namespaceURI,void 0!==n?"innerBoundaryIs":"outerBoundaryIs")}writeSurfacePatches_(e,t,r){var i=createElementNS(e.namespaceURI,"PolygonPatch");e.appendChild(i),this.writeSurfaceOrPolygon_(i,t,r)}writeRing_(e,t,r){var i=createElementNS(e.namespaceURI,"LinearRing");e.appendChild(i),this.writeLinearRing_(i,t,r)}getCoords_(e,t,r){let i="enu",n="en"===(i=t?getProjection(t).getAxisOrientation():i).substr(0,2)?e[0]+","+e[1]:e[1]+","+e[0];return r&&(t=e[2]||0,n+=","+t),n}writePoint_(e,t,r){var r=r[r.length-1],i=r.hasZ,r=r.srsName,n=(r&&e.setAttribute("srsName",r),this.createCoordinatesNode_(e.namespaceURI)),e=(e.appendChild(n),t.getCoordinates()),t=this.getCoords_(e,r,i);writeStringTextNode(n,t)}writeMultiPoint_(e,t,r){var i=r[r.length-1],n=i.hasZ,i=i.srsName,t=(i&&e.setAttribute("srsName",i),t.getPoints());pushSerializeAndPop({node:e,hasZ:n,srsName:i},this.POINTMEMBER_SERIALIZERS_,makeSimpleNodeFactory("pointMember"),t,r,void 0,this)}writePointMember_(e,t,r){var i=createElementNS(e.namespaceURI,"Point");e.appendChild(i),this.writePoint_(i,t,r)}writeLinearRing_(e,t,r){var i=r[r.length-1].srsName,i=(i&&e.setAttribute("srsName",i),this.createCoordinatesNode_(e.namespaceURI));e.appendChild(i),this.writeCoordinates_(i,t,r)}writeMultiSurfaceOrPolygon_(e,t,r){var i=r[r.length-1],n=i.hasZ,o=i.srsName,i=i.surface,t=(o&&e.setAttribute("srsName",o),t.getPolygons());pushSerializeAndPop({node:e,hasZ:n,srsName:o,surface:i},this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,t,r,void 0,this)}writeSurfaceOrPolygonMember_(e,t,r){var i=this.GEOMETRY_NODE_FACTORY_(t,r);i&&(e.appendChild(i),this.writeSurfaceOrPolygon_(i,t,r))}writeEnvelope(e,t,r){var i=r[r.length-1].srsName,i=(i&&e.setAttribute("srsName",i),[t[0]+" "+t[1],t[2]+" "+t[3]]);pushSerializeAndPop({node:e},this.ENVELOPE_SERIALIZERS_,OBJECT_PROPERTY_NODE_FACTORY,i,r,["lowerCorner","upperCorner"],this)}MULTIGEOMETRY_MEMBER_NODE_FACTORY_(e,t,r){t=t[t.length-1].node;return createElementNS("http://www.opengis.net/gml",MULTIGEOMETRY_TO_MEMBER_NODENAME[t.nodeName])}}GML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS={"http://www.opengis.net/gml":{coordinates:makeReplacer(GML2.prototype.readFlatCoordinates_)}},GML2.prototype.FLAT_LINEAR_RINGS_PARSERS={"http://www.opengis.net/gml":{innerBoundaryIs:GML2.prototype.innerBoundaryIsParser_,outerBoundaryIs:GML2.prototype.outerBoundaryIsParser_}},GML2.prototype.BOX_PARSERS_={"http://www.opengis.net/gml":{coordinates:makeArrayPusher(GML2.prototype.readFlatCoordinates_)}},GML2.prototype.GEOMETRY_PARSERS={"http://www.opengis.net/gml":{Point:makeReplacer(GMLBase.prototype.readPoint),MultiPoint:makeReplacer(GMLBase.prototype.readMultiPoint),LineString:makeReplacer(GMLBase.prototype.readLineString),MultiLineString:makeReplacer(GMLBase.prototype.readMultiLineString),LinearRing:makeReplacer(GMLBase.prototype.readLinearRing),Polygon:makeReplacer(GMLBase.prototype.readPolygon),MultiPolygon:makeReplacer(GMLBase.prototype.readMultiPolygon),Box:makeReplacer(GML2.prototype.readBox_)}},GML2.prototype.GEOMETRY_SERIALIZERS_={"http://www.opengis.net/gml":{Curve:makeChildAppender(GML2.prototype.writeCurveOrLineString_),MultiCurve:makeChildAppender(GML2.prototype.writeMultiCurveOrLineString_),Point:makeChildAppender(GML2.prototype.writePoint_),MultiPoint:makeChildAppender(GML2.prototype.writeMultiPoint_),LineString:makeChildAppender(GML2.prototype.writeCurveOrLineString_),MultiLineString:makeChildAppender(GML2.prototype.writeMultiCurveOrLineString_),LinearRing:makeChildAppender(GML2.prototype.writeLinearRing_),Polygon:makeChildAppender(GML2.prototype.writeSurfaceOrPolygon_),MultiPolygon:makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon_),Surface:makeChildAppender(GML2.prototype.writeSurfaceOrPolygon_),MultiSurface:makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon_),Envelope:makeChildAppender(GML2.prototype.writeEnvelope)}},GML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_={"http://www.opengis.net/gml":{lineStringMember:makeChildAppender(GML2.prototype.writeLineStringOrCurveMember_),curveMember:makeChildAppender(GML2.prototype.writeLineStringOrCurveMember_)}},GML2.prototype.RING_SERIALIZERS_={"http://www.opengis.net/gml":{outerBoundaryIs:makeChildAppender(GML2.prototype.writeRing_),innerBoundaryIs:makeChildAppender(GML2.prototype.writeRing_)}},GML2.prototype.POINTMEMBER_SERIALIZERS_={"http://www.opengis.net/gml":{pointMember:makeChildAppender(GML2.prototype.writePointMember_)}},GML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_={"http://www.opengis.net/gml":{surfaceMember:makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember_),polygonMember:makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember_)}},GML2.prototype.ENVELOPE_SERIALIZERS_={"http://www.opengis.net/gml":{lowerCorner:makeChildAppender(writeStringTextNode),upperCorner:makeChildAppender(writeStringTextNode)}};export default GML2;