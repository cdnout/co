import{extend,includes}from"../array.js";import GML2 from"./GML2.js";import XMLFeature from"./XMLFeature.js";import{assign}from"../obj.js";import{makeArrayPusher,makeStructureNS,pushParseAndPop}from"../xml.js";const featureIdentifier="_feature",layerIdentifier="_layer";class WMSGetFeatureInfo extends XMLFeature{constructor(e){super();e=e||{};this.featureNS_="http://mapserver.gis.umn.edu/mapserver",this.gmlFormat_=new GML2,this.layers_=e.layers||null}getLayers(){return this.layers_}setLayers(e){this.layers_=e}readFeatures_(t,a){t.setAttribute("namespaceURI",this.featureNS_);var e=t.localName;let s=[];if(0===t.childNodes.length)return s;if("msGMLOutput"==e)for(let e=0,r=t.childNodes.length;e<r;e++){var i=t.childNodes[e];if(i.nodeType===Node.ELEMENT_NODE){const u=i,o=a[0];i=layerIdentifier,i=u.localName.replace(i,"");if(!this.layers_||includes(this.layers_,i)){i=i+featureIdentifier;o.featureType=i,o.featureNS=this.featureNS_;const l={};l[i]=makeArrayPusher(this.gmlFormat_.readFeatureElement,this.gmlFormat_);i=makeStructureNS([o.featureNS,null],l),i=(u.setAttribute("namespaceURI",this.featureNS_),pushParseAndPop([],i,u,a,this.gmlFormat_));i&&extend(s,i)}}}return s="FeatureCollection"==e&&(e=pushParseAndPop([],this.gmlFormat_.FEATURE_COLLECTION_PARSERS,t,[{}],this.gmlFormat_))?e:s}readFeaturesFromNode(e,r){var t={};return r&&assign(t,this.getReadOptions(e,r)),this.readFeatures_(e,[t])}}export default WMSGetFeatureInfo;