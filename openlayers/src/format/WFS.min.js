import{assert}from"../asserts.js";import GML2 from"./GML2.js";import GML3 from"./GML3.js";import GMLBase,{GMLNS}from"./GMLBase.js";import{and as andFilter,bbox as bboxFilter}from"./filter.js";import XMLFeature from"./XMLFeature.js";import{readNonNegativeIntegerString,readNonNegativeInteger,writeStringTextNode}from"./xsd.js";import{assign}from"../obj.js";import{get as getProjection}from"../proj.js";import{createElementNS,isDocument,makeArrayPusher,makeChildAppender,makeObjectPropertySetter,makeSimpleNodeFactory,parse,parseNode,pushParseAndPop,pushSerializeAndPop,XML_SCHEMA_INSTANCE_URI}from"../xml.js";const FEATURE_COLLECTION_PARSERS={"http://www.opengis.net/gml":{boundedBy:makeObjectPropertySetter(GMLBase.prototype.readGeometryElement,"bounds")}},TRANSACTION_SUMMARY_PARSERS={"http://www.opengis.net/wfs":{totalInserted:makeObjectPropertySetter(readNonNegativeInteger),totalUpdated:makeObjectPropertySetter(readNonNegativeInteger),totalDeleted:makeObjectPropertySetter(readNonNegativeInteger)}},TRANSACTION_RESPONSE_PARSERS={"http://www.opengis.net/wfs":{TransactionSummary:makeObjectPropertySetter(readTransactionSummary,"transactionSummary"),InsertResults:makeObjectPropertySetter(readInsertResults,"insertIds")}},QUERY_SERIALIZERS={"http://www.opengis.net/wfs":{PropertyName:makeChildAppender(writeStringTextNode)}},TRANSACTION_SERIALIZERS={"http://www.opengis.net/wfs":{Insert:makeChildAppender(writeFeature),Update:makeChildAppender(writeUpdate),Delete:makeChildAppender(writeDelete),Property:makeChildAppender(writeProperty),Native:makeChildAppender(writeNative)}},FEATURE_PREFIX="feature",XMLNS="http://www.w3.org/2000/xmlns/",OGCNS="http://www.opengis.net/ogc",WFSNS="http://www.opengis.net/wfs",FESNS="http://www.opengis.net/fes",SCHEMA_LOCATIONS={"1.1.0":"http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd","1.0.0":"http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd"},DEFAULT_VERSION="1.1.0";class WFS extends XMLFeature{constructor(e){super();e=e||{};this.featureType_=e.featureType,this.featureNS_=e.featureNS,this.gmlFormat_=e.gmlFormat||new GML3,this.schemaLocation_=e.schemaLocation||SCHEMA_LOCATIONS[DEFAULT_VERSION]}getFeatureType(){return this.featureType_}setFeatureType(e){this.featureType_=e}readFeaturesFromNode(e,t){var r={node:e},t=(assign(r,{featureType:this.featureType_,featureNS:this.featureNS_}),assign(r,this.getReadOptions(e,t||{})),[r]);this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLNS].featureMember=makeArrayPusher(GMLBase.prototype.readFeaturesInternal);let i=pushParseAndPop([],this.gmlFormat_.FEATURE_COLLECTION_PARSERS,e,t,this.gmlFormat_);return i=i||[]}readTransactionResponse(e){var t;if(e)return"string"==typeof e?(t=parse(e),this.readTransactionResponseFromDocument(t)):isDocument(e)?this.readTransactionResponseFromDocument(e):this.readTransactionResponseFromNode(e)}readFeatureCollectionMetadata(e){var t;if(e)return"string"==typeof e?(t=parse(e),this.readFeatureCollectionMetadataFromDocument(t)):isDocument(e)?this.readFeatureCollectionMetadataFromDocument(e):this.readFeatureCollectionMetadataFromNode(e)}readFeatureCollectionMetadataFromDocument(t){for(let e=t.firstChild;e;e=e.nextSibling)if(e.nodeType==Node.ELEMENT_NODE)return this.readFeatureCollectionMetadataFromNode(e)}readFeatureCollectionMetadataFromNode(e){const t={};var r=readNonNegativeIntegerString(e.getAttribute("numberOfFeatures"));return t.numberOfFeatures=r,pushParseAndPop(t,FEATURE_COLLECTION_PARSERS,e,[],this.gmlFormat_)}readTransactionResponseFromDocument(t){for(let e=t.firstChild;e;e=e.nextSibling)if(e.nodeType==Node.ELEMENT_NODE)return this.readTransactionResponseFromNode(e)}readTransactionResponseFromNode(e){return pushParseAndPop({},TRANSACTION_RESPONSE_PARSERS,e,[])}writeGetFeature(e){const t=createElementNS(WFSNS,"GetFeature");t.setAttribute("service","WFS"),t.setAttribute("version","1.1.0");let r;e&&(e.handle&&t.setAttribute("handle",e.handle),e.outputFormat&&t.setAttribute("outputFormat",e.outputFormat),void 0!==e.maxFeatures&&t.setAttribute("maxFeatures",String(e.maxFeatures)),e.resultType&&t.setAttribute("resultType",e.resultType),void 0!==e.startIndex&&t.setAttribute("startIndex",String(e.startIndex)),void 0!==e.count&&t.setAttribute("count",String(e.count)),void 0!==e.viewParams&&t.setAttribute("viewParams",e.viewParams),r=e.filter,e.bbox&&(assert(e.geometryName,12),i=bboxFilter(e.geometryName,e.bbox,e.srsName),r=r?andFilter(r,i):i)),t.setAttributeNS(XML_SCHEMA_INSTANCE_URI,"xsi:schemaLocation",this.schemaLocation_);var i={node:t};return assign(i,{srsName:e.srsName,featureNS:e.featureNS||this.featureNS_,featurePrefix:e.featurePrefix,geometryName:e.geometryName,filter:r,propertyNames:e.propertyNames||[]}),assert(Array.isArray(e.featureTypes),11),writeGetFeature(t,e.featureTypes,[i]),t}writeTransaction(e,t,r,i){var a=[];const n=createElementNS(WFSNS,"Transaction");var o=i.version||DEFAULT_VERSION,s="1.0.0"===o?2:3;n.setAttribute("service","WFS"),n.setAttribute("version",o);let p,m;i&&(p=i.gmlOptions||{},i.handle&&n.setAttribute("handle",i.handle));o=SCHEMA_LOCATIONS[o],n.setAttributeNS(XML_SCHEMA_INSTANCE_URI,"xsi:schemaLocation",o),o=i.featurePrefix||FEATURE_PREFIX;return e&&(m=assign({node:n},{featureNS:i.featureNS,featureType:i.featureType,featurePrefix:o,gmlVersion:s,hasZ:i.hasZ,srsName:i.srsName}),assign(m,p),pushSerializeAndPop(m,TRANSACTION_SERIALIZERS,makeSimpleNodeFactory("Insert"),e,a)),t&&(m=assign({node:n},{featureNS:i.featureNS,featureType:i.featureType,featurePrefix:o,gmlVersion:s,hasZ:i.hasZ,srsName:i.srsName}),assign(m,p),pushSerializeAndPop(m,TRANSACTION_SERIALIZERS,makeSimpleNodeFactory("Update"),t,a)),r&&pushSerializeAndPop({node:n,featureNS:i.featureNS,featureType:i.featureType,featurePrefix:o,gmlVersion:s,srsName:i.srsName},TRANSACTION_SERIALIZERS,makeSimpleNodeFactory("Delete"),r,a),i.nativeElements&&pushSerializeAndPop({node:n,featureNS:i.featureNS,featureType:i.featureType,featurePrefix:o,gmlVersion:s,srsName:i.srsName},TRANSACTION_SERIALIZERS,makeSimpleNodeFactory("Native"),i.nativeElements,a),n}readProjectionFromDocument(t){for(let e=t.firstChild;e;e=e.nextSibling)if(e.nodeType==Node.ELEMENT_NODE)return this.readProjectionFromNode(e);return null}readProjectionFromNode(t){if(t.firstElementChild&&t.firstElementChild.firstElementChild)for(let e=(t=t.firstElementChild.firstElementChild).firstElementChild;e;e=e.nextElementSibling)if(0!==e.childNodes.length&&(1!==e.childNodes.length||3!==e.firstChild.nodeType)){const r=[{}];return this.gmlFormat_.readGeometryElement(e,r),getProjection(r.pop().srsName)}return null}}function readTransactionSummary(e,t){return pushParseAndPop({},TRANSACTION_SUMMARY_PARSERS,e,t)}const OGC_FID_PARSERS={"http://www.opengis.net/ogc":{FeatureId:makeArrayPusher(function(e,t){return e.getAttribute("fid")})}};function fidParser(e,t){parseNode(OGC_FID_PARSERS,e,t)}const INSERT_RESULTS_PARSERS={"http://www.opengis.net/wfs":{Feature:fidParser}};function readInsertResults(e,t){return pushParseAndPop([],INSERT_RESULTS_PARSERS,e,t)}function writeFeature(e,t,r){var i=r[r.length-1],a=i.featureType,n=i.featureNS,i=i.gmlVersion,n=createElementNS(n,a);e.appendChild(n),(2===i?GML2:GML3).prototype.writeFeatureElement(n,t,r)}function writeOgcFidFilter(e,t,r){const i=createElementNS(OGCNS,"Filter"),a=createElementNS(OGCNS,"FeatureId");i.appendChild(a),a.setAttribute("fid",t),e.appendChild(i)}function getTypeName(e,t){e=(e=e||FEATURE_PREFIX)+":";return 0===t.indexOf(e)?t:e+t}function writeDelete(e,t,r){var i=r[r.length-1],a=(assert(void 0!==t.getId(),26),i.featureType),n=i.featurePrefix,i=i.featureNS,a=getTypeName(n,a),a=(e.setAttribute("typeName",a),e.setAttributeNS(XMLNS,"xmlns:"+n,i),t.getId());void 0!==a&&writeOgcFidFilter(e,a,r)}function writeUpdate(e,r,t){var i=t[t.length-1],a=(assert(void 0!==r.getId(),27),i.featureType),n=i.featurePrefix,o=i.featureNS,a=getTypeName(n,a),s=r.getGeometryName(),a=(e.setAttribute("typeName",a),e.setAttributeNS(XMLNS,"xmlns:"+n,o),r.getId());if(void 0!==a){var p=r.getKeys();const l=[];for(let t=0,e=p.length;t<e;t++){var m=r.get(p[t]);if(void 0!==m){let e=p[t];m&&"function"==typeof m.getSimplifiedGeometry&&(e=s),l.push({name:e,value:m})}}pushSerializeAndPop({gmlVersion:i.gmlVersion,node:e,hasZ:i.hasZ,srsName:i.srsName},TRANSACTION_SERIALIZERS,makeSimpleNodeFactory("Property"),l,t),writeOgcFidFilter(e,a,t)}}function writeProperty(e,t,r){var i=createElementNS(WFSNS,"Name"),a=r[r.length-1].gmlVersion;e.appendChild(i),writeStringTextNode(i,t.name),void 0!==t.value&&null!==t.value&&(i=createElementNS(WFSNS,"Value"),e.appendChild(i),t.value&&"function"==typeof t.value.getSimplifiedGeometry?(2===a?GML2:GML3).prototype.writeGeometryElement(i,t.value,r):writeStringTextNode(i,t.value))}function writeNative(e,t,r){t.vendorId&&e.setAttribute("vendorId",t.vendorId),void 0!==t.safeToIgnore&&e.setAttribute("safeToIgnore",String(t.safeToIgnore)),void 0!==t.value&&writeStringTextNode(e,t.value)}const GETFEATURE_SERIALIZERS={"http://www.opengis.net/wfs":{Query:makeChildAppender(writeQuery)},"http://www.opengis.net/ogc":{During:makeChildAppender(writeDuringFilter),And:makeChildAppender(writeLogicalFilter),Or:makeChildAppender(writeLogicalFilter),Not:makeChildAppender(writeNotFilter),BBOX:makeChildAppender(writeBboxFilter),Contains:makeChildAppender(writeContainsFilter),Intersects:makeChildAppender(writeIntersectsFilter),Within:makeChildAppender(writeWithinFilter),PropertyIsEqualTo:makeChildAppender(writeComparisonFilter),PropertyIsNotEqualTo:makeChildAppender(writeComparisonFilter),PropertyIsLessThan:makeChildAppender(writeComparisonFilter),PropertyIsLessThanOrEqualTo:makeChildAppender(writeComparisonFilter),PropertyIsGreaterThan:makeChildAppender(writeComparisonFilter),PropertyIsGreaterThanOrEqualTo:makeChildAppender(writeComparisonFilter),PropertyIsNull:makeChildAppender(writeIsNullFilter),PropertyIsBetween:makeChildAppender(writeIsBetweenFilter),PropertyIsLike:makeChildAppender(writeIsLikeFilter)}};function writeQuery(e,t,r){var i=r[r.length-1],a=i.featurePrefix,n=i.featureNS,o=i.propertyNames,s=i.srsName;let p;p=a?getTypeName(a,t):t,e.setAttribute("typeName",p),s&&e.setAttribute("srsName",s),n&&e.setAttributeNS(XMLNS,"xmlns:"+a,n);const m=assign({},i);m.node=e,pushSerializeAndPop(m,QUERY_SERIALIZERS,makeSimpleNodeFactory("PropertyName"),o,r);t=i.filter;t&&(s=createElementNS(OGCNS,"Filter"),e.appendChild(s),writeFilterCondition(s,t,r))}function writeFilterCondition(e,t,r){pushSerializeAndPop({node:e},GETFEATURE_SERIALIZERS,makeSimpleNodeFactory(t.getTagName()),[t],r)}function writeBboxFilter(e,t,r){const i=r[r.length-1];i.srsName=t.srsName,writeOgcPropertyName(e,t.geometryName),GML3.prototype.writeGeometryElement(e,t.extent,r)}function writeContainsFilter(e,t,r){const i=r[r.length-1];i.srsName=t.srsName,writeOgcPropertyName(e,t.geometryName),GML3.prototype.writeGeometryElement(e,t.geometry,r)}function writeIntersectsFilter(e,t,r){const i=r[r.length-1];i.srsName=t.srsName,writeOgcPropertyName(e,t.geometryName),GML3.prototype.writeGeometryElement(e,t.geometry,r)}function writeWithinFilter(e,t,r){const i=r[r.length-1];i.srsName=t.srsName,writeOgcPropertyName(e,t.geometryName),GML3.prototype.writeGeometryElement(e,t.geometry,r)}function writeDuringFilter(e,t,r){var i=createElementNS(FESNS,"ValueReference");writeStringTextNode(i,t.propertyName),e.appendChild(i);const a=createElementNS(GMLNS,"TimePeriod");e.appendChild(a);i=createElementNS(GMLNS,"begin"),a.appendChild(i),writeTimeInstant(i,t.begin),e=createElementNS(GMLNS,"end");a.appendChild(e),writeTimeInstant(e,t.end)}function writeLogicalFilter(e,t,r){var i={node:e},a=t.conditions;for(let e=0,t=a.length;e<t;++e){const n=a[e];pushSerializeAndPop(i,GETFEATURE_SERIALIZERS,makeSimpleNodeFactory(n.getTagName()),[n],r)}}function writeNotFilter(e,t,r){const i=t.condition;pushSerializeAndPop({node:e},GETFEATURE_SERIALIZERS,makeSimpleNodeFactory(i.getTagName()),[i],r)}function writeComparisonFilter(e,t,r){void 0!==t.matchCase&&e.setAttribute("matchCase",t.matchCase.toString()),writeOgcPropertyName(e,t.propertyName),writeOgcLiteral(e,""+t.expression)}function writeIsNullFilter(e,t,r){writeOgcPropertyName(e,t.propertyName)}function writeIsBetweenFilter(e,t,r){writeOgcPropertyName(e,t.propertyName);var i=createElementNS(OGCNS,"LowerBoundary"),i=(e.appendChild(i),writeOgcLiteral(i,""+t.lowerBoundary),createElementNS(OGCNS,"UpperBoundary"));e.appendChild(i),writeOgcLiteral(i,""+t.upperBoundary)}function writeIsLikeFilter(e,t,r){e.setAttribute("wildCard",t.wildCard),e.setAttribute("singleChar",t.singleChar),e.setAttribute("escapeChar",t.escapeChar),void 0!==t.matchCase&&e.setAttribute("matchCase",t.matchCase.toString()),writeOgcPropertyName(e,t.propertyName),writeOgcLiteral(e,""+t.pattern)}function writeOgcExpression(e,t,r){e=createElementNS(OGCNS,e);writeStringTextNode(e,r),t.appendChild(e)}function writeOgcPropertyName(e,t){writeOgcExpression("PropertyName",e,t)}function writeOgcLiteral(e,t){writeOgcExpression("Literal",e,t)}function writeTimeInstant(e,t){const r=createElementNS(GMLNS,"TimeInstant");e.appendChild(r);e=createElementNS(GMLNS,"timePosition");r.appendChild(e),writeStringTextNode(e,t)}function writeFilter(e){var t=createElementNS(OGCNS,"Filter");return writeFilterCondition(t,e,[]),t}function writeGetFeature(e,t,r){var i=r[r.length-1];const a=assign({},i);a.node=e,pushSerializeAndPop(a,GETFEATURE_SERIALIZERS,makeSimpleNodeFactory("Query"),t,r)}export default WFS;export{writeFilter};