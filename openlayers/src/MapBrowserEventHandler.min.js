import"@openlayers/pepjs";import{DEVICE_PIXEL_RATIO}from"./has.js";import MapBrowserEventType from"./MapBrowserEventType.js";import MapBrowserPointerEvent from"./MapBrowserPointerEvent.js";import{listen,unlistenByKey}from"./events.js";import EventTarget from"./events/Target.js";import PointerEventType from"./pointer/EventType.js";class MapBrowserEventHandler extends EventTarget{constructor(e,t){super(),this.map_=e,this.clickTimeoutId_,this.dragging_=!1,this.dragListenerKeys_=[],this.moveTolerance_=t?t*DEVICE_PIXEL_RATIO:DEVICE_PIXEL_RATIO,this.down_=null;const i=this.map_.getViewport();i.setAttribute("touch-action","none"),this.activePointers_=0,this.trackedTouches_={},this.element_=i,this.pointerdownListenerKey_=listen(i,PointerEventType.POINTERDOWN,this.handlePointerDown_,this),this.relayedListenerKey_=listen(i,PointerEventType.POINTERMOVE,this.relayEvent_,this)}emulateClick_(t){var e=new MapBrowserPointerEvent(MapBrowserEventType.CLICK,this.map_,t);this.dispatchEvent(e),void 0!==this.clickTimeoutId_?(clearTimeout(this.clickTimeoutId_),this.clickTimeoutId_=void 0,e=new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK,this.map_,t),this.dispatchEvent(e)):this.clickTimeoutId_=setTimeout(function(){this.clickTimeoutId_=void 0;var e=new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK,this.map_,t);this.dispatchEvent(e)}.bind(this),250)}updateActivePointers_(e){e.type==MapBrowserEventType.POINTERUP||e.type==MapBrowserEventType.POINTERCANCEL?delete this.trackedTouches_[e.pointerId]:e.type==MapBrowserEventType.POINTERDOWN&&(this.trackedTouches_[e.pointerId]=!0),this.activePointers_=Object.keys(this.trackedTouches_).length}handlePointerUp_(e){this.updateActivePointers_(e);var t=new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP,this.map_,e);this.dispatchEvent(t),t.propagationStopped||this.dragging_||!this.isMouseActionButton_(e)||this.emulateClick_(this.down_),0===this.activePointers_&&(this.dragListenerKeys_.forEach(unlistenByKey),this.dragListenerKeys_.length=0,this.dragging_=!1,this.down_=null)}isMouseActionButton_(e){return 0===e.button}handlePointerDown_(e){this.updateActivePointers_(e);var t=new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN,this.map_,e);this.dispatchEvent(t),this.down_=e,0===this.dragListenerKeys_.length&&this.dragListenerKeys_.push(listen(document,MapBrowserEventType.POINTERMOVE,this.handlePointerMove_,this),listen(document,MapBrowserEventType.POINTERUP,this.handlePointerUp_,this),listen(this.element_,MapBrowserEventType.POINTERCANCEL,this.handlePointerUp_,this))}handlePointerMove_(e){this.isMoving_(e)&&(this.dragging_=!0,e=new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG,this.map_,e,this.dragging_),this.dispatchEvent(e))}relayEvent_(e){var t=!(!this.down_||!this.isMoving_(e));this.dispatchEvent(new MapBrowserPointerEvent(e.type,this.map_,e,t))}isMoving_(e){return this.dragging_||Math.abs(e.clientX-this.down_.clientX)>this.moveTolerance_||Math.abs(e.clientY-this.down_.clientY)>this.moveTolerance_}disposeInternal(){this.relayedListenerKey_&&(unlistenByKey(this.relayedListenerKey_),this.relayedListenerKey_=null),this.pointerdownListenerKey_&&(unlistenByKey(this.pointerdownListenerKey_),this.pointerdownListenerKey_=null),this.dragListenerKeys_.forEach(unlistenByKey),this.dragListenerKeys_.length=0,this.element_=null,super.disposeInternal()}}export default MapBrowserEventHandler;