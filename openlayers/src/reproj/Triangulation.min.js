import{boundingExtent,createEmpty,extendCoordinate,getBottomLeft,getBottomRight,getTopLeft,getTopRight,getWidth,intersects}from"../extent.js";import{modulo}from"../math.js";import{getTransform}from"../proj.js";const MAX_SUBDIVISION=10,MAX_TRIANGLE_WIDTH=.25;class Triangulation{constructor(t,r,i,e,s){this.sourceProj_=t,this.targetProj_=r;let o={};const n=getTransform(this.targetProj_,this.sourceProj_);this.transformInv_=function(t){var r=t[0]+"/"+t[1];return o[r]||(o[r]=n(t)),o[r]},this.maxSourceExtent_=e,this.errorThresholdSquared_=s*s,this.triangles_=[],this.wrapsXInSource_=!1,this.canWrapXInSource_=this.sourceProj_.canWrapX()&&!!e&&!!this.sourceProj_.getExtent()&&getWidth(e)==getWidth(this.sourceProj_.getExtent()),this.sourceWorldWidth_=this.sourceProj_.getExtent()?getWidth(this.sourceProj_.getExtent()):null,this.targetWorldWidth_=this.targetProj_.getExtent()?getWidth(this.targetProj_.getExtent()):null;var t=getTopLeft(i),r=getTopRight(i),s=getBottomRight(i),e=getBottomLeft(i),i=this.transformInv_(t),h=this.transformInv_(r),a=this.transformInv_(s),d=this.transformInv_(e);if(this.addQuad_(t,r,s,e,i,h,a,d,MAX_SUBDIVISION),this.wrapsXInSource_){let e=1/0;this.triangles_.forEach(function(t,r,i){e=Math.min(e,t.source[0][0],t.source[1][0],t.source[2][0])}),this.triangles_.forEach(function(t){if(Math.max(t.source[0][0],t.source[1][0],t.source[2][0])-e>this.sourceWorldWidth_/2){const i=[[t.source[0][0],t.source[0][1]],[t.source[1][0],t.source[1][1]],[t.source[2][0],t.source[2][1]]];i[0][0]-e>this.sourceWorldWidth_/2&&(i[0][0]-=this.sourceWorldWidth_),i[1][0]-e>this.sourceWorldWidth_/2&&(i[1][0]-=this.sourceWorldWidth_),i[2][0]-e>this.sourceWorldWidth_/2&&(i[2][0]-=this.sourceWorldWidth_);var r=Math.min(i[0][0],i[1][0],i[2][0]);Math.max(i[0][0],i[1][0],i[2][0])-r<this.sourceWorldWidth_/2&&(t.source=i)}}.bind(this))}o={}}addTriangle_(t,r,i,e,s,o){this.triangles_.push({source:[e,s,o],target:[t,r,i]})}addQuad_(r,t,i,e,s,o,n,h,a){var d=boundingExtent([s,o,n,h]),u=this.sourceWorldWidth_?getWidth(d)/this.sourceWorldWidth_:null,_=this.sourceWorldWidth_,c=this.sourceProj_.canWrapX()&&.5<u&&u<1;let g=!1;if(0<a&&(this.targetProj_.isGlobal()&&this.targetWorldWidth_&&(l=boundingExtent([r,t,i,e]),l=getWidth(l)/this.targetWorldWidth_,g=l>MAX_TRIANGLE_WIDTH||g),!c&&this.sourceProj_.isGlobal()&&u&&(g=u>MAX_TRIANGLE_WIDTH||g)),g||!this.maxSourceExtent_||intersects(d,this.maxSourceExtent_)){if(!(g||isFinite(s[0])&&isFinite(s[1])&&isFinite(o[0])&&isFinite(o[1])&&isFinite(n[0])&&isFinite(n[1])&&isFinite(h[0])&&isFinite(h[1]))){if(!(0<a))return;g=!0}if(0<a){if(!g){var l=[(r[0]+i[0])/2,(r[1]+i[1])/2],u=this.transformInv_(l);let t;t=c?(modulo(s[0],_)+modulo(n[0],_))/2-modulo(u[0],_):(s[0]+n[0])/2-u[0];var d=(s[1]+n[1])/2-u[1],l=t*t+d*d;g=l>this.errorThresholdSquared_}if(g)return void(Math.abs(r[0]-i[0])<=Math.abs(r[1]-i[1])?(_=[(t[0]+i[0])/2,(t[1]+i[1])/2],u=this.transformInv_(_),d=[(e[0]+r[0])/2,(e[1]+r[1])/2],l=this.transformInv_(d),this.addQuad_(r,t,_,d,s,o,u,l,a-1),this.addQuad_(d,_,i,e,l,u,n,h,a-1)):(d=[(r[0]+t[0])/2,(r[1]+t[1])/2],_=this.transformInv_(d),l=[(i[0]+e[0])/2,(i[1]+e[1])/2],u=this.transformInv_(l),this.addQuad_(r,d,l,e,s,_,u,h,a-1),this.addQuad_(d,t,i,l,_,o,n,u,a-1)))}if(c){if(!this.canWrapXInSource_)return;this.wrapsXInSource_=!0}this.addTriangle_(r,i,e,s,n,h),this.addTriangle_(r,t,i,s,o,n)}}calculateSourceExtent(){const e=createEmpty();return this.triangles_.forEach(function(t,r,i){t=t.source;extendCoordinate(e,t[0]),extendCoordinate(e,t[1]),extendCoordinate(e,t[2])}),e}getTriangles(){return this.triangles_}}export default Triangulation;