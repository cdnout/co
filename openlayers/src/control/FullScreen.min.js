import Control from"./Control.js";import{CLASS_CONTROL,CLASS_UNSELECTABLE,CLASS_UNSUPPORTED}from"../css.js";import{replaceNode}from"../dom.js";import{listen}from"../events.js";import EventType from"../events/EventType.js";const events=["fullscreenchange","webkitfullscreenchange","MSFullscreenChange"];class FullScreen extends Control{constructor(e){var e=e||{},t=(super({element:document.createElement("div"),target:e.target}),this.cssClassName_=void 0!==e.className?e.className:"ol-full-screen",void 0!==e.label?e.label:"⤢"),t=(this.labelNode_="string"==typeof t?document.createTextNode(t):t,void 0!==e.labelActive?e.labelActive:"×"),t=(this.labelActiveNode_="string"==typeof t?document.createTextNode(t):t,this.button_=document.createElement("button"),e.tipLabel||"Toggle full-screen"),t=(this.setClassName_(this.button_,isFullScreen()),this.button_.setAttribute("type","button"),this.button_.title=t,this.button_.appendChild(this.labelNode_),this.button_.addEventListener(EventType.CLICK,this.handleClick_.bind(this),!1),this.cssClassName_+" "+CLASS_UNSELECTABLE+" "+CLASS_CONTROL+" "+(isFullScreenSupported()?"":CLASS_UNSUPPORTED));const s=this.element;s.className=t,s.appendChild(this.button_),this.keys_=void 0!==e.keys&&e.keys,this.source_=e.source}handleClick_(e){e.preventDefault(),this.handleFullScreen_()}handleFullScreen_(){if(isFullScreenSupported()){const t=this.getMap();if(t)if(isFullScreen())exitFullScreen();else{let e;e=this.source_?"string"==typeof this.source_?document.getElementById(this.source_):this.source_:t.getTargetElement(),(this.keys_?requestFullScreenWithKeys:requestFullScreen)(e)}}}handleFullScreenChange_(){const e=this.getMap();isFullScreen()?(this.setClassName_(this.button_,!0),replaceNode(this.labelActiveNode_,this.labelNode_)):(this.setClassName_(this.button_,!1),replaceNode(this.labelNode_,this.labelActiveNode_)),e&&e.updateSize()}setClassName_(e,t){var s=this.cssClassName_+"-true",l=this.cssClassName_+"-false",t=t?s:l;e.classList.remove(s),e.classList.remove(l),e.classList.add(t)}setMap(e){if(super.setMap(e),e)for(let e=0,t=events.length;e<t;++e)this.listenerKeys.push(listen(document,events[e],this.handleFullScreenChange_,this))}}function isFullScreenSupported(){var e=document.body;return!!(e.webkitRequestFullscreen||e.msRequestFullscreen&&document.msFullscreenEnabled||e.requestFullscreen&&document.fullscreenEnabled)}function isFullScreen(){return!!(document.webkitIsFullScreen||document.msFullscreenElement||document.fullscreenElement)}function requestFullScreen(e){e.requestFullscreen?e.requestFullscreen():e.msRequestFullscreen?e.msRequestFullscreen():e.webkitRequestFullscreen&&e.webkitRequestFullscreen()}function requestFullScreenWithKeys(e){e.webkitRequestFullscreen?e.webkitRequestFullscreen():requestFullScreen(e)}function exitFullScreen(){document.exitFullscreen?document.exitFullscreen():document.msExitFullscreen?document.msExitFullscreen():document.webkitExitFullscreen&&document.webkitExitFullscreen()}export default FullScreen;