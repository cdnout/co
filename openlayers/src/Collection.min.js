import AssertionError from"./AssertionError.js";import CollectionEventType from"./CollectionEventType.js";import BaseObject from"./Object.js";import Event from"./events/Event.js";const Property={LENGTH:"length"};class CollectionEvent extends Event{constructor(t,e,r){super(t),this.element=e,this.index=r}}class Collection extends BaseObject{constructor(t,e){if(super(),this.unique_=!!(e||{}).unique,this.array_=t||[],this.unique_)for(let t=0,e=this.array_.length;t<e;++t)this.assertUnique_(this.array_[t],t);this.updateLength_()}clear(){for(;0<this.getLength();)this.pop()}extend(r){for(let t=0,e=r.length;t<e;++t)this.push(r[t]);return this}forEach(r){var i=this.array_;for(let t=0,e=i.length;t<e;++t)r(i[t],t,i)}getArray(){return this.array_}item(t){return this.array_[t]}getLength(){return this.get(Property.LENGTH)}insertAt(t,e){this.unique_&&this.assertUnique_(e),this.array_.splice(t,0,e),this.updateLength_(),this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD,e,t))}pop(){return this.removeAt(this.getLength()-1)}push(t){this.unique_&&this.assertUnique_(t);var e=this.getLength();return this.insertAt(e,t),this.getLength()}remove(r){var i=this.array_;for(let t=0,e=i.length;t<e;++t)if(i[t]===r)return this.removeAt(t)}removeAt(t){var e=this.array_[t];return this.array_.splice(t,1),this.updateLength_(),this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE,e,t)),e}setAt(e,t){var r=this.getLength();if(e<r){this.unique_&&this.assertUnique_(t,e);var i=this.array_[e];this.array_[e]=t,this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE,i,e)),this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD,t,e))}else{for(let t=r;t<e;++t)this.insertAt(t,void 0);this.insertAt(e,t)}}updateLength_(){this.set(Property.LENGTH,this.array_.length)}assertUnique_(r,i){for(let t=0,e=this.array_.length;t<e;++t)if(this.array_[t]===r&&t!==i)throw new AssertionError(58)}}export default Collection;export{CollectionEvent};