function binarySearch(e,r,n){var t,u;const i=n||numberSafeCompareFunction;let f=0,o=e.length,a=!1;for(;f<o;)t=f+(o-f>>1),(u=+i(e[t],r))<0?f=t+1:(o=t,a=!u);return a?f:~f}function numberSafeCompareFunction(e,r){return r<e?1:e<r?-1:0}function includes(e,r){return 0<=e.indexOf(r)}function linearFindNearest(r,n,t){var u=r.length;if(r[0]<=n)return 0;if(n<=r[u-1])return u-1;{let e;if(0<t){for(e=1;e<u;++e)if(r[e]<n)return e-1}else if(t<0){for(e=1;e<u;++e)if(r[e]<=n)return e}else for(e=1;e<u;++e){if(r[e]==n)return e;if(r[e]<n)return r[e-1]-n<n-r[e]?e-1:e}return u-1}}function reverseSubArray(e,r,n){for(;r<n;){var t=e[r];e[r]=e[n],e[n]=t,++r,--n}}function extend(r,e){var n=Array.isArray(e)?e:[e],t=n.length;for(let e=0;e<t;e++)r[r.length]=n[e]}function remove(e,r){var r=e.indexOf(r),n=-1<r;return n&&e.splice(r,1),n}function find(r,n){var t,u=r.length>>>0;for(let e=0;e<u;e++)if(n(t=r[e],e,r))return t;return null}function equals(r,n){var t=r.length;if(t!==n.length)return!1;for(let e=0;e<t;e++)if(r[e]!==n[e])return!1;return!0}function stableSort(e,n){var r=e.length;const t=Array(e.length);let u;for(u=0;u<r;u++)t[u]={index:u,value:e[u]};for(t.sort(function(e,r){return n(e.value,r.value)||e.index-r.index}),u=0;u<e.length;u++)e[u]=t[u].value}function findIndex(n,t){let u;return!n.every(function(e,r){return u=r,!t(e,r,n)})?u:-1}function isSorted(n,e,t){const u=e||numberSafeCompareFunction;return n.every(function(e,r){if(0===r)return!0;r=u(n[r-1],e);return!(0<r||t&&0===r)})}export{binarySearch,numberSafeCompareFunction,includes,linearFindNearest,reverseSubArray,extend,remove,find,equals,stableSort,findIndex,isSorted};