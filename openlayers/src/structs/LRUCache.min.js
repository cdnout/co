import{assert}from"../asserts.js";import EventTarget from"../events/Target.js";import EventType from"../events/EventType.js";class LRUCache extends EventTarget{constructor(e){super(),this.highWaterMark=void 0!==e?e:2048,this.count_=0,this.entries_={},this.oldest_=null,this.newest_=null}canExpireCache(){return this.getCount()>this.highWaterMark}clear(){this.count_=0,this.entries_={},this.oldest_=null,this.newest_=null,this.dispatchEvent(EventType.CLEAR)}containsKey(e){return this.entries_.hasOwnProperty(e)}forEach(e){let t=this.oldest_;for(;t;)e(t.value_,t.key_,this),t=t.newer}get(e,t){const s=this.entries_[e];return assert(void 0!==s,15),s===this.newest_?s.value_:(s===this.oldest_?(this.oldest_=this.oldest_.newer,this.oldest_.older=null):(s.newer.older=s.older,s.older.newer=s.newer),s.newer=null,s.older=this.newest_,this.newest_.newer=s,(this.newest_=s).value_)}remove(e){const t=this.entries_[e];return assert(void 0!==t,15),t===this.newest_?(this.newest_=t.older,this.newest_&&(this.newest_.newer=null)):t===this.oldest_?(this.oldest_=t.newer,this.oldest_&&(this.oldest_.older=null)):(t.newer.older=t.older,t.older.newer=t.newer),delete this.entries_[e],--this.count_,t.value_}getCount(){return this.count_}getKeys(){const e=new Array(this.count_);let t=0,s;for(s=this.newest_;s;s=s.older)e[t++]=s.key_;return e}getValues(){const e=new Array(this.count_);let t=0,s;for(s=this.newest_;s;s=s.older)e[t++]=s.value_;return e}peekLast(){return this.oldest_.value_}peekLastKey(){return this.oldest_.key_}peekFirstKey(){return this.newest_.key_}pop(){const e=this.oldest_;return delete this.entries_[e.key_],e.newer&&(e.newer.older=null),this.oldest_=e.newer,this.oldest_||(this.newest_=null),--this.count_,e.value_}replace(e,t){this.get(e),this.entries_[e].value_=t}set(e,t){assert(!(e in this.entries_),16);t={key_:e,newer:null,older:this.newest_,value_:t};this.newest_?this.newest_.newer=t:this.oldest_=t,this.newest_=t,this.entries_[e]=t,++this.count_}setSize(e){this.highWaterMark=e}}export default LRUCache;