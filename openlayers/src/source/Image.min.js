import{abstract}from"../util.js";import{ENABLE_RASTER_REPROJECTION}from"../reproj/common.js";import ImageState from"../ImageState.js";import{linearFindNearest}from"../array.js";import Event from"../events/Event.js";import{equals}from"../extent.js";import{equivalent}from"../proj.js";import ReprojImage from"../reproj/Image.js";import Source from"./Source.js";const ImageSourceEventType={IMAGELOADSTART:"imageloadstart",IMAGELOADEND:"imageloadend",IMAGELOADERROR:"imageloaderror"};class ImageSourceEvent extends Event{constructor(e,t){super(e),this.image=t}}class ImageSource extends Source{constructor(e){super({attributions:e.attributions,projection:e.projection,state:e.state}),this.resolutions_=void 0!==e.resolutions?e.resolutions:null,this.reprojectedImage_=null,this.reprojectedRevision_=0}getResolutions(){return this.resolutions_}findNearestResolution(e){var t;return this.resolutions_&&(t=linearFindNearest(this.resolutions_,e,0),e=this.resolutions_[t]),e}getImage(e,t,r,o){const s=this.getProjection();if(ENABLE_RASTER_REPROJECTION&&s&&o&&!equivalent(s,o)){if(this.reprojectedImage_){if(this.reprojectedRevision_==this.getRevision()&&equivalent(this.reprojectedImage_.getProjection(),o)&&this.reprojectedImage_.getResolution()==t&&equals(this.reprojectedImage_.getExtent(),e))return this.reprojectedImage_;this.reprojectedImage_.dispose(),this.reprojectedImage_=null}return this.reprojectedImage_=new ReprojImage(s,o,e,t,r,function(e,t,r){return this.getImageInternal(e,t,r,s)}.bind(this)),this.reprojectedRevision_=this.getRevision(),this.reprojectedImage_}return s&&(o=s),this.getImageInternal(e,t,r,o)}getImageInternal(e,t,r,o){return abstract()}handleImageChange(e){const t=e.target;switch(t.getState()){case ImageState.LOADING:this.loading=!0,this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,t));break;case ImageState.LOADED:this.loading=!1,this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,t));break;case ImageState.ERROR:this.loading=!1,this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,t))}}}function defaultImageLoadFunction(e,t){e.getImage().src=t}export default ImageSource;export{ImageSourceEvent,defaultImageLoadFunction};