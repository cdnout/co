import Tile from"../Tile.js";import TileState from"../TileState.js";import{createCanvasContext2D}from"../dom.js";import{toSize}from"../size.js";import XYZ from"./XYZ.js";import{getKeyZXY}from"../tilecoord.js";class LabeledTile extends Tile{constructor(e,t,i){super(e,TileState.LOADED),this.tileSize_=t,this.text_=i,this.canvas_=null}getImage(){if(this.canvas_)return this.canvas_;{var e=this.tileSize_;const t=createCanvasContext2D(e[0],e[1]);return t.strokeStyle="grey",t.strokeRect(.5,.5,e[0]+.5,e[1]+.5),t.fillStyle="grey",t.strokeStyle="white",t.textAlign="center",t.textBaseline="middle",t.font="24px sans-serif",t.lineWidth=4,t.strokeText(this.text_,e[0]/2,e[1]/2,e[0]),t.fillText(this.text_,e[0]/2,e[1]/2,e[0]),this.canvas_=t.canvas,t.canvas}}load(){}}class TileDebug extends XYZ{constructor(e){e=e||{};super({opaque:!1,projection:e.projection,tileGrid:e.tileGrid,wrapX:void 0===e.wrapX||e.wrapX,zDirection:e.zDirection})}getTile(t,i,r){var s=getKeyZXY(t,i,r);if(this.tileCache.containsKey(s))return this.tileCache.get(s);{var o=toSize(this.tileGrid.getTileSize(t)),t=[t,i,r],i=this.getTileCoordForTileUrlFunction(t);let e;e=i?"z:"+i[0]+" x:"+i[1]+" y:"+i[2]:"none";r=new LabeledTile(t,o,e);return this.tileCache.set(s,r),r}}}export default TileDebug;