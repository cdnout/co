import{createEmpty}from"../extent.js";import{modulo}from"../math.js";import{assign}from"../obj.js";import{toSize,scale as scaleSize}from"../size.js";import TileImage from"./TileImage.js";import{hash as tileCoordHash}from"../tilecoord.js";import{appendParams}from"../uri.js";class TileArcGISRest extends TileImage{constructor(e){e=e||{};super({attributions:e.attributions,cacheSize:e.cacheSize,crossOrigin:e.crossOrigin,projection:e.projection,reprojectionErrorThreshold:e.reprojectionErrorThreshold,tileGrid:e.tileGrid,tileLoadFunction:e.tileLoadFunction,tileUrlFunction:tileUrlFunction,url:e.url,urls:e.urls,wrapX:void 0===e.wrapX||e.wrapX,transition:e.transition}),this.params_=e.params||{},this.hidpi_=void 0===e.hidpi||e.hidpi,this.tmpExtent_=createEmpty(),this.setKey(this.getKeyForParams_())}getKeyForParams_(){let e=0;const t=[];for(const r in this.params_)t[e++]=r+"-"+this.params_[r];return t.join("/")}getParams(){return this.params_}getRequestUrl_(t,r,i,s,o,a){var l=this.urls;if(l){o=o.getCode().split(":").pop();a.SIZE=r[0]+","+r[1],a.BBOX=i.join(","),a.BBOXSR=o,a.IMAGESR=o,a.DPI=Math.round(a.DPI?a.DPI*s:90*s);let e;r=(e=1==l.length?l[0]:l[modulo(tileCoordHash(t),l.length)]).replace(/MapServer\/?$/,"MapServer/export").replace(/ImageServer\/?$/,"ImageServer/exportImage");return appendParams(r,a)}}getTilePixelRatio(e){return this.hidpi_?e:1}updateParams(e){assign(this.params_,e),this.setKey(this.getKeyForParams_())}}function tileUrlFunction(t,r,i){let s=this.getTileGrid();if(!((s=s||this.getTileGridForProjection(i)).getResolutions().length<=t[0])){1==r||this.hidpi_||(r=1);var o=s.getTileCoordExtent(t,this.tmpExtent_);let e=toSize(s.getTileSize(t[0]),this.tmpSize);1!=r&&(e=scaleSize(e,r,this.tmpSize));var a={F:"image",FORMAT:"PNG32",TRANSPARENT:!0};return assign(a,this.params_),this.getRequestUrl_(t,e,o,r,i,a)}}export default TileArcGISRest;