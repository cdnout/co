import{createFromTemplates}from"../tileurlfunction.js";import{assert}from"../asserts.js";import{applyTransform,intersects}from"../extent.js";import{jsonp as requestJSONP}from"../net.js";import{get as getProjection,getTransformFromProjections}from"../proj.js";import SourceState from"./State.js";import TileImage from"./TileImage.js";import{createXYZ,extentFromProjection}from"../tilegrid.js";class TileJSON extends TileImage{constructor(t){if(super({attributions:t.attributions,cacheSize:t.cacheSize,crossOrigin:t.crossOrigin,projection:getProjection("EPSG:3857"),reprojectionErrorThreshold:t.reprojectionErrorThreshold,state:SourceState.LOADING,tileLoadFunction:t.tileLoadFunction,wrapX:void 0===t.wrapX||t.wrapX,transition:t.transition}),this.tileJSON_=null,this.tileSize_=t.tileSize,t.url)if(t.jsonp)requestJSONP(t.url,this.handleTileJSONResponse.bind(this),this.handleTileJSONError.bind(this));else{const e=new XMLHttpRequest;e.addEventListener("load",this.onXHRLoad_.bind(this)),e.addEventListener("error",this.onXHRError_.bind(this)),e.open("GET",t.url),e.send()}else t.tileJSON?this.handleTileJSONResponse(t.tileJSON):assert(!1,51)}onXHRLoad_(e){e=e.target;if(!e.status||200<=e.status&&e.status<300){let t;try{t=JSON.parse(e.responseText)}catch(t){return void this.handleTileJSONError()}this.handleTileJSONResponse(t)}else this.handleTileJSONError()}onXHRError_(t){this.handleTileJSONError()}getTileJSON(){return this.tileJSON_}handleTileJSONResponse(e){const t=getProjection("EPSG:4326");var r=this.getProjection();let i;void 0!==e.bounds&&(o=getTransformFromProjections(t,r),i=applyTransform(e.bounds,o));var o=e.minzoom||0,s=e.maxzoom||22,r=createXYZ({extent:extentFromProjection(r),maxZoom:s,minZoom:o,tileSize:this.tileSize_});if(this.tileGrid=r,this.tileUrlFunction=createFromTemplates(e.tiles,r),void 0!==e.attribution&&!this.getAttributions()){const n=void 0!==i?i:t.getExtent();this.setAttributions(function(t){return intersects(n,t.extent)?[e.attribution]:null})}this.tileJSON_=e,this.setState(SourceState.READY)}handleTileJSONError(){this.setState(SourceState.ERROR)}}export default TileJSON;