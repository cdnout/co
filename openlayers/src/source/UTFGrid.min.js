import Tile from"../Tile.js";import TileState from"../TileState.js";import{createFromTemplates,nullTileUrlFunction}from"../tileurlfunction.js";import{assert}from"../asserts.js";import{listenOnce}from"../events.js";import EventType from"../events/EventType.js";import{applyTransform,intersects}from"../extent.js";import{jsonp as requestJSONP}from"../net.js";import{get as getProjection,getTransformFromProjections}from"../proj.js";import SourceState from"./State.js";import TileSource from"./Tile.js";import{getKeyZXY}from"../tilecoord.js";import{createXYZ,extentFromProjection}from"../tilegrid.js";class CustomTile extends Tile{constructor(t,e,i,s,r,o){super(t,e),this.src_=i,this.extent_=s,this.preemptive_=r,this.grid_=null,this.keys_=null,this.data_=null,this.jsonp_=o}getImage(){return null}getData(t){if(!this.grid_||!this.keys_)return null;var e=(t[0]-this.extent_[0])/(this.extent_[2]-this.extent_[0]),t=(t[1]-this.extent_[1])/(this.extent_[3]-this.extent_[1]);const i=this.grid_[Math.floor((1-t)*this.grid_.length)];if("string"!=typeof i)return null;let s=i.charCodeAt(Math.floor(e*i.length)),r=(93<=s&&s--,35<=s&&s--,null);return(s-=32)in this.keys_&&(t=this.keys_[s],r=this.data_&&t in this.data_?this.data_[t]:t),r}forDataAtCoordinate(e,i,t){this.state==TileState.IDLE&&!0===t?(listenOnce(this,EventType.CHANGE,function(t){i(this.getData(e))},this),this.loadInternal_()):!0===t?setTimeout(function(){i(this.getData(e))}.bind(this),0):i(this.getData(e))}getKey(){return this.src_}handleError_(){this.state=TileState.ERROR,this.changed()}handleLoad_(t){this.grid_=t.grid,this.keys_=t.keys,this.data_=t.data,this.state=TileState.EMPTY,this.changed()}loadInternal_(){if(this.state==TileState.IDLE)if(this.state=TileState.LOADING,this.jsonp_)requestJSONP(this.src_,this.handleLoad_.bind(this),this.handleError_.bind(this));else{const t=new XMLHttpRequest;t.addEventListener("load",this.onXHRLoad_.bind(this)),t.addEventListener("error",this.onXHRError_.bind(this)),t.open("GET",this.src_),t.send()}}onXHRLoad_(e){e=e.target;if(!e.status||200<=e.status&&e.status<300){let t;try{t=JSON.parse(e.responseText)}catch(t){return void this.handleError_()}this.handleLoad_(t)}else this.handleError_()}onXHRError_(t){this.handleError_()}load(){this.preemptive_&&this.loadInternal_()}}class UTFGrid extends TileSource{constructor(t){if(super({projection:getProjection("EPSG:3857"),state:SourceState.LOADING}),this.preemptive_=void 0===t.preemptive||t.preemptive,this.tileUrlFunction_=nullTileUrlFunction,this.template_=void 0,this.jsonp_=t.jsonp||!1,t.url)if(this.jsonp_)requestJSONP(t.url,this.handleTileJSONResponse.bind(this),this.handleTileJSONError.bind(this));else{const e=new XMLHttpRequest;e.addEventListener("load",this.onXHRLoad_.bind(this)),e.addEventListener("error",this.onXHRError_.bind(this)),e.open("GET",t.url),e.send()}else t.tileJSON?this.handleTileJSONResponse(t.tileJSON):assert(!1,51)}onXHRLoad_(e){e=e.target;if(!e.status||200<=e.status&&e.status<300){let t;try{t=JSON.parse(e.responseText)}catch(t){return void this.handleTileJSONError()}this.handleTileJSONResponse(t)}else this.handleTileJSONError()}onXHRError_(t){this.handleTileJSONError()}getTemplate(){return this.template_}forDataAtCoordinateAndResolution(t,e,i,s){if(this.tileGrid){e=this.tileGrid.getZForResolution(e,this.zDirection),e=this.tileGrid.getTileCoordForCoordAndZ(t,e);const r=this.getTile(e[0],e[1],e[2],1,this.getProjection());r.forDataAtCoordinate(t,i,s)}else!0===s?setTimeout(function(){i(null)},0):i(null)}handleTileJSONError(){this.setState(SourceState.ERROR)}handleTileJSONResponse(e){const t=getProjection("EPSG:4326");var i=this.getProjection();let s;void 0!==e.bounds&&(r=getTransformFromProjections(t,i),s=applyTransform(e.bounds,r));var r=e.minzoom||0,o=e.maxzoom||22,i=createXYZ({extent:extentFromProjection(i),maxZoom:o,minZoom:r}),o=(this.tileGrid=i,this.template_=e.template,e.grids);if(o){if(this.tileUrlFunction_=createFromTemplates(o,i),void 0!==e.attribution){const n=void 0!==s?s:t.getExtent();this.setAttributions(function(t){return intersects(n,t.extent)?[e.attribution]:null})}this.setState(SourceState.READY)}else this.setState(SourceState.ERROR)}getTile(t,e,i,s,r){var o=getKeyZXY(t,e,i);return this.tileCache.containsKey(o)?this.tileCache.get(o):(e=this.getTileCoordForTileUrlFunction(t=[t,e,i],r),i=this.tileUrlFunction_(e,s,r),e=new CustomTile(t,void 0!==i?TileState.IDLE:TileState.EMPTY,void 0!==i?i:"",this.tileGrid.getTileCoordExtent(t),this.preemptive_,this.jsonp_),this.tileCache.set(o,e),e)}useTile(t,e,i){t=getKeyZXY(t,e,i);this.tileCache.containsKey(t)&&this.tileCache.get(t)}}export default UTFGrid;export{CustomTile};