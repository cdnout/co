import ImageCanvas from"../ImageCanvas.js";import TileQueue from"../TileQueue.js";import{createCanvasContext2D}from"../dom.js";import Event from"../events/Event.js";import EventType from"../events/EventType.js";import{Processor}from"pixelworks/lib/index.js";import{equals,getCenter,getHeight,getWidth}from"../extent.js";import ImageLayer from"../layer/Image.js";import TileLayer from"../layer/Tile.js";import{assign}from"../obj.js";import{create as createTransform}from"../transform.js";import ImageSource from"./Image.js";import TileSource from"./Tile.js";import SourceState from"./State.js";import Source from"./Source.js";const RasterEventType={BEFOREOPERATIONS:"beforeoperations",AFTEROPERATIONS:"afteroperations"},RasterOperationType={PIXEL:"pixel",IMAGE:"image"};class RasterSourceEvent extends Event{constructor(e,t,r){super(e),this.extent=t.extent,this.resolution=t.viewState.resolution/t.pixelRatio,this.data=r}}class RasterSource extends ImageSource{constructor(u){super({projection:null}),this.worker_=null,this.operationType_=void 0!==u.operationType?u.operationType:RasterOperationType.PIXEL,this.threads_=void 0!==u.threads?u.threads:1,this.layers_=createLayers(u.sources);var r=this.changed.bind(this);for(let e=0,t=this.layers_.length;e<t;++e)this.layers_[e].addEventListener(EventType.CHANGE,r);this.tileQueue_=new TileQueue(function(){return 1},this.changed.bind(this)),this.requestedFrameState_,this.renderedImageCanvas_=null,this.renderedRevision_,this.frameState_={animate:!1,coordinateToPixelTransform:createTransform(),extent:null,index:0,layerIndex:0,layerStatesArray:getLayerStatesArray(this.layers_),pixelRatio:1,pixelToCoordinateTransform:createTransform(),postRenderFunctions:[],size:[0,0],tileQueue:this.tileQueue_,time:Date.now(),usedTiles:{},viewState:{rotation:0},viewHints:[],wantedTiles:{},declutterItems:[]},this.setAttributions(function(r){const a=[];for(let e=0,t=u.sources.length;e<t;++e){const n=u.sources[e],i=n instanceof Source?n:n.getSource(),o=i.getAttributions();var s;"function"==typeof o&&(s=o(r),a.push.apply(a,s))}return 0!==a.length?a:null}),void 0!==u.operation&&this.setOperation(u.operation,u.lib)}setOperation(e,t){this.worker_=new Processor({operation:e,imageOps:this.operationType_===RasterOperationType.IMAGE,queue:1,lib:t,threads:this.threads_}),this.changed()}updateFrameState_(e,t,r){const a=assign({},this.frameState_);a.viewState=assign({},a.viewState);var s=getCenter(e);a.extent=e.slice(),a.size[0]=Math.round(getWidth(e)/t),a.size[1]=Math.round(getHeight(e)/t),a.time=1/0;const n=a.viewState;return n.center=s,n.projection=r,n.resolution=t,a}allSourcesReady_(){let r=!0,a;for(let e=0,t=this.layers_.length;e<t;++e)if((a=this.layers_[e].getSource()).getState()!==SourceState.READY){r=!1;break}return r}getImage(e,t,r,a){if(!this.allSourcesReady_())return null;const s=this.updateFrameState_(e,t,a);var n;return this.requestedFrameState_=s,this.renderedImageCanvas_&&(a=this.renderedImageCanvas_.getResolution(),n=this.renderedImageCanvas_.getExtent(),t===a&&equals(e,n)||(this.renderedImageCanvas_=null)),this.renderedImageCanvas_&&this.getRevision()===this.renderedRevision_||this.processSources_(),s.tileQueue.loadMoreTiles(16,16),s.animate&&requestAnimationFrame(this.changed.bind(this)),this.renderedImageCanvas_}processSources_(){const t=this.requestedFrameState_;var r=this.layers_.length;const a=new Array(r);for(let e=0;e<r;++e){t.layerIndex=e;var s=getImageData(this.layers_[e],t);if(!s)return;a[e]=s}var e={};this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS,t,e)),this.worker_.process(a,e,this.onWorkerComplete_.bind(this,t))}onWorkerComplete_(t,r,a,s){if(!r&&a){var n,i,r=t.extent,o=t.viewState.resolution;if(o===this.requestedFrameState_.viewState.resolution&&equals(r,this.requestedFrameState_.extent)){let e;this.renderedImageCanvas_?e=this.renderedImageCanvas_.getImage().getContext("2d"):(n=Math.round(getWidth(r)/o),i=Math.round(getHeight(r)/o),e=createCanvasContext2D(n,i),this.renderedImageCanvas_=new ImageCanvas(r,o,1,e.canvas)),e.putImageData(a,0,0),this.changed(),this.renderedRevision_=this.getRevision(),this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS,t,s))}}}getImageInternal(){return null}}let sharedContext=null;function getImageData(e,t){const r=e.getRenderer();if(!r)throw new Error("Unsupported layer type: "+e);if(!r.prepareFrame(t))return null;var e=t.size[0],a=t.size[1],t=r.renderFrame(t,null);let s;if(!((s=t?t.firstElementChild:s)instanceof HTMLCanvasElement))throw new Error("Unsupported rendered element: "+s);if(s.width!==e||s.height!==a)return!sharedContext||(t=sharedContext.canvas).width!==e||t.height!==a?sharedContext=createCanvasContext2D(e,a):sharedContext.clearRect(0,0,e,a),sharedContext.drawImage(s,0,0,e,a),sharedContext.getImageData(0,0,e,a);{const n=s.getContext("2d");return n.getImageData(0,0,e,a)}}function getLayerStatesArray(e){return e.map(function(e){return e.getLayerState()})}function createLayers(t){var r=t.length;const a=new Array(r);for(let e=0;e<r;++e)a[e]=createLayer(t[e]);return a}function createLayer(e){let t;return e instanceof Source?e instanceof TileSource?t=new TileLayer({source:e}):e instanceof ImageSource&&(t=new ImageLayer({source:e})):t=e,t}export default RasterSource;export{RasterSourceEvent};