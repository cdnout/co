import{DEFAULT_WMS_VERSION}from"./common.js";import{assert}from"../asserts.js";import{buffer,createEmpty}from"../extent.js";import{assign}from"../obj.js";import{modulo}from"../math.js";import{get as getProjection,transform,transformExtent}from"../proj.js";import{calculateSourceResolution}from"../reproj.js";import{toSize,buffer as bufferSize,scale as scaleSize}from"../size.js";import TileImage from"./TileImage.js";import WMSServerType from"./WMSServerType.js";import{hash as tileCoordHash}from"../tilecoord.js";import{compareVersions}from"../string.js";import{appendParams}from"../uri.js";class TileWMS extends TileImage{constructor(t){var t=t||{},e=t.params||{},r=!("TRANSPARENT"in e)||e.TRANSPARENT;super({attributions:t.attributions,cacheSize:t.cacheSize,crossOrigin:t.crossOrigin,opaque:!r,projection:t.projection,reprojectionErrorThreshold:t.reprojectionErrorThreshold,tileClass:t.tileClass,tileGrid:t.tileGrid,tileLoadFunction:t.tileLoadFunction,tileUrlFunction:tileUrlFunction,url:t.url,urls:t.urls,wrapX:void 0===t.wrapX||t.wrapX,transition:t.transition}),this.gutter_=void 0!==t.gutter?t.gutter:0,this.params_=e,this.v13_=!0,this.serverType_=t.serverType,this.hidpi_=void 0===t.hidpi||t.hidpi,this.tmpExtent_=createEmpty(),this.updateV13_(),this.setKey(this.getKeyForParams_())}getFeatureInfoUrl(i,s,o,a){var o=getProjection(o),n=this.getProjection();let p=this.getTileGrid();s=(p=p||this.getTileGridForProjection(o)).getZForResolution(s,this.zDirection),s=p.getTileCoordForCoordAndZ(i,s);if(!(p.getResolutions().length<=s[0])){let t=p.getResolution(s[0]),e=p.getTileCoordExtent(s,this.tmpExtent_),r=toSize(p.getTileSize(s[0]),this.tmpSize);var h=this.gutter_;0!==h&&(r=bufferSize(r,h,this.tmpSize),e=buffer(e,t*h,e)),n&&n!==o&&(t=calculateSourceResolution(n,o,i,t),e=transformExtent(e,o,n),i=transform(i,o,n));const l={SERVICE:"WMS",VERSION:DEFAULT_WMS_VERSION,REQUEST:"GetFeatureInfo",FORMAT:"image/png",TRANSPARENT:!0,QUERY_LAYERS:this.params_.LAYERS};assign(l,this.params_,a);h=Math.floor((i[0]-e[0])/t),a=Math.floor((e[3]-i[1])/t);return l[this.v13_?"I":"X"]=h,l[this.v13_?"J":"Y"]=a,this.getRequestUrl_(s,r,e,1,n||o,l)}}getLegendUrl(t,e){if(void 0!==this.urls[0]){const i={SERVICE:"WMS",VERSION:DEFAULT_WMS_VERSION,REQUEST:"GetLegendGraphic",FORMAT:"image/png"};if(void 0===e||void 0===e.LAYER){var r=this.params_.LAYERS;if(!(!Array.isArray(r)||1===r.length))return;i.LAYER=r}return void 0!==t&&(r=this.getProjection()?this.getProjection().getMetersPerUnit():1,i.SCALE=t*r*39.37*(25.4/.28)),assign(i,e),appendParams(this.urls[0],i)}}getGutter(){return this.gutter_}getParams(){return this.params_}getRequestUrl_(e,r,i,s,o,a){var n=this.urls;if(n){if(a.WIDTH=r[0],a.HEIGHT=r[1],a[this.v13_?"CRS":"SRS"]=o.getCode(),"STYLES"in this.params_||(a.STYLES=""),1!=s)switch(this.serverType_){case WMSServerType.GEOSERVER:var p=90*s+.5|0;"FORMAT_OPTIONS"in a?a.FORMAT_OPTIONS+=";dpi:"+p:a.FORMAT_OPTIONS="dpi:"+p;break;case WMSServerType.MAPSERVER:a.MAP_RESOLUTION=90*s;break;case WMSServerType.CARMENTA_SERVER:case WMSServerType.QGIS:a.DPI=90*s;break;default:assert(!1,52)}const h=o.getAxisOrientation(),l=i;this.v13_&&"ne"==h.substr(0,2)&&(r=i[0],l[0]=i[1],l[1]=r,r=i[2],l[2]=i[3],l[3]=r),a.BBOX=l.join(",");let t;return t=1==n.length?n[0]:n[modulo(tileCoordHash(e),n.length)],appendParams(t,a)}}getTilePixelRatio(t){return this.hidpi_&&void 0!==this.serverType_?t:1}getKeyForParams_(){let t=0;const e=[];for(const r in this.params_)e[t++]=r+"-"+this.params_[r];return e.join("/")}updateParams(t){assign(this.params_,t),this.updateV13_(),this.setKey(this.getKeyForParams_())}updateV13_(){var t=this.params_.VERSION||DEFAULT_WMS_VERSION;this.v13_=0<=compareVersions(t,"1.3")}}function tileUrlFunction(r,i,s){let o=this.getTileGrid();if(!((o=o||this.getTileGridForProjection(s)).getResolutions().length<=r[0])){1==i||this.hidpi_&&void 0!==this.serverType_||(i=1);var a=o.getResolution(r[0]);let t=o.getTileCoordExtent(r,this.tmpExtent_),e=toSize(o.getTileSize(r[0]),this.tmpSize);var n=this.gutter_,a=(0!==n&&(e=bufferSize(e,n,this.tmpSize),t=buffer(t,a*n,t)),1!=i&&(e=scaleSize(e,i,this.tmpSize)),{SERVICE:"WMS",VERSION:DEFAULT_WMS_VERSION,REQUEST:"GetMap",FORMAT:"image/png",TRANSPARENT:!0});return assign(a,this.params_),this.getRequestUrl_(r,e,t,i,s,a)}}export default TileWMS;