import CanvasInstruction,{strokeInstruction,beginPathInstruction}from"./Instruction.js";import CanvasBuilder from"./Builder.js";class CanvasLineStringBuilder extends CanvasBuilder{constructor(t,i,s,e){super(t,i,s,e)}drawFlatCoordinates_(t,i,s,e){var n=this.coordinates.length,t=this.appendFlatCoordinates(t,i,s,e,!1,!1),i=[CanvasInstruction.MOVE_TO_LINE_TO,n,t];return this.instructions.push(i),this.hitDetectionInstructions.push(i),s}drawLineString(t,i){var s=this.state,e=s.strokeStyle,n=s.lineWidth;void 0!==e&&void 0!==n&&(this.updateStrokeStyle(s,this.applyStroke),this.beginGeometry(i),this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE,s.strokeStyle,s.lineWidth,s.lineCap,s.lineJoin,s.miterLimit,s.lineDash,s.lineDashOffset],beginPathInstruction),e=t.getFlatCoordinates(),n=t.getStride(),this.drawFlatCoordinates_(e,0,e.length,n),this.hitDetectionInstructions.push(strokeInstruction),this.endGeometry(i))}drawMultiLineString(t,i){var e=this.state,s=e.strokeStyle,n=e.lineWidth;if(void 0!==s&&void 0!==n){this.updateStrokeStyle(e,this.applyStroke),this.beginGeometry(i),this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE,e.strokeStyle,e.lineWidth,e.lineCap,e.lineJoin,e.miterLimit,e.lineDash,e.lineDashOffset],beginPathInstruction);var r=t.getEnds(),o=t.getFlatCoordinates(),a=t.getStride();let s=0;for(let t=0,i=r.length;t<i;++t)s=this.drawFlatCoordinates_(o,s,r[t],a);this.hitDetectionInstructions.push(strokeInstruction),this.endGeometry(i)}}finish(){var t=this.state;return null!=t.lastStroke&&t.lastStroke!=this.coordinates.length&&this.instructions.push(strokeInstruction),this.reverseHitDetectionInstructions(),this.state=null,super.finish()}applyStroke(t){null!=t.lastStroke&&t.lastStroke!=this.coordinates.length&&(this.instructions.push(strokeInstruction),t.lastStroke=this.coordinates.length),t.lastStroke=0,super.applyStroke(t),this.instructions.push(beginPathInstruction)}}export default CanvasLineStringBuilder;