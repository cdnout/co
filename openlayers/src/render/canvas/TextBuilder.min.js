import{getUid}from"../../util.js";import{asColorLike}from"../../colorlike.js";import{intersects}from"../../extent.js";import{matchingChunk}from"../../geom/flat/straightchunk.js";import GeometryType from"../../geom/GeometryType.js";import{labelCache,defaultTextAlign,defaultPadding,defaultLineCap,defaultLineDashOffset,defaultLineDash,defaultLineJoin,defaultFillStyle,checkFont,defaultFont,defaultLineWidth,defaultMiterLimit,defaultStrokeStyle,defaultTextBaseline}from"../canvas.js";import CanvasInstruction from"./Instruction.js";import CanvasBuilder from"./Builder.js";import TextPlacement from"../../style/TextPlacement.js";const TEXT_ALIGN={left:0,end:0,center:.5,right:1,start:1,top:0,middle:.5,hanging:.2,alphabetic:.8,ideographic:.8,bottom:1};class CanvasTextBuilder extends CanvasBuilder{constructor(t,e,i,s){super(t,e,i,s),this.declutterGroups_,this.labels_=null,this.text_="",this.textOffsetX_=0,this.textOffsetY_=0,this.textRotateWithView_=void 0,this.textRotation_=0,this.textFillState_=null,this.fillStates={},this.textStrokeState_=null,this.strokeStates={},this.textState_={},this.textStates={},this.textKey_="",this.fillKey_="",this.strokeKey_="",labelCache.prune()}finish(){const t=super.finish();return t.textStates=this.textStates,t.fillStates=this.fillStates,t.strokeStates=this.strokeStates,t}drawText(f,d){var u=this.textFillState_,t=this.textStrokeState_;const g=this.textState_;if(""!==this.text_&&g&&(u||t)){let a=this.coordinates.length;u=f.getType();let o=null,n=2,r=2,h,e;if(g.placement===TextPlacement.LINE){if(intersects(this.getBufferedMaxExtent(),f.getExtent())){let i;if(o=f.getFlatCoordinates(),r=f.getStride(),u==GeometryType.LINE_STRING)i=[o.length];else if(u==GeometryType.MULTI_LINE_STRING)i=f.getEnds();else if(u==GeometryType.POLYGON)i=f.getEnds().slice(0,1);else if(u==GeometryType.MULTI_POLYGON){var x=f.getEndss();for(i=[],h=0,e=x.length;h<e;++h)i.push(x[h][0])}this.beginGeometry(d);var c=g.textAlign;let s=0,l;for(let t=0,e=i.length;t<e;++t){for(l=null==c?(_=matchingChunk(g.maxAngle,o,s,i[t],r),s=_[0],_[1]):i[t],h=s;h<l;h+=r)this.coordinates.push(o[h],o[h+1]);n=this.coordinates.length,s=i[t];var _=this.declutterGroups_?0===t?this.declutterGroups_[0]:[].concat(this.declutterGroups_[0]):null;this.drawChars_(a,n,_),a=n}this.endGeometry(d)}}else{let t=null;switch(g.overflow||(t=[]),u){case GeometryType.POINT:case GeometryType.MULTI_POINT:o=f.getFlatCoordinates(),n=o.length;break;case GeometryType.LINE_STRING:o=f.getFlatMidpoint();break;case GeometryType.CIRCLE:o=f.getCenter();break;case GeometryType.MULTI_LINE_STRING:o=f.getFlatMidpoints(),n=o.length;break;case GeometryType.POLYGON:o=f.getFlatInteriorPoint(),g.overflow||t.push(o[2]/this.resolution),r=3;break;case GeometryType.MULTI_POLYGON:var i=f.getFlatInteriorPoints();for(o=[],h=0,e=i.length;h<e;h+=3)g.overflow||t.push(i[h+2]/this.resolution),o.push(i[h],i[h+1]);if(0==(n=o.length))return}n=this.appendFlatCoordinates(o,0,n,r,!1,!1),this.saveTextStates_(),(g.backgroundFill||g.backgroundStroke)&&(this.setFillStrokeStyle(g.backgroundFill,g.backgroundStroke),g.backgroundFill&&(this.updateFillStyle(this.state,this.createFill),this.hitDetectionInstructions.push(this.createFill(this.state))),g.backgroundStroke&&(this.updateStrokeStyle(this.state,this.applyStroke),this.hitDetectionInstructions.push(this.createStroke(this.state)))),this.beginGeometry(d);const s=this.pixelRatio;this.instructions.push([CanvasInstruction.DRAW_IMAGE,a,n,null,NaN,NaN,this.declutterGroups_,NaN,1,0,0,this.textRotateWithView_,this.textRotation_,1,NaN,g.padding==defaultPadding?defaultPadding:g.padding.map(function(t){return t*s}),!!g.backgroundFill,!!g.backgroundStroke,this.text_,this.textKey_,this.strokeKey_,this.fillKey_,this.textOffsetX_,this.textOffsetY_,t]),this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE,a,n,null,NaN,NaN,this.declutterGroups_,NaN,1,0,0,this.textRotateWithView_,this.textRotation_,1/this.pixelRatio,NaN,g.padding,!!g.backgroundFill,!!g.backgroundStroke,this.text_,this.textKey_,this.strokeKey_,this.fillKey_,this.textOffsetX_,this.textOffsetY_,t]),this.endGeometry(d)}}}saveTextStates_(){var t=this.textStrokeState_,e=this.textState_,i=this.textFillState_,s=this.strokeKey_,s=(!t||s in this.strokeStates||(this.strokeStates[s]={strokeStyle:t.strokeStyle,lineCap:t.lineCap,lineDashOffset:t.lineDashOffset,lineWidth:t.lineWidth,lineJoin:t.lineJoin,miterLimit:t.miterLimit,lineDash:t.lineDash}),this.textKey_),t=(s in this.textStates||(this.textStates[s]={font:e.font,textAlign:e.textAlign||defaultTextAlign,textBaseline:e.textBaseline||defaultTextBaseline,scale:e.scale}),this.fillKey_);!i||t in this.fillStates||(this.fillStates[t]={fillStyle:i.fillStyle})}drawChars_(t,e,i){var s=this.textStrokeState_,l=this.textState_,a=this.strokeKey_,o=this.textKey_,n=this.fillKey_,r=(this.saveTextStates_(),this.pixelRatio),h=TEXT_ALIGN[l.textBaseline],f=this.textOffsetY_*r,d=this.text_,u=l.scale,s=s?s.lineWidth*u/2:0;this.instructions.push([CanvasInstruction.DRAW_CHARS,t,e,h,i,l.overflow,n,l.maxAngle,r,f,a,s*r,d,o,1]),this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,t,e,h,i,l.overflow,n,l.maxAngle,1,f,a,s,d,o,1/r])}setTextStyle(t,e){let i,s,l;if(t){this.declutterGroups_=e;const r=t.getFill(),h=(r?(s=(s=this.textFillState_)||(this.textFillState_={})).fillStyle=asColorLike(r.getColor()||defaultFillStyle):s=this.textFillState_=null,t.getStroke());if(h){l=(l=this.textStrokeState_)||(this.textStrokeState_={});const f=h.getLineDash();var e=h.getLineDashOffset(),a=h.getWidth(),o=h.getMiterLimit();l.lineCap=h.getLineCap()||defaultLineCap,l.lineDash=f?f.slice():defaultLineDash,l.lineDashOffset=void 0===e?defaultLineDashOffset:e,l.lineJoin=h.getLineJoin()||defaultLineJoin,l.lineWidth=void 0===a?defaultLineWidth:a,l.miterLimit=void 0===o?defaultMiterLimit:o,l.strokeStyle=asColorLike(h.getColor()||defaultStrokeStyle)}else l=this.textStrokeState_=null;i=this.textState_;var e=t.getFont()||defaultFont,a=(checkFont(e),t.getScale()),o=(i.overflow=t.getOverflow(),i.font=e,i.maxAngle=t.getMaxAngle(),i.placement=t.getPlacement(),i.textAlign=t.getTextAlign(),i.textBaseline=t.getTextBaseline()||defaultTextBaseline,i.backgroundFill=t.getBackgroundFill(),i.backgroundStroke=t.getBackgroundStroke(),i.padding=t.getPadding()||defaultPadding,i.scale=void 0===a?1:a,t.getOffsetX()),e=t.getOffsetY(),a=t.getRotateWithView(),n=t.getRotation();this.text_=t.getText()||"",this.textOffsetX_=void 0===o?0:o,this.textOffsetY_=void 0===e?0:e,this.textRotateWithView_=void 0!==a&&a,this.textRotation_=void 0===n?0:n,this.strokeKey_=l?("string"==typeof l.strokeStyle?l.strokeStyle:getUid(l.strokeStyle))+l.lineCap+l.lineDashOffset+"|"+l.lineWidth+l.lineJoin+l.miterLimit+"["+l.lineDash.join()+"]":"",this.textKey_=i.font+i.scale+(i.textAlign||"?"),this.fillKey_=s?"string"==typeof s.fillStyle?s.fillStyle:"|"+getUid(s.fillStyle):""}else this.text_=""}}export default CanvasTextBuilder;export{TEXT_ALIGN};