import{equals}from"../array.js";const tmpArray4=new Uint8Array(4);class WebGLRenderTarget{constructor(t,e){const r=(this.helper_=t).getGL();this.texture_=r.createTexture(),this.framebuffer_=r.createFramebuffer(),this.size_=e||[1,1],this.data_=new Uint8Array(0),this.dataCacheDirty_=!0,this.updateSize_()}setSize(t){equals(t,this.size_)||(this.size_[0]=t[0],this.size_[1]=t[1],this.updateSize_())}getSize(){return this.size_}clearCachedData(){this.dataCacheDirty_=!0}readAll(){if(this.dataCacheDirty_){var t=this.size_;const e=this.helper_.getGL();e.bindFramebuffer(e.FRAMEBUFFER,this.framebuffer_),e.readPixels(0,0,t[0],t[1],e.RGBA,e.UNSIGNED_BYTE,this.data_),this.dataCacheDirty_=!1}return this.data_}readPixel(t,e){this.readAll();t=Math.floor(t)+(this.size_[1]-Math.floor(e)-1)*this.size_[0];return tmpArray4[0]=this.data_[4*t],tmpArray4[1]=this.data_[4*t+1],tmpArray4[2]=this.data_[4*t+2],tmpArray4[3]=this.data_[4*t+3],tmpArray4}getTexture(){return this.texture_}getFramebuffer(){return this.framebuffer_}updateSize_(){var t=this.size_;const e=this.helper_.getGL();this.texture_=this.helper_.createTexture(t,null,this.texture_),e.bindFramebuffer(e.FRAMEBUFFER,this.framebuffer_),e.viewport(0,0,t[0],t[1]),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,this.texture_,0),this.data_=new Uint8Array(t[0]*t[1]*4)}}export default WebGLRenderTarget;