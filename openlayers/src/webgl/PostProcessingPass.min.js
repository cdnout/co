const DEFAULT_VERTEX_SHADER=`
  precision mediump float;
  
  attribute vec2 a_position;
  varying vec2 v_texCoord;
  varying vec2 v_screenCoord;
  
  uniform vec2 u_screenSize;
   
  void main() {
    v_texCoord = a_position * 0.5 + 0.5;
    v_screenCoord = v_texCoord * u_screenSize;
    gl_Position = vec4(a_position, 0.0, 1.0);
  }
`,DEFAULT_FRAGMENT_SHADER=`
  precision mediump float;
   
  uniform sampler2D u_image;
   
  varying vec2 v_texCoord;
  varying vec2 v_screenCoord;
   
  void main() {
    gl_FragColor = texture2D(u_image, v_texCoord);
  }
`;class WebGLPostProcessingPass{constructor(r){this.gl_=r.webGlContext;const t=this.gl_;this.scaleRatio_=r.scaleRatio||1,this.renderTargetTexture_=t.createTexture(),this.renderTargetTextureSize_=null,this.frameBuffer_=t.createFramebuffer();var e=t.createShader(t.VERTEX_SHADER),i=(t.shaderSource(e,r.vertexShader||DEFAULT_VERTEX_SHADER),t.compileShader(e),t.createShader(t.FRAGMENT_SHADER));t.shaderSource(i,r.fragmentShader||DEFAULT_FRAGMENT_SHADER),t.compileShader(i),this.renderTargetProgram_=t.createProgram(),t.attachShader(this.renderTargetProgram_,e),t.attachShader(this.renderTargetProgram_,i),t.linkProgram(this.renderTargetProgram_),this.renderTargetVerticesBuffer_=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,this.renderTargetVerticesBuffer_),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,1,-1,1,1,-1,1]),t.STATIC_DRAW),this.renderTargetAttribLocation_=t.getAttribLocation(this.renderTargetProgram_,"a_position"),this.renderTargetUniformLocation_=t.getUniformLocation(this.renderTargetProgram_,"u_screenSize"),this.renderTargetTextureLocation_=t.getUniformLocation(this.renderTargetProgram_,"u_image"),this.uniforms_=[],r.uniforms&&Object.keys(r.uniforms).forEach(function(e){this.uniforms_.push({value:r.uniforms[e],location:t.getUniformLocation(this.renderTargetProgram_,e)})}.bind(this))}getGL(){return this.gl_}init(e){const r=this.getGL();var t,i,a=r.canvas,e=e.size;r.bindFramebuffer(r.FRAMEBUFFER,this.getFrameBuffer()),r.viewport(0,0,a.width*this.scaleRatio_,a.height*this.scaleRatio_),this.renderTargetTextureSize_&&this.renderTargetTextureSize_[0]===e[0]&&this.renderTargetTextureSize_[1]===e[1]||(this.renderTargetTextureSize_=e,e=r.RGBA,t=r.RGBA,i=r.UNSIGNED_BYTE,r.bindTexture(r.TEXTURE_2D,this.renderTargetTexture_),r.texImage2D(r.TEXTURE_2D,0,e,a.width*this.scaleRatio_,a.height*this.scaleRatio_,0,t,i,null),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.LINEAR),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,this.renderTargetTexture_,0))}apply(e,r){const t=this.getGL();var i=t.canvas;t.bindFramebuffer(t.FRAMEBUFFER,r?r.getFrameBuffer():null),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.renderTargetTexture_),t.clearColor(0,0,0,0),t.clear(t.COLOR_BUFFER_BIT),t.enable(t.BLEND),t.blendFunc(t.ONE,t.ONE_MINUS_SRC_ALPHA),t.viewport(0,0,i.width,i.height),t.bindBuffer(t.ARRAY_BUFFER,this.renderTargetVerticesBuffer_),t.useProgram(this.renderTargetProgram_),t.enableVertexAttribArray(this.renderTargetAttribLocation_),t.vertexAttribPointer(this.renderTargetAttribLocation_,2,t.FLOAT,!1,0,0),t.uniform2f(this.renderTargetUniformLocation_,i.width,i.height),t.uniform1i(this.renderTargetTextureLocation_,0),this.applyUniforms(e),t.drawArrays(t.TRIANGLES,0,6)}getFrameBuffer(){return this.frameBuffer_}applyUniforms(r){const t=this.getGL();let i,a=1;this.uniforms_.forEach(function(e){if((i="function"==typeof e.value?e.value(r):e.value)instanceof HTMLCanvasElement||i instanceof ImageData)e.texture||(e.texture=t.createTexture()),t.activeTexture(t["TEXTURE"+a]),t.bindTexture(t.TEXTURE_2D,e.texture),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),i instanceof ImageData?t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,i.width,i.height,0,t.UNSIGNED_BYTE,new Uint8Array(i.data)):t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,i),t.uniform1i(e.location,a++);else if(Array.isArray(i))switch(i.length){case 2:return void t.uniform2f(e.location,i[0],i[1]);case 3:return void t.uniform3f(e.location,i[0],i[1],i[2]);case 4:return void t.uniform4f(e.location,i[0],i[1],i[2],i[3]);default:return}else"number"==typeof i&&t.uniform1f(e.location,i)})}}export default WebGLPostProcessingPass;