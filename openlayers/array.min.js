function binarySearch(r,n,e){for(var t,u,i=e||numberSafeCompareFunction,f=0,o=r.length,a=!1;f<o;)(u=+i(r[t=f+(o-f>>1)],n))<0?f=t+1:(o=t,a=!u);return a?f:~f}function numberSafeCompareFunction(r,n){return n<r?1:r<n?-1:0}function includes(r,n){return 0<=r.indexOf(n)}function linearFindNearest(r,n,e){var t=r.length;if(r[0]<=n)return 0;if(n<=r[t-1])return t-1;var u=void 0;if(0<e){for(u=1;u<t;++u)if(r[u]<n)return u-1}else if(e<0){for(u=1;u<t;++u)if(r[u]<=n)return u}else for(u=1;u<t;++u){if(r[u]==n)return u;if(r[u]<n)return r[u-1]-n<n-r[u]?u-1:u}return t-1}function reverseSubArray(r,n,e){for(;n<e;){var t=r[n];r[n]=r[e],r[e]=t,++n,--e}}function extend(r,n){for(var e=Array.isArray(n)?n:[n],t=e.length,u=0;u<t;u++)r[r.length]=e[u]}function remove(r,n){var n=r.indexOf(n),e=-1<n;return e&&r.splice(n,1),e}function find(r,n){for(var e,t=r.length>>>0,u=0;u<t;u++)if(n(e=r[u],u,r))return e;return null}function equals(r,n){var e=r.length;if(e!==n.length)return!1;for(var t=0;t<e;t++)if(r[t]!==n[t])return!1;return!0}function stableSort(r,e){for(var n=r.length,t=Array(r.length),u=0;u<n;u++)t[u]={index:u,value:r[u]};for(t.sort(function(r,n){return e(r.value,n.value)||r.index-n.index}),u=0;u<r.length;u++)r[u]=t[u].value}function findIndex(e,t){var u;return!e.every(function(r,n){return!t(r,u=n,e)})?u:-1}function isSorted(e,r,t){var u=r||numberSafeCompareFunction;return e.every(function(r,n){if(0===n)return!0;n=u(e[n-1],r);return!(0<n||t&&0===n)})}export{binarySearch,numberSafeCompareFunction,includes,linearFindNearest,reverseSubArray,extend,remove,find,equals,stableSort,findIndex,isSorted};