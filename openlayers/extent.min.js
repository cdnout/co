import{assert}from"./asserts.js";import Corner from"./extent/Corner.js";import Relationship from"./extent/Relationship.js";function boundingExtent(t){for(var e=createEmpty(),n=0,r=t.length;n<r;++n)extendCoordinate(e,t[n]);return e}function _boundingExtentXYs(t,e,n){return createOrUpdate(Math.min.apply(null,t),Math.min.apply(null,e),Math.max.apply(null,t),Math.max.apply(null,e),n)}function buffer(t,e,n){return n?(n[0]=t[0]-e,n[1]=t[1]-e,n[2]=t[2]+e,n[3]=t[3]+e,n):[t[0]-e,t[1]-e,t[2]+e,t[3]+e]}function clone(t,e){return e?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e):t.slice()}function closestSquaredDistanceXY(t,e,n){e=e<t[0]?t[0]-e:t[2]<e?e-t[2]:0,n=n<t[1]?t[1]-n:t[3]<n?n-t[3]:0;return e*e+n*n}function containsCoordinate(t,e){return containsXY(t,e[0],e[1])}function containsExtent(t,e){return t[0]<=e[0]&&e[2]<=t[2]&&t[1]<=e[1]&&e[3]<=t[3]}function containsXY(t,e,n){return t[0]<=e&&e<=t[2]&&t[1]<=n&&n<=t[3]}function coordinateRelationship(t,e){var n=t[0],r=t[1],o=t[2],t=t[3],i=e[0],e=e[1],a=Relationship.UNKNOWN;return i<n?a|=Relationship.LEFT:o<i&&(a|=Relationship.RIGHT),e<r?a|=Relationship.BELOW:t<e&&(a|=Relationship.ABOVE),a=a===Relationship.UNKNOWN?Relationship.INTERSECTING:a}function createEmpty(){return[1/0,1/0,-1/0,-1/0]}function createOrUpdate(t,e,n,r,o){return o?(o[0]=t,o[1]=e,o[2]=n,o[3]=r,o):[t,e,n,r]}function createOrUpdateEmpty(t){return createOrUpdate(1/0,1/0,-1/0,-1/0,t)}function createOrUpdateFromCoordinate(t,e){var n=t[0],t=t[1];return createOrUpdate(n,t,n,t,e)}function createOrUpdateFromCoordinates(t,e){return extendCoordinates(createOrUpdateEmpty(e),t)}function createOrUpdateFromFlatCoordinates(t,e,n,r,o){return extendFlatCoordinates(createOrUpdateEmpty(o),t,e,n,r)}function createOrUpdateFromRings(t,e){return extendRings(createOrUpdateEmpty(e),t)}function equals(t,e){return t[0]==e[0]&&t[2]==e[2]&&t[1]==e[1]&&t[3]==e[3]}function extend(t,e){return e[0]<t[0]&&(t[0]=e[0]),e[2]>t[2]&&(t[2]=e[2]),e[1]<t[1]&&(t[1]=e[1]),e[3]>t[3]&&(t[3]=e[3]),t}function extendCoordinate(t,e){e[0]<t[0]&&(t[0]=e[0]),e[0]>t[2]&&(t[2]=e[0]),e[1]<t[1]&&(t[1]=e[1]),e[1]>t[3]&&(t[3]=e[1])}function extendCoordinates(t,e){for(var n=0,r=e.length;n<r;++n)extendCoordinate(t,e[n]);return t}function extendFlatCoordinates(t,e,n,r,o){for(;n<r;n+=o)extendXY(t,e[n],e[n+1]);return t}function extendRings(t,e){for(var n=0,r=e.length;n<r;++n)extendCoordinates(t,e[n]);return t}function extendXY(t,e,n){t[0]=Math.min(t[0],e),t[1]=Math.min(t[1],n),t[2]=Math.max(t[2],e),t[3]=Math.max(t[3],n)}function forEachCorner(t,e){var n=e(getBottomLeft(t));return n||((n=e(getBottomRight(t)))||(n=e(getTopRight(t)))||!!(n=e(getTopLeft(t))))&&n}function getArea(t){var e=0;return e=isEmpty(t)?e:getWidth(t)*getHeight(t)}function getBottomLeft(t){return[t[0],t[1]]}function getBottomRight(t){return[t[2],t[1]]}function getCenter(t){return[(t[0]+t[2])/2,(t[1]+t[3])/2]}function getCorner(t,e){var n;return e===Corner.BOTTOM_LEFT?n=getBottomLeft(t):e===Corner.BOTTOM_RIGHT?n=getBottomRight(t):e===Corner.TOP_LEFT?n=getTopLeft(t):e===Corner.TOP_RIGHT?n=getTopRight(t):assert(!1,13),n}function getEnlargedArea(t,e){var n=Math.min(t[0],e[0]),r=Math.min(t[1],e[1]);return(Math.max(t[2],e[2])-n)*(Math.max(t[3],e[3])-r)}function getForViewAndSize(t,e,n,r,o){var i=e*r[0]/2,e=e*r[1]/2,r=Math.cos(n),n=Math.sin(n),a=i*r,i=i*n,r=e*r,e=e*n,n=t[0],t=t[1],u=n-a+e,c=n-a-e,s=n+a-e,n=n+a+e,a=t-i-r,e=t-i+r,p=t+i+r,t=t+i-r;return createOrUpdate(Math.min(u,c,s,n),Math.min(a,e,p,t),Math.max(u,c,s,n),Math.max(a,e,p,t),o)}function getHeight(t){return t[3]-t[1]}function getIntersectionArea(t,e){return getArea(getIntersection(t,e))}function getIntersection(t,e,n){n=n||createEmpty();return intersects(t,e)?(t[0]>e[0]?n[0]=t[0]:n[0]=e[0],t[1]>e[1]?n[1]=t[1]:n[1]=e[1],t[2]<e[2]?n[2]=t[2]:n[2]=e[2],t[3]<e[3]?n[3]=t[3]:n[3]=e[3]):createOrUpdateEmpty(n),n}function getMargin(t){return getWidth(t)+getHeight(t)}function getSize(t){return[t[2]-t[0],t[3]-t[1]]}function getTopLeft(t){return[t[0],t[3]]}function getTopRight(t){return[t[2],t[3]]}function getWidth(t){return t[2]-t[0]}function intersects(t,e){return t[0]<=e[2]&&t[2]>=e[0]&&t[1]<=e[3]&&t[3]>=e[1]}function isEmpty(t){return t[2]<t[0]||t[3]<t[1]}function returnOrUpdate(t,e){return e?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e):t}function scaleFromCenter(t,e){var n=(t[2]-t[0])/2*(e-1),e=(t[3]-t[1])/2*(e-1);t[0]-=n,t[2]+=n,t[1]-=e,t[3]+=e}function intersectsSegment(t,e,n){var r,o,i,a,u,c,s=!1,p=coordinateRelationship(t,e),d=coordinateRelationship(t,n);return p===Relationship.INTERSECTING||d===Relationship.INTERSECTING?s=!0:(r=t[0],o=t[1],i=t[2],t=t[3],u=e[0],e=e[1],a=n[0],e=((n=n[1])-e)/(a-u),c=u=void 0,(s=(s=(s=d&Relationship.ABOVE&&!(p&Relationship.ABOVE)?r<=(u=a-(n-t)/e)&&u<=i:s)||!(d&Relationship.RIGHT)||p&Relationship.RIGHT?s:o<=(c=n-(a-i)*e)&&c<=t)||!(d&Relationship.BELOW)||p&Relationship.BELOW?s:r<=(u=a-(n-o)/e)&&u<=i)||!(d&Relationship.LEFT)||p&Relationship.LEFT||(s=o<=(c=n-(a-r)*e)&&c<=t)),s}function applyTransform(t,e,n){t=[t[0],t[1],t[0],t[3],t[2],t[1],t[2],t[3]];return e(t,t,2),_boundingExtentXYs([t[0],t[2],t[4],t[6]],[t[1],t[3],t[5],t[7]],n)}export{boundingExtent,buffer,clone,closestSquaredDistanceXY,containsCoordinate,containsExtent,containsXY,coordinateRelationship,createEmpty,createOrUpdate,createOrUpdateEmpty,createOrUpdateFromCoordinate,createOrUpdateFromCoordinates,createOrUpdateFromFlatCoordinates,createOrUpdateFromRings,equals,extend,extendCoordinate,extendCoordinates,extendFlatCoordinates,extendRings,extendXY,forEachCorner,getArea,getBottomLeft,getBottomRight,getCenter,getCorner,getEnlargedArea,getForViewAndSize,getHeight,getIntersectionArea,getIntersection,getMargin,getSize,getTopLeft,getTopRight,getWidth,intersects,isEmpty,returnOrUpdate,scaleFromCenter,intersectsSegment,applyTransform};