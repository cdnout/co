var __extends=this&&this.__extends||function(){var r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])})(t,e)};return function(t,e){function o(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}}();import{createOrUpdateFromCoordinate,containsXY}from"../extent.js";import GeometryType from"./GeometryType.js";import SimpleGeometry from"./SimpleGeometry.js";import{deflateCoordinate}from"./flat/deflate.js";import{squaredDistance as squaredDx}from"../math.js";var Point=function(r){function t(t,e){var o=r.call(this)||this;return o.setCoordinates(t,e),o}return __extends(t,r),t.prototype.clone=function(){return new t(this.flatCoordinates.slice(),this.layout)},t.prototype.closestPointXY=function(t,e,o,r){var n=this.flatCoordinates,t=squaredDx(t,e,n[0],n[1]);if(t<r){for(var i=this.stride,s=0;s<i;++s)o[s]=n[s];return o.length=i,t}return r},t.prototype.getCoordinates=function(){return this.flatCoordinates?this.flatCoordinates.slice():[]},t.prototype.computeExtent=function(t){return createOrUpdateFromCoordinate(this.flatCoordinates,t)},t.prototype.getType=function(){return GeometryType.POINT},t.prototype.intersectsExtent=function(t){return containsXY(t,this.flatCoordinates[0],this.flatCoordinates[1])},t.prototype.setCoordinates=function(t,e){this.setLayout(e,t,0),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=deflateCoordinate(this.flatCoordinates,0,t,this.stride),this.changed()},t}(SimpleGeometry);export default Point;