var __extends=this&&this.__extends||function(){var o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])})(t,e)};return function(t,e){function i(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}}();import{extend}from"../array.js";import{closestSquaredDistanceXY}from"../extent.js";import GeometryLayout from"./GeometryLayout.js";import GeometryType from"./GeometryType.js";import LineString from"./LineString.js";import SimpleGeometry from"./SimpleGeometry.js";import{assignClosestArrayPoint,arrayMaxSquaredDelta}from"./flat/closest.js";import{deflateCoordinatesArray}from"./flat/deflate.js";import{inflateCoordinatesArray}from"./flat/inflate.js";import{interpolatePoint,lineStringsCoordinateAtM}from"./flat/interpolate.js";import{intersectsLineStringArray}from"./flat/intersectsextent.js";import{douglasPeuckerArray}from"./flat/simplify.js";var MultiLineString=function(f){function o(t,e,i){var o=f.call(this)||this;if(o.ends_=[],o.maxDelta_=-1,o.maxDeltaRevision_=-1,Array.isArray(t[0]))o.setCoordinates(t,e);else if(void 0!==e&&i)o.setFlatCoordinates(e,t),o.ends_=i;else{for(var r=o.getLayout(),n=t,s=[],a=[],l=0,d=n.length;l<d;++l){var h=n[l];0===l&&(r=h.getLayout()),extend(s,h.getFlatCoordinates()),a.push(s.length)}o.setFlatCoordinates(r,s),o.ends_=a}return o}return __extends(o,f),o.prototype.appendLineString=function(t){this.flatCoordinates?extend(this.flatCoordinates,t.getFlatCoordinates().slice()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()},o.prototype.clone=function(){return new o(this.flatCoordinates.slice(),this.layout,this.ends_.slice())},o.prototype.closestPointXY=function(t,e,i,o){return o<closestSquaredDistanceXY(this.getExtent(),t,e)?o:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),assignClosestArrayPoint(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!1,t,e,i,o))},o.prototype.getCoordinateAtM=function(t,e,i){return this.layout!=GeometryLayout.XYM&&this.layout!=GeometryLayout.XYZM||0===this.flatCoordinates.length?null:lineStringsCoordinateAtM(this.flatCoordinates,0,this.ends_,this.stride,t,void 0!==e&&e,void 0!==i&&i)},o.prototype.getCoordinates=function(){return inflateCoordinatesArray(this.flatCoordinates,0,this.ends_,this.stride)},o.prototype.getEnds=function(){return this.ends_},o.prototype.getLineString=function(t){return t<0||this.ends_.length<=t?null:new LineString(this.flatCoordinates.slice(0===t?0:this.ends_[t-1],this.ends_[t]),this.layout)},o.prototype.getLineStrings=function(){for(var t=this.flatCoordinates,e=this.ends_,i=this.layout,o=[],r=0,n=0,s=e.length;n<s;++n){var a=e[n],l=new LineString(t.slice(r,a),i);o.push(l),r=a}return o},o.prototype.getFlatMidpoints=function(){for(var t=[],e=this.flatCoordinates,i=0,o=this.ends_,r=this.stride,n=0,s=o.length;n<s;++n){var a=o[n],l=interpolatePoint(e,i,a,r,.5);extend(t,l),i=a}return t},o.prototype.getSimplifiedGeometryInternal=function(t){var e=[],i=[];return e.length=douglasPeuckerArray(this.flatCoordinates,0,this.ends_,this.stride,t,e,0,i),new o(e,GeometryLayout.XY,i)},o.prototype.getType=function(){return GeometryType.MULTI_LINE_STRING},o.prototype.intersectsExtent=function(t){return intersectsLineStringArray(this.flatCoordinates,0,this.ends_,this.stride,t)},o.prototype.setCoordinates=function(t,e){this.setLayout(e,t,2),this.flatCoordinates||(this.flatCoordinates=[]);e=deflateCoordinatesArray(this.flatCoordinates,0,t,this.stride,this.ends_);this.flatCoordinates.length=0===e.length?0:e[e.length-1],this.changed()},o}(SimpleGeometry);export default MultiLineString;