import{coordinates as reverseCoordinates}from"./reverse.js";function linearRingIsClockwise(r,e,n,i){for(var t=0,o=r[n-i],a=r[n-i+1];e<n;e+=i){var s=r[e],g=r[e+1];t+=(s-o)*(g+a),o=s,a=g}return 0<t}function linearRingsAreOriented(r,e,n,i,t){for(var o=void 0!==t&&t,a=0,s=n.length;a<s;++a){var g=n[a],l=linearRingIsClockwise(r,e,g,i);if(0===a){if(o&&l||!o&&!l)return!1}else if(o&&!l||!o&&l)return!1;e=g}return!0}function linearRingssAreOriented(r,e,n,i,t){for(var o=0,a=n.length;o<a;++o){var s=n[o];if(!linearRingsAreOriented(r,e,s,i,t))return!1;s.length&&(e=s[s.length-1])}return!0}function orientLinearRings(r,e,n,i,t){for(var o=void 0!==t&&t,a=0,s=n.length;a<s;++a){var g=n[a],l=linearRingIsClockwise(r,e,g,i);(0===a?o&&l||!o&&!l:o&&!l||!o&&l)&&reverseCoordinates(r,e,g,i),e=g}return e}function orientLinearRingsArray(r,e,n,i,t){for(var o=0,a=n.length;o<a;++o)e=orientLinearRings(r,e,n[o],i,t);return e}export{linearRingIsClockwise,linearRingsAreOriented,linearRingssAreOriented,orientLinearRings,orientLinearRingsArray};