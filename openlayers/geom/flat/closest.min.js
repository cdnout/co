import{lerp,squaredDistance as squaredDx}from"../../math.js";function assignClosest(r,a,t,e,s,n,i){var o,l=r[a],u=r[a+1],f=r[t]-l,g=r[t+1]-u;if(0==f&&0==g)o=a;else{var q=((s-l)*f+(n-u)*g)/(f*f+g*g);if(1<q)o=t;else{if(0<q){for(var v=0;v<e;++v)i[v]=lerp(r[a+v],r[t+v],q);return void(i.length=e)}o=a}}for(v=0;v<e;++v)i[v]=r[o+v];i.length=e}function maxSquaredDelta(r,a,t,e,s){var n=r[a],i=r[a+1];for(a+=e;a<t;a+=e){var o=r[a],l=r[a+1],u=squaredDx(n,i,o,l);s<u&&(s=u),n=o,i=l}return s}function arrayMaxSquaredDelta(r,a,t,e,s){for(var n=0,i=t.length;n<i;++n){var o=t[n];s=maxSquaredDelta(r,a,o,e,s),a=o}return s}function multiArrayMaxSquaredDelta(r,a,t,e,s){for(var n=0,i=t.length;n<i;++n){var o=t[n];s=arrayMaxSquaredDelta(r,a,o,e,s),a=o[o.length-1]}return s}function assignClosestPoint(r,a,t,e,s,n,i,o,l,u,f){if(a==t)return u;var g,q;if(0===s){if((q=squaredDx(i,o,r[a],r[a+1]))<u){for(g=0;g<e;++g)l[g]=r[a+g];return l.length=e,q}return u}for(var v=f||[NaN,NaN],d=a+e;d<t;)if(assignClosest(r,d-e,d,e,i,o,v),(q=squaredDx(i,o,v[0],v[1]))<u){for(u=q,g=0;g<e;++g)l[g]=v[g];d+=l.length=e}else d+=e*Math.max((Math.sqrt(q)-Math.sqrt(u))/s|0,1);if(n&&(assignClosest(r,t-e,a,e,i,o,v),(q=squaredDx(i,o,v[0],v[1]))<u)){for(u=q,g=0;g<e;++g)l[g]=v[g];l.length=e}return u}function assignClosestArrayPoint(r,a,t,e,s,n,i,o,l,u,f){for(var g=f||[NaN,NaN],q=0,v=t.length;q<v;++q){var d=t[q];u=assignClosestPoint(r,a,d,e,s,n,i,o,l,u,g),a=d}return u}function assignClosestMultiArrayPoint(r,a,t,e,s,n,i,o,l,u,f){for(var g=f||[NaN,NaN],q=0,v=t.length;q<v;++q){var d=t[q];u=assignClosestArrayPoint(r,a,d,e,s,n,i,o,l,u,g),a=d[d.length-1]}return u}export{maxSquaredDelta,arrayMaxSquaredDelta,multiArrayMaxSquaredDelta,assignClosestPoint,assignClosestArrayPoint,assignClosestMultiArrayPoint};