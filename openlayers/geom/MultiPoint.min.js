var __extends=this&&this.__extends||function(){var r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])})(t,e)};return function(t,e){function o(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}}();import{extend}from"../array.js";import{closestSquaredDistanceXY,containsXY}from"../extent.js";import GeometryType from"./GeometryType.js";import Point from"./Point.js";import SimpleGeometry from"./SimpleGeometry.js";import{deflateCoordinates}from"./flat/deflate.js";import{inflateCoordinates}from"./flat/inflate.js";import{squaredDistance as squaredDx}from"../math.js";var MultiPoint=function(r){function t(t,e){var o=r.call(this)||this;return e&&!Array.isArray(t[0])?o.setFlatCoordinates(e,t):o.setCoordinates(t,e),o}return __extends(t,r),t.prototype.appendPoint=function(t){this.flatCoordinates?extend(this.flatCoordinates,t.getFlatCoordinates()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.changed()},t.prototype.clone=function(){return new t(this.flatCoordinates.slice(),this.layout)},t.prototype.closestPointXY=function(t,e,o,r){if(r<closestSquaredDistanceXY(this.getExtent(),t,e))return r;for(var i=this.flatCoordinates,n=this.stride,s=0,a=i.length;s<a;s+=n){var f=squaredDx(t,e,i[s],i[s+1]);if(f<r){r=f;for(var l=0;l<n;++l)o[l]=i[s+l];o.length=n}}return r},t.prototype.getCoordinates=function(){return inflateCoordinates(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)},t.prototype.getPoint=function(t){var e=this.flatCoordinates?this.flatCoordinates.length/this.stride:0;return t<0||e<=t?null:new Point(this.flatCoordinates.slice(t*this.stride,(t+1)*this.stride),this.layout)},t.prototype.getPoints=function(){for(var t=this.flatCoordinates,e=this.layout,o=this.stride,r=[],i=0,n=t.length;i<n;i+=o){var s=new Point(t.slice(i,i+o),e);r.push(s)}return r},t.prototype.getType=function(){return GeometryType.MULTI_POINT},t.prototype.intersectsExtent=function(t){for(var e=this.flatCoordinates,o=this.stride,r=0,i=e.length;r<i;r+=o){var n=e[r],s=e[r+1];if(containsXY(t,n,s))return!0}return!1},t.prototype.setCoordinates=function(t,e){this.setLayout(e,t,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=deflateCoordinates(this.flatCoordinates,0,t,this.stride),this.changed()},t}(SimpleGeometry);export default MultiPoint;