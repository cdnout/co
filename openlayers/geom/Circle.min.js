var __extends=this&&this.__extends||function(){var o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};return function(t,e){function r(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}();import{createOrUpdate,forEachCorner,intersects}from"../extent.js";import GeometryType from"./GeometryType.js";import SimpleGeometry from"./SimpleGeometry.js";import{deflateCoordinate}from"./flat/deflate.js";import{rotate,translate}from"./flat/transform.js";var Circle=function(i){function t(t,e,r){var o=i.call(this)||this;return void 0!==r&&void 0===e?o.setFlatCoordinates(r,t):o.setCenterAndRadius(t,e||0,r),o}return __extends(t,i),t.prototype.clone=function(){return new t(this.flatCoordinates.slice(),void 0,this.layout)},t.prototype.closestPointXY=function(t,e,r,o){var i=this.flatCoordinates,t=t-i[0],e=e-i[1],n=t*t+e*e;if(n<o){if(0==n)for(var s=0;s<this.stride;++s)r[s]=i[s];else{var a=this.getRadius()/Math.sqrt(n);r[0]=i[0]+a*t,r[1]=i[1]+a*e;for(s=2;s<this.stride;++s)r[s]=i[s]}return r.length=this.stride,n}return o},t.prototype.containsXY=function(t,e){var r=this.flatCoordinates,t=t-r[0],e=e-r[1];return t*t+e*e<=this.getRadiusSquared_()},t.prototype.getCenter=function(){return this.flatCoordinates.slice(0,this.stride)},t.prototype.computeExtent=function(t){var e=this.flatCoordinates,r=e[this.stride]-e[0];return createOrUpdate(e[0]-r,e[1]-r,e[0]+r,e[1]+r,t)},t.prototype.getRadius=function(){return Math.sqrt(this.getRadiusSquared_())},t.prototype.getRadiusSquared_=function(){var t=this.flatCoordinates[this.stride]-this.flatCoordinates[0],e=this.flatCoordinates[this.stride+1]-this.flatCoordinates[1];return t*t+e*e},t.prototype.getType=function(){return GeometryType.CIRCLE},t.prototype.intersectsExtent=function(t){var e=this.getExtent();return!!intersects(t,e)&&(e=this.getCenter(),t[0]<=e[0]&&t[2]>=e[0]||(t[1]<=e[1]&&t[3]>=e[1]||forEachCorner(t,this.intersectsCoordinate.bind(this))))},t.prototype.setCenter=function(t){var e=this.stride,r=this.flatCoordinates[e]-this.flatCoordinates[0],o=t.slice();o[e]=o[0]+r;for(var i=1;i<e;++i)o[e+i]=t[i];this.setFlatCoordinates(this.layout,o),this.changed()},t.prototype.setCenterAndRadius=function(t,e,r){this.setLayout(r,t,0),this.flatCoordinates||(this.flatCoordinates=[]);var o=this.flatCoordinates,i=deflateCoordinate(o,0,t,this.stride);o[i++]=o[0]+e;for(var n=1,s=this.stride;n<s;++n)o[i++]=o[n];o.length=i,this.changed()},t.prototype.getCoordinates=function(){return null},t.prototype.setCoordinates=function(t,e){},t.prototype.setRadius=function(t){this.flatCoordinates[this.stride]=this.flatCoordinates[0]+t,this.changed()},t.prototype.rotate=function(t,e){var r=this.getCenter(),o=this.getStride();this.setCenter(rotate(r,0,r.length,o,t,e,r)),this.changed()},t.prototype.translate=function(t,e){var r=this.getCenter(),o=this.getStride();this.setCenter(translate(r,0,r.length,o,t,e,r)),this.changed()},t}(SimpleGeometry);Circle.prototype.transform;export default Circle;