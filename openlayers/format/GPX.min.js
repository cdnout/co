var __extends=this&&this.__extends||function(){var a=function(e,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};return function(e,t){function r(){this.constructor=e}a(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}();import Feature from"../Feature.js";import{includes}from"../array.js";import{transformGeometryWithOptions}from"./Feature.js";import XMLFeature from"./XMLFeature.js";import{readString,readDecimal,readNonNegativeInteger,readDateTime,writeStringTextNode,writeNonNegativeIntegerTextNode,writeDecimalTextNode,writeDateTimeTextNode}from"./xsd.js";import GeometryLayout from"../geom/GeometryLayout.js";import GeometryType from"../geom/GeometryType.js";import LineString from"../geom/LineString.js";import MultiLineString from"../geom/MultiLineString.js";import Point from"../geom/Point.js";import{get as getProjection}from"../proj.js";import{createElementNS,makeArrayPusher,makeArraySerializer,makeChildAppender,makeObjectPropertySetter,makeSequence,makeSimpleNodeFactory,makeStructureNS,OBJECT_PROPERTY_NODE_FACTORY,parseNode,pushParseAndPop,pushSerializeAndPop,XML_SCHEMA_INSTANCE_URI}from"../xml.js";var NAMESPACE_URIS=[null,"http://www.topografix.com/GPX/1/0","http://www.topografix.com/GPX/1/1"],SCHEMA_LOCATION="http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd",FEATURE_READER={rte:readRte,trk:readTrk,wpt:readWpt},GPX_PARSERS=makeStructureNS(NAMESPACE_URIS,{rte:makeArrayPusher(readRte),trk:makeArrayPusher(readTrk),wpt:makeArrayPusher(readWpt)}),LINK_PARSERS=makeStructureNS(NAMESPACE_URIS,{text:makeObjectPropertySetter(readString,"linkText"),type:makeObjectPropertySetter(readString,"linkType")}),GPX_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{rte:makeChildAppender(writeRte),trk:makeChildAppender(writeTrk),wpt:makeChildAppender(writeWpt)}),GPX=function(r){function e(e){var t=r.call(this)||this,e=e||{};return t.dataProjection=getProjection("EPSG:4326"),t.readExtensions_=e.readExtensions,t}return __extends(e,r),e.prototype.handleReadExtensions_=function(e){for(var t=0,r=(e=e||[]).length;t<r;++t){var a,i=e[t];this.readExtensions_&&(a=i.get("extensionsNode_")||null,this.readExtensions_(i,a)),i.set("extensionsNode_",void 0)}},e.prototype.readFeatureFromNode=function(e,t){if(!includes(NAMESPACE_URIS,e.namespaceURI))return null;var r=FEATURE_READER[e.localName];if(!r)return null;r=r(e,[this.getReadOptions(e,t)]);return r?(this.handleReadExtensions_([r]),r):null},e.prototype.readFeaturesFromNode=function(e,t){return includes(NAMESPACE_URIS,e.namespaceURI)&&"gpx"==e.localName&&(e=pushParseAndPop([],GPX_PARSERS,e,[this.getReadOptions(e,t)]))?(this.handleReadExtensions_(e),e):[]},e.prototype.writeFeaturesNode=function(e,t){t=this.adaptOptions(t);var r=createElementNS("http://www.topografix.com/GPX/1/1","gpx");return r.setAttributeNS("http://www.w3.org/2000/xmlns/","xmlns:xsi",XML_SCHEMA_INSTANCE_URI),r.setAttributeNS(XML_SCHEMA_INSTANCE_URI,"xsi:schemaLocation",SCHEMA_LOCATION),r.setAttribute("version","1.1"),r.setAttribute("creator","OpenLayers"),pushSerializeAndPop({node:r},GPX_SERIALIZERS,GPX_NODE_FACTORY,e,[t]),r},e}(XMLFeature),RTE_PARSERS=makeStructureNS(NAMESPACE_URIS,{name:makeObjectPropertySetter(readString),cmt:makeObjectPropertySetter(readString),desc:makeObjectPropertySetter(readString),src:makeObjectPropertySetter(readString),link:parseLink,number:makeObjectPropertySetter(readNonNegativeInteger),extensions:parseExtensions,type:makeObjectPropertySetter(readString),rtept:parseRtePt}),RTEPT_PARSERS=makeStructureNS(NAMESPACE_URIS,{ele:makeObjectPropertySetter(readDecimal),time:makeObjectPropertySetter(readDateTime)}),TRK_PARSERS=makeStructureNS(NAMESPACE_URIS,{name:makeObjectPropertySetter(readString),cmt:makeObjectPropertySetter(readString),desc:makeObjectPropertySetter(readString),src:makeObjectPropertySetter(readString),link:parseLink,number:makeObjectPropertySetter(readNonNegativeInteger),type:makeObjectPropertySetter(readString),extensions:parseExtensions,trkseg:parseTrkSeg}),TRKSEG_PARSERS=makeStructureNS(NAMESPACE_URIS,{trkpt:parseTrkPt}),TRKPT_PARSERS=makeStructureNS(NAMESPACE_URIS,{ele:makeObjectPropertySetter(readDecimal),time:makeObjectPropertySetter(readDateTime)}),WPT_PARSERS=makeStructureNS(NAMESPACE_URIS,{ele:makeObjectPropertySetter(readDecimal),time:makeObjectPropertySetter(readDateTime),magvar:makeObjectPropertySetter(readDecimal),geoidheight:makeObjectPropertySetter(readDecimal),name:makeObjectPropertySetter(readString),cmt:makeObjectPropertySetter(readString),desc:makeObjectPropertySetter(readString),src:makeObjectPropertySetter(readString),link:parseLink,sym:makeObjectPropertySetter(readString),type:makeObjectPropertySetter(readString),fix:makeObjectPropertySetter(readString),sat:makeObjectPropertySetter(readNonNegativeInteger),hdop:makeObjectPropertySetter(readDecimal),vdop:makeObjectPropertySetter(readDecimal),pdop:makeObjectPropertySetter(readDecimal),ageofdgpsdata:makeObjectPropertySetter(readDecimal),dgpsid:makeObjectPropertySetter(readNonNegativeInteger),extensions:parseExtensions}),LINK_SEQUENCE=["text","type"],LINK_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{text:makeChildAppender(writeStringTextNode),type:makeChildAppender(writeStringTextNode)}),RTE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["name","cmt","desc","src","link","number","type","rtept"]),RTE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{name:makeChildAppender(writeStringTextNode),cmt:makeChildAppender(writeStringTextNode),desc:makeChildAppender(writeStringTextNode),src:makeChildAppender(writeStringTextNode),link:makeChildAppender(writeLink),number:makeChildAppender(writeNonNegativeIntegerTextNode),type:makeChildAppender(writeStringTextNode),rtept:makeArraySerializer(makeChildAppender(writeWptType))}),RTEPT_TYPE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["ele","time"]),TRK_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["name","cmt","desc","src","link","number","type","trkseg"]),TRK_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{name:makeChildAppender(writeStringTextNode),cmt:makeChildAppender(writeStringTextNode),desc:makeChildAppender(writeStringTextNode),src:makeChildAppender(writeStringTextNode),link:makeChildAppender(writeLink),number:makeChildAppender(writeNonNegativeIntegerTextNode),type:makeChildAppender(writeStringTextNode),trkseg:makeArraySerializer(makeChildAppender(writeTrkSeg))}),TRKSEG_NODE_FACTORY=makeSimpleNodeFactory("trkpt"),TRKSEG_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{trkpt:makeChildAppender(writeWptType)}),WPT_TYPE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["ele","time","magvar","geoidheight","name","cmt","desc","src","link","sym","type","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid"]),WPT_TYPE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{ele:makeChildAppender(writeDecimalTextNode),time:makeChildAppender(writeDateTimeTextNode),magvar:makeChildAppender(writeDecimalTextNode),geoidheight:makeChildAppender(writeDecimalTextNode),name:makeChildAppender(writeStringTextNode),cmt:makeChildAppender(writeStringTextNode),desc:makeChildAppender(writeStringTextNode),src:makeChildAppender(writeStringTextNode),link:makeChildAppender(writeLink),sym:makeChildAppender(writeStringTextNode),type:makeChildAppender(writeStringTextNode),fix:makeChildAppender(writeStringTextNode),sat:makeChildAppender(writeNonNegativeIntegerTextNode),hdop:makeChildAppender(writeDecimalTextNode),vdop:makeChildAppender(writeDecimalTextNode),pdop:makeChildAppender(writeDecimalTextNode),ageofdgpsdata:makeChildAppender(writeDecimalTextNode),dgpsid:makeChildAppender(writeNonNegativeIntegerTextNode)}),GEOMETRY_TYPE_TO_NODENAME={Point:"wpt",LineString:"rte",MultiLineString:"trk"};function GPX_NODE_FACTORY(e,t,r){e=e.getGeometry();if(e){e=GEOMETRY_TYPE_TO_NODENAME[e.getType()];if(e)return t=t[t.length-1].node,createElementNS(t.namespaceURI,e)}}function appendCoordinate(e,t,r,a){return e.push(parseFloat(r.getAttribute("lon")),parseFloat(r.getAttribute("lat"))),"ele"in a?(e.push(a.ele),delete a.ele,t.hasZ=!0):e.push(0),"time"in a?(e.push(a.time),delete a.time,t.hasM=!0):e.push(0),e}function applyLayoutOptions(e,t,r){var a=GeometryLayout.XY,i=2;if(e.hasZ&&e.hasM?(a=GeometryLayout.XYZM,i=4):e.hasZ?(a=GeometryLayout.XYZ,i=3):e.hasM&&(a=GeometryLayout.XYM,i=3),4!==i){for(var n=0,o=t.length/4;n<o;n++)t[n*i]=t[4*n],t[n*i+1]=t[4*n+1],e.hasZ&&(t[n*i+2]=t[4*n+2]),e.hasM&&(t[n*i+2]=t[4*n+3]);if(t.length=t.length/4*i,r)for(n=0,o=r.length;n<o;n++)r[n]=r[n]/4*i}return a}function parseLink(e,t){var r=t[t.length-1],a=e.getAttribute("href");null!==a&&(r.link=a),parseNode(LINK_PARSERS,e,t)}function parseExtensions(e,t){t[t.length-1].extensionsNode_=e}function parseRtePt(e,t){var r=pushParseAndPop({},RTEPT_PARSERS,e,t);r&&appendCoordinate((t=t[t.length-1]).flatCoordinates,t.layoutOptions,e,r)}function parseTrkPt(e,t){var r=pushParseAndPop({},TRKPT_PARSERS,e,t);r&&appendCoordinate((t=t[t.length-1]).flatCoordinates,t.layoutOptions,e,r)}function parseTrkSeg(e,t){var r=t[t.length-1],e=(parseNode(TRKSEG_PARSERS,e,t),r.flatCoordinates);r.ends.push(e.length)}function readRte(e,t){var r,a=t[0],e=pushParseAndPop({flatCoordinates:[],layoutOptions:{}},RTE_PARSERS,e,t);if(e)return t=e.flatCoordinates,delete e.flatCoordinates,r=e.layoutOptions,delete e.layoutOptions,r=applyLayoutOptions(r,t),t=new LineString(t,r),transformGeometryWithOptions(t,!1,a),r=new Feature(t),r.setProperties(e,!0),r}function readTrk(e,t){var r,a,i=t[0],e=pushParseAndPop({flatCoordinates:[],ends:[],layoutOptions:{}},TRK_PARSERS,e,t);if(e)return t=e.flatCoordinates,delete e.flatCoordinates,r=e.ends,delete e.ends,a=e.layoutOptions,delete e.layoutOptions,a=applyLayoutOptions(a,t,r),t=new MultiLineString(t,a,r),transformGeometryWithOptions(t,!1,i),a=new Feature(t),a.setProperties(e,!0),a}function readWpt(e,t){var r,a=t[0],t=pushParseAndPop({},WPT_PARSERS,e,t);if(t)return r={},e=appendCoordinate([],r,e,t),r=applyLayoutOptions(r,e),e=new Point(e,r),transformGeometryWithOptions(e,!1,a),r=new Feature(e),r.setProperties(t,!0),r}function writeLink(e,t,r){e.setAttribute("href",t);t=r[r.length-1].properties,t=[t.linkText,t.linkType];pushSerializeAndPop({node:e},LINK_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,t,r,LINK_SEQUENCE)}function writeWptType(e,t,r){var a=r[r.length-1],i=a.node.namespaceURI,n=a.properties;switch(e.setAttributeNS(null,"lat",String(t[1])),e.setAttributeNS(null,"lon",String(t[0])),a.geometryLayout){case GeometryLayout.XYZM:0!==t[3]&&(n.time=t[3]);case GeometryLayout.XYZ:0!==t[2]&&(n.ele=t[2]);break;case GeometryLayout.XYM:0!==t[2]&&(n.time=t[2])}a=("rtept"==e.nodeName?RTEPT_TYPE_SEQUENCE:WPT_TYPE_SEQUENCE)[i],i=makeSequence(n,a);pushSerializeAndPop({node:e,properties:n},WPT_TYPE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,i,r,a)}function writeRte(e,t,r){var a=r[0],i=t.getProperties(),e={node:e},t=(e.properties=i,t.getGeometry()),a=(t.getType()==GeometryType.LINE_STRING&&(t=transformGeometryWithOptions(t,!0,a),e.geometryLayout=t.getLayout(),i.rtept=t.getCoordinates()),r[r.length-1].node),t=RTE_SEQUENCE[a.namespaceURI],a=makeSequence(i,t);pushSerializeAndPop(e,RTE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,a,r,t)}function writeTrk(e,t,r){var a=r[0],i=t.getProperties(),e={node:e},t=(e.properties=i,t.getGeometry()),a=(t.getType()==GeometryType.MULTI_LINE_STRING&&(t=transformGeometryWithOptions(t,!0,a),i.trkseg=t.getLineStrings()),r[r.length-1].node),t=TRK_SEQUENCE[a.namespaceURI],a=makeSequence(i,t);pushSerializeAndPop(e,TRK_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,a,r,t)}function writeTrkSeg(e,t,r){e={node:e};e.geometryLayout=t.getLayout(),e.properties={},pushSerializeAndPop(e,TRKSEG_SERIALIZERS,TRKSEG_NODE_FACTORY,t.getCoordinates(),r)}function writeWpt(e,t,r){var a=r[0],i=r[r.length-1],t=(i.properties=t.getProperties(),t.getGeometry());t.getType()==GeometryType.POINT&&(t=transformGeometryWithOptions(t,!0,a),i.geometryLayout=t.getLayout(),writeWptType(e,t.getCoordinates(),r))}export default GPX;