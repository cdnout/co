var __extends=this&&this.__extends||function(){var o=function(e,t){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};return function(e,t){function r(){this.constructor=e}o(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}();import{createOrUpdate}from"../extent.js";import{transformExtentWithOptions,transformGeometryWithOptions}from"./Feature.js";import GMLBase,{GMLNS}from"./GMLBase.js";import{writeStringTextNode}from"./xsd.js";import{assign}from"../obj.js";import{get as getProjection}from"../proj.js";import{createElementNS,getAllTextContent,makeArrayPusher,makeChildAppender,makeReplacer,makeSimpleNodeFactory,OBJECT_PROPERTY_NODE_FACTORY,pushParseAndPop,pushSerializeAndPop}from"../xml.js";var schemaLocation=GMLNS+" http://schemas.opengis.net/gml/2.1.2/feature.xsd",MULTIGEOMETRY_TO_MEMBER_NODENAME={MultiLineString:"lineStringMember",MultiCurve:"curveMember",MultiPolygon:"polygonMember",MultiSurface:"surfaceMember"},GML2=function(r){function e(e){var t=this,e=e||{};return(t=r.call(this,e)||this).FEATURE_COLLECTION_PARSERS[GMLNS].featureMember=makeArrayPusher(t.readFeaturesInternal),t.schemaLocation=e.schemaLocation||schemaLocation,t}return __extends(e,r),e.prototype.readFlatCoordinates_=function(e,t){for(var e=getAllTextContent(e,!1).replace(/^\s*|\s*$/g,""),t=t[0].srsName,r="enu",o=(!t||(t=getProjection(t))&&(r=t.getAxisOrientation()),e.trim().split(/\s+/)),n=[],i=0,a=o.length;i<a;i++){var p=o[i].split(/,+/),s=parseFloat(p[0]),l=parseFloat(p[1]),p=3===p.length?parseFloat(p[2]):0;"en"===r.substr(0,2)?n.push(s,l,p):n.push(l,s,p)}return n},e.prototype.readBox_=function(e,t){e=pushParseAndPop([null],this.BOX_PARSERS_,e,t,this);return createOrUpdate(e[1][0],e[1][1],e[1][3],e[1][4])},e.prototype.innerBoundaryIsParser_=function(e,t){e=pushParseAndPop(void 0,this.RING_PARSERS,e,t,this);e&&t[t.length-1].push(e)},e.prototype.outerBoundaryIsParser_=function(e,t){e=pushParseAndPop(void 0,this.RING_PARSERS,e,t,this);e&&(t[t.length-1][0]=e)},e.prototype.GEOMETRY_NODE_FACTORY_=function(e,t,r){var o,t=t[t.length-1],n=t.multiSurface,i=t.surface,t=t.multiCurve;return Array.isArray(e)?o="Envelope":"MultiPolygon"===(o=e.getType())&&!0===n?o="MultiSurface":"Polygon"===o&&!0===i?o="Surface":"MultiLineString"===o&&!0===t&&(o="MultiCurve"),createElementNS("http://www.opengis.net/gml",o)},e.prototype.writeFeatureElement=function(e,t,r){var o,n=t.getId(),i=(n&&e.setAttribute("fid",n),r[r.length-1]),a=i.featureNS,p=t.getGeometryName(),s=(i.serializers||(i.serializers={},i.serializers[a]={}),t.getProperties()),l=[],u=[];for(o in s){var d=s[o];null!==d&&(l.push(o),u.push(d),o==p||"function"==typeof d.getSimplifiedGeometry?o in i.serializers[a]||(i.serializers[a][o]=makeChildAppender(this.writeGeometryElement,this)):o in i.serializers[a]||(i.serializers[a][o]=makeChildAppender(writeStringTextNode)))}n=assign({},i);n.node=e,pushSerializeAndPop(n,i.serializers,makeSimpleNodeFactory(void 0,a),u,r,l)},e.prototype.writeCurveOrLineString_=function(e,t,r){var o=r[r.length-1].srsName;"LineStringSegment"!==e.nodeName&&o&&e.setAttribute("srsName",o),"LineString"===e.nodeName||"LineStringSegment"===e.nodeName?(o=this.createCoordinatesNode_(e.namespaceURI),e.appendChild(o),this.writeCoordinates_(o,t,r)):"Curve"===e.nodeName&&(o=createElementNS(e.namespaceURI,"segments"),e.appendChild(o),this.writeCurveSegments_(o,t,r))},e.prototype.writeLineStringOrCurveMember_=function(e,t,r){var o=this.GEOMETRY_NODE_FACTORY_(t,r);o&&(e.appendChild(o),this.writeCurveOrLineString_(o,t,r))},e.prototype.writeMultiCurveOrLineString_=function(e,t,r){var o=r[r.length-1],n=o.hasZ,i=o.srsName,o=o.curve,t=(i&&e.setAttribute("srsName",i),t.getLineStrings());pushSerializeAndPop({node:e,hasZ:n,srsName:i,curve:o},this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,t,r,void 0,this)},e.prototype.writeGeometryElement=function(e,t,r){var o=r[r.length-1],n=assign({},o);n.node=e,e=Array.isArray(t)?transformExtentWithOptions(t,o):transformGeometryWithOptions(t,!0,o),pushSerializeAndPop(n,this.GEOMETRY_SERIALIZERS_,this.GEOMETRY_NODE_FACTORY_,[e],r,void 0,this)},e.prototype.createCoordinatesNode_=function(e){e=createElementNS(e,"coordinates");return e.setAttribute("decimal","."),e.setAttribute("cs",","),e.setAttribute("ts"," "),e},e.prototype.writeCoordinates_=function(e,t,r){for(var r=r[r.length-1],o=r.hasZ,n=r.srsName,i=t.getCoordinates(),a=i.length,p=new Array(a),s=0;s<a;++s){var l=i[s];p[s]=this.getCoords_(l,n,o)}writeStringTextNode(e,p.join(" "))},e.prototype.writeCurveSegments_=function(e,t,r){var o=createElementNS(e.namespaceURI,"LineStringSegment");e.appendChild(o),this.writeCurveOrLineString_(o,t,r)},e.prototype.writeSurfaceOrPolygon_=function(e,t,r){var o,n=r[r.length-1],i=n.hasZ,n=n.srsName;"PolygonPatch"!==e.nodeName&&n&&e.setAttribute("srsName",n),"Polygon"===e.nodeName||"PolygonPatch"===e.nodeName?(o=t.getLinearRings(),pushSerializeAndPop({node:e,hasZ:i,srsName:n},this.RING_SERIALIZERS_,this.RING_NODE_FACTORY_,o,r,void 0,this)):"Surface"===e.nodeName&&(i=createElementNS(e.namespaceURI,"patches"),e.appendChild(i),this.writeSurfacePatches_(i,t,r))},e.prototype.RING_NODE_FACTORY_=function(e,t,r){var t=t[t.length-1],o=t.node,n=t.exteriorWritten;return void 0===n&&(t.exteriorWritten=!0),createElementNS(o.namespaceURI,void 0!==n?"innerBoundaryIs":"outerBoundaryIs")},e.prototype.writeSurfacePatches_=function(e,t,r){var o=createElementNS(e.namespaceURI,"PolygonPatch");e.appendChild(o),this.writeSurfaceOrPolygon_(o,t,r)},e.prototype.writeRing_=function(e,t,r){var o=createElementNS(e.namespaceURI,"LinearRing");e.appendChild(o),this.writeLinearRing_(o,t,r)},e.prototype.getCoords_=function(e,t,r){var o="enu",t="en"===(o=t?getProjection(t).getAxisOrientation():o).substr(0,2)?e[0]+","+e[1]:e[1]+","+e[0];return r&&(t+=","+(e[2]||0)),t},e.prototype.writePoint_=function(e,t,r){var r=r[r.length-1],o=r.hasZ,r=r.srsName,n=(r&&e.setAttribute("srsName",r),this.createCoordinatesNode_(e.namespaceURI)),e=(e.appendChild(n),t.getCoordinates()),t=this.getCoords_(e,r,o);writeStringTextNode(n,t)},e.prototype.writeMultiPoint_=function(e,t,r){var o=r[r.length-1],n=o.hasZ,o=o.srsName,t=(o&&e.setAttribute("srsName",o),t.getPoints());pushSerializeAndPop({node:e,hasZ:n,srsName:o},this.POINTMEMBER_SERIALIZERS_,makeSimpleNodeFactory("pointMember"),t,r,void 0,this)},e.prototype.writePointMember_=function(e,t,r){var o=createElementNS(e.namespaceURI,"Point");e.appendChild(o),this.writePoint_(o,t,r)},e.prototype.writeLinearRing_=function(e,t,r){var o=r[r.length-1].srsName,o=(o&&e.setAttribute("srsName",o),this.createCoordinatesNode_(e.namespaceURI));e.appendChild(o),this.writeCoordinates_(o,t,r)},e.prototype.writeMultiSurfaceOrPolygon_=function(e,t,r){var o=r[r.length-1],n=o.hasZ,i=o.srsName,o=o.surface,t=(i&&e.setAttribute("srsName",i),t.getPolygons());pushSerializeAndPop({node:e,hasZ:n,srsName:i,surface:o},this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,t,r,void 0,this)},e.prototype.writeSurfaceOrPolygonMember_=function(e,t,r){var o=this.GEOMETRY_NODE_FACTORY_(t,r);o&&(e.appendChild(o),this.writeSurfaceOrPolygon_(o,t,r))},e.prototype.writeEnvelope=function(e,t,r){var o=r[r.length-1].srsName,o=(o&&e.setAttribute("srsName",o),[t[0]+" "+t[1],t[2]+" "+t[3]]);pushSerializeAndPop({node:e},this.ENVELOPE_SERIALIZERS_,OBJECT_PROPERTY_NODE_FACTORY,o,r,["lowerCorner","upperCorner"],this)},e.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_=function(e,t,r){t=t[t.length-1].node;return createElementNS("http://www.opengis.net/gml",MULTIGEOMETRY_TO_MEMBER_NODENAME[t.nodeName])},e}(GMLBase);GML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS={"http://www.opengis.net/gml":{coordinates:makeReplacer(GML2.prototype.readFlatCoordinates_)}},GML2.prototype.FLAT_LINEAR_RINGS_PARSERS={"http://www.opengis.net/gml":{innerBoundaryIs:GML2.prototype.innerBoundaryIsParser_,outerBoundaryIs:GML2.prototype.outerBoundaryIsParser_}},GML2.prototype.BOX_PARSERS_={"http://www.opengis.net/gml":{coordinates:makeArrayPusher(GML2.prototype.readFlatCoordinates_)}},GML2.prototype.GEOMETRY_PARSERS={"http://www.opengis.net/gml":{Point:makeReplacer(GMLBase.prototype.readPoint),MultiPoint:makeReplacer(GMLBase.prototype.readMultiPoint),LineString:makeReplacer(GMLBase.prototype.readLineString),MultiLineString:makeReplacer(GMLBase.prototype.readMultiLineString),LinearRing:makeReplacer(GMLBase.prototype.readLinearRing),Polygon:makeReplacer(GMLBase.prototype.readPolygon),MultiPolygon:makeReplacer(GMLBase.prototype.readMultiPolygon),Box:makeReplacer(GML2.prototype.readBox_)}},GML2.prototype.GEOMETRY_SERIALIZERS_={"http://www.opengis.net/gml":{Curve:makeChildAppender(GML2.prototype.writeCurveOrLineString_),MultiCurve:makeChildAppender(GML2.prototype.writeMultiCurveOrLineString_),Point:makeChildAppender(GML2.prototype.writePoint_),MultiPoint:makeChildAppender(GML2.prototype.writeMultiPoint_),LineString:makeChildAppender(GML2.prototype.writeCurveOrLineString_),MultiLineString:makeChildAppender(GML2.prototype.writeMultiCurveOrLineString_),LinearRing:makeChildAppender(GML2.prototype.writeLinearRing_),Polygon:makeChildAppender(GML2.prototype.writeSurfaceOrPolygon_),MultiPolygon:makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon_),Surface:makeChildAppender(GML2.prototype.writeSurfaceOrPolygon_),MultiSurface:makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon_),Envelope:makeChildAppender(GML2.prototype.writeEnvelope)}},GML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_={"http://www.opengis.net/gml":{lineStringMember:makeChildAppender(GML2.prototype.writeLineStringOrCurveMember_),curveMember:makeChildAppender(GML2.prototype.writeLineStringOrCurveMember_)}},GML2.prototype.RING_SERIALIZERS_={"http://www.opengis.net/gml":{outerBoundaryIs:makeChildAppender(GML2.prototype.writeRing_),innerBoundaryIs:makeChildAppender(GML2.prototype.writeRing_)}},GML2.prototype.POINTMEMBER_SERIALIZERS_={"http://www.opengis.net/gml":{pointMember:makeChildAppender(GML2.prototype.writePointMember_)}},GML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_={"http://www.opengis.net/gml":{surfaceMember:makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember_),polygonMember:makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember_)}},GML2.prototype.ENVELOPE_SERIALIZERS_={"http://www.opengis.net/gml":{lowerCorner:makeChildAppender(writeStringTextNode),upperCorner:makeChildAppender(writeStringTextNode)}};export default GML2;