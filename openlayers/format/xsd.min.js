import{getAllTextContent,DOCUMENT}from"../xml.js";import{padNumber}from"../string.js";function readBoolean(e){return readBooleanString(getAllTextContent(e,!1))}function readBooleanString(e){e=/^\s*(true|1)|(false|0)\s*$/.exec(e);if(e)return void 0!==e[1]||!1}function readDateTime(e){e=getAllTextContent(e,!1),e=Date.parse(e);return isNaN(e)?void 0:e/1e3}function readDecimal(e){return readDecimalString(getAllTextContent(e,!1))}function readDecimalString(e){e=/^\s*([+\-]?\d*\.?\d+(?:e[+\-]?\d+)?)\s*$/i.exec(e);if(e)return parseFloat(e[1])}function readNonNegativeInteger(e){return readNonNegativeIntegerString(getAllTextContent(e,!1))}function readNonNegativeIntegerString(e){e=/^\s*(\d+)\s*$/.exec(e);if(e)return parseInt(e[1],10)}function readString(e){return getAllTextContent(e,!1).trim()}function writeBooleanTextNode(e,t){writeStringTextNode(e,t?"1":"0")}function writeCDATASection(e,t){e.appendChild(DOCUMENT.createCDATASection(t))}function writeDateTimeTextNode(e,t){t=new Date(1e3*t),t=t.getUTCFullYear()+"-"+padNumber(t.getUTCMonth()+1,2)+"-"+padNumber(t.getUTCDate(),2)+"T"+padNumber(t.getUTCHours(),2)+":"+padNumber(t.getUTCMinutes(),2)+":"+padNumber(t.getUTCSeconds(),2)+"Z";e.appendChild(DOCUMENT.createTextNode(t))}function writeDecimalTextNode(e,t){t=t.toPrecision();e.appendChild(DOCUMENT.createTextNode(t))}function writeNonNegativeIntegerTextNode(e,t){t=t.toString();e.appendChild(DOCUMENT.createTextNode(t))}function writeStringTextNode(e,t){e.appendChild(DOCUMENT.createTextNode(t))}export{readBoolean,readBooleanString,readDateTime,readDecimal,readDecimalString,readNonNegativeInteger,readNonNegativeIntegerString,readString,writeBooleanTextNode,writeCDATASection,writeDateTimeTextNode,writeDecimalTextNode,writeNonNegativeIntegerTextNode,writeStringTextNode};