var __extends=this&&this.__extends||function(){var o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};return function(t,e){function r(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}();import{getChangeEventType}from"../Object.js";import{createCanvasContext2D}from"../dom.js";import VectorLayer from"./Vector.js";import{assign}from"../obj.js";import WebGLPointsLayerRenderer from"../renderer/webgl/PointsLayer.js";var Property={BLUR:"blur",GRADIENT:"gradient",RADIUS:"radius"},DEFAULT_GRADIENT=["#00f","#0ff","#0f0","#ff0","#f00"],Heatmap=function(n){function t(t){var e=this,t=t||{},r=assign({},t),o=(delete r.gradient,delete r.radius,delete r.blur,delete r.weight,(e=n.call(this,r)||this).gradient_=null,e.addEventListener(getChangeEventType(Property.GRADIENT),e.handleGradientChanged_),e.setGradient(t.gradient||DEFAULT_GRADIENT),e.setBlur(void 0!==t.blur?t.blur:15),e.setRadius(void 0!==t.radius?t.radius:8),t.weight||"weight");return e.weightFunction_="string"==typeof o?function(t){return t.get(o)}:o,e.setRenderOrder(null),e}return __extends(t,n),t.prototype.getBlur=function(){return this.get(Property.BLUR)},t.prototype.getGradient=function(){return this.get(Property.GRADIENT)},t.prototype.getRadius=function(){return this.get(Property.RADIUS)},t.prototype.handleGradientChanged_=function(){this.gradient_=createGradient(this.getGradient())},t.prototype.setBlur=function(t){this.set(Property.BLUR,t)},t.prototype.setGradient=function(t){this.set(Property.GRADIENT,t)},t.prototype.setRadius=function(t){this.set(Property.RADIUS,t)},t.prototype.createRenderer=function(){return new WebGLPointsLayerRenderer(this,{vertexShader:"\n        precision mediump float;\n        attribute vec2 a_position;\n        attribute vec2 a_texCoord;\n        attribute vec2 a_offsets;\n        attribute float a_opacity;\n\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n\n        varying vec2 v_texCoord;\n        varying float v_opacity;\n\n        void main(void) {\n          vec4 offsets = u_offsetScaleMatrix * vec4(a_offsets, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets * u_size;\n          v_texCoord = a_texCoord;\n          v_opacity = a_opacity;\n        }",fragmentShader:"\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_opacity;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_opacity;\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\n        }",uniforms:{u_size:function(){return 2*(this.get(Property.RADIUS)+this.get(Property.BLUR))}.bind(this),u_blurSlope:function(){return this.get(Property.RADIUS)/Math.max(1,this.get(Property.BLUR))}.bind(this)},postProcesses:[{fragmentShader:"\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }",uniforms:{u_gradientTexture:this.gradient_}}],opacityCallback:this.weightFunction_})},t}(VectorLayer);function createGradient(t){for(var e=createCanvasContext2D(1,256),r=e.createLinearGradient(0,0,1,256),o=1/(t.length-1),n=0,i=t.length;n<i;++n)r.addColorStop(n*o,t[n]);return e.fillStyle=r,e.fillRect(0,0,1,256),e.canvas}export default Heatmap;