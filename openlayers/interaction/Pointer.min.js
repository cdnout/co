var __extends=this&&this.__extends||function(){var r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};return function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}}();import MapBrowserEventType from"../MapBrowserEventType.js";import Interaction from"./Interaction.js";import{getValues}from"../obj.js";var PointerInteraction=function(n){function e(e){var t=this,e=e||{},t=n.call(this,e)||this;return e.handleDownEvent&&(t.handleDownEvent=e.handleDownEvent),e.handleDragEvent&&(t.handleDragEvent=e.handleDragEvent),e.handleMoveEvent&&(t.handleMoveEvent=e.handleMoveEvent),e.handleUpEvent&&(t.handleUpEvent=e.handleUpEvent),e.stopDown&&(t.stopDown=e.stopDown),t.handlingDownUpSequence=!1,t.trackedPointers_={},t.targetPointers=[],t}return __extends(e,n),e.prototype.handleDownEvent=function(e){return!1},e.prototype.handleDragEvent=function(e){},e.prototype.handleEvent=function(e){if(!e.pointerEvent)return!0;var t,n=!1;return this.updateTrackedPointers_(e),this.handlingDownUpSequence?e.type==MapBrowserEventType.POINTERDRAG?this.handleDragEvent(e):e.type==MapBrowserEventType.POINTERUP&&(t=this.handleUpEvent(e),this.handlingDownUpSequence=t&&0<this.targetPointers.length):e.type==MapBrowserEventType.POINTERDOWN?((t=this.handleDownEvent(e))&&e.preventDefault(),this.handlingDownUpSequence=t,n=this.stopDown(t)):e.type==MapBrowserEventType.POINTERMOVE&&this.handleMoveEvent(e),!n},e.prototype.handleMoveEvent=function(e){},e.prototype.handleUpEvent=function(e){return!1},e.prototype.stopDown=function(e){return e},e.prototype.updateTrackedPointers_=function(e){var t,n;isPointerDraggingEvent(e)&&(n=(t=e.pointerEvent).pointerId.toString(),e.type==MapBrowserEventType.POINTERUP?delete this.trackedPointers_[n]:(e.type==MapBrowserEventType.POINTERDOWN||n in this.trackedPointers_)&&(this.trackedPointers_[n]=t),this.targetPointers=getValues(this.trackedPointers_))},e}(Interaction);function centroid(e){for(var t=e.length,n=0,r=0,o=0;o<t;o++)n+=e[o].clientX,r+=e[o].clientY;return[n/t,r/t]}function isPointerDraggingEvent(e){e=e.type;return e===MapBrowserEventType.POINTERDOWN||e===MapBrowserEventType.POINTERDRAG||e===MapBrowserEventType.POINTERUP}export default PointerInteraction;export{centroid};