/*! CAF: cag.js
	v12.0.1 (c) 2021 Kyle Simpson
	MIT License: http://getify.mit-license.org
*/
!function UMD(e,n,r,t){"function"==typeof define&&define.amd?(r=Object.values(r),define(e,r,t)):"undefined"!=typeof module&&module.exports?(r=Object.keys(r).map((e=>require(e))),module.exports=t(...r)):(r=Object.values(r).map((e=>n[e])),n[e]=t(...r))}("CAG","undefined"!=typeof globalThis?globalThis:"undefined"!=typeof global?global:"undefined"!=typeof window?window:"undefined"!=typeof self?self:new Function("return this")(),{"./shared.js":"CAFShared"},(function DEF(e){"use strict";var{TIMEOUT_TOKEN:n,cancelToken:r,signalPromise:t,processTokenOrSignal:o}=e;let i={};i=function CAG(e){return function instance(r,...t){var i,f;if(({tokenOrSignal:r,signal:i,signalPr:f}=o(r)),i.aborted)throw i.reason||"Aborted";var d=function deferred(){var e;return{pr:new Promise((function c(n){e=n})),resolve:e}}(),{it:v,ait:p}=function runner(e,n,r,t,...o){var i=e.call(this,{signal:t,pwait:pwait},...o);e=o=null;var f=t.pr.catch((e=>{throw{[s]:!0,reason:e}}));return{it:i,ait:async function*runner(){var e,t=a;try{for(;!n.resolved;)if(t!==a?(e=t,t=a,e=i.throw(e)):e=i.next(e),isPromise(e.value))if(l.has(e.value)){l.delete(e.value);try{if((e=await Promise.race([n,f,e.value]))===u)return}catch(e){if(e[s]){let n=i.return();throw void 0!==n.value?n.value:e.reason}t=e}}else e=yield e.value;else{if(e.done)return e.value;e=yield e.value}}finally{i=n=null,r()}}()}}(e,d.pr,onComplete,i,...t),y=p.return;return p.return=function doReturn(e){try{return d.pr.resolved=!0,d.resolve(u),Promise.resolve(v.return(e))}finally{y.call(p),onComplete()}},p;function onComplete(){r&&r!==i&&r[n]&&r.abort(),p&&(p.return=y,r=d=v=p=y=null)}}};var l=new WeakSet;const a=Symbol("unset"),u=Symbol("returned"),s=Symbol("canceled");function isPromise(e){return e&&"object"==typeof e&&"function"==typeof e.then}function pwait(e){var n=Promise.resolve(e);return l.add(n),n}return i}));