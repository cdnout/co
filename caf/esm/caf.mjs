/*! CAF: caf.mjs
	v12.0.1 (c) 2021 Kyle Simpson
	MIT License: http://getify.mit-license.org
*/
import{CLEANUP_FN,TIMEOUT_TOKEN,cancelToken,signalPromise,processTokenOrSignal}from"./shared.mjs";export default Object.assign(CAF,{cancelToken:cancelToken,delay:delay,timeout:timeout,signalRace:signalRace,signalAll:signalAll});export{cancelToken};function CAF(n){return function instance(e,...l){var r,a;if(({tokenOrSignal:e,signal:r,signalPr:a}=processTokenOrSignal(e)),r.aborted)return a;var o=a.catch((function onCancellation(n){try{var e=u.return();throw void 0!==e.value?e.value:n}finally{u=i=o=s=null}})),{it:u,result:i}=runner.call(this,n,r,...l),s=Promise.race([i,o]);if(e!==r&&e[TIMEOUT_TOKEN]){let n=function cancelTimer(){e.abort(),e=n=null};s.then(n,n)}else s.catch((()=>{})),e=null;return r=l=null,s}}function delay(n,e){var l,r;return"number"==typeof n&&"number"!=typeof e&&([e,n]=[n,e]),n&&({tokenOrSignal:n,signal:l,signalPr:r}=processTokenOrSignal(n)),l&&l.aborted?r:new Promise((function c(n,a){l&&(r.catch((function onAbort(r){o&&(clearTimeout(o),a(r||`delay (${e}) interrupted`)),n=a=o=l=null})),r=null);var o=setTimeout((function onTimeout(){n(`delayed: ${e}`),n=a=o=l=null}),e)}))}function timeout(n,e="Timeout"){n=Number(n)||0;var l=new cancelToken;return delay(l.signal,n).then(cleanup,cleanup),Object.defineProperty(l,TIMEOUT_TOKEN,{value:!0,writable:!1,enumerable:!1,configurable:!1}),l;function cleanup(){l.abort(e),l=null}}function signalRace(n){var e=new cancelToken,l=n.map(signalPromise),r=l.map((n=>n[CLEANUP_FN]));return Promise.race(l).catch((function c(n){e.abort(n)})).then((function t(){for(let n of r)n();r=e=null})),e.signal}function signalAll(n){var e=new cancelToken,l=n.map(signalPromise),r=l.map((n=>n[CLEANUP_FN]));return Promise.all(l.map((function m(n){return n.catch((n=>n))}))).then((function t(n){e.abort(n)})).then((function t(){for(let n of r)n();r=e=null})),e.signal}function runner(n,...e){var l=n.apply(this,e);return n=e=null,{it:l,result:function getNextResult(n){try{var e=l.next(n);n=null}catch(n){return Promise.reject(n)}return function processResult(n){var e=Promise.resolve(n.value);return n.done?l=null:(e=e.then(getNextResult,(function onRejection(n){return Promise.resolve(l.throw(n)).then(processResult)}))).catch((function cleanup(){l=null})),n=null,e}(e)}()}}