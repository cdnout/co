{"version":3,"sources":["webpack://AlloyEditor/webpack/bootstrap","webpack://AlloyEditor/external {\"amd\":\"react\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"root\":\"React\",\"umd\":\"react\"}","webpack://AlloyEditor/./src/components/buttons/button-icon.jsx","webpack://AlloyEditor/./src/adapter/editor-context.js","webpack://AlloyEditor/./src/components/base/button-command.js","webpack://AlloyEditor/./src/components/base/button-state-classes.js","webpack://AlloyEditor/./src/oop/lang.js","webpack://AlloyEditor/external {\"amd\":\"react-dom\",\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"root\":\"ReactDOM\",\"umd\":\"react-dom\"}","webpack://AlloyEditor/./src/components/base/button-style.js","webpack://AlloyEditor/./node_modules/prop-types/index.js","webpack://AlloyEditor/./src/components/base/button-command-active.js","webpack://AlloyEditor/./src/components/base/widget-focus-manager.js","webpack://AlloyEditor/./src/components/base/button-keystroke.js","webpack://AlloyEditor/./src/components/buttons/button-dropdown.jsx","webpack://AlloyEditor/./src/components/buttons/button-commands-list.jsx","webpack://AlloyEditor/./src/components/base/button-action-style.js","webpack://AlloyEditor/./src/components/buttons/button-styles-list.jsx","webpack://AlloyEditor/./src/components/base/widget-dropdown.js","webpack://AlloyEditor/./src/components/base/widget-exclusive.js","webpack://AlloyEditor/./src/components/buttons/button-link-edit.jsx","webpack://AlloyEditor/./src/components/base/button-props.js","webpack://AlloyEditor/./src/components/base/toolbar-buttons.js","webpack://AlloyEditor/./src/oop/oop.js","webpack://AlloyEditor/./src/selections/selection-test.js","webpack://AlloyEditor/./src/components/buttons/button-styles-list-header.jsx","webpack://AlloyEditor/./src/components/buttons/button-styles-list-item-remove.jsx","webpack://AlloyEditor/./src/components/buttons/button-styles-list-item.jsx","webpack://AlloyEditor/./src/components/buttons/button-camera-image.jsx","webpack://AlloyEditor/./src/components/buttons/button-command-list-item.jsx","webpack://AlloyEditor/./src/components/buttons/button-embed-edit.jsx","webpack://AlloyEditor/./src/components/buttons/button-embed-video-edit.jsx","webpack://AlloyEditor/./src/components/buttons/button-link-autocomplete-list.jsx","webpack://AlloyEditor/./src/components/buttons/button-link-edit-browse.jsx","webpack://AlloyEditor/./src/components/buttons/button-link-target-edit.jsx","webpack://AlloyEditor/./src/components/buttons/button-target-list.jsx","webpack://AlloyEditor/./src/components/buttons/button-link.jsx","webpack://AlloyEditor/./src/components/buttons/button-table-edit.jsx","webpack://AlloyEditor/./src/components/compat/widget-interaction-point.js","webpack://AlloyEditor/./src/oop/attribute.js","webpack://AlloyEditor/./src/selections/selection-arrowbox.js","webpack://AlloyEditor/./src/selections/selection-position.js","webpack://AlloyEditor/./src/selections/selections.js","webpack://AlloyEditor/./src/plugins/index.js","webpack://AlloyEditor/./src/adapter/main.js","webpack://AlloyEditor/./src/components/base/index.js","webpack://AlloyEditor/./src/components/buttons/index.js","webpack://AlloyEditor/./src/components/buttons/button-accessibility-image-alt.jsx","webpack://AlloyEditor/./src/components/buttons/button-background-color.jsx","webpack://AlloyEditor/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://AlloyEditor/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://AlloyEditor/./src/components/buttons/button-bold.jsx","webpack://AlloyEditor/./src/components/buttons/button-camera.jsx","webpack://AlloyEditor/./src/components/buttons/button-code.jsx","webpack://AlloyEditor/./src/components/buttons/button-color.jsx","webpack://AlloyEditor/./src/components/buttons/button-embed-video.jsx","webpack://AlloyEditor/./src/components/buttons/button-embed.jsx","webpack://AlloyEditor/./src/components/buttons/button-h1.jsx","webpack://AlloyEditor/./src/components/buttons/button-h2.jsx","webpack://AlloyEditor/./src/components/buttons/button-hline.jsx","webpack://AlloyEditor/./src/components/buttons/button-image-align-center.jsx","webpack://AlloyEditor/./src/components/buttons/button-image-align-left.jsx","webpack://AlloyEditor/./src/components/buttons/button-image-align-right.jsx","webpack://AlloyEditor/./src/components/buttons/button-image.jsx","webpack://AlloyEditor/./src/components/buttons/button-indent-block.jsx","webpack://AlloyEditor/./src/components/buttons/button-italic.jsx","webpack://AlloyEditor/./src/components/buttons/button-item-selector-audio.jsx","webpack://AlloyEditor/./src/components/buttons/button-item-selector-image.jsx","webpack://AlloyEditor/./src/components/buttons/button-item-selector-video.jsx","webpack://AlloyEditor/./src/components/buttons/button-link-browse.jsx","webpack://AlloyEditor/./src/components/buttons/button-ol.jsx","webpack://AlloyEditor/./src/components/buttons/button-outdent-block.jsx","webpack://AlloyEditor/./src/components/buttons/button-paragraph-align-left.jsx","webpack://AlloyEditor/./src/components/buttons/button-paragraph-align-right.jsx","webpack://AlloyEditor/./src/components/buttons/button-paragraph-align.jsx","webpack://AlloyEditor/./src/components/buttons/button-paragraph-center.jsx","webpack://AlloyEditor/./src/components/buttons/button-paragraph-justify.jsx","webpack://AlloyEditor/./src/components/buttons/button-quote.jsx","webpack://AlloyEditor/./src/components/buttons/button-remove-format.jsx","webpack://AlloyEditor/./src/components/buttons/button-remove-image.jsx","webpack://AlloyEditor/./src/components/buttons/button-separator.jsx","webpack://AlloyEditor/./src/components/buttons/button-spacing.jsx","webpack://AlloyEditor/./src/components/buttons/button-strike.jsx","webpack://AlloyEditor/./src/components/buttons/button-styles.jsx","webpack://AlloyEditor/./src/components/buttons/button-subscript.jsx","webpack://AlloyEditor/./src/components/buttons/button-superscript.jsx","webpack://AlloyEditor/./src/components/buttons/button-table-cell.jsx","webpack://AlloyEditor/./src/components/buttons/button-table-column.jsx","webpack://AlloyEditor/./src/components/buttons/button-table-heading.jsx","webpack://AlloyEditor/./src/components/buttons/button-table-remove.jsx","webpack://AlloyEditor/./src/components/buttons/button-table-row.jsx","webpack://AlloyEditor/./src/components/buttons/button-table.jsx","webpack://AlloyEditor/./src/components/buttons/button-twitter.jsx","webpack://AlloyEditor/./src/components/buttons/button-ul.jsx","webpack://AlloyEditor/./src/components/buttons/button-underline.jsx","webpack://AlloyEditor/./src/components/compat/index.js","webpack://AlloyEditor/./src/components/compat/button-action-style.js","webpack://AlloyEditor/./src/components/compat/button-command-active.js","webpack://AlloyEditor/./src/components/compat/button-command.js","webpack://AlloyEditor/./src/components/compat/button-keystroke.js","webpack://AlloyEditor/./src/components/compat/button-props.js","webpack://AlloyEditor/./src/components/compat/button-state-classes.js","webpack://AlloyEditor/./src/components/compat/button-style.js","webpack://AlloyEditor/./src/components/compat/toolbar-buttons.js","webpack://AlloyEditor/./src/components/compat/widget-arrow-box.js","webpack://AlloyEditor/./src/components/compat/widget-dropdown.js","webpack://AlloyEditor/./src/components/compat/widget-exclusive.js","webpack://AlloyEditor/./src/components/compat/widget-focus-manager.js","webpack://AlloyEditor/./src/components/compat/widget-position.js","webpack://AlloyEditor/./src/components/toolbars/index.js","webpack://AlloyEditor/./src/components/toolbars/toolbar-add.jsx","webpack://AlloyEditor/./src/components/toolbars/toolbar-styles.jsx","webpack://AlloyEditor/./src/adapter/core.js","webpack://AlloyEditor/./src/core/index.js","webpack://AlloyEditor/./src/core/debounce.js","webpack://AlloyEditor/./src/core/link.js","webpack://AlloyEditor/./src/core/plugins.js","webpack://AlloyEditor/./src/core/selection-region.js","webpack://AlloyEditor/./src/core/table.js","webpack://AlloyEditor/./src/core/tools.js","webpack://AlloyEditor/./src/core/uicore.js","webpack://AlloyEditor/./src/plugins/addimages.js","webpack://AlloyEditor/./src/plugins/autolink.js","webpack://AlloyEditor/./src/plugins/autolist.js","webpack://AlloyEditor/./src/plugins/dragresize.js","webpack://AlloyEditor/./src/plugins/dragresize_ie11.js","webpack://AlloyEditor/./src/plugins/embed.js","webpack://AlloyEditor/./src/plugins/priorities.js","webpack://AlloyEditor/./src/plugins/embedurl.js","webpack://AlloyEditor/./src/plugins/Resizer.es.js","webpack://AlloyEditor/./src/plugins/DragEvent.es.js","webpack://AlloyEditor/./src/plugins/imagealignment.js","webpack://AlloyEditor/./src/plugins/pasteimages.js","webpack://AlloyEditor/./src/plugins/placeholder.js","webpack://AlloyEditor/./src/plugins/selectionkeystrokes.js","webpack://AlloyEditor/./src/plugins/tableresize.js","webpack://AlloyEditor/./src/plugins/tabletools.js","webpack://AlloyEditor/./src/components/uibridge/index.js","webpack://AlloyEditor/./src/components/uibridge/button.jsx","webpack://AlloyEditor/./src/components/uibridge/menu-button.jsx","webpack://AlloyEditor/./src/components/uibridge/menu.jsx","webpack://AlloyEditor/./src/components/uibridge/panel-menu-button.jsx","webpack://AlloyEditor/./src/components/uibridge/richcombo.jsx","webpack://AlloyEditor/./src/components/uibridge/uibridge.js","webpack://AlloyEditor/./src/commands/index.js","webpack://AlloyEditor/./src/commands/remove-image.js","webpack://AlloyEditor/./src/components/main.jsx","webpack://AlloyEditor/./src/oop/base.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","undefined","ButtonIcon","_react","_editorContext","_ref","_ref$className","className","symbol","_react2","default","createElement","_editorContext2","Consumer","_ref2","editor","nativeEditor","spritemap","config","path","classNamePrefix","combinedClassName","height","width","href","EditorContext","React","createContext","toProps","Component","forwardingComponent","forwardRef","props","ref","context","_extends","WrappedComponent","_class","_temp2","_WrappedComponent","ButtonCommand","_temp","_this","_ret","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","concat","execCommand","data","command","fire","_inherits","contextType","_lang","ButtonStateClasses","_createClass","stateClasses","Lang","isFunction","isActive","isArray","toString","isBoolean","isNull","isNumber","isFinite","isObject","valueType","_typeof","isString","mix","receiver","supplier","toInt","parseInt","ButtonStyle","_get","style","parts","split","currentMember","shift","_style","CKEDITOR","elementPath","getStyle","checkActive","ButtonCommandActive","getCommand","state","TRISTATE_ON","_reactDom","DIRECTION_NONE","DIRECTION_NEXT","DIRECTION_PREV","ACTION_NONE","ACTION_MOVE_FOCUS","ACTION_DISMISS_FOCUS","WidgetFocusManager","focus","event","_isValidTarget","target","_descendants","activeDescendantEl","_activeDescendant","document","activeElement","focusFirstChild","indexOf","stopPropagation","preventDefault","handleKey","action","_getFocusAction","type","_moveFocus","direction","onDismiss","_refresh","keys","_getFocusMoveDirection","dismissAction","_getFocusDismissAction","dismiss","focusMoveDirection","_isValidKey","keyCode","dismissNext","dismissPrev","circular","next","prev","shifKey","element","tagName","toLowerCase","numDescendants","descendant","setAttribute","Math","max","min","_this2","domNode","ReactDOM","findDOMNode","descendants","querySelectorAll","priorityDescendants","slice","forEach","item","dataTabIndex","getAttribute","push","sort","a","b","some","index","ButtonKeystroke","keystroke","commandName","exec","keystrokeFn","fn","addCommand","_defaultKeystrokeCommand","keystrokeHandler","keystrokes","setKeystroke","_widgetFocusManager","ButtonDropdown","onFocus","onKeyDown","tabIndex","role","children","defaultProps","_widgetFocusManager2","_buttonCommandListItem","ButtonCommandsList","createRef","current","id","listId","_renderActions","commands","items","map","_buttonCommandListItem2","description","label","icon","ButtonActionStyle","applyStyle","getSelection","lock","removeStyle","unlock","_buttonDropdown","_buttonStylesListHeader","_buttonStylesListItemRemove","_buttonStylesListItem","ButtonStylesList","blockStyles","inlineStyles","objectStyles","styles","STYLE_BLOCK","STYLE_INLINE","STYLE_OBJECT","_blockStyles","_inlineStyles","_objectStyles","removeStylesItem","showRemoveStylesItem","_buttonStylesListItemRemove2","toggleDropdown","_buttonDropdown2","_buttonStylesListHeader2","AlloyEditor","Strings","_renderStylesItems","_buttonStylesListItem2","activeStyle","styleFn","WidgetDropdown","mergeDropdownProps","obj","itemKey","tools","merge","expanded","itemDropdown","dropdownTrigger","toggleDirection","setState","moveFocus","nextProps","WidgetExclusive","requestExclusive","itemExclusive","filter","cancelExclusive","renderExclusive","_widgetDropdown","_buttonIcon","_buttonLinkAutocompleteList","_buttonLinkTargetEdit","ButtonLinkEdit","_clearLink","linkHref","_focusLinkInput","_handleKeyDown","_updateLink","autocompleteSelected","Link","advanceSelection","_handleLinkHrefChange","_handleLinkTargetChange","linkTarget","_removeLink","linkUtils","selection","bookmarks","createBookmarks","remove","advance","selectBookmarks","appendProtocol","linkAttrs","modifySelection","update","linkInput","_getInitialState","manualSelection","targetSelector","allowedTargets","handleLinkTargetChange","selectedTarget","linkTargetDefault","ButtonLinkTargetEdit","autocompleteDropdown","dataFn","autocompleteDropdownProps","handleLinkAutocompleteClick","_handleLinkAutocompleteClick","setAutocompleteState","_setAutocompleteState","term","ButtonLinkAutocompleteList","_buttonLinkAutocompleteList2","buttonClearLink","aria-label","clearInput","onClick","title","clear","_buttonIcon2","placeholderProp","env","ie","placeholder","editLink","removeLink","disabled","showTargetSelector","_buttonLinkTargetEdit2","onChange","confirm","_isValidState","defaultLinkTarget","link","getFromSelection","initialLink","instance","focusLinkEl","requestAnimationFrame","setTimeout","validState","selected","autocompleteUrl","customIndexStart","_widgetDropdown2","ButtonProps","buttonCfg","ToolbarButtons","_animationFrameId","cancelAnimationFrame","arrowBoxClasses","getInteractionPoint","SELECTION_TOP_TO_BOTTOM","attrs","viewPaneSize","dom","getViewPaneSize","x","left","y","top","eventPayload","editorEvent","selectionData","nativeEvent","pos","pageX","region","endRect","startRect","SELECTION_BOTTOM_TO_TOP","_getXPoint","_getYPoint","eventX","right","leftDist","abs","rightDist","elementTarget","$","offsetTop","offsetHeight","bottom","gutter","offsetWidth","SELECTION_LEFT_TO_RIGHT","SELECTION_RIGHT_TO_LEFT","domElement","hasClass","startPoint","endPoint","setStyles","opacity","pointerEvents","removeClass","addClass","uiNode","scrollTop","isVisible","interactionPoint","finalX","finalY","initialX","initialY","parseFloat","constrainToViewport","res","getConstrainedPosition","moveToPoint","body","uiNodeStyle","getComputedStyle","uiNodeMarginLeft","getPropertyValue","uiNodeMarginRight","totalWidth","clientWidth","xy","getWidgetXYPoint","buttons","additionalProps","reduce","list","button","getToolbarButtons","buttonProps","toolbarButtons","filterExclusive","Buttons","cfg","mergeExclusiveProps","tabKey","trigger","extend","protoProps","staticProps","Error","supplierProto","receiverProto","constructor","superclass","_isRangeAtElementEnd","range","getText","endOffset","equals","startContainer","endContainer","startOffset","embedSelectionTest","payload","embedUrlSelectionTest","headingTextSelectionTest","headings","selectionEmpty","isSelectionEmpty","getCommonAncestor","isReadOnly","contains","linkSelectionTest","getRanges","elementIsNotImage","getName","imageSelectionTest","hasImage","findOne","isImage","textSelectionTest","tableSelectionTest","table","Table","isEditable","SelectionTest","embed","embedUrl","header","image","text","ButtonsStylesListHeader","ButtonStylesListItemRemove","_removeStyles","removeBlocks","blockItem","blockStyle","normal","_buttonActionStyle","_buttonStyle","ButtonStylesListItem","_onClick","styleCfg","margin","_preview","buildPreview","dangerouslySetInnerHTML","__html","_buttonActionStyle2","_buttonStyle2","ButtonCameraImage","takePhoto","videoEl","_videoContainerRef","canvasEl","_canvasContainerRef","getContext","_videoHeight","videoWidth","drawImage","imgURL","toDataURL","el","createFromHtml","insertElement","_handleStreamError","error","alert","_handleStreamSuccess","stream","addEventListener","videoHeight","isNaN","_stream","navigator","mozGetUserMedia","mozSrcObject","srcObject","play","_buttonTakePhotoRef","stop","getVideoTracks","track","getUserMedia","webkitGetUserMedia","msGetUserMedia","video","audio","_buttonCommand","ButtonCommandListItem","_getClassName","_buttonCommand2","KEY_ENTER","KEY_ESC","ButtonEmbedEdit","_embedLink","url","_removeEmbed","embedWrapper","getAscendant","getInitialState","selectedElement","getSelectedElement","clearLinkStyle","deleteEmbed","data-type","ButtonEmbedVideoEdit","_embedVideoURL","videoURL","_focusVideoUrlInput","refs","_handleVideoURLChange","newState","all","new","old","initialEmbed","inputPlaceholder","pasteVideoLink","clearVideoURLStyle","clearTimeout","_timeout","_updateItems","delay","_renderAutocompleteItems","nextState","data-value","_this3","promise","Promise","resolve","then","_buttonLinkEdit","ButtonLinkEditBrowse","_browseClick","documentBrowseLinkUrl","browseLinkCallback","documentBrowseLinkCallback","linkEditButtonRef","changeLinkCallback","selectedItem","linkTitle","plugins","creole","location","origin","_buttonLinkEdit2","_buttonTargetList","allowedLinkTargets","aria-expanded","_buttonTargetList2","ButtonTargetList","listTargets","_renderListTargets","linkTargetSelf","linkTargetBlank","linkTargetParent","linkTargetTop","targets","_getAllowedTargetItems","_buttonKeystroke","_buttonProps","_buttonStateClasses","ButtonLink","_requestExclusive","cssClass","getStateClasses","mergeButtonCfgProps","CTRL","_buttonProps2","_buttonKeystroke2","_buttonStateClasses2","INPUT_NAMES","COLS","ROWS","MINIMUM_GRID_VALUE","ButtonTableEdit","_createTable","tableUtils","_this$state","cols","rows","tableAttributes","_handleChange","inputName","_defineProperty","rowsRef","colsRef","time","Date","now","rowsId","colsId","htmlFor","columns","border","cellPadding","cellSpacing","_propTypes","WidgetInteractionPoint","propTypes","PropTypes","Attribute","__config__","__ATTRS__","attr","currentAttr","ATTRS","_isInitialized","_init","curValue","_callStringOrFunction","set","readOnly","writeOnce","validator","setter","stringOrFunction","result","_toConsumableArray","hasDefaultValue","hasPassedValueViaConfig","valueFn","tableSelectionGetArrowBoxClasses","SelectionGetArrowBoxClasses","DEFAULT_GUTTER","centerToolbar","toolbar","rect","toolbarNode","halfNodeWidth","scrollPosition","getScrollPosition","widgetXY","caretPosition","ranges","nodeType","Node","ELEMENT_NODE","getParent","startContainerClientRect","getClientRect","endPosition","imageSelectionSetPosition","tableSelectionSetPosition","SelectionSetPosition","_selectionArrowbox","_selectionPosition","_selectionTest","Selections","test","setPosition","full","simple","getArrowBoxClasses","_embedurl","embedurl","_base","Base","_buttons","_compat","Compat","_toolbars","_attribute","_oop","_selections","_core","BRIDGE_BUTTONS","editable","node","srcNode","implementEventTarget","Core","getBasePath","ALLOYEDITOR_BASEPATH","scripts","getElementsByTagName","match","src","regexBasePath","loadLanguageResources","callback","once","_langResourceRequested","languages","userLanguage","language","lang","locale","scriptLoader","load","getUrl","loaded","resource","basePath","timestamp","charAt","on","implementOn","getButtons","acc","val","registerBridgeButton","buttonName","pluginName","OOP","Toolbars","_buttonAccessibilityImageAlt","_buttonBackgroundColor","_buttonBold","_buttonCameraImage","_buttonCamera","_buttonCode","_buttonColor","_buttonCommandsList","_buttonEmbedEdit","_buttonEmbedVideoEdit","_buttonEmbedVideo","_buttonEmbed","_buttonH","_buttonH3","_buttonHline","_buttonImageAlignCenter","_buttonImageAlignLeft","_buttonImageAlignRight","_buttonImage","_buttonIndentBlock","_buttonItalic","_buttonItemSelectorAudio","_buttonItemSelectorImage","_buttonItemSelectorVideo","_buttonLinkBrowse","_buttonLinkEditBrowse","_buttonLink","_buttonOl","_buttonOutdentBlock","_buttonParagraphAlignLeft","_buttonParagraphAlignRight","_buttonParagraphAlign","_buttonParagraphCenter","_buttonParagraphJustify","_buttonQuote","_buttonRemoveFormat","_buttonRemoveImage","_buttonSeparator","_buttonSpacing","_buttonStrike","_buttonStylesList","_buttonStyles","_buttonSubscript","_buttonSuperscript","_buttonTableCell","_buttonTableColumn","_buttonTableEdit","_buttonTableHeading","_buttonTableRemove","_buttonTableRow","_buttonTable","_buttonTwitter","_buttonUl","_buttonUnderline","ButtonAccessibilityImageAlt","ButtonBackgroundColor","ButtonBold","ButtonCamera","ButtonCode","ButtonColor","ButtonEmbed","ButtonEmbedVideo","ButtonH1","ButtonH2","ButtonHline","ButtonImageAlignCenter","ButtonImageAlignLeft","ButtonImageAlignRight","ButtonImage","ButtonIndentBlock","ButtonItalic","ButtonItemSelectorAudio","ButtonItemSelectorImage","ButtonItemSelectorVideo","ButtonLinkBrowse","ButtonOl","ButtonOutdentBlock","ButtonParagraphAlign","ButtonParagraphAlignLeft","ButtonParagraphAlignRight","ButtonParagraphCenter","ButtonParagraphJustify","ButtonQuote","ButtonRemoveFormat","ButtonRemoveImage","ButtonSeparator","ButtonSpacing","ButtonStrike","ButtonStylesListHeader","ButtonStyles","ButtonSubscript","ButtonSuperscript","ButtonTableCell","ButtonTableColumn","ButtonTableHeading","ButtonTableRemove","ButtonTableRow","ButtonTable","ButtonTwitter","ButtonUl","ButtonUnderline","_initialiseProps","getStartElement","_element","imageElement","imageAlt","_handleAltChange","_updateImageAlt","focusAltEl","refAltInput","_focusAltInput","activeColor","activeColorClass","colors","_getColors","itemStyle","attributes","class","styleClass","_checkActive","_props","buttonStylesProps","_buttonStylesList2","styleConfig","_applyStyle","primary","success","danger","warning","info","bool","string","arrayOf","number","func","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","any","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","bold","aria-pressed","_buttonCameraImage2","protocol","cameraDisabled","camera","code","dark","darkGray","secondary","light","lighter","white","_buttonEmbedVideoEdit2","_buttonEmbedEdit2","SHIFT","h1","h2","horizontalrule","_buttonCommandActive","alignCenter","_buttonCommandActive2","alignLeft","alignRight","handleClick","fileInput","click","_onInputChange","inputEl","files","reader","FileReader","file","onload","imageFiles","imageData","readAsDataURL","inputSyle","display","accept","indent","italic","_handleClick","_buttonLinkEditBrowse2","_buttonLink2","ButtonOrderedList","numberedlist","outdent","buttonCommandsList","buttonCommandsListId","_buttonCommandsList2","_getCommands","inlineIcons","activeCommand","alignment","pop","iconClassName","aria-owns","row","alignJustify","quote","removeformat","removeImage","activeSpacing","spacings","_getSpacings","active","lastElement","strike","_getStyles","buttonStylesList","formatted","cite","subscript","superscript","cell","cellInsertBefore","cellInsertAfter","cellDelete","cellMerge","cellMergeDown","cellMergeRight","cellSplitHorizontal","cellSplitVertical","column","columnInsertBefore","columnInsertAfter","columnDelete","activeHeading","getHeading","activeHeadingIntro","headers","activeHeadingLabel","headersNone","headersRow","headersColumn","headersBoth","_removeTable","deleteTable","rowInsertBefore","rowInsertAfter","rowDelete","_buttonTableEdit2","MAX_TWEET_LENGTH","_getHref","twitter","selectedText","getSelectedText","substring","via","twitterHref","ButtonUnorderedlist","bulletedlist","underline","modifiesSelection","selectionChange","componentWillMount","random","componentWillUnmount","isDisabled","getToolbarButtonGroups","WidgetArrowBox","componentWillReceiveProps","_nextProps","componentDidMount","componentDidUpdate","_widgetInteractionPoint","WidgetPosition","mixins","getDefaultProps","cancelAnimation","halfWidth","_animate","show","updatePosition","_toolbarAdd","_toolbarStyles","ToolbarAdd","ToolbarStyles","_toolbarButtons","_widgetExclusive","POSITION_LEFT","POSITION_RIGHT","_updatePosition","_prevProps","_prevState","isContentEditable","_getButtons","_getToolbarClassName","add","data-tabindex","clientRect","offsetLeft","position","gutterExclusive","floor","_widgetExclusive2","_toolbarButtons2","currentSelection","_getCurrentSelection","getArrowBoxClassesFn","_getSelectionFunction","cssClasses","buttonsGroup","selectionType","hasGroups","selectionFn","selectionFunction","selections","testFn","setPositionFn","_commands","_main","EMBED_VIDEO_WIDTH","EMBED_VIDEO_HEIGHT","_oop2","initializer","inline","allowedContent","toolbars","removePlugins","extraPlugins","embedProviders","placeholderClass","pasteFromWordRemoveStyles","pasteFromWordRemoveFontStyles","selectionKeystrokes","edge","plugin","replace","_addReadOnlyLinkClickListener","extraCommands","extraCommandKeys","_editor","_renderUI","destructor","_destroyed","_editorUIElement","unmountComponentAtNode","parentNode","removeChild","_clearSelections","destroy","isMSSelection","empty","getWindow","removeAllRanges","_defaultReadOnlyClickFn","mouseEvent","hasCtrlKey","ctrlKey","metaKey","shouldOpen","listenerData","ckElement","getTarget","_redirectLink","_getNativeEditor","open","editorUIElement","appendChild","callbackRef","_mainUI","render","Provider","_main2","eventsDelay","_toElement","getElementById","_validateAllowedContent","_validateToolbars","tpl","urlSchemes","enableContentEditable","removeImageCommand","_debounce","debounce","timeout","debounceHandle","callFn","callArgs","callContext","detach","REGEX_BOOKMARK_SCHEME","REGEX_EMAIL_SCHEME","REGEX_URI_SCHEME","moveToElementEditEnd","nextNode","getNextEditableNode","whitespace","offset","setStart","setEnd","selectRanges","URI","collapsed","insertNode","selectNodeContents","_getCompleteURI","data-cke-saved-href","applyToRange","select","is","getChildren","count","getItem","shrink","SHRINK_TEXT","alwaysRemoveElement","selectElement","uri","setAttributes","removeAttrs","setAttrs","removeAttributes","wrapPluginLifecycle","methods","methodName","override","originalPluginMethod","phase","__processingPlugin__","filterUnwantedDependencies","requires","require","pluginsLoad","names","scope","SelectionRegion","createSelectionFromPoint","createSelectionFromRange","startX","startY","endX","endY","end","start","caretPositionFromPoint","offsetNode","createRange","caretRangeFromPoint","createTextRange","endRange","duplicate","setEndPoint","getCaretRegion","bookmarkNodeEl","startNode","scrollPos","getSelectionData","getNative","getSelectionRegion","getClientRectsRegion","getSelectionDirection","getType","SELECTION_NONE","nativeSelection","defaultRect","clientRects","Infinity","getClientRects","rangeCount","getRangeAt","anchorNode","compareDocumentPosition","focusNode","anchorOffset","focusOffset","DOCUMENT_POSITION_PRECEDING","init","IE_NON_DIRECTLY_EDITABLE_ELEMENT","col","colgroup","tbody","td","tfoot","th","thead","tr","HEADING_BOTH","HEADING_COL","HEADING_NONE","HEADING_ROW","_createElement","append","j","appendBogus","setHeading","heading","firstCell","cells","moveToPosition","POSITION_AFTER_START","webkit","NODE_ELEMENT","hasAttribute","rowHeadingSettings","tHead","colHeadingSettings","nodeName","headingSettings","parent","getChildCount","POSITION_BEFORE_START","newCell","tableHead","tableBody","getElementsByTag","tableHeading","hadColHeading","needColHeading","needRowHeading","tableFirstRow","tableFirstRowChildCount","getChild","renameNode","createTHead","previousFirstRow","getFirst","newFirstRow","newFirstRowChildCount","removeAttribute","insertBefore","hasColHeading","headingCommands","jsonp","urlTemplate","urlParams","errorCallback","callbackKey","getNextNumber","_","jsonpCallbacks","response","cleanUp","scriptElement","output","getBody","cancel","simulate","eventInstance","createEvent","initEvent","dispatchEvent","ariaState","ariaElement","_createAriaElement","uiTasksTimeout","uicore","handleUI","allowEsc","handleAria","_event","innerHTML","join","handleMouseLeave","aeUINodes","found","relatedTarget","message","focusHandler","attachListener","removeListener","statusElement","isIE","_onDragEnter","_onDragOver","_onDragDrop","_onPaste","_handleFiles","_processFile","transferFiles","dataTransfer","clientX","clientY","_preventEvent","clipboardData","pastedData","imageFile","getAsFile","bin","userAgent","KEY_BACK","KEY_COMMA","KEY_SEMICOLON","KEY_SPACE","DELIMITERS","REGEX_LAST_WORD","REGEX_URL","REGEX_EMAIL","_onKeyUp","method","dataValue","RegExp","_isValidURL","_isValidEmail","_getLastWord","previousText","_currentKeyCode","previousNode","getPrevious","lastChild","getLast","_startContainer","_offset","lastWord","email","_onKeyDown","_ckLink","_replaceContentByLink","content","ckLink","linkNode","_subscribeToKeyEvent","nextEditableNode","enclosedNode","getEnclosedNode","caretOffset","getNext","newRange","setEndAfter","DEFAULT_CONFIG","regex","_checkForBackspaceAndUndo","insertHtml","bullet","_getListConfig","configRegex","autolist","textContainer","regexLen","autolistCfg","regexItem","_createList","listConfig","setText","IMAGE_HANDLES","both","scale","POSITION_ELEMENT_FN","bl","handle","box","positionElement","bm","round","br","lm","tl","_box","tm","rm","IMAGE_SNAP_TO_SIZE","isFirefox","documentElement","isWebKit","enablePlugin","snapToSize","imageScaleResize","resizer","Resizer","mouseDownListener","e","isHandle","initDrag","hide","html","self","resizeElement","removeEventListener","resizeTimeout","DragEvent","events","mousemove","keydown","mouseup","toArray","len","arr","ctx","String","getBoundingBox","getBoundingClientRect","pageXOffset","pageYOffset","addCss","onLoad","_evt","container","preview","handles","handleName","createHandle","classList","otherImages","splice","showHandles","elements","getElementsByClassName","hideHandles","drag","onStart","showPreview","isDragging","onDrag","calculateSize","updatePreview","previewBox","updateHandles","onRelease","hidePreview","onComplete","resizeComplete","backgroundImage","delta","ratio","others","other","startPos","currentPos","shiftKey","ctrl","alt","altKey","which","release","template","templateBlock","alignmentsObj","center","regexPercent","widgetDef","widgets","widgetElement","afterInit","align","block","integrate","alignCommandIntegrator","ae_dragresize_ie11","stateShifter","doc","alignClasses","ae_dragresize_ie11_alignClasses","captionedClass","ae_dragresize_ie11_captionedClass","shiftables","stateActions","oldValue","newValue","changed","marginLeft","marginRight","newData","hasCaption","deflate","wrapInCentering","unwrapFromCentering","setStyle","imageOrLink","img","figure","captionPlaceholder","replaceSafely","needsDeflate","newEl","wrapInLink","getLinkAttributesGetter","isEmpty","removed","unwrapFromLink","attribsAndStyles","text-align","activeEnterMode","ENTER_P","move","linkData","replacing","replaced","insertElementIntoRange","oldData","inflate","checkHasNaturalRatio","natural","getNatural","clientHeight","dimensions","naturalWidth","naturalHeight","Image","getLinkAttributes","getLinkAttributesParser","parseLinkAttributes","removeWidgetAlignment","widget","imageAlignment","wrapper","deflated","focused","initOn","setWrapperAlign","getWidgetAllowedContent","requiredContent","features","getWidgetFeatures","styleableElements","contentTransformations","editables","caption","selector","checkFeature","shiftState","data-cke-saved-src","classes","dimension","setDimensions","helpers","ready","alignElement","advanced","advCSSClasses","trim","setData","ae_dragresize_ie11_disableResizer","setupResizer","dragHandlerStyle","dragHandlerContainer","evt","TRISTATE_OFF","unlink","getStyleableElement","getClasses","classRegex","repository","parseElementClasses","upcast","upcastWidgetElement","downcast","downcastWidgetElement","getLabel","pathName","querySelector","imageStyles","heightStyles","widthStyles","isCenterWrapper","centerWrapperChecker","replaceWith","isLinkedOrStandaloneImage","attrsHolder","resizeWrapper","parseCssText","wrapWith","htmlParser","writeCssText","validChildren","div","child","enterMode","resizerNE","resizerNW","resizerSE","resizerSW","oldResizeWrapper","screenX","screenY","startWidth","startHeight","listeners","factorX","factorY","moveDiffX","moveDiffY","nativeEvt","newHeight","newWidth","updateData","cursorClass","attachToDocuments","collection","globalDoc","adjustToX","adjustToY","onMouseMove","onMouseUp","execCallbacks","enabled","refresh","getFocusedWidget","allowed","registered","TRISTATE_DISABLED","rules","figcaption","_priorities","REGEX_HTTP","REGEX_DEFAULT_LINK","DEFAULT_AE_EMBED_URL_TPL","DEFAULT_AE_EMBED_WIDGET_TPL","DEFAULT_AE_EMBED_DEFAULT_LINK_TPL","AE_EMBED_URL_TPL","embedUrlTemplate","AE_EMBED_WIDGET_TPL","embedWidgetTpl","AE_EMBED_DEFAULT_LINK_TPL","embedLinkDefaultTpl","defaultEmbedWidgetUpcastFn","mask","encodeURIComponent","createATag","setHtml","_msg","aTagHtml","embedWidgetUpcastFn","HIGH_PRIORITY","addElementCallback","FILTER_SKIP_TREE","DEFAULT_PRIORITY","_Resizer","DEFAULT_LFR_EMBED_WIDGET_TPL","EMBED_ALIGNMENT","CENTER","LEFT","RIGHT","ALIGN_VALUES","CENTERED_EMBED_STYLE","getEmbedAlignment","embedAlignment","centeredEmbed","every","styleCheck","vendorPrefixes","vendorPrefix","removeEmbedAlignment","setEmbedAlignment","wrapperElement","parentElement","pwidth","JSON","parse","stringify","iframeElement","selectWidget","root","find","elementList","currentAlignment","currentElement","LFR_EMBED_WIDGET_TPL","providers","provider","scheme","generateEmbedContent","helpMessage","videoPlaybackDisabled","helpMessageIcon","Liferay","Util","getLexiconIconTpl","upcastWidget","iframe","embedContent","getOuterHtml","widgetFragment","fragment","fromHtml","showError","errorMsg","validProvider","embedId","_selectEmbedWidget","platformNotSupported","enterValidUrl","draggable","stylesJSON","_error","bounds","alignValue","selectedEmbed","sender","_DragEvent","editorBounds","_IMAGE_STYLE_ALIGNMEN","IMAGE_ALIGNMENT","IMAGE_STYLE_ALIGNMENT","getImageAlignment","centeredImage","imageContainer","textAlign","removeImageAlignment","setImageAlignment","refreshCommands","brFiller","needsBrFiller","enterModeEmptyValue","1","2","3","_checkEmptyData","_removePlaceholderClass","editableNode","innerHtml","editorNode","selectionKeystroke","pxUnit","cssLength","getWidth","getBorderWidth","side","computed","borderMap","thin","medium","thick","getMasterPillarRow","$rows","maxCells","cellsCount","$elected","$tr","buildTableColumnPillars","pillars","pillarIndex","rtl","tBodies","tbodyPosition","getDocumentPosition","nextTd","colSpan","pillarLeft","pillarRight","pillarWidth","getPillarAtPosition","positionX","pillar","ColumnResizer","currentShift","leftShiftBoundary","leftSideCells","resizing","rightShiftBoundary","rightSideCells","isResizing","posX","resizerNewPosition","onMouseDown","resizeStart","columnIndex","buildTableMap","leftColumnCells","rightColumnCells","leftMinSize","Number","MAX_VALUE","rightMinSize","leftCell","rightCell","setOpacity","resizeEnd","resizeColumn","removeCustomData","_loop","leftOldWidth","rightOldWidth","tableWidth","sizeShift","getPageOffset","getDocumentElement","clearPillarsCache","dest","toElement","isInline","getCustomData","setCustomData","cellNodeRegex","getSelectedCells","retval","database","moveOutOfCellGuard","setMarker","nearestCell","walker","guard","dtd","clearAllMarkers","getFocusElementAfterDelCells","cellsToDelete","last","focusedCell","insertRow","getDocument","startRow","startRowIndex","rowIndex","lastCell","endRowIndex","rowSpan","endRow","cloneRow","nextRow","newRow","clone","insertAfter","cellIndex","deleteRows","selectionOrRow","rowsToDelete","mapRow","cellRowIndex","nextMapRow","cursorPosition","getCellColIndex","isStart","rowCells","colIndex","mapCell","getColumnsIndices","insertColumn","startCol","lastCol","cloneCol","nextCol","nextCell","insertedCells","deleteColumns","selectionOrCell","startColIndex","endColIndex","firstRowCells","insertCell","startElement","deleteCells","cellToFocus","placeCursorInCell","trimCell","bogus","getBogus","placeAtEnd","docInner","docOuter","version","collapse","cellInRow","tableMap","oRow","cellInCol","oCol","mergeCells","mergeDirection","isDetect","commonAncestor","mapHeight","mapWidth","startColumn","targetCell","rowspan","colspan","er","lastRowIndex","totalRowSpan","totalColSpan","frag","documentFragment","cellFirstChild","isBlockBoundary","whitespaces","moveChildren","trs","nodeList","tailTr","verticalSplitCell","newRowSpan","newCellRowSpan","newRowIndex","ceil","newCellTr","newCellRow","candidateCell","cellsInSameRow","horizontalSplitCell","newColSpan","newCellColSpan","cellsInSameCol","createDef","def","contextSensitive","addCmd","cmd","addFeature","aRows","aMap","oCell","iColSpan","iRowSpan","rs","cs","BUTTON_DEFS","generateButtonBridge","buttonDefinition","ButtonBridge","buttonCommand","buttonOnClick","_React$Component","buttonClassName","buttonDisplayName","buttonLabel","buttonType","iconStyle","cssStyle","skin","getIconStyle","cssStyleParts","backgroundPosition","backgroundSize","displayName","UI_BUTTON","beforeInit","ui","addButton","addHandler","MENUBUTTON_DEFS","generateMenuButtonBridge","menuButtonName","menuButtonDefinition","MenuButtonBridge","panelMenuButtonDisplayName","_getMenuItems","onMenu","menuItems","menuItem","getMenuItem","menuItemDefinition","definition","menuItemState","UI_MENU_BUTTON","addMenuButton","UI_MENUBUTTON","groups","groupsOrder","menuGroups","addMenuGroup","order","addMenuItem","group","addMenuItems","definitions","itemName","removeMenuItem","PANEL_MENU_DEFS","generatePanelMenuButtonBridge","panelMenuButtonName","panelMenuButtonDefinition","PanelMenuButtonBridge","panel","_getPanel","panelMenuButtonOnBlock","onBlock","blockElement","getHtml","UI_PANELBUTTON","addPanelMenuButton","RICH_COMBO_DEFS","generateRichComboBridge","richComboName","richComboDefinition","RichComboBridge","currentValue","editorCombo","currentTarget","_items","setValue","_setValue","onRender","_cacheValue","richComboLabel","_getItems","richCombo","UI_RICHCOMBO","addRichCombo","originalUIAddFn","typeHandler","handlers","_removeImage","nextRange","native","UI","_onDismissToolbarFocus","hidden","_onEditorInteraction","_onActionPerformed","_onEditorKey","_mousedownListener","_setUIHidden","_keyDownListener","prevProps","prevState","_getAvailableToolbarsMessage","ariaUpdate","_ariaUpdateTemplates","_getAriaUpdates","ariaUpdates","noToolbar","ariaUpdateNoToolbar","oneToolbar","ariaUpdateOneToolbar","manyToolbars","ariaUpdateManyToolbars","toolbarsNodeList","toolbarNames","_getAriaUpdateTemplate","domEvent","targetNode","_callChain","wat","ctor","reverse"],"mappings":"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","file":"alloy-editor-core-min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 42);\n","(function() { module.exports = window[undefined]; }());","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\n\nexport default function ButtonIcon({className = '', symbol}) {\n\treturn (\n\t\t<EditorContext.Consumer>\n\t\t\t{({editor}) => {\n\t\t\t\tconst nativeEditor = editor.get('nativeEditor');\n\t\t\t\tconst spritemap = nativeEditor.config.spritemap || '';\n\t\t\t\tconst path = `${spritemap}#${symbol}`;\n\t\t\t\tconst classNamePrefix = className ? ` ${className}` : '';\n\t\t\t\tconst combinedClassName = `ae-svg-icon${classNamePrefix}`;\n\n\t\t\t\treturn (\n\t\t\t\t\t<svg className={combinedClassName} height=\"18\" width=\"18\">\n\t\t\t\t\t\t<use href={path} />\n\t\t\t\t\t</svg>\n\t\t\t\t);\n\t\t\t}}\n\t\t</EditorContext.Consumer>\n\t);\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\n/**\n * React context to avoid explicitly passing the editor instance all\n * through the component hierarchy via props.\n */\nconst EditorContext = React.createContext({});\n\n/**\n * Helper that passes the editor context in via a prop.\n *\n * Context can only be accessed in `render()` and in lifecycle methods\n * (`componentDidMount()` etc). If a component needs to access context\n * elsewhere, such as in a constructor, the context needs to be passed\n * in via a prop.\n */\nEditorContext.toProps = Component => {\n\tconst forwardingComponent = React.forwardRef((props, ref) => (\n\t\t<EditorContext.Consumer>\n\t\t\t{context => <Component {...props} context={context} ref={ref} />}\n\t\t</EditorContext.Consumer>\n\t));\n\tforwardingComponent.key = Component.key;\n\treturn forwardingComponent;\n};\n\nexport default EditorContext;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport EditorContext from '../../adapter/editor-context';\n\n/**\n * ButtonCommand is a mixin that executes a command via CKEDITOR's API.\n *\n * @class ButtonCommand\n */\nexport default WrappedComponent =>\n\tclass ButtonCommand extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Executes a CKEditor command and fires `actionPerformed` event.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonCommand\n\t\t * @param {Object=} data Optional data to be passed to CKEDITOR's `execCommand` method.\n\t\t * @method execCommand\n\t\t */\n\t\texecCommand = data => {\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\teditor.execCommand(this.props.command, data);\n\n\t\t\teditor.fire('actionPerformed', this);\n\t\t};\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonStateClasses is a mixin that decorates the domElement of a component\n * with different CSS classes based on the current state of the element.\n *\n * To check for state, the component can expose the following methods:\n * - `Function` **isActive** to check the active state\n *\n * @class ButtonStateClasses\n */\nexport default WrappedComponent =>\n\tclass ButtonStateClasses extends WrappedComponent {\n\t\t/**\n\t\t * Returns the list of state classes associated to the current element's state, according\n\t\t * to the results of the isActive method.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStateClasses\n\t\t * @method getStateClasses\n\t\t * @return {String} A string with the state CSS classes.\n\t\t */\n\t\tgetStateClasses() {\n\t\t\tlet stateClasses = '';\n\n\t\t\t// Check for active state\n\t\t\tif (Lang.isFunction(this.isActive) && this.isActive()) {\n\t\t\t\tstateClasses += 'ae-button-pressed';\n\t\t\t}\n\n\t\t\treturn stateClasses;\n\t\t}\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * Provides core language utilities.\n *\n * @class Lang\n */\nconst Lang = {\n\t/**\n\t * Check if the passed value is an array.\n\t *\n\t * @memberof Lang\n\t * @method isArray\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is an array, false otherwise.\n\t * @static\n\t */\n\tisArray(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Check if the passed value is boolean.\n\t *\n\t * @memberof Lang\n\t * @method isBoolean\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is boolean, false otherwise.\n\t * @static\n\t */\n\tisBoolean(value) {\n\t\treturn typeof value === 'boolean';\n\t},\n\n\t/**\n\t * Check if the passed value is a function.\n\t *\n\t * @memberof Lang\n\t * @method isFunction\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is a function, false otherwise.\n\t * @static\n\t */\n\tisFunction(value) {\n\t\treturn typeof value === 'function';\n\t},\n\n\t/**\n\t * Check if the passed value is NULL.\n\t *\n\t * @memberof Lang\n\t * @method isNull\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is NULL, false otherwise.\n\t * @static\n\t */\n\tisNull(value) {\n\t\treturn value === null;\n\t},\n\n\t/**\n\t * Check if the passed value is number.\n\t *\n\t * @memberof Lang\n\t * @method isNumber\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is number, false otherwise.\n\t * @static\n\t */\n\tisNumber(value) {\n\t\treturn typeof value === 'number' && isFinite(value);\n\t},\n\n\t/**\n\t * Check if the passed value is an object\n\t *\n\t * @memberof Lang\n\t * @method isObject\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is an object, false otherwise.\n\t * @static\n\t */\n\tisObject(value) {\n\t\tconst valueType = typeof value;\n\n\t\treturn value && (valueType === 'object' || Lang.isFunction(value));\n\t},\n\n\t/**\n\t * Check if the passed value is a string.\n\t *\n\t * @memberof Lang\n\t * @method isString\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is a string, false otherwise.\n\t * @static\n\t */\n\tisString(value) {\n\t\treturn typeof value === 'string';\n\t},\n\n\t/**\n\t * Adds all properties from the supplier to the receiver.\n\t * The function will add all properties, not only these owned by the supplier.\n\t *\n\t * @memberof Lang\n\t * @method mix\n\t * @param {Object} receiver The object which will receive properties.\n\t * @param {Object} supplier The object which provides properties.\n\t * @return {Object} The modified receiver.\n\t * @static\n\t */\n\tmix(receiver, supplier) {\n\t\tconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\t\tfor (const key in supplier) {\n\t\t\tif (hasOwnProperty.call(supplier, key)) {\n\t\t\t\treceiver[key] = supplier[key];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Converts value to Integer.\n\t *\n\t * @memberof Lang\n\t * @method toInt\n\t * @param {Any} value The value which have to be converted to Integer.\n\t * @return {Integer} The converted value.\n\t * @static\n\t */\n\ttoInt(value) {\n\t\treturn parseInt(value, 10);\n\t},\n};\n\nexport default Lang;\n","(function() { module.exports = window[undefined]; }());","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonStyle is a mixin that provides a style prop and some methods to apply the resulting\n * style and checking if it is present in a given path or selection.\n *\n * @class ButtonStyle\n */\nexport default WrappedComponent =>\n\tclass ButtonStyle extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Lifecycle. Invoked once, both on the client and server, immediately before the initial rendering occurs.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStyle\n\t\t * @method componentWillMount\n\t\t */\n\t\tcomponentWillMount() {\n\t\t\tif (Lang.isFunction(super.componentWillMount)) {\n\t\t\t\tsuper.componentWillMount();\n\t\t\t}\n\n\t\t\tlet style = this.props.style;\n\n\t\t\tif (Lang.isString(style)) {\n\t\t\t\tconst parts = style.split('.');\n\t\t\t\tlet currentMember = this.context.editor.get('nativeEditor')\n\t\t\t\t\t.config;\n\t\t\t\tlet property = parts.shift();\n\n\t\t\t\twhile (\n\t\t\t\t\tproperty &&\n\t\t\t\t\tLang.isObject(currentMember) &&\n\t\t\t\t\tLang.isObject(currentMember[property])\n\t\t\t\t) {\n\t\t\t\t\tcurrentMember = currentMember[property];\n\t\t\t\t\tproperty = parts.shift();\n\t\t\t\t}\n\n\t\t\t\tif (Lang.isObject(currentMember)) {\n\t\t\t\t\tstyle = currentMember;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._style = new CKEDITOR.style(style);\n\t\t}\n\n\t\t/**\n\t\t * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStyle\n\t\t * @method componentWillUnmount\n\t\t */\n\t\tcomponentWillUnmount() {\n\t\t\tif (Lang.isFunction(super.componentWillUnmount)) {\n\t\t\t\tsuper.componentWillUnmount();\n\t\t\t}\n\n\t\t\tthis._style = null;\n\t\t}\n\n\t\t/**\n\t\t * Returns instance of CKEDITOR.style which represents the current button style.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStyle\n\t\t * @method getStyle\n\t\t * @return {CKEDITOR.style} The current style representation.\n\t\t */\n\t\tgetStyle() {\n\t\t\treturn this._style;\n\t\t}\n\n\t\t/**\n\t\t * Checks if style is active in the current selection.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStyle\n\t\t * @method isActive\n\t\t * @return {Boolean} True if style is active, false otherwise.\n\t\t */\n\t\tisActive() {\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\t\tconst elementPath = editor.elementPath();\n\t\t\treturn this.getStyle().checkActive(elementPath, editor);\n\t\t}\n\t};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport EditorContext from '../../adapter/editor-context';\n\n/**\n * ButtonCommandActive is a mixin that provides an `isActive` method to determine if\n * a context-aware command is currently in an active state.\n *\n * @class ButtonCommandActive\n */\nexport default WrappedComponent =>\n\tclass ButtonCommandActive extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Checks if the command is active in the current selection.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonCommandActive\n\t\t * @method isActive\n\t\t * @return {Boolean} True if the command is active, false otherwise.\n\t\t */\n\t\tisActive() {\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\tconst command = editor.getCommand(this.props.command);\n\n\t\t\treturn command ? command.state === CKEDITOR.TRISTATE_ON : false;\n\t\t}\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport ReactDOM from 'react-dom';\n\nimport Lang from '../../oop/lang';\n\nconst DIRECTION_NONE = 0;\nconst DIRECTION_NEXT = 1;\nconst DIRECTION_PREV = -1;\n\nconst ACTION_NONE = 0;\nconst ACTION_MOVE_FOCUS = 1;\nconst ACTION_DISMISS_FOCUS = 2;\n\n/**\n * WidgetFocusManager is a mixin that provides keyboard navigation inside a widget. To do this,\n * it exposes the following props and methods:\n *\n * @class WidgetFocusManager\n */\nexport default WrappedComponent =>\n\tclass WidgetFocusManager extends WrappedComponent {\n\t\t/**\n\t\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method componentDidMount\n\t\t */\n\t\tcomponentDidMount() {\n\t\t\tif (Lang.isFunction(super.componentDidMount)) {\n\t\t\t\tsuper.componentDidMount();\n\t\t\t}\n\n\t\t\tthis._refresh();\n\t\t}\n\n\t\t/**\n\t\t * Lifecycle. Invoked immediately after the component's updates are flushed to the DOM.\n\t\t * Refreshes the descendants list.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method componentDidUpdate\n\t\t */\n\t\tcomponentDidUpdate() {\n\t\t\tif (Lang.isFunction(super.componentDidUpdate)) {\n\t\t\t\tsuper.componentDidUpdate();\n\t\t\t}\n\n\t\t\tthis._refresh();\n\t\t}\n\n\t\t/**\n\t\t * Focuses the current active descendant.\n\t\t *\n\t\t * Several Widgets can be nested in a component hierarchy by attaching this focus method to\n\t\t * the widget DOM node, transferring the DOM focus control to the inner FocusManager.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method focus\n\t\t */\n\t\tfocus = event => {\n\t\t\tif (!event || this._isValidTarget(event.target)) {\n\t\t\t\tif (this._descendants && this._descendants.length) {\n\t\t\t\t\tconst activeDescendantEl = this._descendants[\n\t\t\t\t\t\tthis._activeDescendant\n\t\t\t\t\t];\n\t\t\t\t\t// When user clicks with the mouse, the activeElement is already set and there\n\t\t\t\t\t// is no need to focus it. Focusing of the active descendant (usually some button) is required\n\t\t\t\t\t// in case of keyboard navigation, because the focused element might be not the first button,\n\t\t\t\t\t// but the div element, which contains the button.\n\t\t\t\t\tif (\n\t\t\t\t\t\tdocument.activeElement !== activeDescendantEl &&\n\t\t\t\t\t\t!this.props.focusFirstChild\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis._descendants.indexOf(\n\t\t\t\t\t\t\t\tdocument.activeElement\n\t\t\t\t\t\t\t) === -1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tactiveDescendantEl.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (event) {\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Handles the key events on a DOM node to execute the appropriate navigation when needed.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @param {Object} event The Keyboard event that was detected on the widget DOM node.\n\t\t * @method handleKey\n\t\t */\n\t\thandleKey = event => {\n\t\t\tif (this._isValidTarget(event.target) && this._descendants) {\n\t\t\t\tconst action = this._getFocusAction(event);\n\n\t\t\t\tif (action.type) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\tif (action.type === ACTION_MOVE_FOCUS) {\n\t\t\t\t\t\tthis._moveFocus(action.direction);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (action.type === ACTION_DISMISS_FOCUS) {\n\t\t\t\t\t\tthis.props.onDismiss(action.direction);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Moves the focus among descendants in the especified direction.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method moveFocus\n\t\t * @param {number} direction The direction (1 or -1) of the focus movement among descendants.\n\t\t */\n\t\tmoveFocus(direction) {\n\t\t\tdirection = Lang.isNumber(direction) ? direction : 0;\n\n\t\t\tthis._moveFocus(direction);\n\t\t}\n\n\t\t/**\n\t\t * Returns the action, if any, that a keyboard event in the current focus manager state\n\t\t * should produce.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _getFocusAction\n\t\t * @param {object} event The Keyboard event.\n\t\t * @protected\n\t\t * @return {Object} An action object with type and direction properties.\n\t\t */\n\t\t_getFocusAction(event) {\n\t\t\tconst action = {\n\t\t\t\ttype: ACTION_NONE,\n\t\t\t};\n\n\t\t\tif (this.props.keys) {\n\t\t\t\tconst direction = this._getFocusMoveDirection(event);\n\n\t\t\t\tif (direction) {\n\t\t\t\t\taction.direction = direction;\n\t\t\t\t\taction.type = ACTION_MOVE_FOCUS;\n\t\t\t\t}\n\n\t\t\t\tconst dismissAction = this._getFocusDismissAction(\n\t\t\t\t\tevent,\n\t\t\t\t\tdirection\n\t\t\t\t);\n\n\t\t\t\tif (dismissAction.dismiss) {\n\t\t\t\t\taction.direction = dismissAction.direction;\n\t\t\t\t\taction.type = ACTION_DISMISS_FOCUS;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn action;\n\t\t}\n\n\t\t/**\n\t\t * Returns the dismiss action, if any, the focus manager should execute to yield the focus. This\n\t\t * will happen in any of these scenarios if a dismiss callback has been specified:\n\t\t * - A dismiss key has been pressed\n\t\t * - In a non-circular focus manager, when:\n\t\t *     - The active descendant is the first one and a prev key has been pressed.\n\t\t *     - The active descendant is the last one and a next key has been pressed.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _getFocusDismissAction\n\t\t * @param {Number} focusMoveDirection The focus movement direction (if any).\n\t\t * @param {Object} event The Keyboard event.\n\t\t * @protected\n\t\t * @return {Object} A dismiss action with dismiss and direction properties.\n\t\t */\n\t\t_getFocusDismissAction(event, focusMoveDirection) {\n\t\t\tconst dismissAction = {\n\t\t\t\tdirection: focusMoveDirection,\n\t\t\t\tdismiss: false,\n\t\t\t};\n\n\t\t\tif (this.props.onDismiss) {\n\t\t\t\tif (this._isValidKey(event.keyCode, this.props.keys.dismiss)) {\n\t\t\t\t\tdismissAction.dismiss = true;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tthis._isValidKey(event.keyCode, this.props.keys.dismissNext)\n\t\t\t\t) {\n\t\t\t\t\tdismissAction.dismiss = true;\n\t\t\t\t\tdismissAction.direction = DIRECTION_NEXT;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tthis._isValidKey(event.keyCode, this.props.keys.dismissPrev)\n\t\t\t\t) {\n\t\t\t\t\tdismissAction.dismiss = true;\n\t\t\t\t\tdismissAction.direction = DIRECTION_PREV;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!dismissAction.dismiss &&\n\t\t\t\t\t!this.props.circular &&\n\t\t\t\t\tfocusMoveDirection\n\t\t\t\t) {\n\t\t\t\t\tdismissAction.dismiss =\n\t\t\t\t\t\t(focusMoveDirection === DIRECTION_PREV &&\n\t\t\t\t\t\t\tthis._activeDescendant === 0) ||\n\t\t\t\t\t\t(focusMoveDirection === DIRECTION_NEXT &&\n\t\t\t\t\t\t\tthis._activeDescendant ===\n\t\t\t\t\t\t\t\tthis._descendants.length - 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn dismissAction;\n\t\t}\n\n\t\t/**\n\t\t * Returns the direction, if any, in which the focus should be moved. In presence of the\n\t\t * shift key modifier, the direction of the movement is inverted.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _getFocusMoveDirection\n\t\t * @param {Object} event The Keyboard event.\n\t\t * @protected\n\t\t * @return {Number} The computed direction of the expected focus movement.\n\t\t */\n\t\t_getFocusMoveDirection(event) {\n\t\t\tlet direction = DIRECTION_NONE;\n\n\t\t\tif (this._isValidKey(event.keyCode, this.props.keys.next)) {\n\t\t\t\tdirection = DIRECTION_NEXT;\n\t\t\t}\n\t\t\tif (this._isValidKey(event.keyCode, this.props.keys.prev)) {\n\t\t\t\tdirection = DIRECTION_PREV;\n\t\t\t}\n\n\t\t\tif (event.shifKey) {\n\t\t\t\tdirection *= -1;\n\t\t\t}\n\n\t\t\treturn direction;\n\t\t}\n\n\t\t/**\n\t\t * Indicates if a given keyCode is valid for the given set of keys.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _isValidKey\n\t\t * @param {Array|Number} keys A key set. Can be a number an array of numbers representing the allowed keyCodes.\n\t\t * @param {Number} keyCode An event keyCode.\n\t\t * @protected\n\t\t * @return {Boolean} A boolean value indicating if the key is valid.\n\t\t */\n\t\t_isValidKey(keyCode, keys) {\n\t\t\treturn Lang.isArray(keys)\n\t\t\t\t? keys.indexOf(keyCode) !== -1\n\t\t\t\t: keyCode === keys;\n\t\t}\n\n\t\t/**\n\t\t * Indicates if a given element is valid for focus management. User input elements such as\n\t\t * input, select or textarea are excluded.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _isValidKey\n\t\t * @param {DOMNode} element A DOM element.\n\t\t * @protected\n\t\t * @return {Boolean} A boolean value indicating if the element is valid.\n\t\t */\n\t\t_isValidTarget(element) {\n\t\t\tconst tagName = element.tagName.toLowerCase();\n\n\t\t\treturn (\n\t\t\t\ttagName !== 'input' &&\n\t\t\t\ttagName !== 'select' &&\n\t\t\t\ttagName !== 'textarea'\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Moves the focus among descendants in the especified direction.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _moveFocus\n\t\t * @param {number} direction The direction (1 or -1) of the focus movement among descendants.\n\t\t * @protected\n\t\t */\n\t\t_moveFocus(direction) {\n\t\t\tconst numDescendants = this._descendants.length;\n\n\t\t\tlet descendant = this._descendants[this._activeDescendant];\n\n\t\t\tdescendant.setAttribute('tabIndex', -1);\n\n\t\t\tthis._activeDescendant += direction;\n\n\t\t\tif (this.props.circular) {\n\t\t\t\t// Calculate proper modulo result since remainder operator doesn't behave in the\n\t\t\t\t// same way for negative numbers\n\t\t\t\tthis._activeDescendant =\n\t\t\t\t\t((this._activeDescendant % numDescendants) +\n\t\t\t\t\t\tnumDescendants) %\n\t\t\t\t\tnumDescendants;\n\t\t\t} else {\n\t\t\t\tthis._activeDescendant = Math.max(\n\t\t\t\t\tMath.min(this._activeDescendant, numDescendants - 1),\n\t\t\t\t\t0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tdescendant = this._descendants[this._activeDescendant];\n\n\t\t\tdescendant.setAttribute('tabIndex', 0);\n\t\t\tdescendant.focus();\n\t\t}\n\n\t\t/**\n\t\t * Refreshes the descendants list by executing the CSS selector again and resets the descendants tabIndex.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _refresh\n\t\t * @protected\n\t\t */\n\t\t_refresh() {\n\t\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\t\tif (domNode) {\n\t\t\t\tconst descendants = domNode.querySelectorAll(\n\t\t\t\t\tthis.props.descendants\n\t\t\t\t);\n\n\t\t\t\tlet priorityDescendants = [];\n\n\t\t\t\tthis._descendants = [];\n\n\t\t\t\tArray.prototype.slice.call(descendants).forEach(item => {\n\t\t\t\t\tconst dataTabIndex = item.getAttribute('data-tabindex');\n\n\t\t\t\t\tif (dataTabIndex) {\n\t\t\t\t\t\tpriorityDescendants.push(item);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._descendants.push(item);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tpriorityDescendants = priorityDescendants.sort((a, b) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tLang.toInt(a.getAttribute('data-tabindex')) >\n\t\t\t\t\t\tLang.toInt(b.getAttribute('data-tabindex'))\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\t\tthis._descendants = priorityDescendants.concat(\n\t\t\t\t\tthis._descendants\n\t\t\t\t);\n\n\t\t\t\tthis._activeDescendant = 0;\n\n\t\t\t\tthis._descendants.some((item, index) => {\n\t\t\t\t\tif (item.getAttribute('tabindex') === '0') {\n\t\t\t\t\t\tthis._activeDescendant = index;\n\t\t\t\t\t\tthis.focus();\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonKeystroke is a mixin that provides a `keystroke` prop that allows configuring\n * a function of the instance to be invoked upon the keystroke activation.\n *\n * @class ButtonKeystroke\n */\nexport default WrappedComponent =>\n\tclass ButtonKeystroke extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Lifecycle. Invoked once, both on the client and server, immediately before the initial rendering occurs.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonKeystroke\n\t\t * @method componentWillMount\n\t\t */\n\t\tcomponentWillMount() {\n\t\t\tif (Lang.isFunction(super.componentWillMount)) {\n\t\t\t\tsuper.componentWillMount();\n\t\t\t}\n\n\t\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\t\t\tconst keystroke = this.props.keystroke;\n\n\t\t\tconst commandName = `keystroke:${keystroke.name}`;\n\n\t\t\tlet command = nativeEditor.getCommand(commandName);\n\n\t\t\tif (!command) {\n\t\t\t\tcommand = new CKEDITOR.command(nativeEditor, {\n\t\t\t\t\texec: function(editor) {\n\t\t\t\t\t\tconst keystrokeFn = keystroke.fn;\n\n\t\t\t\t\t\tif (Lang.isString(keystrokeFn)) {\n\t\t\t\t\t\t\tthis[keystrokeFn].call(this, editor);\n\t\t\t\t\t\t} else if (Lang.isFunction(keystrokeFn)) {\n\t\t\t\t\t\t\tkeystrokeFn.call(this, editor);\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this),\n\t\t\t\t});\n\n\t\t\t\tnativeEditor.addCommand(commandName, command);\n\t\t\t}\n\n\t\t\tthis._defaultKeystrokeCommand =\n\t\t\t\tnativeEditor.keystrokeHandler.keystrokes[keystroke.keys];\n\n\t\t\tnativeEditor.setKeystroke(keystroke.keys, commandName);\n\t\t}\n\n\t\t/**\n\t\t * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonKeystroke\n\t\t * @method componentWillUnmount\n\t\t */\n\t\tcomponentWillUnmount() {\n\t\t\tif (Lang.isFunction(super.componentWillUnmount)) {\n\t\t\t\tsuper.componentWillUnmount();\n\t\t\t}\n\n\t\t\tthis.context.editor\n\t\t\t\t.get('nativeEditor')\n\t\t\t\t.setKeystroke(\n\t\t\t\t\tthis.props.keystroke.keys,\n\t\t\t\t\tthis._defaultKeystrokeCommand\n\t\t\t\t);\n\t\t}\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport WidgetFocusManager from '../base/widget-focus-manager';\n\n/**\n * The ButtonDropdown class provides markup and keyboard navigation behaviour to a dropdown\n * opened from a button.\n *\n * @class ButtonDropdown\n */\nclass ButtonDropdown extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonDropdown\n\t * @method getDefaultProps\n\t */\n\tstatic defaultProps = {\n\t\tcircular: false,\n\t\tdescendants: '.ae-toolbar-element',\n\t\tkeys: {\n\t\t\tdismiss: [27],\n\t\t\tdismissNext: [39],\n\t\t\tdismissPrev: [37],\n\t\t\tnext: [40],\n\t\t\tprev: [38],\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the dropdown in the configuration.\n\t *\n\t * @default dropdown\n\t * @memberof ButtonDropdown\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'dropdown';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonDropdown\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"ae-arrow-box ae-arrow-box-top-left ae-dropdown\"\n\t\t\t\tonFocus={this.focus}\n\t\t\t\tonKeyDown={this.handleKey}\n\t\t\t\ttabIndex=\"0\">\n\t\t\t\t<ul className=\"ae-listbox\" role=\"listbox\">\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default WidgetFocusManager(ButtonDropdown);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport WidgetFocusManager from '../base/widget-focus-manager';\nimport ButtonCommandListItem from './button-command-list-item.jsx';\n\n/**\n * The ButtonCommandsList class provides functionality for showing a list of commands that can be\n * executed to the current selection..\n *\n * @class ButtonCommandsList\n * @uses WidgetFocusManager\n */\nclass ButtonCommandsList extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandsList\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcircular: false,\n\t\tdescendants: '.ae-toolbar-element',\n\t\tkeys: {\n\t\t\tdismiss: [27],\n\t\t\tdismissNext: [39],\n\t\t\tdismissPrev: [37],\n\t\t\tnext: [40],\n\t\t\tprev: [38],\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default buttonCommandsList\n\t * @memberof ButtonCommandsList\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'buttonCommandsList';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis._ref = React.createRef();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * Focuses on the list node to allow keyboard interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandsList\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tthis._ref.current.focus();\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the list.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandsList\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"ae-arrow-box ae-arrow-box-top-left ae-dropdown\"\n\t\t\t\tonFocus={this.focus}\n\t\t\t\tonKeyDown={this.handleKey}\n\t\t\t\tref={this._ref}\n\t\t\t\ttabIndex=\"0\">\n\t\t\t\t<ul\n\t\t\t\t\tclassName=\"ae-listbox\"\n\t\t\t\t\tid={this.props.listId}\n\t\t\t\t\trole=\"listbox\">\n\t\t\t\t\t{this._renderActions(this.props.commands)}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Renders instances of ButtonCommandListItem with the description of the row action that will be executed.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandsList\n\t * @method _renderActions\n\t * @protected\n\t * @return {Array} Rendered instances of ButtonCommandListItem class\n\t */\n\t_renderActions(commands) {\n\t\tlet items;\n\n\t\tif (commands && commands.length) {\n\t\t\titems = commands.map(item => {\n\t\t\t\treturn (\n\t\t\t\t\t<li key={item.command} role=\"option\">\n\t\t\t\t\t\t<ButtonCommandListItem\n\t\t\t\t\t\t\tcommand={item.command}\n\t\t\t\t\t\t\tdescription={\n\t\t\t\t\t\t\t\ttypeof item.label === 'string'\n\t\t\t\t\t\t\t\t\t? item.label\n\t\t\t\t\t\t\t\t\t: item.label()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ticon={item.icon}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn items;\n\t}\n}\n\nexport default WidgetFocusManager(ButtonCommandsList);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonActionStyle is a mixin that provides applying style implementation for a\n * button based on the `applyStyle` and `removeStyle` API of CKEDITOR.\n *\n * To execute properly, the component has to expose the following methods which can be obtained\n * out of the box using the {{#crossLink \"ButtonStyle\"}}{{/crossLink}} mixin:\n * - `Function` {{#crossLink \"ButtonStyle/isActive\"}}{{/crossLink}} to check the active state\n * - `Function` {{#crossLink \"ButtonStyle/getStyle\"}}{{/crossLink}} to return the style that should be applied\n *\n * @class ButtonActionStyle\n */\nexport default WrappedComponent =>\n\tclass ButtonActionStyle extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Removes or applies the component style to the current selection.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonActionStyle\n\t\t * @method applyStyle\n\t\t */\n\t\tapplyStyle = () => {\n\t\t\tif (\n\t\t\t\tLang.isFunction(this.isActive) &&\n\t\t\t\tLang.isFunction(this.getStyle)\n\t\t\t) {\n\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\teditor.getSelection().lock();\n\n\t\t\t\tif (this.isActive()) {\n\t\t\t\t\teditor.removeStyle(this.getStyle());\n\t\t\t\t} else {\n\t\t\t\t\teditor.applyStyle(this.getStyle());\n\t\t\t\t}\n\n\t\t\t\teditor.getSelection().unlock();\n\n\t\t\t\teditor.fire('actionPerformed', this);\n\t\t\t}\n\t\t};\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport WidgetFocusManager from '../base/widget-focus-manager';\nimport ButtonDropdown from './button-dropdown.jsx';\nimport ButtonsStylesListHeader from './button-styles-list-header.jsx';\nimport ButtonStylesListItemRemove from './button-styles-list-item-remove.jsx';\nimport ButtonStylesListItem from './button-styles-list-item.jsx';\n\n/**\n * The ButtonStylesList class provides functionality for showing a list of styles that can be\n * applied to the current selection..\n *\n * @class ButtonStylesList\n * @uses WidgetFocusManager\n */\nclass ButtonStylesList extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesList\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcircular: false,\n\t\tdescendants: '.ae-toolbar-element',\n\t\tkeys: {\n\t\t\tdismiss: [27],\n\t\t\tdismissNext: [39],\n\t\t\tdismissPrev: [37],\n\t\t\tnext: [40],\n\t\t\tprev: [38],\n\t\t},\n\t\tshowRemoveStylesItem: true,\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @memberof ButtonStylesList\n\t * @static\n\t * @property {String} key\n\t * @default buttonStylesList\n\t */\n\tstatic key = 'buttonStylesList';\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * Focuses on the list node to allow keyboard interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesList\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tReactDOM.findDOMNode(this).focus();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, both on the client and server, immediately before the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesList\n\t * @method componentWillMount\n\t */\n\tcomponentWillMount() {\n\t\tconst blockStyles = [];\n\t\tconst inlineStyles = [];\n\t\tconst objectStyles = [];\n\n\t\tthis.props.styles.forEach(item => {\n\t\t\tconst style = new CKEDITOR.style(item.style);\n\n\t\t\tif (style.type === CKEDITOR.STYLE_BLOCK) {\n\t\t\t\tblockStyles.push(item);\n\t\t\t} else if (style.type === CKEDITOR.STYLE_INLINE) {\n\t\t\t\tinlineStyles.push(item);\n\t\t\t} else if (style.type === CKEDITOR.STYLE_OBJECT) {\n\t\t\t\tobjectStyles.push(item);\n\t\t\t}\n\t\t});\n\n\t\tthis._blockStyles = blockStyles;\n\t\tthis._inlineStyles = inlineStyles;\n\t\tthis._objectStyles = objectStyles;\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the list.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesList\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet removeStylesItem;\n\n\t\tif (this.props.showRemoveStylesItem) {\n\t\t\tremoveStylesItem = (\n\t\t\t\t<ButtonStylesListItemRemove\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<ButtonDropdown {...this.props}>\n\t\t\t\t{removeStylesItem}\n\n\t\t\t\t<ButtonsStylesListHeader\n\t\t\t\t\tname={AlloyEditor.Strings.blockStyles}\n\t\t\t\t\tstyles={this._blockStyles}\n\t\t\t\t/>\n\t\t\t\t{this._renderStylesItems(this._blockStyles)}\n\n\t\t\t\t<ButtonsStylesListHeader\n\t\t\t\t\tname={AlloyEditor.Strings.inlineStyles}\n\t\t\t\t\tstyles={this._inlineStyles}\n\t\t\t\t/>\n\t\t\t\t{this._renderStylesItems(this._inlineStyles)}\n\n\t\t\t\t<ButtonsStylesListHeader\n\t\t\t\t\tname={AlloyEditor.Strings.objectStyles}\n\t\t\t\t\tstyles={this._objectStyles}\n\t\t\t\t/>\n\t\t\t\t{this._renderStylesItems(this._objectStyles)}\n\t\t\t</ButtonDropdown>\n\t\t);\n\t}\n\n\t/**\n\t * Renders instances of ButtonStylesListItem with the preview of the correspondent block, inline or object styles.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesList\n\t * @method _renderStylesItems\n\t * @param {Array} styles List of styles for which preview should be rendered.\n\t * @protected\n\t * @return {Array} Rendered instances of ButtonStylesListItem class\n\t */\n\t_renderStylesItems(styles) {\n\t\tlet items;\n\n\t\tif (styles && styles.length) {\n\t\t\titems = styles.map(item => {\n\t\t\t\treturn (\n\t\t\t\t\t<li key={item.name} role=\"option\">\n\t\t\t\t\t\t<ButtonStylesListItem\n\t\t\t\t\t\t\tactiveStyle={this.props.activeStyle}\n\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\tstyle={item.style}\n\t\t\t\t\t\t\tstyleFn={item.styleFn}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn items;\n\t}\n}\n\nexport default WidgetFocusManager(ButtonStylesList);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport ReactDOM from 'react-dom';\n\nimport Lang from '../../oop/lang';\n\n/**\n * Provides functionality for managing different dropdowns inside a widget.\n *\n * @class WidgetDropdown\n */\nexport default WrappedComponent =>\n\tclass WidgetDropdown extends WrappedComponent {\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\n\t\t\tthis.state = {\n\t\t\t\t...this.state,\n\t\t\t\tdropdownTrigger: null,\n\t\t\t\titemDropdown: null,\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Lifecycle. Invoked when a component is receiving new props.\n\t\t * This method is not called for the initial render.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetDropdown\n\t\t * @method componentWillReceiveProps\n\t\t */\n\t\tcomponentWillReceiveProps(nextProps) {\n\t\t\tif (Lang.isFunction(super.componentWillReceiveProps)) {\n\t\t\t\tsuper.componentWillReceiveProps(nextProps);\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tdropdownTrigger: null,\n\t\t\t\titemDropdown: null,\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Merges the provided object with two more properties:\n\t\t * - expanded - boolean flag which indicates if an widget should be rendered exclusively.\n\t\t * - toggleDropdown - function, which can be used by an widget in order to obtain exclusive state.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetDropdown\n\t\t * @method mergeDropdownProps\n\t\t * @param {Object} obj The properties container which should be merged with the properties, related\n\t\t *    to dropdown state.\n\t\t * @param {Object} itemKey They key of an React Widget which contains the dropdown.\n\t\t * @return {Object} The merged object.\n\t\t */\n\t\tmergeDropdownProps = (obj, itemKey) => {\n\t\t\treturn CKEDITOR.tools.merge(obj, {\n\t\t\t\texpanded: this.state.itemDropdown === itemKey ? true : false,\n\t\t\t\ttabIndex: this.state.dropdownTrigger === itemKey ? 0 : -1,\n\t\t\t\ttoggleDropdown: this.toggleDropdown.bind(this, itemKey),\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Sets the active dropdown of the widget or discards the toggled item from the state.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetDropdown\n\t\t * @method toggleDropdown\n\t\t * @param {Object} itemDropdown The widget which requests to toggle its dropdown.\n\t\t * @param {Number} toggleDirection User movement direction when toggled via keyboard.\n\t\t */\n\t\ttoggleDropdown = (itemDropdown, toggleDirection) => {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tdropdownTrigger: itemDropdown,\n\t\t\t\t\titemDropdown:\n\t\t\t\t\t\titemDropdown !== this.state.itemDropdown\n\t\t\t\t\t\t\t? itemDropdown\n\t\t\t\t\t\t\t: null,\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tif (!this.state.itemDropdown) {\n\t\t\t\t\t\tif (this.moveFocus) {\n\t\t\t\t\t\t\tthis.moveFocus(toggleDirection);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tReactDOM.findDOMNode(this).focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from '../../oop/lang';\n\n/**\n * Provides functionality for managing exclusive state of an widget.\n * The exclusive state means that a button may request to be the only rendered\n * widget in its parent container. WidgetExclusive will manage this state by\n * filtering and suppressing the other sibling widgets from displaying.\n *\n * @class WidgetExclusive\n */\nexport default WrappedComponent =>\n\tclass WidgetExclusive extends WrappedComponent {\n\t\t/**\n\t\t * Cancels the exclusive state of an widget.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetExclusive\n\t\t * @method cancelExclusive\n\t\t * @param {Object} itemExclusive The widget which exclusive state should be canceled.\n\t\t */\n\t\tcancelExclusive(itemExclusive) {\n\t\t\tif (this.state.itemExclusive === itemExclusive) {\n\t\t\t\tthis.setState({\n\t\t\t\t\titemExclusive: null,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Lifecycle. Invoked when a component is receiving new props.\n\t\t * This method is not called for the initial render.\n\t\t * Calling this.setState() within this function will not trigger an additional render.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetExclusive\n\t\t * @method componentWillReceiveProps\n\t\t * @param {Object} nextProps Object containing the current set of properties.\n\t\t */\n\t\tcomponentWillReceiveProps(nextProps) {\n\t\t\tif (Lang.isFunction(super.componentWillReceiveProps)) {\n\t\t\t\tsuper.componentWillReceiveProps(nextProps);\n\t\t\t}\n\n\t\t\t// Receiving properties means that the component is being re-rendered.\n\t\t\t// Re-rendering is triggered by editorInteraction, so we have to\n\t\t\t// reset the exclusive state and render the UI according to the new selection.\n\t\t\tthis.setState({\n\t\t\t\titemExclusive: null,\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Filters the items and returns only those with exclusive state.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetExclusive\n\t\t * @method filterExclusive\n\t\t * @param {Array} items The widgets to be filtered.\n\t\t * @return {Array|Object} The item with executive state.\n\t\t */\n\t\tfilterExclusive(items) {\n\t\t\treturn items.filter(item => {\n\t\t\t\tif (this.state.itemExclusive) {\n\t\t\t\t\tif (this.state.itemExclusive === item.key) {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Merges the provided object with three more properties:\n\t\t * - cancelExclusive - function, which can be used by a widget in order to cancel executive state.\n\t\t * - renderExclusive - boolean flag which indicates if an widget should be rendered exclusively.\n\t\t * - requestExclusive - function, which can be used by a widget in order to obtain exclusive state.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetExclusive\n\t\t * @method mergeExclusiveProps\n\t\t * @param {Object} obj The properties container which should be merged with the properties, related\n\t\t *    to exclusive state.\n\t\t * @param {Object} itemKey They key of an React Widget which should be rendered exclusively.\n\t\t * @return {Object} The merged object.\n\t\t */\n\t\tmergeExclusiveProps(obj, itemKey) {\n\t\t\treturn CKEDITOR.tools.merge(obj, {\n\t\t\t\tcancelExclusive: this.cancelExclusive.bind(this, itemKey),\n\t\t\t\trenderExclusive: this.state.itemExclusive === itemKey,\n\t\t\t\trequestExclusive: this.requestExclusive.bind(this, itemKey),\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Requests and sets exclusive state of an widget.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetExclusive\n\t\t * @method requestExclusive\n\t\t * @param {Object} itemExclusive The widget which requests exclusive state.\n\t\t */\n\t\trequestExclusive = itemExclusive => {\n\t\t\tthis.setState({\n\t\t\t\titemExclusive,\n\t\t\t});\n\t\t};\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\nimport WidgetDropdown from '../base/widget-dropdown';\nimport WidgetFocusManager from '../base/widget-focus-manager';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonLinkAutocompleteList from './button-link-autocomplete-list.jsx';\nimport ButtonLinkTargetEdit from './button-link-target-edit.jsx';\n\n/**\n * The ButtonLinkEdit class provides functionality for creating and editing a link in a document.\n * Provides UI for creating, editing and removing a link.\n *\n * @class ButtonLinkEdit\n * @uses WidgetDropdown\n * @uses WidgetFocusManager\n */\nclass ButtonLinkEdit extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tappendProtocol: true,\n\t\tautocompleteUrl: '',\n\t\tcircular: true,\n\t\tcustomIndexStart: true,\n\t\tdefaultLinkTarget: '',\n\t\tdescendants: '.ae-toolbar-element',\n\t\tkeys: {\n\t\t\tdismiss: [27],\n\t\t\tdismissNext: [39],\n\t\t\tdismissPrev: [37],\n\t\t\tnext: [40],\n\t\t\tprev: [38],\n\t\t},\n\t\tshowTargetSelector: true,\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default linkEdit\n\t * @memberof ButtonLinkEdit\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'linkEdit';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.linkInput = React.createRef();\n\t\tthis.state = this._getInitialState();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * Focuses on the link input to immediately allow editing. This should only happen if the component\n\t * is rendered in exclusive mode to prevent aggressive focus stealing.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tif (this.props.renderExclusive || this.props.manualSelection) {\n\t\t\t// We need to wait for the next rendering cycle before focusing to avoid undesired\n\t\t\t// scrolls on the page\n\t\t\tthis._focusLinkInput();\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Invoked when a component is receiving new props.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method componentWillReceiveProps\n\t */\n\tcomponentWillReceiveProps() {\n\t\tthis.setState(this._getInitialState());\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet targetSelector = {\n\t\t\tallowedTargets: this.props.allowedTargets,\n\t\t\teditor: this.context.editor,\n\t\t\thandleLinkTargetChange: this._handleLinkTargetChange,\n\t\t\tselectedTarget:\n\t\t\t\tthis.state.linkTarget || AlloyEditor.Strings.linkTargetDefault,\n\t\t};\n\n\t\ttargetSelector = this.mergeDropdownProps(\n\t\t\ttargetSelector,\n\t\t\tButtonLinkTargetEdit.key\n\t\t);\n\n\t\tlet autocompleteDropdown;\n\n\t\tif (this.props.data) {\n\t\t\tlet dataFn = this.props.data;\n\n\t\t\tif (!Lang.isFunction(dataFn)) {\n\t\t\t\tconst items = this.props.data;\n\n\t\t\t\tdataFn = () => items;\n\t\t\t}\n\n\t\t\tlet autocompleteDropdownProps = {\n\t\t\t\tautocompleteSelected: this.state.autocompleteSelected,\n\t\t\t\tdata: dataFn,\n\t\t\t\teditor: this.context.editor,\n\t\t\t\thandleLinkAutocompleteClick: this._handleLinkAutocompleteClick,\n\t\t\t\tonDismiss: this.props.toggleDropdown,\n\t\t\t\tsetAutocompleteState: this._setAutocompleteState,\n\t\t\t\tterm: this.state.linkHref,\n\t\t\t};\n\n\t\t\tautocompleteDropdownProps = this.mergeDropdownProps(\n\t\t\t\tautocompleteDropdownProps,\n\t\t\t\tButtonLinkAutocompleteList.key\n\t\t\t);\n\n\t\t\tautocompleteDropdown = (\n\t\t\t\t<ButtonLinkAutocompleteList {...autocompleteDropdownProps} />\n\t\t\t);\n\t\t}\n\n\t\tlet buttonClearLink;\n\n\t\tif (this.state.linkHref) {\n\t\t\tbuttonClearLink = (\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.clearInput}\n\t\t\t\t\tclassName=\"ae-button ae-button-clear\"\n\t\t\t\t\tonClick={this._clearLink}\n\t\t\t\t\ttitle={AlloyEditor.Strings.clear}>\n\t\t\t\t\t<ButtonIcon symbol=\"times-circle\" />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\n\t\tconst placeholderProp = {};\n\n\t\tif (!CKEDITOR.env.ie && AlloyEditor.Strings) {\n\t\t\tplaceholderProp.placeholder = AlloyEditor.Strings.editLink;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-edit-link\">\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.removeLink}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdisabled={!this.state.element}\n\t\t\t\t\tonClick={this._removeLink}\n\t\t\t\t\ttitle={AlloyEditor.Strings.remove}>\n\t\t\t\t\t<ButtonIcon symbol=\"chain-broken\" />\n\t\t\t\t</button>\n\t\t\t\t<div className=\"ae-container-input xxl\">\n\t\t\t\t\t{this.props.showTargetSelector && (\n\t\t\t\t\t\t<ButtonLinkTargetEdit {...targetSelector} />\n\t\t\t\t\t)}\n\t\t\t\t\t<div className=\"ae-container-input\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"ae-input\"\n\t\t\t\t\t\t\tonChange={this._handleLinkHrefChange}\n\t\t\t\t\t\t\tonKeyDown={this._handleKeyDown}\n\t\t\t\t\t\t\t{...placeholderProp}\n\t\t\t\t\t\t\tref={this.linkInput}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={this.state.linkHref}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{autocompleteDropdown}\n\t\t\t\t\t</div>\n\t\t\t\t\t{buttonClearLink}\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.confirm}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdisabled={!this._isValidState()}\n\t\t\t\t\tonClick={this._updateLink}\n\t\t\t\t\ttitle={AlloyEditor.Strings.confirm}>\n\t\t\t\t\t<ButtonIcon className=\"ae-icon-svg-check\" symbol=\"check\" />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * The return value will be used as the initial value of this.state.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _getInitialState\n\t * @protected\n\t * @return {Object}\n\t */\n\t_getInitialState() {\n\t\t// Can't access context from contructor, so get editor from props.\n\t\tconst {editor} = this.props.context;\n\t\tconst {defaultLinkTarget} = this.props;\n\n\t\tconst link = new CKEDITOR.Link(\n\t\t\teditor.get('nativeEditor')\n\t\t).getFromSelection();\n\t\tconst href = (link && link.getAttribute('href')) || '';\n\t\tconst target =\n\t\t\t(link && link.getAttribute('target')) || defaultLinkTarget;\n\n\t\treturn {\n\t\t\tautocompleteSelected: false,\n\t\t\telement: link,\n\t\t\tinitialLink: {\n\t\t\t\thref,\n\t\t\t\ttarget,\n\t\t\t},\n\t\t\tlinkHref: href,\n\t\t\tlinkTarget: target,\n\t\t};\n\t}\n\n\t/**\n\t * Clears the link input. This only changes the component internal state, but does not\n\t * affect the link element of the editor. Only the _removeLink and _updateLink methods\n\t * are translated to the editor element.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _clearLink\n\t * @protected\n\t */\n\t_clearLink = () => {\n\t\tthis.setState({\n\t\t\tlinkHref: '',\n\t\t});\n\n\t\tthis._focusLinkInput();\n\t};\n\n\t/**\n\t * Focuses the user cursor on the widget's input.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _focusLinkInput\n\t * @protected\n\t */\n\t_focusLinkInput() {\n\t\tconst instance = this;\n\n\t\tconst focusLinkEl = function() {\n\t\t\tinstance.linkInput.current.focus();\n\t\t};\n\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(focusLinkEl);\n\t\t} else {\n\t\t\tsetTimeout(focusLinkEl, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Monitors key interaction inside the input element to respond to the keys:\n\t * - Enter: Creates/updates the link.\n\t * - Escape: Discards the changes.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _handleKeyDown\n\t * @param {SyntheticEvent} event The keyboard event.\n\t * @protected\n\t */\n\t_handleKeyDown = event => {\n\t\tif (event.keyCode === 13 || event.keyCode === 27) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tif (event.keyCode === 13) {\n\t\t\tthis._updateLink();\n\t\t} else if (event.keyCode === 40) {\n\t\t\tthis.setState({\n\t\t\t\tautocompleteSelected: true,\n\t\t\t});\n\t\t} else if (event.keyCode === 27) {\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\tnew CKEDITOR.Link(editor).advanceSelection();\n\n\t\t\tthis.context.editor\n\t\t\t\t.get('nativeEditor')\n\t\t\t\t.fire('actionPerformed', this);\n\t\t}\n\t};\n\n\t/**\n\t * Updates the component state when the link input changes on user interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _handleLinkHrefChange\n\t * @param {SyntheticEvent} event The change event.\n\t * @protected\n\t */\n\t_handleLinkHrefChange = event => {\n\t\tthis.setState({\n\t\t\tlinkHref: event.target.value,\n\t\t});\n\n\t\tthis._focusLinkInput();\n\t};\n\n\t/**\n\t * Updates the component state when the link target changes on user interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _handleLinkTargetChange\n\t * @param {SyntheticEvent} event The click event.\n\t * @protected\n\t */\n\t_handleLinkTargetChange = event => {\n\t\tthis.setState({\n\t\t\titemDropdown: null,\n\t\t\tlinkTarget: event.target.getAttribute('data-value'),\n\t\t});\n\n\t\tthis._focusLinkInput();\n\t};\n\n\t/**\n\t * Updates the component state when an autocomplete link result is selected by user interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _handleLinkAutocompleteClick\n\t * @param {SyntheticEvent} event The click event.\n\t * @protected\n\t */\n\t_handleLinkAutocompleteClick(event) {\n\t\tthis.setState({\n\t\t\titemDropdown: null,\n\t\t\tlinkHref: event.target.getAttribute('data-value'),\n\t\t});\n\n\t\tthis._focusLinkInput();\n\t}\n\n\t/**\n\t * Verifies that the current link state is valid so the user can save the link. A valid state\n\t * means that we have a non-empty href and that either that or the link target are different\n\t * from the original link.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _isValidState\n\t * @protected\n\t * @return {Boolean} [description]\n\t */\n\t_isValidState() {\n\t\tconst validState =\n\t\t\tthis.state.linkHref &&\n\t\t\t(this.state.linkHref !== this.state.initialLink.href ||\n\t\t\t\tthis.state.linkTarget !== this.state.initialLink.target);\n\n\t\treturn validState;\n\t}\n\n\t/**\n\t * Removes the link in the editor element.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _removeLink\n\t * @protected\n\t */\n\t_removeLink = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\tconst linkUtils = new CKEDITOR.Link(editor);\n\t\tconst selection = editor.getSelection();\n\t\tconst bookmarks = selection.createBookmarks();\n\n\t\tlinkUtils.remove(this.state.element, {advance: true});\n\n\t\tselection.selectBookmarks(bookmarks);\n\n\t\t// We need to cancelExclusive with the bound parameters in case the button is used\n\t\t// inside another in exclusive mode (such is the case of the link button)\n\t\tthis.props.cancelExclusive();\n\n\t\teditor.fire('actionPerformed', this);\n\t};\n\n\t/**\n\t * Update autocompleteSelected state to focus and select autocomplete´s dropdown\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _setAutocompleteState\n\t * @protected\n\t */\n\t_setAutocompleteState(state) {\n\t\tthis.setState({\n\t\t\tautocompleteSelected: state.selected,\n\t\t});\n\t}\n\n\t/**\n\t * Updates the link in the editor element. If the element didn't exist previously, it will\n\t * create a new <a> element with the href specified in the link input.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _updateLink\n\t * @protected\n\t */\n\t_updateLink = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\tconst linkUtils = new CKEDITOR.Link(editor, {\n\t\t\tappendProtocol: this.props.appendProtocol,\n\t\t});\n\t\tlet linkAttrs = {\n\t\t\ttarget: this.state.linkTarget || null,\n\t\t};\n\t\tconst modifySelection = {advance: true};\n\n\t\tif (this.state.linkHref) {\n\t\t\tif (this.state.element) {\n\t\t\t\tlinkAttrs.href = this.state.linkHref;\n\n\t\t\t\tlinkUtils.update(\n\t\t\t\t\tlinkAttrs,\n\t\t\t\t\tthis.state.element,\n\t\t\t\t\tmodifySelection\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tif (!this.state.linkTarget) linkAttrs = {};\n\n\t\t\t\tlinkUtils.create(\n\t\t\t\t\tthis.state.linkHref,\n\t\t\t\t\tlinkAttrs,\n\t\t\t\t\tmodifySelection\n\t\t\t\t);\n\t\t\t}\n\n\t\t\teditor.fire('actionPerformed', this);\n\t\t}\n\n\t\t// We need to cancelExclusive with the bound parameters in case the button is used\n\t\t// inside another in exclusive mode (such is the case of the link button)\n\t\tthis.props.cancelExclusive();\n\t};\n}\n\nexport default EditorContext.toProps(\n\tWidgetDropdown(WidgetFocusManager(ButtonLinkEdit))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport EditorContext from '../../adapter/editor-context';\n\n/**\n * ButtonCfgProps is a class that provides a mergeButtonCfgProps method for\n * merging React props and the native CKEDITOR's buttonCfg.\n *\n * @class ButtonProps\n */\nexport default WrappedComponent =>\n\tclass ButtonProps extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Merges the properties, passed to the current component with user's configuration\n\t\t * via `buttonCfg` property.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonProps\n\t\t * @method mergeButtonCfgProps\n\t\t * @param {Object} props The properties to be merged with the provided configuration for this\n\t\t * button. If not passed, the user configuration will be merged with `this.props`\n\t\t * @return {Object} The merged properties\n\t\t */\n\t\tmergeButtonCfgProps(props = this.props) {\n\t\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\t\t\tconst buttonCfg = nativeEditor.config.buttonCfg || {};\n\t\t\treturn CKEDITOR.tools.merge(props, buttonCfg['linkEdit']);\n\t\t}\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\n\n/**\n * ToolbarButtons provides a list of buttons which have to be displayed\n * on the current toolbar depending on user preferences and given state.\n *\n * @class ToolbarButtons\n */\nexport default WrappedComponent =>\n\tclass ToolbarButtons extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Lifecycle. Returns the default values of the properties used in the\n\t\t * toolbar.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method getDefaultProps\n\t\t */\n\t\tstatic defaultProps = {\n\t\t\t...WrappedComponent.defaultProps,\n\t\t\tgutter: {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 10,\n\t\t\t},\n\t\t\tconstrainToViewport: true,\n\t\t};\n\n\t\t/**\n\t\t * Cancels an scheduled animation frame.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method cancelAnimation\n\t\t */\n\t\tcancelAnimation() {\n\t\t\tif (this._animationFrameId) {\n\t\t\t\twindow.cancelAnimationFrame(this._animationFrameId);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Provides functionality for displaying toolbar Arrow box on top or on bottom of the toolbar\n\t\t * depending on the point of user interaction with the editor.\n\t\t * Returns the list of arrow box classes associated to the current element's state. It relies\n\t\t * on the getInteractionPoint method to calculate the selection direction.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method getArrowBoxClasses\n\t\t * @return {String} A string with the arrow box CSS classes.\n\t\t */\n\t\tgetArrowBoxClasses() {\n\t\t\tlet arrowBoxClasses = 'ae-arrow-box';\n\n\t\t\tif (\n\t\t\t\tthis.getInteractionPoint().direction ===\n\t\t\t\tCKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t\t) {\n\t\t\t\tarrowBoxClasses += ' ae-arrow-box-top';\n\t\t\t} else {\n\t\t\t\tarrowBoxClasses += ' ae-arrow-box-bottom';\n\t\t\t}\n\n\t\t\treturn arrowBoxClasses;\n\t\t}\n\n\t\t/**\n\t\t * Returns an object which contains the position of the element in page coordinates,\n\t\t * restricted to fit to given viewport.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method getConstrainedPosition\n\t\t * @param {Object} attrs The following properties, provided as numbers:\n\t\t * - height\n\t\t * - left\n\t\t * - top\n\t\t * - width\n\t\t * @param {Object} viewPaneSize Optional. If not provided, the current viewport will be used. Should contain at least these properties:\n\t\t * - width\n\t\t * @return {Object} An object with `x` and `y` properties, which represent the constrained position of the\n\t\t * element.\n\t\t */\n\t\tgetConstrainedPosition(attrs, viewPaneSize) {\n\t\t\tviewPaneSize =\n\t\t\t\tviewPaneSize ||\n\t\t\t\tnew CKEDITOR.dom.window(window).getViewPaneSize();\n\n\t\t\tlet x = attrs.left;\n\t\t\tlet y = attrs.top;\n\n\t\t\tif (attrs.left + attrs.width > viewPaneSize.width) {\n\t\t\t\tx -= attrs.left + attrs.width - viewPaneSize.width;\n\t\t\t}\n\n\t\t\tif (y < 0) {\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Returns the position, in page coordinates, according to which a toolbar should appear.\n\t\t * Depending on the direction of the selection, the wdiget may appear above of or on bottom of the selection.\n\t\t *\n\t\t * It depends on the props editorEvent to analyze the following user-interaction parameters:\n\t\t * - {Object} selectionData The data about the selection in the editor as returned from\n\t\t * {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t\t * - {Number} pos Contains the coordinates of the position, considered as most appropriate.\n\t\t * This may be the point where the user released the mouse, or just the beginning or the end of\n\t\t * the selection.\n\t\t *\n\t\t * @instance\n\t\t * @method getInteractionPoint\n\t\t * @return {Object} An Object which contains the following properties:\n\t\t * direction, x, y, where x and y are in page coordinates and direction can be one of these:\n\t\t * CKEDITOR.SELECTION_BOTTOM_TO_TOP or CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t */\n\t\tgetInteractionPoint() {\n\t\t\tconst eventPayload = this.props.editorEvent\n\t\t\t\t? this.props.editorEvent.data\n\t\t\t\t: null;\n\n\t\t\tif (!eventPayload) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selectionData = eventPayload.selectionData;\n\n\t\t\tconst nativeEvent = eventPayload.nativeEvent;\n\n\t\t\tconst pos = {\n\t\t\t\tx: eventPayload.nativeEvent.pageX,\n\t\t\t\ty: selectionData.region.top,\n\t\t\t};\n\n\t\t\tlet direction = selectionData.region.direction;\n\n\t\t\tconst endRect = selectionData.region.endRect;\n\n\t\t\tconst startRect = selectionData.region.startRect;\n\n\t\t\tif (endRect && startRect && startRect.top === endRect.top) {\n\t\t\t\tdirection = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\t\t\t}\n\n\t\t\tlet x;\n\t\t\tlet y;\n\n\t\t\t// If we have the point where user released the mouse, show Toolbar at this point\n\t\t\t// otherwise show it on the middle of the selection.\n\n\t\t\tif (pos.x && pos.y) {\n\t\t\t\tx = this._getXPoint(selectionData, pos.x);\n\n\t\t\t\tif (direction === CKEDITOR.SELECTION_BOTTOM_TO_TOP) {\n\t\t\t\t\ty = Math.min(pos.y, selectionData.region.top);\n\t\t\t\t} else {\n\t\t\t\t\ty = Math.max(\n\t\t\t\t\t\tpos.y,\n\t\t\t\t\t\tthis._getYPoint(selectionData, nativeEvent)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tx = selectionData.region.left + selectionData.region.width / 2;\n\n\t\t\t\tif (direction === CKEDITOR.SELECTION_TOP_TO_BOTTOM) {\n\t\t\t\t\ty = this._getYPoint(selectionData, nativeEvent);\n\t\t\t\t} else {\n\t\t\t\t\ty = selectionData.region.top;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdirection,\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Returns the position of the toolbar.\n\t\t *\n\t\t * @instance\n\t\t * @method _getXPoint\n\t\t * @param {Object} eventX The X coordinate received from the native event (mouseup).\n\t\t * @param {Object} selectionData The data about the selection in the editor as returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t\t * @protected\n\t\t * @return {Number} The calculated X point in page coordinates.\n\t\t */\n\t\t_getXPoint(selectionData, eventX) {\n\t\t\tconst region = selectionData.region;\n\n\t\t\tconst left = region.startRect ? region.startRect.left : region.left;\n\t\t\tconst right = region.endRect ? region.endRect.right : region.right;\n\n\t\t\tlet x;\n\n\t\t\tif (left < eventX && right > eventX) {\n\t\t\t\tx = eventX;\n\t\t\t} else {\n\t\t\t\tconst leftDist = Math.abs(left - eventX);\n\t\t\t\tconst rightDist = Math.abs(right - eventX);\n\n\t\t\t\tif (leftDist < rightDist) {\n\t\t\t\t\t// user raised the mouse on left on the selection\n\t\t\t\t\tx = left;\n\t\t\t\t} else {\n\t\t\t\t\tx = right;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn x;\n\t\t}\n\n\t\t/**\n\t\t * Returns the position of the toolbar.\n\t\t *\n\t\t * @instance\n\t\t * @method _getYPoint\n\t\t * @param {Object} nativeEvent The data about event is fired\n\t\t * @param {Object} selectionData The data about the selection in the editor as returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t\t * @protected\n\t\t * @return {Number} The calculated Y point in page coordinates.\n\t\t */\n\t\t_getYPoint(selectionData, nativeEvent) {\n\t\t\tlet y = 0;\n\n\t\t\tif (selectionData && nativeEvent) {\n\t\t\t\tconst elementTarget = new CKEDITOR.dom.element(\n\t\t\t\t\tnativeEvent.target\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\telementTarget.$ &&\n\t\t\t\t\telementTarget.getStyle('overflow') === 'auto'\n\t\t\t\t) {\n\t\t\t\t\ty =\n\t\t\t\t\t\tnativeEvent.target.offsetTop +\n\t\t\t\t\t\tnativeEvent.target.offsetHeight;\n\t\t\t\t} else {\n\t\t\t\t\ty = selectionData.region.bottom;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn y;\n\t\t}\n\n\t\t/**\n\t\t * Returns the position of the toolbar taking in consideration the\n\t\t * {{#crossLink \"ToolbarButtons/gutter:attribute\"}}{{/crossLink}} attribute.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @protected\n\t\t * @method  getWidgetXYPoint\n\t\t * @param {Number} left The left offset in page coordinates where Toolbar should be shown.\n\t\t * @param {Number} top The top offset in page coordinates where Toolbar should be shown.\n\t\t * @param {Number} direction The direction of the selection. May be one of the following:\n\t\t * CKEDITOR.SELECTION_BOTTOM_TO_TOP or CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t * @return {Array} An Array with left and top offsets in page coordinates.\n\t\t */\n\t\tgetWidgetXYPoint(left, top, direction) {\n\t\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\t\tconst gutter = this.props.gutter;\n\n\t\t\tif (\n\t\t\t\tdirection === CKEDITOR.SELECTION_TOP_TO_BOTTOM ||\n\t\t\t\tdirection === CKEDITOR.SELECTION_BOTTOM_TO_TOP\n\t\t\t) {\n\t\t\t\tleft = left - gutter.left - domNode.offsetWidth / 2;\n\n\t\t\t\ttop =\n\t\t\t\t\tdirection === CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t\t\t\t\t? top + gutter.top\n\t\t\t\t\t\t: top - domNode.offsetHeight - gutter.top;\n\t\t\t} else if (\n\t\t\t\tdirection === CKEDITOR.SELECTION_LEFT_TO_RIGHT ||\n\t\t\t\tdirection === CKEDITOR.SELECTION_RIGHT_TO_LEFT\n\t\t\t) {\n\t\t\t\tleft =\n\t\t\t\t\tdirection === CKEDITOR.SELECTION_LEFT_TO_RIGHT\n\t\t\t\t\t\t? left + gutter.left + domNode.offsetHeight / 2\n\t\t\t\t\t\t: left - (3 * domNode.offsetHeight) / 2 - gutter.left;\n\n\t\t\t\ttop = top - gutter.top - domNode.offsetHeight / 2;\n\t\t\t}\n\n\t\t\tif (left < 0) {\n\t\t\t\tleft = 0;\n\t\t\t}\n\n\t\t\tif (top < 0) {\n\t\t\t\ttop = 0;\n\t\t\t}\n\n\t\t\treturn [left, top];\n\t\t}\n\n\t\t/**\n\t\t * Returns true if the toolbar is visible, false otherwise\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method isVisible\n\t\t * @return {Boolean} True if the toolbar is visible, false otherwise\n\t\t */\n\t\tisVisible() {\n\t\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\t\tif (domNode) {\n\t\t\t\tconst domElement = new CKEDITOR.dom.element(domNode);\n\n\t\t\t\treturn domElement.hasClass('alloy-editor-visible');\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t * Moves a toolbar from a starting point to a destination point.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method moveToPoint\n\t\t * @param  {Object} startPoint The starting point for the movement.\n\t\t * @param  {Object} endPoint The destination point for the movement.\n\t\t */\n\t\tmoveToPoint(startPoint, endPoint) {\n\t\t\tconst domElement = new CKEDITOR.dom.element(\n\t\t\t\tReactDOM.findDOMNode(this)\n\t\t\t);\n\n\t\t\tdomElement.setStyles({\n\t\t\t\tleft: startPoint[0] + 'px',\n\t\t\t\ttop: startPoint[1] + 'px',\n\t\t\t\topacity: 0,\n\t\t\t\tpointerEvents: 'none',\n\t\t\t});\n\n\t\t\tdomElement.removeClass('alloy-editor-invisible');\n\n\t\t\tthis._animationFrameId = window.requestAnimationFrame(() => {\n\t\t\t\tdomElement.addClass('ae-toolbar-transition');\n\t\t\t\tdomElement.addClass('alloy-editor-visible');\n\t\t\t\tdomElement.setStyles({\n\t\t\t\t\tleft: endPoint[0] + 'px',\n\t\t\t\t\ttop: endPoint[1] + 'px',\n\t\t\t\t\topacity: 1,\n\t\t\t\t});\n\n\t\t\t\t// 150ms to match transition-duration for .ae-toolbar-transition:\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tdomElement.setStyles({\n\t\t\t\t\t\tpointerEvents: '',\n\t\t\t\t\t});\n\t\t\t\t}, 150);\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Shows the toolbar with the default animation transition.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method show\n\t\t */\n\t\tshow() {\n\t\t\tconst domNode = ReactDOM.findDOMNode(this);\n\t\t\tconst uiNode = this.context.editor.get('uiNode');\n\n\t\t\tconst scrollTop = uiNode ? uiNode.scrollTop : 0;\n\n\t\t\tif (!this.isVisible() && domNode) {\n\t\t\t\tconst interactionPoint = this.getInteractionPoint();\n\n\t\t\t\tif (interactionPoint) {\n\t\t\t\t\tconst domElement = new CKEDITOR.dom.element(domNode);\n\n\t\t\t\t\tlet finalX;\n\t\t\t\t\tlet finalY;\n\t\t\t\t\tlet initialX;\n\t\t\t\t\tlet initialY;\n\n\t\t\t\t\tfinalX = initialX = parseFloat(domElement.getStyle('left'));\n\t\t\t\t\tfinalY = initialY = parseFloat(domElement.getStyle('top'));\n\n\t\t\t\t\tif (this.props.constrainToViewport) {\n\t\t\t\t\t\tconst res = this.getConstrainedPosition({\n\t\t\t\t\t\t\theight: parseFloat(domNode.offsetHeight),\n\t\t\t\t\t\t\tleft: finalX,\n\t\t\t\t\t\t\ttop: finalY,\n\t\t\t\t\t\t\twidth: parseFloat(domNode.offsetWidth),\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tfinalX = res.x;\n\t\t\t\t\t\tfinalY = res.y;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tinteractionPoint.direction ===\n\t\t\t\t\t\tCKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t\t\t\t) {\n\t\t\t\t\t\tinitialY =\n\t\t\t\t\t\t\tthis.props.selectionData.region.bottom + scrollTop;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinitialY =\n\t\t\t\t\t\t\tthis.props.selectionData.region.top + scrollTop;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.moveToPoint([initialX, initialY], [finalX, finalY]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Updates the toolbar position based on the current interaction point.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method updatePosition\n\t\t */\n\t\tupdatePosition() {\n\t\t\tconst interactionPoint = this.getInteractionPoint();\n\n\t\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\t\tif (interactionPoint && domNode) {\n\t\t\t\tconst uiNode =\n\t\t\t\t\tthis.context.editor.get('uiNode') || document.body;\n\t\t\t\tconst uiNodeStyle = getComputedStyle(uiNode);\n\t\t\t\tconst uiNodeMarginLeft = parseInt(\n\t\t\t\t\tuiNodeStyle.getPropertyValue('margin-left'),\n\t\t\t\t\t10\n\t\t\t\t);\n\t\t\t\tconst uiNodeMarginRight = parseInt(\n\t\t\t\t\tuiNodeStyle.getPropertyValue('margin-right'),\n\t\t\t\t\t10\n\t\t\t\t);\n\t\t\t\tconst totalWidth =\n\t\t\t\t\tuiNodeMarginLeft +\n\t\t\t\t\tdocument.body.clientWidth +\n\t\t\t\t\tuiNodeMarginRight;\n\n\t\t\t\tconst scrollTop =\n\t\t\t\t\tuiNode.tagName !== 'BODY' ? uiNode.scrollTop : 0;\n\n\t\t\t\tconst xy = this.getWidgetXYPoint(\n\t\t\t\t\tinteractionPoint.x,\n\t\t\t\t\tinteractionPoint.y,\n\t\t\t\t\tinteractionPoint.direction\n\t\t\t\t);\n\t\t\t\txy[1] += scrollTop;\n\n\t\t\t\tif (xy[0] < 0) {\n\t\t\t\t\txy[0] = 0;\n\t\t\t\t}\n\t\t\t\tif (xy[0] > totalWidth - domNode.offsetWidth) {\n\t\t\t\t\txy[0] = totalWidth - domNode.offsetWidth;\n\t\t\t\t}\n\n\t\t\t\tnew CKEDITOR.dom.element(domNode).setStyles({\n\t\t\t\t\tleft: xy[0] + 'px',\n\t\t\t\t\ttop: xy[1] + 'px',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Analyses the current selection and returns the buttons or button groups to be rendered.\n\t\t *\n\t\t * @instance\n\t\t * @method getToolbarButtonGroups\n\t\t * @param {Array} buttons The buttons could be shown, prior to the state filtering.\n\t\t * @param {Object} additionalProps Additional props that should be passed down to the buttons.\n\t\t * @return {Array} An Array which contains the buttons or button groups that should be rendered.\n\t\t */\n\t\tgetToolbarButtonGroups(buttons, additionalProps) {\n\t\t\tif (Lang.isFunction(buttons)) {\n\t\t\t\tbuttons = buttons.call(this) || [];\n\t\t\t}\n\n\t\t\treturn buttons.reduce((list, button) => {\n\t\t\t\tif (Array.isArray(button)) {\n\t\t\t\t\tlist.push(this.getToolbarButtons(button, additionalProps));\n\t\t\t\t\treturn list;\n\t\t\t\t} else {\n\t\t\t\t\treturn this.getToolbarButtons(buttons, additionalProps);\n\t\t\t\t}\n\t\t\t}, []);\n\t\t}\n\n\t\t/**\n\t\t * Analyzes the current selection and the buttons exclusive mode value to figure out which\n\t\t * buttons should be present in a given state.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method getToolbarButtons\n\t\t * @param {Array} buttons The buttons could be shown, prior to the state filtering.\n\t\t * @param {Object} additionalProps Additional props that should be passed down to the buttons.\n\t\t * @return {Array} An Array which contains the buttons that should be rendered.\n\t\t */\n\t\tgetToolbarButtons(buttons, additionalProps) {\n\t\t\tconst buttonProps = {};\n\n\t\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\t\t\tconst buttonCfg = nativeEditor.config.buttonCfg || {};\n\n\t\t\tif (Lang.isFunction(buttons)) {\n\t\t\t\tbuttons = buttons.call(this) || [];\n\t\t\t}\n\n\t\t\tconst toolbarButtons = this.filterExclusive(\n\t\t\t\tbuttons\n\t\t\t\t\t.filter(button => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tbutton &&\n\t\t\t\t\t\t\t(AlloyEditor.Buttons[button] ||\n\t\t\t\t\t\t\t\tAlloyEditor.Buttons[button.name])\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t.map(button => {\n\t\t\t\t\t\tif (Lang.isString(button)) {\n\t\t\t\t\t\t\tbuttonProps[button] = buttonCfg[button];\n\t\t\t\t\t\t\tbutton = AlloyEditor.Buttons[button];\n\t\t\t\t\t\t} else if (Lang.isString(button.name)) {\n\t\t\t\t\t\t\tbuttonProps[\n\t\t\t\t\t\t\t\tAlloyEditor.Buttons[button.name].key\n\t\t\t\t\t\t\t] = CKEDITOR.tools.merge(\n\t\t\t\t\t\t\t\tbuttonCfg[button],\n\t\t\t\t\t\t\t\tbutton.cfg\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbutton = AlloyEditor.Buttons[button.name];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn button;\n\t\t\t\t\t})\n\t\t\t).map(function(button, index) {\n\t\t\t\tlet props = this.mergeExclusiveProps(\n\t\t\t\t\t{\n\t\t\t\t\t\teditor: this.context.editor,\n\t\t\t\t\t\tkey:\n\t\t\t\t\t\t\tbutton.key !== 'separator'\n\t\t\t\t\t\t\t\t? button.key\n\t\t\t\t\t\t\t\t: `${button.key}-${index}`,\n\t\t\t\t\t\ttabKey: button.key,\n\t\t\t\t\t\ttabIndex:\n\t\t\t\t\t\t\tthis.props.trigger &&\n\t\t\t\t\t\t\tthis.props.trigger.props.tabKey === button.key\n\t\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t\t: -1,\n\t\t\t\t\t\ttrigger: this.props.trigger,\n\t\t\t\t\t},\n\t\t\t\t\tbutton.key\n\t\t\t\t);\n\n\t\t\t\tprops = this.mergeDropdownProps(props, button.key);\n\n\t\t\t\tif (additionalProps) {\n\t\t\t\t\tprops = CKEDITOR.tools.merge(props, additionalProps);\n\t\t\t\t}\n\n\t\t\t\tprops = CKEDITOR.tools.merge(props, buttonProps[button.key]);\n\n\t\t\t\treturn React.createElement(button, props);\n\t\t\t}, this);\n\n\t\t\treturn toolbarButtons;\n\t\t}\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from './lang';\n\n/**\n * Sets the prototype, constructor and superclass properties to support an inheritance strategy\n * that can chain constructors and methods. Static members will not be inherited.\n *\n * @memberof OOP\n * @method extend\n * @param {Function} receiver The class which will extend another class.\n * @param {Function} supplier The class which will provide the properties the child class.\n * @param {Object} protoProps Prototype properties to add/override.\n * @param {Object} staticProps Static properties to add/overwrite.\n * @return {Function} The extended class.\n * @static\n */\nconst extend = function(receiver, supplier, protoProps, staticProps) {\n\tif (!supplier || !receiver) {\n\t\tthrow new Error('extend failed, verify dependencies');\n\t}\n\n\tconst supplierProto = supplier.prototype;\n\n\tconst receiverProto = Object.create(supplierProto);\n\treceiver.prototype = receiverProto;\n\n\treceiverProto.constructor = receiver;\n\treceiver.superclass = supplierProto;\n\n\t// assign constructor property\n\tif (\n\t\tsupplier !== Object &&\n\t\tsupplierProto.constructor === Object.prototype.constructor\n\t) {\n\t\tsupplierProto.constructor = supplier;\n\t}\n\n\t// add prototype overrides\n\tif (protoProps) {\n\t\tLang.mix(receiverProto, protoProps);\n\t}\n\n\t// add object overrides\n\tif (staticProps) {\n\t\tLang.mix(receiver, staticProps);\n\t}\n\n\treturn receiver;\n};\n\nexport default extend;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nconst _isRangeAtElementEnd = function(range, element) {\n\t// Finding if a range is at the end of an element is somewhat tricky\n\t// due to how CKEditor handles ranges. It might depend on whether a\n\t// source node inside the element is selected or not. For now, we\n\t// need to cover the following cases:\n\t//\n\t// - The text length of the element is the same as the endOffset of\n\t//   the range.\n\t// - Both start and end containers match the element and the start\n\t//   and end offsets are 1.\n\n\treturn (\n\t\telement.getText().length === range.endOffset ||\n\t\t(element.equals(range.startContainer) &&\n\t\t\telement.equals(range.endContainer) &&\n\t\t\trange.startOffset === range.endOffset &&\n\t\t\trange.endOffset === 1)\n\t);\n};\n\nconst embedSelectionTest = function(payload) {\n\tconst selectionData = payload.data.selectionData;\n\n\treturn !!(\n\t\tselectionData.element &&\n\t\tselectionData.element.getAttribute('data-widget') === 'ae_embed'\n\t);\n};\n\nconst embedUrlSelectionTest = function(payload) {\n\tconst selectionData = payload.data.selectionData;\n\n\treturn !!(\n\t\tselectionData.element &&\n\t\tselectionData.element.getAttribute('data-widget') === 'embedurl'\n\t);\n};\n\nconst headingTextSelectionTest = function(payload) {\n\tconst headings = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n\tconst nativeEditor = payload.editor.get('nativeEditor');\n\tconst selectionData = payload.data.selectionData;\n\tconst selectionEmpty = nativeEditor.isSelectionEmpty();\n\n\treturn !!(\n\t\t!selectionData.element &&\n\t\tselectionData.region &&\n\t\t!selectionEmpty &&\n\t\t!nativeEditor\n\t\t\t.getSelection()\n\t\t\t.getCommonAncestor()\n\t\t\t.isReadOnly() &&\n\t\tnativeEditor.elementPath().contains(headings)\n\t);\n};\n\nconst linkSelectionTest = function(payload) {\n\tconst nativeEditor = payload.editor.get('nativeEditor');\n\tconst range = nativeEditor.getSelection().getRanges()[0];\n\tconst selectionData = payload.data.selectionData;\n\n\tconst element = new CKEDITOR.Link(nativeEditor).getFromSelection();\n\tconst isSelectionEmpty = nativeEditor.isSelectionEmpty();\n\tconst elementIsNotImage = selectionData.element\n\t\t? selectionData.element.getName() !== 'img'\n\t\t: true;\n\n\treturn !!(\n\t\tisSelectionEmpty &&\n\t\telementIsNotImage &&\n\t\telement &&\n\t\telement.getText().length !== range.endOffset &&\n\t\telement &&\n\t\t!element.isReadOnly() &&\n\t\t!_isRangeAtElementEnd(range, element)\n\t);\n};\n\nconst imageSelectionTest = function(payload) {\n\tconst selectionData = payload.data.selectionData;\n\tconst element = selectionData.element;\n\tconst hasImage = !!element && !!element.findOne('img');\n\tconst isImage = !!element && element.getName() === 'img';\n\n\treturn !!(element && (hasImage || isImage));\n};\n\nconst textSelectionTest = function(payload) {\n\tconst nativeEditor = payload.editor.get('nativeEditor');\n\n\tconst selectionEmpty = nativeEditor.isSelectionEmpty();\n\n\tconst selectionData = payload.data.selectionData;\n\n\treturn !!(\n\t\t!selectionData.element &&\n\t\tselectionData.region &&\n\t\t!selectionEmpty &&\n\t\t!nativeEditor\n\t\t\t.getSelection()\n\t\t\t.getCommonAncestor()\n\t\t\t.isReadOnly()\n\t);\n};\n\nconst tableSelectionTest = function(payload) {\n\tconst nativeEditor = payload.editor.get('nativeEditor');\n\n\tconst table = new CKEDITOR.Table(nativeEditor);\n\tconst element = table.getFromSelection();\n\n\treturn !!(element && table.isEditable(element));\n};\n\nconst SelectionTest = {\n\tembed: embedSelectionTest,\n\tembedUrl: embedUrlSelectionTest,\n\theader: headingTextSelectionTest,\n\timage: imageSelectionTest,\n\tlink: linkSelectionTest,\n\ttable: tableSelectionTest,\n\ttext: textSelectionTest,\n};\n\nexport default SelectionTest;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\n/**\n * The ButtonsStylesListHeader class provides the header of an list of style items.\n *\n * @class ButtonsStylesListHeader\n */\nclass ButtonsStylesListHeader extends React.Component {\n\tstatic key = 'buttonStylesListHeader';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonsStylesListHeader\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.styles && this.props.styles.length) {\n\t\t\treturn <span className=\"ae-list-header\">{this.props.name}</span>;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nexport default ButtonsStylesListHeader;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\n\n/**\n * The ButtonStylesListItemRemove class provides functionality for previewing a style definition\n * inside a list and applying it to the current editor selection.\n *\n * @class ButtonStylesListItemRemove\n */\nclass ButtonStylesListItemRemove extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesListItemRemove\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tremoveBlocks: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'pre'],\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default buttonStylesListItemRemove\n\t * @memberof ButtonStylesListItemRemove\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'buttonStylesListItemRemove';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesListItemRemove\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<li role=\"option\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={this._removeStyles}\n\t\t\t\t\ttabIndex={this.props.tabIndex}>\n\t\t\t\t\t{AlloyEditor.Strings.normal}\n\t\t\t\t</button>\n\t\t\t</li>\n\t\t);\n\t}\n\n\t/**\n\t * Removes all inline styles and configured block elements applied to the current selection.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesListItemRemove\n\t * @method _removeStyles\n\t * @protected\n\t */\n\t_removeStyles = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\teditor.execCommand('removeFormat');\n\n\t\tthis.props.removeBlocks.forEach(blockItem => {\n\t\t\tconst blockStyle = new CKEDITOR.style({element: blockItem});\n\n\t\t\teditor.removeStyle(blockStyle);\n\t\t});\n\n\t\teditor.fire('actionPerformed', this);\n\t};\n}\n\nexport default ButtonStylesListItemRemove;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonActionStyle from '../base/button-action-style';\nimport ButtonStyle from '../base/button-style';\n\n/**\n * The ButtonStylesListItem class provides functionality for previewing a style definition\n * inside a list and applying it to the current editor selection.\n *\n * @class ButtonStylesListItem\n * @uses ButtonActionStyle\n * @uses ButtonStyle\n */\nclass ButtonStylesListItem extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default buttonStylesListItem\n\t * @memberof ButtonStylesListItem\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'buttonStylesListItem';\n\n\t/**\n\t * Lifecycle. Invoked once, both on the client and server, immediately before the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesListItem\n\t * @method componentWillMount\n\t */\n\tcomponentWillMount() {\n\t\t// Styles with wildcard element (*) generate an empty tag in their preview < class=\"custom-class\" />.\n\t\t// We default to element span and remove the margins to obtain a more consistent set of previews.\n\t\tlet styleCfg = {\n\t\t\telement: 'span',\n\t\t\tstyles: {\n\t\t\t\tmargin: 0,\n\t\t\t},\n\t\t};\n\n\t\tstyleCfg = CKEDITOR.tools.merge(styleCfg, this.props.style);\n\n\t\tthis._preview = new CKEDITOR.style(styleCfg).buildPreview(\n\t\t\tthis.props.name\n\t\t);\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesListItem\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\t// We need to use dangerouselySetInnterHTML since we're not in control of the style\n\t\t// preview that is generated by CKEditor.\n\t\tconst className =\n\t\t\tthis.props.name === this.props.activeStyle\n\t\t\t\t? 'ae-toolbar-element active'\n\t\t\t\t: 'ae-toolbar-element';\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\tclassName={className}\n\t\t\t\tdangerouslySetInnerHTML={{__html: this._preview}}\n\t\t\t\tonClick={this._onClick}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t/>\n\t\t);\n\t}\n\n\t/**\n\t * Applies the item style to the editor selection.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesListItem\n\t * @method _onClick\n\t * @protected\n\t */\n\t_onClick = () => {\n\t\tif (this.props.styleFn) {\n\t\t\tthis.props.styleFn();\n\t\t} else {\n\t\t\t// Typically, we want the style to be the only one applied to the current selection, so\n\t\t\t// we execute the 'removeFormat' command first. Note that block styles won't be cleaned.\n\t\t\t// However, this is consistent with other editors implementations of this feature.\n\t\t\tthis.context.editor.get('nativeEditor').execCommand('removeFormat');\n\n\t\t\tthis.applyStyle();\n\t\t}\n\t};\n}\n\nexport default ButtonActionStyle(ButtonStyle(ButtonStylesListItem));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\n\n/**\n * The ButtonCameraImage class takes photo from camera and inserts it to the content.\n *\n * @class ButtonCameraImage\n */\nclass ButtonCameraImage extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t */\n\tstatic defaultProps = {\n\t\tvideoWidth: 320,\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default cameraImage\n\t * @memberof ButtonCameraImage\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'cameraImage';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis._buttonTakePhotoRef = React.createRef();\n\t\tthis._canvasContainerRef = React.createRef();\n\t\tthis._videoContainerRef = React.createRef();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * Focuses the take photo button.\n\t *\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tthis._buttonTakePhotoRef.current.focus();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n\t *\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t * @method componentWillUnmount\n\t */\n\tcomponentWillUnmount() {\n\t\tif (this._stream) {\n\t\t\tif (this._stream.stop) {\n\t\t\t\tthis._stream.stop();\n\t\t\t} else if (this._stream.getVideoTracks) {\n\t\t\t\tthis._stream.getVideoTracks().forEach(track => {\n\t\t\t\t\ttrack.stop();\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._stream = null;\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst getUserMedia =\n\t\t\tnavigator.getUserMedia ||\n\t\t\tnavigator.webkitGetUserMedia ||\n\t\t\tnavigator.mozGetUserMedia ||\n\t\t\tnavigator.msGetUserMedia;\n\n\t\tgetUserMedia.call(\n\t\t\tnavigator,\n\t\t\t{\n\t\t\t\tvideo: true,\n\t\t\t\taudio: false,\n\t\t\t},\n\t\t\tthis._handleStreamSuccess,\n\t\t\tthis._handleStreamError\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"ae-camera\">\n\t\t\t\t<video ref={this._videoContainerRef}>\n\t\t\t\t\tVideo stream not available.\n\t\t\t\t</video>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"ae-camera-shoot\"\n\t\t\t\t\tonClick={this.takePhoto}\n\t\t\t\t\tref={this._buttonTakePhotoRef}>\n\t\t\t\t\tTake photo\n\t\t\t\t</button>\n\t\t\t\t<canvas\n\t\t\t\t\tclassName=\"ae-camera-canvas\"\n\t\t\t\t\tref={this._canvasContainerRef}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Takes photo from the video stream and inserts in into editor's content.\n\t *\n\t * @fires ButtonCameraImage#imageCameraAdd\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t * @method takePhoto\n\t */\n\ttakePhoto = () => {\n\t\tconst videoEl = this._videoContainerRef.current;\n\t\tconst canvasEl = this._canvasContainerRef.current;\n\n\t\tconst context = canvasEl.getContext('2d');\n\n\t\tconst height = this._videoHeight;\n\t\tconst width = this.props.videoWidth;\n\n\t\tif (width && height) {\n\t\t\tcanvasEl.width = width;\n\t\t\tcanvasEl.height = height;\n\n\t\t\tcontext.drawImage(videoEl, 0, 0, width, height);\n\n\t\t\tconst imgURL = canvasEl.toDataURL('image/png');\n\n\t\t\tconst el = CKEDITOR.dom.element.createFromHtml(\n\t\t\t\t'<img src=\"' + imgURL + '\">'\n\t\t\t);\n\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\teditor.insertElement(el);\n\n\t\t\tthis.props.cancelExclusive();\n\n\t\t\teditor.fire('actionPerformed', this);\n\n\t\t\teditor.fire('imageCameraAdd', el);\n\t\t}\n\t};\n\n\t/**\n\t * Displays error message in case of video stream capturing failure.\n\t *\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t * @method _handleStreamError\n\t * @param {Event} error The fired event in case of error.\n\t * @protected\n\t */\n\t_handleStreamError = error => {\n\t\twindow.alert('An error occurred! ' + error);\n\t};\n\n\t/**\n\t * Starts streaming video in the video element and sets width/height to the video\n\t * and canvas elements.\n\t *\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t * @method _handleStreamSuccess\n\t * @param {Object} stream The video stream\n\t * @protected\n\t */\n\t_handleStreamSuccess = stream => {\n\t\tconst videoEl = this._videoContainerRef.current;\n\t\tconst canvasEl = this._canvasContainerRef.current;\n\n\t\tvideoEl.addEventListener(\n\t\t\t'canplay',\n\t\t\t() => {\n\t\t\t\tlet height =\n\t\t\t\t\tvideoEl.videoHeight /\n\t\t\t\t\t(videoEl.videoWidth / this.props.videoWidth);\n\n\t\t\t\tif (isNaN(height)) {\n\t\t\t\t\theight = this.props.videoWidth / (4 / 3);\n\t\t\t\t}\n\n\t\t\t\tvideoEl.setAttribute('width', this.props.videoWidth);\n\t\t\t\tvideoEl.setAttribute('height', height);\n\t\t\t\tcanvasEl.setAttribute('width', this.props.videoWidth);\n\t\t\t\tcanvasEl.setAttribute('height', height);\n\n\t\t\t\tthis._videoHeight = height;\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\n\t\tthis._stream = stream;\n\n\t\tif (navigator.mozGetUserMedia) {\n\t\t\tvideoEl.mozSrcObject = stream;\n\t\t} else {\n\t\t\tvideoEl.srcObject = stream;\n\t\t}\n\n\t\tvideoEl.play();\n\n\t\tthis._buttonTakePhotoRef.current.disabled = false;\n\t};\n\n\t/**\n\t * Fired when an image is being taken from the camera and added as an element to the editor.\n\t *\n\t * @event ButtonCameraImage#imageCameraAdd\n\t * @memberof ButtonCameraImage\n\t * @param {CKEDITOR.dom.element} el The created img element in editor.\n\t */\n}\n\nexport default ButtonCameraImage;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\n\n/**\n * The ButtonCommandListItem class is a UI class that renders a ButtonCommand that can be used inside\n * a list as an item, with a string representation of its behaviour.\n *\n * @class ButtonCommandListItem\n * @uses ButtonCommand\n */\nclass ButtonCommandListItem extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default buttonCommandListItem\n\t * @memberof ButtonCommandListItem\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'buttonCommandListItem';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandListItem\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={this.props.description}\n\t\t\t\tclassName={this._getClassName()}\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}>\n\t\t\t\t{this.props.description}\n\t\t\t</button>\n\t\t);\n\t}\n\n\t/**\n\t * Returns the class name of Widget.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandListItem\n\t * @method _getClassName\n\t * @protected\n\t * @return {String} The class name of the Widget.\n\t */\n\t_getClassName() {\n\t\tconst className = 'ae-container ae-toolbar-element';\n\n\t\treturn className;\n\t}\n}\n\nexport default ButtonCommand(ButtonCommandListItem);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\n\nconst KEY_ENTER = 13;\nconst KEY_ESC = 27;\n\n/**\n * The ButtonEmbedEdit class provides functionality for creating and editing an embed link in a document.\n * Provides UI for creating and editing an embed link.\n *\n * @class ButtonEmbedEdit\n */\nclass ButtonEmbedEdit extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default embedEdit\n\t * @memberof ButtonEmbedEdit\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'embedEdit';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.linkInput = React.createRef();\n\t\tthis.state = this.getInitialState();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * Focuses on the link input to immediately allow editing. This should only happen if the component\n\t * is rendered in exclusive mode to prevent aggressive focus stealing.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tif (this.props.renderExclusive || this.props.manualSelection) {\n\t\t\t// We need to wait for the next rendering cycle before focusing to avoid undesired\n\t\t\t// scrolls on the page\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(this._focusLinkInput);\n\t\t\t} else {\n\t\t\t\tsetTimeout(this._focusLinkInput, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Invoked when a component is receiving new props.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method componentWillReceiveProps\n\t */\n\tcomponentWillReceiveProps() {\n\t\tthis.setState(this.getInitialState());\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once before the component is mounted.\n\t * The return value will be used as the initial value of this.state.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method getInitialState\n\t */\n\tgetInitialState() {\n\t\t// Can't access context from constructor, so get editor from props.\n\t\tconst editor = this.props.context.editor.get('nativeEditor');\n\t\tlet embed;\n\n\t\tconst selection = editor.getSelection();\n\n\t\tif (selection) {\n\t\t\tconst selectedElement = selection.getSelectedElement();\n\n\t\t\tif (selectedElement) {\n\t\t\t\tembed = selectedElement.findOne('[data-widget=\"ae_embed\"]');\n\t\t\t}\n\t\t}\n\n\t\tconst href = embed ? embed.getAttribute('data-ae-embed-url') : '';\n\n\t\treturn {\n\t\t\telement: embed,\n\t\t\tinitialLink: {\n\t\t\t\thref,\n\t\t\t},\n\t\t\tlinkHref: href,\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst clearLinkStyle = {\n\t\t\topacity: this.state.linkHref ? 1 : 0,\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-edit-link\">\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.deleteEmbed}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdata-type=\"button-embed-remove\"\n\t\t\t\t\tdisabled={!this.state.element}\n\t\t\t\t\tonClick={this._removeEmbed}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.deleteEmbed}>\n\t\t\t\t\t<ButtonIcon className=\"ae-icon-svg-trash\" symbol=\"trash\" />\n\t\t\t\t</button>\n\t\t\t\t<div className=\"ae-container-input xxl\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"ae-input\"\n\t\t\t\t\t\tonChange={this._handleLinkHrefChange}\n\t\t\t\t\t\tonKeyDown={this._handleKeyDown}\n\t\t\t\t\t\tplaceholder={AlloyEditor.Strings.editLink}\n\t\t\t\t\t\tref={this.linkInput}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={this.state.linkHref}\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\taria-label={AlloyEditor.Strings.clearInput}\n\t\t\t\t\t\tclassName=\"ae-button ae-button-clear\"\n\t\t\t\t\t\tonClick={this._clearLink}\n\t\t\t\t\t\tstyle={clearLinkStyle}\n\t\t\t\t\t\ttitle={AlloyEditor.Strings.clear}>\n\t\t\t\t\t\t<ButtonIcon symbol=\"times-clear\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.confirm}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdisabled={!this._isValidState()}\n\t\t\t\t\tonClick={this._embedLink}\n\t\t\t\t\ttitle={AlloyEditor.Strings.confirm}>\n\t\t\t\t\t<ButtonIcon className=\"ae-icon-svg-check\" symbol=\"check\" />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Clears the link input. This only changes the component internal state, but does not\n\t * affect the link element of the editor. Only the _removeLink and _updateLink methods\n\t * are translated to the editor element.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _clearLink\n\t * @protected\n\t */\n\t_clearLink = () => {\n\t\tthis.setState({\n\t\t\tlinkHref: '',\n\t\t});\n\t};\n\n\t/**\n\t * Triggers the embedUrl command to transform the link into an embed media object\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _embedLink\n\t * @protected\n\t */\n\t_embedLink = () => {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\tnativeEditor.execCommand('embedUrl', {\n\t\t\turl: this.state.linkHref,\n\t\t});\n\n\t\t// We need to cancelExclusive with the bound parameters in case the button is used\n\t\t// inside another in exclusive mode (such is the case of the link button)\n\t\tthis.props.cancelExclusive();\n\t};\n\n\t/**\n\t * Focuses the user cursor on the widget's input.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _focusLinkInput\n\t * @protected\n\t */\n\t_focusLinkInput = () => {\n\t\tthis.linkInput.current.focus();\n\t};\n\n\t/**\n\t * Monitors key interaction inside the input element to respond to the keys:\n\t * - Enter: Creates/updates the link.\n\t * - Escape: Discards the changes.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _handleKeyDown\n\t * @param {SyntheticEvent} event The keyboard event.\n\t * @protected\n\t */\n\t_handleKeyDown = event => {\n\t\tif (event.keyCode === KEY_ENTER || event.keyCode === KEY_ESC) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tif (event.keyCode === KEY_ENTER) {\n\t\t\tthis._embedLink();\n\t\t} else if (event.keyCode === KEY_ESC) {\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t// We need to cancelExclusive with the bound parameters in case the button is used\n\t\t\t// inside another in exclusive mode (such is the case of the link button)\n\t\t\tthis.props.cancelExclusive();\n\n\t\t\teditor.fire('actionPerformed', this);\n\t\t}\n\t};\n\n\t/**\n\t * Updates the component state when the link input changes on user interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _handleLinkHrefChange\n\t * @param {SyntheticEvent} event The change event.\n\t * @protected\n\t */\n\t_handleLinkHrefChange = event => {\n\t\tthis.setState({\n\t\t\tlinkHref: event.target.value,\n\t\t});\n\t};\n\n\t/**\n\t * Verifies that the current link state is valid so the user can save the link. A valid state\n\t * means that we have a non-empty href that's different from the original one.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _isValidState\n\t * @protected\n\t * @return {Boolean} True if the state is valid, false otherwise\n\t */\n\t_isValidState() {\n\t\tconst validState =\n\t\t\tthis.state.linkHref &&\n\t\t\tthis.state.linkHref !== this.state.initialLink.href;\n\n\t\treturn validState;\n\t}\n\n\t/**\n\t * Removes the embed in the editor element.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _removeEmbed\n\t * @protected\n\t */\n\t_removeEmbed = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst embedWrapper = this.state.element.getAscendant(element => {\n\t\t\treturn element.hasClass('cke_widget_wrapper');\n\t\t});\n\n\t\tembedWrapper.remove();\n\n\t\teditor.fire('actionPerformed', this);\n\t};\n}\n\nexport default EditorContext.toProps(ButtonEmbedEdit);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\n\nconst KEY_ENTER = 13;\nconst KEY_ESC = 27;\n\n/**\n * The ButtonEmbedVideoEdit class provides functionality for changing text color in a document.\n *\n * @uses ButtonIcon\n *\n * @class ButtonEmbedVideoEdit\n */\nclass ButtonEmbedVideoEdit extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'embedVideoEdit';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = this.getInitialState();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * Focuses on the link input to immediately allow editing. This should only happen if the component\n\t * is rendered in exclusive mode to prevent aggressive focus stealing.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tif (this.props.renderExclusive || this.props.manualSelection) {\n\t\t\t// We need to wait for the next rendering cycle before focusing to avoid undesired\n\t\t\t// scrolls on the page\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(this._focusVideoUrlInput);\n\t\t\t} else {\n\t\t\t\tsetTimeout(this._focusVideoUrlInput, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Invoked when a component is receiving new props.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method componentWillReceiveProps\n\t */\n\tcomponentWillReceiveProps() {\n\t\tconst newState = this.getInitialState();\n\n\t\tthis.setState({\n\t\t\tall: undefined,\n\t\t\tkeys: undefined,\n\t\t\tnew: newState,\n\t\t\told: undefined,\n\t\t});\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once before the component is mounted.\n\t * The return value will be used as the initial value of this.state.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method getInitialState\n\t */\n\tgetInitialState() {\n\t\t// Can't access context from constructor, so get editor from props.\n\t\tconst editor = this.props.context.editor.get('nativeEditor');\n\t\tlet element;\n\n\t\tconst selection = editor.getSelection();\n\n\t\tif (selection) {\n\t\t\tconst selectedElement = selection.getSelectedElement();\n\n\t\t\tif (selectedElement) {\n\t\t\t\telement = selectedElement.findOne('[data-widget=\"videoembed\"]');\n\t\t\t}\n\t\t}\n\n\t\tconst videoURL = element\n\t\t\t? element.getAttribute('data-embed-video-url')\n\t\t\t: '';\n\n\t\treturn {\n\t\t\telement,\n\t\t\tinitialEmbed: {\n\t\t\t\tvideoURL,\n\t\t\t},\n\t\t\tvideoURL,\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst inputPlaceholder = AlloyEditor.Strings.pasteVideoLink;\n\n\t\tconst clearVideoURLStyle = {\n\t\t\topacity: this.state.videoURL ? 1 : 0,\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-embed-video-edit\">\n\t\t\t\t<div className=\"ae-container-input xxl\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"ae-input\"\n\t\t\t\t\t\tonChange={this._handleVideoURLChange}\n\t\t\t\t\t\tonKeyDown={this._handleKeyDown}\n\t\t\t\t\t\tplaceholder={inputPlaceholder}\n\t\t\t\t\t\tref=\"linkInput\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={this.state.videoURL}\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\taria-label={AlloyEditor.Strings.clearInput}\n\t\t\t\t\t\tclassName=\"ae-button ae-icon-remove\"\n\t\t\t\t\t\tonClick={this._clearLink}\n\t\t\t\t\t\tstyle={clearVideoURLStyle}\n\t\t\t\t\t\ttitle={AlloyEditor.Strings.clear}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.confirm}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdisabled={!this._isValidState()}\n\t\t\t\t\tonClick={this._embedVideoURL}\n\t\t\t\t\ttitle={AlloyEditor.Strings.confirm}>\n\t\t\t\t\t<ButtonIcon symbol=\"check\" />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Clears the link input. This only changes the component internal state, but does not\n\t * affect the link element of the editor. Only the _removeLink and _updateLink methods\n\t * are translated to the editor element.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method _clearLink\n\t * @protected\n\t */\n\t_clearLink() {\n\t\tthis.setState({\n\t\t\tvideoURL: '',\n\t\t});\n\t}\n\n\t/**\n\t * Triggers the embedVideoUrl command to transform the link into an embed media object\n\t *\n\t * @instance\n\t * @memberof EmbedVideoEdit\n\t * @method _embedVideoURL\n\t * @protected\n\t */\n\t_embedVideoURL = () => {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\tnativeEditor.execCommand('embedUrl', {\n\t\t\ttype: 'video',\n\t\t\turl: this.state.videoURL,\n\t\t});\n\n\t\t// We need to cancelExclusive with the bound parameters in case the button is used\n\t\t// inside another in exclusive mode (such is the case of the link button)\n\t\tthis.props.cancelExclusive();\n\t};\n\n\t/**\n\t * Focuses the user cursor on the widget's input.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method _focusVideoUrlInput\n\t * @protected\n\t */\n\t_focusVideoUrlInput = () => {\n\t\tReactDOM.findDOMNode(this.refs.linkInput).focus();\n\t};\n\n\t/**\n\t * Monitors key interaction inside the input element to respond to the keys:\n\t * - Enter: Creates/updates the link.\n\t * - Escape: Discards the changes.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method _handleKeyDown\n\t * @param {SyntheticEvent} event The keyboard event.\n\t * @protected\n\t */\n\t_handleKeyDown = event => {\n\t\tif (event.keyCode === KEY_ENTER || event.keyCode === KEY_ESC) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tif (event.keyCode === KEY_ENTER) {\n\t\t\tthis._embedVideoURL();\n\t\t} else if (event.keyCode === KEY_ESC) {\n\t\t\tthis.props.cancelExclusive();\n\t\t}\n\t};\n\n\t/**\n\t * Updates the component state when the link input changes on user interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method _handleVideoURLChange\n\t * @param {SyntheticEvent} event The change event.\n\t * @protected\n\t */\n\t_handleVideoURLChange = event => {\n\t\tthis.setState({\n\t\t\tvideoURL: event.target.value,\n\t\t});\n\t};\n\n\t/**\n\t * Verifies that the current link state is valid so the user can save the link. A valid state\n\t * means that we have a non-empty videoURL that's different from the original one.\n\t *\n\t * @instance\n\t * @memberof EmbedVideoEdit\n\t * @method _isValidState\n\t * @protected\n\t * @return {Boolean} True if the state is valid, false otherwise\n\t */\n\t_isValidState() {\n\t\tconst validState =\n\t\t\tthis.state.videoURL &&\n\t\t\tthis.state.videoURL !== this.state.initialEmbed.videoURL;\n\n\t\treturn validState;\n\t}\n}\n\nexport default EditorContext.toProps(ButtonEmbedVideoEdit);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport WidgetFocusManager from '../base/widget-focus-manager';\nimport ButtonDropdown from './button-dropdown.jsx';\n\n/**\n * The ButtonLinkAutocompleteList class provides functionality for showing a list of\n * items that can be selected for the link.\n *\n * @class ButtonLinkAutocompleteList\n * @uses WidgetFocusManager\n */\nclass ButtonLinkAutocompleteList extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcircular: false,\n\t\tdata: [],\n\t\tdelay: 100,\n\t\tdescendants: '.ae-toolbar-element',\n\t\tkeys: {\n\t\t\tdismiss: [27],\n\t\t\tdismissNext: [39],\n\t\t\tdismissPrev: [37],\n\t\t\tnext: [40],\n\t\t\tprev: [38],\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default buttonLinkAutocompleteList\n\t * @memberof ButtonLinkAutocompleteList\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'buttonLinkAutocompleteList';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\titems: [],\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Invoked when a component is receiving new props.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method componentWillReceiveProps\n\t */\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (!nextProps.term || nextProps.term !== this.props.term) {\n\t\t\tclearTimeout(this._timeout);\n\n\t\t\tif (nextProps.term) {\n\t\t\t\tthis._timeout = setTimeout(this._updateItems, this.props.delay);\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\titems: [],\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (nextProps.autocompleteSelected) {\n\t\t\tsetTimeout(this.focus, 0);\n\t\t\tthis.props.setAutocompleteState({\n\t\t\t\tselected: false,\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method componentWillUnmount\n\t */\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this._timeout);\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the list.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (!this.props.expanded || !this.state.items.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<ButtonDropdown>\n\t\t\t\t{this._renderAutocompleteItems(this.state.items)}\n\t\t\t</ButtonDropdown>\n\t\t);\n\t}\n\n\t/**\n\t * Lifecycle. Invoked before rendering when new props or state are being received.\n\t * This method is not called for the initial render or when forceUpdate is used.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method  shouldComponentUpdate\n\t * @return {Boolean} Returns false when the transition to the new props and state will not\n\t * require a component update.\n\t */\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\treturn (\n\t\t\tnextProps.expanded !== this.props.expanded ||\n\t\t\tnextProps.term !== this.props.term ||\n\t\t\tnextState.items !== this.state.items\n\t\t);\n\t}\n\n\t/**\n\t * Renders a set of list items for the provided items\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method _renderAutocompleteItems\n\t * @param {Array} items List of autocomplete items to render\n\t * @protected\n\t * @return {Array} Rendered list item instances\n\t */\n\t_renderAutocompleteItems(items) {\n\t\titems = items || [];\n\n\t\tconst handleLinkAutocompleteClick = this.props\n\t\t\t.handleLinkAutocompleteClick;\n\n\t\treturn items.map(item => {\n\t\t\tconst className =\n\t\t\t\tthis.props.term === item.url\n\t\t\t\t\t? 'ae-toolbar-element active'\n\t\t\t\t\t: 'ae-toolbar-element';\n\n\t\t\treturn (\n\t\t\t\t<li key={item.url} role=\"option\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\tdata-value={item.url}\n\t\t\t\t\t\tonClick={handleLinkAutocompleteClick}>\n\t\t\t\t\t\t{item.title}\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the data according to {this.props.term} and calls setState() with the returned data\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method _updateItems\n\t * @protected\n\t */\n\t_updateItems() {\n\t\tif (!this.props.term) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst promise = Promise.resolve(this.props.data(this.props.term));\n\n\t\tpromise.then(items => {\n\t\t\tif (items.length && !this.props.expanded) {\n\t\t\t\tthis.props.toggleDropdown();\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\titems,\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport default WidgetFocusManager(ButtonLinkAutocompleteList);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonLinkEdit from './button-link-edit.jsx';\n\n/**\n * The LinkEditBrowse class provides functionality for creating and editing a link in a document,\n * and also allows to link to an existing file in DM.\n * Provides UI for creating, editing and removing a link.\n *\n * @class ButtonLinkEditBrowse\n */\nclass ButtonLinkEditBrowse extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'linkEditBrowse';\n\n\t/**\n\t *\n\t * @inheritDoc\n\t */\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tconst link = new CKEDITOR.Link(\n\t\t\t// Can't access context from constructor, so get editor from props.\n\t\t\tthis.props.context.editor.get('nativeEditor')\n\t\t).getFromSelection();\n\n\t\tconst href = link ? link.getAttribute('href') : '';\n\n\t\tthis.linkEditButtonRef = React.createRef();\n\n\t\tthis.state = {\n\t\t\telement: link,\n\t\t\tlinkHref: href,\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"ae-container-link-edit-browse\">\n\t\t\t\t<ButtonLinkEdit ref={this.linkEditButtonRef} {...this.props} />\n\t\t\t\t<button\n\t\t\t\t\taria-label=\"Browse\"\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tonClick={this._browseClick}\n\t\t\t\t\ttitle=\"browse\">\n\t\t\t\t\t<ButtonIcon symbol=\"folder\" />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Opens an item selector dialog.\n\t *\n\t * @protected\n\t * @method _browseClick\n\t */\n\t_browseClick = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\tconst url = editor.config.documentBrowseLinkUrl;\n\t\tconst browseLinkCallback = editor.config.documentBrowseLinkCallback;\n\t\tconst linkTarget = this.linkEditButtonRef.current\n\t\t\t? this.linkEditButtonRef.current.state.linkTarget\n\t\t\t: '';\n\n\t\tconst changeLinkCallback = selectedItem => {\n\t\t\tthis._updateLink(\n\t\t\t\tselectedItem.value,\n\t\t\t\tlinkTarget,\n\t\t\t\tselectedItem.title\n\t\t\t);\n\t\t};\n\n\t\tif (Lang.isFunction(browseLinkCallback)) {\n\t\t\tbrowseLinkCallback.apply(null, [editor, url, changeLinkCallback]);\n\t\t}\n\t};\n\n\t/**\n\t * Updates the link in the editor element. If the element didn't exist previously, it will\n\t * create a new <a> element with the href specified in the link input.\n\t *\n\t * @protected\n\t * @method _updateLink\n\t * @param {String} linkHref href value for the link\n\t * @param {String} linkTarget target value for the link\n\t * @param {String} linkTitle if the link is a title that points to a wiki page (only works for creole)\n\t */\n\t_updateLink = (linkHref, linkTarget, linkTitle) => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\tconst linkUtils = new CKEDITOR.Link(editor, {appendProtocol: false});\n\t\tconst linkAttrs = {\n\t\t\ttarget: linkTarget,\n\t\t};\n\t\tconst modifySelection = {advance: true};\n\n\t\tif (linkHref) {\n\t\t\tif (editor.plugins && editor.plugins.creole && !linkTitle) {\n\t\t\t\tlinkHref = location.origin + linkHref;\n\t\t\t}\n\n\t\t\tif (this.state.element) {\n\t\t\t\tlinkAttrs.href = linkHref;\n\n\t\t\t\tlinkUtils.update(\n\t\t\t\t\tlinkAttrs,\n\t\t\t\t\tthis.state.element,\n\t\t\t\t\tmodifySelection\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tlinkUtils.create(linkHref, linkAttrs, modifySelection);\n\t\t\t}\n\n\t\t\teditor.fire('actionPerformed', this);\n\t\t}\n\t};\n}\n\nexport default EditorContext.toProps(ButtonLinkEditBrowse);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonTargetList from './button-target-list.jsx';\n\n/**\n * The ButtonLinkTargetEdit class provides functionality for changing the target of a link\n * in the document.\n *\n * @class ButtonLinkTargetEdit\n */\nclass ButtonLinkTargetEdit extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default linkTargetEdit\n\t * @memberof ButtonLinkTargetEdit\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'linkTargetEdit';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkTargetEdit\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst handleLinkTargetChange = this.props.handleLinkTargetChange;\n\t\tconst allowedLinkTargets = this.props.allowedTargets;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"ae-container-dropdown ae-container-dropdown-medium ae-container-edit-link-target ae-has-dropdown\"\n\t\t\t\ttabIndex=\"0\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label={this.props.selectedTarget}\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={this.props.selectedTarget}>\n\t\t\t\t\t<div className=\"ae-container\">\n\t\t\t\t\t\t<span className=\"ae-container-dropdown-selected-item\">\n\t\t\t\t\t\t\t{this.props.selectedTarget}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<ButtonIcon symbol=\"caret-bottom\" />\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t\t{this.props.expanded && (\n\t\t\t\t\t<ButtonTargetList\n\t\t\t\t\t\tallowedLinkTargets={allowedLinkTargets}\n\t\t\t\t\t\thandleLinkTargetChange={handleLinkTargetChange}\n\t\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t\t\tselectedTarget={this.props.selectedTarget}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Lifecycle. Invoked before rendering when new props or state are being received.\n\t * This method is not called for the initial render or when forceUpdate is used.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkTargetEdit\n\t * @method  shouldComponentUpdate\n\t * @return {Boolean} Returns false when the transition to the new props and state will not\n\t * require a component update.\n\t */\n\tshouldComponentUpdate(nextProps) {\n\t\treturn (\n\t\t\tnextProps.expanded !== this.props.expanded ||\n\t\t\tnextProps.selectedTarget !== this.props.selectedTarget\n\t\t);\n\t}\n}\n\nexport default ButtonLinkTargetEdit;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport WidgetFocusManager from '../base/widget-focus-manager';\nimport ButtonDropdown from './button-dropdown.jsx';\n\n/**\n * The ButtonTargetList class provides functionality for changing the target of a link\n * in the document.\n *\n * @class ButtonTargetList\n * @uses WidgetFocusManager\n */\nclass ButtonTargetList extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonTargetList\n\t * @method getDefaultProps\n\t */\n\tstatic defaultProps = {\n\t\tcircular: true,\n\t\tdescendants: '.ae-toolbar-element',\n\t\tkeys: {\n\t\t\tdismiss: [27],\n\t\t\tdismissNext: [39],\n\t\t\tdismissPrev: [37],\n\t\t\tnext: [40],\n\t\t\tprev: [38],\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default linkTargetEdit\n\t * @memberof ButtonTargetList\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'targetList';\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ButtonTargetList\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tReactDOM.findDOMNode(this).focus();\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTargetList\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst listTargets = this._renderListTargets();\n\n\t\treturn <ButtonDropdown {...this.props}>{listTargets}</ButtonDropdown>;\n\t}\n\n\t/**\n\t * Returns the the allowed link target items.\n\t *\n\t * @instance\n\t * @memberof ButtonTargetList\n\t * @method _getAllowedTargetItems\n\t * @protected\n\t * @return {Array} The allowed target items.\n\t */\n\t_getAllowedTargetItems() {\n\t\treturn (\n\t\t\tthis.props.allowedLinkTargets || [\n\t\t\t\t{\n\t\t\t\t\tlabel: AlloyEditor.Strings.linkTargetDefault,\n\t\t\t\t\tvalue: '',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: AlloyEditor.Strings.linkTargetSelf,\n\t\t\t\t\tvalue: '_self',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: AlloyEditor.Strings.linkTargetBlank,\n\t\t\t\t\tvalue: '_blank',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: AlloyEditor.Strings.linkTargetParent,\n\t\t\t\t\tvalue: '_parent',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: AlloyEditor.Strings.linkTargetTop,\n\t\t\t\t\tvalue: '_top',\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n\n\t/**\n\t * Renders the allowed link target items.\n\t *\n\t * @instance\n\t * @memberof ButtonTargetList\n\t * @method _renderListTargets\n\t * @protected\n\t * @return {Object} Returns the rendered link items\n\t */\n\t_renderListTargets() {\n\t\tlet targets = this._getAllowedTargetItems();\n\n\t\tconst handleLinkTargetChange = this.props.handleLinkTargetChange;\n\n\t\ttargets = targets.map(target => {\n\t\t\tconst className =\n\t\t\t\tthis.props.selectedTarget === target.value\n\t\t\t\t\t? 'ae-toolbar-element active'\n\t\t\t\t\t: 'ae-toolbar-element';\n\n\t\t\treturn (\n\t\t\t\t<li key={target.value} role=\"option\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\tdata-value={target.value}\n\t\t\t\t\t\tonClick={handleLinkTargetChange}>\n\t\t\t\t\t\t{target.label}\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\treturn targets;\n\t}\n}\n\nexport default WidgetFocusManager(ButtonTargetList);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonKeystroke from '../base/button-keystroke';\nimport ButtonProps from '../base/button-props';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonLinkEdit from './button-link-edit.jsx';\n\n/**\n * The ButtonLink class provides functionality for creating and editing a link in a document. ButtonLink\n * renders in two different modes:\n *\n * - Normal: Just a button that allows to switch to the edition mode\n * - Exclusive: The ButtonLinkEdit UI with all the link edition controls.\n *\n * @class ButtonLink\n * @uses ButtonProps\n * @uses ButtonKeystroke\n * @uses ButtonStateClasses\n */\nclass ButtonLink extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonLink\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tkeystroke: {\n\t\t\tfn: '_requestExclusive',\n\t\t\tkeys: CKEDITOR.CTRL + 76 /* L*/,\n\t\t\tname: 'link',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default link\n\t * @memberof ButtonLink\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'link';\n\n\t/**\n\t * Checks if the current selection is contained within a link.\n\t *\n\t * @instance\n\t * @memberof ButtonLink\n\t * @method isActive\n\t * @return {Boolean} True if the selection is inside a link, false otherwise.\n\t */\n\tisActive() {\n\t\treturn (\n\t\t\tnew CKEDITOR.Link(\n\t\t\t\tthis.context.editor.get('nativeEditor')\n\t\t\t).getFromSelection() !== null\n\t\t);\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonLink\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\tif (this.props.renderExclusive) {\n\t\t\tconst props = this.mergeButtonCfgProps();\n\n\t\t\treturn <ButtonLinkEdit {...props} />;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.link}\n\t\t\t\t\tclassName={cssClass}\n\t\t\t\t\tdata-type=\"button-link\"\n\t\t\t\t\tonClick={this._requestExclusive}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.link}>\n\t\t\t\t\t<ButtonIcon symbol=\"link\" />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Requests the link button to be rendered in exclusive mode to allow the creation of a link.\n\t *\n\t * @instance\n\t * @memberof ButtonLink\n\t * @method _requestExclusive\n\t * @protected\n\t */\n\t_requestExclusive = () => {\n\t\tthis.props.requestExclusive(ButtonLink.key);\n\t};\n}\n\nexport default ButtonProps(ButtonKeystroke(ButtonStateClasses(ButtonLink)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\n\nconst KEY_ENTER = 13;\nconst KEY_ESC = 27;\n\nconst INPUT_NAMES = {\n\tCOLS: 'cols',\n\tROWS: 'rows',\n};\n\nconst MINIMUM_GRID_VALUE = 1;\n\n/**\n * The ButtonTableEdit class provides functionality for creating and editing a table in a document.\n * Provides UI for creating a table.\n *\n * @class ButtonTableEdit\n */\nclass ButtonTableEdit extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method getDefaultProps\n\t */\n\tstatic defaultProps = {\n\t\ttableAttributes: {\n\t\t\tborder: 1,\n\t\t\tcellPadding: 0,\n\t\t\tcellSpacing: 0,\n\t\t\tstyle: 'table-layout: fixed; width: 100%;',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default tableEdit\n\t * @memberof ButtonTableEdit\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'tableEdit';\n\n\t/**\n\t * Lifecycle. Invoked once before the component is mounted.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method getInitialState\n\t */\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.rowsRef = React.createRef();\n\t\tthis.colsRef = React.createRef();\n\t\tthis.state = {\n\t\t\tcols: 3,\n\t\t\trows: 3,\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client (not on the server),\n\t * immediately after the initial rendering occurs.\n\t *\n\t * Focuses on the link input to immediately allow editing.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tthis.rowsRef.current.focus();\n\t}\n\n\t/**\n\t * Creates a table.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method _createTable\n\t * @protected\n\t */\n\t_createTable = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\tconst tableUtils = new CKEDITOR.Table(editor);\n\t\tconst {cols, rows} = this.state;\n\n\t\ttableUtils.create({\n\t\t\tattrs: this.props.tableAttributes,\n\t\t\tcols: Math.max(MINIMUM_GRID_VALUE, cols),\n\t\t\trows: Math.max(MINIMUM_GRID_VALUE, rows),\n\t\t});\n\n\t\tthis.props.cancelExclusive();\n\n\t\teditor.fire('actionPerformed', this);\n\t};\n\n\t/**\n\t * Handles a change in input value. Sets the provided value from the user back to the input.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method _handleChange\n\t * @param {String} inputName The name of the input which value should be updated.\n\t * @param {SyntheticEvent} event The provided event.\n\t * @protected\n\t */\n\t_handleChange = (inputName, event) => {\n\t\tthis.setState({\n\t\t\t[inputName]: event.target.value,\n\t\t});\n\t};\n\n\t/**\n\t * Monitors key interaction inside the input element to respond to the keys:\n\t * - Enter: Creates the table.\n\t * - Escape: Discards the changes.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method _handleKeyDown\n\t * @param {SyntheticEvent} event The keyboard event.\n\t * @protected\n\t */\n\t_handleKeyDown = event => {\n\t\tif (event.keyCode === KEY_ENTER || event.keyCode === KEY_ESC) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tif (event.keyCode === KEY_ENTER) {\n\t\t\tthis._createTable();\n\t\t} else if (event.keyCode === KEY_ESC) {\n\t\t\tthis.props.cancelExclusive();\n\t\t}\n\t};\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst time = Date.now();\n\t\tconst rowsId = time + INPUT_NAMES.ROWS;\n\t\tconst colsId = time + INPUT_NAMES.COLS;\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-edit-table\">\n\t\t\t\t<label htmlFor={rowsId}>{AlloyEditor.Strings.rows}</label>\n\t\t\t\t<div className=\"ae-container-input small\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"ae-input\"\n\t\t\t\t\t\tid={rowsId}\n\t\t\t\t\t\tmin={MINIMUM_GRID_VALUE}\n\t\t\t\t\t\tonChange={this._handleChange.bind(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tINPUT_NAMES.ROWS\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tonKeyDown={this._handleKeyDown}\n\t\t\t\t\t\tplaceholder=\"Rows\"\n\t\t\t\t\t\tref={this.rowsRef}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tvalue={this.state.rows}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<label htmlFor={colsId}>{AlloyEditor.Strings.columns}</label>\n\t\t\t\t<div className=\"ae-container-input small\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"ae-input\"\n\t\t\t\t\t\tid={colsId}\n\t\t\t\t\t\tmin={MINIMUM_GRID_VALUE}\n\t\t\t\t\t\tonChange={this._handleChange.bind(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tINPUT_NAMES.COLS\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tonKeyDown={this._handleKeyDown}\n\t\t\t\t\t\tplaceholder=\"Colums\"\n\t\t\t\t\t\tref={this.colsRef}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tvalue={this.state.cols}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<button\n\t\t\t\t\taria-label=\"Confirm\"\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tonClick={this._createTable}>\n\t\t\t\t\t<ButtonIcon symbol=\"check\" />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ButtonTableEdit;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\n\n/**\n * Provides functionality for calculating the point of interaction of the user with the Editor.\n *\n * @class WidgetInteractionPoint\n */\nconst WidgetInteractionPoint = {\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * The provided editor event.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetInteractionPoint\n\t\t * @property {SyntheticEvent} editorEvent\n\t\t */\n\t\teditorEvent: PropTypes.object,\n\t},\n\n\t/**\n\t * Returns the position, in page coordinates, according to which a widget should appear.\n\t * Depending on the direction of the selection, the wdiget may appear above of or on bottom of the selection.\n\t *\n\t * It depends on the props editorEvent to analyze the following user-interaction parameters:\n\t * - {Object} selectionData The data about the selection in the editor as returned from\n\t * {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t * - {Number} pos Contains the coordinates of the position, considered as most appropriate.\n\t * This may be the point where the user released the mouse, or just the beginning or the end of\n\t * the selection.\n\t *\n\t * @instance\n\t * @memberof WidgetInteractionPoint\n\t * @method getInteractionPoint\n\t * @return {Object} An Object which contains the following properties:\n\t * direction, x, y, where x and y are in page coordinates and direction can be one of these:\n\t * CKEDITOR.SELECTION_BOTTOM_TO_TOP or CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t */\n\tgetInteractionPoint() {\n\t\tconst eventPayload = this.props.editorEvent\n\t\t\t? this.props.editorEvent.data\n\t\t\t: null;\n\n\t\tif (!eventPayload) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selectionData = eventPayload.selectionData;\n\n\t\tconst nativeEvent = eventPayload.nativeEvent;\n\n\t\tconst pos = {\n\t\t\tx: eventPayload.nativeEvent.pageX,\n\t\t\ty: selectionData.region.top,\n\t\t};\n\n\t\tlet direction = selectionData.region.direction;\n\n\t\tconst endRect = selectionData.region.endRect;\n\n\t\tconst startRect = selectionData.region.startRect;\n\n\t\tif (endRect && startRect && startRect.top === endRect.top) {\n\t\t\tdirection = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\t\t}\n\n\t\tlet x;\n\t\tlet y;\n\n\t\t// If we have the point where user released the mouse, show Toolbar at this point\n\t\t// otherwise show it on the middle of the selection.\n\n\t\tif (pos.x && pos.y) {\n\t\t\tx = this._getXPoint(selectionData, pos.x);\n\n\t\t\tif (direction === CKEDITOR.SELECTION_BOTTOM_TO_TOP) {\n\t\t\t\ty = Math.min(pos.y, selectionData.region.top);\n\t\t\t} else {\n\t\t\t\ty = Math.max(\n\t\t\t\t\tpos.y,\n\t\t\t\t\tthis._getYPoint(selectionData, nativeEvent)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tx = selectionData.region.left + selectionData.region.width / 2;\n\n\t\t\tif (direction === CKEDITOR.SELECTION_TOP_TO_BOTTOM) {\n\t\t\t\ty = this._getYPoint(selectionData, nativeEvent);\n\t\t\t} else {\n\t\t\t\ty = selectionData.region.top;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdirection,\n\t\t\tx,\n\t\t\ty,\n\t\t};\n\t},\n\n\t/**\n\t * Returns the position of the Widget.\n\t *\n\t * @instance\n\t * @memberof WidgetInteractionPoint\n\t * @method _getXPoint\n\t * @param {Object} eventX The X coordinate received from the native event (mouseup).\n\t * @param {Object} selectionData The data about the selection in the editor as returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t * @protected\n\t * @return {Number} The calculated X point in page coordinates.\n\t */\n\t_getXPoint(selectionData, eventX) {\n\t\tconst region = selectionData.region;\n\n\t\tconst left = region.startRect ? region.startRect.left : region.left;\n\t\tconst right = region.endRect ? region.endRect.right : region.right;\n\n\t\tlet x;\n\n\t\tif (left < eventX && right > eventX) {\n\t\t\tx = eventX;\n\t\t} else {\n\t\t\tconst leftDist = Math.abs(left - eventX);\n\t\t\tconst rightDist = Math.abs(right - eventX);\n\n\t\t\tif (leftDist < rightDist) {\n\t\t\t\t// user raised the mouse on left on the selection\n\t\t\t\tx = left;\n\t\t\t} else {\n\t\t\t\tx = right;\n\t\t\t}\n\t\t}\n\n\t\treturn x;\n\t},\n\n\t/**\n\t * Returns the position of the Widget.\n\t *\n\t * @instance\n\t * @memberof WidgetInteractionPoint\n\t * @method _getYPoint\n\t * @param {Object} nativeEvent The data about event is fired\n\t * @param {Object} selectionData The data about the selection in the editor as returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t * @protected\n\t * @return {Number} The calculated Y point in page coordinates.\n\t */\n\t_getYPoint(selectionData, nativeEvent) {\n\t\tlet y = 0;\n\n\t\tif (selectionData && nativeEvent) {\n\t\t\tconst elementTarget = new CKEDITOR.dom.element(nativeEvent.target);\n\n\t\t\tif (\n\t\t\t\telementTarget.$ &&\n\t\t\t\telementTarget.getStyle('overflow') === 'auto'\n\t\t\t) {\n\t\t\t\ty =\n\t\t\t\t\tnativeEvent.target.offsetTop +\n\t\t\t\t\tnativeEvent.target.offsetHeight;\n\t\t\t} else {\n\t\t\t\ty = selectionData.region.bottom;\n\t\t\t}\n\t\t}\n\n\t\treturn y;\n\t},\n};\n\nexport default WidgetInteractionPoint;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from './lang';\n\n/**\n * Attribute implementation.\n *\n * @class Attribute\n * @constructor\n */\nfunction Attribute(config) {\n\tthis.__config__ = config || {};\n\tthis.__ATTRS__ = {};\n}\n\nAttribute.prototype = {\n\tconstructor: Attribute,\n\n\t/**\n\t * Retrieves the value of an attribute.\n\t *\n\t * @instance\n\t * @memberof Attribute\n\t * @method get\n\t * @param {String} attr The attribute which value should be retrieved.\n\t * @return {Any} The value of the attribute.\n\t */\n\tget(attr) {\n\t\tconst currentAttr = this.constructor.ATTRS[attr];\n\n\t\tif (!currentAttr) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._isInitialized(attr)) {\n\t\t\tthis._init(attr);\n\t\t}\n\n\t\tlet curValue = this.__ATTRS__[attr];\n\n\t\tif (currentAttr.getter) {\n\t\t\tcurValue = this._callStringOrFunction(currentAttr.getter, curValue);\n\t\t}\n\n\t\treturn curValue;\n\t},\n\n\t/**\n\t * Sets the value of an attribute.\n\t *\n\t * @instance\n\t * @memberof Attribute\n\t * @method set\n\t * @param {String} attr The attribute which value should be set.\n\t * @param {Any} value The value which should be set to the attribute.\n\t */\n\tset(attr, value) {\n\t\tconst currentAttr = this.constructor.ATTRS[attr];\n\n\t\tif (!currentAttr) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._isInitialized(attr)) {\n\t\t\tthis._init(attr);\n\t\t}\n\n\t\tif (currentAttr.readOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (currentAttr.writeOnce && this._isInitialized(attr)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tcurrentAttr.validator &&\n\t\t\t!this._callStringOrFunction(currentAttr.validator, value)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (currentAttr.setter) {\n\t\t\tvalue = this._callStringOrFunction(currentAttr.setter, value);\n\t\t}\n\n\t\tthis.__ATTRS__[attr] = value;\n\t},\n\n\t/**\n\t * Calls the provided param as function with the supplied arguments.\n\t * If param provided as string, a corresponding function in this object will\n\t * be called. If provided param is a function, it will be directly called.\n\t *\n\t * @instance\n\t * @memberof Attribute\n\t * @method _callStringOrFunction\n\t * @param  {Any|Array} args The arguments which will be provided to the called function\n\t * @param  {String|Function} stringOrFunction The function which should be called\n\t * @protected\n\t * @return {Any} The returned value from the called function\n\t */\n\t_callStringOrFunction(stringOrFunction, args) {\n\t\tlet result = null;\n\n\t\tif (!Lang.isArray(args)) {\n\t\t\targs = [args];\n\t\t}\n\n\t\tif (\n\t\t\tLang.isString(stringOrFunction) &&\n\t\t\tLang.isFunction(this[stringOrFunction])\n\t\t) {\n\t\t\tresult = this[stringOrFunction](...args);\n\t\t} else if (Lang.isFunction(stringOrFunction)) {\n\t\t\tresult = stringOrFunction.apply(this, args);\n\t\t}\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Initializes an attribute. Sets its default value depending on the flags of the\n\t * attribute and the passed configuration object to the constructor.\n\t *\n\t * @instance\n\t * @memberof Attribute\n\t * @method _init\n\t * @param {String} attr The name of the attribute which have to be initialized.\n\t * @protected\n\t */\n\t_init(attr) {\n\t\tlet value;\n\n\t\tconst currentAttr = this.constructor.ATTRS[attr];\n\n\t\t// Check if there is default value or passed one via configuration object\n\t\tconst hasDefaultValue = Object.prototype.hasOwnProperty.call(\n\t\t\tcurrentAttr,\n\t\t\t'value'\n\t\t);\n\t\tconst hasPassedValueViaConfig = Object.prototype.hasOwnProperty.call(\n\t\t\tthis.__config__,\n\t\t\tattr\n\t\t);\n\n\t\t// If there is valueFn, set the value to be the result of invocation of this function\n\t\tif (currentAttr.valueFn) {\n\t\t\tvalue = this._callStringOrFunction(currentAttr.valueFn, value);\n\n\t\t\tthis.__ATTRS__[attr] = value;\n\t\t}\n\t\t// else if the attribute has readOnly flag, set the default value from the attribute,\n\t\t// regardless if there is value or not\n\t\telse if (currentAttr.readOnly) {\n\t\t\tvalue = currentAttr.value;\n\t\t}\n\t\t// else if the attribute has writeOnce value, set it from the passed configuration or from the\n\t\t// default value, in this order. Otherwise, return miserable.\n\t\telse if (currentAttr.writeOnce) {\n\t\t\tif (hasPassedValueViaConfig) {\n\t\t\t\tvalue = this.__config__[attr];\n\t\t\t} else if (hasDefaultValue) {\n\t\t\t\tvalue = currentAttr.value;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// These two cases below are easy - set the value to be from the passed config or\n\t\t// from the default value, in this order.\n\t\telse if (hasPassedValueViaConfig) {\n\t\t\tvalue = this.__config__[attr];\n\t\t} else if (hasDefaultValue) {\n\t\t\tvalue = currentAttr.value;\n\t\t}\n\n\t\t// If there is validator, and user passed config object - check the returned value.\n\t\t// If it is false, then set as initial value the default one.\n\t\t// However, if there is no default value, just return.\n\t\tif (\n\t\t\tcurrentAttr.validator &&\n\t\t\thasPassedValueViaConfig &&\n\t\t\t!this._callStringOrFunction(currentAttr.validator, value)\n\t\t) {\n\t\t\tif (hasDefaultValue) {\n\t\t\t\tvalue = currentAttr.value;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If there is setter and user passed config object - pass the value thought the setter.\n\t\t// The value might be one from defaultFn, default value or provided from the config.\n\t\tif (currentAttr.setter && hasPassedValueViaConfig) {\n\t\t\tvalue = this._callStringOrFunction(currentAttr.setter, value);\n\t\t}\n\n\t\t// Finally, set the value as initial value to the storage with values.\n\t\tthis.__ATTRS__[attr] = value;\n\t},\n\n\t/**\n\t * Checks if an attribute is initialized. An attribute is considered as initialized\n\t * when there is an own property with this name in the local collection of attribute values\n\t * for the current instance.\n\t *\n\t * @instance\n\t * @memberof Attribute\n\t * @method _isInitialized\n\t * @param {String} attr The attribute which should be checked if it is initialized.\n\t * @protected\n\t * @return {Boolean} Returns true if the attribute has been initialized, false otherwise.\n\t */\n\t_isInitialized(attr) {\n\t\treturn Object.prototype.hasOwnProperty.call(this.__ATTRS__, attr);\n\t},\n};\n\nexport default Attribute;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nconst tableSelectionGetArrowBoxClasses = function() {\n\treturn 'ae-arrow-box ae-arrow-box-bottom';\n};\n\nconst SelectionGetArrowBoxClasses = {\n\ttable: tableSelectionGetArrowBoxClasses,\n};\n\nexport default SelectionGetArrowBoxClasses;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport ReactDOM from 'react-dom';\n\n// Default gutter value for toolbar positioning\nconst DEFAULT_GUTTER = {\n\tleft: 0,\n\ttop: 0,\n};\n\n/**\n * Centers a Toolbar according to given rectangle\n *\n * @method centerToolbar\n * @param {Object} toolbar The toolbar to be centered\n * @param {Object} rect The rectangle according to which the Toolbar will be centered\n */\nconst centerToolbar = function(toolbar, rect) {\n\tconst toolbarNode = ReactDOM.findDOMNode(toolbar);\n\n\tconst nativeEditor = toolbar.context.editor.get('nativeEditor');\n\tconst uiNode = nativeEditor.config.uiNode || document.body;\n\tconst uiNodeStyle = getComputedStyle(uiNode);\n\tconst uiNodeMarginLeft = parseInt(\n\t\tuiNodeStyle.getPropertyValue('margin-left'),\n\t\t10\n\t);\n\tconst uiNodeMarginRight = parseInt(\n\t\tuiNodeStyle.getPropertyValue('margin-right'),\n\t\t10\n\t);\n\tconst totalWidth =\n\t\tuiNodeMarginLeft + uiNode.clientWidth + uiNodeMarginRight;\n\n\tconst halfNodeWidth = toolbarNode.offsetWidth / 2;\n\tconst scrollPosition = new CKEDITOR.dom.window(window).getScrollPosition();\n\n\tconst gutter = toolbar.props.gutter || DEFAULT_GUTTER;\n\n\tconst widgetXY = toolbar.getWidgetXYPoint(\n\t\trect.left + rect.width / 2 - scrollPosition.x,\n\t\trect.top + scrollPosition.y,\n\t\tCKEDITOR.SELECTION_BOTTOM_TO_TOP\n\t);\n\n\tconst caretPosition = nativeEditor.getSelection();\n\tconst ranges = caretPosition.getRanges();\n\tlet offsetHeight = 0;\n\n\tif (ranges && ranges.length === 1) {\n\t\tlet startContainer = ranges[0].startContainer;\n\t\tif (startContainer.$.nodeType !== Node.ELEMENT_NODE) {\n\t\t\tstartContainer = startContainer.getParent();\n\t\t}\n\t\tif (startContainer) {\n\t\t\tconst startContainerClientRect = startContainer.getClientRect();\n\t\t\toffsetHeight = startContainerClientRect.y - rect.top;\n\t\t}\n\t}\n\n\tconst endPosition = [\n\t\trect.left + rect.width / 2 - halfNodeWidth - scrollPosition.x,\n\t\trect.top +\n\t\t\toffsetHeight -\n\t\t\ttoolbarNode.offsetHeight +\n\t\t\tscrollPosition.y -\n\t\t\tgutter.top,\n\t];\n\n\tif (endPosition[0] < 0) {\n\t\tendPosition[0] = 0;\n\t} else if (endPosition[0] > totalWidth - toolbarNode.offsetWidth) {\n\t\tendPosition[0] = totalWidth - toolbarNode.offsetWidth;\n\t}\n\n\ttoolbar.moveToPoint(widgetXY, endPosition);\n};\n\n/**\n * Sets the position of a toolbar according to the position of the selected image\n *\n * @method imageSelectionSetPosition\n * @param {Object} payload Payload, should contain the selection data for retrieving the\n * client rectangle of the selected image\n * @return {Boolean} True, in all cases\n */\nconst imageSelectionSetPosition = function(payload) {\n\tconst selectionData = payload.selectionData\n\t\t? payload.selectionData\n\t\t: payload.editorEvent\n\t\t? payload.editorEvent.data.selectionData\n\t\t: null;\n\n\tif (selectionData && selectionData.element) {\n\t\tconst nativeEditor = payload.editor.get('nativeEditor');\n\t\tconst uiNode = nativeEditor.config.uiNode;\n\n\t\tconst scrollTop = uiNode ? uiNode.scrollTop : 0;\n\n\t\tconst rect = selectionData.element.getClientRect();\n\t\trect.top += scrollTop;\n\n\t\tcenterToolbar(this, rect);\n\n\t\treturn true;\n\t}\n};\n\n/**\n * Sets the position of a toolbar according to the position of the selected image\n *\n * @method tableSelectionSetPosition\n * @param {Object} payload Object, which contains the selection data for retrieving the\n * client rectangle of the selected table\n * @return {Boolean} True, in all cases\n */\nconst tableSelectionSetPosition = function(payload) {\n\tconst nativeEditor = payload.editor.get('nativeEditor');\n\tconst uiNode = nativeEditor.config.uiNode;\n\n\tconst scrollTop = uiNode ? uiNode.scrollTop : 0;\n\n\tconst table = new CKEDITOR.Table(nativeEditor).getFromSelection();\n\tconst rect = table.getClientRect();\n\trect.top += scrollTop;\n\n\tcenterToolbar(this, rect);\n\n\treturn true;\n};\n\nconst SelectionSetPosition = {\n\timage: imageSelectionSetPosition,\n\ttable: tableSelectionSetPosition,\n};\n\nexport default SelectionSetPosition;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport SelectionGetArrowBoxClasses from './selection-arrowbox';\nimport SelectionSetPosition from './selection-position';\nimport SelectionTest from './selection-test';\n\nconst Selections = [\n\t{\n\t\tname: 'embed',\n\t\tbuttons: ['embedRemove', 'embedEdit'],\n\t\ttest: SelectionTest.embed,\n\t},\n\t{\n\t\tname: 'embedUrl',\n\t\tbuttons: ['embedVideo', 'embedVideoEdit'],\n\t\ttest: SelectionTest.embedUrl,\n\t},\n\t{\n\t\tname: 'link',\n\t\tbuttons: ['linkEdit'],\n\t\ttest: SelectionTest.link,\n\t},\n\t{\n\t\tname: 'image',\n\t\tbuttons: ['imageLeft', 'imageCenter', 'imageRight', 'removeImage'],\n\t\tsetPosition: SelectionSetPosition.image,\n\t\ttest: SelectionTest.image,\n\t},\n\t{\n\t\tname: 'text',\n\t\tbuttons: {\n\t\t\tfull: [\n\t\t\t\t[\n\t\t\t\t\t'Font',\n\t\t\t\t\t'FontSize',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'bold',\n\t\t\t\t\t'italic',\n\t\t\t\t\t'underline',\n\t\t\t\t\t'strike',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'link',\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'paragraphAlign',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'ul',\n\t\t\t\t\t'ol',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'h1',\n\t\t\t\t\t'h2',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'indentBlock',\n\t\t\t\t\t'outdentBlock',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'TextColor',\n\t\t\t\t\t'BGColor',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'code',\n\t\t\t\t\t'quote',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'removeFormat',\n\t\t\t\t],\n\t\t\t],\n\n\t\t\tsimple: ['styles', 'bold', 'italic', 'underline', 'link'],\n\t\t},\n\t\ttest: SelectionTest.text,\n\t},\n\t{\n\t\tname: 'table',\n\t\tbuttons: [\n\t\t\t'tableHeading',\n\t\t\t'tableRow',\n\t\t\t'tableColumn',\n\t\t\t'tableCell',\n\t\t\t'tableRemove',\n\t\t],\n\t\tgetArrowBoxClasses: SelectionGetArrowBoxClasses.table,\n\t\tsetPosition: SelectionSetPosition.table,\n\t\ttest: SelectionTest.table,\n\t},\n];\n\nexport default Selections;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport './addimages';\n\nimport './autolink';\n\nimport './autolist';\n\nimport './dragresize';\n\nimport './dragresize_ie11';\n\nimport './embed';\nimport embedurl from './embedurl';\n\nimport './imagealignment';\n\nimport './pasteimages';\n\nimport './placeholder';\n\nimport './selectionkeystrokes';\n\nimport './tableresize';\n\nimport './tabletools';\n\nexport {embedurl};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport * as Base from '../components/base';\nimport Buttons from '../components/buttons';\nimport * as Compat from '../components/compat';\nimport Toolbars from '../components/toolbars';\nimport Attribute from '../oop/attribute';\nimport Lang from '../oop/lang';\nimport extend from '../oop/oop';\nimport SelectionGetArrowBoxClasses from '../selections/selection-arrowbox';\nimport SelectionSetPosition from '../selections/selection-position';\nimport SelectionTest from '../selections/selection-test';\nimport Selections from '../selections/selections';\nimport Core from './core';\n\nimport '../plugins';\n\n// An object containing all currently registered plugins in AlloyEditor.\nconst BRIDGE_BUTTONS = {};\n\n/**\n * Creates an instance of AlloyEditor.\n *\n * @memberof AlloyEditor\n * @method editable\n * @static\n * @param {String|Node} node The Node ID or HTMl node, which AlloyEditor should use as an editable area.\n * @param {Object} config Configuration attributes for the current instance of AlloyEditor.\n * @return {Object} An instance of {{#crossLink \"Core\"}}{{/crossLink}}\n */\nconst editable = function(node, config) {\n\tconfig = config || {};\n\tconfig.srcNode = node;\n\n\tAlloyEditor.implementEventTarget();\n\n\treturn new Core(config);\n};\n\n/**\n * The full URL for the AlloyEditor installation directory.\n * It is possible to manually provide the base path by setting a\n * global variable named `ALLOYEDITOR_BASEPATH`. This global variable\n * must be set **before** the editor script loading.\n *\n * @memberof AlloyEditor\n * @method getBasePath\n * @static\n * @return {String} The found base path\n */\nconst getBasePath = function() {\n\t// Find out the editor directory path, based on its <script> tag.\n\tlet path = window.ALLOYEDITOR_BASEPATH || '';\n\n\tif (!path) {\n\t\tconst scripts = document.getElementsByTagName('script');\n\n\t\tfor (let i = 0; i < scripts.length; i++) {\n\t\t\tconst match = scripts[i].src.match(AlloyEditor.regexBasePath);\n\n\t\t\tif (match) {\n\t\t\t\tpath = match[1];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// In IE (only) the script.src string is the raw value entered in the\n\t// HTML source. Other browsers return the full resolved URL instead.\n\tif (path.indexOf(':/') === -1 && path.slice(0, 2) !== '//') {\n\t\t// Absolute path.\n\t\tif (path.indexOf('/') === 0) {\n\t\t\tpath = location.href.match(/^.*?:\\/\\/[^/]*/)[0] + path;\n\t\t}\n\t\t// Relative path.\n\t\telse {\n\t\t\tpath = location.href.match(/^[^?]*\\/(?:)/)[0] + path;\n\t\t}\n\t}\n\n\tif (!path) {\n\t\tthrow new Error(\n\t\t\t'The AlloyEditor installation path could not be automatically detected. Please set the global variable \"ALLOYEDITOR_BASEPATH\" before creating editor instances.'\n\t\t);\n\t}\n\n\treturn path;\n};\n\n/**\n * Detects and load the corresponding language file if AlloyEditor language strings are not already present.\n * The function fires a {{#crossLink \"AlloyEditor/languageResourcesLoaded:event\"}}{{/crossLink}} event\n *\n * @memberof AlloyEditor\n * @method loadLanguageResources\n * @static\n * @param {Function} callback Optional callback to be called when AlloyEditor loads the language resource.\n */\nconst loadLanguageResources = function(callback) {\n\tAlloyEditor.implementEventTarget();\n\n\tif (Lang.isFunction(callback)) {\n\t\tif (AlloyEditor.Strings) {\n\t\t\tsetTimeout(callback, 0);\n\t\t} else {\n\t\t\tAlloyEditor.once('languageResourcesLoaded', () => {\n\t\t\t\tsetTimeout(callback, 0);\n\t\t\t});\n\t\t}\n\t}\n\n\tif (!AlloyEditor._langResourceRequested) {\n\t\tAlloyEditor._langResourceRequested = true;\n\n\t\tconst languages = [\n\t\t\t'af',\n\t\t\t'ar',\n\t\t\t'bg',\n\t\t\t'bn',\n\t\t\t'bs',\n\t\t\t'ca',\n\t\t\t'cs',\n\t\t\t'cy',\n\t\t\t'da',\n\t\t\t'de',\n\t\t\t'el',\n\t\t\t'en-au',\n\t\t\t'en-ca',\n\t\t\t'en-gb',\n\t\t\t'en',\n\t\t\t'eo',\n\t\t\t'es',\n\t\t\t'et',\n\t\t\t'eu',\n\t\t\t'fa',\n\t\t\t'fi',\n\t\t\t'fo',\n\t\t\t'fr-ca',\n\t\t\t'fr',\n\t\t\t'gl',\n\t\t\t'gu',\n\t\t\t'he',\n\t\t\t'hi',\n\t\t\t'hr',\n\t\t\t'hu',\n\t\t\t'id',\n\t\t\t'is',\n\t\t\t'it',\n\t\t\t'ja',\n\t\t\t'ka',\n\t\t\t'km',\n\t\t\t'ko',\n\t\t\t'ku',\n\t\t\t'lt',\n\t\t\t'lv',\n\t\t\t'mk',\n\t\t\t'mn',\n\t\t\t'ms',\n\t\t\t'nb',\n\t\t\t'nl',\n\t\t\t'no',\n\t\t\t'pl',\n\t\t\t'pt-br',\n\t\t\t'pt',\n\t\t\t'ro',\n\t\t\t'ru',\n\t\t\t'si',\n\t\t\t'sk',\n\t\t\t'sl',\n\t\t\t'sq',\n\t\t\t'sr-latn',\n\t\t\t'sr',\n\t\t\t'sv',\n\t\t\t'th',\n\t\t\t'tr',\n\t\t\t'tt',\n\t\t\t'ug',\n\t\t\t'uk',\n\t\t\t'vi',\n\t\t\t'zh-cn',\n\t\t\t'zh',\n\t\t];\n\n\t\tconst userLanguage =\n\t\t\tnavigator.language || navigator.userLanguage || 'en';\n\n\t\tconst parts = userLanguage\n\t\t\t.toLowerCase()\n\t\t\t.match(/([a-z]+)(?:-([a-z]+))?/);\n\t\tlet lang = parts[1];\n\t\tconst locale = parts[2];\n\n\t\tif (languages.indexOf(lang + '-' + locale) >= 0) {\n\t\t\tlang = lang + '-' + locale;\n\t\t} else if (languages.indexOf(lang) === -1) {\n\t\t\tlang = 'en';\n\t\t}\n\n\t\tCKEDITOR.scriptLoader.load(\n\t\t\tAlloyEditor.getUrl('lang/alloy-editor/' + lang + '.js'),\n\t\t\tloaded => {\n\t\t\t\tif (loaded) {\n\t\t\t\t\tAlloyEditor.fire('languageResourcesLoaded');\n\t\t\t\t}\n\t\t\t},\n\t\t\t/* eslint-disable no-invalid-this */\n\t\t\tthis // Always `AlloyEditor`.\n\t\t\t/* eslint-enable no-invalid-this */\n\t\t);\n\t}\n};\n\n/**\n * Gets the full URL for AlloyEditor resources. By default, URLs\n * returned by this function contain a querystring parameter (\"t\")\n * set to the {@link CKEDITOR#timestamp} value.\n *\n * @memberof AlloyEditor\n * @method getUrl\n * @static\n * @param {String} resource The resource whose full URL we want to get.\n * It may be a full, absolute, or relative URL.\n * @return {String} The full URL.\n */\nconst getUrl = function(resource) {\n\tconst basePath = AlloyEditor.getBasePath();\n\n\t// If this is not a full or absolute path.\n\tif (resource.indexOf(':/') === -1 && resource.indexOf('/') !== 0) {\n\t\tresource = basePath + resource;\n\t}\n\n\t// Add the timestamp, except for directories.\n\tif (\n\t\tCKEDITOR.timestamp &&\n\t\tresource.charAt(resource.length - 1) !== '/' &&\n\t\t!/[&?]t=/.test(resource)\n\t) {\n\t\tresource +=\n\t\t\t(resource.indexOf('?') >= 0 ? '&' : '?') +\n\t\t\t't=' +\n\t\t\tCKEDITOR.timestamp;\n\t}\n\n\treturn resource;\n};\n\n/**\n * Implements event firing and subscribing via CKEDITOR.event.\n *\n * @memberof AlloyEditor\n * @method implementEventTarget\n * @static\n */\nconst implementEventTarget = function() {\n\tif (!AlloyEditor.fire && !AlloyEditor.on) {\n\t\tCKEDITOR.event.implementOn(AlloyEditor);\n\t}\n};\n\n/**\n * Regular expression which should match the script which have been used to load AlloyEditor.\n *\n * @memberof AlloyEditor\n * @property regexBasePath\n * @type {RegExp}\n * @static\n */\nconst regexBasePath = /(^|.*[\\\\/])(?:alloy-editor[^/]+|alloy-editor)\\.js(?:\\?.*|;.*)?$/i;\n\n/**\n * Fired when AlloyEditor detects the browser language and loads the corresponding language file. Once this event\n * is fired, AlloyEditor.Strings will be populated with data.\n *\n * @event languageResourcesLoaded\n */\n\n/**\n * Returns the required plugin names needed for a given plugin\n * if it is already registered or an empty array.\n *\n * @memberof AlloyEditor\n * @method getButtons\n * @param {Array} buttons An array of buttons or plugin names.\n * @return {Function} A function that can be invoked to resolve the requested button names.\n * @static\n */\nconst getButtons = function(buttons) {\n\treturn function() {\n\t\treturn buttons.reduce((acc, val) => {\n\t\t\tval = BRIDGE_BUTTONS[val] || [val];\n\t\t\treturn acc.concat(val);\n\t\t}, []);\n\t};\n};\n\n/**\n * Register a button and try to get its required plugins.\n *\n * @memberof AlloyEditor\n * @method registerBridgeButton\n * @param {String} buttonName The name of the button.\n * @param {String} pluginName The name of the plugin that registers the button.\n * @static\n */\nconst registerBridgeButton = function(buttonName, pluginName) {\n\tif (!BRIDGE_BUTTONS[pluginName]) {\n\t\tBRIDGE_BUTTONS[pluginName] = [];\n\t}\n\n\tBRIDGE_BUTTONS[pluginName].push(buttonName);\n};\n\n/**\n * @method OOP\n * @memberof AlloyEditor\n */\nconst OOP = {\n\textend,\n};\n\nexport {\n\tAttribute,\n\tBase,\n\tButtons,\n\tCompat,\n\tCore,\n\tLang,\n\tOOP,\n\tSelectionGetArrowBoxClasses,\n\tSelectionSetPosition,\n\tSelectionTest,\n\tSelections,\n\tToolbars,\n\teditable,\n\tgetBasePath,\n\tgetButtons,\n\tgetUrl,\n\timplementEventTarget,\n\tloadLanguageResources,\n\tregexBasePath,\n\tregisterBridgeButton,\n};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nexport {default as ButtonActionStyle} from './button-action-style';\nexport {default as ButtonCommandActive} from './button-command-active';\nexport {default as ButtonCommand} from './button-command';\nexport {default as ButtonKeystroke} from './button-keystroke';\nexport {default as ButtonProps} from './button-props';\nexport {default as ButtonStateClasses} from './button-state-classes';\nexport {default as ButtonStyle} from './button-style';\nexport {default as ToolbarButtons} from './toolbar-buttons';\nexport {default as WidgetDropdown} from './widget-dropdown';\nexport {default as WidgetExclusive} from './widget-exclusive';\nexport {default as WidgetFocusManager} from './widget-focus-manager';\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport ButtonAccessibilityImageAlt from './button-accessibility-image-alt.jsx';\nimport ButtonBackgroundColor from './button-background-color.jsx';\nimport ButtonBold from './button-bold.jsx';\nimport ButtonCameraImage from './button-camera-image.jsx';\nimport ButtonCamera from './button-camera.jsx';\nimport ButtonCode from './button-code.jsx';\nimport ButtonColor from './button-color.jsx';\nimport ButtonCommandListItem from './button-command-list-item.jsx';\nimport ButtonCommandsList from './button-commands-list.jsx';\nimport ButtonDropdown from './button-dropdown.jsx';\nimport ButtonEmbedEdit from './button-embed-edit.jsx';\nimport ButtonEmbedVideoEdit from './button-embed-video-edit.jsx';\nimport ButtonEmbedVideo from './button-embed-video.jsx';\nimport ButtonEmbed from './button-embed.jsx';\nimport ButtonH1 from './button-h1.jsx';\nimport ButtonH2 from './button-h2.jsx';\nimport ButtonHline from './button-hline.jsx';\nimport ButtonImageAlignCenter from './button-image-align-center.jsx';\nimport ButtonImageAlignLeft from './button-image-align-left.jsx';\nimport ButtonImageAlignRight from './button-image-align-right.jsx';\nimport ButtonImage from './button-image.jsx';\nimport ButtonIndentBlock from './button-indent-block.jsx';\nimport ButtonItalic from './button-italic.jsx';\nimport ButtonItemSelectorAudio from './button-item-selector-audio.jsx';\nimport ButtonItemSelectorImage from './button-item-selector-image.jsx';\nimport ButtonItemSelectorVideo from './button-item-selector-video.jsx';\nimport ButtonLinkAutocompleteList from './button-link-autocomplete-list.jsx';\nimport ButtonLinkBrowse from './button-link-browse.jsx';\nimport ButtonLinkEditBrowse from './button-link-edit-browse.jsx';\nimport ButtonLinkEdit from './button-link-edit.jsx';\nimport ButtonLinkTargetEdit from './button-link-target-edit.jsx';\nimport ButtonLink from './button-link.jsx';\nimport ButtonOl from './button-ol.jsx';\nimport ButtonOutdentBlock from './button-outdent-block.jsx';\nimport ButtonParagraphAlignLeft from './button-paragraph-align-left.jsx';\nimport ButtonParagraphAlignRight from './button-paragraph-align-right.jsx';\nimport ButtonParagraphAlign from './button-paragraph-align.jsx';\nimport ButtonParagraphCenter from './button-paragraph-center.jsx';\nimport ButtonParagraphJustify from './button-paragraph-justify.jsx';\nimport ButtonQuote from './button-quote.jsx';\nimport ButtonRemoveFormat from './button-remove-format.jsx';\nimport ButtonRemoveImage from './button-remove-image.jsx';\nimport ButtonSeparator from './button-separator.jsx';\nimport ButtonSpacing from './button-spacing.jsx';\nimport ButtonStrike from './button-strike.jsx';\nimport ButtonStylesListHeader from './button-styles-list-header.jsx';\nimport ButtonStylesListItemRemove from './button-styles-list-item-remove.jsx';\nimport ButtonStylesListItem from './button-styles-list-item.jsx';\nimport ButtonStylesList from './button-styles-list.jsx';\nimport ButtonStyles from './button-styles.jsx';\nimport ButtonSubscript from './button-subscript.jsx';\nimport ButtonSuperscript from './button-superscript.jsx';\nimport ButtonTableCell from './button-table-cell.jsx';\nimport ButtonTableColumn from './button-table-column.jsx';\nimport ButtonTableEdit from './button-table-edit.jsx';\nimport ButtonTableHeading from './button-table-heading.jsx';\nimport ButtonTableRemove from './button-table-remove.jsx';\nimport ButtonTableRow from './button-table-row.jsx';\nimport ButtonTable from './button-table.jsx';\nimport ButtonTargetList from './button-target-list.jsx';\nimport ButtonTwitter from './button-twitter.jsx';\nimport ButtonUl from './button-ul.jsx';\nimport ButtonUnderline from './button-underline.jsx';\n\nexport default {\n\t[ButtonAccessibilityImageAlt.key]: ButtonAccessibilityImageAlt,\n\t[ButtonBackgroundColor.key]: ButtonBackgroundColor,\n\t[ButtonBold.key]: ButtonBold,\n\t[ButtonCameraImage.key]: ButtonCameraImage,\n\t[ButtonCamera.key]: ButtonCamera,\n\t[ButtonCode.key]: ButtonCode,\n\t[ButtonColor.key]: ButtonColor,\n\t[ButtonCommandListItem.key]: ButtonCommandListItem,\n\t[ButtonCommandsList.key]: ButtonCommandsList,\n\t[ButtonDropdown.key]: ButtonDropdown,\n\t[ButtonEmbedEdit.key]: ButtonEmbedEdit,\n\t[ButtonEmbed.key]: ButtonEmbed,\n\t[ButtonEmbedVideoEdit.key]: ButtonEmbedVideoEdit,\n\t[ButtonEmbedVideo.key]: ButtonEmbedVideo,\n\t[ButtonH1.key]: ButtonH1,\n\t[ButtonH2.key]: ButtonH2,\n\t[ButtonHline.key]: ButtonHline,\n\t[ButtonImageAlignCenter.key]: ButtonImageAlignCenter,\n\t[ButtonImageAlignLeft.key]: ButtonImageAlignLeft,\n\t[ButtonImageAlignRight.key]: ButtonImageAlignRight,\n\t[ButtonImage.key]: ButtonImage,\n\t[ButtonIndentBlock.key]: ButtonIndentBlock,\n\t[ButtonItalic.key]: ButtonItalic,\n\t[ButtonItemSelectorAudio.key]: ButtonItemSelectorAudio,\n\t[ButtonItemSelectorImage.key]: ButtonItemSelectorImage,\n\t[ButtonItemSelectorVideo.key]: ButtonItemSelectorVideo,\n\t[ButtonLinkAutocompleteList.key]: ButtonLinkAutocompleteList,\n\t[ButtonLinkBrowse.key]: ButtonLinkBrowse,\n\t[ButtonLinkEditBrowse.key]: ButtonLinkEditBrowse,\n\t[ButtonLinkEdit.key]: ButtonLinkEdit,\n\t[ButtonLinkTargetEdit.key]: ButtonLinkTargetEdit,\n\t[ButtonLink.key]: ButtonLink,\n\t[ButtonOl.key]: ButtonOl,\n\t[ButtonOutdentBlock.key]: ButtonOutdentBlock,\n\t[ButtonParagraphAlign.key]: ButtonParagraphAlign,\n\t[ButtonParagraphAlignLeft.key]: ButtonParagraphAlignLeft,\n\t[ButtonParagraphAlignRight.key]: ButtonParagraphAlignRight,\n\t[ButtonParagraphCenter.key]: ButtonParagraphCenter,\n\t[ButtonParagraphJustify.key]: ButtonParagraphJustify,\n\t[ButtonQuote.key]: ButtonQuote,\n\t[ButtonRemoveFormat.key]: ButtonRemoveFormat,\n\t[ButtonRemoveImage.key]: ButtonRemoveImage,\n\t[ButtonSeparator.key]: ButtonSeparator,\n\t[ButtonSpacing.key]: ButtonSpacing,\n\t[ButtonStrike.key]: ButtonStrike,\n\t[ButtonStylesListHeader.key]: ButtonStylesListHeader,\n\t[ButtonStylesListItemRemove.key]: ButtonStylesListItemRemove,\n\t[ButtonStylesListItem.key]: ButtonStylesListItem,\n\t[ButtonStylesList.key]: ButtonStylesList,\n\t[ButtonStyles.key]: ButtonStyles,\n\t[ButtonSubscript.key]: ButtonSubscript,\n\t[ButtonSuperscript.key]: ButtonSuperscript,\n\t[ButtonTableCell.key]: ButtonTableCell,\n\t[ButtonTableColumn.key]: ButtonTableColumn,\n\t[ButtonTableEdit.key]: ButtonTableEdit,\n\t[ButtonTableHeading.key]: ButtonTableHeading,\n\t[ButtonTableRemove.key]: ButtonTableRemove,\n\t[ButtonTableRow.key]: ButtonTableRow,\n\t[ButtonTable.key]: ButtonTable,\n\t[ButtonTargetList.key]: ButtonTargetList,\n\t[ButtonTwitter.key]: ButtonTwitter,\n\t[ButtonUl.key]: ButtonUl,\n\t[ButtonUnderline.key]: ButtonUnderline,\n};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonAccessibilityImageAlt class provides functionality for changing text color in a document.\n *\n * @class ButtonAccessibilityImageAlt\n *\n */\nclass ButtonAccessibilityImageAlt extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'imageAlt';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tconst selection = props.context.editor\n\t\t\t.get('nativeEditor')\n\t\t\t.getSelection();\n\n\t\tconst element =\n\t\t\tselection.getSelectedElement() || selection.getStartElement();\n\n\t\tthis._element = element;\n\n\t\tconst imageElement = this._element.findOne('img');\n\n\t\tconst imageAlt = imageElement\n\t\t\t? imageElement.getAttribute('alt')\n\t\t\t: this._element.getAttribute('alt');\n\n\t\tthis.state = {\n\t\t\timageAlt,\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.renderExclusive) {\n\t\t\treturn (\n\t\t\t\t<div className=\"ae-container-edit-link\">\n\t\t\t\t\t<div className=\"ae-container-input xxl\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\taria-label=\"alt\"\n\t\t\t\t\t\t\tclassName=\"ae-input\"\n\t\t\t\t\t\t\tonChange={this._handleAltChange}\n\t\t\t\t\t\t\tonKeyDown={this._handleKeyDown}\n\t\t\t\t\t\t\tplaceholder=\"alt\"\n\t\t\t\t\t\t\tref=\"refAltInput\"\n\t\t\t\t\t\t\ttitle=\"alt\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={this.state.imageAlt}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button\n\t\t\t\t\t\taria-label={AlloyEditor.Strings.confirm}\n\t\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\t\tonClick={this._updateImageAlt}\n\t\t\t\t\t\ttitle={AlloyEditor.Strings.confirm}>\n\t\t\t\t\t\t<ButtonIcon symbol=\"check\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tonClick={this._requestExclusive}\n\t\t\t\t\ttabIndex={this.props.tabIndex}>\n\t\t\t\t\t<small className=\"ae-icon small\">Alt</small>\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the user cursor on the widget's input.\n\t *\n\t * @protected\n\t * @method _focusAltInput\n\t */\n\t_focusAltInput() {\n\t\tconst instance = this;\n\n\t\tconst focusAltEl = function() {\n\t\t\tReactDOM.findDOMNode(instance.refs.refAltInput).focus();\n\t\t};\n\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(focusAltEl);\n\t\t} else {\n\t\t\tsetTimeout(focusAltEl, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Event attached to alt input that fires when its value is changed\n\t *\n\t * @protected\n\t * @method  _handleAltChange\n\t * @param {MouseEvent} event\n\t */\n\t_handleAltChange = event => {\n\t\tthis.setState({\n\t\t\timageAlt: event.target.value,\n\t\t});\n\n\t\tthis._focusAltInput();\n\t};\n\n\t/**\n\t * Event attached to al tinput that fires when key is down\n\t * This method check that enter key is pushed to update the component´s state\n\t *\n\t * @protected\n\t * @method  _handleKeyDown\n\t * @param {MouseEvent} event\n\t */\n\t_handleKeyDown = event => {\n\t\tif (event.keyCode === 13) {\n\t\t\tevent.preventDefault();\n\n\t\t\tthis._updateImageAlt();\n\t\t}\n\t};\n\n\t/**\n\t * Requests the link button to be rendered in exclusive mode to allow the creation of a link.\n\t *\n\t * @protected\n\t * @method _requestExclusive\n\t */\n\t_requestExclusive = () => {\n\t\tthis.props.requestExclusive(ButtonAccessibilityImageAlt.key);\n\t};\n\n\t/**\n\t * Method called by clicking ok button or pushing key enter to update imageAlt state and to update alt property from the image that is selected\n\t * This method calls cancelExclusive to show the previous toolbar before enter to edit alt property\n\t *\n\t * @protected\n\t * @method  _updateImageAlt\n\t */\n\t_updateImageAlt = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst imageAlt = this.refs.refAltInput.value;\n\n\t\tthis.setState({\n\t\t\timageAlt,\n\t\t});\n\n\t\tconst imageElement = this._element.findOne('img');\n\t\tconst image = imageElement ? imageElement : this._element;\n\n\t\timage.setAttribute('alt', imageAlt);\n\n\t\teditor.fire('actionPerformed', this);\n\n\t\t// We need to cancelExclusive with the bound parameters in case the button is used\n\t\t// inside another in exclusive mode (such is the case of the alt button)\n\t\tthis.props.cancelExclusive();\n\t};\n}\n\nexport default EditorContext.toProps(ButtonAccessibilityImageAlt);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonStylesList from './button-styles-list.jsx';\n\nclass ButtonBackgroundColor extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'backgroundColor';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Indicates whether the styles list is expanded or not.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonBackgroundColor\n\t\t * @property {Boolean} expanded\n\t\t */\n\t\texpanded: PropTypes.bool,\n\n\t\t/**\n\t\t * The label that should be used for accessibility purposes.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonBackgroundColor\n\t\t * @property {String} label\n\t\t */\n\t\tlabel: PropTypes.string,\n\n\t\t/**\n\t\t * Indicates whether the remove styles item should appear in the styles list.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonBackgroundColor\n\t\t * @property {Boolean} showRemoveStylesItem\n\t\t */\n\t\tshowRemoveStylesItem: PropTypes.bool,\n\n\t\t/**\n\t\t * List of the styles the button is able to handle.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonBackgroundColor\n\t\t * @property {Array} styles\n\t\t */\n\t\tstyles: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/**\n\t\t * The tabIndex of the button in its toolbar current state. A value other than -1\n\t\t * means that the button has focus and is the active element.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonBackgroundColor\n\t\t * @property {Number} tabIndex\n\t\t */\n\t\ttabIndex: PropTypes.number,\n\n\t\t/**\n\t\t * Callback provided by the button host to notify when the styles list has been expanded.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonBackgroundColor\n\t\t * @property {Function} toggleDropdown\n\t\t */\n\t\ttoggleDropdown: PropTypes.func,\n\t};\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet activeColor = AlloyEditor.Strings.normal;\n\n\t\tlet activeColorClass = '';\n\n\t\tconst colors = this._getColors();\n\n\t\tconst itemStyle = {\n\t\t\telement: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: '',\n\t\t\t},\n\t\t};\n\n\t\tcolors.forEach(item => {\n\t\t\titemStyle.attributes.class = item.styleClass;\n\n\t\t\tif (this._checkActive(itemStyle)) {\n\t\t\t\tactiveColor = item.name;\n\n\t\t\t\tactiveColorClass = item.style.attributes.class;\n\t\t\t}\n\t\t});\n\n\t\tconst {expanded, tabIndex, toggleDropdown} = this.props;\n\n\t\tconst buttonStylesProps = {\n\t\t\tactiveStyle: activeColor,\n\t\t\tonDismiss: toggleDropdown,\n\t\t\tshowRemoveStylesItem: false,\n\t\t\tstyles: colors,\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={expanded}\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={tabIndex}>\n\t\t\t\t\t<span className={activeColorClass}>\n\t\t\t\t\t\t<ButtonIcon symbol=\"textbox\" />\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t\t{expanded && <ButtonStylesList {...buttonStylesProps} />}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t_applyStyle(className) {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst styleConfig = {\n\t\t\telement: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: className,\n\t\t\t},\n\t\t};\n\n\t\teditor.getSelection().lock();\n\n\t\tthis._getColors().forEach(item => {\n\t\t\tstyleConfig.attributes.class = item.styleClass;\n\n\t\t\tif (this._checkActive(styleConfig)) {\n\t\t\t\teditor.removeStyle(new CKEDITOR.style(styleConfig));\n\t\t\t}\n\t\t});\n\n\t\tstyleConfig.attributes.class = className;\n\n\t\tconst style = new CKEDITOR.style(styleConfig);\n\n\t\teditor.applyStyle(style);\n\n\t\teditor.getSelection().unlock();\n\n\t\teditor.fire('actionPerformed', this);\n\t}\n\n\t/**\n\t * Checks if the given color definition is applied to the current selection in the editor.\n\t *\n\t * @instance\n\t * @memberof ButtonBackgroundColor\n\t * @method _checkActive\n\t * @param {Object} styleConfig color definition as per http://docs.ckeditor.com/#!/api/CKEDITOR.style.\n\t * @protected\n\t * @return {Boolean} Returns true if the color is applied to the selection, false otherwise.\n\t */\n\t_checkActive(styleConfig) {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\t// Styles with wildcard element (*) won't be considered active by CKEditor. Defaulting\n\t\t// to a 'span' element works for most of those cases with no defined element.\n\t\tstyleConfig = CKEDITOR.tools.merge({element: 'span'}, styleConfig);\n\n\t\tconst style = new CKEDITOR.style(styleConfig);\n\n\t\treturn style.checkActive(nativeEditor.elementPath(), nativeEditor);\n\t}\n\n\t/**\n\t * Returns an array of colors. Each color consists of two properties:\n\t * - name - the style name, for example \"default\"\n\t * - style - an object with one property, called `element` which value\n\t * represents the style which have to be applied to the element.\n\t *\n\t * @instance\n\t * @memberof ButtonBackgroundColor\n\t * @method _getColor\n\t * @protected\n\t * @return {Array<object>} An array of objects containing the colors.\n\t */\n\t_getColors() {\n\t\treturn (\n\t\t\tthis.props.styles || [\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.normal,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-body',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: '',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, ''),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.primary,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-primary',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: 'bg-primary',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'bg-primary'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.disabled,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-secondary',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: 'bg-secondary',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'bg-secondary'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.success,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-success',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: 'bg-success',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'bg-success'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.danger,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-danger',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: 'bg-danger',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'bg-danger'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.warning,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-warning',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: 'bg-warning',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'bg-warning'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.info,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-info',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: 'bg-info',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'bg-info'),\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonBackgroundColor;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonKeystroke from '../base/button-keystroke';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonBold class provides functionality for styling an selection with strong (bold) style.\n *\n * @class ButtonBold\n * @uses ButtonCommand\n * @uses ButtonKeystroke\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonBold extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonBold\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'bold',\n\t\tkeystroke: {\n\t\t\tfn: 'execCommand',\n\t\t\tkeys: CKEDITOR.CTRL + 66 /* B*/,\n\t\t\tname: 'bold',\n\t\t},\n\t\tstyle: 'coreStyles_bold',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default bold\n\t * @memberof ButtonBold\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'bold';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonBold\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button  ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.bold}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-bold\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.bold}>\n\t\t\t\t<ButtonIcon symbol=\"bold\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonKeystroke(ButtonStateClasses(ButtonStyle(ButtonBold)))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCameraImage from './button-camera-image.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonCamera class renders in two different ways:\n *\n * - Normal: Just a button that allows to switch to the edition mode.\n * - Exclusive: Renders ButtonCameraImage in order to take photo from the camera.\n *\n * @class ButtonCamera\n */\nclass ButtonCamera extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default camera\n\t * @memberof ButtonCamera\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'camera';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonCamera\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.renderExclusive) {\n\t\t\treturn <ButtonCameraImage {...this.props} />;\n\t\t} else {\n\t\t\tconst disabled = !(\n\t\t\t\tnavigator.getUserMedia ||\n\t\t\t\t(navigator.webkitGetUserMedia &&\n\t\t\t\t\tlocation.protocol === 'https') ||\n\t\t\t\tnavigator.mozGetUserMedia ||\n\t\t\t\tnavigator.msGetUserMedia\n\t\t\t);\n\n\t\t\tconst label = disabled\n\t\t\t\t? AlloyEditor.Strings.cameraDisabled\n\t\t\t\t: AlloyEditor.Strings.camera;\n\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\taria-label={label}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdata-type=\"button-image-camera\"\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tonClick={this.props.requestExclusive.bind(ButtonCamera.key)}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={label}>\n\t\t\t\t\t<ButtonIcon symbol=\"camera\" />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default ButtonCamera;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonActionStyle from '../base/button-action-style';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonCode class provides wraps a selection in `pre` element.\n *\n * @class ButtonCode\n * @uses ButtonActionStyle\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonCode extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonCode\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tstyle: {\n\t\t\telement: 'pre',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default code\n\t * @memberof ButtonCode\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'code';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonCode\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.code}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-code\"\n\t\t\t\tonClick={this.applyStyle}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.code}>\n\t\t\t\t<ButtonIcon symbol=\"code\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonActionStyle(ButtonStateClasses(ButtonStyle(ButtonCode)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonStylesList from './button-styles-list.jsx';\n\n/**\n * The ButtonColor class provides functionality for changing text color in a document.\n *\n *\n * @class ButtonColor\n */\nclass ButtonColor extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'color';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Indicates whether the styles list is expanded or not.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonColor\n\t\t * @property {Boolean} expanded\n\t\t */\n\t\texpanded: PropTypes.bool,\n\n\t\t/**\n\t\t * The label that should be used for accessibility purposes.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonColor\n\t\t * @property {String} label\n\t\t */\n\t\tlabel: PropTypes.string,\n\n\t\t/**\n\t\t * Indicates whether the remove styles item should appear in the styles list.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonColor\n\t\t * @property {Boolean} showRemoveStylesItem\n\t\t */\n\t\tshowRemoveStylesItem: PropTypes.bool,\n\n\t\t/**\n\t\t * List of the styles the button is able to handle.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonColor\n\t\t * @property {Array} styles\n\t\t */\n\t\tstyles: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/**\n\t\t * The tabIndex of the button in its toolbar current state. A value other than -1\n\t\t * means that the button has focus and is the active element.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonColor\n\t\t * @property {Number} tabIndex\n\t\t */\n\t\ttabIndex: PropTypes.number,\n\n\t\t/**\n\t\t * Callback provided by the button host to notify when the styles list has been expanded.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonColor\n\t\t * @property {Function} toggleDropdown\n\t\t */\n\t\ttoggleDropdown: PropTypes.func,\n\t};\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet activeColor = AlloyEditor.Strings.normal;\n\n\t\tconst colors = this._getColors();\n\n\t\tcolors.some(item => {\n\t\t\tif (this._checkActive(item.style)) {\n\t\t\t\tactiveColor = item.name;\n\t\t\t}\n\t\t});\n\n\t\tconst {expanded, tabIndex, toggleDropdown} = this.props;\n\n\t\tconst buttonStylesProps = {\n\t\t\tactiveStyle: activeColor,\n\t\t\tonDismiss: toggleDropdown,\n\t\t\tshowRemoveStylesItem: false,\n\t\t\tstyles: colors,\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={expanded}\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={tabIndex}>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<ButtonIcon symbol=\"color-picker\" />\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t\t{expanded && <ButtonStylesList {...buttonStylesProps} />}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t_applyStyle(className) {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst styleConfig = {\n\t\t\telement: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: className,\n\t\t\t},\n\t\t};\n\n\t\tconst style = new CKEDITOR.style(styleConfig);\n\n\t\teditor.getSelection().lock();\n\n\t\tthis._getColors().forEach(item => {\n\t\t\tif (this._checkActive(item.style)) {\n\t\t\t\teditor.removeStyle(new CKEDITOR.style(item.style));\n\t\t\t}\n\t\t});\n\n\t\teditor.applyStyle(style);\n\n\t\teditor.getSelection().unlock();\n\n\t\teditor.fire('actionPerformed', this);\n\t}\n\n\t/**\n\t * Checks if the given color definition is applied to the current selection in the editor.\n\t *\n\t * @instance\n\t * @memberof ButtonColor\n\t * @method _checkActive\n\t * @param {Object} styleConfig Color definition as per http://docs.ckeditor.com/#!/api/CKEDITOR.style.\n\t * @protected\n\t * @return {Boolean} Returns true if the color is applied to the selection, false otherwise.\n\t */\n\t_checkActive(styleConfig) {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\t// Styles with wildcard element (*) won't be considered active by CKEditor. Defaulting\n\t\t// to a 'span' element works for most of those cases with no defined element.\n\t\tstyleConfig = CKEDITOR.tools.merge({element: 'span'}, styleConfig);\n\n\t\tconst style = new CKEDITOR.style(styleConfig);\n\n\t\treturn style.checkActive(nativeEditor.elementPath(), nativeEditor);\n\t}\n\n\t/**\n\t * Returns an array of colors. Each color consists of two properties:\n\t * - name - The style name, for example \"default\".\n\t * - style - An object with one property, called `element` which value\n\t *          represents the style which have to be applied to the element.\n\t * - styleFn - The function that is invoked to apply the style to the element.\n\t *\n\t * @instance\n\t * @memberof ButtonColor\n\t * @method _getColor\n\t * @protected\n\t * @return {Array<object>} An array of objects containing the colors.\n\t */\n\t_getColors() {\n\t\treturn (\n\t\t\tthis.props.styles || [\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.primary,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-primary',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-primary'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.success,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-success',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-success'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.danger,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-danger',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-danger'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.warning,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-warning',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-warning'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.info,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-info',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-info'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.dark,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-dark',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-dark'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.darkGray,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-gray-dark',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-gray-dark'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.secondary,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-secondary',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-secondary'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.light,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-dark',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-light'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.lighter,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-dark',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-lighter'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.white,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-dark',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-white'),\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonColor;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport ButtonEmbedVideoEdit from './button-embed-video-edit.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonEmbedVideo class provides functionality for changing text color in a document.\n *\n * @class ButtonEmbedVideo\n */\nclass ButtonEmbedVideo extends React.Component {\n\tstatic key = 'embedVideo';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * The label that should be used for accessibility purposes.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonEmbedVideo\n\t\t * @property {String} label\n\t\t */\n\t\tlabel: PropTypes.string,\n\n\t\t/**\n\t\t * The tabIndex of the button in its toolbar current state. A value other than -1\n\t\t * means that the button has focus and is the active element.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonEmbedVideo\n\t\t * @property {Number} tabIndex\n\t\t */\n\t\ttabIndex: PropTypes.number,\n\t};\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.renderExclusive) {\n\t\t\treturn <ButtonEmbedVideoEdit {...this.props} />;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.video}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdata-type=\"button-embed-video\"\n\t\t\t\t\tonClick={this.props.requestExclusive}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.video}>\n\t\t\t\t\t<ButtonIcon symbol=\"video\" />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default ButtonEmbedVideo;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonKeystroke from '../base/button-keystroke';\nimport ButtonEmbedEdit from './button-embed-edit.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonEmbed class provides functionality for creating and editing an embed link in a document.\n * ButtonEmbed renders in two different modes:\n *\n * - Normal: Just a button that allows to switch to the edition mode\n * - Exclusive: The ButtonEmbedEdit UI with all the link edition controls.\n *\n * @class ButtonEmbed\n * @uses ButtonKeystroke\n */\nclass ButtonEmbed extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbed\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tkeystroke: {\n\t\t\tfn: '_requestExclusive',\n\t\t\tkeys: CKEDITOR.CTRL + CKEDITOR.SHIFT + 76 /* L*/,\n\t\t\tname: 'embed',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default embed\n\t * @memberof ButtonEmbed\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'embed';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbed\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.renderExclusive) {\n\t\t\treturn <ButtonEmbedEdit {...this.props} />;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.link}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdata-type=\"button-embed\"\n\t\t\t\t\tonClick={this._requestExclusive}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.link}>\n\t\t\t\t\t<ButtonIcon symbol=\"plus\" />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Requests the link button to be rendered in exclusive mode to allow the embedding of a link.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbed\n\t * @method _requestExclusive\n\t * @protected\n\t */\n\t_requestExclusive = () => {\n\t\tthis.props.requestExclusive(ButtonEmbed.key);\n\t};\n}\n\nexport default ButtonKeystroke(ButtonEmbed);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonActionStyle from '../base/button-action-style';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonH1 class provides wraps a selection in `h1` element.\n *\n * @class ButtonH1\n * @uses ButtonActionStyle\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonH1 extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonH1\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tstyle: {\n\t\t\telement: 'h1',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default h1\n\t * @memberof ButtonH1\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'h1';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonH1\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.h1}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-h1\"\n\t\t\t\tonClick={this.applyStyle}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.h1}>\n\t\t\t\t<ButtonIcon symbol=\"h1\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonActionStyle(ButtonStateClasses(ButtonStyle(ButtonH1)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonActionStyle from '../base/button-action-style';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonH2 class provides wraps a selection in `h2` element.\n *\n * @class ButtonH2\n * @uses ButtonActionStyle\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonH2 extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonH2\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tstyle: {\n\t\t\telement: 'h2',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default h2\n\t * @memberof ButtonH2\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'h2';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonH2\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.h2}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-h2\"\n\t\t\t\tonClick={this.applyStyle}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.h2}>\n\t\t\t\t<ButtonIcon symbol=\"h2\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonActionStyle(ButtonStateClasses(ButtonStyle(ButtonH2)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonHline class provides inserts horizontal line.\n *\n * @class ButtonHline\n * @uses ButtonCommand\n */\nclass ButtonHline extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonHline\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'horizontalrule',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default hline\n\t * @memberof ButtonHline\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'hline';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonHline\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.horizontalrule}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tdata-type=\"button-hline\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.horizontalrule}>\n\t\t\t\t<ButtonIcon symbol=\"hr\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(ButtonHline);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonImageAlignCenter class provides functionality for aligning an image in the center.\n *\n * @class ButtonImageAlignCenter\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonImageAlignCenter extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonImageAlignCenter\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifycenter',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default imageCenter\n\t * @memberof ButtonImageAlignCenter\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'imageCenter';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonImageAlignCenter\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignCenter}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-image-align-center\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignCenter}>\n\t\t\t\t<ButtonIcon symbol=\"align-image-center\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonImageAlignCenter))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonImageAlignLeft class provides functionality for aligning an image on left.\n *\n * @class ButtonImageAlignLeft\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonImageAlignLeft extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonImageAlignLeft\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifyleft',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default imageLeft\n\t * @memberof ButtonImageAlignLeft\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'imageLeft';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonImageAlignLeft\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignLeft}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-image-align-left\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignLeft}>\n\t\t\t\t<ButtonIcon symbol=\"align-image-left\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonImageAlignLeft))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonImageAlignRight class provides functionality for aligning an image on right.\n *\n * @class ButtonImageAlignRight\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonImageAlignRight extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonImageAlignRight\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifyright',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default imageRight\n\t * @memberof ButtonImageAlignRight\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'imageRight';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonImageAlignRight\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignRight}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-image-align-right\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignRight}>\n\t\t\t\t<ButtonIcon symbol=\"align-image-right\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonImageAlignRight))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonImage class inserts an image to the content.\n *\n * @class ButtonImage\n */\nclass ButtonImage extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default image\n\t * @memberof ButtonImage\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'imageFromFile';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.fileInput = React.createRef();\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonImage\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst inputSyle = {display: 'none'};\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.image}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdata-type=\"button-image\"\n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.image}>\n\t\t\t\t\t<ButtonIcon symbol=\"document-image\" />\n\t\t\t\t</button>\n\n\t\t\t\t<input\n\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\tonChange={this._onInputChange}\n\t\t\t\t\tref={this.fileInput}\n\t\t\t\t\tstyle={inputSyle}\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Simulates click on the input element. This will open browser's native file open dialog.\n\t *\n\t * @instance\n\t * @memberof ButtonImage\n\t * @method handleClick\n\t * @param {SyntheticEvent} event The received click event on the button.\n\t */\n\thandleClick = () => {\n\t\tthis.fileInput.current.click();\n\t};\n\n\t/**\n\t * On input change, reads the chosen file and fires an event `beforeImageAdd` with the image which will be added\n\t * to the content. The image file will be passed in the `imageFiles` property.\n\t * If any of the listeners returns `false` or cancels the event, the image won't be added to the content.\n\t * Otherwise, an event `imageAdd` will be fired with the inserted element into the editable area.\n\t * The passed params will be:\n\t * - `el` - the created img element\n\t * - `file` - the original image file from the input element\n\t *\n\t * @fires ButtonImage#beforeImageAdd\n\t * @fires ButtonImage#imageAdd\n\t * @instance\n\t * @memberof ButtonImage\n\t * @method _onInputChange\n\t * @protected\n\t */\n\t_onInputChange = () => {\n\t\tconst inputEl = this.fileInput.current;\n\n\t\t// On IE11 the function might be called with an empty array of\n\t\t// files. In such a case, no actions will be taken.\n\t\tif (!inputEl.files.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst reader = new FileReader();\n\t\tconst file = inputEl.files[0];\n\n\t\treader.onload = event => {\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\tconst result = editor.fire('beforeImageAdd', {\n\t\t\t\timageFiles: file,\n\t\t\t});\n\n\t\t\tif (result) {\n\t\t\t\tconst el = CKEDITOR.dom.element.createFromHtml(\n\t\t\t\t\t`<img src=\"${event.target.result}\">`\n\t\t\t\t);\n\n\t\t\t\teditor.insertElement(el);\n\n\t\t\t\teditor.fire('actionPerformed', this);\n\n\t\t\t\tconst imageData = {\n\t\t\t\t\tel,\n\t\t\t\t\tfile,\n\t\t\t\t};\n\n\t\t\t\teditor.fire('imageAdd', imageData);\n\t\t\t}\n\t\t};\n\n\t\treader.readAsDataURL(file);\n\n\t\tinputEl.value = '';\n\t};\n}\n\nexport default ButtonImage;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonIndentBlock class provides functionality for indenting the selected blocks.\n *\n * @class ButtonIndentBlock\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonIndentBlock extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonIndentBlock\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'indent',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default indentBlock\n\t * @memberof ButtonIndentBlock\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'indentBlock';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonIndentBlock\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.indent}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-indent-block\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.indent}>\n\t\t\t\t<ButtonIcon symbol=\"indent-less\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonIndentBlock))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonKeystroke from '../base/button-keystroke';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonItalic class provides functionality for styling an selection with italic (em) style.\n *\n * @class ButtonItalic\n * @uses ButtonCommand\n * @uses ButtonKeystroke\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonItalic extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonItalic\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'italic',\n\t\tkeystroke: {\n\t\t\tfn: 'execCommand',\n\t\t\tkeys: CKEDITOR.CTRL + 73 /* I*/,\n\t\t\tname: 'italic',\n\t\t},\n\t\tstyle: 'coreStyles_italic',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default italic\n\t * @memberof ButtonItalic\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'italic';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonItalic\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.italic}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-italic\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.italic}>\n\t\t\t\t<ButtonIcon symbol=\"italic\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonKeystroke(ButtonStateClasses(ButtonStyle(ButtonItalic)))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * @class ButtonItemSelectorAudio\n * @uses ButtonCommand\n */\nclass ButtonItemSelectorAudio extends React.Component {\n\tstatic defaultProps = {\n\t\tcommand: 'audioselector',\n\t};\n\n\tstatic key = 'audio';\n\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.audio}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tdata-type=\"button-audio\"\n\t\t\t\tonClick={this._handleClick}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.audio}>\n\t\t\t\t<ButtonIcon symbol=\"audio\" />\n\t\t\t</button>\n\t\t);\n\t}\n\n\t_handleClick = () => {\n\t\tthis.execCommand(null);\n\t};\n}\n\nexport default ButtonCommand(ButtonItemSelectorAudio);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * @class ButtonItemSelectorImage\n * @uses ButtonCommand\n */\nclass ButtonItemSelectorImage extends React.Component {\n\tstatic defaultProps = {\n\t\tcommand: 'imageselector',\n\t};\n\n\tstatic key = 'image';\n\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.image}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tdata-type=\"button-image\"\n\t\t\t\tonClick={this._handleClick}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.image}>\n\t\t\t\t<ButtonIcon symbol=\"picture\" />\n\t\t\t</button>\n\t\t);\n\t}\n\n\t_handleClick = () => {\n\t\tthis.execCommand(null);\n\t};\n}\n\nexport default ButtonCommand(ButtonItemSelectorImage);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * @class ButtonItemSelectorVideo\n * @uses ButtonCommand\n */\nclass ButtonItemSelectorVideo extends React.Component {\n\tstatic defaultProps = {\n\t\tcommand: 'videoselector',\n\t};\n\n\tstatic key = 'video';\n\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.video}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tdata-type=\"button-video\"\n\t\t\t\tonClick={this._handleClick}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.video}>\n\t\t\t\t<ButtonIcon symbol=\"video\" />\n\t\t\t</button>\n\t\t);\n\t}\n\n\t_handleClick = () => {\n\t\tthis.execCommand(null);\n\t};\n}\n\nexport default ButtonCommand(ButtonItemSelectorVideo);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport ButtonKeystroke from '../base/button-keystroke';\nimport ButtonProps from '../base/button-props';\nimport ButtonLinkEditBrowse from './button-link-edit-browse.jsx';\nimport ButtonLink from './button-link.jsx';\n\n/**\n * The ButtonLinkBrowse class provides functionality for changing text color in a document.\n *\n * @uses ButtonKeystroke\n * @uses ButtonProps\n *\n * @class ButtonLinkBrowse\n */\nclass ButtonLinkBrowse extends React.Component {\n\tstatic defaultProps = {\n\t\tkeystroke: {\n\t\t\tfn: '_requestExclusive',\n\t\t\tkeys: CKEDITOR.CTRL + 76 /* L*/,\n\t\t\tname: 'linkBrowse',\n\t\t},\n\t};\n\n\tstatic key = 'linkBrowse';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * The label that should be used for accessibility purposes.\n\t\t *\n\t\t * @property {String} label\n\t\t */\n\t\tlabel: PropTypes.string,\n\n\t\t/**\n\t\t * The tabIndex of the button in its toolbar current state. A value other than -1\n\t\t * means that the button has focus and is the active element.\n\t\t *\n\t\t * @property {Number} tabIndex\n\t\t */\n\t\ttabIndex: PropTypes.number,\n\t};\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.renderExclusive) {\n\t\t\tthis.props = this.mergeButtonCfgProps();\n\n\t\t\treturn <ButtonLinkEditBrowse {...this.props} />;\n\t\t} else {\n\t\t\treturn <ButtonLink {...this.props} />;\n\t\t}\n\t}\n\n\t/**\n\t * Requests the link button to be rendered in exclusive mode to allow the creation of a link.\n\t *\n\t * @protected\n\t * @method _requestExclusive\n\t */\n\t_requestExclusive() {\n\t\tthis.props.requestExclusive(ButtonLinkBrowse.key);\n\t}\n}\n\nexport default ButtonProps(ButtonKeystroke(ButtonLinkBrowse));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonOrderedList class provides functionality for creating ordered lists in an editor.\n *\n * @class ButtonOrderedList\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonOrderedList extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonOrderedList\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'numberedlist',\n\t\tstyle: {\n\t\t\telement: 'ol',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default ol\n\t * @memberof ButtonOrderedList\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'ol';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonOrderedList\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.numberedlist}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-ol\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.numberedlist}>\n\t\t\t\t<ButtonIcon symbol=\"list-ol\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonStateClasses(ButtonStyle(ButtonOrderedList))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonOutdentBlock class provides functionality for outdenting blocks.\n *\n * @class ButtonOutdentBlock\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonOutdentBlock extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonOutdentBlock\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'outdent',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default outdentBlock\n\t * @memberof ButtonOutdentBlock\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'outdentBlock';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonOutdentBlock\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.outdent}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-outdent-block\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.outdent}>\n\t\t\t\t<ButtonIcon symbol=\"indent-more\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonOutdentBlock))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonParagraphAlignLeft class provides functionality for aligning a paragraph on left.\n *\n * @class ButtonParagraphAlignLeft\n *\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonParagraphAlignLeft extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphAlignLeft\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifyleft',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default paragraphLeft\n\t * @memberof ButtonParagraphAlignLeft\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'paragraphLeft';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphAlignLeft\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignLeft}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-paragraph-align-left\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignLeft}>\n\t\t\t\t<ButtonIcon symbol=\"align-left\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonParagraphAlignLeft))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonParagraphAlignRight class provides functionality for aligning a paragraph on right.\n *\n * @class ButtonParagraphAlignRight\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonParagraphAlignRight extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphAlignRight\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifyright',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default paragraphRight\n\t * @memberof ButtonParagraphAlignRight\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'paragraphRight';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphAlignRight\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignRight}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-paragraph-align-right\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignRight}>\n\t\t\t\t<ButtonIcon symbol=\"align-right\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonParagraphAlignRight))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonCommandsList from './button-commands-list.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonParagraphAlign class provides functionality to work with table rows.\n *\n * @class ButtonParagraphAlign\n */\nclass ButtonParagraphAlign extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'paragraphAlign';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphAlign\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet buttonCommandsList;\n\t\tlet buttonCommandsListId;\n\n\t\tif (this.props.expanded) {\n\t\t\tbuttonCommandsListId = ButtonParagraphAlign.key + 'List';\n\t\t\tbuttonCommandsList = (\n\t\t\t\t<ButtonCommandsList\n\t\t\t\t\tcommands={this._getCommands()}\n\t\t\t\t\tinlineIcons={false}\n\t\t\t\t\tlistId={buttonCommandsListId}\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst activeCommand = this._getCommands()\n\t\t\t.filter(alignment => {\n\t\t\t\tconst command = editor.getCommand(alignment.command);\n\n\t\t\t\treturn command ? command.state === CKEDITOR.TRISTATE_ON : false;\n\t\t\t})\n\t\t\t.pop();\n\n\t\tconst iconClassName = activeCommand.icon;\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-dropdown ae-container-dropdown-xsmall ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label={activeCommand.label}\n\t\t\t\t\taria-owns={buttonCommandsListId}\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.row}>\n\t\t\t\t\t<div className=\"ae-container\">\n\t\t\t\t\t\t<ButtonIcon symbol={iconClassName} />\n\t\t\t\t\t\t<ButtonIcon symbol=\"caret-bottom\" />\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t\t{buttonCommandsList}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Returns a list of commands. If a list of commands was passed\n\t * as property `commands`, it will take a precedence over the default ones.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphAlign\n\t * @method _getCommands\n\t * @protected\n\t * @return {Array} The list of available commands.\n\t */\n\t_getCommands() {\n\t\treturn (\n\t\t\tthis.props.commands || [\n\t\t\t\t{\n\t\t\t\t\tcommand: 'justifyleft',\n\t\t\t\t\ticon: 'align-left',\n\t\t\t\t\tlabel: AlloyEditor.Strings.alignLeft,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'justifycenter',\n\t\t\t\t\ticon: 'align-center',\n\t\t\t\t\tlabel: AlloyEditor.Strings.alignCenter,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'justifyright',\n\t\t\t\t\ticon: 'align-right',\n\t\t\t\t\tlabel: AlloyEditor.Strings.alignRight,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'justifyblock',\n\t\t\t\t\ticon: 'align-justify',\n\t\t\t\t\tlabel: AlloyEditor.Strings.alignJustify,\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonParagraphAlign;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonParagraphCenter class provides functionality for centering a paragraph.\n *\n * @class ButtonParagraphCenter\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonParagraphCenter extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphCenter\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifycenter',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default paragraphCenter\n\t * @memberof ButtonParagraphCenter\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'paragraphCenter';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphCenter\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignCenter}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-paragraph-center\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignCenter}>\n\t\t\t\t<ButtonIcon symbol=\"align-center\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonParagraphCenter))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonParagraphJustify class provides functionality for justfying a paragraph.\n *\n * @class ButtonParagraphJustify\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonParagraphJustify extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphJustify\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifyblock',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default paragraphJustify\n\t * @memberof ButtonParagraphJustify\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'paragraphJustify';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphJustify\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignJustify}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-paragraph-justify\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignJustify}>\n\t\t\t\t<ButtonIcon symbol=\"align-justify\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonParagraphJustify))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonQuote class wraps a selection in `blockquote` element.\n *\n * @class ButtonQuote\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonQuote extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonQuote\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'blockquote',\n\t\tstyle: {\n\t\t\telement: 'blockquote',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default quote\n\t * @memberof ButtonQuote\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'quote';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonQuote\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.quote}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-quote\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.quote}>\n\t\t\t\t<ButtonIcon symbol=\"quote-right\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(ButtonStateClasses(ButtonStyle(ButtonQuote)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonRemoveFormat class removes style formatting.\n *\n * @class ButtonRemoveFormat\n * @uses ButtonCommand\n */\nclass ButtonRemoveFormat extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonRemoveFormat\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'removeFormat',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default removeFormat\n\t * @memberof ButtonRemoveFormat\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'removeFormat';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonRemoveFormat\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.removeformat}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tdata-type=\"button-removeformat\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.removeformat}>\n\t\t\t\t<ButtonIcon symbol=\"remove-style\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(ButtonRemoveFormat);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonRemoveImage class removes an image using a CKEDITOR.command.\n *\n * @class ButtonRemoveImage\n * @uses ButtonCommand\n */\nclass ButtonRemoveImage extends React.Component {\n\tstatic defaultProps = {\n\t\tcommand: 'removeImage',\n\t};\n\n\tstatic key = 'removeImage';\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.removeImage}\n\t\t\t\taria-pressed={false}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttitle={AlloyEditor.Strings.removeImage}>\n\t\t\t\t<ButtonIcon symbol=\"times-circle\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(ButtonRemoveImage);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\n/**\n * The ButtonSeparator function renders a simple separator.\n */\nfunction ButtonSeparator(_props) {\n\treturn <span className=\"ae-separator\" />;\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default separator\n * @memberof ButtonSeparator\n * @property {String} key\n * @static\n */\nButtonSeparator.key = 'separator';\n\nexport default ButtonSeparator;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonStylesList from './button-styles-list.jsx';\n\n/**\n * The ButtonSpacing class provides functionality for changing text spacing in a document.\n *\n * @class ButtonSpacing\n */\nclass ButtonSpacing extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'spacing';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Indicates whether the styles list is expanded or not.\n\t\t *\n\t\t * @instance\n\t\t * @memberof Spacing\n\t\t * @property {Boolean} expanded\n\t\t */\n\t\texpanded: PropTypes.bool,\n\n\t\t/**\n\t\t * The label that should be used for accessibility purposes.\n\t\t *\n\t\t * @instance\n\t\t * @memberof Spacing\n\t\t * @property {String} label\n\t\t */\n\t\tlabel: PropTypes.string,\n\n\t\t/**\n\t\t * Indicates whether the remove styles item should appear in the styles list.\n\t\t *\n\t\t * @instance\n\t\t * @memberof Spacing\n\t\t * @property {Boolean} showRemoveStylesItem\n\t\t */\n\t\tshowRemoveStylesItem: PropTypes.bool,\n\n\t\t/**\n\t\t * List of the styles the button is able to handle.\n\t\t *\n\t\t * @instance\n\t\t * @memberof Spacing\n\t\t * @property {Array} styles\n\t\t */\n\t\tstyles: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/**\n\t\t * The tabIndex of the button in its toolbar current state. A value other than -1\n\t\t * means that the button has focus and is the active element.\n\t\t *\n\t\t * @instance\n\t\t * @memberof Spacing\n\t\t * @property {Number} tabIndex\n\t\t */\n\t\ttabIndex: PropTypes.number,\n\n\t\t/**\n\t\t * Callback provided by the button host to notify when the styles list has been expanded.\n\t\t *\n\t\t * @instance\n\t\t * @memberof Spacing\n\t\t * @property {Function} toggleDropdown\n\t\t */\n\t\ttoggleDropdown: PropTypes.func,\n\t};\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet activeSpacing = '1.0x';\n\n\t\tconst spacings = this._getSpacings();\n\n\t\tspacings.forEach(item => {\n\t\t\tif (this._checkActive(item.style)) {\n\t\t\t\tactiveSpacing = item.name;\n\t\t\t}\n\t\t});\n\n\t\tconst {editor, expanded, tabIndex, toggleDropdown} = this.props;\n\n\t\tconst buttonStylesProps = {\n\t\t\tactiveStyle: activeSpacing,\n\t\t\teditor,\n\t\t\tonDismiss: toggleDropdown,\n\t\t\tshowRemoveStylesItem: false,\n\t\t\tstyles: spacings,\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"ae-container ae-container-dropdown-small ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={expanded}\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={tabIndex}>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<ButtonIcon symbol=\"separator\" />\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t{activeSpacing}\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t\t{expanded && <ButtonStylesList {...buttonStylesProps} />}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t_applyStyle(className) {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst styleConfig = {\n\t\t\telement: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: className,\n\t\t\t},\n\t\t};\n\n\t\tconst style = new CKEDITOR.style(styleConfig);\n\n\t\teditor.getSelection().lock();\n\n\t\tthis._getSpacings().forEach(item => {\n\t\t\tif (this._checkActive(item.style)) {\n\t\t\t\teditor.removeStyle(new CKEDITOR.style(item.style));\n\t\t\t}\n\t\t});\n\n\t\teditor.applyStyle(style);\n\n\t\teditor.getSelection().unlock();\n\n\t\teditor.fire('actionPerformed', this);\n\t}\n\n\t/**\n\t * Checks if the given spacing definition is applied to the current selection in the editor.\n\t *\n\t * @instance\n\t * @memberof Spacing\n\t * @method _checkActive\n\t * @param {Object} styleConfig Spacing definition as per http://docs.ckeditor.com/#!/api/CKEDITOR.style.\n\t * @protected\n\t * @return {Boolean} Returns true if the spacing is applied to the selection, false otherwise.\n\t */\n\t_checkActive(styleConfig) {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\tlet active = true;\n\n\t\tconst elementPath = nativeEditor.elementPath();\n\n\t\tif (elementPath && elementPath.lastElement) {\n\t\t\tstyleConfig.attributes.class.split(' ').forEach(className => {\n\t\t\t\tactive = active && elementPath.lastElement.hasClass(className);\n\t\t\t});\n\t\t} else {\n\t\t\tactive = false;\n\t\t}\n\n\t\treturn active;\n\t}\n\n\t/**\n\t * Returns an array of spacings. Each spacing consists from three properties:\n\t * - name - the style name, for example \"default\"\n\t * - style - an object with one property, called `element` which value\n\t * represents the style which have to be applied to the element.\n\t * - styleFn - a function which applies selected style to the editor selection\n\t *\n\t * @instance\n\t * @memberof Spacing\n\t * @method _getSpacings\n\t * @protected\n\t * @return {Array<object>} An array of objects containing the spacings.\n\t */\n\t_getSpacings() {\n\t\treturn (\n\t\t\tthis.props.styles || [\n\t\t\t\t{\n\t\t\t\t\tname: '1.0x',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'div',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: '',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, ''),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: '1.5x',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'div',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'mt-1 mb-1',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'mt-1 mb-1'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: '2.0x',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'div',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'mt-2 mb-2',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'mt-2 mb-2'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: '3.0x',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'div',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'mt-3 mb-3',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'mt-3 mb-3'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: '4.0x',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'div',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'mt-4 mb-4',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'mt-4 mb-4'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: '5.0x',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'div',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'mt-5 mb-5',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'mt-5 mb-5'),\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonSpacing;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonStrike class styles a selection with strike style.\n *\n * @class ButtonStrike\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonStrike extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonStrike\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'strike',\n\t\tstyle: 'coreStyles_strike',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default strike\n\t * @memberof ButtonStrike\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'strike';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t * @instance\n\t * @memberof ButtonStrike\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.strike}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-strike\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.strike}>\n\t\t\t\t<ButtonIcon symbol=\"strikethrough\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(ButtonStateClasses(ButtonStyle(ButtonStrike)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonStylesList from './button-styles-list.jsx';\n\n/**\n * The ButtonStyles class provides functionality for styling a selection with a list of\n * configurable and customizable styles. The allowed styles follow CKEDITOR.Style configuration\n * (http://docs.ckeditor.com/#!/api/CKEDITOR.style)\n *\n * @class ButtonStyles\n */\nclass ButtonStyles extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default styles\n\t * @memberof ButtonStyles\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'styles';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonStyles\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet activeStyle = AlloyEditor.Strings.normal;\n\n\t\tconst styles = this._getStyles();\n\n\t\tstyles.forEach(item => {\n\t\t\tif (this._checkActive(item.style)) {\n\t\t\t\tactiveStyle = item.name;\n\t\t\t}\n\t\t});\n\n\t\tlet buttonStylesList;\n\n\t\tif (this.props.expanded) {\n\t\t\tbuttonStylesList = (\n\t\t\t\t<ButtonStylesList\n\t\t\t\t\tactiveStyle={activeStyle}\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t\tshowRemoveStylesItem={this.props.showRemoveStylesItem}\n\t\t\t\t\tstyles={styles}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-dropdown ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label={AlloyEditor.Strings.styles + ' ' + activeStyle}\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.styles + ' ' + activeStyle}>\n\t\t\t\t\t<div className=\"ae-container\">\n\t\t\t\t\t\t<span className=\"ae-container-dropdown-selected-item\">\n\t\t\t\t\t\t\t{activeStyle}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<ButtonIcon symbol=\"caret-bottom\" />\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t\t{buttonStylesList}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Checks if the given style definition is applied to the current selection in the editor.\n\t *\n\t * @instance\n\t * @memberof ButtonStyles\n\t * @method _checkActive\n\t * @param {Object} styleConfig Style definition as per http://docs.ckeditor.com/#!/api/CKEDITOR.style.\n\t * @protected\n\t * @return {Boolean} Returns true if the style is applied to the selection, false otherwise.\n\t */\n\t_checkActive(styleConfig) {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\t// Styles with wildcard element (*) won't be considered active by CKEditor. Defaulting\n\t\t// to a 'span' element works for most of those cases with no defined element.\n\t\tstyleConfig = CKEDITOR.tools.merge({element: 'span'}, styleConfig);\n\n\t\tconst style = new CKEDITOR.style(styleConfig);\n\n\t\treturn style.checkActive(nativeEditor.elementPath(), nativeEditor);\n\t}\n\n\t/**\n\t * Returns an array of styles. Each style consists from two properties:\n\t * - name - the style name, for example \"h1\"\n\t * - style - an object with one property, called `element` which value\n\t * represents the style which have to be applied to the element.\n\t *\n\t * @instance\n\t * @memberof ButtonStyles\n\t * @method _getStyles\n\t * @protected\n\t * @return {Array<object>} An array of objects containing the styles.\n\t */\n\t_getStyles() {\n\t\treturn (\n\t\t\tthis.props.styles || [\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.h1,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'h1',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.h2,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'h2',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.formatted,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'pre',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.cite,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'cite',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.code,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'code',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonStyles;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonSubscript class provides functionality for applying subscript style to a text selection.\n *\n * @class ButtonSubscript\n *\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonSubscript extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonSubscript\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'subscript',\n\t\tstyle: 'coreStyles_subscript',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default subscript\n\t * @memberof ButtonSubscript\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'subscript';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonSubscript\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.subscript}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-subscript\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.subscript}>\n\t\t\t\t<ButtonIcon symbol=\"subscript\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(ButtonStateClasses(ButtonStyle(ButtonSubscript)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonSuperscript class provides functionality for applying superscript style to a text selection.\n *\n * @class ButtonSuperscript\n *\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonSuperscript extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonSuperscript\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'superscript',\n\t\tstyle: 'coreStyles_superscript',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default superscript\n\t * @memberof ButtonSuperscript\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'superscript';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonSuperscript\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.superscript}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-superscript\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.superscript}>\n\t\t\t\t<ButtonIcon symbol=\"superscript\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonStateClasses(ButtonStyle(ButtonSuperscript))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommandsList from './button-commands-list.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonTableCell class provides functionality to work with table cells.\n *\n * @class ButtonTableCell\n */\nclass ButtonTableCell extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default tableCell\n\t * @memberof ButtonTableCell\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'tableCell';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTableCell\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet buttonCommandsList;\n\t\tlet buttonCommandsListId;\n\n\t\tif (this.props.expanded) {\n\t\t\tbuttonCommandsListId = ButtonTableCell.key + 'List';\n\t\t\tbuttonCommandsList = (\n\t\t\t\t<ButtonCommandsList\n\t\t\t\t\tcommands={this._getCommands()}\n\t\t\t\t\tlistId={buttonCommandsListId}\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label={AlloyEditor.Strings.cell}\n\t\t\t\t\taria-owns={buttonCommandsListId}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.cell}>\n\t\t\t\t\t<ButtonIcon symbol=\"add-cell\" />\n\t\t\t\t</button>\n\t\t\t\t{buttonCommandsList}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Returns a list of commands. If a list of commands was passed\n\t * as property `commands`, it will take a precedence over the default ones.\n\t *\n\t * @instance\n\t * @memberof ButtonTableCell\n\t * @method _getCommands\n\t * @protected\n\t * @return {Array} The list of available commands.\n\t */\n\t_getCommands() {\n\t\treturn (\n\t\t\tthis.props.commands || [\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellInsertBefore',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellInsertBefore,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellInsertAfter',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellInsertAfter,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellDelete',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellDelete,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellMerge',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellMerge,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellMergeDown',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellMergeDown,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellMergeRight',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellMergeRight,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellHorizontalSplit',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellSplitHorizontal,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellVerticalSplit',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellSplitVertical,\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonTableCell;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommandsList from './button-commands-list.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonTableColumn class provides functionality to work with table columns.\n *\n * @class ButtonTableColumn\n */\nclass ButtonTableColumn extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default tableColumn\n\t * @memberof ButtonTableColumn\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'tableColumn';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTableColumn\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet buttonCommandsList;\n\t\tlet buttonCommandsListId;\n\n\t\tif (this.props.expanded) {\n\t\t\tbuttonCommandsListId = ButtonTableColumn.key + 'List';\n\t\t\tbuttonCommandsList = (\n\t\t\t\t<ButtonCommandsList\n\t\t\t\t\tcommands={this._getCommands()}\n\t\t\t\t\tlistId={buttonCommandsListId}\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label={AlloyEditor.Strings.column}\n\t\t\t\t\taria-owns={buttonCommandsListId}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\trole=\"listbox\"\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.column}>\n\t\t\t\t\t<ButtonIcon symbol=\"add-column\" />\n\t\t\t\t</button>\n\t\t\t\t{buttonCommandsList}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Returns a list of commands. If a list of commands was passed\n\t * as property `commands`, it will take a precedence over the default ones.\n\t *\n\t * @instance\n\t * @memberof ButtonTableColumn\n\t * @method _getCommands\n\t * @protected\n\t * @return {Array} The list of available commands.\n\t */\n\t_getCommands() {\n\t\treturn (\n\t\t\tthis.props.commands || [\n\t\t\t\t{\n\t\t\t\t\tcommand: 'columnInsertBefore',\n\t\t\t\t\tlabel: AlloyEditor.Strings.columnInsertBefore,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'columnInsertAfter',\n\t\t\t\t\tlabel: AlloyEditor.Strings.columnInsertAfter,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'columnDelete',\n\t\t\t\t\tlabel: AlloyEditor.Strings.columnDelete,\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonTableColumn;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonCommandsList from './button-commands-list.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonTableHeading class provides functionality to work with table heading.\n *\n * @class ButtonTableHeading\n */\nclass ButtonTableHeading extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default tableRow\n\t * @memberof ButtonTableHeading\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'tableHeading';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTableHeading\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet buttonCommandsList;\n\t\tlet buttonCommandsListId;\n\n\t\tif (this.props.expanded) {\n\t\t\tbuttonCommandsListId = ButtonTableHeading.key + 'List';\n\t\t\tbuttonCommandsList = (\n\t\t\t\t<ButtonCommandsList\n\t\t\t\t\tcommands={this._getCommands()}\n\t\t\t\t\tlistId={buttonCommandsListId}\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\tconst activeHeading = new CKEDITOR.Table(\n\t\t\tthis.context.editor.get('nativeEditor')\n\t\t).getHeading();\n\t\tconst activeHeadingIntro = AlloyEditor.Strings.headers + ':';\n\t\tconst activeHeadingLabel =\n\t\t\tAlloyEditor.Strings['headers' + activeHeading];\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-dropdown-xl ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label=\"\"\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle=\"\">\n\t\t\t\t\t<div className=\"ae-container\">\n\t\t\t\t\t\t<span className=\"ae-container-dropdown-selected-item\">\n\t\t\t\t\t\t\t{activeHeadingIntro}{' '}\n\t\t\t\t\t\t\t<strong>{activeHeadingLabel}</strong>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<ButtonIcon symbol=\"caret-bottom\" />\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t\t{buttonCommandsList}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Returns a list of commands. If a list of commands was passed\n\t * as property `commands`, it will take a precedence over the default ones.\n\t *\n\t * @instance\n\t * @memberof ButtonTableHeading\n\t * @method _getCommands\n\t * @protected\n\t * @return {Array} The list of available commands.\n\t */\n\t_getCommands() {\n\t\treturn (\n\t\t\tthis.props.commands || [\n\t\t\t\t{\n\t\t\t\t\tcommand: 'tableHeadingNone',\n\t\t\t\t\tlabel: AlloyEditor.Strings.headersNone,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'tableHeadingRow',\n\t\t\t\t\tlabel: AlloyEditor.Strings.headersRow,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'tableHeadingColumn',\n\t\t\t\t\tlabel: AlloyEditor.Strings.headersColumn,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'tableHeadingBoth',\n\t\t\t\t\tlabel: AlloyEditor.Strings.headersBoth,\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonTableHeading;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonTableRemove class provides functionality for removing a table\n *\n * @class ButtonTableRemove\n */\nclass ButtonTableRemove extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default tableRemove\n\t * @memberof ButtonTableRemove\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'tableRemove';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTableRemove\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.deleteTable}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tdata-type=\"button-table-remove\"\n\t\t\t\tonClick={this._removeTable}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.deleteTable}>\n\t\t\t\t<ButtonIcon symbol=\"trash\" />\n\t\t\t</button>\n\t\t);\n\t}\n\n\t/**\n\t * Removes the table in the editor element.\n\t *\n\t * @instance\n\t * @memberof ButtonTableRemove\n\t * @method _removeTable\n\t * @protected\n\t */\n\t_removeTable = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\tconst tableUtils = new CKEDITOR.Table(editor);\n\n\t\ttableUtils.remove();\n\n\t\teditor.fire('actionPerformed', this);\n\t};\n}\n\nexport default ButtonTableRemove;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommandsList from './button-commands-list.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonTableRow class provides functionality to work with table rows.\n *\n * @class ButtonTableRow\n */\nclass ButtonTableRow extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default tableRow\n\t * @memberof ButtonTableRow\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'tableRow';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTableRow\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet buttonCommandsList;\n\t\tlet buttonCommandsListId;\n\n\t\tif (this.props.expanded) {\n\t\t\tbuttonCommandsListId = ButtonTableRow.key + 'List';\n\t\t\tbuttonCommandsList = (\n\t\t\t\t<ButtonCommandsList\n\t\t\t\t\tcommands={this._getCommands()}\n\t\t\t\t\tlistId={buttonCommandsListId}\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label={AlloyEditor.Strings.row}\n\t\t\t\t\taria-owns={buttonCommandsListId}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.row}>\n\t\t\t\t\t<ButtonIcon symbol=\"add-row\" />\n\t\t\t\t</button>\n\t\t\t\t{buttonCommandsList}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Returns a list of commands. If a list of commands was passed\n\t * as property `commands`, it will take a precedence over the default ones.\n\t *\n\t * @instance\n\t * @memberof ButtonTableRow\n\t * @method _getCommands\n\t * @protected\n\t * @return {Array} The list of available commands.\n\t */\n\t_getCommands() {\n\t\treturn (\n\t\t\tthis.props.commands || [\n\t\t\t\t{\n\t\t\t\t\tcommand: 'rowInsertBefore',\n\t\t\t\t\tlabel: AlloyEditor.Strings.rowInsertBefore,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'rowInsertAfter',\n\t\t\t\t\tlabel: AlloyEditor.Strings.rowInsertAfter,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'rowDelete',\n\t\t\t\t\tlabel: AlloyEditor.Strings.rowDelete,\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonTableRow;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonTableEdit from './button-table-edit.jsx';\n\n/**\n * The ButtonTable class provides functionality for creating and editing a table in a document. ButtonTable\n * renders in two different modes:\n *\n * - Normal: Just a button that allows to switch to the edition mode\n * - Exclusive: The ButtonTableEdit UI with all the table edition controls.\n *\n * @class ButtonTable\n */\nclass ButtonTable extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default table\n\t * @memberof ButtonTable\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'table';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTable\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.renderExclusive) {\n\t\t\treturn <ButtonTableEdit {...this.props} />;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.table}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdata-type=\"button-table\"\n\t\t\t\t\tonClick={this.props.requestExclusive}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.table}>\n\t\t\t\t\t<ButtonIcon symbol=\"table\" />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default ButtonTable;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\nconst MAX_TWEET_LENGTH = 280;\n\n/**\n * The ButtonTwitter class provides functionality for creating a link which\n * allows people to tweet part of the content in the editor.\n *\n * @class ButtonTwitter\n * @uses ButtonStateClasses\n */\nclass ButtonTwitter extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default twitter\n\t * @memberof ButtonTwitter\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'twitter';\n\n\t/**\n\t * Creates or removes the twitter link on the selection.\n\t *\n\t * @instance\n\t * @memberof ButtonTwitter\n\t * @method handleClick\n\t */\n\thandleClick = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst linkUtils = new CKEDITOR.Link(editor);\n\n\t\tif (this.isActive()) {\n\t\t\tlinkUtils.remove(linkUtils.getFromSelection());\n\t\t} else {\n\t\t\tlinkUtils.create(this._getHref(), {\n\t\t\t\tclass: 'ae-twitter-link',\n\t\t\t\ttarget: '_blank',\n\t\t\t});\n\t\t}\n\n\t\teditor.fire('actionPerformed', this);\n\t};\n\n\t/**\n\t * Checks if the current selection is contained within a link that points to twitter.com/intent/tweet.\n\t *\n\t * @instance\n\t * @memberof ButtonTwitter\n\t * @method isActive\n\t * @return {Boolean} True if the selection is inside a twitter link, false otherwise.\n\t */\n\tisActive() {\n\t\tconst link = new CKEDITOR.Link(\n\t\t\tthis.context.editor.get('nativeEditor')\n\t\t).getFromSelection();\n\n\t\treturn (\n\t\t\tlink &&\n\t\t\tlink.getAttribute('href').indexOf('twitter.com/intent/tweet') !== -1\n\t\t);\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTwitter\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.twitter}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-twitter\"\n\t\t\t\tonClick={this.handleClick}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.twitter}>\n\t\t\t\t<ButtonIcon symbol=\"twitter\" />\n\t\t\t</button>\n\t\t);\n\t}\n\n\t/**\n\t * Generates the appropriate twitter url based on the selected text and the configuration\n\t * options received via props.\n\t *\n\t * @instance\n\t * @memberof ButtonTwitter\n\t * @method _getHref\n\t * @protected\n\t * @return {String} A valid twitter url with the selected text and given configuration.\n\t */\n\t_getHref() {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\t\tconst selectedText = nativeEditor\n\t\t\t.getSelection()\n\t\t\t.getSelectedText()\n\t\t\t.substring(0, MAX_TWEET_LENGTH);\n\t\tconst url = this.props.url;\n\t\tconst via = this.props.via;\n\t\tlet twitterHref =\n\t\t\t'https://twitter.com/intent/tweet?text=' + selectedText;\n\n\t\tif (url) {\n\t\t\ttwitterHref += '&url=' + url;\n\t\t}\n\n\t\tif (via) {\n\t\t\ttwitterHref += '&via=' + via;\n\t\t}\n\n\t\treturn twitterHref;\n\t}\n}\n\nexport default ButtonStateClasses(ButtonTwitter);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonUnorderedlist class provides functionality for creating unordered lists in an editor.\n *\n * @class ButtonUnorderedlist\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonUnorderedlist extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonUnorderedlist\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'bulletedlist',\n\t\tstyle: {\n\t\t\telement: 'ul',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default ul\n\t * @memberof ButtonUnorderedlist\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'ul';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonUnorderedlist\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.bulletedlist}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-ul\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.bulletedlist}>\n\t\t\t\t<ButtonIcon symbol=\"list-ul\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonStateClasses(ButtonStyle(ButtonUnorderedlist))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonKeystroke from '../base/button-keystroke';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonUnderline class provides functionality for underlying a text selection.\n *\n * @class ButtonUnderline\n * @uses ButtonCommand\n * @uses ButtonKeystroke\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonUnderline extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonUnderline\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'underline',\n\t\tkeystroke: {\n\t\t\tfn: 'execCommand',\n\t\t\tkeys: CKEDITOR.CTRL + 85 /* U*/,\n\t\t\tname: 'underline',\n\t\t},\n\t\tstyle: 'coreStyles_underline',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default underline\n\t * @memberof ButtonUnderline\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'underline';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonUnderline\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.underline}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-underline\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.underline}>\n\t\t\t\t<ButtonIcon symbol=\"underline\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonKeystroke(ButtonStateClasses(ButtonStyle(ButtonUnderline)))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nexport {default as ButtonActionStyle} from './button-action-style';\nexport {default as ButtonCommandActive} from './button-command-active';\nexport {default as ButtonCommand} from './button-command';\nexport {default as ButtonKeystroke} from './button-keystroke';\nexport {default as ButtonProps} from './button-props';\nexport {default as ButtonStateClasses} from './button-state-classes';\nexport {default as ButtonStyle} from './button-style';\nexport {default as ToolbarButtons} from './toolbar-buttons';\nexport {default as WidgetArrowBox} from './widget-arrow-box';\nexport {default as WidgetDropdown} from './widget-dropdown';\nexport {default as WidgetExclusive} from './widget-exclusive';\nexport {default as WidgetFocusManager} from './widget-focus-manager';\nexport {default as WidgetInteractionPoint} from './widget-interaction-point';\nexport {default as WidgetPosition} from './widget-position';\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonActionStyle is a mixin that provides applying style\n * implementation for a button based on the `applyStyle` and\n * `removeStyle` API of CKEDITOR.\n *\n * To execute properly, the component has to expose the following\n * methods which can be obtained out of the box using the {{#crossLink\n * \"ButtonStyle\"}}{{/crossLink}} mixin:\n * - `Function` {{#crossLink \"ButtonStyle/isActive\"}}{{/crossLink}} to\n *    check the active state\n * - `Function` {{#crossLink \"ButtonStyle/getStyle\"}}{{/crossLink}} to\n *    return the style that should be applied\n *\n * @class ButtonActionStyle\n */\nconst ButtonActionStyle = {\n\t/**\n\t * Removes or applies the component style to the current selection.\n\t *\n\t * @instance\n\t * @memberof ButtonActionStyle\n\t * @method applyStyle\n\t */\n\tapplyStyle() {\n\t\tif (Lang.isFunction(this.isActive) && Lang.isFunction(this.getStyle)) {\n\t\t\tconst editor = this.props.editor.get('nativeEditor');\n\n\t\t\teditor.getSelection().lock();\n\n\t\t\tif (this.isActive()) {\n\t\t\t\teditor.removeStyle(this.getStyle());\n\t\t\t} else {\n\t\t\t\teditor.applyStyle(this.getStyle());\n\t\t\t}\n\n\t\t\teditor.getSelection().unlock();\n\n\t\t\teditor.fire('actionPerformed', this);\n\t\t}\n\t},\n};\n\nexport default ButtonActionStyle;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * ButtonCommandActive is a mixin that provides an `isActive` method to\n * determine if a context-aware command is currently in an active state.\n *\n * @class ButtonCommandActive\n */\nconst ButtonCommandActive = {\n\t/**\n\t * Checks if the command is active in the current selection.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandActive\n\t * @method isActive\n\t * @return {Boolean} True if the command is active, false otherwise.\n\t */\n\tisActive() {\n\t\tconst editor = this.props.editor.get('nativeEditor');\n\n\t\tconst command = editor.getCommand(this.props.command);\n\n\t\treturn command ? command.state === CKEDITOR.TRISTATE_ON : false;\n\t},\n};\n\nexport default ButtonCommandActive;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\n\n/**\n * ButtonCommand is a mixin that executes a command via CKEDITOR's API.\n *\n * @class ButtonCommand\n */\nconst ButtonCommand = {\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * The command that should be executed.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonCommand\n\t\t * @property {String} command\n\t\t */\n\t\tcommand: PropTypes.string.isRequired,\n\n\t\t/**\n\t\t * Indicates that the command may cause the editor to have a different.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonCommand\n\t\t * @property {boolean} modifiesSelection\n\t\t */\n\t\tmodifiesSelection: PropTypes.bool,\n\t},\n\n\t/**\n\t * Executes a CKEditor command and fires `actionPerformed` event.\n\t *\n\t * @instance\n\t * @memberof ButtonCommand\n\t * @param {Object=} data Optional data to be passed to CKEDITOR's `execCommand` method.\n\t * @method execCommand\n\t */\n\texecCommand(data) {\n\t\tconst editor = this.props.editor.get('nativeEditor');\n\n\t\teditor.execCommand(this.props.command, data);\n\n\t\tif (this.props.modifiesSelection) {\n\t\t\teditor.selectionChange(true);\n\t\t}\n\n\t\teditor.fire('actionPerformed', this);\n\t},\n};\n\nexport default ButtonCommand;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\n\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonKeystroke is a mixin that provides a `keystroke` prop that allows configuring\n * a function of the instance to be invoked upon the keystroke activation.\n *\n * @class ButtonKeystroke\n */\nconst ButtonKeystroke = {\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * The keystroke definition. An object with the following properties:\n\t\t * - fn: The function to be executed\n\t\t * - keys: The keystroke definition, as expected by http://docs.ckeditor.com/#!/api/CKEDITOR.editor-method-setKeystroke\n\t\t * - name: The name for the CKEditor command that will be created. If empty,\n\t\t * a random name will be created on the fly\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonKeystroke\n\t\t * @property {Object} keystroke\n\t\t */\n\t\tkeystroke: PropTypes.object.isRequired,\n\t},\n\n\t/**\n\t * Lifecycle. Invoked once, both on the client and server, immediately before the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ButtonKeystroke\n\t * @method componentWillMount\n\t */\n\tcomponentWillMount() {\n\t\tconst nativeEditor = this.props.editor.get('nativeEditor');\n\t\tconst keystroke = this.props.keystroke;\n\n\t\tconst commandName =\n\t\t\tkeystroke.name || ((Math.random() * 1e9) >>> 0).toString();\n\n\t\tlet command = nativeEditor.getCommand(commandName);\n\n\t\tif (!command) {\n\t\t\tcommand = new CKEDITOR.command(nativeEditor, {\n\t\t\t\texec: function(editor) {\n\t\t\t\t\tconst keystrokeFn = keystroke.fn;\n\n\t\t\t\t\tif (Lang.isString(keystrokeFn)) {\n\t\t\t\t\t\tthis[keystrokeFn].call(this, editor);\n\t\t\t\t\t} else if (Lang.isFunction(keystrokeFn)) {\n\t\t\t\t\t\tkeystrokeFn.call(this, editor);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this),\n\t\t\t});\n\n\t\t\tnativeEditor.addCommand(commandName, command);\n\t\t}\n\n\t\tthis._defaultKeystrokeCommand =\n\t\t\tnativeEditor.keystrokeHandler.keystrokes[keystroke.keys];\n\n\t\tnativeEditor.setKeystroke(keystroke.keys, commandName);\n\t},\n\n\t/**\n\t * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n\t *\n\t * @instance\n\t * @memberof ButtonKeystroke\n\t * @method componentWillUnmount\n\t */\n\tcomponentWillUnmount() {\n\t\tthis.props.editor\n\t\t\t.get('nativeEditor')\n\t\t\t.setKeystroke(\n\t\t\t\tthis.props.keystroke.keys,\n\t\t\t\tthis._defaultKeystrokeCommand\n\t\t\t);\n\t},\n};\n\nexport default ButtonKeystroke;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\n\nimport ButtonLinkEdit from '../buttons/button-link-edit.jsx';\n\n/**\n * ButtonProps is a mixin that provides a style prop and some methods to apply the resulting\n * style and checking if it is present in a given path or selection.\n *\n * @class ButtonProps\n */\nconst ButtonProps = {\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * The editor instance where the component is being used.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonProps\n\t\t * @property {Object} editor\n\t\t */\n\t\teditor: PropTypes.object.isRequired,\n\t},\n\n\t/**\n\t * Merges the properties, passed to the current component with user's configuration\n\t * via `buttonCfg` property.\n\t *\n\t * @instance\n\t * @memberof ButtonProps\n\t * @method mergeButtonCfgProps\n\t * @param {Object} props The properties to be merged with the provided configuration for this\n\t * button. If not passed, the user configuration will be merged with `this.props`\n\t * @return {Object} The merged properties\n\t */\n\tmergeButtonCfgProps(props) {\n\t\tprops = props || this.props;\n\n\t\tconst nativeEditor = this.props.editor.get('nativeEditor');\n\t\tconst buttonCfg = nativeEditor.config.buttonCfg || {};\n\t\tconst result = CKEDITOR.tools.merge(\n\t\t\tprops,\n\t\t\tbuttonCfg[ButtonLinkEdit.key]\n\t\t);\n\n\t\treturn result;\n\t},\n};\n\nexport default ButtonProps;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonStateClasses is a mixin that decorates the domElement of a component\n * with different CSS classes based on the current state of the element.\n *\n * To check for state, the component can expose the following methods:\n * - `Function` **isActive** to check the active state\n * - `Function` **isDisabled** to check the disabled state\n *\n * @class ButtonStateClasses\n */\nconst ButtonStateClasses = {\n\t/**\n\t * Returns the list of state classes associated to the current element's state, according\n\t * to the results of the isActive and isDisabled methods.\n\t *\n\t * @instance\n\t * @memberof ButtonStateClasses\n\t * @method getStateClasses\n\t * @return {String} A string with the state CSS classes.\n\t */\n\tgetStateClasses() {\n\t\tlet stateClasses = '';\n\n\t\t// Check for active state\n\t\tif (Lang.isFunction(this.isActive) && this.isActive()) {\n\t\t\tstateClasses += 'ae-button-pressed';\n\t\t}\n\n\t\t// Check for disabled state\n\t\tif (Lang.isFunction(this.isDisabled) && this.isDisabled()) {\n\t\t\tstateClasses += ' ae-button-disabled';\n\t\t}\n\n\t\treturn stateClasses;\n\t},\n};\n\nexport default ButtonStateClasses;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\n\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonStyle is a mixin that provides a style prop and some methods to\n * apply the resulting style and checking if it is present in a given\n * path or selection.\n *\n * @class ButtonStyle\n */\nconst ButtonStyle = {\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * The style the button should handle. Allowed values are:\n\t\t * - Object as described by\n\t\t *   http://docs.ckeditor.com/#!/api/CKEDITOR.style.\n\t\t * - String pointing to an object inside the editor instance\n\t\t *   configuration. For example, `style = 'coreStyles_bold'` will\n\t\t *   try to retrieve the style object from\n\t\t *   `editor.config.coreStyles_bold`. Nested properties such as\n\t\t *   `style = 'myplugin.myConfig.myStyle'` are also supported\n\t\t *   and will try to retrieve the style object from the editor\n\t\t *   configuration as well.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStyle\n\t\t * @property {Object|String} style\n\t\t */\n\t\tstyle: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n\n\t\t/**\n\t\t * The style function the button should handle.\n\t\t * If specified, style function has higher priority than style property.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStyle\n\t\t * @property {function} styleFn\n\t\t */\n\t\tstyleFn: PropTypes.func,\n\t},\n\n\t/**\n\t * Lifecycle. Invoked once, both on the client and server,\n\t * immediately before the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ButtonStyle\n\t * @method componentWillMount\n\t */\n\tcomponentWillMount() {\n\t\tlet style = this.props.style;\n\n\t\tif (Lang.isString(style)) {\n\t\t\tconst parts = style.split('.');\n\t\t\tlet currentMember = this.props.editor.get('nativeEditor').config;\n\t\t\tlet property = parts.shift();\n\n\t\t\twhile (\n\t\t\t\tproperty &&\n\t\t\t\tLang.isObject(currentMember) &&\n\t\t\t\tLang.isObject(currentMember[property])\n\t\t\t) {\n\t\t\t\tcurrentMember = currentMember[property];\n\t\t\t\tproperty = parts.shift();\n\t\t\t}\n\n\t\t\tif (Lang.isObject(currentMember)) {\n\t\t\t\tstyle = currentMember;\n\t\t\t}\n\t\t}\n\n\t\tthis._style = new CKEDITOR.style(style);\n\t},\n\n\t/**\n\t * Lifecycle. Invoked immediately before a component is unmounted\n\t * from the DOM.\n\t *\n\t * @instance\n\t * @memberof ButtonStyle\n\t * @method componentWillUnmount\n\t */\n\tcomponentWillUnmount() {\n\t\tthis._style = null;\n\t},\n\n\t/**\n\t * Returns instance of CKEDITOR.style which represents the current\n\t * button style.\n\t *\n\t * @instance\n\t * @memberof ButtonStyle\n\t * @method getStyle\n\t * @return {CKEDITOR.style} The current style representation.\n\t */\n\tgetStyle() {\n\t\treturn this._style;\n\t},\n\n\t/**\n\t * Checks if style is active in the current selection.\n\t *\n\t * @instance\n\t * @memberof ButtonStyle\n\t * @method isActive\n\t * @return {Boolean} True if style is active, false otherwise.\n\t */\n\tisActive() {\n\t\tconst editor = this.props.editor.get('nativeEditor');\n\n\t\tconst elementPath = editor.elementPath();\n\n\t\treturn this.getStyle().checkActive(elementPath, editor);\n\t},\n};\n\nexport default ButtonStyle;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport Lang from '../../oop/lang';\n\n/**\n * ToolbarButtons is a mixin which provides a list of buttons which have\n * to be displayed on the current toolbar depending on user preferences\n * and given state.\n *\n * @class ToolbarButtons\n */\nconst ToolbarButtons = {\n\t/**\n\t * Analyses the current selection and returns the buttons or button\n\t * groups to be rendered.\n\t *\n\t * @instance\n\t * @method getToolbarButtonGroups\n\t * @param {Array} buttons The buttons could be shown, prior to the state filtering.\n\t * @param {Object} additionalProps Additional props that should be passed down to the buttons.\n\t * @return {Array} An Array which contains the buttons or button groups that should be rendered.\n\t */\n\tgetToolbarButtonGroups(buttons, additionalProps) {\n\t\tconst instance = this;\n\n\t\tif (Lang.isFunction(buttons)) {\n\t\t\tbuttons = buttons.call(this) || [];\n\t\t}\n\n\t\treturn buttons.reduce((list, button) => {\n\t\t\tif (Array.isArray(button)) {\n\t\t\t\tlist.push(instance.getToolbarButtons(button, additionalProps));\n\t\t\t\treturn list;\n\t\t\t} else {\n\t\t\t\treturn instance.getToolbarButtons(buttons, additionalProps);\n\t\t\t}\n\t\t}, []);\n\t},\n\n\t/**\n\t * Analyzes the current selection and the buttons exclusive mode value to figure out which\n\t * buttons should be present in a given state.\n\t *\n\t * @instance\n\t * @memberof ToolbarButtons\n\t * @method getToolbarButtons\n\t * @param {Array} buttons The buttons could be shown, prior to the state filtering.\n\t * @param {Object} additionalProps Additional props that should be passed down to the buttons.\n\t * @return {Array} An Array which contains the buttons that should be rendered.\n\t */\n\tgetToolbarButtons(buttons, additionalProps) {\n\t\tconst buttonProps = {};\n\n\t\tconst nativeEditor = this.props.editor.get('nativeEditor');\n\t\tconst buttonCfg = nativeEditor.config.buttonCfg || {};\n\n\t\tif (Lang.isFunction(buttons)) {\n\t\t\tbuttons = buttons.call(this) || [];\n\t\t}\n\n\t\tconst toolbarButtons = this.filterExclusive(\n\t\t\tbuttons\n\t\t\t\t.filter(button => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tbutton &&\n\t\t\t\t\t\t(AlloyEditor.Buttons[button] ||\n\t\t\t\t\t\t\tAlloyEditor.Buttons[button.name])\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.map(button => {\n\t\t\t\t\tif (Lang.isString(button)) {\n\t\t\t\t\t\tbuttonProps[button] = buttonCfg[button];\n\t\t\t\t\t\tbutton = AlloyEditor.Buttons[button];\n\t\t\t\t\t} else if (Lang.isString(button.name)) {\n\t\t\t\t\t\tbuttonProps[\n\t\t\t\t\t\t\tAlloyEditor.Buttons[button.name].key\n\t\t\t\t\t\t] = CKEDITOR.tools.merge(buttonCfg[button], button.cfg);\n\t\t\t\t\t\tbutton = AlloyEditor.Buttons[button.name];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn button;\n\t\t\t\t})\n\t\t).map(function(button, index) {\n\t\t\tlet props = this.mergeExclusiveProps(\n\t\t\t\t{\n\t\t\t\t\teditor: this.props.editor,\n\t\t\t\t\tkey:\n\t\t\t\t\t\tbutton.key !== 'separator'\n\t\t\t\t\t\t\t? button.key\n\t\t\t\t\t\t\t: `${button.key}-${index}`,\n\t\t\t\t\ttabKey: button.key,\n\t\t\t\t\ttabIndex:\n\t\t\t\t\t\tthis.props.trigger &&\n\t\t\t\t\t\tthis.props.trigger.props.tabKey === button.key\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: -1,\n\t\t\t\t\ttrigger: this.props.trigger,\n\t\t\t\t},\n\t\t\t\tbutton.key\n\t\t\t);\n\n\t\t\tprops = this.mergeDropdownProps(props, button.key);\n\n\t\t\tif (additionalProps) {\n\t\t\t\tprops = CKEDITOR.tools.merge(props, additionalProps);\n\t\t\t}\n\n\t\t\tprops = CKEDITOR.tools.merge(props, buttonProps[button.key]);\n\n\t\t\treturn React.createElement(button, props);\n\t\t}, this);\n\n\t\treturn toolbarButtons;\n\t},\n};\n\nexport default ToolbarButtons;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from '../../oop/lang';\n\n/**\n * Provides functionality for displaying Widget Arrow box on top or on bottom of the widget\n * depending on the point of user interaction with the editor.\n *\n * @class WidgetArrowBox\n */\nconst WidgetArrowBox = {\n\t/**\n\t * Returns the list of arrow box classes associated to the current element's state. It relies\n\t * on the getInteractionPoint method to calculate the selection direction.\n\t *\n\t * @instance\n\t * @memberof WidgetArrowBox\n\t * @method getArrowBoxClasses\n\t * @return {String} A string with the arrow box CSS classes.\n\t */\n\tgetArrowBoxClasses() {\n\t\tlet arrowBoxClasses = 'ae-arrow-box';\n\n\t\tif (\n\t\t\tLang.isFunction(this.getInteractionPoint) &&\n\t\t\tthis.getInteractionPoint()\n\t\t) {\n\t\t\tif (\n\t\t\t\tthis.getInteractionPoint().direction ===\n\t\t\t\tCKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t\t) {\n\t\t\t\tarrowBoxClasses += ' ae-arrow-box-top';\n\t\t\t} else {\n\t\t\t\tarrowBoxClasses += ' ae-arrow-box-bottom';\n\t\t\t}\n\t\t}\n\n\t\treturn arrowBoxClasses;\n\t},\n};\n\nexport default WidgetArrowBox;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport ReactDOM from 'react-dom';\n\n/**\n * Provides functionality for managing different dropdowns inside a widget.\n *\n * @class WidgetDropdown\n */\nconst WidgetDropdown = {\n\t/**\n\t * Lifecycle. Invoked when a component is receiving new props.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof WidgetDropdown\n\t * @method componentWillReceiveProps\n\t */\n\tcomponentWillReceiveProps(_nextProps) {\n\t\tthis.setState({\n\t\t\tdropdownTrigger: null,\n\t\t\titemDropdown: null,\n\t\t});\n\t},\n\n\t/**\n\t * Lifecycle. Invoked once before the component is mounted.\n\t *\n\t * @instance\n\t * @memberof WidgetDropdown\n\t * @method getInitialState\n\t */\n\tgetInitialState() {\n\t\treturn {\n\t\t\tdropdownTrigger: null,\n\t\t\titemDropdown: null,\n\t\t};\n\t},\n\n\t/**\n\t * Merges the provided object with two more properties:\n\t * - expanded - boolean flag which indicates if an widget should be\n\t *   rendered exclusively.\n\t * - toggleDropdown - function, which can be used by an widget in\n\t *   order to obtain exclusive state.\n\t *\n\t * @instance\n\t * @memberof WidgetDropdown\n\t * @method mergeDropdownProps\n\t * @param {Object} obj The properties container which should be merged with the properties, related\n\t *    to dropdown state.\n\t * @param {Object} itemKey They key of an React Widget which contains the dropdown.\n\t * @return {Object} The merged object.\n\t */\n\tmergeDropdownProps(obj, itemKey) {\n\t\treturn CKEDITOR.tools.merge(obj, {\n\t\t\texpanded: this.state.itemDropdown === itemKey ? true : false,\n\t\t\ttabIndex: this.state.dropdownTrigger === itemKey ? 0 : -1,\n\t\t\ttoggleDropdown: this.toggleDropdown.bind(this, itemKey),\n\t\t});\n\t},\n\n\t/**\n\t * Sets the active dropdown of the widget or discards the toggled\n\t * item from the state.\n\t *\n\t * @instance\n\t * @memberof WidgetDropdown\n\t * @method toggleDropdown\n\t * @param {Object} itemDropdown The widget which requests to toggle its dropdown.\n\t * @param {Number} toggleDirection User movement direction when toggled via keyboard.\n\t */\n\ttoggleDropdown(itemDropdown, toggleDirection) {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tdropdownTrigger: itemDropdown,\n\t\t\t\titemDropdown:\n\t\t\t\t\titemDropdown !== this.state.itemDropdown\n\t\t\t\t\t\t? itemDropdown\n\t\t\t\t\t\t: null,\n\t\t\t},\n\t\t\tfunction() {\n\t\t\t\tif (!this.state.itemDropdown) {\n\t\t\t\t\tif (this.moveFocus) {\n\t\t\t\t\t\tthis.moveFocus(toggleDirection);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tReactDOM.findDOMNode(this).focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t},\n};\n\nexport default WidgetDropdown;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * Provides functionality for managing exclusive state of an widget.\n * The exclusive state means that a button may request to be the only rendered\n * widget in its parent container. WidgetExclusive will manage this state by\n * filtering and suppressing the other sibling widgets from displaying.\n *\n * @class WidgetExclusive\n */\nconst WidgetExclusive = {\n\t/**\n\t * Cancels the exclusive state of an widget.\n\t *\n\t * @instance\n\t * @memberof WidgetExclusive\n\t * @method cancelExclusive\n\t * @param {Object} itemExclusive The widget which exclusive state should be canceled.\n\t */\n\tcancelExclusive(itemExclusive) {\n\t\tif (this.state.itemExclusive === itemExclusive) {\n\t\t\tthis.setState({\n\t\t\t\titemExclusive: null,\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Lifecycle. Invoked when a component is receiving new props.\n\t * This method is not called for the initial render.\n\t * Calling this.setState() within this function will not trigger an\n\t * additional render.\n\t *\n\t * @instance\n\t * @memberof WidgetExclusive\n\t * @method componentWillReceiveProps\n\t * @param {Object} nextProps Object containing the current set of properties.\n\t */\n\tcomponentWillReceiveProps(_nextProps) {\n\t\t// Receiving properties means that the component is being\n\t\t// re-rendered.  Re-rendering is triggered by editorInteraction,\n\t\t// so we have to reset the exclusive state and render the UI\n\t\t// according to the new selection.\n\t\tthis.setState({\n\t\t\titemExclusive: null,\n\t\t});\n\t},\n\n\t/**\n\t * Filters the items and returns only those with exclusive state.\n\t *\n\t * @instance\n\t * @memberof WidgetExclusive\n\t * @method filterExclusive\n\t * @param {Array} items The widgets to be filtered.\n\t * @return {Array|Object} The item with executive state.\n\t */\n\tfilterExclusive(items) {\n\t\treturn items.filter(item => {\n\t\t\tif (this.state.itemExclusive) {\n\t\t\t\tif (this.state.itemExclusive === item.key) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Merges the provided object with three more properties:\n\t * - cancelExclusive - function, which can be used by a widget in\n\t *   order to cancel executive state.\n\t * - renderExclusive - boolean flag which indicates if an widget\n\t *   should be rendered exclusively.\n\t * - requestExclusive - function, which can be used by a widget in\n\t *   order to obtain exclusive state.\n\t *\n\t * @instance\n\t * @memberof WidgetExclusive\n\t * @method mergeExclusiveProps\n\t * @param {Object} obj The properties container which should be merged with the properties, related\n\t *    to exclusive state.\n\t * @param {Object} itemKey They key of an React Widget which should be rendered exclusively.\n\t * @return {Object} The merged object.\n\t */\n\tmergeExclusiveProps(obj, itemKey) {\n\t\treturn CKEDITOR.tools.merge(obj, {\n\t\t\tcancelExclusive: this.cancelExclusive.bind(this, itemKey),\n\t\t\trenderExclusive: this.state.itemExclusive === itemKey,\n\t\t\trequestExclusive: this.requestExclusive.bind(this, itemKey),\n\t\t});\n\t},\n\n\t/**\n\t * Requests and sets exclusive state of an widget.\n\t *\n\t * @instance\n\t * @memberof WidgetExclusive\n\t * @method requestExclusive\n\t * @param {Object} itemExclusive The widget which requests exclusive state.\n\t */\n\trequestExclusive(itemExclusive) {\n\t\tthis.setState({\n\t\t\titemExclusive,\n\t\t});\n\t},\n};\n\nexport default WidgetExclusive;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\n\nimport Lang from '../../oop/lang';\n\nconst DIRECTION_NONE = 0;\nconst DIRECTION_NEXT = 1;\nconst DIRECTION_PREV = -1;\n\nconst ACTION_NONE = 0;\nconst ACTION_MOVE_FOCUS = 1;\nconst ACTION_DISMISS_FOCUS = 2;\n\n/**\n * WidgetFocusManager is a mixin that provides keyboard navigation inside a widget. To do this,\n * it exposes the following props and methods:\n *\n * @class WidgetFocusManager\n */\nconst WidgetFocusManager = {\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * Callback method to be invoked when the focus manager is to be dismissed. This happens\n\t\t * in the following scenarios if a dismiss callback has been specified:\n\t\t * - A dismiss key has been pressed\n\t\t * - In a non-circular focus manager, when:\n\t\t *     - The active descendant is the first one and a prev key has been pressed.\n\t\t *     - The active descendant is the last one and a next key has been pressed.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @property {Function} onDismiss\n\t\t */\n\t\tonDismiss: PropTypes.func,\n\n\t\t/**\n\t\t * Indicates if focus should be set to the first/last descendant when the limits are reached.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @property {boolean} circular\n\t\t */\n\t\tcircular: PropTypes.bool.isRequired,\n\n\t\t/**\n\t\t * Indicate if should focus the first child of a container\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @property {Boolean} focusFirstChild\n\t\t */\n\t\tfocusFirstChild: PropTypes.bool,\n\n\t\t/**\n\t\t * String representing the CSS selector used to define the elements that should be handled.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @property {String} descendants\n\t\t */\n\t\tdescendants: PropTypes.string.isRequired,\n\n\t\t/**\n\t\t * Object representing the keys used to navigate between descendants. The format for the prop is:\n\t\t * `{dismiss: value, dismissNext: value, dismissPrev: value, next: value, prev: value}` where\n\t\t * value can be both a number or an array of numbers with the allowed keyCodes.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @property {Object} keys\n\t\t */\n\t\tkeys: PropTypes.object.isRequired,\n\t},\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tthis._refresh();\n\t},\n\n\t/**\n\t * Lifecycle. Invoked immediately after the component's updates are flushed to the DOM.\n\t * Refreshes the descendants list.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method componentDidUpdate\n\t */\n\tcomponentDidUpdate() {\n\t\tthis._refresh();\n\t},\n\n\t/**\n\t * Focuses the current active descendant.\n\t *\n\t * Several Widgets can be nested in a component hierarchy by attaching this focus method to\n\t * the widget DOM node, transferring the DOM focus control to the inner FocusManager.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method focus\n\t */\n\tfocus(event) {\n\t\tif (!event || this._isValidTarget(event.target)) {\n\t\t\tif (this._descendants && this._descendants.length) {\n\t\t\t\tconst activeDescendantEl = this._descendants[\n\t\t\t\t\tthis._activeDescendant\n\t\t\t\t];\n\t\t\t\t// When user clicks with the mouse, the activeElement is already set and there\n\t\t\t\t// is no need to focus it. Focusing of the active descendant (usually some button) is required\n\t\t\t\t// in case of keyboard navigation, because the focused element might be not the first button,\n\t\t\t\t// but the div element, which contains the button.\n\t\t\t\tif (\n\t\t\t\t\tdocument.activeElement !== activeDescendantEl &&\n\t\t\t\t\t!this.props.focusFirstChild\n\t\t\t\t) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis._descendants.indexOf(document.activeElement) === -1\n\t\t\t\t\t) {\n\t\t\t\t\t\tactiveDescendantEl.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (event) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Handles the key events on a DOM node to execute the appropriate navigation when needed.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @param {Object} event The Keyboard event that was detected on the widget DOM node.\n\t * @method handleKey\n\t */\n\thandleKey(event) {\n\t\tif (this._isValidTarget(event.target) && this._descendants) {\n\t\t\tconst action = this._getFocusAction(event);\n\n\t\t\tif (action.type) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tif (action.type === ACTION_MOVE_FOCUS) {\n\t\t\t\t\tthis._moveFocus(action.direction);\n\t\t\t\t}\n\n\t\t\t\tif (action.type === ACTION_DISMISS_FOCUS) {\n\t\t\t\t\tthis.props.onDismiss(action.direction);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Moves the focus among descendants in the especified direction.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method moveFocus\n\t * @param {number} direction The direction (1 or -1) of the focus movement among descendants.\n\t */\n\tmoveFocus(direction) {\n\t\tdirection = Lang.isNumber(direction) ? direction : 0;\n\n\t\tthis._moveFocus(direction);\n\t},\n\n\t/**\n\t * Returns the action, if any, that a keyboard event in the current focus manager state\n\t * should produce.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _getFocusAction\n\t * @param {object} event The Keyboard event.\n\t * @protected\n\t * @return {Object} An action object with type and direction properties.\n\t */\n\t_getFocusAction(event) {\n\t\tconst action = {\n\t\t\ttype: ACTION_NONE,\n\t\t};\n\n\t\tif (this.props.keys) {\n\t\t\tconst direction = this._getFocusMoveDirection(event);\n\n\t\t\tif (direction) {\n\t\t\t\taction.direction = direction;\n\t\t\t\taction.type = ACTION_MOVE_FOCUS;\n\t\t\t}\n\n\t\t\tconst dismissAction = this._getFocusDismissAction(event, direction);\n\n\t\t\tif (dismissAction.dismiss) {\n\t\t\t\taction.direction = dismissAction.direction;\n\t\t\t\taction.type = ACTION_DISMISS_FOCUS;\n\t\t\t}\n\t\t}\n\n\t\treturn action;\n\t},\n\n\t/**\n\t * Returns the dismiss action, if any, the focus manager should execute to yield the focus. This\n\t * will happen in any of these scenarios if a dismiss callback has been specified:\n\t * - A dismiss key has been pressed\n\t * - In a non-circular focus manager, when:\n\t *     - The active descendant is the first one and a prev key has been pressed.\n\t *     - The active descendant is the last one and a next key has been pressed.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _getFocusDismissAction\n\t * @param {Number} focusMoveDirection The focus movement direction (if any).\n\t * @param {Object} event The Keyboard event.\n\t * @protected\n\t * @return {Object} A dismiss action with dismiss and direction properties.\n\t */\n\t_getFocusDismissAction(event, focusMoveDirection) {\n\t\tconst dismissAction = {\n\t\t\tdirection: focusMoveDirection,\n\t\t\tdismiss: false,\n\t\t};\n\n\t\tif (this.props.onDismiss) {\n\t\t\tif (this._isValidKey(event.keyCode, this.props.keys.dismiss)) {\n\t\t\t\tdismissAction.dismiss = true;\n\t\t\t}\n\t\t\tif (this._isValidKey(event.keyCode, this.props.keys.dismissNext)) {\n\t\t\t\tdismissAction.dismiss = true;\n\t\t\t\tdismissAction.direction = DIRECTION_NEXT;\n\t\t\t}\n\t\t\tif (this._isValidKey(event.keyCode, this.props.keys.dismissPrev)) {\n\t\t\t\tdismissAction.dismiss = true;\n\t\t\t\tdismissAction.direction = DIRECTION_PREV;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!dismissAction.dismiss &&\n\t\t\t\t!this.props.circular &&\n\t\t\t\tfocusMoveDirection\n\t\t\t) {\n\t\t\t\tdismissAction.dismiss =\n\t\t\t\t\t(focusMoveDirection === DIRECTION_PREV &&\n\t\t\t\t\t\tthis._activeDescendant === 0) ||\n\t\t\t\t\t(focusMoveDirection === DIRECTION_NEXT &&\n\t\t\t\t\t\tthis._activeDescendant ===\n\t\t\t\t\t\t\tthis._descendants.length - 1);\n\t\t\t}\n\t\t}\n\n\t\treturn dismissAction;\n\t},\n\n\t/**\n\t * Returns the direction, if any, in which the focus should be moved. In presence of the\n\t * shift key modifier, the direction of the movement is inverted.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _getFocusMoveDirection\n\t * @param {Object} event The Keyboard event.\n\t * @protected\n\t * @return {Number} The computed direction of the expected focus movement.\n\t */\n\t_getFocusMoveDirection(event) {\n\t\tlet direction = DIRECTION_NONE;\n\n\t\tif (this._isValidKey(event.keyCode, this.props.keys.next)) {\n\t\t\tdirection = DIRECTION_NEXT;\n\t\t}\n\t\tif (this._isValidKey(event.keyCode, this.props.keys.prev)) {\n\t\t\tdirection = DIRECTION_PREV;\n\t\t}\n\n\t\tif (event.shifKey) {\n\t\t\tdirection *= -1;\n\t\t}\n\n\t\treturn direction;\n\t},\n\n\t/**\n\t * Indicates if a given keyCode is valid for the given set of keys.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _isValidKey\n\t * @param {Array|Number} keys A key set. Can be a number an array of numbers representing the allowed keyCodes.\n\t * @param {Number} keyCode An event keyCode.\n\t * @protected\n\t * @return {Boolean} A boolean value indicating if the key is valid.\n\t */\n\t_isValidKey(keyCode, keys) {\n\t\treturn Lang.isArray(keys)\n\t\t\t? keys.indexOf(keyCode) !== -1\n\t\t\t: keyCode === keys;\n\t},\n\n\t/**\n\t * Indicates if a given element is valid for focus management. User input elements such as\n\t * input, select or textarea are excluded.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _isValidKey\n\t * @param {DOMNode} element A DOM element.\n\t * @protected\n\t * @return {Boolean} A boolean value indicating if the element is valid.\n\t */\n\t_isValidTarget(element) {\n\t\tconst tagName = element.tagName.toLowerCase();\n\n\t\treturn (\n\t\t\ttagName !== 'input' &&\n\t\t\ttagName !== 'select' &&\n\t\t\ttagName !== 'textarea'\n\t\t);\n\t},\n\n\t/**\n\t * Moves the focus among descendants in the especified direction.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _moveFocus\n\t * @param {number} direction The direction (1 or -1) of the focus movement among descendants.\n\t * @protected\n\t */\n\t_moveFocus(direction) {\n\t\tconst numDescendants = this._descendants.length;\n\n\t\tlet descendant = this._descendants[this._activeDescendant];\n\n\t\tdescendant.setAttribute('tabIndex', -1);\n\n\t\tthis._activeDescendant += direction;\n\n\t\tif (this.props.circular) {\n\t\t\t// Calculate proper modulo result since remainder operator doesn't behave in the\n\t\t\t// same way for negative numbers\n\t\t\tthis._activeDescendant =\n\t\t\t\t((this._activeDescendant % numDescendants) + numDescendants) %\n\t\t\t\tnumDescendants;\n\t\t} else {\n\t\t\tthis._activeDescendant = Math.max(\n\t\t\t\tMath.min(this._activeDescendant, numDescendants - 1),\n\t\t\t\t0\n\t\t\t);\n\t\t}\n\n\t\tdescendant = this._descendants[this._activeDescendant];\n\n\t\tdescendant.setAttribute('tabIndex', 0);\n\t\tdescendant.focus();\n\t},\n\n\t/**\n\t * Refreshes the descendants list by executing the CSS selector again and resets the descendants tabIndex.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _refresh\n\t * @protected\n\t */\n\t_refresh() {\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\tif (domNode) {\n\t\t\tconst descendants = domNode.querySelectorAll(\n\t\t\t\tthis.props.descendants\n\t\t\t);\n\n\t\t\tlet priorityDescendants = [];\n\n\t\t\tthis._descendants = [];\n\n\t\t\tArray.prototype.slice.call(descendants).forEach(item => {\n\t\t\t\tconst dataTabIndex = item.getAttribute('data-tabindex');\n\n\t\t\t\tif (dataTabIndex) {\n\t\t\t\t\tpriorityDescendants.push(item);\n\t\t\t\t} else {\n\t\t\t\t\tthis._descendants.push(item);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpriorityDescendants = priorityDescendants.sort((a, b) => {\n\t\t\t\treturn (\n\t\t\t\t\tLang.toInt(a.getAttribute('data-tabindex')) >\n\t\t\t\t\tLang.toInt(b.getAttribute('data-tabindex'))\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tthis._descendants = priorityDescendants.concat(this._descendants);\n\n\t\t\tthis._activeDescendant = 0;\n\n\t\t\tthis._descendants.some((item, index) => {\n\t\t\t\tif (item.getAttribute('tabindex') === '0') {\n\t\t\t\t\tthis._activeDescendant = index;\n\t\t\t\t\tthis.focus();\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n};\n\nexport default WidgetFocusManager;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\n\nimport WidgetInteractionPoint from './widget-interaction-point';\n\n/**\n * Calculates the position where an Widget should be displayed based on\n * the point where user interacted with the editor.\n *\n * @class WidgetPosition\n * @uses WidgetInteractionPoint\n */\nconst WidgetPosition = {\n\tmixins: [WidgetInteractionPoint],\n\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * Should the widget to be restricted to the viewport, or not.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetPosition\n\t\t * @property {Boolean} constrainToViewport\n\t\t * @default true\n\t\t */\n\t\tconstrainToViewport: PropTypes.bool,\n\n\t\t/**\n\t\t * The gutter (vertical and horizontal) between the interaction\n\t\t * point and where the widget should be rendered.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetPosition\n\t\t * @property {Object} gutter\n\t\t * @default {\n\t\t *     left: 0,\n\t\t *     top: 10\n\t\t * }\n\t\t */\n\t\tgutter: PropTypes.object,\n\t},\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in\n\t * the widget.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method getDefaultProps\n\t */\n\tgetDefaultProps() {\n\t\treturn {\n\t\t\tgutter: {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 10,\n\t\t\t},\n\t\t\tconstrainToViewport: true,\n\t\t};\n\t},\n\n\t/**\n\t * Cancels an scheduled animation frame.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method cancelAnimation\n\t */\n\tcancelAnimation() {\n\t\tif (window.cancelAnimationFrame) {\n\t\t\twindow.cancelAnimationFrame(this._animationFrameId);\n\t\t}\n\t},\n\n\t/**\n\t * Returns an object which contains the position of the element in\n\t * page coordinates, restricted to fit to given viewport.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method getConstrainedPosition\n\t * @param {Object} attrs The following properties, provided as numbers:\n\t * - height\n\t * - left\n\t * - top\n\t * - width\n\t * @param {Object} viewPaneSize Optional. If not provided, the current viewport will be used. Should contain at least these properties:\n\t * - width\n\t * @return {Object} An object with `x` and `y` properties, which represent the constrained position of the\n\t * element.\n\t */\n\tgetConstrainedPosition(attrs, viewPaneSize) {\n\t\tviewPaneSize =\n\t\t\tviewPaneSize || new CKEDITOR.dom.window(window).getViewPaneSize();\n\n\t\tlet x = attrs.left;\n\t\tlet y = attrs.top;\n\n\t\tif (attrs.left + attrs.width > viewPaneSize.width) {\n\t\t\tx -= attrs.left + attrs.width - viewPaneSize.width;\n\t\t}\n\n\t\tif (y < 0) {\n\t\t\ty = 0;\n\t\t}\n\n\t\treturn {\n\t\t\tx,\n\t\t\ty,\n\t\t};\n\t},\n\n\t/**\n\t * Returns the position of the Widget taking in consideration the\n\t * {{#crossLink \"WidgetPosition/gutter:attribute\"}}{{/crossLink}} attribute.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @protected\n\t * @method  getWidgetXYPoint\n\t * @param {Number} left The left offset in page coordinates where Toolbar should be shown.\n\t * @param {Number} top The top offset in page coordinates where Toolbar should be shown.\n\t * @param {Number} direction The direction of the selection. May be one of the following:\n\t * CKEDITOR.SELECTION_BOTTOM_TO_TOP or CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t * @return {Array} An Array with left and top offsets in page coordinates.\n\t */\n\tgetWidgetXYPoint(left, top, direction) {\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\tconst gutter = this.props.gutter;\n\t\tconst offsetWidth = domNode.offsetWidth;\n\t\tconst halfWidth = offsetWidth / 2;\n\n\t\tif (\n\t\t\tdirection === CKEDITOR.SELECTION_TOP_TO_BOTTOM ||\n\t\t\tdirection === CKEDITOR.SELECTION_BOTTOM_TO_TOP\n\t\t) {\n\t\t\tleft = left - gutter.left - halfWidth;\n\n\t\t\ttop =\n\t\t\t\tdirection === CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t\t\t\t? top + gutter.top\n\t\t\t\t\t: top - domNode.offsetHeight - gutter.top;\n\t\t} else if (\n\t\t\tdirection === CKEDITOR.SELECTION_LEFT_TO_RIGHT ||\n\t\t\tdirection === CKEDITOR.SELECTION_RIGHT_TO_LEFT\n\t\t) {\n\t\t\tleft =\n\t\t\t\tdirection === CKEDITOR.SELECTION_LEFT_TO_RIGHT\n\t\t\t\t\t? left + gutter.left + domNode.offsetHeight / 2\n\t\t\t\t\t: left - (3 * domNode.offsetHeight) / 2 - gutter.left;\n\n\t\t\ttop = top - gutter.top - domNode.offsetHeight / 2;\n\t\t}\n\n\t\tif (left < 0) {\n\t\t\tleft = 0;\n\t\t}\n\n\t\tif (left > document.body.offsetWidth - halfWidth) {\n\t\t\tleft = document.body.offsetWidth - halfWidth;\n\t\t}\n\n\t\tif (top < 0) {\n\t\t\ttop = 0;\n\t\t}\n\n\t\treturn [left, top];\n\t},\n\n\t/**\n\t * Returns true if the widget is visible, false otherwise\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method isVisible\n\t * @return {Boolean} True if the widget is visible, false otherwise\n\t */\n\tisVisible() {\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\tif (domNode) {\n\t\t\tconst domElement = new CKEDITOR.dom.element(domNode);\n\n\t\t\treturn domElement.hasClass('alloy-editor-visible');\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t * Moves a widget from a starting point to a destination point.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method moveToPoint\n\t * @param  {Object} startPoint The starting point for the movement.\n\t * @param  {Object} endPoint The destination point for the movement.\n\t */\n\tmoveToPoint(startPoint, endPoint) {\n\t\tconst domElement = new CKEDITOR.dom.element(ReactDOM.findDOMNode(this));\n\n\t\tdomElement.setStyles({\n\t\t\tleft: startPoint[0] + 'px',\n\t\t\ttop: startPoint[1] + 'px',\n\t\t\topacity: 0,\n\t\t\tpointerEvents: 'none',\n\t\t});\n\n\t\tdomElement.removeClass('alloy-editor-invisible');\n\n\t\tthis._animate(() => {\n\t\t\tdomElement.addClass('ae-toolbar-transition');\n\t\t\tdomElement.addClass('alloy-editor-visible');\n\t\t\tdomElement.setStyles({\n\t\t\t\tleft: endPoint[0] + 'px',\n\t\t\t\ttop: endPoint[1] + 'px',\n\t\t\t\topacity: 1,\n\t\t\t});\n\n\t\t\t// 150ms to match transition-duration for .ae-toolbar-transition:\n\t\t\tsetTimeout(() => {\n\t\t\t\tdomElement.setStyles({\n\t\t\t\t\tpointerEvents: '',\n\t\t\t\t});\n\t\t\t}, 150);\n\t\t});\n\t},\n\n\t/**\n\t * Shows the widget with the default animation transition.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method show\n\t */\n\tshow() {\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\t\tconst uiNode = this.props.editor.get('uiNode');\n\n\t\tconst scrollTop = uiNode ? uiNode.scrollTop : 0;\n\n\t\tif (!this.isVisible() && domNode) {\n\t\t\tconst interactionPoint = this.getInteractionPoint();\n\n\t\t\tif (interactionPoint) {\n\t\t\t\tconst domElement = new CKEDITOR.dom.element(domNode);\n\n\t\t\t\tlet finalX, finalY, initialX, initialY;\n\n\t\t\t\tfinalX = initialX = parseFloat(domElement.getStyle('left'));\n\t\t\t\tfinalY = initialY = parseFloat(domElement.getStyle('top'));\n\n\t\t\t\tif (this.props.constrainToViewport) {\n\t\t\t\t\tconst res = this.getConstrainedPosition({\n\t\t\t\t\t\theight: parseFloat(domNode.offsetHeight),\n\t\t\t\t\t\tleft: finalX,\n\t\t\t\t\t\ttop: finalY,\n\t\t\t\t\t\twidth: parseFloat(domNode.offsetWidth),\n\t\t\t\t\t});\n\n\t\t\t\t\tfinalX = res.x;\n\t\t\t\t\tfinalY = res.y;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tinteractionPoint.direction ===\n\t\t\t\t\tCKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t\t\t) {\n\t\t\t\t\tinitialY =\n\t\t\t\t\t\tthis.props.selectionData.region.bottom + scrollTop;\n\t\t\t\t} else {\n\t\t\t\t\tinitialY = this.props.selectionData.region.top + scrollTop;\n\t\t\t\t}\n\n\t\t\t\tthis.moveToPoint([initialX, initialY], [finalX, finalY]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Updates the widget position based on the current interaction point.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method updatePosition\n\t */\n\tupdatePosition() {\n\t\tconst interactionPoint = this.getInteractionPoint();\n\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\tif (interactionPoint && domNode) {\n\t\t\tconst uiNode = this.props.editor.get('uiNode') || document.body;\n\t\t\tconst uiNodeStyle = getComputedStyle(uiNode);\n\t\t\tconst uiNodeMarginLeft = parseInt(\n\t\t\t\tuiNodeStyle.getPropertyValue('margin-left'),\n\t\t\t\t10\n\t\t\t);\n\t\t\tconst uiNodeMarginRight = parseInt(\n\t\t\t\tuiNodeStyle.getPropertyValue('margin-right'),\n\t\t\t\t10\n\t\t\t);\n\t\t\tconst totalWidth =\n\t\t\t\tuiNodeMarginLeft + uiNode.clientWidth + uiNodeMarginRight;\n\n\t\t\tconst scrollTop = uiNode.tagName !== 'BODY' ? uiNode.scrollTop : 0;\n\n\t\t\tconst xy = this.getWidgetXYPoint(\n\t\t\t\tinteractionPoint.x,\n\t\t\t\tinteractionPoint.y,\n\t\t\t\tinteractionPoint.direction\n\t\t\t);\n\t\t\txy[1] += scrollTop;\n\n\t\t\tif (xy[0] < 0) {\n\t\t\t\txy[0] = 0;\n\t\t\t}\n\t\t\tif (xy[0] > totalWidth - domNode.offsetWidth) {\n\t\t\t\txy[0] = totalWidth - domNode.offsetWidth;\n\t\t\t}\n\n\t\t\tnew CKEDITOR.dom.element(domNode).setStyles({\n\t\t\t\tleft: xy[0] + 'px',\n\t\t\t\ttop: xy[1] + 'px',\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Requests an animation frame, if possible, to simulate an animation.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method _animate\n\t * @param {Function} callback The function to be executed on the scheduled frame.\n\t * @protected\n\t */\n\t_animate(callback) {\n\t\tif (window.requestAnimationFrame) {\n\t\t\tthis._animationFrameId = window.requestAnimationFrame(callback);\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t},\n};\n\nexport default WidgetPosition;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport ToolbarAdd from './toolbar-add.jsx';\nimport ToolbarStyles from './toolbar-styles.jsx';\n\nexport default {\n\t[ToolbarAdd.key]: ToolbarAdd,\n\t[ToolbarStyles.key]: ToolbarStyles,\n};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ToolbarButtons from '../base/toolbar-buttons';\nimport WidgetDropdown from '../base/widget-dropdown';\nimport WidgetExclusive from '../base/widget-exclusive';\nimport WidgetFocusManager from '../base/widget-focus-manager';\nimport ButtonIcon from '../buttons/button-icon.jsx';\n\nconst POSITION_LEFT = 1;\nconst POSITION_RIGHT = 2;\n\n/**\n * The ToolbarAdd class provides functionality for adding content to the editor.\n *\n * @class ToolbarAdd\n * @uses ToolbarButtons\n * @uses WidgetDropdown\n * @uses WidgetExclusive\n * @uses WidgetFocusManager\n */\nclass ToolbarAdd extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client (not on the server),\n\t * immediately after the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ToolbarAdd\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tthis._updatePosition();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked immediately after the component's updates are flushed to the DOM.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof ToolbarAdd\n\t * @method componentDidUpdate\n\t * @param {Object} prevProps The previous state of the component's properties.\n\t * @param {Object} prevState Component's previous state.\n\t */\n\tcomponentDidUpdate(_prevProps, _prevState) {\n\t\tthis._updatePosition();\n\n\t\t// In case of exclusive rendering, focus the first descendant (button)\n\t\t// so the user will be able to start interacting with the buttons immediately.\n\t\tif (this.props.renderExclusive) {\n\t\t\tthis.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Renders the buttons for adding content or hides the toolbar\n\t * if user interacted with a non-editable element.\n\t *\n\t * @instance\n\t * @memberof ToolbarAdd\n\t * @method render\n\t * @return {Object|null} The content which should be rendered.\n\t */\n\trender() {\n\t\t// Some operations such as `requestExclusive` may force editor to blur which will\n\t\t// invalidate the `props.editorEvent` stored value, without causing a `props` change.\n\t\t// For example, if the editor is empty, `ae_placeholder` plugin will remove\n\t\t// the target from the DOM and will prevent `add` toolbar from rendering.\n\t\t//\n\t\t// It should be safe to assume that if you have been able to render the toolbar\n\t\t// and request the exclusive mode, then rendering might be kept until the exclusive mode is left.\n\t\tif (\n\t\t\t!this.state.itemExclusive &&\n\t\t\tthis.props.editorEvent &&\n\t\t\tthis.props.editorEvent.data.nativeEvent.target &&\n\t\t\t!this.props.editorEvent.data.nativeEvent.target.isContentEditable\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst buttons = this._getButtons();\n\t\tconst className = this._getToolbarClassName();\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\taria-label={AlloyEditor.Strings.add}\n\t\t\t\tclassName={className}\n\t\t\t\tdata-tabindex={this.props.config.tabIndex || 0}\n\t\t\t\tonFocus={this.focus.bind(this)}\n\t\t\t\tonKeyDown={this.handleKey.bind(this)}\n\t\t\t\trole=\"toolbar\"\n\t\t\t\ttabIndex=\"-1\">\n\t\t\t\t<div className=\"ae-container\">{buttons}</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Returns a list of buttons that will eventually render to HTML.\n\t *\n\t * @instance\n\t * @memberof ToolbarAdd\n\t * @method _getButtons\n\t * @protected\n\t * @return {Object} The buttons which have to be rendered.\n\t */\n\t_getButtons() {\n\t\tlet buttons;\n\n\t\tif (this.props.renderExclusive) {\n\t\t\tbuttons = this.getToolbarButtons(this.props.config.buttons);\n\t\t} else {\n\t\t\tif (this.props.selectionData && this.props.selectionData.region) {\n\t\t\t\tbuttons = (\n\t\t\t\t\t<button\n\t\t\t\t\t\taria-label={AlloyEditor.Strings.add}\n\t\t\t\t\t\tclassName=\"ae-button ae-button-add\"\n\t\t\t\t\t\tonClick={this.props.requestExclusive.bind(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tToolbarAdd.key\n\t\t\t\t\t\t)}\n\t\t\t\t\t\ttitle={AlloyEditor.Strings.add}>\n\t\t\t\t\t\t<ButtonIcon symbol=\"plus\" />\n\t\t\t\t\t</button>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn buttons;\n\t}\n\n\t/**\n\t * Returns the class name of the toolbar in case of both exclusive and normal mode.\n\t *\n\t * @instance\n\t * @memberof ToolbarAdd\n\t * @method _getToolbarClassName\n\t * @protected\n\t * @return {String} The class name which have to be applied to the DOM element.\n\t */\n\t_getToolbarClassName() {\n\t\tlet cssClass = 'ae-toolbar-add';\n\n\t\tif (this.props.renderExclusive) {\n\t\t\tcssClass = 'ae-toolbar ' + this.getArrowBoxClasses();\n\t\t}\n\n\t\treturn cssClass;\n\t}\n\n\t/**\n\t * Calculates and sets the position of the toolbar in exclusive or normal mode.\n\t *\n\t * @instance\n\t * @memberof ToolbarAdd\n\t * @method _updatePosition\n\t * @protected\n\t */\n\t_updatePosition() {\n\t\tlet region;\n\n\t\t// If component is not mounted, there is nothing to do\n\t\tif (!ReactDOM.findDOMNode(this)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.props.renderExclusive) {\n\t\t\tthis.updatePosition();\n\t\t\tthis.show();\n\t\t} else {\n\t\t\tif (this.props.selectionData) {\n\t\t\t\tregion = this.props.selectionData.region;\n\t\t\t}\n\n\t\t\tif (region) {\n\t\t\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\t\t\tconst domElement = new CKEDITOR.dom.element(domNode);\n\n\t\t\t\tconst startRect = region.startRect || region;\n\n\t\t\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\t\t\tconst clientRect = nativeEditor.editable().getClientRect();\n\n\t\t\t\tlet offsetLeft;\n\n\t\t\t\tconst position =\n\t\t\t\t\tthis.props.config.position || this.props.position;\n\n\t\t\t\tif (position === POSITION_LEFT) {\n\t\t\t\t\toffsetLeft =\n\t\t\t\t\t\tclientRect.left -\n\t\t\t\t\t\tdomNode.offsetWidth -\n\t\t\t\t\t\tthis.props.gutterExclusive.left +\n\t\t\t\t\t\t'px';\n\t\t\t\t} else {\n\t\t\t\t\toffsetLeft =\n\t\t\t\t\t\tclientRect.right +\n\t\t\t\t\t\tthis.props.gutterExclusive.left +\n\t\t\t\t\t\t'px';\n\t\t\t\t}\n\n\t\t\t\tdomNode.style.left = offsetLeft;\n\n\t\t\t\tdomNode.style.top =\n\t\t\t\t\tMath.floor((region.bottom + region.top) / 2) + 'px';\n\n\t\t\t\tconst uiNode = this.context.editor.get('uiNode');\n\n\t\t\t\tconst scrollTop = uiNode ? uiNode.scrollTop : 0;\n\n\t\t\t\tif (nativeEditor.element.getStyle('overflow') !== 'auto') {\n\t\t\t\t\tdomNode.style.top =\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tregion.top -\n\t\t\t\t\t\t\t\tdomNode.offsetHeight / 2 +\n\t\t\t\t\t\t\t\tstartRect.height / 2 +\n\t\t\t\t\t\t\t\tscrollTop\n\t\t\t\t\t\t) + 'px';\n\t\t\t\t} else {\n\t\t\t\t\tdomNode.style.top =\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tnativeEditor.element.$.offsetTop +\n\t\t\t\t\t\t\t\tstartRect.height / 2 -\n\t\t\t\t\t\t\t\tdomNode.offsetHeight / 2\n\t\t\t\t\t\t) + 'px';\n\t\t\t\t}\n\n\t\t\t\tdomNode.style.opacity = 1;\n\n\t\t\t\tdomElement.removeClass('ae-arrow-box');\n\n\t\t\t\tthis.cancelAnimation();\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default add\n * @memberof ToolbarAdd\n * @property {String} key\n * @static\n */\nToolbarAdd.key = 'add';\n\n/**\n * Defines the constant for positioning the Toolbar on left of the editable area.\n *\n * @default 1\n * @memberof ToolbarAdd\n * @property {String} left\n * @static\n */\nToolbarAdd.left = POSITION_LEFT;\n\n/**\n * Defines the constant for positioning the Toolbar on right of the editable area.\n *\n * @default 2\n * @memberof ToolbarAdd\n * @property {String} right\n * @static\n */\nToolbarAdd.right = POSITION_RIGHT;\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ToolbarAdd\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nToolbarAdd.defaultProps = {\n\tcircular: true,\n\tdescendants: '.ae-button',\n\tgutterExclusive: {\n\t\tleft: 10,\n\t\ttop: 0,\n\t},\n\tkeys: {\n\t\tdismiss: [27],\n\t\tnext: [39, 40],\n\t\tprev: [37, 38],\n\t},\n\tposition: POSITION_LEFT,\n};\n\nexport default WidgetDropdown(\n\tWidgetExclusive(WidgetFocusManager(ToolbarButtons(ToolbarAdd)))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\nimport ToolbarButtons from '../base/toolbar-buttons';\nimport WidgetDropdown from '../base/widget-dropdown';\nimport WidgetExclusive from '../base/widget-exclusive';\nimport WidgetFocusManager from '../base/widget-focus-manager';\n\n/**\n * The ToolbarStyles class hosts the buttons for styling a text selection.\n *\n * @class ToolbarStyles\n * @uses ToolbarButtons\n * @uses WidgetDropdown\n * @uses WidgetExclusive\n * @uses WidgetFocusManager\n */\nclass ToolbarStyles extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client (not on the server),\n\t * immediately after the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ToolbarStyles\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tthis._updatePosition();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked immediately after the component's updates are flushed to the DOM.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof ToolbarStyles\n\t * @method componentDidUpdate\n\t * @param {Object} prevProps The previous state of the component's properties.\n\t * @param {Object} prevState Component's previous state.\n\t */\n\tcomponentDidUpdate(_prevProps, _prevState) {\n\t\tthis._updatePosition();\n\t}\n\n\t/**\n\t * Lifecycle. Renders the buttons for adding content or hides the toolbar\n\t * if user interacted with a non-editable element.\n\t *\n\t * @instance\n\t * @memberof ToolbarStyles\n\t * @method render\n\t * @return {Object|null} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst currentSelection = this._getCurrentSelection();\n\n\t\tif (currentSelection) {\n\t\t\tconst getArrowBoxClassesFn = this._getSelectionFunction(\n\t\t\t\tcurrentSelection.getArrowBoxClasses\n\t\t\t);\n\t\t\tlet arrowBoxClasses;\n\n\t\t\tif (getArrowBoxClassesFn) {\n\t\t\t\tarrowBoxClasses = getArrowBoxClassesFn();\n\t\t\t} else {\n\t\t\t\tarrowBoxClasses = this.getArrowBoxClasses();\n\t\t\t}\n\n\t\t\tconst cssClasses = 'ae-toolbar-styles ' + arrowBoxClasses;\n\n\t\t\tlet buttons = currentSelection.buttons;\n\n\t\t\tif (typeof buttons === 'object' && !Array.isArray(buttons)) {\n\t\t\t\tbuttons =\n\t\t\t\t\tbuttons[this.context.editor.get('mode')] ||\n\t\t\t\t\tbuttons['simple'];\n\t\t\t}\n\n\t\t\tconst buttonsGroup = this.getToolbarButtonGroups(buttons, {\n\t\t\t\tmanualSelection: this.props.editorEvent\n\t\t\t\t\t? this.props.editorEvent.data.manualSelection\n\t\t\t\t\t: null,\n\t\t\t\tselectionType: currentSelection.name,\n\t\t\t});\n\n\t\t\tconst hasGroups =\n\t\t\t\tbuttonsGroup.filter(button => {\n\t\t\t\t\treturn Array.isArray(button);\n\t\t\t\t}).length > 0;\n\n\t\t\tlet className = 'ae-container';\n\n\t\t\tif (hasGroups) {\n\t\t\t\tclassName += ' ae-container-column';\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\taria-label={AlloyEditor.Strings.styles}\n\t\t\t\t\tclassName={cssClasses}\n\t\t\t\t\tdata-tabindex={this.props.config.tabIndex || 0}\n\t\t\t\t\tonFocus={this.focus.bind(this)}\n\t\t\t\t\tonKeyDown={this.handleKey.bind(this)}\n\t\t\t\t\trole=\"toolbar\"\n\t\t\t\t\ttabIndex=\"-1\">\n\t\t\t\t\t<div className={className}>\n\t\t\t\t\t\t{buttonsGroup.map((value, index) => {\n\t\t\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div className=\"ae-row\" key={index}>\n\t\t\t\t\t\t\t\t\t\t{value.map(button => {\n\t\t\t\t\t\t\t\t\t\t\treturn button;\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Retrieve a function from String. It converts a fully qualified string into the mapped function.\n\t *\n\t * @instance\n\t * @memberof ToolbarStyles\n\t * @method _getSelectionFunction\n\t * @param {Function|String} selectionFn A function, or a fully qualified string pointing to the desired one (e.g. 'AlloyEditor.SelectionTest.image').\n\t * @protected\n\t * @return {Function} The mapped function.\n\t */\n\t_getSelectionFunction(selectionFn) {\n\t\tlet selectionFunction;\n\n\t\tif (Lang.isFunction(selectionFn)) {\n\t\t\tselectionFunction = selectionFn;\n\t\t} else if (Lang.isString(selectionFn)) {\n\t\t\tconst parts = selectionFn.split('.');\n\t\t\tlet currentMember = window;\n\t\t\tlet property = parts.shift();\n\n\t\t\twhile (\n\t\t\t\tproperty &&\n\t\t\t\tLang.isObject(currentMember) &&\n\t\t\t\tLang.isObject(currentMember[property])\n\t\t\t) {\n\t\t\t\tcurrentMember = currentMember[property];\n\t\t\t\tproperty = parts.shift();\n\t\t\t}\n\n\t\t\tif (Lang.isFunction(currentMember)) {\n\t\t\t\tselectionFunction = currentMember;\n\t\t\t}\n\t\t}\n\n\t\treturn selectionFunction;\n\t}\n\n\t/**\n\t * Analyzes the current editor selection and returns the selection configuration that matches.\n\t *\n\t * @instance\n\t * @memberof ToolbarStyles\n\t * @method _getCurrentSelection\n\t * @protected\n\t * @return {Object} The matched selection configuration.\n\t */\n\t_getCurrentSelection() {\n\t\tconst eventPayload = this.props.editorEvent\n\t\t\t? this.props.editorEvent.data\n\t\t\t: null;\n\t\tlet selection;\n\n\t\tif (eventPayload) {\n\t\t\tthis.props.config.selections.some(function(item) {\n\t\t\t\tconst testFn = this._getSelectionFunction(item.test);\n\t\t\t\tlet result;\n\n\t\t\t\tif (testFn) {\n\t\t\t\t\tresult =\n\t\t\t\t\t\teventPayload.manualSelection === item.name ||\n\t\t\t\t\t\ttestFn({\n\t\t\t\t\t\t\tdata: eventPayload,\n\t\t\t\t\t\t\teditor: this.context.editor,\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (result) {\n\t\t\t\t\tselection = item;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, this);\n\t\t}\n\n\t\treturn selection;\n\t}\n\n\t/**\n\t * Calculates and sets the position of the toolbar.\n\t *\n\t * @instance\n\t * @memberof ToolbarStyles\n\t * @method _updatePosition\n\t * @protected\n\t */\n\t_updatePosition() {\n\t\t// If component is not mounted, there is nothing to do\n\t\tif (!ReactDOM.findDOMNode(this)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentSelection = this._getCurrentSelection();\n\t\tlet result;\n\n\t\t// If current selection has a function called `setPosition`, call it\n\t\t// and check the returned value. If false, fallback to the default positioning logic.\n\t\tif (currentSelection) {\n\t\t\tconst setPositionFn = this._getSelectionFunction(\n\t\t\t\tcurrentSelection.setPosition\n\t\t\t);\n\n\t\t\tif (setPositionFn) {\n\t\t\t\tresult = setPositionFn.call(this, {\n\t\t\t\t\teditor: this.context.editor,\n\t\t\t\t\teditorEvent: this.props.editorEvent,\n\t\t\t\t\tselectionData: this.props.selectionData,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (!result) {\n\t\t\tthis.updatePosition();\n\t\t\tthis.show();\n\t\t}\n\t}\n}\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ToolbarStyles\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nToolbarStyles.defaultProps = {\n\tcircular: true,\n\tdescendants: '.ae-input, .ae-button:not([disabled]), .ae-toolbar-element',\n\tkeys: {\n\t\tdismiss: [27],\n\t\tnext: [39, 40],\n\t\tprev: [37, 38],\n\t},\n};\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default styles\n * @memberof ToolbarStyles\n * @property {String} key\n * @static\n */\nToolbarStyles.key = 'styles';\n\nexport default WidgetDropdown(\n\tWidgetExclusive(WidgetFocusManager(ToolbarButtons(ToolbarStyles)))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport '../core';\n\nimport '../plugins';\n\nimport '../components/uibridge';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {removeImageCommand} from '../commands';\nimport UI from '../components/main.jsx';\nimport Base from '../oop/base';\nimport Lang from '../oop/lang';\nimport extend from '../oop/oop';\nimport Selections from '../selections/selections';\nimport EditorContext from './editor-context';\n\nconst EMBED_VIDEO_WIDTH = 560;\nconst EMBED_VIDEO_HEIGHT = 315;\n\n/**\n * AlloyEditor main class. Creates instance of the editor and provides the user configuration\n * to the UI.\n *\n * @class Core\n * @constructor\n * @param {Object} config The configuration to be used.\n */\nfunction Core(config) {\n\tCore.superclass.constructor.call(this, config);\n}\n\nextend(\n\tCore,\n\tBase,\n\t{\n\t\t/**\n\t\t * Initializer lifecycle implementation for the AlloyEditor class. Creates a CKEditor\n\t\t * instance, passing it the provided configuration attributes.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method initializer\n\t\t * @param {Object} config Configuration object literal for the editor.\n\t\t */\n\t\tinitializer(config) {\n\t\t\tconst node = this.get('srcNode');\n\n\t\t\tif (this.get('enableContentEditable')) {\n\t\t\t\tnode.setAttribute('contenteditable', 'true');\n\t\t\t}\n\n\t\t\tconst editor = CKEDITOR.inline(node);\n\n\t\t\teditor.config.allowedContent = this.get('allowedContent');\n\n\t\t\teditor.config.toolbars = this.get('toolbars');\n\n\t\t\teditor.config.removePlugins = this.get('removePlugins');\n\n\t\t\teditor.config.extraPlugins = this.get('extraPlugins');\n\n\t\t\teditor.config.embedProviders = this.get('embedProviders');\n\n\t\t\teditor.config.placeholderClass = this.get('placeholderClass');\n\n\t\t\teditor.config.pasteFromWordRemoveStyles = false;\n\t\t\teditor.config.pasteFromWordRemoveFontStyles = false;\n\n\t\t\teditor.config.selectionKeystrokes = this.get('selectionKeystrokes');\n\n\t\t\teditor.config.spritemap = this.get('spritemap');\n\n\t\t\tLang.mix(editor.config, config);\n\n\t\t\tif (CKEDITOR.env.ie && !CKEDITOR.env.edge) {\n\t\t\t\tconst plugin = 'ae_dragresize_ie11';\n\n\t\t\t\teditor.config.extraPlugins = editor.config.extraPlugins.replace(\n\t\t\t\t\t'ae_dragresize',\n\t\t\t\t\tplugin\n\t\t\t\t);\n\t\t\t\teditor.config.removePlugins = editor.config.removePlugins.replace(\n\t\t\t\t\t'ae_dragresize',\n\t\t\t\t\tplugin\n\t\t\t\t);\n\t\t\t}\n\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\tthis._addReadOnlyLinkClickListener(editor);\n\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\tconst extraCommands = this.get('extraCommands');\n\n\t\t\t\tconst extraCommandKeys = Object.keys(extraCommands);\n\t\t\t\tfor (let i = 0; i < extraCommandKeys.length; i++) {\n\t\t\t\t\tconst commandName = extraCommandKeys[i];\n\n\t\t\t\t\tif (editor.commands[commandName]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\teditor.addCommand(commandName, extraCommands[commandName]);\n\t\t\t\t}\n\n\t\t\t\teditable.addClass('ae-editable');\n\t\t\t});\n\n\t\t\tthis._editor = editor;\n\n\t\t\tAlloyEditor.loadLanguageResources(this._renderUI.bind(this));\n\t\t},\n\n\t\t/**\n\t\t * Destructor lifecycle implementation for the AlloyEdtor class. Destroys the CKEditor\n\t\t * instance and destroys all created toolbars.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method destructor\n\t\t */\n\t\tdestructor() {\n\t\t\tthis._destroyed = true;\n\n\t\t\tif (this._editorUIElement) {\n\t\t\t\tReactDOM.unmountComponentAtNode(this._editorUIElement);\n\t\t\t\tthis._editorUIElement.parentNode.removeChild(\n\t\t\t\t\tthis._editorUIElement\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst nativeEditor = this.get('nativeEditor');\n\n\t\t\tif (nativeEditor) {\n\t\t\t\tconst editable = nativeEditor.editable();\n\n\t\t\t\tif (editable) {\n\t\t\t\t\teditable.removeClass('ae-editable');\n\n\t\t\t\t\tif (this.get('enableContentEditable')) {\n\t\t\t\t\t\tthis.get('srcNode').setAttribute(\n\t\t\t\t\t\t\t'contenteditable',\n\t\t\t\t\t\t\t'false'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._clearSelections();\n\n\t\t\t\tnativeEditor.destroy();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Clear selections from window object\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _clearSelections\n\t\t */\n\t\t_clearSelections() {\n\t\t\tconst nativeEditor = this.get('nativeEditor');\n\t\t\tconst isMSSelection = typeof window.getSelection != 'function';\n\n\t\t\tif (isMSSelection) {\n\t\t\t\tnativeEditor.document.$.selection.empty();\n\t\t\t} else {\n\t\t\t\tnativeEditor.document\n\t\t\t\t\t.getWindow()\n\t\t\t\t\t.$.getSelection()\n\t\t\t\t\t.removeAllRanges();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Method to set default link behavior\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _addReadOnlyLinkClickListener\n\t\t * @param {Object} editor\n\t\t */\n\t\t_addReadOnlyLinkClickListener(editor) {\n\t\t\teditor.editable().on('click', this._defaultReadOnlyClickFn, this, {\n\t\t\t\teditor,\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Called on `click` event when the editor is in read only mode. Navigates to link's URL or opens\n\t\t * the link in a new window.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @event readOnlyClick\n\t\t * @protected\n\t\t * @method _defaultReadOnlyClickFn\n\t\t * @param {Object} event The fired `click` event payload\n\t\t */\n\t\t_defaultReadOnlyClickFn(event) {\n\t\t\tconst mouseEvent = event.data.$;\n\t\t\tconst hasCtrlKey = mouseEvent.ctrlKey || mouseEvent.metaKey;\n\t\t\tconst shouldOpen = this._editor.config.readOnly || hasCtrlKey;\n\n\t\t\tmouseEvent.preventDefault();\n\n\t\t\tif (!shouldOpen) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tevent.listenerData.editor\n\t\t\t\t\t.editable()\n\t\t\t\t\t.editor.fire('readOnlyClick', event.data) !== false\n\t\t\t) {\n\t\t\t\tconst ckElement = new CKEDITOR.dom.elementPath(\n\t\t\t\t\tevent.data.getTarget(),\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t\tconst link = ckElement.lastElement;\n\n\t\t\t\tif (link) {\n\t\t\t\t\tconst href = link.$.attributes.href\n\t\t\t\t\t\t? link.$.attributes.href.value\n\t\t\t\t\t\t: null;\n\t\t\t\t\tconst target = hasCtrlKey\n\t\t\t\t\t\t? '_blank'\n\t\t\t\t\t\t: link.$.attributes.target\n\t\t\t\t\t\t? link.$.attributes.target.value\n\t\t\t\t\t\t: null;\n\t\t\t\t\tthis._redirectLink(href, target);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Retrieves the native CKEditor instance. Having this, the developer may use the API of CKEditor OOTB.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _getNativeEditor\n\t\t * @return {Object} The current instance of CKEditor.\n\t\t */\n\t\t_getNativeEditor() {\n\t\t\treturn this._editor;\n\t\t},\n\n\t\t/**\n\t\t * Redirects the browser to a given link\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _redirectLink\n\t\t * @param {string} href The href to take the browser to\n\t\t * @param {string=} target Specifies where to display the link\n\t\t */\n\t\t_redirectLink(href, target) {\n\t\t\tif (target && href) {\n\t\t\t\twindow.open(href, target);\n\t\t\t} else if (href) {\n\t\t\t\twindow.location.href = href;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Renders the specified from the user toolbars.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _renderUI\n\t\t */\n\t\t_renderUI() {\n\t\t\tif (!this._destroyed) {\n\t\t\t\tconst editorUIElement = document.createElement('div');\n\t\t\t\teditorUIElement.className = 'ae-ui';\n\n\t\t\t\tconst uiNode = this.get('uiNode') || document.body;\n\n\t\t\t\tuiNode.appendChild(editorUIElement);\n\n\t\t\t\tconst callbackRef = element => {\n\t\t\t\t\tif (!this._mainUI && element) {\n\t\t\t\t\t\tthis._mainUI = element;\n\t\t\t\t\t\tthis.get('nativeEditor').fire('uiReady');\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tReactDOM.render(\n\t\t\t\t\t<EditorContext.Provider value={{editor: this}}>\n\t\t\t\t\t\t<UI\n\t\t\t\t\t\t\teventsDelay={this.get('eventsDelay')}\n\t\t\t\t\t\t\tref={callbackRef}\n\t\t\t\t\t\t\ttoolbars={this.get('toolbars')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</EditorContext.Provider>,\n\t\t\t\t\teditorUIElement\n\t\t\t\t);\n\n\t\t\t\tthis._editorUIElement = editorUIElement;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * The function returns an HTML element from the passed value. If the passed value is a string, it should be\n\t\t * the Id of the element which have to be retrieved from the DOM.\n\t\t * If an HTML Element is passed, the element itself will be returned.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @method _toElement\n\t\t * @protected\n\t\t * @param {!(String|HTMLElement)} value String, which have to correspond to an HTML element from the DOM,\n\t\t * or the HTML element itself. If Id is passed, the HTML element will be retrieved from the DOM.\n\t\t * @return {HTMLElement} An HTML element.\n\t\t */\n\t\t_toElement(value) {\n\t\t\tif (Lang.isString(value)) {\n\t\t\t\tvalue = document.getElementById(value);\n\t\t\t}\n\n\t\t\treturn value;\n\t\t},\n\n\t\t/**\n\t\t * Validates the allowed content attribute. Look\n\t\t * [here](http://docs.ckeditor.com/#!/api/CKEDITOR.config-cfg-allowedContent) for more information about the\n\t\t * supported values.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _validateAllowedContent\n\t\t * @param {Any} value The value to be checked\n\t\t * @return {Boolean} True if the current value is valid configuration, false otherwise\n\t\t */\n\t\t_validateAllowedContent(value) {\n\t\t\treturn (\n\t\t\t\tLang.isString(value) ||\n\t\t\t\tLang.isObject(value) ||\n\t\t\t\tLang.isBoolean(value)\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Validates the value of toolbars attribute\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _validateToolbars\n\t\t * @param {Any} value The value to be checked\n\t\t * @return {Boolean} True if the current value is valid toolbars configuration, false otherwise\n\t\t */\n\t\t_validateToolbars(value) {\n\t\t\treturn Lang.isObject(value) || Lang.isNull(value);\n\t\t},\n\t},\n\t{\n\t\tATTRS: {\n\t\t\t/**\n\t\t\t * Configures the allowed content for the current instance of AlloyEditor.\n\t\t\t * Look on the [official CKEditor API](http://docs.ckeditor.com/#!/api/CKEDITOR.config-cfg-allowedContent)\n\t\t\t * for more information about the valid values.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property allowedContent\n\t\t\t * @default true\n\t\t\t * @writeOnce\n\t\t\t * @type {Boolean, String, Object}\n\t\t\t */\n\t\t\tallowedContent: {\n\t\t\t\tvalidator: '_validateAllowedContent',\n\t\t\t\tvalue: true,\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Callback to be invoked when clicking on the\n\t\t\t * <code>src/components/buttons/button-link-edit-browse.jsx</code>\n\t\t\t * component.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @propety documentBrowseLinkCallback\n\t\t\t * @default undefined\n\t\t\t * @type {Function|undefined}\n\t\t\t */\n\t\t\tdocumentBrowseLinkCallback: {\n\t\t\t\tvalidator: Lang.isFunction,\n\t\t\t\tvalue: undefined,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Configuration for the\n\t\t\t * <code>src/components/buttons/button-link-edit-browse.jsx</code>\n\t\t\t * component.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @propety documentBrowseLinkUrl\n\t\t\t * @default undefined\n\t\t\t * @type {String|undefined}\n\t\t\t */\n\t\t\tdocumentBrowseLinkUrl: {\n\t\t\t\tvalidator: Lang.isString,\n\t\t\t\tvalue: undefined,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * List of embed providers for videos\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property embedProviders\n\t\t\t * @default []\n\t\t\t * @type Array}\n\t\t\t */\n\t\t\tembedProviders: {\n\t\t\t\tvalidator: Lang.isArray,\n\t\t\t\tvalue: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'facebook',\n\t\t\t\t\t\ttpl: `<iframe allowFullScreen=\"true\" allowTransparency=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t\t frameborder=\"0\" height=\"${EMBED_VIDEO_HEIGHT}\"\n\t\t\t\t\t\t\t\t\t\t\t\t src=\"https://www.facebook.com/plugins/video.php?href={embedId}'\n\t\t\t\t\t\t\t\t\t\t\t\t &show_text=0&width=${EMBED_VIDEO_WIDTH}&height=${EMBED_VIDEO_HEIGHT}\" scrolling=\"no\"\n\t\t\t\t\t\t\t\t\t\t\t\t style=\"border:none;overflow:hidden\" width=\"${EMBED_VIDEO_WIDTH}}\"></iframe>`,\n\t\t\t\t\t\ttype: 'video',\n\t\t\t\t\t\turlSchemes: [\n\t\t\t\t\t\t\t'(https?:\\\\/\\\\/(?:www\\\\.)?facebook.com\\\\/\\\\S*\\\\/videos\\\\/\\\\S*)',\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'twitch',\n\t\t\t\t\t\ttpl: `<iframe allowfullscreen=\"true\" frameborder=\"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t height=\"${EMBED_VIDEO_HEIGHT}\"\n\t\t\t\t\t\t\t\t\t\t\t\t src=\"https://player.twitch.tv/?autoplay=false&video={embedId}\"\n\t\t\t\t\t\t\t\t\t\t\t\t scrolling=\"no\" width=\"${EMBED_VIDEO_WIDTH}\"></iframe>`,\n\t\t\t\t\t\ttype: 'video',\n\t\t\t\t\t\turlSchemes: [\n\t\t\t\t\t\t\t'https?:\\\\/\\\\/(?:www\\\\.)?twitch.tv\\\\/videos\\\\/(\\\\S*)$',\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'vimeo',\n\t\t\t\t\t\ttpl: `<iframe allowfullscreen frameborder=\"0\" height=\"${EMBED_VIDEO_HEIGHT}\"\n\t\t\t\t\t\t\t\t\t\t\t\t mozallowfullscreen src=\"https://player.vimeo.com/video/{embedId}\"\n\t\t\t\t\t\t\t\t\t\t\t\t webkitallowfullscreen width=\"${EMBED_VIDEO_WIDTH}\"></iframe>`,\n\t\t\t\t\t\ttype: 'video',\n\t\t\t\t\t\turlSchemes: [\n\t\t\t\t\t\t\t'https?:\\\\/\\\\/(?:www\\\\.)?vimeo\\\\.com\\\\/album\\\\/.*\\\\/video\\\\/(\\\\S*)',\n\t\t\t\t\t\t\t'https?:\\\\/\\\\/(?:www\\\\.)?vimeo\\\\.com\\\\/channels\\\\/.*\\\\/(\\\\S*)',\n\t\t\t\t\t\t\t'https?:\\\\/\\\\/(?:www\\\\.)?vimeo\\\\.com\\\\/groups\\\\/.*\\\\/videos\\\\/(\\\\S*)',\n\t\t\t\t\t\t\t'https?:\\\\/\\\\/(?:www\\\\.)?vimeo\\\\.com\\\\/(\\\\S*)$',\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'youtube',\n\t\t\t\t\t\ttpl: `<iframe allow=\"autoplay; encrypted-media\" allowfullscreen\n\t\t\t\t\t\t\t\t\t\t\t\t height=\"${EMBED_VIDEO_HEIGHT}\" frameborder=\"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t src=\"https://www.youtube.com/embed/{embedId}?rel=0\"\n\t\t\t\t\t\t\t\t\t\t\t\t width=\"${EMBED_VIDEO_WIDTH}\"></iframe>`,\n\t\t\t\t\t\ttype: 'video',\n\t\t\t\t\t\turlSchemes: [\n\t\t\t\t\t\t\t'https?:\\\\/\\\\/(?:www\\\\.)?youtube.com\\\\/watch\\\\?v=(\\\\S*)$',\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Specifies whether AlloyEditor set the contenteditable attribute\n\t\t\t * to \"true\" on its srcNode.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property enableContentEditable\n\t\t\t * @type Boolean\n\t\t\t * @default true\n\t\t\t * @writeOnce\n\t\t\t */\n\t\t\tenableContentEditable: {\n\t\t\t\tvalidator: Lang.isBoolean,\n\t\t\t\tvalue: true,\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The delay (timeout), in ms, after which events such like key or mouse events will be processed.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property eventsDelay\n\t\t\t * @type {Number}\n\t\t\t */\n\t\t\teventsDelay: {\n\t\t\t\tvalidator: Lang.isNumber,\n\t\t\t\tvalue: 100,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The list of extra commands to be added to the editor.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property extraCommands\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\textraCommands: {\n\t\t\t\tvalidator: Lang.isObject,\n\t\t\t\tvalue: {\n\t\t\t\t\tremoveImage: removeImageCommand,\n\t\t\t\t},\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Specifies the extra plugins which have to be loaded to the current CKEditor instance in order to\n\t\t\t * make AlloyEditor to work properly.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property extraPlugins\n\t\t\t * @default 'uicore,selectionregion,dragresize,addimages,placeholder,tabletools,tableresize,autolink'\n\t\t\t * @writeOnce\n\t\t\t * @type {String}\n\t\t\t */\n\t\t\textraPlugins: {\n\t\t\t\tvalidator: Lang.isString,\n\t\t\t\tvalue:\n\t\t\t\t\t'ae_uicore,ae_selectionregion,ae_selectionkeystrokes,ae_imagealignment,ae_addimages,ae_placeholder,' +\n\t\t\t\t\t'ae_tabletools,ae_tableresize,ae_autolink,ae_embed,ae_autolist,ae_dragresize,' +\n\t\t\t\t\t'ae_uibridge,ae_richcombobridge,ae_panelmenubuttonbridge,ae_menubridge,ae_menubuttonbridge,ae_buttonbridge,font,colorbutton',\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Specifies the \"mode\" for alloy editor\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property mode\n\t\t\t * @default 'simple'\n\t\t\t * @writeOnce\n\t\t\t * @type {String}\n\t\t\t */\n\t\t\tmode: {\n\t\t\t\tvalidator: Lang.isString,\n\t\t\t\tvalue: 'simple',\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Retrieves the native CKEditor instance. Having this, the developer may use the full API of CKEditor.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property nativeEditor\n\t\t\t * @readOnly\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\tnativeEditor: {\n\t\t\t\tgetter: '_getNativeEditor',\n\t\t\t\treadOnly: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Specifies the class, which should be added by Placeholder plugin\n\t\t\t * {{#crossLink \"CKEDITOR.plugins.ae_placeholder}}{{/crossLink}}\n\t\t\t * when editor is not focused.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property placeholderClass\n\t\t\t * @default 'ae-placeholder'\n\t\t\t * @writeOnce\n\t\t\t * @type {String}\n\t\t\t */\n\t\t\tplaceholderClass: {\n\t\t\t\tvalidator: Lang.isString,\n\t\t\t\tvalue: 'ae-placeholder',\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Specifies the plugins, which come by default with CKEditor, but which are not needed by AlloyEditor.\n\t\t\t * These plugins add the default UI for CKeditor, which is no more needed. Please note that AlloyEdtor\n\t\t\t * comes with its own highly optimized copy of CKEditor (just customized via their official download page).\n\t\t\t * This version does not come with the unneeded plugins, so the value of this property won't be needed.\n\t\t\t * However, if you decide to go with the OOTB version of CKEditor, you will have to remove some of the\n\t\t\t * plugins if you decide to use AlloyEditor. Keep in mind that removing these plugins doesn't remove them\n\t\t\t * entirely from CKEditor. It just removes them from its current instance, in which you will use different\n\t\t\t * UI - those of AlloyEditor. You will be fully able to use both OOTB CKEditor and AlloyEditor on the same\n\t\t\t * page!\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property removePlugins\n\t\t\t * @default 'contextmenu,toolbar,elementspath,resize,liststyle,link'\n\t\t\t * @writeOnce\n\t\t\t * @type {String}\n\t\t\t */\n\t\t\tremovePlugins: {\n\t\t\t\tvalidator: Lang.isString,\n\t\t\t\tvalue: 'contextmenu,toolbar,elementspath,resize,liststyle,link',\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Array of manual selection triggers. They can be configured to manually show a specific selection toolbar\n\t\t\t * by forcing the selection type. A selectionKeystroke item consists of a keys property with a [CKEditor keystroke\n\t\t\t * definition](http://docs.ckeditor.com/#!/api/CKEDITOR.config-cfg-keystrokes) and a selection property with\n\t\t\t * the selection name to trigger.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property selectionKeystrokes\n\t\t\t * @type {Array}\n\t\t\t */\n\t\t\tselectionKeystrokes: {\n\t\t\t\tvalidator: Lang.isArray,\n\t\t\t\tvalue: [\n\t\t\t\t\t{\n\t\t\t\t\t\tkeys: CKEDITOR.CTRL + 76 /* L*/,\n\t\t\t\t\t\tselection: 'link',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tkeys: CKEDITOR.CTRL + CKEDITOR.SHIFT + 76 /* L*/,\n\t\t\t\t\t\tselection: 'embed',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The path to the spritemap SVG used for icons\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property spritemap\n\t\t\t * @type String\n\t\t\t * @writeOnce\n\t\t\t */\n\t\t\tspritemap: {\n\t\t\t\tvalidator: Lang.isString,\n\t\t\t\tvalue: 'alloy-editor/assets/icons/icons.svg',\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The Node ID or HTMl node, which AlloyEditor should use as an editable area.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property srcNode\n\t\t\t * @type String | Node\n\t\t\t * @writeOnce\n\t\t\t */\n\t\t\tsrcNode: {\n\t\t\t\tsetter: '_toElement',\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The toolbars configuration for this editor instance\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property {Object} toolbars\n\t\t\t */\n\t\t\ttoolbars: {\n\t\t\t\tvalidator: '_validateToolbars',\n\t\t\t\tvalue: {\n\t\t\t\t\tadd: {\n\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\t'imageFromFile',\n\t\t\t\t\t\t\t'embed',\n\t\t\t\t\t\t\t'camera',\n\t\t\t\t\t\t\t'hline',\n\t\t\t\t\t\t\t'table',\n\t\t\t\t\t\t],\n\t\t\t\t\t\ttabIndex: 2,\n\t\t\t\t\t},\n\t\t\t\t\tstyles: {\n\t\t\t\t\t\tselections: Selections,\n\t\t\t\t\t\ttabIndex: 1,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The Node ID or HTMl node, where AlloyEditor's UI should be rendered.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property uiNode\n\t\t\t * @type String | Node\n\t\t\t * @writeOnce\n\t\t\t */\n\t\t\tuiNode: {\n\t\t\t\tsetter: '_toElement',\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\t\t},\n\t}\n);\n\nCKEDITOR.event.implementOn(Core);\n\nexport default Core;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport debounce from './debounce';\n\nimport './link';\n\nimport './plugins';\n\nimport './selection-region';\n\nimport './table';\n\nimport './tools';\n\nimport './uicore';\n\nexport {debounce};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * Debounce util function. If a function execution is expensive, it might be debounced. This means\n * that it will be executed after some amount of time after its last call. For example, if we attach a\n * a function on scroll event, it might be called hundreds times per second. In this case it may be\n * debounced with, let's say 100ms. The real execution of this function will happen 100ms after last\n * scroll event.\n *\n * @memberof CKEDITOR.tools\n * @method debounce\n * @param {Array} args An array of arguments which the callback will receive.\n * @param {Function} callback The callback which has to be called after given timeout.\n * @param {Number} timeout Timeout in milliseconds after which the callback will be called.\n * @param {Object} context The context in which the callback will be called. This argument is optional.\n * @static\n */\nfunction debounce(callback, timeout, context, args = []) {\n\tlet debounceHandle;\n\n\tconst callFn = function(...callArgs) {\n\t\t/* eslint-disable no-invalid-this */\n\t\tconst callContext = context || this;\n\t\t/* eslint-enable no-invalid-this */\n\n\t\tclearTimeout(debounceHandle);\n\n\t\tdebounceHandle = setTimeout(() => {\n\t\t\tcallback.apply(callContext, [...callArgs, ...args]);\n\t\t}, timeout);\n\t};\n\n\tcallFn.detach = function() {\n\t\tclearTimeout(debounceHandle);\n\t};\n\n\treturn callFn;\n}\n\nCKEDITOR.tools.debounce = CKEDITOR.tools.debounce || debounce;\n\nexport default debounce;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nconst REGEX_BOOKMARK_SCHEME = /^#.*/i;\nconst REGEX_EMAIL_SCHEME = /^[a-z0-9\\u0430-\\u044F._-]+@/i;\nconst REGEX_URI_SCHEME = /^(?:[a-z][a-z0-9+\\-.]*):|^\\//i;\n\n/**\n * Link class utility. Provides methods for create, delete and update links.\n *\n * @class CKEDITOR.Link\n * @constructor\n * @param {Object} editor The CKEditor instance.\n */\nfunction Link(editor, config) {\n\tthis._editor = editor;\n\tthis.appendProtocol =\n\t\tconfig && config.appendProtocol === false ? false : true;\n}\n\nLink.prototype = {\n\tconstructor: Link,\n\n\t/**\n\t * Advances the editor selection to the next available position after a\n\t * given link or the one in the current selection.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Link\n\t * @method advanceSelection\n\t * @param {CKEDITOR.dom.element} link The link element which link style should be removed.\n\t */\n\tadvanceSelection(link) {\n\t\tlink = link || this.getFromSelection();\n\n\t\tconst range = this._editor.getSelection().getRanges()[0];\n\n\t\tif (link) {\n\t\t\trange.moveToElementEditEnd(link);\n\n\t\t\tconst nextNode = range.getNextEditableNode();\n\n\t\t\tif (\n\t\t\t\tnextNode &&\n\t\t\t\t!this._editor.element.equals(nextNode.getCommonAncestor(link))\n\t\t\t) {\n\t\t\t\tconst whitespace = /\\s/.exec(nextNode.getText());\n\n\t\t\t\tconst offset = whitespace ? whitespace.index + 1 : 0;\n\n\t\t\t\trange.setStart(nextNode, offset);\n\t\t\t\trange.setEnd(nextNode, offset);\n\t\t\t}\n\t\t}\n\n\t\tthis._editor.getSelection().selectRanges([range]);\n\t},\n\n\t/**\n\t * Create a link with given URI as href.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Link\n\t * @method create\n\t * @param {Object} attrs A config object with link attributes. These might be arbitrary DOM attributes.\n\t * @param {Object} modifySelection A config object with an advance attribute to indicate if the selection should be moved after the link creation.\n\t * @param {String} URI The URI of the link.\n\t */\n\tcreate(URI, attrs, modifySelection) {\n\t\tconst selection = this._editor.getSelection();\n\n\t\tconst range = selection.getRanges()[0];\n\n\t\tif (range.collapsed) {\n\t\t\tconst text = new CKEDITOR.dom.text(URI, this._editor.document);\n\t\t\trange.insertNode(text);\n\t\t\trange.selectNodeContents(text);\n\t\t}\n\n\t\tURI = this._getCompleteURI(URI);\n\n\t\tconst linkAttrs = CKEDITOR.tools.merge(\n\t\t\t{\n\t\t\t\t'data-cke-saved-href': URI,\n\t\t\t\thref: URI,\n\t\t\t},\n\t\t\tattrs\n\t\t);\n\n\t\tconst style = new CKEDITOR.style({\n\t\t\tattributes: linkAttrs,\n\t\t\telement: 'a',\n\t\t});\n\n\t\tstyle.type = CKEDITOR.STYLE_INLINE;\n\t\tstyle.applyToRange(range, this._editor);\n\n\t\tif (modifySelection && modifySelection.advance) {\n\t\t\tthis.advanceSelection();\n\t\t} else {\n\t\t\trange.select();\n\t\t}\n\t},\n\n\t/**\n\t * Retrieves a link from the current selection.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Link\n\t * @method getFromSelection\n\t * @return {CKEDITOR.dom.element} The retrieved link or null if not found.\n\t */\n\tgetFromSelection() {\n\t\tconst selection = this._editor.getSelection();\n\n\t\tconst selectedElement = selection.getSelectedElement();\n\n\t\tif (selectedElement && selectedElement.is('a')) {\n\t\t\treturn selectedElement;\n\t\t}\n\n\t\tif (selectedElement && CKEDITOR.env.ie) {\n\t\t\tconst children = selectedElement.getChildren();\n\n\t\t\tconst count = children.count();\n\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tconst node = children.getItem(i);\n\n\t\t\t\tif (node.is('a')) {\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst range = selection.getRanges()[0];\n\n\t\tif (range) {\n\t\t\trange.shrink(CKEDITOR.SHRINK_TEXT);\n\n\t\t\treturn this._editor\n\t\t\t\t.elementPath(range.getCommonAncestor())\n\t\t\t\t.contains('a', 1);\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Removes a link from the editor.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Link\n\t * @method remove\n\t * @param {CKEDITOR.dom.element} link The link element which link style should be removed.\n\t * @param {Object} modifySelection A config object with an advance attribute to indicate if the selection should be moved after the link creation.\n\t */\n\tremove(link, modifySelection) {\n\t\tconst editor = this._editor;\n\n\t\tif (link) {\n\t\t\tif (modifySelection && modifySelection.advance) {\n\t\t\t\tthis.advanceSelection();\n\t\t\t}\n\n\t\t\tlink.remove(editor);\n\t\t} else {\n\t\t\tconst style = new CKEDITOR.style({\n\t\t\t\talwaysRemoveElement: 1,\n\t\t\t\telement: 'a',\n\t\t\t\ttype: CKEDITOR.STYLE_INLINE,\n\t\t\t});\n\n\t\t\t// 'removeStyle()' removes the style from the editor's current selection.\n\t\t\t//  We need to force the selection to be the whole link element\n\t\t\t//  to remove it properly.\n\n\t\t\tconst selection = editor.getSelection();\n\t\t\tselection.selectElement(selection.getStartElement());\n\n\t\t\teditor.removeStyle(style);\n\t\t}\n\t},\n\n\t/**\n\t * Updates the href of an already existing link.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Link\n\t * @method update\n\t * @param {CKEDITOR.dom.element} link The link element which href should be removed.\n\t * @param {Object|String} attrs The attributes to update or remove. Attributes with null values will be removed.\n\t * @param {Object} modifySelection A config object with an advance attribute to indicate if the selection should be moved after the link creation.\n\t */\n\tupdate(attrs, link, modifySelection) {\n\t\tconst instance = this;\n\n\t\tlink = link || this.getFromSelection();\n\n\t\tif (typeof attrs === 'string') {\n\t\t\tconst uri = instance._getCompleteURI(attrs);\n\n\t\t\tlink.setAttributes({\n\t\t\t\t'data-cke-saved-href': uri,\n\t\t\t\thref: uri,\n\t\t\t});\n\t\t} else if (typeof attrs === 'object') {\n\t\t\tconst removeAttrs = [];\n\n\t\t\tconst setAttrs = {};\n\n\t\t\tObject.keys(attrs).forEach(key => {\n\t\t\t\tif (attrs[key] === null) {\n\t\t\t\t\tif (key === 'href') {\n\t\t\t\t\t\tremoveAttrs.push('data-cke-saved-href');\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveAttrs.push(key);\n\t\t\t\t} else {\n\t\t\t\t\tif (key === 'href') {\n\t\t\t\t\t\tconst uri = instance._getCompleteURI(attrs[key]);\n\n\t\t\t\t\t\tsetAttrs['data-cke-saved-href'] = uri;\n\t\t\t\t\t\tsetAttrs[key] = uri;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetAttrs[key] = attrs[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlink.removeAttributes(removeAttrs);\n\t\t\tlink.setAttributes(setAttrs);\n\t\t}\n\n\t\tif (modifySelection && modifySelection.advance) {\n\t\t\tthis.advanceSelection(link);\n\t\t}\n\t},\n\n\t/**\n\t * Checks if the URI begins with a '#' symbol to determine if it's an on page bookmark.\n\t * If it doesn't, it then checks if the URI has an '@' symbol. If it does and the URI\n\t * looks like an email and doesn't have 'mailto:', 'mailto:' is added to the URI.\n\t * If it doesn't and the URI doesn't have a scheme, the default 'http' scheme with\n\t * hierarchical path '//' is added to the URI.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Link\n\t * @method _getCompleteURI\n\t * @param {String} URI The URI of the link.\n\t * @protected\n\t * @return {String} The URI updated with the protocol.\n\t */\n\t_getCompleteURI(URI) {\n\t\tif (REGEX_BOOKMARK_SCHEME.test(URI)) {\n\t\t\treturn URI;\n\t\t} else if (REGEX_EMAIL_SCHEME.test(URI)) {\n\t\t\tURI = 'mailto:' + URI;\n\t\t} else if (!REGEX_URI_SCHEME.test(URI)) {\n\t\t\tURI = this.appendProtocol ? 'http://' + URI : URI;\n\t\t}\n\n\t\treturn URI;\n\t},\n};\n\nCKEDITOR.Link = CKEDITOR.Link || Link;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n// Wraps each of the plugin lifecycle methods in a closure that will\n// set up the editor.__processingPlugin__ variable so it can be globally\n// accessed exposing the plugin being processed and the lifecycle phase\n// in which it is happening\n//\n// @param {Object} plugin The plugin to wrap lifecycle methods\nconst wrapPluginLifecycle = function(plugin) {\n\tconst methods = ['beforeInit', 'init', 'afterInit'];\n\n\tmethods.forEach(methodName => {\n\t\tif (plugin[methodName]) {\n\t\t\tplugin[methodName] = CKEDITOR.tools.override(\n\t\t\t\tplugin[methodName],\n\t\t\t\toriginalPluginMethod => {\n\t\t\t\t\tconst payload = {\n\t\t\t\t\t\tphase: methodName,\n\t\t\t\t\t\tplugin,\n\t\t\t\t\t};\n\n\t\t\t\t\treturn function(editor) {\n\t\t\t\t\t\teditor.__processingPlugin__ = payload;\n\n\t\t\t\t\t\t// eslint-disable-next-line no-invalid-this\n\t\t\t\t\t\toriginalPluginMethod.call(this, editor);\n\n\t\t\t\t\t\teditor.__processingPlugin__ = null;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n};\n\n// Filters the requires object to remove unwanted dependencies. At this point\n// only 'toolbar' has been identified, but more can appear. An unwanted plugin\n// dependency is one that prevents a necessary plugin from being removed\n//\n// @param {string|Array<string>} requires The requires object\n// @return {string} The filtered requires object\nconst filterUnwantedDependencies = function(requires) {\n\tif (typeof requires === 'string') {\n\t\trequires = requires.split(',');\n\t}\n\n\treturn requires.filter(require => {\n\t\treturn require !== 'toolbar';\n\t});\n};\n\n/**\n * CKEDITOR.plugins class utility which adds additional methods to those of CKEditor.\n *\n * @class CKEDITOR.plugins\n */\n\n/**\n * Overrides CKEDITOR.plugins.load method so we can extend the lifecycle methods of\n * the loaded plugins to add some metainformation about the plugin being processed\n *\n * @param {String/Array} names The name of the resource to load. It may be a\n * string with a single resource name, or an array with several names.\n * @param {Function} callback A function to be called when all resources\n * are loaded. The callback will receive an array containing all loaded names.\n * @param {Object} [scope] The scope object to be used for the callback call.\n * @memberof CKEDITOR.plugins\n * @method load\n * @static\n */\nCKEDITOR.plugins.load = CKEDITOR.tools.override(\n\tCKEDITOR.plugins.load,\n\tpluginsLoad => {\n\t\t// Wrap original load function so we can transform the plugin input parameter\n\t\t// before passing it down to the original callback\n\t\treturn function(names, callback, scope) {\n\t\t\t// eslint-disable-next-line no-invalid-this\n\t\t\tpluginsLoad.call(this, names, plugins => {\n\t\t\t\tif (callback) {\n\t\t\t\t\tObject.keys(plugins).forEach(pluginName => {\n\t\t\t\t\t\tconst plugin = plugins[pluginName];\n\n\t\t\t\t\t\tif (plugin.requires) {\n\t\t\t\t\t\t\tplugin.requires = filterUnwantedDependencies(\n\t\t\t\t\t\t\t\tplugin.requires\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twrapPluginLifecycle(plugin);\n\t\t\t\t\t});\n\n\t\t\t\t\tcallback.call(scope, plugins);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t}\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_selectionregion')) {\n\tCKEDITOR.SELECTION_TOP_TO_BOTTOM = 0;\n\tCKEDITOR.SELECTION_BOTTOM_TO_TOP = 1;\n\tCKEDITOR.SELECTION_LEFT_TO_RIGHT = 2;\n\tCKEDITOR.SELECTION_RIGHT_TO_LEFT = 3;\n\n\t/**\n\t * SelectionRegion utility class which provides metadata about the selection. The metadata may be the start and end\n\t * rectangles, caret region, etc. **This class is not intended to be used standalone. Its functions will\n\t * be merged into each editor instance, so the developer may use them directly via the editor, without making\n\t * an instance of this class**.\n\t *\n\t * @class SelectionRegion\n\t * @constructor\n\t */\n\tfunction SelectionRegion() {}\n\n\tSelectionRegion.prototype = {\n\t\tconstructor: SelectionRegion,\n\n\t\t/**\n\t\t * Creates selection from two points in page coordinates.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method createSelectionFromPoint\n\t\t * @param {Number} x X point in page coordinates.\n\t\t * @param {Number} y Y point in page coordinates.\n\t\t */\n\t\tcreateSelectionFromPoint(x, y) {\n\t\t\tthis.createSelectionFromRange(x, y, x, y);\n\t\t},\n\n\t\t/**\n\t\t * Creates selection from range. A range consists from two points in page coordinates.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method createSelectionFromRange\n\t\t * @param {Number} startX X coordinate of the first point.\n\t\t * @param {Number} startY Y coordinate of the first point.\n\t\t * @param {Number} endX X coordinate of the second point.\n\t\t * @param {Number} endY Y coordinate of the second point.\n\t\t */\n\t\tcreateSelectionFromRange(startX, startY, endX, endY) {\n\t\t\tlet end;\n\t\t\tlet endContainer;\n\t\t\tlet endOffset;\n\t\t\tlet range;\n\t\t\tlet start;\n\t\t\tlet startContainer;\n\t\t\tlet startOffset;\n\n\t\t\tif (typeof document.caretPositionFromPoint === 'function') {\n\t\t\t\tstart = document.caretPositionFromPoint(startX, startY);\n\t\t\t\tend = document.caretPositionFromPoint(endX, endY);\n\n\t\t\t\tstartContainer = start.offsetNode;\n\t\t\t\tendContainer = end.offsetNode;\n\n\t\t\t\tstartOffset = start.offset;\n\t\t\t\tendOffset = end.offset;\n\n\t\t\t\trange = this.createRange();\n\t\t\t} else if (typeof document.caretRangeFromPoint === 'function') {\n\t\t\t\tstart = document.caretRangeFromPoint(startX, startY);\n\t\t\t\tend = document.caretRangeFromPoint(endX, endY);\n\n\t\t\t\tstartContainer = start.startContainer;\n\t\t\t\tendContainer = end.startContainer;\n\n\t\t\t\tstartOffset = start.startOffset;\n\t\t\t\tendOffset = end.startOffset;\n\n\t\t\t\trange = this.createRange();\n\t\t\t}\n\n\t\t\tif (range && document.getSelection) {\n\t\t\t\trange.setStart(\n\t\t\t\t\tnew CKEDITOR.dom.node(startContainer),\n\t\t\t\t\tstartOffset\n\t\t\t\t);\n\t\t\t\trange.setEnd(new CKEDITOR.dom.node(endContainer), endOffset);\n\n\t\t\t\tthis.getSelection().selectRanges([range]);\n\t\t\t} else if (typeof document.body.createTextRange === 'function') {\n\t\t\t\tconst selection = this.getSelection();\n\n\t\t\t\tselection.unlock();\n\n\t\t\t\trange = document.body.createTextRange();\n\t\t\t\trange.moveToPoint(startX, startY);\n\n\t\t\t\tconst endRange = range.duplicate();\n\t\t\t\tendRange.moveToPoint(endX, endY);\n\n\t\t\t\trange.setEndPoint('EndToEnd', endRange);\n\t\t\t\trange.select();\n\n\t\t\t\tthis.getSelection().lock();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the region of the current position of the caret. The points are in page coordinates.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method getCaretRegion\n\t\t * @return {Object} Returns object with the following properties:\n\t\t * - bottom\n\t\t * - left\n\t\t * - right\n\t\t * - top\n\t\t */\n\t\tgetCaretRegion() {\n\t\t\tconst selection = this.getSelection();\n\n\t\t\tlet region = {\n\t\t\t\tbottom: 0,\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t};\n\n\t\t\tconst bookmarks = selection.createBookmarks();\n\n\t\t\tif (!bookmarks.length) {\n\t\t\t\treturn region;\n\t\t\t}\n\n\t\t\tconst bookmarkNodeEl = bookmarks[0].startNode.$;\n\n\t\t\tbookmarkNodeEl.style.display = 'inline-block';\n\n\t\t\tregion = new CKEDITOR.dom.element(bookmarkNodeEl).getClientRect();\n\n\t\t\tbookmarkNodeEl.parentNode.removeChild(bookmarkNodeEl);\n\n\t\t\tconst scrollPos = new CKEDITOR.dom.window(\n\t\t\t\twindow\n\t\t\t).getScrollPosition();\n\n\t\t\tregion.bottom = scrollPos.y + region.bottom;\n\t\t\tregion.left = scrollPos.x + region.left;\n\t\t\tregion.right = scrollPos.x + region.right;\n\t\t\tregion.top = scrollPos.y + region.top;\n\n\t\t\treturn region;\n\t\t},\n\n\t\t/**\n\t\t * Returns data for the current selection.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method getSelectionData\n\t\t * @return {Object|null} Returns an object with the following data:\n\t\t * - element - The currently selected element, if any\n\t\t * - text - The selected text\n\t\t * - region - The data, returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionRegion:method\"}}{{/crossLink}}\n\t\t */\n\t\tgetSelectionData() {\n\t\t\tconst selection = this.getSelection();\n\n\t\t\tif (!selection.getNative()) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst result = {\n\t\t\t\telement: selection.getSelectedElement(),\n\t\t\t\ttext: selection.getSelectedText(),\n\t\t\t};\n\n\t\t\tresult.region = this.getSelectionRegion(selection);\n\n\t\t\treturn result;\n\t\t},\n\n\t\t/**\n\t\t * Returns the region of the current selection.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method getSelectionRegion\n\t\t * @return {Object} Returns object which is being returned from\n\t\t * {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getClientRectsRegion:method\"}}{{/crossLink}} with three more properties:\n\t\t * - direction - the direction of the selection. Can be one of these:\n\t\t *   1. CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t *   2. CKEDITOR.SELECTION_BOTTOM_TO_TOP\n\t\t * - height - The height of the selection region\n\t\t * - width - The width of the selection region\n\t\t */\n\t\tgetSelectionRegion() {\n\t\t\tconst region = this.getClientRectsRegion();\n\n\t\t\tregion.direction = this.getSelectionDirection();\n\n\t\t\tregion.height = region.bottom - region.top;\n\t\t\tregion.width = region.right - region.left;\n\n\t\t\treturn region;\n\t\t},\n\n\t\t/**\n\t\t * Returns true if the current selection is empty, false otherwise.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method isSelectionEmpty\n\t\t * @return {Boolean} Returns true if the current selection is empty, false otherwise.\n\t\t */\n\t\tisSelectionEmpty() {\n\t\t\tconst selection = this.getSelection();\n\n\t\t\tif (selection.getType() === CKEDITOR.SELECTION_NONE) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst ranges = selection.getRanges();\n\t\t\treturn ranges && ranges.length === 1 && ranges[0].collapsed;\n\t\t},\n\n\t\t/**\n\t\t * Returns object with data about the [client rectangles](https://developer.mozilla.org/en-US/docs/Web/API/Element.getClientRects) of the selection,\n\t\t * normalized across browses. All offsets below are in page coordinates.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method getClientRectsRegion\n\t\t * @return {Object} Returns object with the following data:\n\t\t * - bottom - bottom offset of all client rectangles\n\t\t * - left - left offset of all client rectangles\n\t\t * - right - right offset of all client rectangles\n\t\t * - top - top offset of all client rectangles\n\t\t * - startRect - An Object, which contains the following information:\n\t\t *     + bottom - bottom offset\n\t\t *     + height - the height of the rectangle\n\t\t *     + left - left offset of the selection\n\t\t *     + right - right offset of the selection\n\t\t *     + top - top offset of the selection\n\t\t *     + width - the width of the rectangle\n\t\t * - endRect - An Object, which contains the following information:\n\t\t *     + bottom - bottom offset\n\t\t *     + height - the height of the rectangle\n\t\t *     + left - left offset of the selection\n\t\t *     + right - right offset of the selection\n\t\t *     + top - top offset of the selection\n\t\t *     + width - the width of the rectangle\n\t\t *\n\t\t * If there is no native selection, the objects will be filled with 0.\n\t\t */\n\t\tgetClientRectsRegion() {\n\t\t\tconst selection = this.getSelection();\n\t\t\tconst nativeSelection = selection.getNative();\n\n\t\t\tconst defaultRect = {\n\t\t\t\tbottom: 0,\n\t\t\t\theight: 0,\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\twidth: 0,\n\t\t\t};\n\n\t\t\tlet region = {\n\t\t\t\tbottom: 0,\n\t\t\t\tendRect: defaultRect,\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tstartRect: defaultRect,\n\t\t\t};\n\n\t\t\tif (!nativeSelection) {\n\t\t\t\treturn region;\n\t\t\t}\n\n\t\t\tlet bottom = 0;\n\t\t\tlet clientRects;\n\t\t\tlet left = Infinity;\n\t\t\tlet right = -Infinity;\n\t\t\tlet top = Infinity;\n\n\t\t\tif (nativeSelection.createRange) {\n\t\t\t\tclientRects = nativeSelection.createRange().getClientRects();\n\t\t\t} else {\n\t\t\t\tclientRects =\n\t\t\t\t\tnativeSelection.rangeCount > 0\n\t\t\t\t\t\t? nativeSelection.getRangeAt(0).getClientRects()\n\t\t\t\t\t\t: [];\n\t\t\t}\n\n\t\t\tif (clientRects.length === 0) {\n\t\t\t\tregion = this.getCaretRegion();\n\t\t\t} else {\n\t\t\t\tfor (let i = 0, length = clientRects.length; i < length; i++) {\n\t\t\t\t\tconst item = clientRects[i];\n\n\t\t\t\t\tif (item.left < left) {\n\t\t\t\t\t\tleft = item.left;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (item.right > right) {\n\t\t\t\t\t\tright = item.right;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (item.top < top) {\n\t\t\t\t\t\ttop = item.top;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (item.bottom > bottom) {\n\t\t\t\t\t\tbottom = item.bottom;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst scrollPos = new CKEDITOR.dom.window(\n\t\t\t\t\twindow\n\t\t\t\t).getScrollPosition();\n\n\t\t\t\tregion.bottom = scrollPos.y + bottom;\n\t\t\t\tregion.left = scrollPos.x + left;\n\t\t\t\tregion.right = scrollPos.x + right;\n\t\t\t\tregion.top = scrollPos.y + top;\n\n\t\t\t\tif (clientRects.length) {\n\t\t\t\t\tconst endRect = clientRects[clientRects.length - 1];\n\t\t\t\t\tconst startRect = clientRects[0];\n\n\t\t\t\t\tregion.endRect = {\n\t\t\t\t\t\tbottom: scrollPos.y + endRect.bottom,\n\t\t\t\t\t\theight: endRect.height,\n\t\t\t\t\t\tleft: scrollPos.x + endRect.left,\n\t\t\t\t\t\tright: scrollPos.x + endRect.right,\n\t\t\t\t\t\ttop: scrollPos.y + endRect.top,\n\t\t\t\t\t\twidth: endRect.width,\n\t\t\t\t\t};\n\n\t\t\t\t\tregion.startRect = {\n\t\t\t\t\t\tbottom: scrollPos.y + startRect.bottom,\n\t\t\t\t\t\theight: startRect.height,\n\t\t\t\t\t\tleft: scrollPos.x + startRect.left,\n\t\t\t\t\t\tright: scrollPos.x + startRect.right,\n\t\t\t\t\t\ttop: scrollPos.y + startRect.top,\n\t\t\t\t\t\twidth: startRect.width,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn region;\n\t\t},\n\n\t\t/**\n\t\t * Retrieves the direction of the selection. The direction is from top to bottom or from bottom to top.\n\t\t * For IE < 9 it is not possible, so the direction for these browsers will be always CKEDITOR.SELECTION_TOP_TO_BOTTOM.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method getSelectionDirection\n\t\t * @return {Number} Returns a number which represents selection direction. It might be one of these:\n\t\t * - CKEDITOR.SELECTION_TOP_TO_BOTTOM;\n\t\t * - CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\t\t */\n\t\tgetSelectionDirection() {\n\t\t\tlet direction = CKEDITOR.SELECTION_TOP_TO_BOTTOM;\n\t\t\tconst selection = this.getSelection();\n\t\t\tconst nativeSelection = selection.getNative();\n\n\t\t\tif (!nativeSelection) {\n\t\t\t\treturn direction;\n\t\t\t}\n\n\t\t\tlet anchorNode;\n\n\t\t\tif (\n\t\t\t\t(anchorNode = nativeSelection.anchorNode) &&\n\t\t\t\tanchorNode.compareDocumentPosition\n\t\t\t) {\n\t\t\t\tconst position = anchorNode.compareDocumentPosition(\n\t\t\t\t\tnativeSelection.focusNode\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\t(!position &&\n\t\t\t\t\t\tnativeSelection.anchorOffset >\n\t\t\t\t\t\t\tnativeSelection.focusOffset) ||\n\t\t\t\t\tposition === Node.DOCUMENT_POSITION_PRECEDING\n\t\t\t\t) {\n\t\t\t\t\tdirection = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn direction;\n\t\t},\n\t};\n\n\tCKEDITOR.plugins.add('ae_selectionregion', {\n\t\tinit(editor) {\n\t\t\tlet attr;\n\t\t\tconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\t\t\tfor (attr in SelectionRegion.prototype) {\n\t\t\t\tif (\n\t\t\t\t\thasOwnProperty.call(SelectionRegion.prototype, attr) &&\n\t\t\t\t\ttypeof editor[attr] === 'undefined'\n\t\t\t\t) {\n\t\t\t\t\teditor[attr] = SelectionRegion.prototype[attr];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nconst IE_NON_DIRECTLY_EDITABLE_ELEMENT = {\n\ttable: 1,\n\tcol: 1,\n\tcolgroup: 1,\n\ttbody: 1,\n\ttd: 1,\n\ttfoot: 1,\n\tth: 1,\n\tthead: 1,\n\ttr: 1,\n};\n\n/**\n * Table class utility. Provides methods for create, delete and update tables.\n *\n * @class CKEDITOR.Table\n * @constructor\n * @param {Object} editor The CKEditor instance.\n */\n\nfunction Table(editor) {\n\tthis._editor = editor;\n}\n\nTable.HEADING_BOTH = 'Both';\nTable.HEADING_COL = 'Column';\nTable.HEADING_NONE = 'None';\nTable.HEADING_ROW = 'Row';\n\nTable.prototype = {\n\tconstructor: Table,\n\n\t/**\n\t * Creates a table.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method create\n\t * @param {Object} config Table configuration object\n\t * @return {Object} The created table\n\t */\n\tcreate(config) {\n\t\tconst editor = this._editor;\n\t\tconst table = this._createElement('table');\n\n\t\tconfig = config || {};\n\n\t\t// Generate the rows and cols.\n\t\tconst tbody = table.append(this._createElement('tbody'));\n\t\tconst rows = config.rows || 1;\n\t\tconst cols = config.cols || 1;\n\n\t\tfor (let i = 0; i < rows; i++) {\n\t\t\tconst row = tbody.append(this._createElement('tr'));\n\t\t\tfor (let j = 0; j < cols; j++) {\n\t\t\t\tconst cell = row.append(this._createElement('td'));\n\n\t\t\t\tcell.appendBogus();\n\t\t\t}\n\t\t}\n\n\t\tthis.setAttributes(table, config.attrs);\n\t\tthis.setHeading(table, config.heading);\n\n\t\t// Insert the table element if we're creating one.\n\t\teditor.insertElement(table);\n\n\t\tconst firstCell = new CKEDITOR.dom.element(table.$.rows[0].cells[0]);\n\t\tconst range = editor.createRange();\n\t\trange.moveToPosition(firstCell, CKEDITOR.POSITION_AFTER_START);\n\t\trange.select();\n\n\t\treturn table;\n\t},\n\n\t/**\n\t * Retrieves a table from the current selection.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method getFromSelection\n\t * @return {CKEDITOR.dom.element} The retrieved table or null if not found.\n\t */\n\tgetFromSelection() {\n\t\tlet table;\n\t\tconst selection = this._editor.getSelection();\n\t\tconst selected = selection.getSelectedElement();\n\n\t\tif (selected && selected.is('table')) {\n\t\t\ttable = selected;\n\t\t} else {\n\t\t\tconst ranges = selection.getRanges();\n\n\t\t\tif (ranges.length > 0) {\n\t\t\t\t// Webkit could report the following range on cell selection (#4948):\n\t\t\t\t// <table><tr><td>[&nbsp;</td></tr></table>]\n\n\t\t\t\t/* istanbul ignore else */\n\t\t\t\tif (CKEDITOR.env.webkit) {\n\t\t\t\t\tranges[0].shrink(CKEDITOR.NODE_ELEMENT);\n\t\t\t\t}\n\n\t\t\t\ttable = this._editor\n\t\t\t\t\t.elementPath(ranges[0].getCommonAncestor(true))\n\t\t\t\t\t.contains('table', 1);\n\t\t\t}\n\t\t}\n\n\t\treturn table;\n\t},\n\n\t/**\n\t * Checks if a given table can be considered as editable. This method\n\t * workarounds a limitation of IE where for some elements (like table),\n\t * `isContentEditable` returns always false. This is because IE does not support\n\t * `contenteditable` on such elements. However, despite such elements\n\t * cannot be set as content editable directly, a content editable SPAN,\n\t * or DIV element can be placed inside the individual table cells.\n\t * See https://msdn.microsoft.com/en-us/library/ms537837%28v=VS.85%29.aspx\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method isEditable\n\t * @param {CKEDITOR.dom.element} el The table element to test if editable\n\t * @return {Boolean}\n\t */\n\tisEditable(el) {\n\t\tif (!CKEDITOR.env.ie || !el.is(IE_NON_DIRECTLY_EDITABLE_ELEMENT)) {\n\t\t\treturn !el.isReadOnly();\n\t\t}\n\n\t\tif (el.hasAttribute('contenteditable')) {\n\t\t\treturn el.getAttribute('contenteditable') !== 'false';\n\t\t}\n\n\t\treturn this.isEditable(el.getParent());\n\t},\n\n\t/**\n\t * Returns which heading style is set for the given table.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method getHeading\n\t * @param {CKEDITOR.dom.element} table The table to gather the heading from. If null, it will be retrieved from the current selection.\n\t * @return {String} The heading of the table. Expected values are `CKEDITOR.Table.NONE`, `CKEDITOR.Table.ROW`, `CKEDITOR.Table.COL` and `CKEDITOR.Table.BOTH`.\n\t */\n\tgetHeading(table) {\n\t\ttable = table || this.getFromSelection();\n\n\t\tif (!table) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst rowHeadingSettings = table.$.tHead !== null;\n\n\t\tlet colHeadingSettings = true;\n\n\t\t// Check if all of the first cells in every row are TH\n\t\tfor (let row = 0; row < table.$.rows.length; row++) {\n\t\t\t// If just one cell isn't a TH then it isn't a header column\n\t\t\tconst cell = table.$.rows[row].cells[0];\n\n\t\t\tif (cell && cell.nodeName.toLowerCase() !== 'th') {\n\t\t\t\tcolHeadingSettings = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet headingSettings = Table.HEADING_NONE;\n\n\t\tif (rowHeadingSettings) {\n\t\t\theadingSettings = Table.HEADING_ROW;\n\t\t}\n\n\t\tif (colHeadingSettings) {\n\t\t\theadingSettings =\n\t\t\t\theadingSettings === Table.HEADING_ROW\n\t\t\t\t\t? Table.HEADING_BOTH\n\t\t\t\t\t: Table.HEADING_COL;\n\t\t}\n\n\t\treturn headingSettings;\n\t},\n\n\t/**\n\t * Removes a table from the editor.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method remove\n\t * @param {CKEDITOR.dom.element} table The table element which table style should be removed.\n\t */\n\tremove(table) {\n\t\tconst editor = this._editor;\n\n\t\tif (table) {\n\t\t\ttable.remove();\n\t\t} else {\n\t\t\ttable = editor.elementPath().contains('table', 1);\n\n\t\t\tif (table) {\n\t\t\t\t// If the table's parent has only one child remove it as well (unless it's a table cell, or the editable element) (#5416, #6289, #12110)\n\t\t\t\tconst parent = table.getParent();\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\tif (\n\t\t\t\t\tparent.getChildCount() === 1 &&\n\t\t\t\t\t!parent.is('td', 'th') &&\n\t\t\t\t\t!parent.equals(editable)\n\t\t\t\t) {\n\t\t\t\t\ttable = parent;\n\t\t\t\t}\n\n\t\t\t\tconst range = editor.createRange();\n\t\t\t\trange.moveToPosition(table, CKEDITOR.POSITION_BEFORE_START);\n\t\t\t\ttable.remove();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Assigns provided attributes to a table.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method setAttributes\n\t * @param {Object} table The table to which the attributes should be assigned\n\t * @param {Object} attrs The attributes which have to be assigned to the table\n\t */\n\tsetAttributes(table, attrs) {\n\t\tif (attrs) {\n\t\t\tObject.keys(attrs).forEach(attr => {\n\t\t\t\ttable.setAttribute(attr, attrs[attr]);\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Sets the appropriate table heading style to a table.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method setHeading\n\t * @param {CKEDITOR.dom.element} table The table element to which the heading should be set. If null, it will be retrieved from the current selection.\n\t * @param {String} heading The table heading to be set. Accepted values are: `CKEDITOR.Table.NONE`, `CKEDITOR.Table.ROW`, `CKEDITOR.Table.COL` and `CKEDITOR.Table.BOTH`.\n\t */\n\tsetHeading(table, heading) {\n\t\ttable = table || this.getFromSelection();\n\n\t\tlet i;\n\t\tlet newCell;\n\t\tlet tableHead;\n\t\tconst tableBody = table.getElementsByTag('tbody').getItem(0);\n\n\t\tlet tableHeading = this.getHeading(table);\n\t\tconst hadColHeading =\n\t\t\ttableHeading === Table.HEADING_COL ||\n\t\t\ttableHeading === Table.HEADING_BOTH;\n\n\t\tconst needColHeading =\n\t\t\theading === Table.HEADING_COL || heading === Table.HEADING_BOTH;\n\t\tconst needRowHeading =\n\t\t\theading === Table.HEADING_ROW || heading === Table.HEADING_BOTH;\n\n\t\t// If we need row heading and don't have a <thead> element yet, move the\n\t\t// first row of the table to the head and convert the nodes to <th> ones.\n\t\tif (!table.$.tHead && needRowHeading) {\n\t\t\tconst tableFirstRow = tableBody.getElementsByTag('tr').getItem(0);\n\t\t\tconst tableFirstRowChildCount = tableFirstRow.getChildCount();\n\n\t\t\t// Change TD to TH:\n\t\t\tfor (i = 0; i < tableFirstRowChildCount; i++) {\n\t\t\t\tconst cell = tableFirstRow.getChild(i);\n\n\t\t\t\t// Skip bookmark nodes. (#6155)\n\t\t\t\tif (\n\t\t\t\t\tcell.type === CKEDITOR.NODE_ELEMENT &&\n\t\t\t\t\t!cell.data('cke-bookmark')\n\t\t\t\t) {\n\t\t\t\t\tcell.renameNode('th');\n\t\t\t\t\tcell.setAttribute('scope', 'col');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttableHead = this._createElement(table.$.createTHead());\n\t\t\ttableHead.append(tableFirstRow.remove());\n\t\t}\n\n\t\t// If we don't need row heading and we have a <thead> element, move the\n\t\t// row out of there and into the <tbody> element.\n\t\tif (table.$.tHead !== null && !needRowHeading) {\n\t\t\t// Move the row out of the THead and put it in the TBody:\n\t\t\ttableHead = this._createElement(table.$.tHead);\n\n\t\t\tconst previousFirstRow = tableBody.getFirst();\n\n\t\t\twhile (tableHead.getChildCount() > 0) {\n\t\t\t\tconst newFirstRow = tableHead.getFirst();\n\t\t\t\tconst newFirstRowChildCount = newFirstRow.getChildCount();\n\n\t\t\t\tfor (i = 0; i < newFirstRowChildCount; i++) {\n\t\t\t\t\tnewCell = newFirstRow.getChild(i);\n\n\t\t\t\t\tif (newCell.type === CKEDITOR.NODE_ELEMENT) {\n\t\t\t\t\t\tnewCell.renameNode('td');\n\t\t\t\t\t\tnewCell.removeAttribute('scope');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnewFirstRow.insertBefore(previousFirstRow);\n\t\t\t}\n\n\t\t\ttableHead.remove();\n\t\t}\n\n\t\ttableHeading = this.getHeading(table);\n\t\tconst hasColHeading =\n\t\t\ttableHeading === Table.HEADING_COL ||\n\t\t\ttableHeading === Table.HEADING_BOTH;\n\n\t\t// If we need column heading and the table doesn't have it, convert every first cell in\n\t\t// every row into a `<th scope=\"row\">` element.\n\t\tif (!hasColHeading && needColHeading) {\n\t\t\tfor (i = 0; i < table.$.rows.length; i++) {\n\t\t\t\tif (table.$.rows[i].cells[0].nodeName.toLowerCase() !== 'th') {\n\t\t\t\t\tnewCell = new CKEDITOR.dom.element(\n\t\t\t\t\t\ttable.$.rows[i].cells[0]\n\t\t\t\t\t);\n\t\t\t\t\tnewCell.renameNode('th');\n\t\t\t\t\tnewCell.setAttribute('scope', 'row');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we don't need column heading but the table has it, convert every first cell in every\n\t\t// row back into a `<td>` element.\n\t\tif (hadColHeading && !needColHeading) {\n\t\t\tfor (i = 0; i < table.$.rows.length; i++) {\n\t\t\t\tconst row = new CKEDITOR.dom.element(table.$.rows[i]);\n\n\t\t\t\tif (row.getParent().getName() === 'tbody') {\n\t\t\t\t\tnewCell = new CKEDITOR.dom.element(row.$.cells[0]);\n\t\t\t\t\tnewCell.renameNode('td');\n\t\t\t\t\tnewCell.removeAttribute('scope');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Creates a new CKEDITOR.dom.element using the passed tag name.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @protected\n\t * @method _createElement\n\t * @param {String} name The tag name from which an element should be created\n\t * @return {CKEDITOR.dom.element} Instance of CKEDITOR DOM element class\n\t */\n\t_createElement(name) {\n\t\treturn new CKEDITOR.dom.element(name, this._editor.document);\n\t},\n};\n\nCKEDITOR.on('instanceReady', event => {\n\tconst headingCommands = [\n\t\tTable.HEADING_NONE,\n\t\tTable.HEADING_ROW,\n\t\tTable.HEADING_COL,\n\t\tTable.HEADING_BOTH,\n\t];\n\n\tconst tableUtils = new Table(event.editor);\n\n\theadingCommands.forEach(heading => {\n\t\tevent.editor.addCommand('tableHeading' + heading, {\n\t\t\texec(_editor) {\n\t\t\t\ttableUtils.setHeading(null, heading);\n\t\t\t},\n\t\t});\n\t});\n});\n\nCKEDITOR.Table = CKEDITOR.Table || Table;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * CKEDITOR.tools class utility which adds additional methods to those of CKEditor.\n *\n * @class CKEDITOR.tools\n */\n\n/**\n * Sends a request using the JSONP technique.\n *\n * @memberof CKEDITOR.tools\n * @method jsonp\n * @param {CKEDITOR.template} urlTemplate The template of the URL to be requested. All properties passed in `urlParams` can be used, plus a `{callback}`, which represent a JSONP callback, must be defined.\n * @param {Function} callback A function to be called in case of success.\n * @param {Function} errorCallback A function to be called in case of failure.\n * @param {Object} urlParams Parameters to be passed to the `urlTemplate`.\n * @return {Object} An object with the following properties:\n *  - id: the transaction ID\n *  - a `cancel()` method\n * @static\n */\nCKEDITOR.tools.jsonp = function(\n\turlTemplate,\n\turlParams,\n\tcallback,\n\terrorCallback\n) {\n\tconst callbackKey = CKEDITOR.tools.getNextNumber();\n\n\turlParams = urlParams || {};\n\turlParams.callback = 'CKEDITOR._.jsonpCallbacks[' + callbackKey + ']';\n\n\tif (!CKEDITOR._.jsonpCallbacks) {\n\t\tCKEDITOR._.jsonpCallbacks = {};\n\t}\n\n\tCKEDITOR._.jsonpCallbacks[callbackKey] = function(response) {\n\t\tsetTimeout(() => {\n\t\t\tcleanUp();\n\n\t\t\tcallback(response);\n\t\t});\n\t};\n\n\tlet scriptElement = new CKEDITOR.dom.element('script');\n\tscriptElement.setAttribute('src', urlTemplate.output(urlParams));\n\tscriptElement.on('error', () => {\n\t\tcleanUp();\n\n\t\tif (errorCallback) {\n\t\t\terrorCallback();\n\t\t}\n\t});\n\n\tfunction cleanUp() {\n\t\tif (scriptElement) {\n\t\t\tscriptElement.remove();\n\t\t\tdelete CKEDITOR._.jsonpCallbacks[callbackKey];\n\t\t\tscriptElement = null;\n\t\t}\n\t}\n\n\tCKEDITOR.document.getBody().append(scriptElement);\n\n\treturn {\n\t\tcancel: cleanUp,\n\t\tid: callbackKey,\n\t};\n};\n\n/**\n * Returns a new object containing all of the properties of all the supplied\n * objects. The properties from later objects will overwrite those in earlier\n * objects.\n *\n * Passing in a single object will create a shallow copy of it.\n *\n * @memberof CKEDITOR.tools\n * @method merge\n * @param {Object} objects* One or more objects to merge.\n * @return {Object} A new merged object.\n * @static\n */\nCKEDITOR.tools.merge =\n\tCKEDITOR.tools.merge ||\n\tfunction(...args) {\n\t\tconst result = {};\n\n\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\tconst obj = args[i];\n\n\t\t\tfor (const key in obj) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tresult[key] = obj[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n/**\n * Simulates event on a DOM element.\n *\n * @memberof CKEDITOR.tools\n * @method simulate\n * @param {DOMElement} element The element on which the event shoud be simualted.\n * @param {String} event The name of the event which have to be simulated.\n * @static\n */\nCKEDITOR.tools.simulate = function(element, event) {\n\tconst eventInstance = document.createEvent('Events');\n\teventInstance.initEvent(event, true, false);\n\telement.dispatchEvent(eventInstance);\n};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_uicore')) {\n\t/**\n\t * UICore class which will handle user interactions with the editor. These interactions\n\t * might be triggered via mouse, keyboard or touch devices. The class fill fire an event via\n\t * CKEditor's event system - \"editorInteraction\". The UI may listen to this event and\n\t * execute some actions - for example to show/hide toolbars.\n\t *\n\t * By default if user presses the Esc key, 'editorInteraction' event won't be fired. However, this behaviour can be changed\n\t * by setting {{#crossLink \"CKEDITOR.plugins.ae_uicore/allowEsc:attribute\"}}{{/crossLink}} config property in editor's configuration to true.\n\t *\n\t * @class ae_uicore\n\t */\n\n\t/**\n\t * Fired when user interacts somehow with the browser. This may be clicking with the mouse, pressing keyboard button,\n\t * or touching screen. This even will be not fired after each interaction. It will be debounced. By default the timeout\n\t * is 50ms. This value can be overwritten via {{#crossLink \"CKEDITOR.plugins.ae_uicore/timeout:attribute\"}}{{/crossLink}}\n\t * property of editor's configuration, like: editor.config.uicore.timeout = 100\n\t *\n\t * @memberof ae_uicore\n\t * @event ae_uicore#editorInteraction\n\t * @param {Object} data An object which contains the following properties:\n\t * - nativeEvent - The event as received from CKEditor.\n\t * - selectionData - The data, returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t */\n\n\t/**\n\t * Fired by UI elements like Toolbars or Buttons when their state changes. The listener updates the live region with the provided data.\n\t *\n\t * @memberof ae_uicore\n\t * @event ae_uicore#ariaUpdate\n\t * @param {Object} data An object which contains the following properties:\n\t * - message - The provided message from the UI element.\n\t */\n\n\t/**\n\t * If set to true, the editor will still fire {{#crossLink \"CKEDITOR.plugins.ae_uicore/editorInteraction:event\"}}{{/crossLink}} event,\n\t * if user presses Esc key.\n\t *\n\t * @memberof ae_uicore\n\t * @attribute allowEsc\n\t * @default false\n\t * @type Boolean\n\t */\n\n\t/**\n\t * Specifies the default timeout after which the {{#crossLink \"CKEDITOR.plugins.ae_uicore/editorInteraction:event\"}}{{/crossLink}} event\n\t * will be fired.\n\t *\n\t * @memberof ae_uicore\n\t * @attribute timeout\n\t * @default 50 (ms)\n\t * @type Number\n\t */\n\n\tCKEDITOR.plugins.add('ae_uicore', {\n\t\t/**\n\t\t * Initializer lifecycle implementation for the UICore plugin.\n\t\t *\n\t\t * @memberof ae_uicore\n\t\t * @method init\n\t\t * @param {Object} editor The current CKEditor instance.\n\t\t * @protected\n\t\t */\n\t\tinit(editor) {\n\t\t\tlet ariaState = [];\n\n\t\t\tconst ariaElement = this._createAriaElement(editor.id);\n\n\t\t\tconst uiTasksTimeout = editor.config.uicore\n\t\t\t\t? editor.config.uicore.timeout\n\t\t\t\t: 50;\n\n\t\t\tconst handleUI = CKEDITOR.tools.debounce(event => {\n\t\t\t\tariaState = [];\n\n\t\t\t\tif (\n\t\t\t\t\tevent.name !== 'keyup' ||\n\t\t\t\t\tevent.data.$.keyCode !== 27 ||\n\t\t\t\t\teditor.config.allowEsc\n\t\t\t\t) {\n\t\t\t\t\tconst selectionData = editor.getSelectionData();\n\n\t\t\t\t\tif (selectionData) {\n\t\t\t\t\t\teditor.fire('editorInteraction', {\n\t\t\t\t\t\t\tnativeEvent: event.data.$,\n\t\t\t\t\t\t\tselectionData,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, uiTasksTimeout);\n\n\t\t\tconst handleAria = CKEDITOR.tools.debounce(_event => {\n\t\t\t\tariaElement.innerHTML = ariaState.join('. ');\n\t\t\t}, uiTasksTimeout);\n\n\t\t\tconst handleMouseLeave = CKEDITOR.tools.debounce(event => {\n\t\t\t\tconst aeUINodes = document.querySelectorAll('.ae-ui');\n\n\t\t\t\tlet found;\n\n\t\t\t\tfor (let i = 0; i < aeUINodes.length; i++) {\n\t\t\t\t\tif (aeUINodes[i].contains(event.data.$.relatedTarget)) {\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!found) {\n\t\t\t\t\thandleUI(event);\n\t\t\t\t}\n\t\t\t}, uiTasksTimeout);\n\n\t\t\teditor.on('ariaUpdate', event => {\n\t\t\t\t// handleAria is debounced function, so if it is being called multiple times, it will\n\t\t\t\t// be canceled until some time passes.\n\t\t\t\t// For that reason here we explicitly append the current message to the list of messages\n\t\t\t\t// and call handleAria. Since it is debounced, when some timeout passes,\n\t\t\t\t// all the messages will be applied to the live region and not only the last one.\n\n\t\t\t\tariaState.push(event.data.message);\n\n\t\t\t\thandleAria();\n\t\t\t});\n\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\tconst focusHandler = editable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'focus',\n\t\t\t\t\tevent => {\n\t\t\t\t\t\tfocusHandler.removeListener();\n\n\t\t\t\t\t\teditable.attachListener(editable, 'keyup', handleUI);\n\t\t\t\t\t\teditable.attachListener(editable, 'mouseup', handleUI);\n\t\t\t\t\t\teditable.attachListener(\n\t\t\t\t\t\t\teditable,\n\t\t\t\t\t\t\t'mouseleave',\n\t\t\t\t\t\t\thandleMouseLeave\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\thandleUI(event);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\n\t\t\teditor.on('destroy', _event => {\n\t\t\t\tariaElement.parentNode.removeChild(ariaElement);\n\n\t\t\t\thandleUI.detach();\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Creates and applies an HTML element to the body of the document which will contain ARIA messages.\n\t\t *\n\t\t * @memberof ae_uicore\n\t\t * @method _createAriaElement\n\t\t * @param {String} id The provided id of the element. It will be used as prefix for the final element Id.\n\t\t * @protected\n\t\t * @return {HTMLElement} The created and applied to DOM element.\n\t\t */\n\t\t_createAriaElement(id) {\n\t\t\tconst statusElement = document.createElement('div');\n\n\t\t\tstatusElement.className = 'ae-sr-only';\n\n\t\t\tstatusElement.setAttribute('aria-live', 'polite');\n\t\t\tstatusElement.setAttribute('role', 'status');\n\t\t\tstatusElement.setAttribute('id', id + 'LiveRegion');\n\n\t\t\tdocument.body.appendChild(statusElement);\n\n\t\t\treturn statusElement;\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nconst isIE = CKEDITOR.env.ie;\n\nif (!CKEDITOR.plugins.get('ae_addimages')) {\n\t/**\n\t * CKEditor plugin which allows Drag&Drop of images directly into the editable area. The image will be encoded\n\t * as Data URI. An event `beforeImageAdd` will be fired with the list of dropped images. If any of the listeners\n\t * returns `false` or cancels the event, the images won't be added to the content. Otherwise,\n\t * an event `imageAdd` will be fired with the inserted element into the editable area.\n\t *\n\t * @class CKEDITOR.plugins.ae_addimages\n\t */\n\n\t/**\n\t * Fired before adding images to the editor.\n\t *\n\t * @event CKEDITOR.plugins.ae_addimages#beforeImageAdd\n\t * @instance\n\t * @memberof CKEDITOR.plugins.ae_addimages\n\t * @param {Array} imageFiles Array of image files\n\t */\n\n\t/**\n\t * Fired when an image is being added to the editor successfully.\n\t *\n\t * @event CKEDITOR.plugins.ae_addimages#imageAdd\n\t * @instance\n\t * @memberof CKEDITOR.plugins.ae_addimages\n\t * @param {CKEDITOR.dom.element} el The created image with src as Data URI\n\t * @param {File} file The image file\n\t */\n\n\tCKEDITOR.plugins.add('ae_addimages', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t * The function registers a 'dragenter', 'dragover', 'drop' and `paste` events on the editing area.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method init\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tinit(editor) {\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'dragenter',\n\t\t\t\t\tthis._onDragEnter,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'dragover',\n\t\t\t\t\tthis._onDragOver,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'drop',\n\t\t\t\t\tthis._onDragDrop,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'paste',\n\t\t\t\t\tthis._onPaste,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Accepts an array of dropped files to the editor. Then, it filters the images and sends them for further\n\t\t * processing to {{#crossLink \"CKEDITOR.plugins.ae_addimages/_processFile:method\"}}{{/crossLink}}\n\t\t *\n\t\t * @fires CKEDITOR.plugins.ae_addimages#beforeImageAdd\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _handleFiles\n\t\t * @param {Array} files Array of dropped files. Only the images from this list will be processed.\n\t\t * @param {Object} editor The current editor instance\n\t\t * @protected\n\t\t */\n\t\t_handleFiles(files, editor) {\n\t\t\tlet file;\n\t\t\tlet i;\n\n\t\t\tconst imageFiles = [];\n\n\t\t\tfor (i = 0; i < files.length; i++) {\n\t\t\t\tfile = files[i];\n\n\t\t\t\tif (file.type.indexOf('image') === 0) {\n\t\t\t\t\timageFiles.push(file);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst result = editor.fire('beforeImageAdd', {\n\t\t\t\timageFiles,\n\t\t\t});\n\n\t\t\tif (result) {\n\t\t\t\tfor (i = 0; i < imageFiles.length; i++) {\n\t\t\t\t\tfile = imageFiles[i];\n\n\t\t\t\t\tthis._processFile(file, editor);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\t/**\n\t\t * Handles drag drop event. The function will create a selection from the current\n\t\t * point and will send a list of files to be processed to\n\t\t * {{#crossLink \"CKEDITOR.plugins.ae_addimages/_handleFiles:method\"}}{{/crossLink}} method.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _onDragDrop\n\t\t * @param {CKEDITOR.dom.event} event dragdrop event, as received natively from CKEditor\n\t\t * @protected\n\t\t */\n\t\t_onDragDrop(event) {\n\t\t\tconst nativeEvent = event.data.$;\n\n\t\t\tconst transferFiles = nativeEvent.dataTransfer.files;\n\n\t\t\tif (transferFiles.length > 0) {\n\t\t\t\tnew CKEDITOR.dom.event(nativeEvent).preventDefault();\n\n\t\t\t\tconst editor = event.listenerData.editor;\n\n\t\t\t\tevent.listenerData.editor.createSelectionFromPoint(\n\t\t\t\t\tnativeEvent.clientX,\n\t\t\t\t\tnativeEvent.clientY\n\t\t\t\t);\n\n\t\t\t\tthis._handleFiles(transferFiles, editor);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handles drag enter event. In case of IE, this function will prevent the event.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _onDragEnter\n\t\t * @param {DOM event} event dragenter event, as received natively from CKEditor\n\t\t * @protected\n\t\t */\n\t\t_onDragEnter(event) {\n\t\t\tif (isIE) {\n\t\t\t\tthis._preventEvent(event);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handles drag over event. In case of IE, this function will prevent the event.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _onDragOver\n\t\t * @param {DOM event} event dragover event, as received natively from CKEditor\n\t\t * @protected\n\t\t */\n\t\t_onDragOver(event) {\n\t\t\tif (isIE) {\n\t\t\t\tthis._preventEvent(event);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Checks if the pasted data is image and passes it to\n\t\t * {{#crossLink \"CKEDITOR.plugins.ae_addimages/_processFile:method\"}}{{/crossLink}} for processing.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _onPaste\n\t\t * @param {CKEDITOR.dom.event} event A `paste` event, as received natively from CKEditor\n\t\t * @protected\n\t\t */\n\t\t_onPaste(event) {\n\t\t\tif (\n\t\t\t\tevent.data &&\n\t\t\t\tevent.data.$ &&\n\t\t\t\tevent.data.$.clipboardData &&\n\t\t\t\tevent.data.$.clipboardData.items &&\n\t\t\t\tevent.data.$.clipboardData.items.length > 0\n\t\t\t) {\n\t\t\t\tconst pastedData = event.data.$.clipboardData.items[0];\n\n\t\t\t\tif (pastedData.type.indexOf('image') === 0) {\n\t\t\t\t\tconst imageFile = pastedData.getAsFile();\n\n\t\t\t\t\tthis._processFile(imageFile, event.listenerData.editor);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Prevents a native event.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _preventEvent\n\t\t * @param {DOM event} event The event to be prevented.\n\t\t * @protected\n\t\t */\n\t\t_preventEvent(event) {\n\t\t\tevent = new CKEDITOR.dom.event(event.data.$);\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t},\n\n\t\t/**\n\t\t * Processes an image file. The function creates an img element and sets as source\n\t\t * a Data URI, then fires an 'imageAdd' event via CKEditor's event system.\n\t\t *\n\t\t * @fires CKEDITOR.plugins.ae_addimages#imageAdd\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _preventEvent\n\t\t * @param {DOM event} event The event to be prevented.\n\t\t * @protected\n\t\t */\n\t\t_processFile(file, editor) {\n\t\t\tconst reader = new FileReader();\n\n\t\t\treader.addEventListener('loadend', () => {\n\t\t\t\tconst bin = reader.result;\n\n\t\t\t\tconst el = CKEDITOR.dom.element.createFromHtml(\n\t\t\t\t\t'<img src=\"' + bin + '\">'\n\t\t\t\t);\n\n\t\t\t\teditor.insertElement(el);\n\n\t\t\t\tconst imageData = {\n\t\t\t\t\tel,\n\t\t\t\t\tfile,\n\t\t\t\t};\n\n\t\t\t\teditor.fire('imageAdd', imageData);\n\t\t\t});\n\n\t\t\treader.readAsDataURL(file);\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_autolink')) {\n\t// Disables the auto URL detection feature in IE, their lacks functionality:\n\t// They convert the links only on space. We do on space, comma, semicolon and Enter.\n\tif (/MSIE ([^;]*)|Trident.*; rv:([0-9.]+)/.test(navigator.userAgent)) {\n\t\tdocument.execCommand('AutoUrlDetect', false, false);\n\t}\n\n\tconst KEY_BACK = 8;\n\n\tconst KEY_COMMA = 188;\n\n\tconst KEY_ENTER = 13;\n\n\tconst KEY_SEMICOLON = 186;\n\n\tconst KEY_SPACE = 32;\n\n\tconst DELIMITERS = [KEY_COMMA, KEY_ENTER, KEY_SEMICOLON, KEY_SPACE];\n\n\tconst REGEX_LAST_WORD = /[^\\s]+/gim;\n\n\t// Seen at https://stackoverflow.com/a/5717133/2103996\n\tconst REGEX_URL =\n\t\t'^(https?:\\\\/\\\\/)?' + // protocol\n\t\t'((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n\t\t'((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n\t\t'(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n\t\t'(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n\t\t'(\\\\#[-a-z\\\\d_]*)?$';\n\n\tconst REGEX_EMAIL = /[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}/i;\n\n\t/**\n\t * CKEditor plugin which automatically generates links when user types text which looks like URL.\n\t *\n\t * @class CKEDITOR.plugins.ae_autolink\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_autolink', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t * The function registers the `keyup` event on the editing area.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method init\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tinit(editor) {\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'keyup',\n\t\t\t\t\tthis._onKeyUp,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\n\t\t\teditor.on('paste', event => {\n\t\t\t\tif (event.data.method === 'paste') {\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.data.dataValue.indexOf('<') > -1 ||\n\t\t\t\t\t\tevent.data.dataValue.indexOf('&lt;') > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tevent.data.dataValue.indexOf('<u><font color=\"') >\n\t\t\t\t\t\t\t-1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tevent.data.dataValue = event.data.dataValue.replace(\n\t\t\t\t\t\t\t\t/<u><font color=\"#(.*?)\">|<\\/font><\\/u>/g,\n\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst instance = this;\n\n\t\t\t\t\tevent.data.dataValue = event.data.dataValue.replace(\n\t\t\t\t\t\tRegExp(REGEX_URL, 'gim'),\n\t\t\t\t\t\turl => {\n\t\t\t\t\t\t\tif (instance._isValidURL(url)) {\n\t\t\t\t\t\t\t\tif (instance._isValidEmail(url)) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t'<a href=\"mailto:' +\n\t\t\t\t\t\t\t\t\t\turl +\n\t\t\t\t\t\t\t\t\t\t'\">' +\n\t\t\t\t\t\t\t\t\t\turl +\n\t\t\t\t\t\t\t\t\t\t'</a>'\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t'<a href=\"' + url + '\">' + url + '</a>'\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Retrieves the last word introduced by the user. Reads from the current\n\t\t * caret position backwards until it finds the first white space.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method _getLastWord\n\t\t * @protected\n\t\t * @return {String} The last word introduced by user\n\t\t */\n\t\t_getLastWord(editor) {\n\t\t\tconst range = editor.getSelection().getRanges()[0];\n\n\t\t\tif (!range) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst offset = range.startOffset;\n\n\t\t\tlet previousText = '';\n\n\t\t\t// The user pressed Enter, so we have to look on the previous node\n\t\t\tif (this._currentKeyCode === KEY_ENTER) {\n\t\t\t\tlet previousNode = range.startContainer.getPrevious();\n\n\t\t\t\tlet lastChild;\n\n\t\t\t\tif (previousNode) {\n\t\t\t\t\t// If previous node is a SPACE, (it does not have 'getLast' method),\n\t\t\t\t\t// ignore it and find the previous text node\n\t\t\t\t\twhile (!previousNode.getLast) {\n\t\t\t\t\t\tpreviousNode = previousNode.getPrevious();\n\t\t\t\t\t}\n\n\t\t\t\t\tlastChild = previousNode.getLast();\n\n\t\t\t\t\t// Depending on the browser, the last child node may be a <BR>\n\t\t\t\t\t// (which does not have 'getText' method),\n\t\t\t\t\t// so ignore it and find the previous text node\n\t\t\t\t\twhile (lastChild && !lastChild.getText()) {\n\t\t\t\t\t\tlastChild = lastChild.getPrevious();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Check if the lastChild is already a link\n\t\t\t\tif (!(lastChild && lastChild.$.href)) {\n\t\t\t\t\tthis._startContainer = lastChild;\n\t\t\t\t\tpreviousText = lastChild ? lastChild.getText() : '';\n\t\t\t\t\tthis._offset = previousText.length;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._startContainer = range.startContainer;\n\n\t\t\t\t// Last character is the delimiter, ignore it\n\t\t\t\tpreviousText = this._startContainer\n\t\t\t\t\t.getText()\n\t\t\t\t\t.substring(0, offset - 1);\n\n\t\t\t\tthis._offset = offset - 1;\n\t\t\t}\n\n\t\t\tlet lastWord = '';\n\n\t\t\tconst match = previousText.match(REGEX_LAST_WORD);\n\n\t\t\tif (match) {\n\t\t\t\tlastWord = match.pop();\n\t\t\t}\n\n\t\t\treturn lastWord;\n\t\t},\n\n\t\t/**\n\t\t * Checks if the given link is a valid Email.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method isValidEmail\n\t\t * @param {String} link The email we want to know if it is a valid Email\n\t\t * @protected\n\t\t * @return {Boolean} Returns true if the email is a valid Email, false otherwise\n\t\t */\n\t\t_isValidEmail(email) {\n\t\t\treturn REGEX_EMAIL.test(email);\n\t\t},\n\n\t\t/**\n\t\t * Checks if the given link is a valid URL.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method isValidURL\n\t\t * @param {String} link The link we want to know if it is a valid URL\n\t\t * @protected\n\t\t * @return {Boolean} Returns true if the link is a valid URL, false otherwise\n\t\t */\n\t\t_isValidURL(link) {\n\t\t\treturn RegExp(REGEX_URL, 'i').test(link);\n\t\t},\n\n\t\t/**\n\t\t * Listens to the `keydown` event and if the keycode is `Backspace`, removes the previously\n\t\t * created link.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method _onKeyDown\n\t\t * @param {EventFacade} event EventFacade object\n\t\t * @protected\n\t\t */\n\t\t_onKeyDown(event) {\n\t\t\tconst nativeEvent = event.data.$;\n\n\t\t\tconst editor = event.listenerData.editor;\n\n\t\t\tconst editable = editor.editable();\n\n\t\t\teditable.removeListener('keydown', this._onKeyDown);\n\n\t\t\tif (nativeEvent.keyCode === KEY_BACK) {\n\t\t\t\tevent.cancel();\n\t\t\t\tevent.data.preventDefault();\n\n\t\t\t\tthis._removeLink(editor);\n\t\t\t}\n\n\t\t\tthis._ckLink = null;\n\t\t},\n\n\t\t/**\n\t\t * Listens to the `Enter` and `Space` key events in order to check if the last word\n\t\t * introduced by the user should be replaced by a link element.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method _onKeyUp\n\t\t * @param {EventFacade} event EventFacade object\n\t\t * @protected\n\t\t */\n\t\t_onKeyUp(event) {\n\t\t\tconst nativeEvent = event.data.$;\n\n\t\t\tthis._currentKeyCode = nativeEvent.keyCode;\n\n\t\t\tif (DELIMITERS.indexOf(this._currentKeyCode) !== -1) {\n\t\t\t\tconst editor = event.listenerData.editor;\n\n\t\t\t\tconst lastWord = this._getLastWord(editor);\n\n\t\t\t\tif (this._isValidURL(lastWord)) {\n\t\t\t\t\tthis._replaceContentByLink(editor, lastWord);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Replaces content by a link element.\n\t\t *\n\t\t * @fires CKEDITOR.plugins.ae_autolink#autolinkAdd\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method _replaceContentByLink\n\t\t * @param {String} content The text that has to be replaced by an link element\n\t\t * @protected\n\t\t */\n\t\t_replaceContentByLink(editor, content) {\n\t\t\tlet range = editor.createRange();\n\t\t\tconst node = CKEDITOR.dom.element.get(this._startContainer);\n\t\t\tconst offset = this._offset;\n\n\t\t\t// Select the content, so CKEDITOR.Link can properly replace it\n\t\t\trange.setStart(node, offset - content.length);\n\t\t\trange.setEnd(node, offset);\n\t\t\trange.select();\n\n\t\t\tconst ckLink = new CKEDITOR.Link(editor);\n\t\t\tckLink.create(content);\n\t\t\tthis._ckLink = ckLink;\n\n\t\t\tconst linkNode = ckLink.getFromSelection();\n\t\t\teditor.fire('autolinkAdd', linkNode);\n\n\t\t\tthis._subscribeToKeyEvent(editor);\n\n\t\t\t// Now range is on the link and it is selected. We have to\n\t\t\t// return focus to the caret position.\n\t\t\trange = editor.getSelection().getRanges()[0];\n\n\t\t\t// If user pressed `Enter`, get the next editable node at position 0,\n\t\t\t// otherwise set the cursor at the next character of the link (the white space)\n\t\t\tif (this._currentKeyCode === KEY_ENTER) {\n\t\t\t\tconst nextEditableNode = range.getNextEditableNode();\n\n\t\t\t\trange.setStart(nextEditableNode, 0);\n\t\t\t\trange.setEnd(nextEditableNode, 0);\n\t\t\t} else {\n\t\t\t\tconst enclosedNode = range.getEnclosedNode();\n\n\t\t\t\trange.setStart(enclosedNode, 0);\n\t\t\t\trange.setEnd(enclosedNode, 0);\n\t\t\t}\n\n\t\t\trange.select();\n\t\t},\n\n\t\t/**\n\t\t * Fired when a URL is detected in text and converted to a link.\n\t\t *\n\t\t * @event CKEDITOR.plugins.ae_autolink#autolinkAdd\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @param {CKEDITOR.dom.element} el Node of the created link.\n\t\t */\n\n\t\t/**\n\t\t * Removes the created link element, and replaces it by its text.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method _removeLink\n\t\t * @protected\n\t\t */\n\t\t_removeLink(editor) {\n\t\t\tconst range = editor.getSelection().getRanges()[0];\n\t\t\tconst caretOffset = range.startOffset;\n\n\t\t\t// Select the link, so CKEDITOR.Link can properly remove it\n\t\t\tconst linkNode =\n\t\t\t\tthis._startContainer.getNext() || this._startContainer;\n\n\t\t\tconst newRange = editor.createRange();\n\t\t\tnewRange.setStart(linkNode, 0);\n\t\t\tnewRange.setEndAfter(linkNode);\n\t\t\tnewRange.select();\n\n\t\t\tthis._ckLink.remove();\n\n\t\t\t// Return focus to the caret position\n\t\t\trange.setEnd(range.startContainer, caretOffset);\n\t\t\trange.setStart(range.startContainer, caretOffset);\n\n\t\t\trange.select();\n\t\t},\n\n\t\t/**\n\t\t * Subscribe to a key event of the editable aria.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method _subscribeToKeyEvent\n\t\t * @protected\n\t\t */\n\t\t_subscribeToKeyEvent(editor) {\n\t\t\tconst editable = editor.editable();\n\n\t\t\t// Change the priority of keydown listener - 1 means the highest priority.\n\t\t\t// In Chrome on pressing `Enter` the listener is not being invoked.\n\t\t\t// See http://dev.ckeditor.com/ticket/11861 for more information.\n\t\t\teditable.attachListener(\n\t\t\t\teditable,\n\t\t\t\t'keydown',\n\t\t\t\tthis._onKeyDown,\n\t\t\t\tthis,\n\t\t\t\t{\n\t\t\t\t\teditor,\n\t\t\t\t},\n\t\t\t\t1\n\t\t\t);\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_autolist')) {\n\tconst KEY_BACK = 8;\n\n\tconst KEY_SPACE = 32;\n\n\tconst DEFAULT_CONFIG = [\n\t\t{\n\t\t\tregex: /^\\*$/,\n\t\t\ttype: 'bulletedlist',\n\t\t},\n\t\t{\n\t\t\tregex: /^1\\.$/,\n\t\t\ttype: 'numberedlist',\n\t\t},\n\t];\n\n\t/**\n\t * CKEditor plugin which automatically generates ordered/unordered list when user types text which looks like a list.\n\t *\n\t * @class CKEDITOR.plugins.ae_autolist\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_autolist', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKeditor plugin lifecycle.\n\t\t * The function registers the `keydown` event on the content editing area.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolist\n\t\t * @method init\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tinit(editor) {\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'keydown',\n\t\t\t\t\tthis._onKeyDown,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Checks for pressing the `Backspace` key in order to undo the list creation.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolist\n\t\t * @method _checkForBackspaceAndUndo\n\t\t * @param {Event} event Event object\n\t\t * @protected\n\t\t */\n\t\t_checkForBackspaceAndUndo(event) {\n\t\t\tconst editor = event.listenerData.editor;\n\n\t\t\tconst nativeEvent = event.data.$;\n\n\t\t\tconst editable = editor.editable();\n\n\t\t\teditable.removeListener('keydown', this._checkForBackspaceAndUndo);\n\n\t\t\tif (nativeEvent.keyCode === KEY_BACK) {\n\t\t\t\teditor.execCommand('undo');\n\t\t\t\teditor.insertHtml(event.listenerData.bullet + '&nbsp;');\n\t\t\t\tevent.data.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Checks current line to find match with MATCHES object to create OL or UL.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolist\n\t\t * @method _checkLine\n\t\t * @param {editor} Editor object\n\t\t * @protected\n\t\t * @return {Object|null} Returns an object which contains the detected list config if any\n\t\t */\n\t\t_getListConfig(editor) {\n\t\t\tconst configRegex = editor.config.autolist || DEFAULT_CONFIG;\n\n\t\t\tconst range = editor.getSelection().getRanges()[0];\n\n\t\t\tconst textContainer = range.endContainer.getText();\n\n\t\t\tconst bullet = textContainer.substring(0, range.startOffset);\n\n\t\t\tconst text = textContainer.substring(\n\t\t\t\trange.startOffset,\n\t\t\t\ttextContainer.length\n\t\t\t);\n\n\t\t\tlet index = 0;\n\n\t\t\tconst regexLen = configRegex.length;\n\n\t\t\tlet autolistCfg = null;\n\n\t\t\twhile (!autolistCfg && regexLen > index) {\n\t\t\t\tconst regexItem = configRegex[index];\n\n\t\t\t\tif (regexItem.regex.test(bullet)) {\n\t\t\t\t\tautolistCfg = {\n\t\t\t\t\t\tbullet,\n\t\t\t\t\t\teditor,\n\t\t\t\t\t\ttext,\n\t\t\t\t\t\ttype: regexItem.type,\n\t\t\t\t\t};\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\treturn autolistCfg;\n\t\t},\n\n\t\t/**\n\t\t * Create list with different types: Bulleted or Numbered list\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolist\n\t\t * @method _createList\n\t\t * @param {Object} listConfig Object that contains bullet, text and type for creating the list\n\t\t * @protected\n\t\t */\n\t\t_createList(listConfig) {\n\t\t\tconst editor = listConfig.editor;\n\n\t\t\tconst range = editor.getSelection().getRanges()[0];\n\n\t\t\trange.endContainer.setText(listConfig.text);\n\t\t\teditor.execCommand(listConfig.type);\n\n\t\t\tconst editable = editor.editable();\n\n\t\t\t// Subscribe to keydown in order to check if the next key press is `Backspace`.\n\t\t\t// If so, the creation of the list will be discarded.\n\t\t\teditable.attachListener(\n\t\t\t\teditable,\n\t\t\t\t'keydown',\n\t\t\t\tthis._checkForBackspaceAndUndo,\n\t\t\t\tthis,\n\t\t\t\t{\n\t\t\t\t\teditor,\n\t\t\t\t\tbullet: listConfig.bullet,\n\t\t\t\t},\n\t\t\t\t1\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Listens to the `Space` key events to check if the last word\n\t\t * introduced by the user should be replaced by a list (OL or UL)\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolist\n\t\t * @method _onKeyDown\n\t\t * @param {Event} event Event object\n\t\t * @protected\n\t\t */\n\t\t_onKeyDown(event) {\n\t\t\tconst nativeEvent = event.data.$;\n\n\t\t\tif (nativeEvent.keyCode === KEY_SPACE) {\n\t\t\t\tconst listConfig = this._getListConfig(\n\t\t\t\t\tevent.listenerData.editor\n\t\t\t\t);\n\n\t\t\t\tif (listConfig) {\n\t\t\t\t\tevent.data.preventDefault();\n\t\t\t\t\tthis._createList(listConfig);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * CKEditor plugin: Dragable image resizing\n * https://github.com/sstur/ck-dragresize\n * - Shows semi-transparent overlay while resizing\n * - Enforces Aspect Ratio (unless holding shift)\n * - Snap to size of other images in editor\n * - Escape while dragging cancels resize\n */\nif (!CKEDITOR.plugins.get('ae_dragresize')) {\n\tconst IMAGE_HANDLES = {\n\t\tboth: ['tl', 'tm', 'tr', 'lm', 'rm', 'bl', 'bm', 'br'],\n\t\theight: ['tl', 'tm', 'tr', 'bl', 'bm', 'br'],\n\t\tscale: ['tl', 'tr', 'bl', 'br'],\n\t\twidth: ['tl', 'tr', 'lm', 'rm', 'bl', 'br'],\n\t};\n\n\tconst POSITION_ELEMENT_FN = {\n\t\tbl(handle, left, top, box) {\n\t\t\tpositionElement(handle, -3 + left, box.height - 4 + top);\n\t\t},\n\t\tbm(handle, left, top, box) {\n\t\t\tpositionElement(\n\t\t\t\thandle,\n\t\t\t\tMath.round(box.width / 2) - 3 + left,\n\t\t\t\tbox.height - 4 + top\n\t\t\t);\n\t\t},\n\t\tbr(handle, left, top, box) {\n\t\t\tpositionElement(handle, box.width - 4 + left, box.height - 4 + top);\n\t\t},\n\t\tlm(handle, left, top, box) {\n\t\t\tpositionElement(\n\t\t\t\thandle,\n\t\t\t\t-3 + left,\n\t\t\t\tMath.round(box.height / 2) - 3 + top\n\t\t\t);\n\t\t},\n\t\ttl(handle, left, top, _box) {\n\t\t\tpositionElement(handle, left - 3, top - 3);\n\t\t},\n\t\ttm(handle, left, top, box) {\n\t\t\tpositionElement(\n\t\t\t\thandle,\n\t\t\t\tMath.round(box.width / 2) - 3 + left,\n\t\t\t\t-3 + top\n\t\t\t);\n\t\t},\n\t\ttr(handle, left, top, box) {\n\t\t\tpositionElement(handle, box.width - 4 + left, -3 + top);\n\t\t},\n\t\trm(handle, left, top, box) {\n\t\t\tpositionElement(\n\t\t\t\thandle,\n\t\t\t\tbox.width - 4 + left,\n\t\t\t\tMath.round(box.height / 2) - 3 + top\n\t\t\t);\n\t\t},\n\t};\n\n\tconst IMAGE_SNAP_TO_SIZE = 7;\n\n\tconst isFirefox = 'MozAppearance' in document.documentElement.style;\n\n\tconst isWebKit = 'WebkitAppearance' in document.documentElement.style;\n\n\tconst enablePlugin = isWebKit || isFirefox;\n\n\tif (enablePlugin) {\n\t\t// CSS is added in a compressed form\n\t\tCKEDITOR.addCss(\n\t\t\t'img::selection{color:rgba(0,0,0,0)}img.ckimgrsz{outline:1px dashed #000}#ckimgrsz{position:absolute;width:0;height:0;cursor:default;z-index:10001}#ckimgrsz span{display:none;position:absolute;top:0;left:0;width:0;height:0;background-size:100% 100%;opacity:.65;outline:1px dashed #000}#ckimgrsz i{position:absolute;display:block;width:5px;height:5px;background:#fff;border:1px solid #000}#ckimgrsz i.active,#ckimgrsz i:hover{background:#000}#ckimgrsz i.br,#ckimgrsz i.tl{cursor:nwse-resize}#ckimgrsz i.bm,#ckimgrsz i.tm{cursor:ns-resize}#ckimgrsz i.bl,#ckimgrsz i.tr{cursor:nesw-resize}#ckimgrsz i.lm,#ckimgrsz i.rm{cursor:ew-resize}body.dragging-br,body.dragging-br *,body.dragging-tl,body.dragging-tl *{cursor:nwse-resize!important}body.dragging-bm,body.dragging-bm *,body.dragging-tm,body.dragging-tm *{cursor:ns-resize!important}body.dragging-bl,body.dragging-bl *,body.dragging-tr,body.dragging-tr *{cursor:nesw-resize!important}body.dragging-lm,body.dragging-lm *,body.dragging-rm,body.dragging-rm *{cursor:ew-resize!important}'\n\t\t);\n\t}\n\n\t/**\n\t * Initializes the plugin\n\t */\n\tCKEDITOR.plugins.add('ae_dragresize', {\n\t\tonLoad() {\n\t\t\tif (!enablePlugin) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\tinit(editor) {\n\t\t\tif (!enablePlugin) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teditor.once('contentDom', _evt => {\n\t\t\t\tinit(editor);\n\t\t\t});\n\t\t},\n\t});\n\n\tfunction init(editor) {\n\t\tconst window = editor.window.$;\n\n\t\tconst document = editor.document.$;\n\n\t\tif (isFirefox) {\n\t\t\t// Disable the native image resizing\n\t\t\tdocument.execCommand('enableObjectResizing', false, false);\n\t\t}\n\n\t\tconst snapToSize =\n\t\t\ttypeof IMAGE_SNAP_TO_SIZE === 'undefined'\n\t\t\t\t? null\n\t\t\t\t: IMAGE_SNAP_TO_SIZE;\n\n\t\teditor.config.imageScaleResize =\n\t\t\teditor.config.imageScaleResize || 'both';\n\n\t\tconst resizer = new Resizer(editor, {\n\t\t\timageScaleResize: editor.config.imageScaleResize,\n\t\t\tsnapToSize,\n\t\t});\n\n\t\tconst mouseDownListener = function(e) {\n\t\t\tif (resizer.isHandle(e.target)) {\n\t\t\t\tresizer.initDrag(e);\n\t\t\t}\n\t\t};\n\n\t\tdocument.addEventListener('mousedown', mouseDownListener, false);\n\n\t\tfunction selectionChange() {\n\t\t\tconst selection = editor.getSelection();\n\n\t\t\tif (!selection) return;\n\t\t\t// If an element is selected and that element is an IMG\n\t\t\tif (\n\t\t\t\tselection.getType() !== CKEDITOR.SELECTION_NONE &&\n\t\t\t\tselection.getStartElement().is('img')\n\t\t\t) {\n\t\t\t\t// And we're not right or middle clicking on the image\n\t\t\t\tif (\n\t\t\t\t\t!window.event ||\n\t\t\t\t\t!window.event.button ||\n\t\t\t\t\twindow.event.button === 0\n\t\t\t\t) {\n\t\t\t\t\tresizer.show(selection.getStartElement().$);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresizer.hide();\n\t\t\t}\n\t\t}\n\n\t\teditor.on('selectionChange', selectionChange);\n\n\t\teditor.on('getData', e => {\n\t\t\tlet html = e.data.dataValue || '';\n\t\t\thtml = html.replace(/<div id=\"ckimgrsz\"([\\s\\S]*?)<\\/div>/i, '');\n\t\t\thtml = html.replace(/\\b(ckimgrsz)\\b/g, '');\n\t\t\te.data.dataValue = html;\n\t\t});\n\n\t\teditor.on('beforeUndoImage', () => {\n\t\t\t// Remove the handles before undo images are saved\n\t\t\tresizer.hide();\n\t\t});\n\n\t\teditor.on('afterUndoImage', () => {\n\t\t\t// Restore the handles after undo images are saved\n\t\t\tselectionChange();\n\t\t});\n\n\t\teditor.on('blur', () => {\n\t\t\t// Remove the handles when editor loses focus\n\t\t\tresizer.hide();\n\t\t});\n\n\t\teditor.on('beforeModeUnload', function self() {\n\t\t\teditor.removeListener('beforeModeUnload', self);\n\t\t\tresizer.hide();\n\t\t});\n\n\t\teditor.on('destroy', () => {\n\t\t\tconst resizeElement = document.getElementById('ckimgrsz');\n\n\t\t\tif (resizeElement) {\n\t\t\t\tresizeElement.remove();\n\t\t\t}\n\n\t\t\tif (isFirefox) {\n\t\t\t\tdocument.execCommand('enableObjectResizing', false, true);\n\t\t\t}\n\n\t\t\tdocument.removeEventListener('mousedown', mouseDownListener);\n\t\t});\n\n\t\t// Update the selection when the browser window is resized\n\t\tlet resizeTimeout;\n\t\teditor.window.on('resize', () => {\n\t\t\t// Cancel any resize waiting to happen\n\t\t\tclearTimeout(resizeTimeout);\n\t\t\t// Delay resize to \"debounce\"\n\t\t\tresizeTimeout = setTimeout(selectionChange, 50);\n\t\t});\n\t}\n\n\tfunction Resizer(editor, cfg) {\n\t\tthis.editor = editor;\n\t\tthis.window = editor.window.$;\n\t\tthis.document = editor.document.$;\n\t\tthis.cfg = cfg || {};\n\t\tthis.init();\n\t}\n\n\tResizer.prototype = {\n\t\tinit() {\n\t\t\tconst instance = this;\n\n\t\t\tconst container = (this.container = this.document.createElement(\n\t\t\t\t'div'\n\t\t\t));\n\n\t\t\tcontainer.id = 'ckimgrsz';\n\t\t\tthis.preview = this.document.createElement('span');\n\t\t\tcontainer.appendChild(this.preview);\n\n\t\t\tconst handles = (this.handles = {});\n\n\t\t\tIMAGE_HANDLES[this.cfg.imageScaleResize].forEach(handleName => {\n\t\t\t\thandles[handleName] = instance.handles[\n\t\t\t\t\thandleName\n\t\t\t\t] = instance.createHandle(handleName);\n\t\t\t});\n\n\t\t\tfor (const n in handles) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(handles, n)) {\n\t\t\t\t\tcontainer.appendChild(handles[n]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcreateHandle(name) {\n\t\t\tconst el = this.document.createElement('i');\n\t\t\tel.classList.add(name);\n\t\t\treturn el;\n\t\t},\n\t\tisHandle(el) {\n\t\t\tconst handles = this.handles;\n\t\t\tfor (const n in handles) {\n\t\t\t\tif (handles[n] === el) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tshow(el) {\n\t\t\tlet uiNode = this.editor.config.uiNode;\n\n\t\t\tconst scrollTop = uiNode ? uiNode.scrollTop : 0;\n\n\t\t\tthis.el = el;\n\t\t\tif (this.cfg.snapToSize) {\n\t\t\t\tthis.otherImages = toArray(\n\t\t\t\t\tthis.document.getElementsByTagName('img')\n\t\t\t\t);\n\t\t\t\tthis.otherImages.splice(this.otherImages.indexOf(el), 1);\n\t\t\t}\n\t\t\tconst box = (this.box = getBoundingBox(this.window, el));\n\t\t\tpositionElement(this.container, box.left, box.top + scrollTop);\n\n\t\t\tuiNode = uiNode || document.body;\n\n\t\t\tuiNode.appendChild(this.container);\n\n\t\t\tthis.el.classList.add('ckimgrsz');\n\t\t\tthis.showHandles();\n\t\t},\n\t\thide() {\n\t\t\t// Remove class from all img.ckimgrsz\n\t\t\tconst elements = this.document.getElementsByClassName('ckimgrsz');\n\t\t\tfor (let i = 0; i < elements.length; ++i) {\n\t\t\t\telements[i].classList.remove('ckimgrsz');\n\t\t\t}\n\t\t\tthis.hideHandles();\n\t\t\tif (this.container.parentNode) {\n\t\t\t\tthis.container.parentNode.removeChild(this.container);\n\t\t\t}\n\t\t},\n\t\tinitDrag(e) {\n\t\t\tif (e.button !== 0) {\n\t\t\t\t// right-click or middle-click\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst resizer = this;\n\t\t\tconst drag = new DragEvent(this.window, this.document);\n\t\t\tdrag.onStart = function() {\n\t\t\t\tresizer.showPreview();\n\t\t\t\tresizer.isDragging = true;\n\t\t\t\tresizer.editor.getSelection().lock();\n\t\t\t};\n\t\t\tdrag.onDrag = function() {\n\t\t\t\tresizer.calculateSize(this);\n\t\t\t\tresizer.updatePreview();\n\t\t\t\tconst box = resizer.previewBox;\n\t\t\t\tresizer.updateHandles(box, box.left, box.top);\n\t\t\t};\n\t\t\tdrag.onRelease = function() {\n\t\t\t\tresizer.isDragging = false;\n\t\t\t\tresizer.hidePreview();\n\t\t\t\tresizer.hide();\n\t\t\t\tresizer.editor.getSelection().unlock();\n\t\t\t\t// Save an undo snapshot before the image is permanently changed\n\t\t\t\tresizer.editor.fire('saveSnapshot');\n\t\t\t};\n\t\t\tdrag.onComplete = function() {\n\t\t\t\tresizer.resizeComplete();\n\t\t\t\t// Save another snapshot after the image is changed\n\t\t\t\tresizer.editor.fire('saveSnapshot');\n\t\t\t};\n\t\t\tdrag.start(e);\n\t\t},\n\t\tupdateHandles(box, left, top) {\n\t\t\tleft = left || 0;\n\t\t\ttop = top || 0;\n\t\t\tconst handles = this.handles;\n\n\t\t\tfor (const handle in handles) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(handles, handle)) {\n\t\t\t\t\tPOSITION_ELEMENT_FN[handle](\n\t\t\t\t\t\thandles[handle],\n\t\t\t\t\t\tleft,\n\t\t\t\t\t\ttop,\n\t\t\t\t\t\tbox\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tshowHandles() {\n\t\t\tconst handles = this.handles;\n\t\t\tthis.updateHandles(this.box);\n\t\t\tfor (const n in handles) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(handles, n)) {\n\t\t\t\t\thandles[n].style.display = 'block';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thideHandles() {\n\t\t\tconst handles = this.handles;\n\t\t\tfor (const n in handles) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(handles, n)) {\n\t\t\t\t\thandles[n].style.display = 'none';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tshowPreview() {\n\t\t\tthis.preview.style.backgroundImage = 'url(\"' + this.el.src + '\")';\n\t\t\tthis.calculateSize();\n\t\t\tthis.updatePreview();\n\t\t\tthis.preview.style.display = 'block';\n\t\t},\n\t\tupdatePreview() {\n\t\t\tconst box = this.previewBox;\n\t\t\tpositionElement(this.preview, box.left, box.top);\n\t\t\tthis.preview.style.width = this.previewBox.width + 'px';\n\t\t\tthis.preview.style.height = this.previewBox.height + 'px';\n\t\t},\n\t\thidePreview() {\n\t\t\tconst box = getBoundingBox(this.window, this.preview);\n\t\t\tthis.result = {\n\t\t\t\twidth: box.width,\n\t\t\t\theight: box.height,\n\t\t\t};\n\t\t\tthis.preview.style.display = 'none';\n\t\t},\n\t\tcalculateSize(data) {\n\t\t\tconst box = (this.previewBox = {\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\twidth: this.box.width,\n\t\t\t\theight: this.box.height,\n\t\t\t});\n\n\t\t\tif (!data) return;\n\n\t\t\tconst attr = data.target.className;\n\n\t\t\tif (~attr.indexOf('r')) {\n\t\t\t\tbox.width = Math.max(32, this.box.width + data.delta.x);\n\t\t\t}\n\t\t\tif (~attr.indexOf('b')) {\n\t\t\t\tbox.height = Math.max(32, this.box.height + data.delta.y);\n\t\t\t}\n\t\t\tif (~attr.indexOf('l')) {\n\t\t\t\tbox.width = Math.max(32, this.box.width - data.delta.x);\n\t\t\t}\n\t\t\tif (~attr.indexOf('t')) {\n\t\t\t\tbox.height = Math.max(32, this.box.height - data.delta.y);\n\t\t\t}\n\t\t\t// if dragging corner, enforce aspect ratio (unless shift key is being held)\n\t\t\tif (attr.indexOf('m') < 0 && !data.keys.shift) {\n\t\t\t\tconst ratio = this.box.width / this.box.height;\n\t\t\t\tif (box.width / box.height > ratio) {\n\t\t\t\t\tbox.height = Math.round(box.width / ratio);\n\t\t\t\t} else {\n\t\t\t\t\tbox.width = Math.round(box.height * ratio);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst snapToSize = this.cfg.snapToSize;\n\n\t\t\tif (snapToSize) {\n\t\t\t\tconst others = this.otherImages;\n\t\t\t\tfor (let i = 0; i < others.length; i++) {\n\t\t\t\t\tconst other = getBoundingBox(this.window, others[i]);\n\t\t\t\t\tif (\n\t\t\t\t\t\tMath.abs(box.width - other.width) <= snapToSize &&\n\t\t\t\t\t\tMath.abs(box.height - other.height) <= snapToSize\n\t\t\t\t\t) {\n\t\t\t\t\t\tbox.width = other.width;\n\t\t\t\t\t\tbox.height = other.height;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// recalculate left or top position\n\t\t\tif (~attr.indexOf('l')) {\n\t\t\t\tbox.left = this.box.width - box.width;\n\t\t\t}\n\t\t\tif (~attr.indexOf('t')) {\n\t\t\t\tbox.top = this.box.height - box.height;\n\t\t\t}\n\t\t},\n\t\tresizeComplete() {\n\t\t\tresizeElement.call(\n\t\t\t\tthis,\n\t\t\t\tthis.el,\n\t\t\t\tthis.result.width,\n\t\t\t\tthis.result.height\n\t\t\t);\n\t\t},\n\t};\n\n\tfunction DragEvent(window, document) {\n\t\tthis.window = window;\n\t\tthis.document = document;\n\t\tthis.events = {\n\t\t\tmousemove: bind(this.mousemove, this),\n\t\t\tkeydown: bind(this.keydown, this),\n\t\t\tmouseup: bind(this.mouseup, this),\n\t\t};\n\t}\n\n\tDragEvent.prototype = {\n\t\tstart(e) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tthis.target = e.target;\n\t\t\tthis.attr = e.target.className;\n\t\t\tthis.startPos = {\n\t\t\t\tx: e.clientX,\n\t\t\t\ty: e.clientY,\n\t\t\t};\n\t\t\tthis.update(e);\n\t\t\tconst events = this.events;\n\t\t\tthis.document.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tevents.mousemove,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tthis.document.addEventListener('keydown', events.keydown, false);\n\t\t\tthis.document.addEventListener('mouseup', events.mouseup, false);\n\t\t\tthis.document.body.classList.add('dragging-' + this.attr);\n\t\t\tif (this.onStart) {\n\t\t\t\tthis.onStart();\n\t\t\t}\n\t\t},\n\t\tupdate(e) {\n\t\t\tthis.currentPos = {\n\t\t\t\tx: e.clientX,\n\t\t\t\ty: e.clientY,\n\t\t\t};\n\t\t\tthis.delta = {\n\t\t\t\tx: e.clientX - this.startPos.x,\n\t\t\t\ty: e.clientY - this.startPos.y,\n\t\t\t};\n\t\t\tthis.keys = {\n\t\t\t\tshift: e.shiftKey,\n\t\t\t\tctrl: e.ctrlKey,\n\t\t\t\talt: e.altKey,\n\t\t\t};\n\t\t},\n\t\tmousemove(e) {\n\t\t\tthis.update(e);\n\t\t\tif (this.onDrag) {\n\t\t\t\tthis.onDrag();\n\t\t\t}\n\t\t\tif (e.which === 0) {\n\t\t\t\t// mouse button released outside window; mouseup wasn't fired (Chrome)\n\t\t\t\tthis.mouseup(e);\n\t\t\t}\n\t\t},\n\t\tkeydown(e) {\n\t\t\t// escape key cancels dragging\n\t\t\tif (e.keyCode === 27) {\n\t\t\t\tthis.release();\n\t\t\t}\n\t\t},\n\t\tmouseup(e) {\n\t\t\tthis.update(e);\n\t\t\tthis.release();\n\t\t\tif (this.onComplete) {\n\t\t\t\tthis.onComplete();\n\t\t\t}\n\t\t},\n\t\trelease() {\n\t\t\tthis.document.body.classList.remove('dragging-' + this.attr);\n\t\t\tconst events = this.events;\n\t\t\tthis.document.removeEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tevents.mousemove,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tthis.document.removeEventListener('keydown', events.keydown, false);\n\t\t\tthis.document.removeEventListener('mouseup', events.mouseup, false);\n\t\t\tif (this.onRelease) {\n\t\t\t\tthis.onRelease();\n\t\t\t}\n\t\t},\n\t};\n\n\t// helper functions\n\tfunction toArray(obj) {\n\t\tconst len = obj.length;\n\n\t\tconst arr = new Array(len);\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tarr[i] = obj[i];\n\t\t}\n\t\treturn arr;\n\t}\n\n\tfunction bind(fn, ctx) {\n\t\tif (fn.bind) {\n\t\t\treturn fn.bind(ctx);\n\t\t}\n\t\treturn function(...args) {\n\t\t\tfn.apply(ctx, args);\n\t\t};\n\t}\n\n\tfunction positionElement(el, left, top) {\n\t\tel.style.left = String(left) + 'px';\n\t\tel.style.top = String(top) + 'px';\n\t}\n\n\tfunction resizeElement(el, width, height) {\n\t\tconst imageScaleResize = this.editor.config.imageScaleResize;\n\t\tif (imageScaleResize === 'both') {\n\t\t\tel.setAttribute('width', String(width));\n\t\t\tel.style.width = String(width) + 'px';\n\t\t\tel.setAttribute('height', String(height));\n\t\t\tel.style.height = String(height) + 'px';\n\t\t} else if (\n\t\t\timageScaleResize === 'width' ||\n\t\t\timageScaleResize === 'scale'\n\t\t) {\n\t\t\tel.removeAttribute('height');\n\t\t\tel.style.height = 'auto';\n\t\t\tel.setAttribute('width', String(width));\n\t\t\tel.style.width = String(width) + 'px';\n\t\t} else if (imageScaleResize === 'height') {\n\t\t\tel.setAttribute('height', String(height));\n\t\t\tel.style.height = String(height) + 'px';\n\t\t\tel.removeAttribute('width');\n\t\t\tel.style.width = 'auto';\n\t\t}\n\t}\n\n\tfunction getBoundingBox(window, el) {\n\t\tconst rect = el.getBoundingClientRect();\n\t\treturn {\n\t\t\tleft: rect.left + window.pageXOffset,\n\t\t\ttop: rect.top + window.pageYOffset,\n\t\t\twidth: rect.width,\n\t\t\theight: rect.height,\n\t\t};\n\t}\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or http://ckeditor.com/license\n */\n\n(function() {\n\tif (CKEDITOR.plugins.get('ae_dragresize_ie11')) {\n\t\treturn;\n\t}\n\n\tconst template = '<img alt=\"\" src=\"\" />';\n\n\tconst templateBlock = new CKEDITOR.template(\n\t\t'<figure class=\"{captionedClass}\">' +\n\t\t\ttemplate +\n\t\t\t'<figcaption>{captionPlaceholder}</figcaption>' +\n\t\t\t'</figure>'\n\t);\n\n\tconst alignmentsObj = {left: 0, center: 1, right: 2};\n\n\tconst regexPercent = /^\\s*(\\d+%)\\s*$/i;\n\n\tCKEDITOR.plugins.add('ae_dragresize_ie11', {\n\t\trequires: 'widget',\n\t\tonLoad() {\n\t\t\tCKEDITOR.addCss(\n\t\t\t\t'.cke_image_nocaption{' +\n\t\t\t\t\t// This is to remove unwanted space so resize\n\t\t\t\t\t// wrapper is displayed property.\n\t\t\t\t\t'line-height:0' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t'.cke_editable.cke_image_ne, .cke_editable.cke_image_ne *{cursor:ne-resize !important}' +\n\t\t\t\t\t'.cke_editable.cke_image_nw, .cke_editable.cke_image_nw *{cursor:nw-resize !important}' +\n\t\t\t\t\t'.cke_editable.cke_image_sw, .cke_editable.cke_image_sw *{cursor:sw-resize !important}' +\n\t\t\t\t\t'.cke_editable.cke_image_se, .cke_editable.cke_image_se *{cursor:se-resize !important}' +\n\t\t\t\t\t'.cke_image_resizer{' +\n\t\t\t\t\t'display:none;' +\n\t\t\t\t\t'position:absolute;' +\n\t\t\t\t\t'width:10px;' +\n\t\t\t\t\t'height:10px;' +\n\t\t\t\t\t'background:#000;' +\n\t\t\t\t\t'outline:1px solid #fff;' +\n\t\t\t\t\t// Prevent drag handler from being misplaced (#11207).\n\t\t\t\t\t'line-height:0;' +\n\t\t\t\t\t'cursor:se-resize;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t'.cke_image_resizer_wrapper{' +\n\t\t\t\t\t'position:relative;' +\n\t\t\t\t\t'display:inline-block;' +\n\t\t\t\t\t'line-height:0;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t// Top-right corner style of the resizer.\n\t\t\t\t\t'.cke_image_resizer.cke_image_resizer_ne{' +\n\t\t\t\t\t'cursor:ne-resize;' +\n\t\t\t\t\t'left:auto;' +\n\t\t\t\t\t'right:-5px;' +\n\t\t\t\t\t'top:-5px;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t// Top-left corner style of the resizer.\n\t\t\t\t\t'.cke_image_resizer.cke_image_resizer_nw{' +\n\t\t\t\t\t'cursor:nw-resize;' +\n\t\t\t\t\t'left:-5px;' +\n\t\t\t\t\t'right:auto;' +\n\t\t\t\t\t'top:-5px;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t// Bottom-right corner style of the resizer.\n\t\t\t\t\t'.cke_image_resizer.cke_image_resizer_se{' +\n\t\t\t\t\t'bottom:-5px;' +\n\t\t\t\t\t'cursor:se-resize;' +\n\t\t\t\t\t'left:auto;' +\n\t\t\t\t\t'right:-5px;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t// Bottom-left corner style of the resizer.\n\t\t\t\t\t'.cke_image_resizer.cke_image_resizer_sw{' +\n\t\t\t\t\t'bottom:-5px;' +\n\t\t\t\t\t'cursor:sw-resize;' +\n\t\t\t\t\t'left:-5px;' +\n\t\t\t\t\t'right:auto;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t'.cke_widget_wrapper:hover .cke_image_resizer,' +\n\t\t\t\t\t'.cke_image_resizing>.cke_image_resizer{' +\n\t\t\t\t\t'display:block' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t// Expand widget wrapper when linked inline image.\n\t\t\t\t\t'.cke_widget_wrapper>a{' +\n\t\t\t\t\t'display:inline-block' +\n\t\t\t\t\t'}'\n\t\t\t);\n\t\t},\n\n\t\tinit(editor) {\n\t\t\t// Adapts configuration from original image plugin. Should be removed\n\t\t\t// when we'll rename ae_dragresize_ie11 to image.\n\n\t\t\tconst image = widgetDef(editor);\n\n\t\t\t// Register the widget.\n\t\t\teditor.widgets.add('image', image);\n\n\t\t\t// Add a listener to handle selection change events and properly detect editor\n\t\t\t// interactions on the widgets without messing with widget native selection\n\t\t\teditor.on('selectionChange', _event => {\n\t\t\t\tconst selection = editor.getSelection();\n\n\t\t\t\tif (selection) {\n\t\t\t\t\tconst element = selection.getSelectedElement();\n\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\tconst widgetElement = element.findOne('img');\n\n\t\t\t\t\t\tif (widgetElement) {\n\t\t\t\t\t\t\tconst region = element.getClientRect();\n\n\t\t\t\t\t\t\tconst scrollPosition = new CKEDITOR.dom.window(\n\t\t\t\t\t\t\t\twindow\n\t\t\t\t\t\t\t).getScrollPosition();\n\t\t\t\t\t\t\tregion.left -= scrollPosition.x;\n\t\t\t\t\t\t\tregion.top += scrollPosition.y;\n\n\t\t\t\t\t\t\tregion.direction = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\n\t\t\t\t\t\t\teditor.fire('editorInteraction', {\n\t\t\t\t\t\t\t\tnativeEvent: {},\n\t\t\t\t\t\t\t\tselectionData: {\n\t\t\t\t\t\t\t\t\telement: widgetElement,\n\t\t\t\t\t\t\t\t\tregion,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tafterInit(editor) {\n\t\t\t// Integrate with align commands (justify plugin).\n\t\t\tconst align = {left: 1, right: 1, center: 1, block: 1};\n\n\t\t\tconst integrate = alignCommandIntegrator(editor);\n\n\t\t\tfor (const value in align) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(align, value)) {\n\t\t\t\t\tintegrate(value);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n\n\t// Widget states (forms) depending on alignment and configuration.\n\t//\n\t// Non-captioned widget (inline styles)\n\t// \t\t┌──────┬───────────────────────────────┬─────────────────────────────┐\n\t// \t\t│Align │Internal form                  │Data                         │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│none  │<wrapper>                      │<img />                      │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│left  │<wrapper style=”float:left”>   │<img style=”float:left” />   │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│center│<wrapper>                      │<p style=”text-align:center”>│\n\t// \t\t│      │ <p style=”text-align:center”> │  <img />                    │\n\t// \t\t│      │   <img />                     │</p>                         │\n\t// \t\t│      │ </p>                          │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│right │<wrapper style=”float:right”>  │<img style=”float:right” />  │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t└──────┴───────────────────────────────┴─────────────────────────────┘\n\t//\n\t// Non-captioned widget (config.ae_dragresize_ie11_alignClasses defined)\n\t// \t\t┌──────┬───────────────────────────────┬─────────────────────────────┐\n\t// \t\t│Align │Internal form                  │Data                         │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│none  │<wrapper>                      │<img />                      │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│left  │<wrapper class=”left”>         │<img class=”left” />         │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│center│<wrapper>                      │<p class=”center”>           │\n\t// \t\t│      │ <p class=”center”>            │ <img />                     │\n\t// \t\t│      │   <img />                     │</p>                         │\n\t// \t\t│      │ </p>                          │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│right │<wrapper class=”right”>        │<img class=”right” />        │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t└──────┴───────────────────────────────┴─────────────────────────────┘\n\t//\n\t// Captioned widget (inline styles)\n\t// \t\t┌──────┬────────────────────────────────────────┬────────────────────────────────────────┐\n\t// \t\t│Align │Internal form                           │Data                                    │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│none  │<wrapper>                               │<figure />                              │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│left  │<wrapper style=”float:left”>            │<figure style=”float:left” />           │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│center│<wrapper style=”text-align:center”>     │<div style=”text-align:center”>         │\n\t// \t\t│      │ <figure style=”display:inline-block” />│ <figure style=”display:inline-block” />│\n\t// \t\t│      │</wrapper>                              │</p>                                    │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│right │<wrapper style=”float:right”>           │<figure style=”float:right” />          │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t└──────┴────────────────────────────────────────┴────────────────────────────────────────┘\n\t//\n\t// Captioned widget (config.ae_dragresize_ie11_alignClasses defined)\n\t// \t\t┌──────┬────────────────────────────────────────┬────────────────────────────────────────┐\n\t// \t\t│Align │Internal form                           │Data                                    │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│none  │<wrapper>                               │<figure />                              │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│left  │<wrapper class=”left”>                  │<figure class=”left” />                 │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│center│<wrapper class=”center”>                │<div class=”center”>                    │\n\t// \t\t│      │ <figure />                             │ <figure />                             │\n\t// \t\t│      │</wrapper>                              │</p>                                    │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│right │<wrapper class=”right”>                 │<figure class=”right” />                │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t└──────┴────────────────────────────────────────┴────────────────────────────────────────┘\n\t//\n\t// @param {CKEDITOR.editor}\n\t// @returns {Object}\n\tfunction widgetDef(editor) {\n\t\tconst alignClasses = editor.config.ae_dragresize_ie11_alignClasses;\n\n\t\tconst captionedClass = editor.config.ae_dragresize_ie11_captionedClass;\n\n\t\tfunction deflate() {\n\t\t\tif (this.deflated) return;\n\n\t\t\t// Remember whether widget was focused before destroyed.\n\t\t\tif (editor.widgets.focused == this.widget) this.focused = true;\n\n\t\t\teditor.widgets.destroy(this.widget);\n\n\t\t\t// Mark widget was destroyed.\n\t\t\tthis.deflated = true;\n\t\t}\n\n\t\tfunction inflate() {\n\t\t\tconst editable = editor.editable();\n\n\t\t\tconst doc = editor.document;\n\n\t\t\t// Create a new widget. This widget will be either captioned\n\t\t\t// non-captioned, block or inline according to what is the\n\t\t\t// new state of the widget.\n\t\t\tif (this.deflated) {\n\t\t\t\tthis.widget = editor.widgets.initOn(\n\t\t\t\t\tthis.element,\n\t\t\t\t\t'image',\n\t\t\t\t\tthis.widget.data\n\t\t\t\t);\n\n\t\t\t\t// Once widget was re-created, it may become an inline element without\n\t\t\t\t// block wrapper (i.e. when unaligned, end not captioned). Let's do some\n\t\t\t\t// sort of autoparagraphing here (#10853).\n\t\t\t\tif (\n\t\t\t\t\tthis.widget.inline &&\n\t\t\t\t\t!new CKEDITOR.dom.elementPath(this.widget.wrapper, editable)\n\t\t\t\t\t\t.block\n\t\t\t\t) {\n\t\t\t\t\tconst block = doc.createElement(\n\t\t\t\t\t\teditor.activeEnterMode == CKEDITOR.ENTER_P ? 'p' : 'div'\n\t\t\t\t\t);\n\t\t\t\t\tblock.replace(this.widget.wrapper);\n\t\t\t\t\tthis.widget.wrapper.move(block);\n\t\t\t\t}\n\n\t\t\t\t// The focus must be transferred from the old one (destroyed)\n\t\t\t\t// to the new one (just created).\n\t\t\t\tif (this.focused) {\n\t\t\t\t\tthis.widget.focus();\n\t\t\t\t\tdelete this.focused;\n\t\t\t\t}\n\n\t\t\t\tdelete this.deflated;\n\t\t\t}\n\n\t\t\t// If now widget was destroyed just update wrapper's alignment.\n\t\t\t// According to the new state.\n\t\t\telse {\n\t\t\t\tsetWrapperAlign(this.widget, alignClasses);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tallowedContent: getWidgetAllowedContent(editor),\n\n\t\t\trequiredContent: 'img[src,alt]',\n\n\t\t\tfeatures: getWidgetFeatures(editor),\n\n\t\t\tstyleableElements: 'img figure',\n\n\t\t\t// This widget converts style-driven dimensions to attributes.\n\t\t\tcontentTransformations: [['img[width]: sizeToAttribute']],\n\n\t\t\t// This widget has an editable caption.\n\t\t\teditables: {\n\t\t\t\tcaption: {\n\t\t\t\t\tselector: 'figcaption',\n\t\t\t\t\tallowedContent: 'br em strong sub sup u s; a[!href,target]',\n\t\t\t\t},\n\t\t\t},\n\n\t\t\tparts: {\n\t\t\t\timage: 'img',\n\t\t\t\tcaption: 'figcaption',\n\t\t\t\t// parts#link defined in widget#init\n\t\t\t},\n\n\t\t\t// Template of the widget: plain image.\n\t\t\ttemplate,\n\n\t\t\tdata() {\n\t\t\t\tconst features = this.features;\n\n\t\t\t\t// Image can't be captioned when figcaption is disallowed (#11004).\n\t\t\t\tif (\n\t\t\t\t\tthis.data.hasCaption &&\n\t\t\t\t\t!editor.filter.checkFeature(features.caption)\n\t\t\t\t)\n\t\t\t\t\tthis.data.hasCaption = false;\n\n\t\t\t\t// Image can't be aligned when floating is disallowed (#11004).\n\t\t\t\tif (\n\t\t\t\t\tthis.data.align != 'none' &&\n\t\t\t\t\t!editor.filter.checkFeature(features.align)\n\t\t\t\t)\n\t\t\t\t\tthis.data.align = 'none';\n\n\t\t\t\t// Convert the internal form of the widget from the old state to the new one.\n\t\t\t\tthis.shiftState({\n\t\t\t\t\twidget: this,\n\t\t\t\t\telement: this.element,\n\t\t\t\t\toldData: this.oldData,\n\t\t\t\t\tnewData: this.data,\n\t\t\t\t\tdeflate,\n\t\t\t\t\tinflate,\n\t\t\t\t});\n\n\t\t\t\t// Update widget.parts.link since it will not auto-update unless widget\n\t\t\t\t// is destroyed and re-inited.\n\t\t\t\tif (!this.data.link) {\n\t\t\t\t\tif (this.parts.link) delete this.parts.link;\n\t\t\t\t} else {\n\t\t\t\t\tif (!this.parts.link)\n\t\t\t\t\t\tthis.parts.link = this.parts.image.getParent();\n\t\t\t\t}\n\n\t\t\t\tthis.parts.image.setAttributes({\n\t\t\t\t\tsrc: this.data.src,\n\n\t\t\t\t\t// This internal is required by the editor.\n\t\t\t\t\t'data-cke-saved-src': this.data.src,\n\n\t\t\t\t\talt: this.data.alt,\n\t\t\t\t});\n\n\t\t\t\t// If shifting non-captioned -> captioned, remove classes\n\t\t\t\t// related to styles from <img/>.\n\t\t\t\tif (\n\t\t\t\t\tthis.oldData &&\n\t\t\t\t\t!this.oldData.hasCaption &&\n\t\t\t\t\tthis.data.hasCaption\n\t\t\t\t) {\n\t\t\t\t\tfor (const c in this.data.classes) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\t\tthis.data.classes,\n\t\t\t\t\t\t\t\tc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.parts.image.removeClass(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Set dimensions of the image according to gathered data.\n\t\t\t\t// Do it only when the attributes are allowed (#11004).\n\t\t\t\tif (editor.filter.checkFeature(features.dimension))\n\t\t\t\t\tsetDimensions(this);\n\n\t\t\t\t// Cache current data.\n\t\t\t\tthis.oldData = CKEDITOR.tools.extend({}, this.data);\n\t\t\t},\n\n\t\t\tinit() {\n\t\t\t\tconst helpers = CKEDITOR.plugins.ae_dragresize_ie11;\n\n\t\t\t\tconst image = this.parts.image;\n\n\t\t\t\tconst data = {\n\t\t\t\t\thasCaption: !!this.parts.caption,\n\t\t\t\t\tsrc: image.getAttribute('src'),\n\t\t\t\t\talt: image.getAttribute('alt') || '',\n\t\t\t\t\twidth: image.getAttribute('width') || '',\n\n\t\t\t\t\t// Lock ratio is on by default (#10833).\n\t\t\t\t\tlock: this.ready\n\t\t\t\t\t\t? helpers.checkHasNaturalRatio(image)\n\t\t\t\t\t\t: true,\n\t\t\t\t};\n\n\t\t\t\tdata.height = data.lock\n\t\t\t\t\t? null\n\t\t\t\t\t: image.getAttribute('height') || '';\n\n\t\t\t\t// If we used 'a' in widget#parts definition, it could happen that\n\t\t\t\t// selected element is a child of widget.parts#caption. Since there's no clever\n\t\t\t\t// way to solve it with CSS selectors, it's done like that. (#11783).\n\t\t\t\tconst link = image.getAscendant('a');\n\n\t\t\t\tif (link && this.wrapper.contains(link)) this.parts.link = link;\n\n\t\t\t\t// Depending on configuration, read style/class from element and\n\t\t\t\t// then remove it. Removed style/class will be set on wrapper in #data listener.\n\t\t\t\t// Note: Center alignment is detected during upcast, so only left/right cases\n\t\t\t\t// are checked below.\n\t\t\t\tif (!data.align) {\n\t\t\t\t\tconst alignElement = data.hasCaption ? this.element : image;\n\n\t\t\t\t\t// Read the initial left/right alignment from the class set on element.\n\t\t\t\t\tif (alignClasses) {\n\t\t\t\t\t\tif (alignElement.hasClass(alignClasses[0])) {\n\t\t\t\t\t\t\tdata.align = 'left';\n\t\t\t\t\t\t} else if (alignElement.hasClass(alignClasses[2])) {\n\t\t\t\t\t\t\tdata.align = 'right';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (data.align) {\n\t\t\t\t\t\t\talignElement.removeClass(\n\t\t\t\t\t\t\t\talignClasses[alignmentsObj[data.align]]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdata.align = 'none';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Read initial float style from figure/image and then remove it.\n\t\t\t\t\telse {\n\t\t\t\t\t\tdata.align = alignElement.getStyle('float') || 'none';\n\t\t\t\t\t\talignElement.removeStyle('float');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Update data.link object with attributes if the link has been discovered.\n\t\t\t\tif (editor.plugins.link && this.parts.link) {\n\t\t\t\t\tdata.link = helpers.getLinkAttributesParser()(\n\t\t\t\t\t\teditor,\n\t\t\t\t\t\tthis.parts.link\n\t\t\t\t\t);\n\n\t\t\t\t\t// Get rid of cke_widget_* classes in data. Otherwise\n\t\t\t\t\t// they might appear in link dialog.\n\t\t\t\t\tconst advanced = data.link.advanced;\n\t\t\t\t\tif (advanced && advanced.advCSSClasses) {\n\t\t\t\t\t\tadvanced.advCSSClasses = CKEDITOR.tools.trim(\n\t\t\t\t\t\t\tadvanced.advCSSClasses.replace(/cke_\\S+/, '')\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Get rid of extra vertical space when there's no caption.\n\t\t\t\t// It will improve the look of the resizer.\n\t\t\t\tthis.wrapper[(data.hasCaption ? 'remove' : 'add') + 'Class'](\n\t\t\t\t\t'cke_image_nocaption'\n\t\t\t\t);\n\n\t\t\t\tthis.setData(data);\n\n\t\t\t\t// Setup dynamic image resizing with mouse.\n\t\t\t\t// Don't initialize resizer when dimensions are disallowed (#11004).\n\t\t\t\tif (\n\t\t\t\t\teditor.filter.checkFeature(this.features.dimension) &&\n\t\t\t\t\teditor.config.ae_dragresize_ie11_disableResizer !== true\n\t\t\t\t)\n\t\t\t\t\tsetupResizer(this);\n\n\t\t\t\tconst dragHandlerStyle = this.dragHandlerContainer.$.style;\n\t\t\t\tdragHandlerStyle.setAttribute(\n\t\t\t\t\t'backgroundColor',\n\t\t\t\t\t'rgba(255, 255, 255, 1'\n\t\t\t\t);\n\t\t\t\tdragHandlerStyle.setAttribute('opacity', '1');\n\n\t\t\t\tthis.shiftState = helpers.stateShifter(this.editor);\n\n\t\t\t\t// Add widget editing option to its context menu.\n\t\t\t\tthis.on('contextMenu', function(evt) {\n\t\t\t\t\tevt.data.image = CKEDITOR.TRISTATE_OFF;\n\n\t\t\t\t\t// Integrate context menu items for link.\n\t\t\t\t\t// Note that widget may be wrapped in a link, which\n\t\t\t\t\t// does not belong to that widget (#11814).\n\t\t\t\t\tif (this.parts.link || this.wrapper.getAscendant('a'))\n\t\t\t\t\t\tevt.data.link = evt.data.unlink = CKEDITOR.TRISTATE_OFF;\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t// Overrides default method to handle internal mutability of ae_dragresize_ie11.\n\t\t\t// @see CKEDITOR.plugins.widget#addClass\n\t\t\taddClass(className) {\n\t\t\t\tgetStyleableElement(this).addClass(className);\n\t\t\t},\n\n\t\t\t// Overrides default method to handle internal mutability of ae_dragresize_ie11.\n\t\t\t// @see CKEDITOR.plugins.widget#hasClass\n\t\t\thasClass(className) {\n\t\t\t\treturn getStyleableElement(this).hasClass(className);\n\t\t\t},\n\n\t\t\t// Overrides default method to handle internal mutability of ae_dragresize_ie11.\n\t\t\t// @see CKEDITOR.plugins.widget#removeClass\n\t\t\tremoveClass(className) {\n\t\t\t\tgetStyleableElement(this).removeClass(className);\n\t\t\t},\n\n\t\t\t// Overrides default method to handle internal mutability of ae_dragresize_ie11.\n\t\t\t// @see CKEDITOR.plugins.widget#getClasses\n\t\t\tgetClasses: (function() {\n\t\t\t\tconst classRegex = new RegExp(\n\t\t\t\t\t'^(' +\n\t\t\t\t\t\t[].concat(captionedClass, alignClasses).join('|') +\n\t\t\t\t\t\t')$'\n\t\t\t\t);\n\n\t\t\t\treturn function() {\n\t\t\t\t\tconst classes = this.repository.parseElementClasses(\n\t\t\t\t\t\tgetStyleableElement(this).getAttribute('class')\n\t\t\t\t\t);\n\n\t\t\t\t\t// Neither config.ae_dragresize_ie11_captionedClass nor config.ae_dragresize_ie11_alignClasses\n\t\t\t\t\t// do not belong to style classes.\n\t\t\t\t\tfor (const c in classes) {\n\t\t\t\t\t\tif (classRegex.test(c)) delete classes[c];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t};\n\t\t\t})(),\n\n\t\t\tupcast: upcastWidgetElement(editor),\n\t\t\tdowncast: downcastWidgetElement(editor),\n\n\t\t\tgetLabel() {\n\t\t\t\tconst label = (this.data.alt || '') + ' ' + this.pathName;\n\n\t\t\t\treturn this.editor.lang.widget.label.replace(/%1/, label);\n\t\t\t},\n\t\t};\n\t}\n\n\t/**\n\t * A set of Enhanced Image (ae_dragresize_ie11) plugin helpers.\n\t *\n\t * @class\n\t * @singleton\n\t */\n\tCKEDITOR.plugins.ae_dragresize_ie11 = {\n\t\tstateShifter(editor) {\n\t\t\t// Tag name used for centering non-captioned widgets.\n\t\t\tconst doc = editor.document;\n\n\t\t\tconst alignClasses = editor.config.ae_dragresize_ie11_alignClasses;\n\n\t\t\tconst captionedClass =\n\t\t\t\teditor.config.ae_dragresize_ie11_captionedClass;\n\n\t\t\tconst editable = editor.editable();\n\n\t\t\t// The order that stateActions get executed. It matters!\n\n\t\t\tconst shiftables = ['hasCaption', 'align', 'link'];\n\n\t\t\t// Atomic procedures, one per state variable.\n\t\t\tconst stateActions = {\n\t\t\t\talign(shift, oldValue, newValue) {\n\t\t\t\t\tconst el = shift.element;\n\n\t\t\t\t\t// Alignment changed.\n\t\t\t\t\tif (\n\t\t\t\t\t\tshift.changed.align ||\n\t\t\t\t\t\t(el.$.style.marginLeft === 'auto' &&\n\t\t\t\t\t\t\tel.$.style.marginRight === 'auto')\n\t\t\t\t\t) {\n\t\t\t\t\t\t// No caption in the new state.\n\t\t\t\t\t\tif (!shift.newData.hasCaption) {\n\t\t\t\t\t\t\t// Changed to \"center\" (non-captioned).\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tnewValue == 'center' ||\n\t\t\t\t\t\t\t\t(el.$.style.marginLeft === 'auto' &&\n\t\t\t\t\t\t\t\t\tel.$.style.marginRight === 'auto')\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tshift.deflate();\n\t\t\t\t\t\t\t\tshift.element = wrapInCentering(editor, el);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Changed to \"non-center\" from \"center\" while caption removed.\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!shift.changed.hasCaption &&\n\t\t\t\t\t\t\t\toldValue == 'center' &&\n\t\t\t\t\t\t\t\tnewValue != 'center'\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tshift.deflate();\n\t\t\t\t\t\t\t\tshift.element = unwrapFromCentering(el);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Alignment remains and \"center\" removed caption.\n\t\t\t\t\telse if (\n\t\t\t\t\t\tnewValue == 'center' &&\n\t\t\t\t\t\tshift.changed.hasCaption &&\n\t\t\t\t\t\t!shift.newData.hasCaption\n\t\t\t\t\t) {\n\t\t\t\t\t\tshift.deflate();\n\t\t\t\t\t\tshift.element = wrapInCentering(editor, el);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Finally set display for figure.\n\t\t\t\t\tif (!alignClasses && el.is('figure')) {\n\t\t\t\t\t\tif (newValue == 'center')\n\t\t\t\t\t\t\tel.setStyle('display', 'inline-block');\n\t\t\t\t\t\telse el.removeStyle('display');\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\thasCaption(shift, oldValue, newValue) {\n\t\t\t\t\t// This action is for real state change only.\n\t\t\t\t\tif (!shift.changed.hasCaption) return;\n\n\t\t\t\t\t// Get <img/> or <a><img/></a> from widget. Note that widget element might itself\n\t\t\t\t\t// be what we're looking for. Also element can be <p style=\"text-align:center\"><a>...</a></p>.\n\t\t\t\t\tlet imageOrLink;\n\t\t\t\t\tif (shift.element.is({img: 1, a: 1}))\n\t\t\t\t\t\timageOrLink = shift.element;\n\t\t\t\t\telse imageOrLink = shift.element.findOne('a,img');\n\n\t\t\t\t\t// Switching hasCaption always destroys the widget.\n\t\t\t\t\tshift.deflate();\n\n\t\t\t\t\t// There was no caption, but the caption is to be added.\n\t\t\t\t\tif (newValue) {\n\t\t\t\t\t\t// Create new <figure> from widget template.\n\t\t\t\t\t\tconst figure = CKEDITOR.dom.element.createFromHtml(\n\t\t\t\t\t\t\ttemplateBlock.output({\n\t\t\t\t\t\t\t\tcaptionedClass,\n\t\t\t\t\t\t\t\tcaptionPlaceholder:\n\t\t\t\t\t\t\t\t\teditor.lang.ae_dragresize_ie11\n\t\t\t\t\t\t\t\t\t\t.captionPlaceholder,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tdoc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Replace element with <figure>.\n\t\t\t\t\t\treplaceSafely(figure, shift.element);\n\n\t\t\t\t\t\t// Use old <img/> or <a><img/></a> instead of the one from the template,\n\t\t\t\t\t\t// so we won't lose additional attributes.\n\t\t\t\t\t\timageOrLink.replace(figure.findOne('img'));\n\n\t\t\t\t\t\t// Update widget's element.\n\t\t\t\t\t\tshift.element = figure;\n\t\t\t\t\t}\n\n\t\t\t\t\t// The caption was present, but now it's to be removed.\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Unwrap <img/> or <a><img/></a> from figure.\n\t\t\t\t\t\timageOrLink.replace(shift.element);\n\n\t\t\t\t\t\t// Update widget's element.\n\t\t\t\t\t\tshift.element = imageOrLink;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tlink(shift, oldValue, newValue) {\n\t\t\t\t\tif (shift.changed.link) {\n\t\t\t\t\t\tconst img = shift.element.is('img')\n\t\t\t\t\t\t\t? shift.element\n\t\t\t\t\t\t\t: shift.element.findOne('img');\n\n\t\t\t\t\t\tconst link = shift.element.is('a')\n\t\t\t\t\t\t\t? shift.element\n\t\t\t\t\t\t\t: shift.element.findOne('a');\n\n\t\t\t\t\t\t// Why deflate:\n\t\t\t\t\t\t// If element is <img/>, it will be wrapped into <a>,\n\t\t\t\t\t\t// which becomes a new widget.element.\n\t\t\t\t\t\t// If element is <a><img/></a>, it will be unlinked\n\t\t\t\t\t\t// so <img/> becomes a new widget.element.\n\n\t\t\t\t\t\tconst needsDeflate =\n\t\t\t\t\t\t\t(shift.element.is('a') && !newValue) ||\n\t\t\t\t\t\t\t(shift.element.is('img') && newValue);\n\n\t\t\t\t\t\tlet newEl;\n\n\t\t\t\t\t\tif (needsDeflate) shift.deflate();\n\n\t\t\t\t\t\t// If unlinked the image, returned element is <img>.\n\t\t\t\t\t\tif (!newValue) newEl = unwrapFromLink(link);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// If linked the image, returned element is <a>.\n\t\t\t\t\t\t\tif (!oldValue)\n\t\t\t\t\t\t\t\tnewEl = wrapInLink(img, shift.newData.link);\n\n\t\t\t\t\t\t\t// Set and remove all attributes associated with this state.\n\t\t\t\t\t\t\tconst attributes = CKEDITOR.plugins.ae_dragresize_ie11.getLinkAttributesGetter()(\n\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\tnewValue\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (!CKEDITOR.tools.isEmpty(attributes.set))\n\t\t\t\t\t\t\t\t(newEl || link).setAttributes(attributes.set);\n\n\t\t\t\t\t\t\tif (attributes.removed.length)\n\t\t\t\t\t\t\t\t(newEl || link).removeAttributes(\n\t\t\t\t\t\t\t\t\tattributes.removed\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (needsDeflate) shift.element = newEl;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tfunction wrapInCentering(editor, element) {\n\t\t\t\tconst attribsAndStyles = {};\n\n\t\t\t\tif (alignClasses)\n\t\t\t\t\tattribsAndStyles.attributes = {class: alignClasses[1]};\n\t\t\t\telse attribsAndStyles.styles = {'text-align': 'center'};\n\n\t\t\t\t// There's no gentle way to center inline element with CSS, so create p/div\n\t\t\t\t// that wraps widget contents and does the trick either with style or class.\n\t\t\t\tconst center = doc.createElement(\n\t\t\t\t\teditor.activeEnterMode == CKEDITOR.ENTER_P ? 'p' : 'div',\n\t\t\t\t\tattribsAndStyles\n\t\t\t\t);\n\n\t\t\t\t// Replace element with centering wrapper.\n\t\t\t\treplaceSafely(center, element);\n\t\t\t\telement.move(center);\n\n\t\t\t\treturn center;\n\t\t\t}\n\n\t\t\tfunction unwrapFromCentering(element) {\n\t\t\t\tconst imageOrLink = element.findOne('a,img');\n\n\t\t\t\timageOrLink.replace(element);\n\n\t\t\t\treturn imageOrLink;\n\t\t\t}\n\n\t\t\t// Wraps <img/> -> <a><img/></a>.\n\t\t\t// Returns reference to <a>.\n\t\t\t//\n\t\t\t// @param {CKEDITOR.dom.element} img\n\t\t\t// @param {Object} linkData\n\t\t\t// @returns {CKEDITOR.dom.element}\n\t\t\tfunction wrapInLink(img, linkData) {\n\t\t\t\tconst link = doc.createElement('a', {\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\thref: linkData.url,\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tlink.replace(img);\n\t\t\t\timg.move(link);\n\n\t\t\t\treturn link;\n\t\t\t}\n\n\t\t\t// De-wraps <a><img/></a> -> <img/>.\n\t\t\t// Returns the reference to <img/>\n\t\t\t//\n\t\t\t// @param {CKEDITOR.dom.element} link\n\t\t\t// @returns {CKEDITOR.dom.element}\n\t\t\tfunction unwrapFromLink(link) {\n\t\t\t\tconst img = link.findOne('img');\n\n\t\t\t\timg.replace(link);\n\n\t\t\t\treturn img;\n\t\t\t}\n\n\t\t\tfunction replaceSafely(replacing, replaced) {\n\t\t\t\tif (replaced.getParent()) {\n\t\t\t\t\tconst range = editor.createRange();\n\n\t\t\t\t\trange.moveToPosition(\n\t\t\t\t\t\treplaced,\n\t\t\t\t\t\tCKEDITOR.POSITION_BEFORE_START\n\t\t\t\t\t);\n\n\t\t\t\t\t// Remove old element. Do it before insertion to avoid a case when\n\t\t\t\t\t// element is moved from 'replaced' element before it, what creates\n\t\t\t\t\t// a tricky case which insertElementIntorRange does not handle.\n\t\t\t\t\treplaced.remove();\n\n\t\t\t\t\teditable.insertElementIntoRange(replacing, range);\n\t\t\t\t} else {\n\t\t\t\t\treplacing.replace(replaced);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn function(shift) {\n\t\t\t\tlet name;\n\t\t\t\tlet i;\n\n\t\t\t\tshift.changed = {};\n\n\t\t\t\tfor (i = 0; i < shiftables.length; i++) {\n\t\t\t\t\tname = shiftables[i];\n\n\t\t\t\t\tshift.changed[name] = shift.oldData\n\t\t\t\t\t\t? shift.oldData[name] !== shift.newData[name]\n\t\t\t\t\t\t: false;\n\t\t\t\t}\n\n\t\t\t\t// Iterate over possible state variables.\n\t\t\t\tfor (i = 0; i < shiftables.length; i++) {\n\t\t\t\t\tname = shiftables[i];\n\n\t\t\t\t\tstateActions[name](\n\t\t\t\t\t\tshift,\n\t\t\t\t\t\tshift.oldData ? shift.oldData[name] : null,\n\t\t\t\t\t\tshift.newData[name]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tshift.inflate();\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Checks whether the current image ratio matches the natural one\n\t\t * by comparing dimensions.\n\t\t *\n\t\t * @param {CKEDITOR.dom.element} image\n\t\t * @return {Boolean}\n\t\t */\n\t\tcheckHasNaturalRatio(image) {\n\t\t\tconst $ = image.$;\n\n\t\t\tconst natural = this.getNatural(image);\n\n\t\t\t// The reason for two alternative comparisons is that the rounding can come from\n\t\t\t// both dimensions, e.g. there are two cases:\n\t\t\t// \t1. height is computed as a rounded relation of the real height and the value of width,\n\t\t\t//\t2. width is computed as a rounded relation of the real width and the value of heigh.\n\t\t\treturn (\n\t\t\t\tMath.round(($.clientWidth / natural.width) * natural.height) ==\n\t\t\t\t\t$.clientHeight ||\n\t\t\t\tMath.round(($.clientHeight / natural.height) * natural.width) ==\n\t\t\t\t\t$.clientWidth\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Returns natural dimensions of the image. For modern browsers\n\t\t * it uses natural(Width|Height). For old ones (IE8) it creates\n\t\t * a new image and reads the dimensions.\n\t\t *\n\t\t * @param {CKEDITOR.dom.element} image\n\t\t * @return {Object}\n\t\t */\n\t\tgetNatural(image) {\n\t\t\tlet dimensions;\n\n\t\t\tif (image.$.naturalWidth) {\n\t\t\t\tdimensions = {\n\t\t\t\t\twidth: image.$.naturalWidth,\n\t\t\t\t\theight: image.$.naturalHeight,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconst img = new Image();\n\t\t\t\timg.src = image.getAttribute('src');\n\n\t\t\t\tdimensions = {\n\t\t\t\t\twidth: img.width,\n\t\t\t\t\theight: img.height,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn dimensions;\n\t\t},\n\n\t\t/**\n\t\t * Returns an attribute getter function. Default getter comes from the Link plugin\n\t\t * and is documented by {@link CKEDITOR.plugins.link#getLinkAttributes}.\n\t\t *\n\t\t * **Note:** It is possible to override this method and use a custom getter e.g.\n\t\t * in the absence of the Link plugin.\n\t\t *\n\t\t * **Note:** If a custom getter is used, a data model format it produces\n\t\t * must be compatible with {@link CKEDITOR.plugins.link#getLinkAttributes}.\n\t\t *\n\t\t * **Note:** A custom getter must understand the data model format produced by\n\t\t * {@link #getLinkAttributesParser} to work correctly.\n\t\t *\n\t\t * @return {Function} A function that gets (composes) link attributes.\n\t\t * @since 4.5.5\n\t\t */\n\t\tgetLinkAttributesGetter() {\n\t\t\t// #13885\n\t\t\treturn CKEDITOR.plugins.link.getLinkAttributes;\n\t\t},\n\n\t\t/**\n\t\t * Returns an attribute parser function. Default parser comes from the Link plugin\n\t\t * and is documented by {@link CKEDITOR.plugins.link#parseLinkAttributes}.\n\t\t *\n\t\t * **Note:** It is possible to override this method and use a custom parser e.g.\n\t\t * in the absence of the Link plugin.\n\t\t *\n\t\t * **Note:** If a custom parser is used, a data model format produced by the parser\n\t\t * must be compatible with {@link #getLinkAttributesGetter}.\n\t\t *\n\t\t * **Note:** If a custom parser is used, it should be compatible with the\n\t\t * {@link CKEDITOR.plugins.link#parseLinkAttributes} data model format. Otherwise the\n\t\t * Link plugin dialog may not be populated correctly with parsed data. However\n\t\t * as long as Enhanced Image is **not** used with the Link plugin dialog, any custom data model\n\t\t * will work, being stored as an internal property of Enhanced Image widget's data only.\n\t\t *\n\t\t * @return {Function} A function that parses attributes.\n\t\t * @since 4.5.5\n\t\t */\n\t\tgetLinkAttributesParser() {\n\t\t\t// #13885\n\t\t\treturn CKEDITOR.plugins.link.parseLinkAttributes;\n\t\t},\n\t};\n\n\tfunction setWrapperAlign(widget, alignClasses) {\n\t\tconst wrapper = widget.wrapper;\n\n\t\tconst align = widget.data.align;\n\n\t\tconst hasCaption = widget.data.hasCaption;\n\n\t\tif (alignClasses) {\n\t\t\t// Remove all align classes first.\n\t\t\tfor (let i = 3; i--; ) wrapper.removeClass(alignClasses[i]);\n\n\t\t\tif (align == 'center') {\n\t\t\t\t// Avoid touching non-captioned, centered widgets because\n\t\t\t\t// they have the class set on the element instead of wrapper:\n\t\t\t\t//\n\t\t\t\t// \t<div class=\"cke_widget_wrapper\">\n\t\t\t\t// \t\t<p class=\"center-class\">\n\t\t\t\t// \t\t\t<img />\n\t\t\t\t// \t\t</p>\n\t\t\t\t// \t</div>\n\t\t\t\tif (hasCaption) {\n\t\t\t\t\twrapper.addClass(alignClasses[1]);\n\t\t\t\t}\n\t\t\t} else if (align != 'none') {\n\t\t\t\twrapper.addClass(alignClasses[alignmentsObj[align]]);\n\t\t\t}\n\t\t} else {\n\t\t\tif (align == 'center') {\n\t\t\t\tif (hasCaption) wrapper.setStyle('text-align', 'center');\n\t\t\t\telse wrapper.removeStyle('text-align');\n\n\t\t\t\twrapper.removeStyle('float');\n\t\t\t} else {\n\t\t\t\tif (align == 'none') wrapper.removeStyle('float');\n\t\t\t\telse wrapper.setStyle('float', align);\n\n\t\t\t\twrapper.removeStyle('text-align');\n\t\t\t}\n\n\t\t\tconst image = wrapper.$.querySelector('img');\n\n\t\t\tconst imageStyles = image.getAttribute('style');\n\n\t\t\tif (imageStyles) {\n\t\t\t\tlet styles = '';\n\n\t\t\t\tconst heightStyles = /(height:.+?;)/.exec(imageStyles);\n\t\t\t\tif (heightStyles) {\n\t\t\t\t\tstyles += heightStyles[0];\n\t\t\t\t}\n\n\t\t\t\tconst widthStyles = /(width:.+?;)/.exec(imageStyles);\n\t\t\t\tif (widthStyles) {\n\t\t\t\t\tstyles += widthStyles[0];\n\t\t\t\t}\n\n\t\t\t\timage.setAttribute('style', styles);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Returns a function that creates widgets from all <img> and\n\t// <figure class=\"{config.ae_dragresize_ie11_captionedClass}\"> elements.\n\t//\n\t// @param {CKEDITOR.editor} editor\n\t// @returns {Function}\n\tfunction upcastWidgetElement(editor) {\n\t\tconst isCenterWrapper = centerWrapperChecker(editor);\n\n\t\tconst captionedClass = editor.config.ae_dragresize_ie11_captionedClass;\n\n\t\t// @param {CKEDITOR.htmlParser.element} el\n\t\t// @param {Object} data\n\t\treturn function(el, data) {\n\t\t\tconst dimensions = {width: 1, height: 1};\n\n\t\t\tconst name = el.name;\n\n\t\t\tlet image;\n\n\t\t\t// #11110 Don't initialize on pasted fake objects.\n\t\t\tif (el.attributes['data-cke-realelement']) return;\n\n\t\t\t// If a center wrapper is found, there are 3 possible cases:\n\t\t\t//\n\t\t\t// 1. <div style=\"text-align:center\"><figure>...</figure></div>.\n\t\t\t//    In this case centering is done with a class set on widget.wrapper.\n\t\t\t//    Simply replace centering wrapper with figure (it's no longer necessary).\n\t\t\t//\n\t\t\t// 2. <p style=\"text-align:center\"><img/></p>.\n\t\t\t//    Nothing to do here: <p> remains for styling purposes.\n\t\t\t//\n\t\t\t// 3. <div style=\"text-align:center\"><img/></div>.\n\t\t\t//    Nothing to do here (2.) but that case is only possible in enterMode different\n\t\t\t//    than ENTER_P.\n\t\t\tif (isCenterWrapper(el)) {\n\t\t\t\tif (name == 'div') {\n\t\t\t\t\tconst figure = el.getFirst('figure');\n\n\t\t\t\t\t// Case #1.\n\t\t\t\t\tif (figure) {\n\t\t\t\t\t\tel.replaceWith(figure);\n\t\t\t\t\t\tel = figure;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Cases #2 and #3 (handled transparently)\n\n\t\t\t\t// If there's a centering wrapper, save it in data.\n\t\t\t\tdata.align = 'center';\n\n\t\t\t\t// Image can be wrapped in link <a><img/></a>.\n\t\t\t\timage = el.getFirst('img') || el.getFirst('a').getFirst('img');\n\t\t\t}\n\n\t\t\t// No center wrapper has been found.\n\t\t\telse if (name == 'figure' && el.hasClass(captionedClass)) {\n\t\t\t\timage = el.getFirst('img') || el.getFirst('a').getFirst('img');\n\n\t\t\t\t// Upcast linked image like <a><img/></a>.\n\t\t\t} else if (isLinkedOrStandaloneImage(el)) {\n\t\t\t\timage = el.name == 'a' ? el.children[0] : el;\n\t\t\t}\n\n\t\t\tif (!image) return;\n\n\t\t\t// If there's an image, then cool, we got a widget.\n\t\t\t// Now just remove dimension attributes expressed with %.\n\t\t\tfor (const d in dimensions) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(dimensions, d)) {\n\t\t\t\t\tconst dimension = image.attributes[d];\n\t\t\t\t\tif (dimension && dimension.match(regexPercent))\n\t\t\t\t\t\tdelete image.attributes[d];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn el;\n\t\t};\n\t}\n\n\t// Returns a function which transforms the widget to the external format\n\t// according to the current configuration.\n\t//\n\t// @param {CKEDITOR.editor}\n\tfunction downcastWidgetElement(editor) {\n\t\tconst alignClasses = editor.config.ae_dragresize_ie11_alignClasses;\n\n\t\t// @param {CKEDITOR.htmlParser.element} el\n\t\treturn function(el) {\n\t\t\t// In case of <a><img/></a>, <img/> is the element to hold\n\t\t\t// inline styles or classes (ae_dragresize_ie11_alignClasses).\n\t\t\tconst attrsHolder = el.name == 'a' ? el.getFirst() : el;\n\n\t\t\tconst attrs = attrsHolder.attributes;\n\n\t\t\tconst align = this.data.align;\n\n\t\t\t// De-wrap the image from resize handle wrapper.\n\t\t\t// Only block widgets have one.\n\t\t\tif (!this.inline) {\n\t\t\t\tconst resizeWrapper = el.getFirst('span');\n\n\t\t\t\tif (resizeWrapper)\n\t\t\t\t\tresizeWrapper.replaceWith(\n\t\t\t\t\t\tresizeWrapper.getFirst({img: 1, a: 1})\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (align && align != 'none') {\n\t\t\t\tconst styles = CKEDITOR.tools.parseCssText(attrs.style || '');\n\n\t\t\t\t// When the widget is captioned (<figure>) and internally centering is done\n\t\t\t\t// with widget's wrapper style/class, in the external data representation,\n\t\t\t\t// <figure> must be wrapped with an element holding an style/class:\n\t\t\t\t//\n\t\t\t\t// \t<div style=\"text-align:center\">\n\t\t\t\t// \t\t<figure class=\"image\" style=\"display:inline-block\">...</figure>\n\t\t\t\t// \t</div>\n\t\t\t\t// or\n\t\t\t\t// \t<div class=\"some-center-class\">\n\t\t\t\t// \t\t<figure class=\"image\">...</figure>\n\t\t\t\t// \t</div>\n\t\t\t\t//\n\t\t\t\tif (align == 'center' && el.name == 'figure') {\n\t\t\t\t\tel = el.wrapWith(\n\t\t\t\t\t\tnew CKEDITOR.htmlParser.element(\n\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\talignClasses\n\t\t\t\t\t\t\t\t? {class: alignClasses[1]}\n\t\t\t\t\t\t\t\t: {style: 'text-align:center'}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// If left/right, add float style to the downcasted element.\n\t\t\t\telse if (align in {left: 1, right: 1}) {\n\t\t\t\t\tif (alignClasses)\n\t\t\t\t\t\tattrsHolder.addClass(\n\t\t\t\t\t\t\talignClasses[alignmentsObj[align]]\n\t\t\t\t\t\t);\n\t\t\t\t\telse styles['float'] = align;\n\t\t\t\t}\n\n\t\t\t\t// Update element styles.\n\t\t\t\tif (!alignClasses && !CKEDITOR.tools.isEmpty(styles))\n\t\t\t\t\tattrs.style = CKEDITOR.tools.writeCssText(styles) + ';';\n\t\t\t}\n\n\t\t\treturn el;\n\t\t};\n\t}\n\n\t// Returns a function that checks if an element is a centering wrapper.\n\t//\n\t// @param {CKEDITOR.editor} editor\n\t// @returns {Function}\n\tfunction centerWrapperChecker(editor) {\n\t\tconst captionedClass = editor.config.ae_dragresize_ie11_captionedClass;\n\n\t\tconst alignClasses = editor.config.ae_dragresize_ie11_alignClasses;\n\n\t\tconst validChildren = {figure: 1, a: 1, img: 1};\n\n\t\treturn function(el) {\n\t\t\t// Wrapper must be either <div> or <p>.\n\t\t\tif (!(el.name in {div: 1, p: 1})) return false;\n\n\t\t\tconst children = el.children;\n\n\t\t\t// Centering wrapper can have only one child.\n\t\t\tif (children.length !== 1) return false;\n\n\t\t\tconst child = children[0];\n\n\t\t\t// Only <figure> or <img /> can be first (only) child of centering wrapper,\n\t\t\t// regardless of its type.\n\t\t\tif (!(child.name in validChildren)) return false;\n\n\t\t\t// If centering wrapper is <p>, only <img /> can be the child.\n\t\t\t//   <p style=\"text-align:center\"><img /></p>\n\t\t\tif (el.name == 'p') {\n\t\t\t\tif (!isLinkedOrStandaloneImage(child)) return false;\n\t\t\t}\n\t\t\t// Centering <div> can hold <img/> or <figure>, depending on enterMode.\n\t\t\telse {\n\t\t\t\t// If a <figure> is the first (only) child, it must have a class.\n\t\t\t\t//   <div style=\"text-align:center\"><figure>...</figure><div>\n\t\t\t\tif (child.name == 'figure') {\n\t\t\t\t\tif (!child.hasClass(captionedClass)) return false;\n\t\t\t\t} else {\n\t\t\t\t\t// Centering <div> can hold <img/> or <a><img/></a> only when enterMode\n\t\t\t\t\t// is ENTER_(BR|DIV).\n\t\t\t\t\t//   <div style=\"text-align:center\"><img /></div>\n\t\t\t\t\t//   <div style=\"text-align:center\"><a><img /></a></div>\n\t\t\t\t\tif (editor.enterMode == CKEDITOR.ENTER_P) return false;\n\n\t\t\t\t\t// Regardless of enterMode, a child which is not <figure> must be\n\t\t\t\t\t// either <img/> or <a><img/></a>.\n\t\t\t\t\tif (!isLinkedOrStandaloneImage(child)) return false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Centering wrapper got to be... centering. If ae_dragresize_ie11_alignClasses are defined,\n\t\t\t// check for centering class. Otherwise, check the style.\n\t\t\tif (\n\t\t\t\talignClasses\n\t\t\t\t\t? el.hasClass(alignClasses[1])\n\t\t\t\t\t: CKEDITOR.tools.parseCssText(\n\t\t\t\t\t\t\tel.attributes.style || '',\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t  )['text-align'] == 'center'\n\t\t\t)\n\t\t\t\treturn true;\n\n\t\t\treturn false;\n\t\t};\n\t}\n\n\t// Checks whether element is <img/> or <a><img/></a>.\n\t//\n\t// @param {CKEDITOR.htmlParser.element}\n\tfunction isLinkedOrStandaloneImage(el) {\n\t\tif (el.name == 'img') return true;\n\t\telse if (el.name == 'a')\n\t\t\treturn el.children.length == 1 && el.getFirst('img');\n\n\t\treturn false;\n\t}\n\n\t// Sets width and height of the widget image according to current widget data.\n\t//\n\t// @param {CKEDITOR.plugins.widget} widget\n\tfunction setDimensions(widget) {\n\t\tconst data = widget.data;\n\n\t\tconst dimensions = {\n\t\t\twidth: data.width,\n\t\t\theight: data.lock ? null : data.height,\n\t\t};\n\n\t\tconst image = widget.parts.image;\n\n\t\tfor (const d in dimensions) {\n\t\t\tif (dimensions[d]) image.setAttribute(d, dimensions[d]);\n\t\t\telse image.removeAttribute(d);\n\t\t}\n\t}\n\n\t// Defines all features related to drag-driven image resizing.\n\t//\n\t// @param {CKEDITOR.plugins.widget} widget\n\tfunction setupResizer(widget) {\n\t\tconst editor = widget.editor;\n\n\t\tconst editable = editor.editable();\n\n\t\tconst doc = editor.document;\n\n\t\t// Store the resizer in a widget for testing (#11004).\n\n\t\tconst resizer = (widget.resizer = doc.createElement('span'));\n\n\t\t// Create resizer for each corner (NE, NW, SE, SW)\n\n\t\tconst resizerNE = doc.createElement('span');\n\n\t\tconst resizerNW = doc.createElement('span');\n\n\t\tconst resizerSE = doc.createElement('span');\n\n\t\tconst resizerSW = doc.createElement('span');\n\n\t\tresizerNE.addClass('cke_image_resizer');\n\t\tresizerNE.addClass('cke_image_resizer_ne');\n\n\t\tresizerNW.addClass('cke_image_resizer');\n\t\tresizerNW.addClass('cke_image_resizer_nw');\n\n\t\tresizerSE.addClass('cke_image_resizer');\n\t\tresizerSE.addClass('cke_image_resizer_se');\n\n\t\tresizerSW.addClass('cke_image_resizer');\n\t\tresizerSW.addClass('cke_image_resizer_sw');\n\n\t\t// Add each directional resizer as a child of resizer\n\t\tresizer.append(resizerNE);\n\t\tresizer.append(resizerNW);\n\t\tresizer.append(resizerSE);\n\t\tresizer.append(resizerSW);\n\n\t\t// resizer.setAttribute( 'title', editor.lang.ae_dragresize_ie11.resizer );\n\t\tresizer.append(new CKEDITOR.dom.text('\\u200b', doc));\n\n\t\t// Inline widgets don't need a resizer wrapper as an image spans the entire widget.\n\t\tif (!widget.inline) {\n\t\t\tconst imageOrLink = widget.parts.link || widget.parts.image;\n\n\t\t\tconst oldResizeWrapper = imageOrLink.getParent();\n\n\t\t\tconst resizeWrapper = doc.createElement('span');\n\n\t\t\tresizeWrapper.addClass('cke_image_resizer_wrapper');\n\t\t\tresizeWrapper.append(imageOrLink);\n\t\t\tresizeWrapper.append(resizer);\n\t\t\twidget.element.append(resizeWrapper, true);\n\n\t\t\t// Remove the old wrapper which could came from e.g. pasted HTML\n\t\t\t// and which could be corrupted (e.g. resizer span has been lost).\n\t\t\tif (oldResizeWrapper.is('span')) oldResizeWrapper.remove();\n\t\t} else {\n\t\t\twidget.wrapper.append(resizer);\n\t\t}\n\n\t\t// Calculate values of size variables and mouse offsets.\n\t\tresizer.on('mousedown', evt => {\n\t\t\tconst image = widget.parts.image;\n\n\t\t\t// The x-coordinate of the mouse relative to the screen\n\t\t\t// when button gets pressed.\n\n\t\t\tconst startX = evt.data.$.screenX;\n\n\t\t\tconst startY = evt.data.$.screenY;\n\n\t\t\t// The initial dimensions and aspect ratio of the image.\n\n\t\t\tconst startWidth = image.$.clientWidth;\n\n\t\t\tconst startHeight = image.$.clientHeight;\n\n\t\t\tconst ratio = startWidth / startHeight;\n\n\t\t\tconst listeners = [];\n\n\t\t\tconst target = evt.data.getTarget();\n\n\t\t\tlet factorX;\n\n\t\t\tlet factorY;\n\n\t\t\tlet moveDiffX;\n\n\t\t\tlet moveDiffY;\n\n\t\t\tlet nativeEvt;\n\n\t\t\tlet newHeight;\n\n\t\t\tlet newWidth;\n\n\t\t\tlet updateData;\n\n\t\t\t// \"factorX\" and \"factorY\" can be either 1 or -1. I.e.: We need to\n\t\t\t// add/subtract the difference to get proper width, etc. Without \"factorX\"\n\t\t\t// and \"factorY\", resizer starts working the opposite way.\n\t\t\tif (target.hasClass('cke_image_resizer_ne')) {\n\t\t\t\tfactorX = 1;\n\t\t\t\tfactorY = 1;\n\t\t\t} else if (target.hasClass('cke_image_resizer_nw')) {\n\t\t\t\tfactorX = -1;\n\t\t\t\tfactorY = 1;\n\t\t\t} else if (target.hasClass('cke_image_resizer_se')) {\n\t\t\t\tfactorX = 1;\n\t\t\t\tfactorY = -1;\n\t\t\t} else if (target.hasClass('cke_image_resizer_sw')) {\n\t\t\t\tfactorX = -1;\n\t\t\t\tfactorY = -1;\n\t\t\t}\n\n\t\t\t// A class applied to editable during resizing.\n\t\t\tconst cursorClass =\n\t\t\t\t'cke_image_' +\n\t\t\t\t(!~factorY ? 's' : 'n') +\n\t\t\t\t(!~factorX ? 'w' : 'e');\n\n\t\t\t// Save the undo snapshot first: before resizing.\n\t\t\teditor.fire('saveSnapshot');\n\n\t\t\t// Mousemove listeners are removed on mouseup.\n\t\t\tattachToDocuments('mousemove', onMouseMove, listeners);\n\n\t\t\t// Clean up the mousemove listener. Update widget data if valid.\n\t\t\tattachToDocuments('mouseup', onMouseUp, listeners);\n\n\t\t\t// The entire editable will have the special cursor while resizing goes on.\n\t\t\teditable.addClass(cursorClass);\n\n\t\t\t// This is to always keep the resizer element visible while resizing.\n\t\t\tresizer.addClass('cke_image_resizing');\n\n\t\t\t// Attaches an event to a global document if inline editor.\n\t\t\t// Additionally, if classic (`iframe`-based) editor, also attaches the same event to `iframe`'s document.\n\t\t\tfunction attachToDocuments(name, callback, collection) {\n\t\t\t\tconst globalDoc = CKEDITOR.document;\n\n\t\t\t\tconst listeners = [];\n\n\t\t\t\tif (!doc.equals(globalDoc))\n\t\t\t\t\tlisteners.push(globalDoc.on(name, callback));\n\n\t\t\t\tlisteners.push(doc.on(name, callback));\n\n\t\t\t\tif (collection) {\n\t\t\t\t\tfor (let i = listeners.length; i--; )\n\t\t\t\t\t\tcollection.push(listeners.pop());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Calculate width first, and then adjust height, preserving ratio.\n\t\t\tfunction adjustToX() {\n\t\t\t\tnewWidth = startWidth + factorX * moveDiffX;\n\t\t\t\tnewHeight = Math.round(newWidth / ratio);\n\t\t\t}\n\n\t\t\t// Calculate height first, and then adjust width, preserving ratio.\n\t\t\tfunction adjustToY() {\n\t\t\t\tnewHeight = startHeight + factorY * moveDiffY;\n\t\t\t\tnewWidth = Math.round(newHeight * ratio);\n\t\t\t}\n\n\t\t\t// This is how variables refer to the geometry.\n\t\t\t// Note: x corresponds to moveOffset, this is the position of mouse\n\t\t\t// Note: o corresponds to [startX, startY].\n\t\t\t//\n\t\t\t// \t+--------------+--------------+\n\t\t\t// \t|              |              |\n\t\t\t// \t|      I       |      II      |\n\t\t\t// \t|              |              |\n\t\t\t// \t+------------- o -------------+ _ _ _\n\t\t\t// \t|              |              |      ^\n\t\t\t// \t|      VI      |     III      |      | moveDiffY\n\t\t\t// \t|              |         x _ _ _ _ _ v\n\t\t\t// \t+--------------+---------|----+\n\t\t\t// \t               |         |\n\t\t\t// \t                <------->\n\t\t\t// \t                moveDiffX\n\t\t\tfunction onMouseMove(evt) {\n\t\t\t\tnativeEvt = evt.data.$;\n\n\t\t\t\t// This is how far the mouse is from the point the button was pressed.\n\t\t\t\tmoveDiffX = nativeEvt.screenX - startX;\n\t\t\t\tmoveDiffY = startY - nativeEvt.screenY;\n\n\t\t\t\t// Resize with NE, SE drag handles\n\t\t\t\tif (factorX == 1) {\n\t\t\t\t\tif (moveDiffX <= 0) {\n\t\t\t\t\t\tadjustToY();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tadjustToX();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Resize with NW, SW drag handles\n\t\t\t\telse {\n\t\t\t\t\tif (moveDiffX <= 0) {\n\t\t\t\t\t\tadjustToX();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tadjustToY();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Don't update attributes if less than 10.\n\t\t\t\t// This is to prevent images to visually disappear.\n\t\t\t\tif (newWidth >= 15 && newHeight >= 15) {\n\t\t\t\t\timage.$.style.width = newWidth + 'px';\n\t\t\t\t\timage.$.style.height = widget.data.lock\n\t\t\t\t\t\t? 'auto'\n\t\t\t\t\t\t: newHeight + 'px';\n\n\t\t\t\t\tupdateData = true;\n\t\t\t\t} else {\n\t\t\t\t\tupdateData = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction onMouseUp() {\n\t\t\t\tlet l;\n\n\t\t\t\twhile ((l = listeners.pop())) l.removeListener();\n\n\t\t\t\t// Restore default cursor by removing special class.\n\t\t\t\teditable.removeClass(cursorClass);\n\n\t\t\t\t// This is to bring back the regular behaviour of the resizer.\n\t\t\t\tresizer.removeClass('cke_image_resizing');\n\n\t\t\t\tif (updateData) {\n\t\t\t\t\twidget.setData({\n\t\t\t\t\t\theight: widget.data.lock ? null : newHeight,\n\t\t\t\t\t\twidth: newWidth,\n\t\t\t\t\t});\n\n\t\t\t\t\t// Save another undo snapshot: after resizing.\n\t\t\t\t\teditor.fire('saveSnapshot');\n\t\t\t\t}\n\n\t\t\t\t// Don't update data twice or more.\n\t\t\t\tupdateData = false;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Removes the alignment value of an image\n\t *\n\t * @param {CKEDITOR.dom.element} image The image element\n\t * @param {String} imageAlignment The image alignment value to be removed\n\t */\n\tconst removeWidgetAlignment = function(widget, imageAlignment) {\n\t\tif (imageAlignment === 'left' || imageAlignment === 'right') {\n\t\t\twidget.wrapper.removeStyle('float');\n\t\t} else if (imageAlignment === 'center') {\n\t\t\twidget.editor.execCommand('justifyleft');\n\t\t\twidget.editor.execCommand('justifyleft');\n\t\t}\n\t};\n\n\t// Integrates widget alignment setting with justify\n\t// plugin's commands (execution and refreshment).\n\t// @param {CKEDITOR.editor} editor\n\t// @param {String} value 'left', 'right', 'center' or 'block'\n\tfunction alignCommandIntegrator(editor) {\n\t\tconst execCallbacks = [];\n\n\t\tlet enabled;\n\n\t\treturn function(value) {\n\t\t\tconst command = editor.getCommand('justify' + value);\n\n\t\t\t// Most likely, the justify plugin isn't loaded.\n\t\t\tif (!command) return;\n\n\t\t\t// This command will be manually refreshed along with\n\t\t\t// other commands after exec.\n\t\t\texecCallbacks.push(() => {\n\t\t\t\tcommand.refresh(editor, editor.elementPath());\n\t\t\t});\n\n\t\t\tif (value in {right: 1, left: 1, center: 1}) {\n\t\t\t\tcommand.on('exec', evt => {\n\t\t\t\t\tconst widget = getFocusedWidget(editor);\n\n\t\t\t\t\tif (widget) {\n\t\t\t\t\t\tif (widget.data.align === value) {\n\t\t\t\t\t\t\tremoveWidgetAlignment(widget, value);\n\n\t\t\t\t\t\t\tdelete widget.data.align;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twidget.setData('align', value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Once the widget changed its align, all the align commands\n\t\t\t\t\t\t// must be refreshed: the event is to be cancelled.\n\t\t\t\t\t\tfor (let i = execCallbacks.length; i--; )\n\t\t\t\t\t\t\texecCallbacks[i]();\n\n\t\t\t\t\t\tevt.cancel();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcommand.on('refresh', function(evt) {\n\t\t\t\tconst widget = getFocusedWidget(editor);\n\n\t\t\t\tconst allowed = {right: 1, left: 1, center: 1};\n\n\t\t\t\tif (!widget) return;\n\n\t\t\t\t// Cache \"enabled\" on first use. This is because filter#checkFeature may\n\t\t\t\t// not be available during plugin's afterInit in the future — a moment when\n\t\t\t\t// alignCommandIntegrator is called.\n\t\t\t\tif (enabled === undefined)\n\t\t\t\t\tenabled = editor.filter.checkFeature(\n\t\t\t\t\t\teditor.widgets.registered.image.features.align\n\t\t\t\t\t);\n\n\t\t\t\t// Don't allow justify commands when widget alignment is disabled (#11004).\n\t\t\t\tif (!enabled) this.setState(CKEDITOR.TRISTATE_DISABLED);\n\t\t\t\telse {\n\t\t\t\t\tthis.setState(\n\t\t\t\t\t\twidget.data.align == value\n\t\t\t\t\t\t\t? CKEDITOR.TRISTATE_ON\n\t\t\t\t\t\t\t: value in allowed\n\t\t\t\t\t\t\t? CKEDITOR.TRISTATE_OFF\n\t\t\t\t\t\t\t: CKEDITOR.TRISTATE_DISABLED\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tevt.cancel();\n\t\t\t});\n\t\t};\n\t}\n\n\t// Returns the focused widget, if of the type specific for this plugin.\n\t// If no widget is focused, `null` is returned.\n\t//\n\t// @param {CKEDITOR.editor}\n\t// @returns {CKEDITOR.plugins.widget}\n\tfunction getFocusedWidget(editor) {\n\t\tconst widget = editor.widgets.focused;\n\n\t\tif (widget && widget.name == 'image') return widget;\n\n\t\treturn null;\n\t}\n\n\t// Returns a set of widget allowedContent rules, depending\n\t// on configurations like config#ae_dragresize_ie11_alignClasses or\n\t// config#ae_dragresize_ie11_captionedClass.\n\t//\n\t// @param {CKEDITOR.editor}\n\t// @returns {Object}\n\tfunction getWidgetAllowedContent(editor) {\n\t\tconst alignClasses = editor.config.ae_dragresize_ie11_alignClasses;\n\n\t\tconst rules = {\n\t\t\t// Widget may need <div> or <p> centering wrapper.\n\t\t\tdiv: {\n\t\t\t\tmatch: centerWrapperChecker(editor),\n\t\t\t},\n\t\t\tp: {\n\t\t\t\tmatch: centerWrapperChecker(editor),\n\t\t\t},\n\t\t\timg: {\n\t\t\t\tattributes: '!src,alt,width,height',\n\t\t\t},\n\t\t\tfigure: {\n\t\t\t\tclasses: '!' + editor.config.ae_dragresize_ie11_captionedClass,\n\t\t\t},\n\t\t\tfigcaption: true,\n\t\t};\n\n\t\tif (alignClasses) {\n\t\t\t// Centering class from the config.\n\t\t\trules.div.classes = alignClasses[1];\n\t\t\trules.p.classes = rules.div.classes;\n\n\t\t\t// Left/right classes from the config.\n\t\t\trules.img.classes = alignClasses[0] + ',' + alignClasses[2];\n\t\t\trules.figure.classes += ',' + rules.img.classes;\n\t\t} else {\n\t\t\t// Centering with text-align.\n\t\t\trules.div.styles = 'text-align';\n\t\t\trules.p.styles = 'text-align';\n\n\t\t\trules.img.styles = 'float';\n\t\t\trules.figure.styles = 'float,display';\n\t\t}\n\n\t\treturn rules;\n\t}\n\n\t// Returns a set of widget feature rules, depending\n\t// on editor configuration. Note that the following may not cover\n\t// all the possible cases since requiredContent supports a single\n\t// tag only.\n\t//\n\t// @param {CKEDITOR.editor}\n\t// @returns {Object}\n\tfunction getWidgetFeatures(editor) {\n\t\tconst alignClasses = editor.config.ae_dragresize_ie11_alignClasses;\n\n\t\tconst features = {\n\t\t\tdimension: {\n\t\t\t\trequiredContent: 'img[width,height]',\n\t\t\t},\n\t\t\talign: {\n\t\t\t\trequiredContent:\n\t\t\t\t\t'img' +\n\t\t\t\t\t(alignClasses ? '(' + alignClasses[0] + ')' : '{float}'),\n\t\t\t},\n\t\t\tcaption: {\n\t\t\t\trequiredContent: 'figcaption',\n\t\t\t},\n\t\t};\n\n\t\treturn features;\n\t}\n\n\t// Returns element which is styled, considering current\n\t// state of the widget.\n\t//\n\t// @see CKEDITOR.plugins.widget#applyStyle\n\t// @param {CKEDITOR.plugins.widget} widget\n\t// @returns {CKEDITOR.dom.element}\n\tfunction getStyleableElement(widget) {\n\t\treturn widget.data.hasCaption ? widget.element : widget.parts.image;\n\t}\n})();\n\n/**\n * A CSS class applied to the `<figure>` element of a captioned image.\n *\n * Read more in the [documentation](#!/guide/dev_captionedimage) and see the\n * [SDK sample](http://sdk.ckeditor.com/samples/captionedimage.html).\n *\n *\t\t// Changes the class to \"captionedImage\".\n *\t\tconfig.ae_dragresize_ie11_captionedClass = 'captionedImage';\n *\n * @cfg {String} [ae_dragresize_ie11_captionedClass='image']\n * @member CKEDITOR.config\n */\nCKEDITOR.config.ae_dragresize_ie11_captionedClass = 'image';\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport {HIGH_PRIORITY} from './priorities';\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_embed')) {\n\tconst REGEX_HTTP = /^https?/;\n\n\tconst REGEX_DEFAULT_LINK = /<a href=/;\n\n\tCKEDITOR.DEFAULT_AE_EMBED_URL_TPL =\n\t\t'http://alloy.iframe.ly/api/oembed?url={url}&callback={callback}';\n\tCKEDITOR.DEFAULT_AE_EMBED_WIDGET_TPL =\n\t\t'<div data-ae-embed-url=\"{url}\"></div>';\n\tCKEDITOR.DEFAULT_AE_EMBED_DEFAULT_LINK_TPL = '<a href=\"{url}\">{url}</a>';\n\t/**\n\t * CKEditor plugin which adds the infrastructure to embed urls as media objects using an oembed\n\t * service. By default, and for demoing purposes only, the oembed service is hosted in iframe.ly\n\t * at //alloy.iframe.ly/api/oembed?url={url}&callback={callback}. Note this should be changed to\n\t * a self-hosted or paid service in production environments. Access to the alloy.iframe.ly endpoint\n\t * may be restricted per domain due to significant traffic.\n\t *\n\t * This plugin adds an `embedUrl` command that can be used to easily embed a URL and transform it\n\t * to an embedded content.\n\t *\n\t * @class CKEDITOR.plugins.ae_embed\n\t */\n\tCKEDITOR.plugins.add('ae_embed', {\n\t\trequires: 'widget',\n\t\tinit(editor) {\n\t\t\tconst AE_EMBED_URL_TPL = new CKEDITOR.template(\n\t\t\t\teditor.config.embedUrlTemplate ||\n\t\t\t\t\tCKEDITOR.DEFAULT_AE_EMBED_URL_TPL\n\t\t\t);\n\t\t\tconst AE_EMBED_WIDGET_TPL = new CKEDITOR.template(\n\t\t\t\teditor.config.embedWidgetTpl ||\n\t\t\t\t\tCKEDITOR.DEFAULT_AE_EMBED_WIDGET_TPL\n\t\t\t);\n\t\t\tconst AE_EMBED_DEFAULT_LINK_TPL = new CKEDITOR.template(\n\t\t\t\teditor.config.embedLinkDefaultTpl ||\n\t\t\t\t\tCKEDITOR.DEFAULT_AE_EMBED_DEFAULT_LINK_TPL\n\t\t\t);\n\n\t\t\t// Default function to upcast DOM elements to embed widgets.\n\t\t\t// It matches CKEDITOR.DEFAULT_AE_EMBED_WIDGET_TPL\n\t\t\tconst defaultEmbedWidgetUpcastFn = function(element, data) {\n\t\t\t\tif (\n\t\t\t\t\telement.name === 'div' &&\n\t\t\t\t\telement.attributes['data-ae-embed-url']\n\t\t\t\t) {\n\t\t\t\t\tdata.url = element.attributes['data-ae-embed-url'];\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Create a embedUrl command that can be invoked to easily embed media URLs\n\t\t\teditor.addCommand('embedUrl', {\n\t\t\t\texec(editor, data) {\n\t\t\t\t\teditor.insertHtml(\n\t\t\t\t\t\tAE_EMBED_WIDGET_TPL.output({\n\t\t\t\t\t\t\turl: data.url,\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t// Create a widget to properly handle embed operations\n\t\t\teditor.widgets.add('ae_embed', {\n\t\t\t\tmask: true,\n\t\t\t\trequiredContent: 'div[data-ae-embed-url]',\n\n\t\t\t\t/**\n\t\t\t\t * Listener to be executed every time the widget's data changes. It takes care of\n\t\t\t\t * requesting the embed object to the configured oembed service and render it in\n\t\t\t\t * the editor\n\t\t\t\t *\n\t\t\t\t * @method data\n\t\t\t\t * @param {event} event Data change event\n\t\t\t\t */\n\t\t\t\tdata(event) {\n\t\t\t\t\tconst widget = this;\n\n\t\t\t\t\tconst url = event.data.url;\n\n\t\t\t\t\tif (url) {\n\t\t\t\t\t\tCKEDITOR.tools.jsonp(\n\t\t\t\t\t\t\tAE_EMBED_URL_TPL,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\turl: encodeURIComponent(url),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tresponse => {\n\t\t\t\t\t\t\t\tif (response.html) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tREGEX_DEFAULT_LINK.test(response.html)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\twidget.createATag(url);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\twidget.element.setHtml(response.html);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\twidget.createATag(url);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t_msg => {\n\t\t\t\t\t\t\t\twidget.createATag(url);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tcreateATag(url) {\n\t\t\t\t\tthis.editor.execCommand('undo');\n\n\t\t\t\t\tconst aTagHtml = AE_EMBED_DEFAULT_LINK_TPL.output({\n\t\t\t\t\t\turl,\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.editor.insertHtml(aTagHtml);\n\t\t\t\t\tthis.editor.fire('actionPerformed', this);\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * Function used to upcast an element to ae_embed widgets.\n\t\t\t\t *\n\t\t\t\t * @method upcast\n\t\t\t\t * @param {CKEDITOR.htmlParser.element} element The element to be checked\n\t\t\t\t * @param {Object} data The object that will be passed to the widget\n\t\t\t\t */\n\t\t\t\tupcast(element, data) {\n\t\t\t\t\tconst embedWidgetUpcastFn =\n\t\t\t\t\t\teditor.config.embedWidgetUpcastFn ||\n\t\t\t\t\t\tdefaultEmbedWidgetUpcastFn;\n\n\t\t\t\t\treturn embedWidgetUpcastFn(element, data);\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t// Add a listener to handle paste events and turn links into embed objects\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\teditor.on(\n\t\t\t\t\t'paste',\n\t\t\t\t\tevent => {\n\t\t\t\t\t\tconst link = event.data.dataValue;\n\n\t\t\t\t\t\tif (REGEX_HTTP.test(link)) {\n\t\t\t\t\t\t\tevent.stop();\n\n\t\t\t\t\t\t\teditor.execCommand('embedUrl', {\n\t\t\t\t\t\t\t\turl: event.data.dataValue,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t// Make sure we run before autolink's paste handler,\n\t\t\t\t\t// otherwise the link will be turned into an anchor and our\n\t\t\t\t\t// REGEX_HTTP test will fail.\n\t\t\t\t\tHIGH_PRIORITY\n\t\t\t\t);\n\t\t\t});\n\n\t\t\t// Add a listener to handle selection change events and properly detect editor\n\t\t\t// interactions on the widgets without messing with widget native selection\n\t\t\teditor.on('selectionChange', _event => {\n\t\t\t\tconst selection = editor.getSelection();\n\n\t\t\t\tif (selection) {\n\t\t\t\t\tconst element = selection.getSelectedElement();\n\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\tconst widgetElement = element.findOne(\n\t\t\t\t\t\t\t'[data-widget=\"ae_embed\"]'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (widgetElement) {\n\t\t\t\t\t\t\tconst region = element.getClientRect();\n\n\t\t\t\t\t\t\tconst scrollPosition = new CKEDITOR.dom.window(\n\t\t\t\t\t\t\t\twindow\n\t\t\t\t\t\t\t).getScrollPosition();\n\t\t\t\t\t\t\tregion.left -= scrollPosition.x;\n\t\t\t\t\t\t\tregion.top += scrollPosition.y;\n\n\t\t\t\t\t\t\tregion.direction = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\n\t\t\t\t\t\t\teditor.fire('editorInteraction', {\n\t\t\t\t\t\t\t\tnativeEvent: {},\n\t\t\t\t\t\t\t\tselectionData: {\n\t\t\t\t\t\t\t\t\telement: widgetElement,\n\t\t\t\t\t\t\t\t\tregion,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Add a filter to skip filtering widget elements\n\t\t\teditor.filter.addElementCallback(element => {\n\t\t\t\tif ('data-ae-embed-url' in element.attributes) {\n\t\t\t\t\treturn CKEDITOR.FILTER_SKIP_TREE;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * Priorities that can be used to control the order in which event handlers run.\n *\n * @see https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_event.html#method-on\n */\nexport const DEFAULT_PRIORITY = 10;\nexport const HIGH_PRIORITY = 5;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Resizer from './Resizer.es';\n\nif (!CKEDITOR.plugins.get('embedurl')) {\n\tconst REGEX_HTTP = /^https?/;\n\n\tCKEDITOR.DEFAULT_LFR_EMBED_WIDGET_TPL =\n\t\t'<div data-embed-url=\"{url}\" class=\"embed-responsive embed-responsive-16by9\">{content}<div class=\"embed-help-message\">{helpMessageIcon}<span> {helpMessage}</span></div></div><br>';\n\n\t/**\n\t * Enum for supported embed alignments\n\t * @type {Object}\n\t */\n\n\tconst EMBED_ALIGNMENT = {\n\t\tCENTER: 'center',\n\t\tLEFT: 'left',\n\t\tRIGHT: 'right',\n\t};\n\n\t/**\n\t * Enum values for supported embed alignments\n\t * @type {Array}\n\t */\n\n\tconst ALIGN_VALUES = [\n\t\tEMBED_ALIGNMENT.CENTER,\n\t\tEMBED_ALIGNMENT.LEFT,\n\t\tEMBED_ALIGNMENT.RIGHT,\n\t];\n\n\t/**\n\t * Necessary styles for the center alignment\n\t * @type {Array.<Object>}\n\t */\n\n\tconst CENTERED_EMBED_STYLE = [\n\t\t{\n\t\t\tname: 'display',\n\t\t\tvalue: 'block',\n\t\t},\n\t\t{\n\t\t\tname: 'margin-left',\n\t\t\tvalue: 'auto',\n\t\t},\n\t\t{\n\t\t\tname: 'margin-right',\n\t\t\tvalue: 'auto',\n\t\t},\n\t];\n\n\t/**\n\t * Retrieves the alignment value of an embed element.\n\t *\n\t * @param {CKEDITOR.dom.element} embed The embed element\n\t * @return {String} The alignment value\n\t */\n\n\tconst getEmbedAlignment = function(embed) {\n\t\tlet embedAlignment = embed.getStyle('float');\n\n\t\tif (\n\t\t\t!embedAlignment ||\n\t\t\tembedAlignment === 'inherit' ||\n\t\t\tembedAlignment === 'none'\n\t\t) {\n\t\t\tembedAlignment = embed.getAttribute('align');\n\t\t}\n\n\t\tif (!embedAlignment) {\n\t\t\tconst centeredEmbed = CENTERED_EMBED_STYLE.every(style => {\n\t\t\t\tlet styleCheck = embed.getStyle(style.name) === style.value;\n\n\t\t\t\tif (!styleCheck && style.vendorPrefixes) {\n\t\t\t\t\tstyleCheck = style.vendorPrefixes.some(\n\t\t\t\t\t\tvendorPrefix =>\n\t\t\t\t\t\t\tembed.getStyle(vendorPrefix + style.name) ===\n\t\t\t\t\t\t\tstyle.value\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn styleCheck;\n\t\t\t});\n\n\t\t\tembedAlignment = centeredEmbed ? EMBED_ALIGNMENT.CENTER : null;\n\t\t}\n\n\t\treturn embedAlignment;\n\t};\n\n\t/**\n\t * Removes the alignment value of an embed\n\t *\n\t * @param {CKEDITOR.dom.element} embed The embed element\n\t * @param {String} embedAlignment The embed alignment value to be removed\n\t */\n\n\tconst removeEmbedAlignment = function(embed, embedAlignment) {\n\t\tif (\n\t\t\tembedAlignment === EMBED_ALIGNMENT.LEFT ||\n\t\t\tembedAlignment === EMBED_ALIGNMENT.RIGHT\n\t\t) {\n\t\t\tembed.removeStyle('float');\n\n\t\t\tif (embedAlignment === getEmbedAlignment(embed)) {\n\t\t\t\tembed.removeAttribute('align');\n\t\t\t}\n\t\t} else if (embedAlignment === EMBED_ALIGNMENT.CENTER) {\n\t\t\tCENTERED_EMBED_STYLE.forEach(style => {\n\t\t\t\tembed.removeStyle(style.name);\n\n\t\t\t\tif (style.vendorPrefixes) {\n\t\t\t\t\tstyle.vendorPrefixes.forEach(vendorPrefix =>\n\t\t\t\t\t\tembed.removeStyle(vendorPrefix + style.name)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Sets the alignment value of an embed\n\t *\n\t * @param {CKEDITOR.dom.element} embed The embed element\n\t * @param {String} embedAlignment The embed alignment value to be set\n\t */\n\n\tconst setEmbedAlignment = function(embed, embedAlignment) {\n\t\tremoveEmbedAlignment(embed, getEmbedAlignment(embed));\n\n\t\tif (\n\t\t\tembedAlignment === EMBED_ALIGNMENT.LEFT ||\n\t\t\tembedAlignment === EMBED_ALIGNMENT.RIGHT\n\t\t) {\n\t\t\tembed.setStyle('float', embedAlignment);\n\t\t} else if (embedAlignment === EMBED_ALIGNMENT.CENTER) {\n\t\t\tCENTERED_EMBED_STYLE.forEach(style => {\n\t\t\t\tembed.setStyle(style.name, style.value);\n\n\t\t\t\tif (style.vendorPrefixes) {\n\t\t\t\t\tstyle.vendorPrefixes.forEach(vendorPrefix =>\n\t\t\t\t\t\tembed.setStyle(vendorPrefix + style.name, style.value)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\tconst getSelectedElement = function(editor) {\n\t\tconst result = {\n\t\t\talignment: null,\n\t\t\telement: null,\n\t\t};\n\n\t\tconst selection = editor.getSelection();\n\n\t\tif (selection) {\n\t\t\tconst selectedElement = selection.getSelectedElement();\n\n\t\t\tif (\n\t\t\t\tselectedElement &&\n\t\t\t\tselectedElement.getAttribute('data-cke-widget-wrapper')\n\t\t\t) {\n\t\t\t\tresult.alignment = getEmbedAlignment(selectedElement);\n\t\t\t\tresult.element = selectedElement;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tconst resizeElement = function(el, width, height) {\n\t\tconst wrapperElement = el.parentElement;\n\n\t\tif (wrapperElement && width > 0 && height > 0) {\n\t\t\tconst rect = wrapperElement.getBoundingClientRect();\n\n\t\t\tconst pwidth =\n\t\t\t\twidth >= rect.width\n\t\t\t\t\t? 100\n\t\t\t\t\t: Math.floor((width / rect.width) * 100);\n\t\t\tconst style = `width:${pwidth}%;`;\n\n\t\t\twrapperElement.setAttribute('style', style);\n\n\t\t\tconst widgetElement = wrapperElement.querySelector(\n\t\t\t\t'[data-widget=\"embedurl\"]'\n\t\t\t);\n\n\t\t\tif (widgetElement) {\n\t\t\t\tconst styles =\n\t\t\t\t\tJSON.parse(widgetElement.getAttribute('data-styles')) || {};\n\n\t\t\t\tstyles.width = `${width}px`;\n\t\t\t\tstyles.height = `${height}px`;\n\n\t\t\t\twidgetElement.setAttribute(\n\t\t\t\t\t'data-styles',\n\t\t\t\t\tJSON.stringify(styles)\n\t\t\t\t);\n\n\t\t\t\tconst iframeElement = widgetElement.querySelector('iframe');\n\n\t\t\t\tif (iframeElement) {\n\t\t\t\t\tiframeElement.setAttribute('width', width);\n\t\t\t\t\tiframeElement.setAttribute('height', height);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconst selectWidget = function(editor) {\n\t\tsetTimeout(() => {\n\t\t\tconst selection = editor.getSelection();\n\n\t\t\tif (selection) {\n\t\t\t\tconst wrapperElement = selection.root.find(\n\t\t\t\t\t'[data-cke-widget-wrapper]'\n\t\t\t\t);\n\n\t\t\t\tif (wrapperElement) {\n\t\t\t\t\tconst elementList = wrapperElement.$;\n\t\t\t\t\tif (elementList.length > 0) {\n\t\t\t\t\t\tconst lastElement = new CKEDITOR.dom.element(\n\t\t\t\t\t\t\telementList[elementList.length - 1]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst imageElement = lastElement.findOne('img');\n\t\t\t\t\t\tconst widgetElement = lastElement.findOne(\n\t\t\t\t\t\t\t'[data-widget=\"embedurl\"]'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (imageElement && widgetElement) {\n\t\t\t\t\t\t\tconst range = editor.createRange();\n\n\t\t\t\t\t\t\trange.setStart(widgetElement, 0);\n\t\t\t\t\t\t\trange.setEnd(imageElement, 1);\n\n\t\t\t\t\t\t\tselection.selectRanges([range]);\n\t\t\t\t\t\t\tselection.selectElement(lastElement);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, 0);\n\t};\n\n\tlet currentAlignment = null;\n\tlet currentElement = null;\n\tlet resizer = null;\n\n\t/**\n\t * CKEditor plugin which adds the infrastructure to embed urls as media objects\n\t *\n\t * This plugin adds an `embedUrl` command that can be used to easily embed a URL and transform it\n\t * to an embedded content.\n\t *\n\t * @class CKEDITOR.plugins.embedurl\n\t */\n\n\tCKEDITOR.plugins.add('embedurl', {\n\t\trequires: 'widget',\n\n\t\tinit: editor => {\n\t\t\tconst LFR_EMBED_WIDGET_TPL = new CKEDITOR.template(\n\t\t\t\teditor.config.embedWidgetTpl ||\n\t\t\t\t\tCKEDITOR.DEFAULT_LFR_EMBED_WIDGET_TPL\n\t\t\t);\n\n\t\t\tlet providers = editor.config.embedProviders || [];\n\n\t\t\tproviders = providers.map(provider => {\n\t\t\t\treturn {\n\t\t\t\t\tid: provider.id,\n\t\t\t\t\ttpl: new CKEDITOR.template(\n\t\t\t\t\t\t`<div data-embed-id=\"{embedId}\">${provider.tpl}</div>`\n\t\t\t\t\t),\n\t\t\t\t\ttype: provider.type,\n\t\t\t\t\turlSchemes: provider.urlSchemes.map(\n\t\t\t\t\t\tscheme => new RegExp(scheme)\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tconst generateEmbedContent = (url, content) => {\n\t\t\t\treturn LFR_EMBED_WIDGET_TPL.output({\n\t\t\t\t\tcontent,\n\t\t\t\t\thelpMessage: AlloyEditor.Strings.videoPlaybackDisabled,\n\t\t\t\t\thelpMessageIcon: Liferay.Util.getLexiconIconTpl(\n\t\t\t\t\t\t'info-circle'\n\t\t\t\t\t),\n\t\t\t\t\turl,\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst defaultEmbedWidgetUpcastFn = (element, data) => {\n\t\t\t\tlet upcastWidget = false;\n\n\t\t\t\tif (\n\t\t\t\t\telement.name === 'div' &&\n\t\t\t\t\telement.attributes['data-embed-url']\n\t\t\t\t) {\n\t\t\t\t\tdata.url = element.attributes['data-embed-url'];\n\n\t\t\t\t\tupcastWidget = true;\n\t\t\t\t} else if (\n\t\t\t\t\telement.name === 'div' &&\n\t\t\t\t\telement.attributes['data-embed-id']\n\t\t\t\t) {\n\t\t\t\t\tconst iframe = element.children[0];\n\n\t\t\t\t\tdata.url = iframe.attributes.src;\n\n\t\t\t\t\tdelete element.attributes.style;\n\n\t\t\t\t\tconst embedContent = generateEmbedContent(\n\t\t\t\t\t\tdata.url,\n\t\t\t\t\t\telement.getOuterHtml()\n\t\t\t\t\t);\n\n\t\t\t\t\tconst widgetFragment = new CKEDITOR.htmlParser.fragment.fromHtml(\n\t\t\t\t\t\tembedContent\n\t\t\t\t\t);\n\n\t\t\t\t\tupcastWidget = widgetFragment.children[0];\n\n\t\t\t\t\tupcastWidget.attributes['data-styles'] =\n\t\t\t\t\t\telement.attributes['data-styles'];\n\t\t\t\t\tupcastWidget.removeClass('embed-responsive');\n\t\t\t\t\tupcastWidget.removeClass('embed-responsive-16by9');\n\n\t\t\t\t\telement.replaceWith(upcastWidget);\n\t\t\t\t}\n\n\t\t\t\treturn upcastWidget;\n\t\t\t};\n\n\t\t\tconst showError = errorMsg => {\n\t\t\t\teditor.fire('error', errorMsg);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\teditor.getSelection().removeAllRanges();\n\n\t\t\t\t\teditor.focus();\n\n\t\t\t\t\tresizer.hide();\n\t\t\t\t}, 0);\n\t\t\t};\n\n\t\t\teditor.addCommand('embedUrl', {\n\t\t\t\texec: (editor, data) => {\n\t\t\t\t\tconst type = data.type;\n\t\t\t\t\tconst url = data.url;\n\t\t\t\t\tlet content;\n\n\t\t\t\t\tif (REGEX_HTTP.test(url)) {\n\t\t\t\t\t\tconst validProvider = providers\n\t\t\t\t\t\t\t.filter(provider => {\n\t\t\t\t\t\t\t\treturn type ? provider.type === type : true;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.some(provider => {\n\t\t\t\t\t\t\t\tconst scheme = provider.urlSchemes.find(\n\t\t\t\t\t\t\t\t\tscheme => scheme.test(url)\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (scheme) {\n\t\t\t\t\t\t\t\t\tconst embedId = scheme.exec(url)[1];\n\n\t\t\t\t\t\t\t\t\tcontent = provider.tpl.output({\n\t\t\t\t\t\t\t\t\t\tembedId,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn scheme;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (validProvider) {\n\t\t\t\t\t\t\teditor._selectEmbedWidget = url;\n\n\t\t\t\t\t\t\tconst embedContent = generateEmbedContent(\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\teditor.insertHtml(embedContent);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshowError(AlloyEditor.Strings.platformNotSupported);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tshowError(AlloyEditor.Strings.enterValidUrl);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\n\t\t\teditor.widgets.add('embedurl', {\n\t\t\t\tdraggable: false,\n\t\t\t\tmask: true,\n\t\t\t\trequiredContent: 'div[data-embed-url]',\n\n\t\t\t\tdata(event) {\n\t\t\t\t\tconst instance = this;\n\n\t\t\t\t\t// Sync dimensions and alignment with editor wrapper\n\n\t\t\t\t\tlet styles = null;\n\n\t\t\t\t\tconst stylesJSON = instance.element.getAttribute(\n\t\t\t\t\t\t'data-styles'\n\t\t\t\t\t);\n\n\t\t\t\t\tif (stylesJSON) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tstyles = JSON.parse(stylesJSON);\n\t\t\t\t\t\t} catch (_error) {\n\t\t\t\t\t\t\tstyles = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!styles) {\n\t\t\t\t\t\tconst iframe = instance.wrapper.findOne('iframe');\n\n\t\t\t\t\t\tconst bounds = instance.wrapper.$.getBoundingClientRect();\n\t\t\t\t\t\tconst width = iframe.getAttribute('width');\n\n\t\t\t\t\t\tconst pwidth =\n\t\t\t\t\t\t\twidth >= bounds.width\n\t\t\t\t\t\t\t\t? 100\n\t\t\t\t\t\t\t\t: Math.round((width / bounds.width) * 100);\n\n\t\t\t\t\t\tstyles = {\n\t\t\t\t\t\t\twidth: `${pwidth}%`,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tinstance.wrapper.setAttribute(\n\t\t\t\t\t\t'style',\n\t\t\t\t\t\tCKEDITOR.tools.writeCssText(styles)\n\t\t\t\t\t);\n\n\t\t\t\t\tif (editor._selectEmbedWidget === event.data.url) {\n\t\t\t\t\t\tselectWidget(editor);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tdowncast(widget) {\n\t\t\t\t\tconst embedContent = widget.children[0];\n\n\t\t\t\t\tembedContent.attributes.class =\n\t\t\t\t\t\t'embed-responsive embed-responsive-16by9';\n\n\t\t\t\t\tembedContent.attributes['data-styles'] = JSON.stringify(\n\t\t\t\t\t\tCKEDITOR.tools.parseCssText(\n\t\t\t\t\t\t\twidget.parent.attributes.style\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\n\t\t\t\t\tembedContent.attributes.style =\n\t\t\t\t\t\twidget.parent.attributes.style;\n\n\t\t\t\t\treturn embedContent;\n\t\t\t\t},\n\n\t\t\t\tupcast(element, data) {\n\t\t\t\t\tconst embedWidgetUpcastFn =\n\t\t\t\t\t\teditor.config.embedWidgetUpcastFn ||\n\t\t\t\t\t\tdefaultEmbedWidgetUpcastFn;\n\n\t\t\t\t\treturn embedWidgetUpcastFn(element, data);\n\t\t\t\t},\n\t\t\t});\n\n\t\t\twindow.addEventListener(\n\t\t\t\t'resize',\n\t\t\t\t() => {\n\t\t\t\t\tresizer.hide();\n\t\t\t\t\tselectWidget(editor);\n\t\t\t\t},\n\t\t\t\tfalse\n\t\t\t);\n\n\t\t\teditor.on('selectionChange', _event => {\n\t\t\t\tconst selection = editor.getSelection();\n\n\t\t\t\tif (selection) {\n\t\t\t\t\tconst element = selection.getSelectedElement();\n\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\tconst widgetElement = element.findOne(\n\t\t\t\t\t\t\t'[data-widget=\"embedurl\"]'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (widgetElement) {\n\t\t\t\t\t\t\tconst scrollPosition = new CKEDITOR.dom.window(\n\t\t\t\t\t\t\t\twindow\n\t\t\t\t\t\t\t).getScrollPosition();\n\n\t\t\t\t\t\t\tconst region = element.getClientRect();\n\n\t\t\t\t\t\t\tregion.direction = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\t\t\t\t\t\t\tregion.left -= scrollPosition.x;\n\t\t\t\t\t\t\tregion.top += scrollPosition.y;\n\n\t\t\t\t\t\t\teditor.fire('editorInteraction', {\n\t\t\t\t\t\t\t\tnativeEvent: {},\n\t\t\t\t\t\t\t\tselectionData: {\n\t\t\t\t\t\t\t\t\telement: widgetElement,\n\t\t\t\t\t\t\t\t\tregion,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst imageElement = element.findOne(\n\t\t\t\t\t\t\t'img.cke_widget_mask'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (imageElement) {\n\t\t\t\t\t\t\tresizer.show(imageElement.$);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresizer.hide();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\teditor.on('destroy', () => {\n\t\t\t\tconst resizeElement = document.getElementById('ckimgrsz');\n\n\t\t\t\tif (resizeElement) {\n\t\t\t\t\tresizeElement.remove();\n\t\t\t\t}\n\n\t\t\t\tdocument.removeEventListener('mousedown', mouseDownListener);\n\t\t\t});\n\n\t\t\teditor.on('blur', () => {\n\t\t\t\tresizer.hide();\n\t\t\t});\n\n\t\t\teditor.filter.addElementCallback(element => {\n\t\t\t\tif ('data-embed-url' in element.attributes) {\n\t\t\t\t\treturn CKEDITOR.FILTER_SKIP_TREE;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst mouseDownListener = event => {\n\t\t\t\tconst result = getSelectedElement(editor);\n\n\t\t\t\tcurrentAlignment = result.alignment;\n\t\t\t\tcurrentElement = result.element;\n\n\t\t\t\tif (resizer.isHandle(event.target)) {\n\t\t\t\t\tresizer.initDrag(event);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tresizer = new Resizer(editor, {\n\t\t\t\tonComplete(element, width, height) {\n\t\t\t\t\tresizeElement(element, width, height);\n\n\t\t\t\t\tif (currentAlignment && currentElement) {\n\t\t\t\t\t\tsetEmbedAlignment(currentElement, currentAlignment);\n\t\t\t\t\t}\n\t\t\t\t\tselectWidget(editor);\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tdocument.addEventListener('mousedown', mouseDownListener, false);\n\t\t},\n\n\t\tafterInit: editor => {\n\t\t\tALIGN_VALUES.forEach(alignValue => {\n\t\t\t\tconst command = editor.getCommand('justify' + alignValue);\n\n\t\t\t\tif (command) {\n\t\t\t\t\tcommand.on('exec', event => {\n\t\t\t\t\t\tconst selectedElement = editor\n\t\t\t\t\t\t\t.getSelection()\n\t\t\t\t\t\t\t.getSelectedElement();\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tselectedElement &&\n\t\t\t\t\t\t\tselectedElement.getAttribute(\n\t\t\t\t\t\t\t\t'data-cke-widget-wrapper'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst selectedEmbed = selectedElement.findOne(\n\t\t\t\t\t\t\t\t'[data-widget=\"embedurl\"] [data-embed-id]'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (selectedEmbed) {\n\t\t\t\t\t\t\t\tconst embedAlignment = getEmbedAlignment(\n\t\t\t\t\t\t\t\t\tselectedElement\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (embedAlignment === alignValue) {\n\t\t\t\t\t\t\t\t\tremoveEmbedAlignment(\n\t\t\t\t\t\t\t\t\t\tselectedElement,\n\t\t\t\t\t\t\t\t\t\talignValue\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetEmbedAlignment(\n\t\t\t\t\t\t\t\t\t\tselectedElement,\n\t\t\t\t\t\t\t\t\t\talignValue\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcurrentElement = selectedElement;\n\t\t\t\t\t\t\t\tcurrentAlignment = getEmbedAlignment(\n\t\t\t\t\t\t\t\t\tselectedElement\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tconst imageElement = selectedElement.findOne(\n\t\t\t\t\t\t\t\t\t'img'\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (imageElement) {\n\t\t\t\t\t\t\t\t\tresizer.show(imageElement.$);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tevent.cancel();\n\n\t\t\t\t\t\t\t\tconst elementPath = new CKEDITOR.dom.elementPath(\n\t\t\t\t\t\t\t\t\tselectedElement\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tALIGN_VALUES.forEach(alignValue => {\n\t\t\t\t\t\t\t\t\tconst command = editor.getCommand(\n\t\t\t\t\t\t\t\t\t\t'justify' + alignValue\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tif (command) {\n\t\t\t\t\t\t\t\t\t\tcommand.refresh(editor, elementPath);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tcommand.on('refresh', event => {\n\t\t\t\t\t\tconst lastElement = event.data.path.lastElement;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tlastElement &&\n\t\t\t\t\t\t\tlastElement.getAttribute(\n\t\t\t\t\t\t\t\t'data-cke-widget-wrapper'\n\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\tlastElement.findOne('[data-widget] [data-embed-id]')\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst embedAlignment = getEmbedAlignment(\n\t\t\t\t\t\t\t\tlastElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tevent.sender.setState(\n\t\t\t\t\t\t\t\tembedAlignment === alignValue\n\t\t\t\t\t\t\t\t\t? CKEDITOR.TRISTATE_ON\n\t\t\t\t\t\t\t\t\t: CKEDITOR.TRISTATE_OFF\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tevent.cancel();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t});\n}\n\nexport default CKEDITOR.plugins.get('embedurl');\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport DragEvent from './DragEvent.es';\n\nconst IMAGE_HANDLES = ['tl', 'tr', 'bl', 'br'];\n\nconst POSITION_ELEMENT_FN = {\n\tbl(handle, left, top, box) {\n\t\tpositionElement(handle, -3 + left, box.height - 4 + top);\n\t},\n\tbr(handle, left, top, box) {\n\t\tpositionElement(handle, box.width - 4 + left, box.height - 4 + top);\n\t},\n\trm(handle, left, top, box) {\n\t\tpositionElement(\n\t\t\thandle,\n\t\t\tbox.width - 4 + left,\n\t\t\tMath.round(box.height / 2) - 3 + top\n\t\t);\n\t},\n\ttl(handle, left, top, _box) {\n\t\tpositionElement(handle, left - 3, top - 3);\n\t},\n\ttr(handle, left, top, box) {\n\t\tpositionElement(handle, box.width - 4 + left, -3 + top);\n\t},\n};\n\nconst positionElement = (el, left, top) => {\n\tel.style.left = `${left}px`;\n\tel.style.top = `${top}px`;\n};\n\nconst getBoundingBox = (window, el) => {\n\tconst rect = el.getBoundingClientRect();\n\n\treturn {\n\t\theight: rect.height,\n\t\tleft: rect.left + window.pageXOffset,\n\t\ttop: rect.top + window.pageYOffset,\n\t\twidth: rect.width,\n\t};\n};\n\nclass Resizer {\n\tconstructor(editor, cfg = {}) {\n\t\tthis.cfg = cfg;\n\t\tthis.editor = editor;\n\n\t\tthis.document = editor.document ? editor.document.$ : document;\n\t\tthis.window = editor.window ? editor.window.$ : window;\n\n\t\tthis.box = null;\n\t\tthis.container = null;\n\t\tthis.handles = {};\n\t\tthis.preview = null;\n\t\tthis.previewBox = null;\n\t\tthis.result = null;\n\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\tthis.container = this.document.createElement('div');\n\t\tthis.container.id = 'ckimgrsz';\n\n\t\tthis.preview = this.document.createElement('span');\n\n\t\tthis.container.appendChild(this.preview);\n\n\t\tthis.handles = {};\n\n\t\tIMAGE_HANDLES.forEach(handleName => {\n\t\t\tthis.handles[handleName] = this.createHandle(handleName);\n\t\t});\n\n\t\tconst keys = Object.keys(this.handles);\n\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tthis.container.appendChild(this.handles[keys[i]]);\n\t\t}\n\t}\n\n\tcreateHandle(name) {\n\t\tconst el = this.document.createElement('i');\n\n\t\tel.classList.add(name);\n\n\t\treturn el;\n\t}\n\n\tisHandle(el) {\n\t\tconst keys = Object.keys(this.handles);\n\n\t\tlet result = false;\n\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tif (this.handles[keys[i]] === el) {\n\t\t\t\tresult = true;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tshow(el) {\n\t\tconst uiNode = this.editor.config.uiNode || document.body;\n\n\t\tthis.el = el;\n\n\t\tthis.box = getBoundingBox(this.window, this.el);\n\n\t\tpositionElement(\n\t\t\tthis.container,\n\t\t\tthis.box.left,\n\t\t\tthis.box.top + uiNode.scrollTop\n\t\t);\n\n\t\tuiNode.appendChild(this.container);\n\n\t\tthis.el.classList.add('ckimgrsz');\n\n\t\tthis.showHandles();\n\t}\n\n\thide() {\n\t\tconst elements = this.document.getElementsByClassName('ckimgrsz');\n\n\t\tfor (let i = 0; i < elements.length; i++) {\n\t\t\telements[i].classList.remove('ckimgrsz');\n\t\t}\n\n\t\tthis.hideHandles();\n\n\t\tif (this.container.parentNode) {\n\t\t\tthis.container.parentNode.removeChild(this.container);\n\t\t}\n\t}\n\n\tinitDrag(event) {\n\t\tif (event.button !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst drag = new DragEvent(this.window, this.document);\n\n\t\tdrag.onStart = () => {\n\t\t\tthis.showPreview();\n\n\t\t\tthis.isDragging = true;\n\n\t\t\tthis.editor.getSelection().lock();\n\t\t};\n\n\t\tdrag.onDrag = () => {\n\t\t\tthis.calculateSize(drag);\n\n\t\t\tconst editorBounds = this.editor.element.$.getBoundingClientRect();\n\n\t\t\tif (this.previewBox.width >= editorBounds.width) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.updatePreview();\n\n\t\t\tconst box = this.previewBox;\n\n\t\t\tthis.updateHandles(box, box.left, box.top);\n\t\t};\n\n\t\tdrag.onRelease = () => {\n\t\t\tthis.hidePreview();\n\n\t\t\tthis.isDragging = false;\n\n\t\t\tthis.hide();\n\n\t\t\tthis.editor.getSelection().unlock();\n\n\t\t\tthis.editor.fire('saveSnapshot');\n\t\t};\n\n\t\tdrag.onComplete = () => {\n\t\t\tthis.resizeComplete();\n\n\t\t\tthis.editor.fire('saveSnapshot');\n\t\t};\n\n\t\tdrag.start(event);\n\t}\n\n\tupdateHandles(box, left = 0, top = 0) {\n\t\tconst keys = Object.keys(this.handles);\n\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tPOSITION_ELEMENT_FN[keys[i]](this.handles[keys[i]], left, top, box);\n\t\t}\n\t}\n\n\tshowHandles() {\n\t\tthis.updateHandles(this.box);\n\n\t\tconst keys = Object.keys(this.handles);\n\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tthis.handles[keys[i]].style.display = 'block';\n\t\t}\n\t}\n\n\thideHandles() {\n\t\tconst keys = Object.keys(this.handles);\n\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tthis.handles[keys[i]].style.display = 'none';\n\t\t}\n\t}\n\n\tshowPreview() {\n\t\tthis.calculateSize();\n\n\t\tthis.updatePreview();\n\n\t\tthis.preview.style.display = 'block';\n\t}\n\n\tupdatePreview() {\n\t\tpositionElement(\n\t\t\tthis.preview,\n\t\t\tthis.previewBox.left,\n\t\t\tthis.previewBox.top\n\t\t);\n\n\t\tthis.preview.style.height = `${this.previewBox.height}px`;\n\t\tthis.preview.style.width = `${this.previewBox.width}px`;\n\t}\n\n\thidePreview() {\n\t\tconst box = getBoundingBox(this.window, this.preview);\n\n\t\tthis.result = {\n\t\t\theight: box.height,\n\t\t\twidth: box.width,\n\t\t};\n\n\t\tthis.preview.style.display = 'none';\n\t}\n\n\tcalculateSize(data) {\n\t\tthis.previewBox = {\n\t\t\theight: this.box.height,\n\t\t\tleft: 0,\n\t\t\ttop: 0,\n\t\t\twidth: this.box.width,\n\t\t};\n\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst className = data.target.className;\n\n\t\tif (className.indexOf('r') >= 0) {\n\t\t\tthis.previewBox.width = Math.max(32, this.box.width + data.delta.x);\n\t\t}\n\n\t\tif (className.indexOf('b') >= 0) {\n\t\t\tthis.previewBox.height = Math.max(\n\t\t\t\t32,\n\t\t\t\tthis.box.height + data.delta.y\n\t\t\t);\n\t\t}\n\n\t\tif (className.indexOf('l') >= 0) {\n\t\t\tthis.previewBox.width = Math.max(32, this.box.width - data.delta.x);\n\t\t}\n\n\t\tif (className.indexOf('t') >= 0) {\n\t\t\tthis.previewBox.height = Math.max(\n\t\t\t\t32,\n\t\t\t\tthis.box.height - data.delta.y\n\t\t\t);\n\t\t}\n\n\t\tif (className.indexOf('m') < 0 && !data.keys.shift) {\n\t\t\tconst ratio = this.box.width / this.box.height;\n\n\t\t\tif (this.previewBox.width / this.previewBox.height > ratio) {\n\t\t\t\tthis.previewBox.height = Math.round(\n\t\t\t\t\tthis.previewBox.width / ratio\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.previewBox.width = Math.round(\n\t\t\t\t\tthis.previewBox.height * ratio\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (className.indexOf('l') >= 0) {\n\t\t\tthis.previewBox.left = this.box.width - this.previewBox.width;\n\t\t}\n\n\t\tif (className.indexOf('t') >= 0) {\n\t\t\tthis.previewBox.top = this.box.height - this.previewBox.height;\n\t\t}\n\t}\n\n\tresizeComplete() {\n\t\tthis.cfg.onComplete(this.el, this.result.width, this.result.height);\n\t}\n}\n\nexport {Resizer};\nexport default Resizer;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nclass DragEvent {\n\tconstructor(window, document) {\n\t\tthis.document = document;\n\t\tthis.window = window;\n\n\t\tthis.events = {\n\t\t\tkeydown: this.keydown.bind(this),\n\t\t\tmousemove: this.mousemove.bind(this),\n\t\t\tmouseup: this.mouseup.bind(this),\n\t\t};\n\t}\n\n\tstart(event) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tthis.target = event.target;\n\n\t\tthis.className = this.target.className;\n\n\t\tthis.startPos = {\n\t\t\tx: event.clientX,\n\t\t\ty: event.clientY,\n\t\t};\n\n\t\tthis.update(event);\n\n\t\tthis.document.addEventListener('keydown', this.events.keydown, false);\n\t\tthis.document.addEventListener(\n\t\t\t'mousemove',\n\t\t\tthis.events.mousemove,\n\t\t\tfalse\n\t\t);\n\t\tthis.document.addEventListener('mouseup', this.events.mouseup, false);\n\n\t\tthis.document.body.classList.add(`dragging-${this.className}`);\n\n\t\tif (typeof this.onStart === 'function') {\n\t\t\tthis.onStart();\n\t\t}\n\t}\n\n\tupdate(event) {\n\t\tthis.currentPos = {\n\t\t\tx: event.clientX,\n\t\t\ty: event.clientY,\n\t\t};\n\n\t\tthis.delta = {\n\t\t\tx: event.clientX - this.startPos.x,\n\t\t\ty: event.clientY - this.startPos.y,\n\t\t};\n\n\t\tthis.keys = {\n\t\t\talt: event.altKey,\n\t\t\tctrl: event.ctrlKey,\n\t\t\tshift: event.shiftKey,\n\t\t};\n\t}\n\n\tmousemove(event) {\n\t\tthis.update(event);\n\n\t\tif (typeof this.onDrag === 'function') {\n\t\t\tthis.onDrag();\n\t\t}\n\n\t\tif (event.which === 0) {\n\t\t\tthis.mouseup(event);\n\t\t}\n\t}\n\n\tkeydown(event) {\n\t\tif (event.keyCode === 27) {\n\t\t\tthis.release();\n\t\t}\n\t}\n\n\tmouseup(event) {\n\t\tthis.update(event);\n\n\t\tthis.release();\n\n\t\tif (typeof this.onComplete === 'function') {\n\t\t\tthis.onComplete();\n\t\t}\n\t}\n\n\trelease() {\n\t\tthis.document.body.classList.remove(`dragging-${this.className}`);\n\n\t\tthis.document.removeEventListener(\n\t\t\t'keydown',\n\t\t\tthis.events.keydown,\n\t\t\tfalse\n\t\t);\n\t\tthis.document.removeEventListener(\n\t\t\t'mousemove',\n\t\t\tthis.events.mousemove,\n\t\t\tfalse\n\t\t);\n\t\tthis.document.removeEventListener(\n\t\t\t'mouseup',\n\t\t\tthis.events.mouseup,\n\t\t\tfalse\n\t\t);\n\n\t\tif (typeof this.onRelease === 'function') {\n\t\t\tthis.onRelease();\n\t\t}\n\t}\n}\n\nexport {DragEvent};\nexport default DragEvent;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport SelectionTest from '../selections/selection-test';\n\nif (!CKEDITOR.plugins.get('ae_imagealignment')) {\n\t/**\n\t * Enum for supported image alignments\n\t * @type {Object}\n\t */\n\tconst IMAGE_ALIGNMENT = {\n\t\tCENTER: 'center',\n\t\tLEFT: 'left',\n\t\tRIGHT: 'right',\n\t};\n\n\t/**\n\t * Enum values for supported image alignments\n\t * @type {Array}\n\t */\n\tconst ALIGN_VALUES = [\n\t\tIMAGE_ALIGNMENT.LEFT,\n\t\tIMAGE_ALIGNMENT.RIGHT,\n\t\tIMAGE_ALIGNMENT.CENTER,\n\t];\n\n\t/**\n\t * Necessary styles for the left|center|right alignment\n\t * @type {Array.<Object>}\n\t */\n\tconst IMAGE_STYLE_ALIGNMENT = {\n\t\t[IMAGE_ALIGNMENT.LEFT]: [\n\t\t\t{\n\t\t\t\tname: 'display',\n\t\t\t\tvalue: 'inline-block',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'float',\n\t\t\t\tvalue: 'left',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'margin-right',\n\t\t\t\tvalue: '1.2rem',\n\t\t\t},\n\t\t],\n\t\t[IMAGE_ALIGNMENT.CENTER]: [\n\t\t\t{\n\t\t\t\tname: 'display',\n\t\t\t\tvalue: 'block',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'margin-left',\n\t\t\t\tvalue: 'auto',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'margin-right',\n\t\t\t\tvalue: 'auto',\n\t\t\t},\n\t\t],\n\t\t[IMAGE_ALIGNMENT.RIGHT]: [\n\t\t\t{\n\t\t\t\tname: 'display',\n\t\t\t\tvalue: 'inline-block',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'float',\n\t\t\t\tvalue: 'right',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'margin-left',\n\t\t\t\tvalue: '1.2rem',\n\t\t\t},\n\t\t],\n\t};\n\n\t/**\n\t * Retrieves the alignment value of an image.\n\t *\n\t * @param {CKEDITOR.dom.element} image The image element\n\t * @return {String} The alignment value\n\t */\n\tconst getImageAlignment = function(image) {\n\t\tlet imageAlignment = image.getStyle('float');\n\n\t\tif (\n\t\t\t!imageAlignment ||\n\t\t\timageAlignment === 'inherit' ||\n\t\t\timageAlignment === 'none'\n\t\t) {\n\t\t\timageAlignment = image.getAttribute('align');\n\t\t}\n\n\t\tif (!imageAlignment) {\n\t\t\tlet centeredImage = IMAGE_STYLE_ALIGNMENT[\n\t\t\t\tIMAGE_ALIGNMENT.CENTER\n\t\t\t].every(style => {\n\t\t\t\tlet styleCheck = image.getStyle(style.name) === style.value;\n\n\t\t\t\tif (!styleCheck && style.vendorPrefixes) {\n\t\t\t\t\tstyleCheck = style.vendorPrefixes.some(vendorPrefix => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\timage.getStyle(vendorPrefix + style.name) ===\n\t\t\t\t\t\t\tstyle.value\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn styleCheck;\n\t\t\t});\n\n\t\t\tif (!imageAlignment) {\n\t\t\t\tconst imageContainer = image.$.parentNode;\n\n\t\t\t\tif (imageContainer.style.textAlign == IMAGE_ALIGNMENT.CENTER) {\n\t\t\t\t\tIMAGE_STYLE_ALIGNMENT[IMAGE_ALIGNMENT.CENTER].forEach(\n\t\t\t\t\t\tstyle => {\n\t\t\t\t\t\t\timage.setStyle(style.name, style.value);\n\n\t\t\t\t\t\t\tif (style.vendorPrefixes) {\n\t\t\t\t\t\t\t\tstyle.vendorPrefixes.forEach(vendorPrefix => {\n\t\t\t\t\t\t\t\t\timage.setStyle(\n\t\t\t\t\t\t\t\t\t\tvendorPrefix + style.name,\n\t\t\t\t\t\t\t\t\t\tstyle.value\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tcenteredImage = true;\n\t\t\t\t\timageContainer.style.textAlign = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\timageAlignment = centeredImage ? IMAGE_ALIGNMENT.CENTER : null;\n\t\t}\n\n\t\tif (!CKEDITOR.env.edge && CKEDITOR.env.ie) {\n\t\t\tconst p = image.findOne('p');\n\t\t\tif (p) {\n\t\t\t\timageAlignment = p.getStyle('text-align');\n\t\t\t}\n\t\t}\n\n\t\treturn imageAlignment;\n\t};\n\n\t/**\n\t * Removes the alignment value of an image\n\t *\n\t * @param {CKEDITOR.dom.element} image The image element\n\t * @param {String} imageAlignment The image alignment value to be removed\n\t */\n\tconst removeImageAlignment = function(image, imageAlignment) {\n\t\tif (\n\t\t\timageAlignment === IMAGE_ALIGNMENT.LEFT ||\n\t\t\timageAlignment === IMAGE_ALIGNMENT.RIGHT\n\t\t) {\n\t\t\tif (imageAlignment === getImageAlignment(image)) {\n\t\t\t\timage.removeAttribute('align');\n\t\t\t}\n\t\t} else if (imageAlignment === IMAGE_ALIGNMENT.CENTER) {\n\t\t\tconst imageContainer = image.$.parentNode;\n\n\t\t\tif (imageContainer.style.textAlign == IMAGE_ALIGNMENT.CENTER) {\n\t\t\t\timageContainer.style.textAlign = '';\n\t\t\t}\n\t\t}\n\n\t\tconst styles = IMAGE_STYLE_ALIGNMENT[imageAlignment];\n\n\t\tif (styles) {\n\t\t\tstyles.forEach(style => {\n\t\t\t\timage.removeStyle(style.name);\n\n\t\t\t\tif (style.vendorPrefixes) {\n\t\t\t\t\tstyle.vendorPrefixes.forEach(vendorPrefix => {\n\t\t\t\t\t\timage.removeStyle(vendorPrefix + style.name);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Sets the alignment value of an image\n\t *\n\t * @param {CKEDITOR.dom.element} image The image element\n\t * @param {String} imageAlignment The image alignment value to be set\n\t */\n\tconst setImageAlignment = function(image, imageAlignment) {\n\t\tremoveImageAlignment(image, getImageAlignment(image));\n\n\t\tconst styles = IMAGE_STYLE_ALIGNMENT[imageAlignment];\n\n\t\tif (styles) {\n\t\t\tstyles.forEach(style => {\n\t\t\t\timage.setStyle(style.name, style.value);\n\n\t\t\t\tif (style.vendorPrefixes) {\n\t\t\t\t\tstyle.vendorPrefixes.forEach(vendorPrefix => {\n\t\t\t\t\t\timage.setStyle(vendorPrefix + style.name, style.value);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * CKEditor plugin which modifies the justify commands to properly align images. This\n\t * plugin is an excerpt of CKEditor's original image one that can be found at\n\t * https://github.com/ckeditor/ckeditor-dev/blob/master/plugins/image/plugin.js\n\t *\n\t * @class CKEDITOR.plugins.ae_imagealignment\n\t */\n\tCKEDITOR.plugins.add('ae_imagealignment', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t * The function registers a 'paste' event on the editing area.\n\t\t *\n\t\t * @method afterInit\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tafterInit(editor) {\n\t\t\tconst self = this;\n\n\t\t\tALIGN_VALUES.forEach(value => {\n\t\t\t\tconst command = editor.getCommand('justify' + value);\n\n\t\t\t\tif (command) {\n\t\t\t\t\tcommand.on('exec', event => {\n\t\t\t\t\t\tconst selectionData = editor.getSelectionData();\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tselectionData &&\n\t\t\t\t\t\t\tSelectionTest.image({\n\t\t\t\t\t\t\t\tdata: {selectionData},\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst image = selectionData.element;\n\n\t\t\t\t\t\t\tconst imageAlignment = getImageAlignment(image);\n\n\t\t\t\t\t\t\tif (imageAlignment === value) {\n\t\t\t\t\t\t\t\tremoveImageAlignment(image, value);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetImageAlignment(image, value);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tevent.cancel();\n\n\t\t\t\t\t\t\tself.refreshCommands(\n\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\tnew CKEDITOR.dom.elementPath(image)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tcommand.on('refresh', function(event) {\n\t\t\t\t\t\tconst selectionData = {\n\t\t\t\t\t\t\telement: event.data.path.lastElement,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tSelectionTest.image({\n\t\t\t\t\t\t\t\tdata: {selectionData},\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst imageAlignment = getImageAlignment(\n\t\t\t\t\t\t\t\tselectionData.element\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\timageAlignment === value\n\t\t\t\t\t\t\t\t\t? CKEDITOR.TRISTATE_ON\n\t\t\t\t\t\t\t\t\t: CKEDITOR.TRISTATE_OFF\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tevent.cancel();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Forces a refresh of the modified justify commands. This is needed because the applied changes\n\t\t * do not modify the selection, so the refresh is never triggered and the UI does not update\n\t\t * properly until the next selectionChange event.\n\t\t *\n\t\t * @param {CKEDITOR.editor} editor The editor instance\n\t\t * @param {CKEDITOR.dom.elementPath} elementPath The path of the selected image\n\t\t */\n\t\trefreshCommands(editor, elementPath) {\n\t\t\tALIGN_VALUES.forEach(value => {\n\t\t\t\tconst command = editor.getCommand('justify' + value);\n\n\t\t\t\tif (command) {\n\t\t\t\t\tcommand.refresh(editor, elementPath);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_pasteimages')) {\n\t/**\n\t * CKEditor plugin which allows pasting images directly into the editable area. The image will be encoded\n\t * as Data URI. An event `beforeImageAdd` will be fired with the list of pasted images. If any of the listeners\n\t * returns `false` or cancels the event, the images won't be added to the content. Otherwise,\n\t * an event `imageAdd` will be fired with the inserted element into the editable area.\n\t *\n\t * @class CKEDITOR.plugins.ae_pasteimages\n\t */\n\n\t/**\n\t * Fired before adding images to the editor.\n\t * @event beforeImageAdd\n\t * @param {Array} imageFiles Array of image files\n\t */\n\n\t/**\n\t * Fired when an image is being added to the editor successfully.\n\t *\n\t * @event imageAdd\n\t * @param {CKEDITOR.dom.element} el The created image with src as Data URI\n\t * @param {File} file The image file\n\t */\n\n\tCKEDITOR.plugins.add('ae_pasteimages', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t * The function registers a 'paste' event on the editing area.\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tinit(editor) {\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'paste',\n\t\t\t\t\tthis._onPaste,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * The function creates an img element with src the image data as Data URI.\n\t\t * Then, it fires an 'imageAdd' event via CKEditor's event system. The passed\n\t\t * params will be:\n\t\t * - `el` - the created img element\n\t\t * - `file` - the original pasted data\n\t\t *\n\t\t * @method _onPaste\n\t\t * @protected\n\t\t * @param {CKEDITOR.dom.event} event A `paste` event, as received natively from CKEditor\n\t\t */\n\t\t_onPaste(event) {\n\t\t\tif (event.data.$.clipboardData) {\n\t\t\t\tconst pastedData = event.data.$.clipboardData.items[0];\n\t\t\t\tconst editor = event.listenerData.editor;\n\n\t\t\t\tif (pastedData.type.indexOf('image') === 0) {\n\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\tconst imageFile = pastedData.getAsFile();\n\n\t\t\t\t\treader.onload = function(event) {\n\t\t\t\t\t\tconst result = editor.fire('beforeImageAdd', {\n\t\t\t\t\t\t\timageFiles: imageFile,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\tconst el = CKEDITOR.dom.element.createFromHtml(\n\t\t\t\t\t\t\t\t'<img src=\"' + event.target.result + '\">'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\teditor.insertElement(el);\n\n\t\t\t\t\t\t\tconst imageData = {\n\t\t\t\t\t\t\t\tel,\n\t\t\t\t\t\t\t\tfile: imageFile,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\teditor.fire('imageAdd', imageData);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\treader.readAsDataURL(imageFile);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_placeholder')) {\n\t/**\n\t * CKEDITOR enterMode config set the behavior of paragraphs\n\t * When the content is empty CKEDITOR keeps the enterMode string\n\t * into the content\n\t * @property\n\t * @type {string}\n\t */\n\tconst brFiller = CKEDITOR.env.needsBrFiller ? '<br>' : '';\n\n\tconst enterModeEmptyValue = {\n\t\t1: ['<p>' + brFiller + '</p>'],\n\t\t2: ['', ' ', brFiller],\n\t\t3: ['<div>' + brFiller + '</div>'],\n\t};\n\n\t/**\n\t * CKEditor plugin which allows adding a placeholder to the editor. In this case, if there\n\t * is no content to the editor, there will be hint to the user.\n\t *\n\t * @class CKEDITOR.plugins.ae_placeholder\n\t */\n\n\t/**\n\t * Specifies the placeholder class which have to be aded to editor when editor is not focused.\n\t *\n\t * @attribute placeholderClass\n\t * @default ae_placeholder\n\t * @type String\n\t */\n\n\tCKEDITOR.plugins.add('ae_placeholder', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t * The function registers a 'blur' and 'contentDom' event listeners.\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tinit(editor) {\n\t\t\teditor.on('blur', this._checkEmptyData, this);\n\t\t\teditor.on('change', this._checkEmptyData, this);\n\t\t\teditor.on('focus', this._removePlaceholderClass, this);\n\t\t\teditor.once('contentDom', this._checkEmptyData, this);\n\t\t},\n\n\t\t/**\n\t\t * Removes any data from the content and adds a class,\n\t\t * specified by the \"placeholderClass\" config attribute.\n\t\t *\n\t\t * @protected\n\t\t * @method _checkEmptyData\n\t\t * @param {CKEDITOR.dom.event} editor event, fired from CKEditor\n\t\t */\n\t\t_checkEmptyData(event) {\n\t\t\tconst editor = event.editor;\n\n\t\t\tconst editableNode = editor.editable();\n\n\t\t\tconst innerHtml = editableNode.$.innerHTML.trim();\n\n\t\t\tconst isEmpty = enterModeEmptyValue[editor.config.enterMode].some(\n\t\t\t\telement => {\n\t\t\t\t\treturn innerHtml === element;\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (isEmpty) {\n\t\t\t\teditableNode.addClass(editor.config.placeholderClass);\n\t\t\t} else {\n\t\t\t\teditableNode.removeClass(editor.config.placeholderClass);\n\t\t\t}\n\t\t},\n\n\t\t/**\n             * Remove placeholder class when input is focused\n             *\n             * @protected\n             * @method _removePlaceholderClass\n             + @param {CKEDITOR.dom.event} editor event, fired from CKEditor\n             */\n\t\t_removePlaceholderClass(event) {\n\t\t\tconst editor = event.editor;\n\n\t\t\tconst editorNode = new CKEDITOR.dom.element(editor.element.$);\n\n\t\t\teditorNode.removeClass(editor.config.placeholderClass);\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_selectionkeystrokes')) {\n\t/**\n\t * CKEditor plugin that simulates editor interaction events based on manual keystrokes. This\n\t * can be used to trigger different reactions in the editor.\n\t *\n\t * @class CKEDITOR.plugins.ae_selectionkeystrokes\n\t */\n\tCKEDITOR.plugins.add('ae_selectionkeystrokes', {\n\t\trequires: 'ae_selectionregion',\n\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t * The function adds a command to the editor for every defined selectionKeystroke\n\t\t * in the configuration and maps it to the specified keystroke.\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tinit(editor) {\n\t\t\tif (editor.config.selectionKeystrokes) {\n\t\t\t\teditor.config.selectionKeystrokes.forEach(\n\t\t\t\t\tselectionKeystroke => {\n\t\t\t\t\t\tconst command = new CKEDITOR.command(editor, {\n\t\t\t\t\t\t\texec(editor) {\n\t\t\t\t\t\t\t\teditor.fire('editorInteraction', {\n\t\t\t\t\t\t\t\t\tmanualSelection:\n\t\t\t\t\t\t\t\t\t\tselectionKeystroke.selection,\n\t\t\t\t\t\t\t\t\tnativeEvent: {},\n\t\t\t\t\t\t\t\t\tselectionData: editor.getSelectionData(),\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst commandName =\n\t\t\t\t\t\t\t'selectionKeystroke' + selectionKeystroke.selection;\n\n\t\t\t\t\t\teditor.addCommand(commandName, command);\n\t\t\t\t\t\teditor.setKeystroke(\n\t\t\t\t\t\t\tselectionKeystroke.keys,\n\t\t\t\t\t\t\tcommandName\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * @license Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or http://ckeditor.com/license\n */\n\nif (!CKEDITOR.plugins.get('ae_tableresize')) {\n\tconst pxUnit = CKEDITOR.tools.cssLength;\n\n\tfunction getWidth(el) {\n\t\treturn CKEDITOR.env.ie\n\t\t\t? el.$.clientWidth\n\t\t\t: parseInt(el.getComputedStyle('width'), 10);\n\t}\n\n\tfunction getBorderWidth(element, side) {\n\t\tlet computed = element.getComputedStyle('border-' + side + '-width');\n\n\t\tconst borderMap = {\n\t\t\tthin: '0px',\n\t\t\tmedium: '1px',\n\t\t\tthick: '2px',\n\t\t};\n\n\t\tif (computed.indexOf('px') < 0) {\n\t\t\t// look up keywords\n\t\t\tif (\n\t\t\t\tcomputed in borderMap &&\n\t\t\t\telement.getComputedStyle('border-style') != 'none'\n\t\t\t) {\n\t\t\t\tcomputed = borderMap[computed];\n\t\t\t} else {\n\t\t\t\tcomputed = 0;\n\t\t\t}\n\t\t}\n\n\t\treturn parseInt(computed, 10);\n\t}\n\n\t// Gets the table row that contains the most columns.\n\tfunction getMasterPillarRow(table) {\n\t\tconst $rows = table.$.rows;\n\n\t\tlet maxCells = 0;\n\n\t\tlet cellsCount;\n\n\t\tlet $elected;\n\n\t\tlet $tr;\n\n\t\tfor (let i = 0, len = $rows.length; i < len; i++) {\n\t\t\t$tr = $rows[i];\n\t\t\tcellsCount = $tr.cells.length;\n\n\t\t\tif (cellsCount > maxCells) {\n\t\t\t\tmaxCells = cellsCount;\n\t\t\t\t$elected = $tr;\n\t\t\t}\n\t\t}\n\n\t\treturn $elected;\n\t}\n\n\tfunction buildTableColumnPillars(table) {\n\t\tconst pillars = [];\n\n\t\tlet pillarIndex = -1;\n\n\t\tconst rtl = table.getComputedStyle('direction') === 'rtl';\n\n\t\t// Get the raw row element that cointains the most columns.\n\t\tconst $tr = getMasterPillarRow(table);\n\n\t\t// Get the tbody element and position, which will be used to set the\n\t\t// top and bottom boundaries.\n\t\tconst tbody = new CKEDITOR.dom.element(table.$.tBodies[0]);\n\n\t\tconst tbodyPosition = tbody.getDocumentPosition();\n\n\t\t// Loop thorugh all cells, building pillars after each one of them.\n\t\tfor (let i = 0, len = $tr.cells.length; i < len; i++) {\n\t\t\t// Both the current cell and the successive one will be used in the\n\t\t\t// pillar size calculation.\n\t\t\tconst td = new CKEDITOR.dom.element($tr.cells[i]);\n\n\t\t\tconst nextTd =\n\t\t\t\t$tr.cells[i + 1] && new CKEDITOR.dom.element($tr.cells[i + 1]);\n\n\t\t\tpillarIndex += td.$.colSpan || 1;\n\n\t\t\t// Calculate the pillar boundary positions.\n\t\t\tlet pillarLeft;\n\t\t\tlet pillarRight;\n\n\t\t\tlet x = td.getDocumentPosition().x;\n\n\t\t\t// Calculate positions based on the current cell.\n\t\t\tif (rtl) {\n\t\t\t\tpillarRight = x + getBorderWidth(td, 'left');\n\t\t\t} else {\n\t\t\t\tpillarLeft = x + td.$.offsetWidth - getBorderWidth(td, 'right');\n\t\t\t}\n\n\t\t\t// Calculate positions based on the next cell, if available.\n\t\t\tif (nextTd) {\n\t\t\t\tx = nextTd.getDocumentPosition().x;\n\n\t\t\t\tif (rtl) {\n\t\t\t\t\tpillarLeft =\n\t\t\t\t\t\tx +\n\t\t\t\t\t\tnextTd.$.offsetWidth -\n\t\t\t\t\t\tgetBorderWidth(nextTd, 'right');\n\t\t\t\t} else {\n\t\t\t\t\tpillarRight = x + getBorderWidth(nextTd, 'left');\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Otherwise calculate positions based on the table (for last cell).\n\t\t\telse {\n\t\t\t\tx = table.getDocumentPosition().x;\n\n\t\t\t\tif (rtl) {\n\t\t\t\t\tpillarLeft = x;\n\t\t\t\t} else {\n\t\t\t\t\tpillarRight = x + table.$.offsetWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst pillarWidth = Math.max(pillarRight - pillarLeft, 4);\n\n\t\t\t// The pillar should reflects exactly the shape of the hovered\n\t\t\t// column border line.\n\t\t\tpillars.push({\n\t\t\t\ttable,\n\t\t\t\tindex: pillarIndex,\n\t\t\t\tx: pillarLeft,\n\t\t\t\ty: tbodyPosition.y,\n\t\t\t\twidth: pillarWidth,\n\t\t\t\theight: tbody.$.offsetHeight,\n\t\t\t\trtl,\n\t\t\t});\n\t\t}\n\n\t\treturn pillars;\n\t}\n\n\tfunction getPillarAtPosition(pillars, positionX) {\n\t\tfor (let i = 0, len = pillars.length; i < len; i++) {\n\t\t\tconst pillar = pillars[i];\n\n\t\t\tif (positionX >= pillar.x && positionX <= pillar.x + pillar.width) {\n\t\t\t\treturn pillar;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction cancel(evt) {\n\t\t(evt.data || evt).preventDefault();\n\t}\n\n\tfunction ColumnResizer(editor, pillar) {\n\t\tlet currentShift;\n\t\tlet leftShiftBoundary;\n\t\tlet leftSideCells;\n\t\tlet resizing;\n\t\tlet rightShiftBoundary;\n\t\tlet rightSideCells;\n\t\tlet startOffset;\n\n\t\tconst document = editor.document;\n\n\t\tconst resizer = CKEDITOR.dom.element.createFromHtml(\n\t\t\t'<div data-cke-temp=1 contenteditable=false unselectable=on ' +\n\t\t\t\t'style=\"position:absolute;cursor:col-resize;filter:alpha(opacity=0);opacity:0;' +\n\t\t\t\t'padding:0;background-color:#004;background-image:none;border:0px none;z-index:10\"></div>',\n\t\t\tdocument\n\t\t);\n\n\t\tconst isResizing = (this.isResizing = function() {\n\t\t\treturn resizing;\n\t\t});\n\n\t\tconst move = (this.move = function(posX) {\n\t\t\tlet resizerNewPosition =\n\t\t\t\tposX - Math.round(resizer.$.offsetWidth / 2);\n\n\t\t\tif (isResizing) {\n\t\t\t\tif (\n\t\t\t\t\tresizerNewPosition === leftShiftBoundary ||\n\t\t\t\t\tresizerNewPosition === rightShiftBoundary\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresizerNewPosition = Math.max(\n\t\t\t\t\tresizerNewPosition,\n\t\t\t\t\tleftShiftBoundary\n\t\t\t\t);\n\t\t\t\tresizerNewPosition = Math.min(\n\t\t\t\t\tresizerNewPosition,\n\t\t\t\t\trightShiftBoundary\n\t\t\t\t);\n\n\t\t\t\tcurrentShift = resizerNewPosition - startOffset;\n\t\t\t}\n\n\t\t\tresizer.setStyle('left', pxUnit(resizerNewPosition));\n\t\t});\n\n\t\tfunction detach() {\n\t\t\tresizer.removeListener('mouseup', onMouseUp);\n\t\t\tresizer.removeListener('mousedown', onMouseDown);\n\t\t\tresizer.removeListener('mousemove', onMouseMove);\n\t\t}\n\n\t\tfunction resizeStart() {\n\t\t\t// Before starting to resize, figure out which cells to change\n\t\t\t// and the boundaries of this resizing shift.\n\n\t\t\tconst columnIndex = pillar.index;\n\n\t\t\tconst map = CKEDITOR.tools.buildTableMap(pillar.table);\n\n\t\t\tconst leftColumnCells = [];\n\n\t\t\tconst rightColumnCells = [];\n\n\t\t\tlet leftMinSize = Number.MAX_VALUE;\n\n\t\t\tlet rightMinSize = leftMinSize;\n\n\t\t\tconst rtl = pillar.rtl;\n\n\t\t\tfor (let i = 0, len = map.length; i < len; i++) {\n\t\t\t\tconst row = map[i];\n\n\t\t\t\tlet leftCell = row[columnIndex + (rtl ? 1 : 0)];\n\n\t\t\t\tlet rightCell = row[columnIndex + (rtl ? 0 : 1)];\n\n\t\t\t\tleftCell = leftCell && new CKEDITOR.dom.element(leftCell);\n\t\t\t\trightCell = rightCell && new CKEDITOR.dom.element(rightCell);\n\n\t\t\t\tif (!leftCell || !rightCell || !leftCell.equals(rightCell)) {\n\t\t\t\t\tif (leftCell) {\n\t\t\t\t\t\tleftMinSize = Math.min(leftMinSize, getWidth(leftCell));\n\t\t\t\t\t}\n\t\t\t\t\tif (rightCell) {\n\t\t\t\t\t\trightMinSize = Math.min(\n\t\t\t\t\t\t\trightMinSize,\n\t\t\t\t\t\t\tgetWidth(rightCell)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tleftColumnCells.push(leftCell);\n\t\t\t\t\trightColumnCells.push(rightCell);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cache the list of cells to be resized.\n\t\t\tleftSideCells = leftColumnCells;\n\t\t\trightSideCells = rightColumnCells;\n\n\t\t\t// Cache the resize limit boundaries.\n\t\t\tleftShiftBoundary = pillar.x - leftMinSize;\n\t\t\trightShiftBoundary = pillar.x + rightMinSize;\n\n\t\t\tresizer.setOpacity(0.5);\n\t\t\tstartOffset = parseInt(resizer.getStyle('left'), 10);\n\t\t\tcurrentShift = 0;\n\t\t\tresizing = 1;\n\n\t\t\tresizer.on('mousemove', onMouseMove);\n\n\t\t\t// Prevent the native drag behavior otherwise 'mousemove' won't fire.\n\t\t\tdocument.on('dragstart', cancel);\n\t\t}\n\n\t\tfunction resizeEnd() {\n\t\t\tresizing = 0;\n\n\t\t\tresizer.setOpacity(0);\n\n\t\t\tif (currentShift) {\n\t\t\t\tresizeColumn();\n\t\t\t}\n\n\t\t\tconst table = pillar.table;\n\t\t\tsetTimeout(() => {\n\t\t\t\ttable.removeCustomData('_cke_table_pillars');\n\t\t\t}, 0);\n\n\t\t\tdocument.removeListener('dragstart', cancel);\n\t\t}\n\n\t\tfunction resizeColumn() {\n\t\t\tconst rtl = pillar.rtl;\n\n\t\t\tconst cellsCount = rtl\n\t\t\t\t? rightSideCells.length\n\t\t\t\t: leftSideCells.length;\n\n\t\t\t// Perform the actual resize to table cells, only for those by side of the pillar.\n\t\t\tfor (let i = 0; i < cellsCount; i++) {\n\t\t\t\tconst leftCell = leftSideCells[i];\n\n\t\t\t\tconst rightCell = rightSideCells[i];\n\n\t\t\t\tconst table = pillar.table;\n\n\t\t\t\t// Defer the resizing to avoid any interference among cells.\n\t\t\t\tCKEDITOR.tools.setTimeout(\n\t\t\t\t\t(\n\t\t\t\t\t\tleftCell,\n\t\t\t\t\t\tleftOldWidth,\n\t\t\t\t\t\trightCell,\n\t\t\t\t\t\trightOldWidth,\n\t\t\t\t\t\ttableWidth,\n\t\t\t\t\t\tsizeShift\n\t\t\t\t\t) => {\n\t\t\t\t\t\t// 1px is the minimum valid width (#11626).\n\t\t\t\t\t\tif (leftCell) {\n\t\t\t\t\t\t\tleftCell.setStyle(\n\t\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\t\tpxUnit(Math.max(leftOldWidth + sizeShift, 1))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (rightCell) {\n\t\t\t\t\t\t\trightCell.setStyle(\n\t\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\t\tpxUnit(Math.max(rightOldWidth - sizeShift, 1))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If we're in the last cell, we need to resize the table as well\n\t\t\t\t\t\tif (tableWidth) {\n\t\t\t\t\t\t\ttable.setStyle(\n\t\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\t\tpxUnit(tableWidth + sizeShift * (rtl ? -1 : 1))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t0,\n\t\t\t\t\tthis,\n\t\t\t\t\t[\n\t\t\t\t\t\tleftCell,\n\t\t\t\t\t\tleftCell && getWidth(leftCell),\n\t\t\t\t\t\trightCell,\n\t\t\t\t\t\trightCell && getWidth(rightCell),\n\t\t\t\t\t\t(!leftCell || !rightCell) &&\n\t\t\t\t\t\t\tgetWidth(table) +\n\t\t\t\t\t\t\t\tgetBorderWidth(table, 'left') +\n\t\t\t\t\t\t\t\tgetBorderWidth(table, 'right'),\n\t\t\t\t\t\tcurrentShift,\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tfunction onMouseDown(evt) {\n\t\t\tcancel(evt);\n\n\t\t\tresizeStart();\n\n\t\t\tdocument.on('mouseup', onMouseUp, this);\n\t\t}\n\n\t\tfunction onMouseUp(evt) {\n\t\t\tevt.removeListener();\n\n\t\t\tresizeEnd();\n\t\t}\n\n\t\tfunction onMouseMove(evt) {\n\t\t\tmove(evt.data.getPageOffset().x);\n\t\t}\n\n\t\t// Clean DOM when editor is destroyed.\n\t\teditor.on('destroy', () => {\n\t\t\tdetach();\n\n\t\t\tresizer.remove();\n\t\t});\n\n\t\t// Place the resizer after body to prevent it\n\t\t// from being editable.\n\t\tdocument.getDocumentElement().append(resizer);\n\n\t\tresizer.setStyles({\n\t\t\twidth: pxUnit(pillar.width),\n\t\t\theight: pxUnit(pillar.height),\n\t\t\tleft: pxUnit(pillar.x),\n\t\t\ttop: pxUnit(pillar.y),\n\t\t});\n\n\t\tresizer.on('mousedown', onMouseDown, this);\n\n\t\tdocument.getBody().setStyle('cursor', 'col-resize');\n\n\t\t// Display the resizer to receive events but don't show it,\n\t\t// only change the cursor to resizable shape.\n\t\tresizer.show();\n\n\t\tthis.destroy = function() {\n\t\t\tdetach();\n\n\t\t\tdocument.getBody().setStyle('cursor', 'auto');\n\n\t\t\tresizer.remove();\n\t\t};\n\t}\n\n\tfunction clearPillarsCache(evt) {\n\t\tconst target = evt.data.getTarget();\n\n\t\tif (evt.name === 'mouseout') {\n\t\t\t// Bypass interal mouse move.\n\t\t\tif (!target.is('table')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet dest = new CKEDITOR.dom.element(\n\t\t\t\tevt.data.$.relatedTarget || evt.data.$.toElement\n\t\t\t);\n\t\t\twhile (dest && dest.$ && !dest.equals(target) && !dest.is('body')) {\n\t\t\t\tdest = dest.getParent();\n\t\t\t}\n\t\t\tif (!dest || dest.equals(target)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\ttarget.getAscendant('table', 1).removeCustomData('_cke_table_pillars');\n\t\tevt.removeListener();\n\t}\n\n\tCKEDITOR.plugins.add('ae_tableresize', {\n\t\trequires: 'ae_tabletools',\n\n\t\tinit(editor) {\n\t\t\teditor.on('contentDom', () => {\n\t\t\t\tlet resizer;\n\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\t// In Classic editor it is better to use document\n\t\t\t\t// instead of editable so event will work below body.\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable.isInline() ? editable : editor.document,\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tevt => {\n\t\t\t\t\t\tevt = evt.data;\n\n\t\t\t\t\t\tconst target = evt.getTarget();\n\n\t\t\t\t\t\t// FF may return document and IE8 some UFO (object with no nodeType property...)\n\t\t\t\t\t\t// instead of an element (#11823).\n\t\t\t\t\t\tif (target.type !== CKEDITOR.NODE_ELEMENT) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst pageX = evt.getPageOffset().x;\n\n\t\t\t\t\t\t// If we're already attached to a pillar, simply move the\n\t\t\t\t\t\t// resizer.\n\t\t\t\t\t\tif (resizer) {\n\t\t\t\t\t\t\tif (resizer.isResizing()) {\n\t\t\t\t\t\t\t\tresizer.move(pageX);\n\n\t\t\t\t\t\t\t\tcancel(evt);\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresizer.destroy();\n\n\t\t\t\t\t\t\t\tresizer = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Considering table, tr, td, tbody but nothing else.\n\t\t\t\t\t\tlet pillars;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!target.is('table') &&\n\t\t\t\t\t\t\t!target.getAscendant('tbody', 1)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst table = target.getAscendant('table', 1);\n\n\t\t\t\t\t\t// Make sure the table we found is inside the container\n\t\t\t\t\t\t// (eg. we should not use tables the editor is embedded within)\n\t\t\t\t\t\tif (!editor.editable().contains(table)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!(pillars = table.getCustomData(\n\t\t\t\t\t\t\t\t'_cke_table_pillars'\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Cache table pillars calculation result.\n\t\t\t\t\t\t\ttable.setCustomData(\n\t\t\t\t\t\t\t\t'_cke_table_pillars',\n\t\t\t\t\t\t\t\t(pillars = buildTableColumnPillars(table))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\ttable.on('mouseout', clearPillarsCache);\n\t\t\t\t\t\t\ttable.on('mousedown', clearPillarsCache);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst pillar = getPillarAtPosition(pillars, pageX);\n\n\t\t\t\t\t\tif (pillar) {\n\t\t\t\t\t\t\tresizer = new ColumnResizer(editor, pillar);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * @license Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or http://ckeditor.com/license\n */\n\nif (!CKEDITOR.plugins.get('ae_tabletools')) {\n\tconst cellNodeRegex = /^(?:td|th)$/;\n\n\tfunction getSelectedCells(selection) {\n\t\tconst ranges = selection.getRanges();\n\t\tconst retval = [];\n\t\tconst database = {};\n\n\t\tfunction moveOutOfCellGuard(node) {\n\t\t\t// Apply to the first cell only.\n\t\t\tif (retval.length > 0) return;\n\n\t\t\t// If we are exiting from the first </td>, then the td should definitely be\n\t\t\t// included.\n\t\t\tif (\n\t\t\t\tnode.type == CKEDITOR.NODE_ELEMENT &&\n\t\t\t\tcellNodeRegex.test(node.getName()) &&\n\t\t\t\t!node.getCustomData('selected_cell')\n\t\t\t) {\n\t\t\t\tCKEDITOR.dom.element.setMarker(\n\t\t\t\t\tdatabase,\n\t\t\t\t\tnode,\n\t\t\t\t\t'selected_cell',\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t\tretval.push(node);\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < ranges.length; i++) {\n\t\t\tconst range = ranges[i];\n\n\t\t\tif (range.collapsed) {\n\t\t\t\t// Walker does not handle collapsed ranges yet - fall back to old API.\n\t\t\t\tconst startNode = range.getCommonAncestor();\n\t\t\t\tconst nearestCell =\n\t\t\t\t\tstartNode.getAscendant('td', true) ||\n\t\t\t\t\tstartNode.getAscendant('th', true);\n\t\t\t\tif (nearestCell) retval.push(nearestCell);\n\t\t\t} else {\n\t\t\t\tconst walker = new CKEDITOR.dom.walker(range);\n\t\t\t\tlet node;\n\t\t\t\twalker.guard = moveOutOfCellGuard;\n\n\t\t\t\twhile ((node = walker.next())) {\n\t\t\t\t\t// If may be possible for us to have a range like this:\n\t\t\t\t\t// <td>^1</td><td>^2</td>\n\t\t\t\t\t// The 2nd td shouldn't be included.\n\t\t\t\t\t//\n\t\t\t\t\t// So we have to take care to include a td we've entered only when we've\n\t\t\t\t\t// walked into its children.\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tnode.type != CKEDITOR.NODE_ELEMENT ||\n\t\t\t\t\t\t!node.is(CKEDITOR.dtd.table)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst parent =\n\t\t\t\t\t\t\tnode.getAscendant('td', true) ||\n\t\t\t\t\t\t\tnode.getAscendant('th', true);\n\t\t\t\t\t\tif (parent && !parent.getCustomData('selected_cell')) {\n\t\t\t\t\t\t\tCKEDITOR.dom.element.setMarker(\n\t\t\t\t\t\t\t\tdatabase,\n\t\t\t\t\t\t\t\tparent,\n\t\t\t\t\t\t\t\t'selected_cell',\n\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tretval.push(parent);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tCKEDITOR.dom.element.clearAllMarkers(database);\n\n\t\treturn retval;\n\t}\n\n\tfunction getFocusElementAfterDelCells(cellsToDelete) {\n\t\tlet i = 0;\n\n\t\tconst last = cellsToDelete.length - 1;\n\n\t\tconst database = {};\n\n\t\tlet cell;\n\n\t\tlet focusedCell;\n\n\t\tlet tr;\n\n\t\twhile ((cell = cellsToDelete[i++]))\n\t\t\tCKEDITOR.dom.element.setMarker(database, cell, 'delete_cell', true);\n\n\t\t// 1.first we check left or right side focusable cell row by row;\n\t\ti = 0;\n\t\twhile ((cell = cellsToDelete[i++])) {\n\t\t\tif (\n\t\t\t\t((focusedCell = cell.getPrevious()) &&\n\t\t\t\t\t!focusedCell.getCustomData('delete_cell')) ||\n\t\t\t\t((focusedCell = cell.getNext()) &&\n\t\t\t\t\t!focusedCell.getCustomData('delete_cell'))\n\t\t\t) {\n\t\t\t\tCKEDITOR.dom.element.clearAllMarkers(database);\n\t\t\t\treturn focusedCell;\n\t\t\t}\n\t\t}\n\n\t\tCKEDITOR.dom.element.clearAllMarkers(database);\n\n\t\t// 2. then we check the toppest row (outside the selection area square) focusable cell\n\t\ttr = cellsToDelete[0].getParent();\n\t\tif ((tr = tr.getPrevious())) return tr.getLast();\n\n\t\t// 3. last we check the lowerest  row focusable cell\n\t\ttr = cellsToDelete[last].getParent();\n\t\tif ((tr = tr.getNext())) return tr.getChild(0);\n\n\t\treturn null;\n\t}\n\n\tfunction insertRow(editor, insertBefore) {\n\t\tconst selection = editor.getSelection();\n\n\t\tconst cells = getSelectedCells(selection);\n\n\t\tconst firstCell = cells[0];\n\n\t\tconst table = firstCell.getAscendant('table');\n\n\t\tconst doc = firstCell.getDocument();\n\n\t\tconst startRow = cells[0].getParent();\n\n\t\tconst startRowIndex = startRow.$.rowIndex;\n\n\t\tconst lastCell = cells[cells.length - 1];\n\n\t\tconst endRowIndex =\n\t\t\tlastCell.getParent().$.rowIndex + lastCell.$.rowSpan - 1;\n\n\t\tconst endRow = new CKEDITOR.dom.element(table.$.rows[endRowIndex]);\n\n\t\tconst rowIndex = insertBefore ? startRowIndex : endRowIndex;\n\n\t\tconst row = insertBefore ? startRow : endRow;\n\n\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\tconst cloneRow = map[rowIndex];\n\n\t\tconst nextRow = insertBefore ? map[rowIndex - 1] : map[rowIndex + 1];\n\n\t\tconst width = map[0].length;\n\n\t\tconst newRow = doc.createElement('tr');\n\t\tfor (let i = 0; cloneRow[i] && i < width; i++) {\n\t\t\tlet cell;\n\t\t\t// Check whether there's a spanning row here, do not break it.\n\t\t\tif (\n\t\t\t\tcloneRow[i].rowSpan > 1 &&\n\t\t\t\tnextRow &&\n\t\t\t\tcloneRow[i] == nextRow[i]\n\t\t\t) {\n\t\t\t\tcell = cloneRow[i];\n\t\t\t\tcell.rowSpan += 1;\n\t\t\t} else {\n\t\t\t\tcell = new CKEDITOR.dom.element(cloneRow[i]).clone();\n\t\t\t\tcell.removeAttribute('rowSpan');\n\t\t\t\tcell.appendBogus();\n\t\t\t\tnewRow.append(cell);\n\t\t\t\tcell = cell.$;\n\t\t\t}\n\n\t\t\ti += cell.colSpan - 1;\n\t\t}\n\n\t\tif (insertBefore) {\n\t\t\tnewRow.insertBefore(row);\n\t\t} else {\n\t\t\tnewRow.insertAfter(row);\n\t\t}\n\n\t\tconst cell = new CKEDITOR.dom.element(newRow.$).getChild(\n\t\t\tcells[0] ? cells[0].$.cellIndex : 0\n\t\t);\n\t\tselectElement(editor, cell);\n\t}\n\n\tfunction deleteRows(selectionOrRow) {\n\t\tif (selectionOrRow instanceof CKEDITOR.dom.selection) {\n\t\t\tconst cells = getSelectedCells(selectionOrRow);\n\n\t\t\tconst firstCell = cells[0];\n\n\t\t\tconst table = firstCell.getAscendant('table');\n\n\t\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\t\tconst startRow = cells[0].getParent();\n\n\t\t\tconst startRowIndex = startRow.$.rowIndex;\n\n\t\t\tconst lastCell = cells[cells.length - 1];\n\n\t\t\tconst endRowIndex =\n\t\t\t\tlastCell.getParent().$.rowIndex + lastCell.$.rowSpan - 1;\n\n\t\t\tconst rowsToDelete = [];\n\n\t\t\t// Delete cell or reduce cell spans by checking through the table map.\n\t\t\tfor (let i = startRowIndex; i <= endRowIndex; i++) {\n\t\t\t\tconst mapRow = map[i];\n\n\t\t\t\tconst row = new CKEDITOR.dom.element(table.$.rows[i]);\n\n\t\t\t\tfor (let j = 0; j < mapRow.length; j++) {\n\t\t\t\t\tconst cell = new CKEDITOR.dom.element(mapRow[j]);\n\n\t\t\t\t\tconst cellRowIndex = cell.getParent().$.rowIndex;\n\n\t\t\t\t\tif (cell.$.rowSpan == 1) cell.remove();\n\t\t\t\t\t// Row spanned cell.\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Span row of the cell, reduce spanning.\n\t\t\t\t\t\tcell.$.rowSpan -= 1;\n\t\t\t\t\t\t// Root row of the cell, root cell to next row.\n\t\t\t\t\t\tif (cellRowIndex == i) {\n\t\t\t\t\t\t\tconst nextMapRow = map[i + 1];\n\t\t\t\t\t\t\tif (nextMapRow[j - 1]) {\n\t\t\t\t\t\t\t\tcell.insertAfter(\n\t\t\t\t\t\t\t\t\tnew CKEDITOR.dom.element(nextMapRow[j - 1])\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnew CKEDITOR.dom.element(\n\t\t\t\t\t\t\t\t\ttable.$.rows[i + 1]\n\t\t\t\t\t\t\t\t).append(cell, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tj += cell.$.colSpan - 1;\n\t\t\t\t}\n\n\t\t\t\trowsToDelete.push(row);\n\t\t\t}\n\n\t\t\tconst rows = table.$.rows;\n\n\t\t\t// Where to put the cursor after rows been deleted?\n\t\t\t// 1. Into next sibling row if any;\n\t\t\t// 2. Into previous sibling row if any;\n\t\t\t// 3. Into table's parent element if it's the very last row.\n\t\t\tconst cursorPosition = new CKEDITOR.dom.element(\n\t\t\t\trows[endRowIndex + 1] ||\n\t\t\t\t\t(startRowIndex > 0 ? rows[startRowIndex - 1] : null) ||\n\t\t\t\t\ttable.$.parentNode\n\t\t\t);\n\n\t\t\tfor (let i = rowsToDelete.length; i >= 0; i--)\n\t\t\t\tdeleteRows(rowsToDelete[i]);\n\n\t\t\treturn cursorPosition;\n\t\t} else if (selectionOrRow instanceof CKEDITOR.dom.element) {\n\t\t\tconst table = selectionOrRow.getAscendant('table');\n\n\t\t\tif (table.$.rows.length == 1) table.remove();\n\t\t\telse selectionOrRow.remove();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction getCellColIndex(cell, isStart) {\n\t\tconst row = cell.getParent();\n\n\t\tconst rowCells = row.$.cells;\n\n\t\tlet colIndex = 0;\n\t\tfor (let i = 0; i < rowCells.length; i++) {\n\t\t\tconst mapCell = rowCells[i];\n\t\t\tcolIndex += isStart ? 1 : mapCell.colSpan;\n\t\t\tif (mapCell == cell.$) break;\n\t\t}\n\n\t\treturn colIndex - 1;\n\t}\n\n\tfunction getColumnsIndices(cells, isStart) {\n\t\tlet retval = isStart ? Infinity : 0;\n\t\tfor (let i = 0; i < cells.length; i++) {\n\t\t\tconst colIndex = getCellColIndex(cells[i], isStart);\n\t\t\tif (isStart ? colIndex < retval : colIndex > retval)\n\t\t\t\tretval = colIndex;\n\t\t}\n\t\treturn retval;\n\t}\n\n\tfunction insertColumn(editor, insertBefore) {\n\t\tconst selection = editor.getSelection();\n\n\t\tconst cells = getSelectedCells(selection);\n\n\t\tconst firstCell = cells[0];\n\n\t\tconst table = firstCell.getAscendant('table');\n\n\t\tconst startCol = getColumnsIndices(cells, 1);\n\n\t\tconst lastCol = getColumnsIndices(cells);\n\n\t\tconst colIndex = insertBefore ? startCol : lastCol;\n\n\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\tconst cloneCol = [];\n\n\t\tconst nextCol = [];\n\n\t\tconst height = map.length;\n\n\t\tfor (let i = 0; i < height; i++) {\n\t\t\tcloneCol.push(map[i][colIndex]);\n\t\t\tconst nextCell = insertBefore\n\t\t\t\t? map[i][colIndex - 1]\n\t\t\t\t: map[i][colIndex + 1];\n\t\t\tnextCol.push(nextCell);\n\t\t}\n\n\t\tconst insertedCells = [];\n\t\tfor (let i = 0; i < height; i++) {\n\t\t\tlet cell;\n\n\t\t\tif (!cloneCol[i]) continue;\n\n\t\t\t// Check whether there's a spanning column here, do not break it.\n\t\t\tif (cloneCol[i].colSpan > 1 && nextCol[i] == cloneCol[i]) {\n\t\t\t\tcell = cloneCol[i];\n\t\t\t\tcell.colSpan += 1;\n\t\t\t} else {\n\t\t\t\tcell = new CKEDITOR.dom.element(cloneCol[i]).clone();\n\t\t\t\tcell.removeAttribute('colSpan');\n\t\t\t\tcell.appendBogus();\n\t\t\t\tcell[insertBefore ? 'insertBefore' : 'insertAfter'].call(\n\t\t\t\t\tcell,\n\t\t\t\t\tnew CKEDITOR.dom.element(cloneCol[i])\n\t\t\t\t);\n\t\t\t\tcell = cell.$;\n\t\t\t}\n\n\t\t\tinsertedCells[i] = cell;\n\n\t\t\ti += cell.rowSpan - 1;\n\t\t}\n\n\t\tconst cell = new CKEDITOR.dom.element(\n\t\t\tinsertedCells[firstCell.getParent().$.rowIndex]\n\t\t);\n\t\tselectElement(editor, cell);\n\t}\n\n\tfunction selectElement(editor, element) {\n\t\tconst range = editor.createRange();\n\n\t\trange.moveToPosition(element, CKEDITOR.POSITION_AFTER_START);\n\t\teditor.getSelection().selectRanges([range]);\n\t}\n\n\tfunction deleteColumns(selectionOrCell) {\n\t\tconst cells = getSelectedCells(selectionOrCell);\n\n\t\tconst firstCell = cells[0];\n\n\t\tconst lastCell = cells[cells.length - 1];\n\n\t\tconst table = firstCell.getAscendant('table');\n\n\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\tlet startColIndex;\n\n\t\tlet endColIndex;\n\n\t\tconst rowsToDelete = [];\n\n\t\tlet rows;\n\n\t\t// Figure out selected cells' column indices.\n\t\tfor (let i = 0, rows = map.length; i < rows; i++) {\n\t\t\t// eslint-disable-next-line sort-vars\n\t\t\tfor (let j = 0, cols = map[i].length; j < cols; j++) {\n\t\t\t\tif (map[i][j] == firstCell.$) startColIndex = j;\n\t\t\t\tif (map[i][j] == lastCell.$) endColIndex = j;\n\t\t\t}\n\t\t}\n\n\t\t// Delete cell or reduce cell spans by checking through the table map.\n\t\tfor (let i = startColIndex; i <= endColIndex; i++) {\n\t\t\tfor (let j = 0; j < map.length; j++) {\n\t\t\t\tconst mapRow = map[j];\n\n\t\t\t\tconst row = new CKEDITOR.dom.element(table.$.rows[j]);\n\n\t\t\t\tconst cell = new CKEDITOR.dom.element(mapRow[i]);\n\n\t\t\t\tif (cell.$) {\n\t\t\t\t\tif (cell.$.colSpan == 1) cell.remove();\n\t\t\t\t\t// Reduce the col spans.\n\t\t\t\t\telse cell.$.colSpan -= 1;\n\n\t\t\t\t\tj += cell.$.rowSpan - 1;\n\n\t\t\t\t\tif (!row.$.cells.length) rowsToDelete.push(row);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst firstRowCells = table.$.rows[0] && table.$.rows[0].cells;\n\n\t\t// Where to put the cursor after columns been deleted?\n\t\t// 1. Into next cell of the first row if any;\n\t\t// 2. Into previous cell of the first row if any;\n\t\t// 3. Into table's parent element;\n\t\tconst cursorPosition = new CKEDITOR.dom.element(\n\t\t\tfirstRowCells[startColIndex] ||\n\t\t\t\t(startColIndex\n\t\t\t\t\t? firstRowCells[startColIndex - 1]\n\t\t\t\t\t: table.$.parentNode)\n\t\t);\n\n\t\t// Delete table rows only if all columns are gone (do not remove empty row).\n\t\tif (rowsToDelete.length == rows) table.remove();\n\n\t\treturn cursorPosition;\n\t}\n\n\tfunction insertCell(selection, insertBefore) {\n\t\tconst startElement = selection.getStartElement();\n\t\tconst cell =\n\t\t\tstartElement.getAscendant('td', 1) ||\n\t\t\tstartElement.getAscendant('th', 1);\n\n\t\tif (!cell) return;\n\n\t\t// Create the new cell element to be added.\n\t\tconst newCell = cell.clone();\n\t\tnewCell.appendBogus();\n\n\t\tif (insertBefore) newCell.insertBefore(cell);\n\t\telse newCell.insertAfter(cell);\n\t}\n\n\tfunction deleteCells(selectionOrCell) {\n\t\tif (selectionOrCell instanceof CKEDITOR.dom.selection) {\n\t\t\tconst cellsToDelete = getSelectedCells(selectionOrCell);\n\t\t\tconst table =\n\t\t\t\tcellsToDelete[0] && cellsToDelete[0].getAscendant('table');\n\t\t\tconst cellToFocus = getFocusElementAfterDelCells(cellsToDelete);\n\n\t\t\tfor (let i = cellsToDelete.length - 1; i >= 0; i--)\n\t\t\t\tdeleteCells(cellsToDelete[i]);\n\n\t\t\tif (cellToFocus) placeCursorInCell(cellToFocus, true);\n\t\t\telse if (table) table.remove();\n\t\t} else if (selectionOrCell instanceof CKEDITOR.dom.element) {\n\t\t\tconst tr = selectionOrCell.getParent();\n\t\t\tif (tr.getChildCount() == 1) tr.remove();\n\t\t\telse selectionOrCell.remove();\n\t\t}\n\t}\n\n\t// Remove filler at end and empty spaces around the cell content.\n\tfunction trimCell(cell) {\n\t\tconst bogus = cell.getBogus();\n\t\tif (bogus) {\n\t\t\tbogus.remove();\n\t\t}\n\t\tcell.trim();\n\t}\n\n\tfunction placeCursorInCell(cell, placeAtEnd) {\n\t\tconst docInner = cell.getDocument();\n\n\t\tconst docOuter = CKEDITOR.document;\n\n\t\t// Fixing \"Unspecified error\" thrown in IE10 by resetting\n\t\t// selection the dirty and shameful way (#10308).\n\t\t// We can not apply this hack to IE8 because\n\t\t// it causes error (#11058).\n\t\tif (CKEDITOR.env.ie && CKEDITOR.env.version == 10) {\n\t\t\tdocOuter.focus();\n\t\t\tdocInner.focus();\n\t\t}\n\n\t\tconst range = new CKEDITOR.dom.range(docInner);\n\t\tif (\n\t\t\t!range['moveToElementEdit' + (placeAtEnd ? 'End' : 'Start')](cell)\n\t\t) {\n\t\t\trange.selectNodeContents(cell);\n\t\t\trange.collapse(placeAtEnd ? false : true);\n\t\t}\n\t\trange.select(true);\n\t}\n\n\tfunction cellInRow(tableMap, rowIndex, cell) {\n\t\tconst oRow = tableMap[rowIndex];\n\t\tif (typeof cell == 'undefined') return oRow;\n\n\t\tfor (let c = 0; oRow && c < oRow.length; c++) {\n\t\t\tif (cell.is && oRow[c] == cell.$) return c;\n\t\t\telse if (c == cell) return new CKEDITOR.dom.element(oRow[c]);\n\t\t}\n\t\treturn cell.is ? -1 : null;\n\t}\n\n\tfunction cellInCol(tableMap, colIndex) {\n\t\tconst oCol = [];\n\t\tfor (let r = 0; r < tableMap.length; r++) {\n\t\t\tconst row = tableMap[r];\n\t\t\toCol.push(row[colIndex]);\n\n\t\t\t// Avoid adding duplicate cells.\n\t\t\tif (row[colIndex].rowSpan > 1) r += row[colIndex].rowSpan - 1;\n\t\t}\n\t\treturn oCol;\n\t}\n\n\tfunction mergeCells(selection, mergeDirection, isDetect) {\n\t\tconst cells = getSelectedCells(selection);\n\n\t\t// Invalid merge request if:\n\t\t// 1. In batch mode despite that less than two selected.\n\t\t// 2. In solo mode while not exactly only one selected.\n\t\t// 3. Cells distributed in different table groups (e.g. from both thead and tbody).\n\t\tlet commonAncestor;\n\t\tif (\n\t\t\t(mergeDirection ? cells.length != 1 : cells.length < 2) ||\n\t\t\t((commonAncestor = selection.getCommonAncestor()) &&\n\t\t\t\tcommonAncestor.type == CKEDITOR.NODE_ELEMENT &&\n\t\t\t\tcommonAncestor.is('table'))\n\t\t)\n\t\t\treturn false;\n\n\t\tlet cell;\n\n\t\tconst firstCell = cells[0];\n\n\t\tconst table = firstCell.getAscendant('table');\n\n\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\tconst mapHeight = map.length;\n\n\t\tconst mapWidth = map[0].length;\n\n\t\tconst startRow = firstCell.getParent().$.rowIndex;\n\n\t\tconst startColumn = cellInRow(map, startRow, firstCell);\n\n\t\tif (mergeDirection) {\n\t\t\tlet targetCell;\n\t\t\ttry {\n\t\t\t\tconst rowspan =\n\t\t\t\t\tparseInt(firstCell.getAttribute('rowspan'), 10) || 1;\n\t\t\t\tconst colspan =\n\t\t\t\t\tparseInt(firstCell.getAttribute('colspan'), 10) || 1;\n\n\t\t\t\ttargetCell =\n\t\t\t\t\tmap[\n\t\t\t\t\t\tmergeDirection == 'up'\n\t\t\t\t\t\t\t? startRow - rowspan\n\t\t\t\t\t\t\t: mergeDirection == 'down'\n\t\t\t\t\t\t\t? startRow + rowspan\n\t\t\t\t\t\t\t: startRow\n\t\t\t\t\t][\n\t\t\t\t\t\tmergeDirection == 'left'\n\t\t\t\t\t\t\t? startColumn - colspan\n\t\t\t\t\t\t\t: mergeDirection == 'right'\n\t\t\t\t\t\t\t? startColumn + colspan\n\t\t\t\t\t\t\t: startColumn\n\t\t\t\t\t];\n\t\t\t} catch (er) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// 1. No cell could be merged.\n\t\t\t// 2. Same cell actually.\n\t\t\tif (!targetCell || firstCell.$ == targetCell) return false;\n\n\t\t\t// Sort in map order regardless of the DOM sequence.\n\t\t\tcells[\n\t\t\t\tmergeDirection == 'up' || mergeDirection == 'left'\n\t\t\t\t\t? 'unshift'\n\t\t\t\t\t: 'push'\n\t\t\t](new CKEDITOR.dom.element(targetCell));\n\t\t}\n\n\t\t// Start from here are merging way ignorance (merge up/right, batch merge).\n\t\tconst doc = firstCell.getDocument();\n\n\t\tlet lastRowIndex = startRow;\n\n\t\tlet totalRowSpan = 0;\n\n\t\tlet totalColSpan = 0;\n\n\t\t// Use a documentFragment as buffer when appending cell contents.\n\n\t\tconst frag = !isDetect && new CKEDITOR.dom.documentFragment(doc);\n\n\t\tlet dimension = 0;\n\n\t\tfor (let i = 0; i < cells.length; i++) {\n\t\t\tcell = cells[i];\n\n\t\t\tconst tr = cell.getParent();\n\n\t\t\tconst cellFirstChild = cell.getFirst();\n\n\t\t\tconst colSpan = cell.$.colSpan;\n\n\t\t\tconst rowSpan = cell.$.rowSpan;\n\n\t\t\tconst rowIndex = tr.$.rowIndex;\n\n\t\t\tconst colIndex = cellInRow(map, rowIndex, cell);\n\n\t\t\t// Accumulated the actual places taken by all selected cells.\n\t\t\tdimension += colSpan * rowSpan;\n\t\t\t// Accumulated the maximum virtual spans from column and row.\n\t\t\ttotalColSpan = Math.max(\n\t\t\t\ttotalColSpan,\n\t\t\t\tcolIndex - startColumn + colSpan\n\t\t\t);\n\t\t\ttotalRowSpan = Math.max(\n\t\t\t\ttotalRowSpan,\n\t\t\t\trowIndex - startRow + rowSpan\n\t\t\t);\n\n\t\t\tif (!isDetect) {\n\t\t\t\t// Trim all cell fillers and check to remove empty cells.\n\t\t\t\tif ((trimCell(cell), cell.getChildren().count())) {\n\t\t\t\t\t// Merge vertically cells as two separated paragraphs.\n\t\t\t\t\tif (\n\t\t\t\t\t\trowIndex != lastRowIndex &&\n\t\t\t\t\t\tcellFirstChild &&\n\t\t\t\t\t\t!(\n\t\t\t\t\t\t\tcellFirstChild.isBlockBoundary &&\n\t\t\t\t\t\t\tcellFirstChild.isBlockBoundary({br: 1})\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst last = frag.getLast(\n\t\t\t\t\t\t\tCKEDITOR.dom.walker.whitespaces(true)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (last && !(last.is && last.is('br')))\n\t\t\t\t\t\t\tfrag.append('br');\n\t\t\t\t\t}\n\n\t\t\t\t\tcell.moveChildren(frag);\n\t\t\t\t}\n\t\t\t\tif (i) {\n\t\t\t\t\tcell.remove();\n\t\t\t\t} else {\n\t\t\t\t\tcell.setHtml('');\n\t\t\t\t}\n\t\t\t}\n\t\t\tlastRowIndex = rowIndex;\n\t\t}\n\n\t\tif (!isDetect) {\n\t\t\tfrag.moveChildren(firstCell);\n\n\t\t\tfirstCell.appendBogus();\n\n\t\t\tif (totalColSpan >= mapWidth) firstCell.removeAttribute('rowSpan');\n\t\t\telse firstCell.$.rowSpan = totalRowSpan;\n\n\t\t\tif (totalRowSpan >= mapHeight) firstCell.removeAttribute('colSpan');\n\t\t\telse firstCell.$.colSpan = totalColSpan;\n\n\t\t\t// Swip empty <tr> left at the end of table due to the merging.\n\t\t\tconst trs = new CKEDITOR.dom.nodeList(table.$.rows);\n\n\t\t\tlet count = trs.count();\n\n\t\t\tfor (let i = count - 1; i >= 0; i--) {\n\t\t\t\tconst tailTr = trs.getItem(i);\n\t\t\t\tif (!tailTr.$.cells.length) {\n\t\t\t\t\ttailTr.remove();\n\t\t\t\t\tcount++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn firstCell;\n\t\t}\n\t\t// Be able to merge cells only if actual dimension of selected\n\t\t// cells equals to the caculated rectangle.\n\t\telse {\n\t\t\treturn totalRowSpan * totalColSpan == dimension;\n\t\t}\n\t}\n\n\tfunction verticalSplitCell(selection, isDetect) {\n\t\tconst cells = getSelectedCells(selection);\n\t\tif (cells.length > 1) return false;\n\t\telse if (isDetect) return true;\n\n\t\tconst cell = cells[0];\n\n\t\tconst tr = cell.getParent();\n\n\t\tconst table = tr.getAscendant('table');\n\n\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\tconst rowIndex = tr.$.rowIndex;\n\n\t\tconst colIndex = cellInRow(map, rowIndex, cell);\n\n\t\tconst rowSpan = cell.$.rowSpan;\n\n\t\tlet newCell;\n\n\t\tlet newRowSpan;\n\n\t\tlet newCellRowSpan;\n\n\t\tlet newRowIndex;\n\n\t\tif (rowSpan > 1) {\n\t\t\tnewRowSpan = Math.ceil(rowSpan / 2);\n\t\t\tnewCellRowSpan = Math.floor(rowSpan / 2);\n\t\t\tnewRowIndex = rowIndex + newRowSpan;\n\t\t\tconst newCellTr = new CKEDITOR.dom.element(\n\t\t\t\ttable.$.rows[newRowIndex]\n\t\t\t);\n\n\t\t\tconst newCellRow = cellInRow(map, newRowIndex);\n\n\t\t\tlet candidateCell;\n\n\t\t\tnewCell = cell.clone();\n\n\t\t\t// Figure out where to insert the new cell by checking the vitual row.\n\t\t\tfor (let c = 0; c < newCellRow.length; c++) {\n\t\t\t\tcandidateCell = newCellRow[c];\n\t\t\t\t// Catch first cell actually following the column.\n\t\t\t\tif (candidateCell.parentNode == newCellTr.$ && c > colIndex) {\n\t\t\t\t\tnewCell.insertBefore(\n\t\t\t\t\t\tnew CKEDITOR.dom.element(candidateCell)\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tcandidateCell = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The destination row is empty, append at will.\n\t\t\tif (!candidateCell) newCellTr.append(newCell);\n\t\t} else {\n\t\t\tnewCellRowSpan = newRowSpan = 1;\n\n\t\t\tconst newCellTr = tr.clone();\n\t\t\tnewCellTr.insertAfter(tr);\n\t\t\tnewCellTr.append((newCell = cell.clone()));\n\n\t\t\tconst cellsInSameRow = cellInRow(map, rowIndex);\n\t\t\tfor (let i = 0; i < cellsInSameRow.length; i++)\n\t\t\t\tcellsInSameRow[i].rowSpan++;\n\t\t}\n\n\t\tnewCell.appendBogus();\n\n\t\tcell.$.rowSpan = newRowSpan;\n\t\tnewCell.$.rowSpan = newCellRowSpan;\n\t\tif (newRowSpan == 1) cell.removeAttribute('rowSpan');\n\t\tif (newCellRowSpan == 1) newCell.removeAttribute('rowSpan');\n\n\t\treturn newCell;\n\t}\n\n\tfunction horizontalSplitCell(selection, isDetect) {\n\t\tconst cells = getSelectedCells(selection);\n\t\tif (cells.length > 1) return false;\n\t\telse if (isDetect) return true;\n\n\t\tconst cell = cells[0];\n\n\t\tconst tr = cell.getParent();\n\n\t\tconst table = tr.getAscendant('table');\n\n\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\tconst rowIndex = tr.$.rowIndex;\n\n\t\tconst colIndex = cellInRow(map, rowIndex, cell);\n\n\t\tconst colSpan = cell.$.colSpan;\n\n\t\tlet newColSpan;\n\n\t\tlet newCellColSpan;\n\n\t\tif (colSpan > 1) {\n\t\t\tnewColSpan = Math.ceil(colSpan / 2);\n\t\t\tnewCellColSpan = Math.floor(colSpan / 2);\n\t\t} else {\n\t\t\tnewCellColSpan = newColSpan = 1;\n\t\t\tconst cellsInSameCol = cellInCol(map, colIndex);\n\t\t\tfor (let i = 0; i < cellsInSameCol.length; i++)\n\t\t\t\tcellsInSameCol[i].colSpan++;\n\t\t}\n\t\tconst newCell = cell.clone();\n\t\tnewCell.insertAfter(cell);\n\t\tnewCell.appendBogus();\n\n\t\tcell.$.colSpan = newColSpan;\n\t\tnewCell.$.colSpan = newCellColSpan;\n\t\tif (newColSpan == 1) cell.removeAttribute('colSpan');\n\t\tif (newCellColSpan == 1) newCell.removeAttribute('colSpan');\n\n\t\treturn newCell;\n\t}\n\n\tCKEDITOR.plugins.add('ae_tabletools', {\n\t\tinit(editor) {\n\t\t\tfunction createDef(def) {\n\t\t\t\treturn CKEDITOR.tools.extend(def || {}, {\n\t\t\t\t\tcontextSensitive: 1,\n\t\t\t\t\trefresh(editor, path) {\n\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\tpath.contains({td: 1, th: 1}, 1)\n\t\t\t\t\t\t\t\t? CKEDITOR.TRISTATE_OFF\n\t\t\t\t\t\t\t\t: CKEDITOR.TRISTATE_DISABLED\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\tfunction addCmd(name, def) {\n\t\t\t\tlet cmd = editor.getCommand(name);\n\n\t\t\t\tif (cmd) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcmd = editor.addCommand(name, def);\n\t\t\t\teditor.addFeature(cmd);\n\t\t\t}\n\n\t\t\taddCmd(\n\t\t\t\t'rowDelete',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tconst selection = editor.getSelection();\n\t\t\t\t\t\tplaceCursorInCell(deleteRows(selection));\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'rowInsertBefore',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tinsertRow(editor, true);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'rowInsertAfter',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tinsertRow(editor);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'columnDelete',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tconst selection = editor.getSelection();\n\t\t\t\t\t\tconst element = deleteColumns(selection);\n\t\t\t\t\t\tif (element) {\n\t\t\t\t\t\t\tplaceCursorInCell(element, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'columnInsertBefore',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tinsertColumn(editor, true);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'columnInsertAfter',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tinsertColumn(editor);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellDelete',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tconst selection = editor.getSelection();\n\t\t\t\t\t\tdeleteCells(selection);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellMerge',\n\t\t\t\tcreateDef({\n\t\t\t\t\tallowedContent: 'td[colspan,rowspan]',\n\t\t\t\t\trequiredContent: 'td[colspan,rowspan]',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tplaceCursorInCell(\n\t\t\t\t\t\t\tmergeCells(editor.getSelection()),\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellMergeRight',\n\t\t\t\tcreateDef({\n\t\t\t\t\tallowedContent: 'td[colspan]',\n\t\t\t\t\trequiredContent: 'td[colspan]',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tplaceCursorInCell(\n\t\t\t\t\t\t\tmergeCells(editor.getSelection(), 'right'),\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellMergeDown',\n\t\t\t\tcreateDef({\n\t\t\t\t\tallowedContent: 'td[rowspan]',\n\t\t\t\t\trequiredContent: 'td[rowspan]',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tplaceCursorInCell(\n\t\t\t\t\t\t\tmergeCells(editor.getSelection(), 'down'),\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellVerticalSplit',\n\t\t\t\tcreateDef({\n\t\t\t\t\tallowedContent: 'td[rowspan]',\n\t\t\t\t\trequiredContent: 'td[rowspan]',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tplaceCursorInCell(\n\t\t\t\t\t\t\tverticalSplitCell(editor.getSelection())\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellHorizontalSplit',\n\t\t\t\tcreateDef({\n\t\t\t\t\tallowedContent: 'td[colspan]',\n\t\t\t\t\trequiredContent: 'td[colspan]',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tplaceCursorInCell(\n\t\t\t\t\t\t\thorizontalSplitCell(editor.getSelection())\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellInsertBefore',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tconst selection = editor.getSelection();\n\t\t\t\t\t\tinsertCell(selection, true);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellInsertAfter',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tconst selection = editor.getSelection();\n\t\t\t\t\t\tinsertCell(selection);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\t\t},\n\n\t\tgetSelectedCells,\n\t});\n}\n\n/**\n * Create a two-dimension array that reflects the actual layout of table cells,\n * with cell spans, with mappings to the original td elements.\n *\n * @param {CKEDITOR.dom.element} table\n * @member CKEDITOR.tools\n */\nCKEDITOR.tools.buildTableMap = function(table) {\n\tconst aRows = table.$.rows;\n\n\t// Row and Column counters.\n\tlet r = -1;\n\n\tconst aMap = [];\n\n\tfor (let i = 0; i < aRows.length; i++) {\n\t\tr++;\n\t\tif (!aMap[r]) {\n\t\t\taMap[r] = [];\n\t\t}\n\n\t\tlet c = -1;\n\n\t\tfor (let j = 0; j < aRows[i].cells.length; j++) {\n\t\t\tconst oCell = aRows[i].cells[j];\n\n\t\t\tc++;\n\t\t\twhile (aMap[r][c]) c++;\n\n\t\t\tconst iColSpan = isNaN(oCell.colSpan) ? 1 : oCell.colSpan;\n\t\t\tconst iRowSpan = isNaN(oCell.rowSpan) ? 1 : oCell.rowSpan;\n\n\t\t\tfor (let rs = 0; rs < iRowSpan; rs++) {\n\t\t\t\tif (!aMap[r + rs]) aMap[r + rs] = [];\n\n\t\t\t\tfor (let cs = 0; cs < iColSpan; cs++) {\n\t\t\t\t\taMap[r + rs][c + cs] = aRows[i].cells[j];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc += iColSpan - 1;\n\t\t}\n\t}\n\treturn aMap;\n};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport './button.jsx';\n\nimport './menu-button.jsx';\n\nimport './menu.jsx';\n\nimport './panel-menu-button.jsx';\n\nimport './richcombo.jsx';\n\nimport './uibridge';\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_buttonbridge')) {\n\tconst BUTTON_DEFS = {};\n\n\t/**\n\t * Generates a ButtonBridge React class for a given button definition if it has not been\n\t * already created based on the button name and definition.\n\t *\n\t * @private\n\t * @method generateButtonBridge\n\t * @param {String} buttonName The button's name\n\t * @param {Object} buttonDefinition The button's definition\n\t * @return {Object} The generated or already existing React Button Class\n\t */\n\n\tfunction generateButtonBridge(buttonName, buttonDefinition, editor) {\n\t\tlet ButtonBridge = AlloyEditor.Buttons[buttonName];\n\n\t\tBUTTON_DEFS[editor.name] = BUTTON_DEFS[editor.name] || {};\n\t\tBUTTON_DEFS[editor.name][buttonName] =\n\t\t\tBUTTON_DEFS[editor.name][buttonName] || buttonDefinition;\n\n\t\tif (!ButtonBridge) {\n\t\t\tButtonBridge = class extends React.Component {\n\t\t\t\tstatic contextType = EditorContext;\n\n\t\t\t\tstatic displayName = buttonName;\n\n\t\t\t\tstatic key = buttonName;\n\n\t\t\t\t// API not yet implemented inside the button\n\t\t\t\t// bridge. By mocking the unsupported method, we prevent\n\t\t\t\t// plugins from crashing if they make use of it.\n\t\t\t\ttoFeature() {}\n\n\t\t\t\trender() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst buttonClassName = 'ae-button ae-button-bridge';\n\n\t\t\t\t\tconst buttonDisplayName =\n\t\t\t\t\t\tBUTTON_DEFS[editor.name][buttonName].name ||\n\t\t\t\t\t\tBUTTON_DEFS[editor.name][buttonName].command ||\n\t\t\t\t\t\tbuttonName;\n\n\t\t\t\t\tconst buttonLabel =\n\t\t\t\t\t\tBUTTON_DEFS[editor.name][buttonName].label;\n\n\t\t\t\t\tconst buttonType = 'button-' + buttonDisplayName;\n\n\t\t\t\t\tconst iconClassName = 'ae-icon-' + buttonDisplayName;\n\n\t\t\t\t\tconst iconStyle = {};\n\n\t\t\t\t\tconst cssStyle = CKEDITOR.skin.getIconStyle(\n\t\t\t\t\t\tbuttonDisplayName\n\t\t\t\t\t);\n\n\t\t\t\t\tif (cssStyle) {\n\t\t\t\t\t\tconst cssStyleParts = cssStyle.split(';');\n\n\t\t\t\t\t\ticonStyle.backgroundImage = cssStyleParts[0].substring(\n\t\t\t\t\t\t\tcssStyleParts[0].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t\ticonStyle.backgroundPosition = cssStyleParts[1].substring(\n\t\t\t\t\t\t\tcssStyleParts[1].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t\ticonStyle.backgroundSize = cssStyleParts[2].substring(\n\t\t\t\t\t\t\tcssStyleParts[2].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\taria-label={buttonLabel}\n\t\t\t\t\t\t\tclassName={buttonClassName}\n\t\t\t\t\t\t\tdata-type={buttonType}\n\t\t\t\t\t\t\tonClick={this._handleClick}\n\t\t\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\t\t\ttitle={buttonLabel}>\n\t\t\t\t\t\t\t<span className={iconClassName} style={iconStyle} />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t_handleClick = () => {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst buttonCommand =\n\t\t\t\t\t\tBUTTON_DEFS[editor.name][buttonName].command;\n\n\t\t\t\t\tconst buttonOnClick =\n\t\t\t\t\t\tBUTTON_DEFS[editor.name][buttonName].onClick;\n\n\t\t\t\t\tif (buttonOnClick) {\n\t\t\t\t\t\tbuttonOnClick.call(this);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teditor.execCommand(buttonCommand);\n\t\t\t\t\t}\n\n\t\t\t\t\teditor.fire('actionPerformed', this);\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tAlloyEditor.Buttons[buttonName] = ButtonBridge;\n\t\t}\n\n\t\treturn ButtonBridge;\n\t}\n\n\t/* istanbul ignore else */\n\tif (!CKEDITOR.plugins.get('button')) {\n\t\tCKEDITOR.UI_BUTTON = 'button';\n\n\t\tCKEDITOR.plugins.add('button', {});\n\t}\n\n\t/**\n\t * CKEditor plugin that bridges the support offered by CKEditor Button plugin. It takes over the\n\t * responsibility of registering and creating buttons via:\n\t * - editor.ui.addButton(name, definition)\n\t * - editor.ui.add(name, CKEDITOR.UI_BUTTON, definition)\n\t *\n\t * @class CKEDITOR.plugins.ae_buttonbridge\n\t * @requires CKEDITOR.plugins.ae_uibridge\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_buttonbridge', {\n\t\trequires: ['ae_uibridge'],\n\n\t\t/**\n\t\t * Set the add handler for UI_BUTTON to our own. We do this in the init phase to override\n\t\t * the one in the native plugin in case it's present.\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The CKEditor instance being initialized\n\t\t */\n\t\tbeforeInit(editor) {\n\t\t\teditor.ui.addButton = function(buttonName, buttonDefinition) {\n\t\t\t\tthis.add(buttonName, CKEDITOR.UI_BUTTON, buttonDefinition);\n\t\t\t};\n\n\t\t\teditor.ui.addHandler(CKEDITOR.UI_BUTTON, {\n\t\t\t\tadd: generateButtonBridge,\n\t\t\t\tcreate(buttonDefinition) {\n\t\t\t\t\tconst buttonName =\n\t\t\t\t\t\t'buttonBridge' + ((Math.random() * 1e9) >>> 0);\n\t\t\t\t\tconst ButtonBridge = generateButtonBridge(\n\t\t\t\t\t\tbuttonName,\n\t\t\t\t\t\tbuttonDefinition\n\t\t\t\t\t);\n\n\t\t\t\t\treturn new ButtonBridge();\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonDropdown from '../buttons/button-dropdown.jsx';\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_menubuttonbridge')) {\n\tconst MENUBUTTON_DEFS = {};\n\n\t/**\n\t * Generates a MenuButtonBridge React class for a given menuButton definition if it has not been\n\t * already created based on the button name and definition.\n\t *\n\t * @private\n\t * @method generateMenuButtonBridge\n\t * @param {String} menuButtonName The menuButton's name\n\t * @param {Object} menuButtonDefinition The menuButton's definition\n\t * @return {Object} The generated or already existing React MenuButton Class\n\t */\n\tfunction generateMenuButtonBridge(\n\t\tmenuButtonName,\n\t\tmenuButtonDefinition,\n\t\teditor\n\t) {\n\t\tlet MenuButtonBridge = AlloyEditor.Buttons[menuButtonName];\n\n\t\tMENUBUTTON_DEFS[editor.name] = MENUBUTTON_DEFS[editor.name] || {};\n\t\tMENUBUTTON_DEFS[editor.name][menuButtonName] =\n\t\t\tMENUBUTTON_DEFS[editor.name][menuButtonName] ||\n\t\t\tmenuButtonDefinition;\n\n\t\tif (!MenuButtonBridge) {\n\t\t\tMenuButtonBridge = class extends React.Component {\n\t\t\t\tstatic contextType = EditorContext;\n\n\t\t\t\tstatic displayName = menuButtonName;\n\n\t\t\t\tstatic key = menuButtonName;\n\n\t\t\t\t// API not yet implemented inside the menubutton\n\t\t\t\t// bridge. By mocking the unsupported method, we prevent\n\t\t\t\t// plugins from crashing if they make use of it.\n\t\t\t\ttoFeature() {}\n\n\t\t\t\trender() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst panelMenuButtonDisplayName =\n\t\t\t\t\t\tMENUBUTTON_DEFS[editor.name][menuButtonName].name ||\n\t\t\t\t\t\tMENUBUTTON_DEFS[editor.name][menuButtonName].command ||\n\t\t\t\t\t\tmenuButtonName;\n\n\t\t\t\t\tconst buttonClassName = 'ae-button ae-button-bridge';\n\n\t\t\t\t\tconst iconClassName =\n\t\t\t\t\t\t'ae-icon-' + panelMenuButtonDisplayName;\n\n\t\t\t\t\tconst iconStyle = {};\n\n\t\t\t\t\tconst cssStyle = CKEDITOR.skin.getIconStyle(\n\t\t\t\t\t\tpanelMenuButtonDisplayName\n\t\t\t\t\t);\n\n\t\t\t\t\tif (cssStyle) {\n\t\t\t\t\t\tconst cssStyleParts = cssStyle.split(';');\n\n\t\t\t\t\t\ticonStyle.backgroundImage = cssStyleParts[0].substring(\n\t\t\t\t\t\t\tcssStyleParts[0].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t\ticonStyle.backgroundPosition = cssStyleParts[1].substring(\n\t\t\t\t\t\t\tcssStyleParts[1].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t\ticonStyle.backgroundSize = cssStyleParts[2].substring(\n\t\t\t\t\t\t\tcssStyleParts[2].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\t\t\t\taria-label={\n\t\t\t\t\t\t\t\t\tMENUBUTTON_DEFS[editor.name][menuButtonName]\n\t\t\t\t\t\t\t\t\t\t.label\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tclassName={buttonClassName}\n\t\t\t\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\tMENUBUTTON_DEFS[editor.name][menuButtonName]\n\t\t\t\t\t\t\t\t\t\t.label\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName={iconClassName}\n\t\t\t\t\t\t\t\t\tstyle={iconStyle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t{this.props.expanded && (\n\t\t\t\t\t\t\t\t<ButtonDropdown\n\t\t\t\t\t\t\t\t\tonDismiss={this.props.toggleDropdown}>\n\t\t\t\t\t\t\t\t\t{this._getMenuItems()}\n\t\t\t\t\t\t\t\t</ButtonDropdown>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t_getMenuItems() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\t\t\t\tconst items = menuButtonDefinition.onMenu();\n\t\t\t\t\tconst menuItems = Object.keys(items).map(key => {\n\t\t\t\t\t\tconst menuItem = editor.getMenuItem(key);\n\n\t\t\t\t\t\tif (!menuItem) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst menuItemDefinition =\n\t\t\t\t\t\t\tmenuItem.definition || menuItem;\n\t\t\t\t\t\tconst menuItemState = items[key];\n\n\t\t\t\t\t\tconst className =\n\t\t\t\t\t\t\t'ae-toolbar-element ' +\n\t\t\t\t\t\t\t(menuItemState === CKEDITOR.TRISTATE_ON\n\t\t\t\t\t\t\t\t? 'active'\n\t\t\t\t\t\t\t\t: '');\n\t\t\t\t\t\tconst disabled =\n\t\t\t\t\t\t\tmenuItemState === CKEDITOR.TRISTATE_DISABLED;\n\t\t\t\t\t\tconst onClick = function() {\n\t\t\t\t\t\t\tif (menuItemDefinition.command) {\n\t\t\t\t\t\t\t\teditor.execCommand(menuItemDefinition.command);\n\t\t\t\t\t\t\t} else if (menuItemDefinition.onClick) {\n\t\t\t\t\t\t\t\tmenuItemDefinition.onClick.apply(\n\t\t\t\t\t\t\t\t\tmenuItemDefinition\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={menuItem.name} role=\"option\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\t\t\tonClick={onClick}>\n\t\t\t\t\t\t\t\t\t{menuItemDefinition.label}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn menuItems;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tAlloyEditor.Buttons[menuButtonName] = MenuButtonBridge;\n\t\t}\n\n\t\treturn MenuButtonBridge;\n\t}\n\n\t/* istanbul ignore else */\n\tif (!CKEDITOR.plugins.get('menubutton')) {\n\t\tCKEDITOR.UI_MENU_BUTTON = 'menubutton';\n\n\t\tCKEDITOR.plugins.add('menubutton', {});\n\t}\n\n\t/**\n\t * CKEditor plugin that bridges the support offered by CKEditor MenuButton plugin. It takes over the\n\t * responsibility of registering and creating menuButtons via:\n\t * - editor.ui.addMenuButton(name, definition)\n\t * - editor.ui.add(name, CKEDITOR.UI_MENUBUTTON, definition)\n\t *\n\t * @class CKEDITOR.plugins.ae_menubuttonbridge\n\t * @requires CKEDITOR.plugins.ae_uibridge\n\t * @requires CKEDITOR.plugins.ae_menubridge\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_menubuttonbridge', {\n\t\trequires: ['ae_uibridge', 'ae_menubridge'],\n\n\t\t/**\n\t\t * Set the add handler for UI_MENUBUTTON to our own. We do this in the init phase to override\n\t\t * the one in the native plugin in case it's present.\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The CKEditor instance being initialized\n\t\t */\n\t\tbeforeInit(editor) {\n\t\t\teditor.ui.addMenuButton = function(\n\t\t\t\tmenuButtonName,\n\t\t\t\tmenuButtonDefinition\n\t\t\t) {\n\t\t\t\tthis.add(\n\t\t\t\t\tmenuButtonName,\n\t\t\t\t\tCKEDITOR.UI_MENUBUTTON,\n\t\t\t\t\tmenuButtonDefinition\n\t\t\t\t);\n\t\t\t};\n\n\t\t\teditor.ui.addHandler(CKEDITOR.UI_MENUBUTTON, {\n\t\t\t\tadd: generateMenuButtonBridge,\n\t\t\t\tcreate(menuButtonDefinition) {\n\t\t\t\t\tconst menuButtonName =\n\t\t\t\t\t\t'buttonBridge' + ((Math.random() * 1e9) >>> 0);\n\t\t\t\t\tconst MenuButtonBridge = generateMenuButtonBridge(\n\t\t\t\t\t\tmenuButtonName,\n\t\t\t\t\t\tmenuButtonDefinition\n\t\t\t\t\t);\n\n\t\t\t\t\treturn new MenuButtonBridge();\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_menubridge')) {\n\t/**\n\t * CKEditor plugin that bridges the support offered by CKEditor Menu plugin. It takes over the\n\t * responsibility of adding, removing and retrieving menu groups and items\n\t * - editor.addMenuGroup(name, order)\n\t * - editor.addMenuItem(name, definition)\n\t * - editor.addMenuItems(definitions)\n\t * - editor.getMenuItem(name)\n\t * - editor.removeMenuItem(name)\n\t *\n\t * @class CKEDITOR.plugins.ae_menubridge\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_menubridge', {\n\t\t/**\n\t\t * Set the add handler for UI_BUTTON to our own. We do this in the init phase to override\n\t\t * the one in the native plugin in case it's present.\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The CKEditor instance being initialized\n\t\t */\n\t\tbeforeInit(editor) {\n\t\t\t// Do nothing if the real menu plugin is present\n\t\t\tif (CKEDITOR.plugins.get('menu')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst groups = [];\n\t\t\tconst groupsOrder = (editor._.menuGroups = {});\n\t\t\tconst menuItems = (editor._.menuItems = {});\n\n\t\t\tfor (let i = 0; i < groups.length; i++) {\n\t\t\t\tgroupsOrder[groups[i]] = i + 1;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Registers an item group to the editor context menu in order to make it\n\t\t\t * possible to associate it with menu items later.\n\t\t\t *\n\t\t\t * @method addMenuGroup\n\t\t\t * @param {String} name Specify a group name.\n\t\t\t * @param {Number} [order=100] Define the display sequence of this group\n\t\t\t * inside the menu. A smaller value gets displayed first.\n\t\t\t */\n\t\t\teditor.addMenuGroup = function(name, order) {\n\t\t\t\tgroupsOrder[name] = order || 100;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Adds an item from the specified definition to the editor context menu.\n\t\t\t *\n\t\t\t * @method addMenuItem\n\t\t\t * @param {String} name The menu item name.\n\t\t\t * @param {Object} definition The menu item definition.\n\t\t\t */\n\t\t\teditor.addMenuItem = function(name, definition) {\n\t\t\t\tif (groupsOrder[definition.group]) {\n\t\t\t\t\tmenuItems[name] = {\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tdefinition,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Adds one or more items from the specified definition object to the editor context menu.\n\t\t\t *\n\t\t\t * @method addMenuItems\n\t\t\t * @param {Object} definitions Object where keys are used as itemName and corresponding values as definition for a {@link #addMenuItem} call.\n\t\t\t */\n\t\t\teditor.addMenuItems = function(definitions) {\n\t\t\t\tfor (const itemName in definitions) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\tdefinitions,\n\t\t\t\t\t\t\titemName\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.addMenuItem(itemName, definitions[itemName]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Retrieves a particular menu item definition from the editor context menu.\n\t\t\t *\n\t\t\t * @method getMenuItem\n\t\t\t * @param {String} name The name of the desired menu item.\n\t\t\t * @return {Object}\n\t\t\t */\n\t\t\teditor.getMenuItem = function(name) {\n\t\t\t\treturn menuItems[name];\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Removes a particular menu item added before from the editor context menu.\n\t\t\t *\n\t\t\t * @method  removeMenuItem\n\t\t\t * @param {String} name The name of the desired menu item.\n\t\t\t */\n\t\t\teditor.removeMenuItem = function(name) {\n\t\t\t\tdelete menuItems[name];\n\t\t\t};\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonDropdown from '../buttons/button-dropdown.jsx';\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_panelmenubuttonbridge')) {\n\tconst PANEL_MENU_DEFS = {};\n\n\t/**\n\t * Generates a PanelMenuButtonBridge React class for a given panelmenubutton definition if it has not been\n\t * already created based on the panelmenubutton name and definition.\n\t *\n\t * @private\n\t * @method generatePanelMenuButtonBridge\n\t * @param {String} panelMenuButtonName The panel button name\n\t * @param {Object} panelMenuButtonDefinition The panel button definition\n\t * @return {Object} The generated or already existing React PanelMenuButton Class\n\t */\n\tconst generatePanelMenuButtonBridge = function(\n\t\tpanelMenuButtonName,\n\t\tpanelMenuButtonDefinition,\n\t\teditor\n\t) {\n\t\tlet PanelMenuButtonBridge = AlloyEditor.Buttons[panelMenuButtonName];\n\n\t\tPANEL_MENU_DEFS[editor.name] = PANEL_MENU_DEFS[editor.name] || {};\n\t\tPANEL_MENU_DEFS[editor.name][panelMenuButtonName] =\n\t\t\tPANEL_MENU_DEFS[editor.name][panelMenuButtonName] ||\n\t\t\tpanelMenuButtonDefinition;\n\n\t\tif (!PanelMenuButtonBridge) {\n\t\t\tPanelMenuButtonBridge = class extends React.Component {\n\t\t\t\tstatic contextType = EditorContext;\n\n\t\t\t\tstatic displayName = panelMenuButtonName;\n\n\t\t\t\tstatic key = panelMenuButtonName;\n\n\t\t\t\t// API not yet implemented inside the panel menu button bridge. By mocking the unsupported methods, we\n\t\t\t\t// prevent plugins from crashing if they make use of them.\n\t\t\t\tcreatePanel() {}\n\n\t\t\t\trender() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst panelMenuButtonDisplayName =\n\t\t\t\t\t\tPANEL_MENU_DEFS[editor.name][panelMenuButtonName]\n\t\t\t\t\t\t\t.name ||\n\t\t\t\t\t\tPANEL_MENU_DEFS[editor.name][panelMenuButtonName]\n\t\t\t\t\t\t\t.command ||\n\t\t\t\t\t\tpanelMenuButtonName;\n\n\t\t\t\t\tconst buttonClassName = 'ae-button ae-button-bridge';\n\n\t\t\t\t\tconst iconClassName =\n\t\t\t\t\t\t'ae-icon-' + panelMenuButtonDisplayName;\n\n\t\t\t\t\tconst iconStyle = {};\n\n\t\t\t\t\tconst cssStyle = CKEDITOR.skin.getIconStyle(\n\t\t\t\t\t\tpanelMenuButtonDisplayName\n\t\t\t\t\t);\n\n\t\t\t\t\tif (cssStyle) {\n\t\t\t\t\t\tconst cssStyleParts = cssStyle.split(';');\n\n\t\t\t\t\t\ticonStyle.backgroundImage = cssStyleParts[0].substring(\n\t\t\t\t\t\t\tcssStyleParts[0].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t\ticonStyle.backgroundPosition = cssStyleParts[1].substring(\n\t\t\t\t\t\t\tcssStyleParts[1].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t\ticonStyle.backgroundSize = cssStyleParts[2].substring(\n\t\t\t\t\t\t\tcssStyleParts[2].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet panel;\n\n\t\t\t\t\tif (this.props.expanded) {\n\t\t\t\t\t\tpanel = this._getPanel();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\t\t\t\taria-label={\n\t\t\t\t\t\t\t\t\tPANEL_MENU_DEFS[editor.name][\n\t\t\t\t\t\t\t\t\t\tpanelMenuButtonName\n\t\t\t\t\t\t\t\t\t].label\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tclassName={buttonClassName}\n\t\t\t\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\tPANEL_MENU_DEFS[editor.name][\n\t\t\t\t\t\t\t\t\t\tpanelMenuButtonName\n\t\t\t\t\t\t\t\t\t].label\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName={iconClassName}\n\t\t\t\t\t\t\t\t\tstyle={iconStyle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t{panel}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t_getPanel() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst panelMenuButtonOnBlock =\n\t\t\t\t\t\tPANEL_MENU_DEFS[editor.name][panelMenuButtonName]\n\t\t\t\t\t\t\t.onBlock;\n\n\t\t\t\t\tconst panel = {\n\t\t\t\t\t\thide: this.props.toggleDropdown,\n\t\t\t\t\t\tshow: this.props.toggleDropdown,\n\t\t\t\t\t};\n\n\t\t\t\t\tconst blockElement = new CKEDITOR.dom.element('div');\n\n\t\t\t\t\tconst block = {\n\t\t\t\t\t\telement: blockElement,\n\t\t\t\t\t\tkeys: {},\n\t\t\t\t\t};\n\n\t\t\t\t\t/* istanbul ignore else */\n\t\t\t\t\tif (panelMenuButtonOnBlock) {\n\t\t\t\t\t\tpanelMenuButtonOnBlock.call(this, panel, block);\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO\n\t\t\t\t\t// Use block.keys to configure the panel keyboard navigation\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ButtonDropdown onDismiss={this.props.toggleDropdown}>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={blockElement.getAttribute('class')}\n\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t__html: blockElement.getHtml(),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ButtonDropdown>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tAlloyEditor.Buttons[panelMenuButtonName] = PanelMenuButtonBridge;\n\t\t}\n\n\t\treturn PanelMenuButtonBridge;\n\t};\n\n\t/* istanbul ignore else */\n\tif (!CKEDITOR.plugins.get('panelmenubutton')) {\n\t\tCKEDITOR.UI_PANELBUTTON = 'panelmenubutton';\n\n\t\tCKEDITOR.plugins.add('panelmenubutton', {});\n\t}\n\n\t/* istanbul ignore else */\n\tif (!CKEDITOR.plugins.get('panelbutton')) {\n\t\tCKEDITOR.UI_PANELBUTTON = 'panelbutton';\n\n\t\tCKEDITOR.plugins.add('panelbutton', {});\n\t}\n\n\t/**\n\t * CKEditor plugin that bridges the support offered by CKEditor PanelButton plugin. It takes over the\n\t * responsibility of registering and creating buttons via:\n\t * - editor.ui.addPanelMenuButton(name, definition)\n\t * - editor.ui.add(name, CKEDITOR.UI_PANELBUTTON, definition)\n\t *\n\t * @class CKEDITOR.plugins.ae_panelmenubuttonbridge\n\t * @requires CKEDITOR.plugins.ae_uibridge\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_panelmenubuttonbridge', {\n\t\trequires: ['ae_uibridge'],\n\n\t\t/**\n\t\t * Set the add handler for UI_PANELBUTTON to our own. We do this in the init phase to override\n\t\t * the one in the native plugin in case it's present\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The CKEditor instance being initialized\n\t\t */\n\t\tbeforeInit(editor) {\n\t\t\teditor.ui.addPanelMenuButton = function(\n\t\t\t\tpanelMenuButtonName,\n\t\t\t\tpanelMenuButtonDefinition\n\t\t\t) {\n\t\t\t\tthis.add(\n\t\t\t\t\tpanelMenuButtonName,\n\t\t\t\t\tCKEDITOR.UI_PANELBUTTON,\n\t\t\t\t\tpanelMenuButtonDefinition\n\t\t\t\t);\n\t\t\t};\n\n\t\t\teditor.ui.addHandler(CKEDITOR.UI_PANELBUTTON, {\n\t\t\t\tadd: generatePanelMenuButtonBridge,\n\t\t\t\tcreate(panelMenuButtonDefinition) {\n\t\t\t\t\tconst panelMenuButtonName =\n\t\t\t\t\t\t'panelMenuButtonBridge' + ((Math.random() * 1e9) >>> 0);\n\t\t\t\t\tconst PanelMenuButtonBridge = generatePanelMenuButtonBridge(\n\t\t\t\t\t\tpanelMenuButtonName,\n\t\t\t\t\t\tpanelMenuButtonDefinition\n\t\t\t\t\t);\n\n\t\t\t\t\treturn new PanelMenuButtonBridge();\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonDropdown from '../buttons/button-dropdown.jsx';\nimport ButtonIcon from '../buttons/button-icon.jsx';\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_richcombobridge')) {\n\tconst RICH_COMBO_DEFS = {};\n\n\t/**\n\t * Generates a RichComboBridge React class for a given richcombo definition if it has not been\n\t * already created based on the richcombo name and definition.\n\t *\n\t * @method generateRichComboBridge\n\t * @private\n\t * @param {String} richComboName The rich combo name\n\t * @param {Object} richComboDefinition The rich combo definition\n\t * @return {Object} The generated or already existing React RichCombo Class\n\t */\n\tconst generateRichComboBridge = function(\n\t\trichComboName,\n\t\trichComboDefinition,\n\t\teditor\n\t) {\n\t\tlet RichComboBridge = AlloyEditor.Buttons[richComboName];\n\n\t\tRICH_COMBO_DEFS[editor.name] = RICH_COMBO_DEFS[editor.name] || {};\n\t\tRICH_COMBO_DEFS[editor.name][richComboName] =\n\t\t\tRICH_COMBO_DEFS[editor.name][richComboName] || richComboDefinition;\n\t\tRICH_COMBO_DEFS[editor.name][richComboName].currentValue = undefined;\n\n\t\tif (!RichComboBridge) {\n\t\t\tRichComboBridge = class extends React.Component {\n\t\t\t\tstatic contextType = EditorContext;\n\n\t\t\t\tstatic displayName = richComboName;\n\n\t\t\t\tstatic key = richComboName;\n\n\t\t\t\tconstructor(props) {\n\t\t\t\t\tsuper(props);\n\t\t\t\t\tthis.state = {\n\t\t\t\t\t\tvalue:\n\t\t\t\t\t\t\tRICH_COMBO_DEFS[editor.name][richComboName]\n\t\t\t\t\t\t\t\t.currentValue,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// API not yet implemented inside the richcombo bridge. By mocking the unsupported methods, we\n\t\t\t\t// prevent plugins from crashing if they make use of them.\n\t\t\t\tcommit() {}\n\t\t\t\tcreatePanel() {}\n\t\t\t\tdisable() {}\n\t\t\t\tenable() {}\n\t\t\t\tgetState() {}\n\t\t\t\thideGroup() {}\n\t\t\t\thideItem() {}\n\t\t\t\tmark() {}\n\t\t\t\tshowAll() {}\n\t\t\t\tstartGroup() {}\n\t\t\t\tunmarkAll() {}\n\n\t\t\t\tadd(value, preview, title) {\n\t\t\t\t\tthis._items.push({\n\t\t\t\t\t\tpreview,\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tcomponentWillMount() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst editorCombo =\n\t\t\t\t\t\tRICH_COMBO_DEFS[editor.name][richComboName];\n\n\t\t\t\t\tthis._items = [];\n\n\t\t\t\t\tthis.setValue = this._setValue;\n\n\t\t\t\t\tif (editorCombo.init) {\n\t\t\t\t\t\teditorCombo.init.call(this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (editorCombo.onRender) {\n\t\t\t\t\t\teditorCombo.onRender.call(this);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcomponentWillUnmount() {\n\t\t\t\t\tthis._cacheValue(this.state.value);\n\n\t\t\t\t\tthis.setValue = this._cacheValue;\n\t\t\t\t}\n\n\t\t\t\tgetValue() {\n\t\t\t\t\treturn this.state.value;\n\t\t\t\t}\n\n\t\t\t\trender() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst richComboLabel =\n\t\t\t\t\t\tRICH_COMBO_DEFS[editor.name][richComboName]\n\t\t\t\t\t\t\t.currentValue || richComboDefinition.label;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"ae-container-dropdown ae-has-dropdown\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\t\t\t\taria-label={richComboLabel}\n\t\t\t\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\t\t\t\ttitle={richComboLabel}>\n\t\t\t\t\t\t\t\t<div className=\"ae-container\">\n\t\t\t\t\t\t\t\t\t<span className=\"ae-container-dropdown-selected-item\">\n\t\t\t\t\t\t\t\t\t\t{richComboLabel}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<ButtonIcon symbol=\"caret-bottom\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t{this.props.expanded && (\n\t\t\t\t\t\t\t\t<ButtonDropdown\n\t\t\t\t\t\t\t\t\tonDismiss={this.props.toggleDropdown}>\n\t\t\t\t\t\t\t\t\t{this._getItems()}\n\t\t\t\t\t\t\t\t</ButtonDropdown>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t_cacheValue(value) {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tRICH_COMBO_DEFS[editor.name][\n\t\t\t\t\t\trichComboName\n\t\t\t\t\t].currentValue = value;\n\t\t\t\t}\n\n\t\t\t\t_getItems() {\n\t\t\t\t\tconst richCombo = this;\n\n\t\t\t\t\tconst items = this._items.map(item => {\n\t\t\t\t\t\tconst className =\n\t\t\t\t\t\t\t'ae-toolbar-element ' +\n\t\t\t\t\t\t\t(item.value === this.state.value ? 'active' : '');\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={item.title} role=\"option\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t__html: item.preview,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tdata-value={item.value}\n\t\t\t\t\t\t\t\t\tonClick={richCombo._onClick}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn items;\n\t\t\t\t}\n\n\t\t\t\t_onClick = event => {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst editorCombo =\n\t\t\t\t\t\tRICH_COMBO_DEFS[editor.name][richComboName];\n\n\t\t\t\t\tif (editorCombo.onClick) {\n\t\t\t\t\t\tconst newValue = event.currentTarget.getAttribute(\n\t\t\t\t\t\t\t'data-value'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\teditorCombo.onClick.call(this, newValue);\n\n\t\t\t\t\t\tRICH_COMBO_DEFS[editor.name][\n\t\t\t\t\t\t\trichComboName\n\t\t\t\t\t\t].currentValue = newValue;\n\n\t\t\t\t\t\teditor.fire('actionPerformed', this);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t_setValue(value) {\n\t\t\t\t\tthis._cacheValue(value);\n\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tAlloyEditor.Buttons[richComboName] = RichComboBridge;\n\t\t}\n\n\t\treturn RichComboBridge;\n\t};\n\n\t/* istanbul ignore else */\n\tif (!CKEDITOR.plugins.get('richcombo')) {\n\t\tCKEDITOR.UI_RICHCOMBO = 'richcombo';\n\n\t\tCKEDITOR.plugins.add('richcombo', {});\n\t}\n\n\t/**\n\t * CKEditor plugin that bridges the support offered by CKEditor RichCombo plugin. It takes over the\n\t * responsibility of registering and creating rich combo elements via:\n\t * - editor.ui.addRichCombo(name, definition)\n\t * - editor.ui.add(name, CKEDITOR.UI_RICHCOMBO, definition)\n\t *\n\t * @class CKEDITOR.plugins.ae_richcombobridge\n\t * @requires CKEDITOR.plugins.ae_uibridge\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_richcombobridge', {\n\t\trequires: ['ae_uibridge'],\n\n\t\t/**\n\t\t * Set the add handler for UI_RICHCOMBO to our own. We do this in the init phase to override\n\t\t * the one in the original plugin in case it's present\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The CKEditor instance being initialized\n\t\t */\n\t\tbeforeInit(editor) {\n\t\t\teditor.ui.addRichCombo = function(\n\t\t\t\trichComboName,\n\t\t\t\trichComboDefinition\n\t\t\t) {\n\t\t\t\tthis.add(\n\t\t\t\t\trichComboName,\n\t\t\t\t\tCKEDITOR.UI_RICHCOMBO,\n\t\t\t\t\trichComboDefinition\n\t\t\t\t);\n\t\t\t};\n\n\t\t\teditor.ui.addHandler(CKEDITOR.UI_RICHCOMBO, {\n\t\t\t\tadd: generateRichComboBridge,\n\t\t\t\tcreate(richComboDefinition) {\n\t\t\t\t\tconst richComboName =\n\t\t\t\t\t\t'richComboBridge' + ((Math.random() * 1e9) >>> 0);\n\t\t\t\t\tconst RichComboBridge = generateRichComboBridge(\n\t\t\t\t\t\trichComboName,\n\t\t\t\t\t\trichComboDefinition\n\t\t\t\t\t);\n\n\t\t\t\t\treturn new RichComboBridge();\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_uibridge')) {\n\t/**\n\t * CKEditor plugin that extends CKEDITOR.ui.add function so an add handler can be specified\n\t * on top of the original ones. It bridges the calls to add components via:\n\t * - editor.ui.add(name, type, definition)\n\t *\n\t * @class CKEDITOR.plugins.ae_uibridge\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_uibridge', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t *\n\t\t * @method beforeInit\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tbeforeInit(editor) {\n\t\t\tconst originalUIAddFn = editor.ui.add;\n\n\t\t\teditor.ui.add = function(name, type, definition) {\n\t\t\t\toriginalUIAddFn.call(this, name, type, definition);\n\n\t\t\t\tconst typeHandler = this._.handlers[type];\n\n\t\t\t\tif (typeHandler && typeHandler.add) {\n\t\t\t\t\ttypeHandler.add(name, definition, editor);\n\t\t\t\t\tAlloyEditor.registerBridgeButton(\n\t\t\t\t\t\tname,\n\t\t\t\t\t\teditor.__processingPlugin__.plugin.name\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport removeImageCommand from './remove-image';\n\nexport {removeImageCommand};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nconst removeImageCommand = {\n\texec: editor => {\n\t\tconst selection = editor.getSelection();\n\n\t\tif (selection) {\n\t\t\tconst ranges = selection.getRanges();\n\t\t\tconst startContainer = ranges[0].startContainer;\n\n\t\t\tconst nextRange = new CKEDITOR.dom.range(startContainer);\n\t\t\tnextRange.setStart(startContainer, 0);\n\t\t\tnextRange.setEnd(startContainer, 0);\n\n\t\t\tconst selectedElement = selection.getSelectedElement();\n\n\t\t\tif (selectedElement && selectedElement.getName() === 'img') {\n\t\t\t\tconst native = selection.getNative();\n\t\t\t\tif (native) {\n\t\t\t\t\tnative.removeAllRanges();\n\t\t\t\t}\n\n\t\t\t\tselection.selectRanges([nextRange]);\n\n\t\t\t\tselectedElement.remove();\n\t\t\t}\n\t\t}\n\t},\n};\n\nexport default removeImageCommand;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EditorContext from '../adapter/editor-context';\nimport WidgetExclusive from './base/widget-exclusive';\nimport WidgetFocusManager from './base/widget-focus-manager';\n\n/**\n * The main editor UI class manages a hierarchy of widgets (toolbars and buttons).\n *\n * @class UI\n * @uses WidgetExclusive\n * @uses WidgetFocusManager\n */\nclass UI extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcircular: true,\n\t\tdescendants: '[class^=ae-toolbar-]',\n\t\teventsDelay: 0,\n\t\tkeys: {\n\t\t\tnext: 9,\n\t\t},\n\t};\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Localized messages for live aria updates. Should include the following messages:\n\t\t * - noToolbar: Notification for no available toolbar in the editor.\n\t\t * - oneToolbar: Notification for just one available toolbar in the editor.\n\t\t * - manyToolbars: Notification for more than one available toolbar in the editor.\n\t\t *\n\t\t * @instance\n\t\t * @memberof UI\n\t\t * @property {Object} ariaUpdates\n\t\t */\n\t\tariaUpdates: PropTypes.object,\n\n\t\t/**\n\t\t * The delay (ms), after which key or mouse events will be processed.\n\t\t *\n\t\t * @instance\n\t\t * @memberof UI\n\t\t * @property {Number} eventsDelay\n\t\t */\n\t\teventsDelay: PropTypes.number,\n\n\t\t/**\n\t\t * The toolbars configuration for this editor instance\n\t\t *\n\t\t * @instance\n\t\t * @memberof UI\n\t\t * @property {Object} toolbars\n\t\t */\n\t\ttoolbars: PropTypes.object.isRequired,\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\thidden: false,\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\teditor.on('editorInteraction', this._onEditorInteraction, this);\n\t\teditor.on('actionPerformed', this._onActionPerformed, this);\n\t\teditor.on('key', this._onEditorKey, this);\n\n\t\t// Set up events for hiding the UI when user stops interacting with the editor.\n\t\t// This may happen when he just clicks outside of the editor. However,\n\t\t// this does not include a situation when he clicks on some button, part of\n\t\t// editor's UI.\n\n\t\t// It is not easy to debounce _setUIHidden on mousedown, because if we\n\t\t// debounce it, when the handler is being invoked, the target might be no more part\n\t\t// of the editor's UI - onActionPerformed causes re-render.\n\t\tthis._mousedownListener = event => {\n\t\t\tthis._setUIHidden(event.target);\n\t\t};\n\n\t\tthis._keyDownListener = CKEDITOR.tools.debounce(\n\t\t\t_event => {\n\t\t\t\tthis._setUIHidden(document.activeElement);\n\t\t\t},\n\t\t\tthis.props.eventsDelay,\n\t\t\tthis\n\t\t);\n\n\t\tdocument.addEventListener('mousedown', this._mousedownListener);\n\t\tdocument.addEventListener('keydown', this._keyDownListener);\n\t}\n\n\t/**\n\t * Lifecycle. Invoked immediately after the component's updates are flushed to the DOM.\n\t * Fires `ariaUpdate` event passing ARIA related messages.\n\t * Fires `editorUpdate` event passing the previous and current properties and state.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @method componentDidUpdate\n\t */\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tif (domNode) {\n\t\t\teditor.fire('ariaUpdate', {\n\t\t\t\tmessage: this._getAvailableToolbarsMessage(domNode),\n\t\t\t});\n\t\t}\n\n\t\teditor.fire('editorUpdate', {\n\t\t\tprevProps,\n\t\t\tprevState,\n\t\t\tprops: this.props,\n\t\t\tstate: this.state,\n\t\t});\n\t}\n\n\t_getAriaUpdateTemplate(ariaUpdate) {\n\t\tif (!this._ariaUpdateTemplates) {\n\t\t\tthis._ariaUpdateTemplates = {};\n\t\t}\n\n\t\tif (!this._ariaUpdateTemplates[ariaUpdate]) {\n\t\t\tthis._ariaUpdateTemplates[ariaUpdate] = new CKEDITOR.template(\n\t\t\t\tthis._getAriaUpdates()[ariaUpdate]\n\t\t\t);\n\t\t}\n\n\t\treturn this._ariaUpdateTemplates[ariaUpdate];\n\t}\n\n\t/**\n\t * Returns the templates for ARIA messages.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @protected\n\t * @method _getAriaUpdates\n\t * @return {Object} ARIA relates messages. Default:\n\t * {\n\t *      noToolbar: AlloyEditor.Strings.ariaUpdateNoToolbar,\n\t *      oneToolbar: AlloyEditor.Strings.ariaUpdateOneToolbar,\n\t *      manyToolbars: AlloyEditor.Strings.ariaUpdateManyToolbars\n\t *  }\n\t */\n\t_getAriaUpdates() {\n\t\treturn (\n\t\t\tthis.props.ariaUpdates || {\n\t\t\t\tnoToolbar: AlloyEditor.Strings.ariaUpdateNoToolbar,\n\t\t\t\toneToolbar: AlloyEditor.Strings.ariaUpdateOneToolbar,\n\t\t\t\tmanyToolbars: AlloyEditor.Strings.ariaUpdateManyToolbars,\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Returns an ARIA message which represents the number of currently available toolbars.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @method _getAvailableToolbarsMessage\n\t * @protected\n\t * @param {CKEDITOR.dom.element} domNode The DOM node from which the available toolbars will be retrieved.\n\t * @return {String} The ARIA message for the number of available toolbars\n\t */\n\t_getAvailableToolbarsMessage(domNode) {\n\t\tconst toolbarsNodeList = domNode.querySelectorAll('[role=\"toolbar\"]');\n\n\t\tif (!toolbarsNodeList.length) {\n\t\t\treturn this._getAriaUpdates().noToolbar;\n\t\t} else {\n\t\t\tconst toolbarNames = Array.prototype.slice\n\t\t\t\t.call(toolbarsNodeList)\n\t\t\t\t.map(toolbar => {\n\t\t\t\t\treturn toolbar.getAttribute('aria-label');\n\t\t\t\t});\n\n\t\t\tconst ariaUpdate =\n\t\t\t\ttoolbarNames.length === 1 ? 'oneToolbar' : 'manyToolbars';\n\n\t\t\treturn this._getAriaUpdateTemplate(ariaUpdate).output({\n\t\t\t\ttoolbars: toolbarNames\n\t\t\t\t\t.join(',')\n\t\t\t\t\t.replace(/,([^,]*)$/, ' and ' + '$1'),\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @method componentWillUnmount\n\t */\n\tcomponentWillUnmount() {\n\t\tif (this._mousedownListener) {\n\t\t\tdocument.removeEventListener('mousedown', this._mousedownListener);\n\t\t}\n\n\t\tif (this._keyDownListener) {\n\t\t\tthis._keyDownListener.detach();\n\t\t\tdocument.removeEventListener('keydown', this._keyDownListener);\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the editor. This may include several toolbars and buttons.\n\t * The editor's UI also takes care of rendering the items in exclusive mode.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.state.hidden) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet toolbars = Object.keys(this.props.toolbars).map(toolbar => {\n\t\t\treturn AlloyEditor.Toolbars[toolbar] || window[toolbar];\n\t\t});\n\n\t\ttoolbars = this.filterExclusive(toolbars).map(toolbar => {\n\t\t\tconst props = this.mergeExclusiveProps(\n\t\t\t\t{\n\t\t\t\t\tconfig: this.props.toolbars[toolbar.key],\n\t\t\t\t\teditor: this.context.editor,\n\t\t\t\t\teditorEvent: this.state.editorEvent,\n\t\t\t\t\tkey: toolbar.key,\n\t\t\t\t\tonDismiss: this._onDismissToolbarFocus,\n\t\t\t\t\tselectionData: this.state.selectionData,\n\t\t\t\t},\n\t\t\t\ttoolbar.key\n\t\t\t);\n\n\t\t\treturn React.createElement(toolbar, props);\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"ae-toolbars\" onKeyDown={this.handleKey}>\n\t\t\t\t{toolbars}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Listener to the editor's `actionPerformed` event. Sets state and redraws the UI of the editor.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @protected\n\t * @method _onActionPerformed\n\t * @param {SynteticEvent} event The provided event\n\t */\n\t_onActionPerformed(_event) {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\teditor.focus();\n\n\t\tthis.setState({\n\t\t\titemExclusive: null,\n\t\t\tselectionData: editor.getSelectionData(),\n\t\t});\n\t}\n\n\t/**\n\t * Executed when a dismiss key is pressed over a toolbar to return the focus to the editor.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @protected\n\t * @method _onDismissToolbarFocus\n\t */\n\t_onDismissToolbarFocus = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\teditor.focus();\n\t};\n\n\t/**\n\t * Listener to the editor's `userInteraction` event. Retrieves the data about the user selection and\n\t * provides it via component's state property.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @protected\n\t * @method _onEditorInteraction\n\t * @param {SynteticEvent} event The provided event\n\t */\n\t_onEditorInteraction(event) {\n\t\tthis.setState({\n\t\t\teditorEvent: event,\n\t\t\thidden: false,\n\t\t\titemExclusive: null,\n\t\t\tselectionData: event.data.selectionData,\n\t\t});\n\t}\n\n\t/**\n\t * Focuses on the active toolbar when the combination ALT+F10 is pressed inside the editor.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @protected\n\t * @method _onEditorKey\n\t */\n\t_onEditorKey(event) {\n\t\tconst nativeEvent = event.data.domEvent.$;\n\n\t\tif (nativeEvent.altKey && nativeEvent.keyCode === 121) {\n\t\t\tthis.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the target with which the user interacted is part of editor's UI or it is\n\t * the editable area. If none of these, sets the state of editor's UI to be hidden.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @protected\n\t * @method _setUIHidden\n\t * @param {DOMElement} target The DOM element with which user interacted lastly.\n\t */\n\t_setUIHidden(target) {\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\tif (domNode) {\n\t\t\tconst editable = this.context.editor.get('nativeEditor').editable();\n\t\t\tconst parentNode = target.parentNode;\n\t\t\tconst targetNode = new CKEDITOR.dom.node(target);\n\n\t\t\tif (!editable) {\n\t\t\t\tthis.setState({\n\t\t\t\t\thidden: true,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet res =\n\t\t\t\t\teditable.$ === target ||\n\t\t\t\t\teditable.contains(targetNode) ||\n\t\t\t\t\tnew CKEDITOR.dom.element(domNode).contains(targetNode);\n\n\t\t\t\tif (parentNode) {\n\t\t\t\t\tres = res || parentNode.id === 'ckimgrsz';\n\t\t\t\t}\n\n\t\t\t\tif (!res) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\thidden: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Fired when component updates and when it is rendered in the DOM.\n * The payload consists from a `message` property containing the ARIA message.\n *\n * @event ariaUpdate\n */\n\n/**\n * Fired when component updates. The payload consists from an object with the following\n * properties:\n * - prevProps - The previous properties of the component\n * - prevState - The previous state of the component\n * - props - The current properties of the component\n * - state - The current state of the component\n *\n * @event ariaUpdate\n */\n\nexport default WidgetExclusive(WidgetFocusManager(UI));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Attribute from './attribute';\nimport Lang from './lang';\nimport extend from './oop';\n\n/**\n * Quick and dirty impl of Base class.\n *\n * @class Base\n * @constructor\n */\nfunction Base(config) {\n\tBase.superclass.constructor.call(this, config);\n\n\tthis.init(config);\n}\n\nextend(Base, Attribute, {\n\t/**\n\t * Calls the `initializer` method of each class which extends Base starting from the parent to the child.\n\t * Will pass the configuration object to each initializer method.\n\t *\n\t * @instance\n\t * @memberof Base\n\t * @method init\n\t * @param {Object} config Configuration object\n\t */\n\tinit(config) {\n\t\tthis._callChain('initializer', config);\n\t},\n\n\t/**\n\t * Calls the `destructor` method of each class which extends Base starting from the parent to the child.\n\t *\n\t * @instance\n\t * @memberof Base\n\t * @method destroy\n\t */\n\tdestroy() {\n\t\tthis._callChain('destructor');\n\t},\n\n\t/**\n\t * Calls a method of each class, which is being present in the hierarchy starting from parent to the child.\n\t *\n\t * @instance\n\t * @memberof Base\n\t * @method _callChain\n\t * @param {Object|Array} args The arguments with which the method should be invoked\n\t * @param {String} wat  The method, which should be invoked\n\t * @protected\n\t */\n\t_callChain(wat, args) {\n\t\tlet arr = [];\n\n\t\tlet ctor = this.constructor;\n\n\t\twhile (ctor) {\n\t\t\tif (Lang.isFunction(ctor.prototype[wat])) {\n\t\t\t\tarr.push(ctor.prototype[wat]);\n\t\t\t}\n\n\t\t\tctor = ctor.superclass ? ctor.superclass.constructor : null;\n\t\t}\n\n\t\tarr = arr.reverse();\n\n\t\targs = Lang.isArray(args) ? args : [args];\n\n\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\tconst item = arr[i];\n\n\t\t\titem.apply(this, args);\n\t\t}\n\t},\n});\n\nexport default Base;\n"],"sourceRoot":""}