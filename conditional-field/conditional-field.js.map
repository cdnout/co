{"version":3,"sources":["conditional-field.js"],"names":[],"mappings":";;;;;;IAAM,gB;AACJ,4BAAY,IAAZ,EAAiB;AAAA;;AACf,SAAK,QAAL,GAAgB,EAAE,KAAK,OAAP,CAAhB;;AAEA,QAAG,KAAK,QAAL,CAAc,MAAd,IAAwB,CAA3B,EAA8B;;AAE9B,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,SAAL,GAAiB,KAAK,YAAL,EAAjB;AACA,SAAK,UAAL,CAAgB,KAAK,UAAL,EAAhB;;AAEA,SAAK,aAAL,GAAqB,KAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB,CAArB;AACA,SAAK,QAAL,CAAc,EAAd,CAAiB,QAAjB,EAA2B,KAAK,aAAhC;AACD;;;;6BAEQ,C,EAAG;AACV,UAAI,QAAQ,KAAK,UAAL,EAAZ;AACA,WAAK,UAAL,CAAgB,KAAhB;AACD;;;+BAEU,K,EAAO;AAChB,WAAI,IAAI,YAAR,IAAwB,KAAK,IAAL,CAAU,UAAlC,EAA6C;AAC3C,YAAG,SAAS,YAAZ,EAAyB;AACvB,YAAE,KAAK,IAAL,CAAU,UAAV,CAAqB,YAArB,CAAF,EAAsC,IAAtC;AACD,SAFD,MAEK;AACH,YAAE,KAAK,IAAL,CAAU,UAAV,CAAqB,YAArB,CAAF,EAAsC,IAAtC;AACD;AACF;AACF;;;mCAEc;AACb,UAAG,KAAK,QAAL,CAAc,EAAd,CAAiB,QAAjB,CAAH,EAA8B;AAC5B,eAAO,QAAP;AACD,OAFD,MAEM,IAAG,KAAK,QAAL,CAAc,EAAd,CAAiB,QAAjB,CAAH,EAA8B;AAClC,eAAO,OAAP;AACD,OAFK,MAEA,IAAG,KAAK,QAAL,CAAc,EAAd,CAAiB,WAAjB,CAAH,EAAiC;AACrC,eAAO,UAAP;AACD;AACF;;;iCAEY;AACX,UAAI,QAAQ,EAAZ;AACA,cAAO,KAAK,SAAZ;AACE,aAAK,UAAL;AACE,kBAAQ,KAAK,QAAL,CAAc,EAAd,CAAiB,UAAjB,IAA+B,IAA/B,GAAsC,KAA9C;AACA;AACF,aAAK,OAAL;AACE,kBAAQ,KAAK,QAAL,CAAc,MAAd,CAAqB,UAArB,EAAiC,GAAjC,EAAR;AACA;AACF;AACE,kBAAQ,KAAK,QAAL,CAAc,GAAd,EAAR;AARJ;AAUA,aAAO,KAAP;AACD;;;8BAES;AACR,WAAK,QAAL,CAAc,GAAd,CAAkB,QAAlB,EAA4B,KAAK,aAAjC;AACD","file":"conditional-field.js","sourcesContent":["class ConditionalField {\n  constructor(args){\n    this.$control = $(args.control);\n\n    if(this.$control.length == 0) return;\n\n    this.args = args;\n    this.inputType = this.getInputType();\n    this.setVisible(this.inputValue());\n\n    this.onChangeBound = this.onChange.bind(this);\n    this.$control.on('change', this.onChangeBound);\n  }\n\n  onChange(e) {\n    var value = this.inputValue();\n    this.setVisible(value);\n  }\n\n  setVisible(value) {\n    for(let controlValue in this.args.visibility){\n      if(value == controlValue){\n        $(this.args.visibility[controlValue]).show();\n      }else{\n        $(this.args.visibility[controlValue]).hide();\n      }\n    }\n  }\n\n  getInputType() {\n    if(this.$control.is('select')){\n      return 'select';\n    }else if(this.$control.is(':radio')){\n      return 'radio';\n    }else if(this.$control.is(':checkbox')){\n      return 'checkbox';\n    }\n  }\n\n  inputValue() {\n    let value = '';\n    switch(this.inputType){\n      case 'checkbox':\n        value = this.$control.is(':checked') ? 'on' : 'off';\n        break;\n      case 'radio':\n        value = this.$control.filter(':checked').val();\n        break;\n      default:\n        value = this.$control.val();\n    }\n    return value;\n  }\n\n  destroy() {\n    this.$control.off('change', this.onChangeBound);\n  }\n}"],"sourceRoot":"/source/"}