var __decorate=this&&this.__decorate||function(t,e,i,o){var r,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,i):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,i,o);else for(var d=t.length-1;d>=0;d--)(r=t[d])&&(s=(a<3?r(s):a>3?r(e,i,s):r(e,i))||s);return a>3&&s&&Object.defineProperty(e,i,s),s};import deepClone from"deep-clone-simple";import{css,customElement,html,internalProperty,LitElement,property}from"lit-element";import{nothing}from"lit-html";import{repeat}from"lit-html/directives/repeat";import"./lit-grid-item";import{areLayoutsDifferent}from"./util/are-layouts-different";import{condenseLayout}from"./util/condense-layout";import{debounce}from"./util/debounce";import{findLayoutBottom}from"./util/find-layout-bottom";import{fireEvent}from"./util/fire-event";import{fixLayoutBounds}from"./util/fix-layout-bounds";import{getMasonryLayout}from"./util/get-masonry-layout";import{installResizeObserver}from"./util/install-resize-observer";import{moveItem}from"./util/move-item";let LitGridLayout=class extends LitElement{constructor(){super(...arguments),this.sortStyle="masonry",this.margin=[10,10],this.containerPadding=[20,20],this.rowHeight=30,this.columns=12,this.dragDisabled=!1,this.resizeDisabled=!1,this.resizing=!1,this.dragging=!1,this._width=0,this._layout=[]}get _layoutHeight(){const t=findLayoutBottom(this._layout);return t*this.rowHeight+(t-1)*this.margin[1]+2*this.containerPadding[1]}disconnectedCallback(){this._resizeObserver&&this._resizeObserver.disconnect()}connectedCallback(){super.connectedCallback(),this.updateComplete.then(()=>this._attachObserver())}updated(t){super.updated(t),t.has("layout")?this._setupLayout():t.has("columns")&&this._updateLayout(deepClone(this.layout)),this.style.height=`${this._layoutHeight}px`}render(){var t;return(null===(t=this._layout)||void 0===t?void 0:t.length)&&this.itemRenderer?html`
      ${repeat(this._layout,t=>t.key,t=>t&&this._layout.some(e=>e.key===t.key)?html`
            <lit-grid-item
              .width=${t.width}
              .height=${t.height}
              .posY=${t.posY}
              .posX=${t.posX}
              .minWidth=${t.minWidth||1}
              .minHeight=${t.minHeight||1}
              .maxWidth=${t.maxHeight}
              .maxHeight=${t.maxHeight}
              .key=${t.key}
              .parentWidth=${this._width}
              .columns=${this.columns}
              .rowHeight=${this.rowHeight}
              .margin=${this.margin}
              .containerPadding=${this.containerPadding}
              .isDraggable=${!this.dragDisabled}
              .isResizable=${!this.resizeDisabled}
              .resizeHandle=${this.resizeHandle}
              .dragHandle=${this.dragHandle}
              @resizeStart=${this._itemResizeStart}
              @resize=${this._itemResize}
              @resizeEnd=${this._itemResizeEnd}
              @dragStart=${this._itemDragStart}
              @dragging=${this._itemDrag}
              @dragEnd=${this._itemDragEnd}
            >
              ${this.itemRenderer(t.key)}
            </lit-grid-item>
          `:nothing)}
      ${this._renderPlaceHolder()}
    `:html``}_setupLayout(){if(!this.layout)throw new Error("Missing layout");areLayoutsDifferent(this.layout,this._layout)&&(this._updateLayout(this.layout,!0),fireEvent(this,"layout-changed",{layout:this._layout}))}_updateLayout(t,e=!1,i=this.sortStyle){if("masonry"===i)this._layout=getMasonryLayout(t,this.columns);else{const i=e?fixLayoutBounds(t,this.columns):t;this._layout=condenseLayout(i)}}_itemResizeStart(t){this._oldItemIndex=this._layout.findIndex(e=>e.key===t.currentTarget.key),this._placeholder=this._layout[this._oldItemIndex],this._oldItemLayout=this._layout[this._oldItemIndex]}_itemResize(t){if(!this._oldItemLayout||void 0===this._oldItemIndex)return;const{newWidth:e,newHeight:i}=t.detail,o=Object.assign(Object.assign({},this._oldItemLayout),{width:e,height:i});this._layout[this._oldItemIndex]=o,this._placeholder=o,this._updateLayout(this._layout,!1,"default")}_itemResizeEnd(){const t=this._layout.find(t=>{var e;return t.key===(null===(e=this._oldItemLayout)||void 0===e?void 0:e.key)});this.layout&&this._oldItemLayout!==t&&(fireEvent(this,"item-changed",{item:this._placeholder,layout:this._layout}),this._placeholder=void 0,this._oldItemLayout=void 0,this._oldItemIndex=void 0)}_itemDragStart(t){const e=this._layout.findIndex(e=>e.key===t.currentTarget.key);this._placeholder=this._layout[e],this._oldItemLayout=this._layout.find(e=>e.key===t.currentTarget.key)}_itemDrag(t){if(!this._oldItemLayout)return;t.stopPropagation(),t.preventDefault();const{newPosX:e,newPosY:i}=t.detail;if(this._prevPosX===e&&this._prevPosY===i)return;this._prevPosX=e,this._prevPosY=i;const o=moveItem([...this._layout],Object.assign({},this._oldItemLayout),e,i,this.columns,!0);this._updateLayout(o,!1,"default"),this._placeholder=this._layout.find(t=>t.key===this._oldItemLayout.key)}_itemDragEnd(){const t=this._layout.find(t=>t.key===this._oldItemLayout.key);this.layout&&this._oldItemLayout!==t&&(fireEvent(this,"item-changed",{item:this._placeholder,layout:this._layout}),this._placeholder=void 0,this._oldItemLayout=void 0,this._oldItemIndex=void 0)}_renderPlaceHolder(){return this._placeholder?html`
      <lit-grid-item
        .width=${this._placeholder.width}
        .height=${this._placeholder.height}
        .posY=${this._placeholder.posY}
        .posX=${this._placeholder.posX}
        .key=${this._placeholder.key}
        .parentWidth=${this.clientWidth}
        .columns=${this.columns}
        .rowHeight=${this.rowHeight}
        .margin=${this.margin}
        .containerPadding=${this.containerPadding}
        .isDraggable=${!1}
        .isResizable=${!1}
        placeholder
      >
      </lit-grid-item>
    `:html``}async _attachObserver(){this._resizeObserver||(await installResizeObserver(),this._resizeObserver=new ResizeObserver(debounce(()=>this._measureLayoutWidth(),250,!1))),this._resizeObserver.observe(this)}_measureLayoutWidth(){this.offsetParent&&(this._width=this.offsetParent.clientWidth)}static get styles(){return css`
      :host {
        display: block;
        position: relative;
      }

      :host([dragging]),
      :host([resizing]),
      :host([dragging]) lit-grid-item,
      :host([resizing]) lit-grid-item {
        user-select: none;
        touch-action: none;
      }
    `}};__decorate([property({type:Array})],LitGridLayout.prototype,"layout",void 0),__decorate([property()],LitGridLayout.prototype,"sortStyle",void 0),__decorate([property({type:Array})],LitGridLayout.prototype,"margin",void 0),__decorate([property({type:Array})],LitGridLayout.prototype,"containerPadding",void 0),__decorate([property({type:Number})],LitGridLayout.prototype,"rowHeight",void 0),__decorate([property({type:Number})],LitGridLayout.prototype,"columns",void 0),__decorate([property({type:Boolean})],LitGridLayout.prototype,"dragDisabled",void 0),__decorate([property({type:Boolean})],LitGridLayout.prototype,"resizeDisabled",void 0),__decorate([property({attribute:!1})],LitGridLayout.prototype,"resizeHandle",void 0),__decorate([property({attribute:!1})],LitGridLayout.prototype,"dragHandle",void 0),__decorate([property({type:Boolean,attribute:!0,reflect:!0})],LitGridLayout.prototype,"resizing",void 0),__decorate([property({type:Boolean,attribute:!0,reflect:!0})],LitGridLayout.prototype,"dragging",void 0),__decorate([property()],LitGridLayout.prototype,"itemRenderer",void 0),__decorate([internalProperty()],LitGridLayout.prototype,"_width",void 0),__decorate([internalProperty()],LitGridLayout.prototype,"_layout",void 0),__decorate([internalProperty()],LitGridLayout.prototype,"_placeholder",void 0),LitGridLayout=__decorate([customElement("lit-grid-layout")],LitGridLayout);export{LitGridLayout};