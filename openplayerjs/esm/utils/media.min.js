export function getExtension(e){if("string"!=typeof e)throw new Error("`url` argument must be a string");const t=e.split("?")[0],i=t?t.split("\\"):null,n=i?i.pop():null,p=n?n.split("/"):null,o=p?p.pop():null;return o&&o.indexOf(".")>-1?o.substring(o.lastIndexOf(".")+1):""};export function isHlsSource(e){return/\.m3u8$/i.test(e.src)||["application/x-mpegURL","application/vnd.apple.mpegurl"].indexOf(e.type)>-1};export function isM3USource(e){return/\.m3u$/i.test(e.src)};export function isDashSource(e){return/\.mpd/i.test(e.src)||"application/dash+xml"===e.type};export function isFlvSource(e){return/(^rtmp:\/\/|\.flv$)/i.test(e.src)||["video/x-flv","video/flv"].indexOf(e.type)>-1};export function predictType(e){const t=getExtension(e);let i;if(!t)return"video/mp4";switch(t){case"m3u8":case"m3u":i="application/x-mpegURL";break;case"mpd":i="application/dash+xml";break;case"mp3":i="audio/mp3";break;case"webm":i="video/webm";break;default:i="video/mp4"}return i};export function isAutoplaySupported(e,t,i,n){const p=e.play();void 0!==p?p.then(()=>(e.pause(),t(!0),i(!1),n())).catch(()=>{e.volume=0,e.muted=!0,e.play().then(()=>(e.pause(),t(!0),i(!0),n())).catch(()=>{e.volume=1,e.muted=!1,t(!1),i(!1),n()})}):(t(!e.paused||"Promise"in window&&p instanceof Promise),e.pause(),i(!1),n())};