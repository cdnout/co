/*! Qoopido.js library 3.7.4, 2015-08-14 | https://github.com/dlueth/qoopido.js | (c) 2015 Dirk Lueth */
!function(t,e){e.qoopido.register("polyfill/window/promise",t)}(function(t,e,n,r){"use strict";function o(t,e){return function(){t.apply(e,arguments)}}function i(t){var e=this;return null===e._state?void e._deferreds.push(t):void h(function(){var n,r=e._state?t.onFulfilled:t.onRejected;if(null===r)return void(e._state?t.resolve:t.reject)(e._value);try{n=r(e._value)}catch(o){return void t.reject(o)}t.resolve(n)})}function u(t){var e,n=this;try{if(t===n)throw new TypeError("A promise cannot be resolved with itself.");if(t&&(v(t)||d(t))&&(e=t.then,"function"==typeof e))return void s(o(e,t),o(u,n),o(c,n));n._state=!0,n._value=t,f.call(n)}catch(r){c.call(n,r)}}function c(t){var e=this;e._state=!1,e._value=t,f.call(e)}function f(){for(var t,e=this,n=0;(t=e._deferreds[n])!==r;n++)i.call(e,t);this._deferreds=null}function l(t,e,n,r){var o=this;o.onFulfilled="function"==typeof t?t:null,o.onRejected="function"==typeof e?e:null,o.resolve=n,o.reject=r}function s(t,e,n){var r=!1;try{t(function(t){r||(r=!0,e(t))},function(t){r||(r=!0,n(t))})}catch(o){if(r)return;r=!0,n(o)}}function a(t){var e=this;if(!v(e))throw new TypeError("Promises must be constructed via new");if(!d(t))throw new TypeError("not a function");e._state=null,e._value=null,e._deferreds=[],s(t,o(u,e),o(c,e))}var v=function(t){return"object"==typeof t},d=function(t){return"function"==typeof t},h=d(n.setImmediate)&&n.setImmediate||function(t){setTimeout(t,1)};return a.prototype["catch"]=function(t){return this.then(null,t)},a.prototype.then=function(t,e){var n=this;return new a(function(r,o){i.call(n,new l(t,e,r,o))})},a.resolve=function(t){return t&&v(t)&&t.constructor===a?t:new a(function(e){e(t)})},a.reject=function(t){return new a(function(e,n){n(t)})},n.Promise||(n.Promise=a),n.Promise},this);