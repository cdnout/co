function createBrowserLocalStorageCache(e){const t=`algoliasearch-client-js-${e.key}`;let r;const s=()=>(void 0===r&&(r=e.localStorage||window.localStorage),r),a=()=>JSON.parse(s().getItem(t)||"{}");return{get:(e,t,r={miss:()=>Promise.resolve()})=>Promise.resolve().then(()=>{const r=JSON.stringify(e),s=a()[r];return Promise.all([s||t(),void 0!==s])}).then(([e,t])=>Promise.all([e,t||r.miss(e)])).then(([e])=>e),set:(e,r)=>Promise.resolve().then(()=>{const o=a();return o[JSON.stringify(e)]=r,s().setItem(t,JSON.stringify(o)),r}),delete:e=>Promise.resolve().then(()=>{const r=a();delete r[JSON.stringify(e)],s().setItem(t,JSON.stringify(r))}),clear:()=>Promise.resolve().then(()=>{s().removeItem(t)})}}function createFallbackableCache(e){const t=[...e.caches],r=t.shift();return void 0===r?createNullCache():{get:(e,s,a={miss:()=>Promise.resolve()})=>r.get(e,s,a).catch(()=>createFallbackableCache({caches:t}).get(e,s,a)),set:(e,s)=>r.set(e,s).catch(()=>createFallbackableCache({caches:t}).set(e,s)),delete:e=>r.delete(e).catch(()=>createFallbackableCache({caches:t}).delete(e)),clear:()=>r.clear().catch(()=>createFallbackableCache({caches:t}).clear())}}function createNullCache(){return{get:(e,t,r={miss:()=>Promise.resolve()})=>t().then(e=>Promise.all([e,r.miss(e)])).then(([e])=>e),set:(e,t)=>Promise.resolve(t),delete:e=>Promise.resolve(),clear:()=>Promise.resolve()}}function createInMemoryCache(e={serializable:!0}){let t={};return{get(r,s,a={miss:()=>Promise.resolve()}){const o=JSON.stringify(r);if(o in t)return Promise.resolve(e.serializable?JSON.parse(t[o]):t[o]);const n=s(),i=a&&a.miss||(()=>Promise.resolve());return n.then(e=>i(e)).then(()=>n)},set:(r,s)=>(t[JSON.stringify(r)]=e.serializable?JSON.stringify(s):s,Promise.resolve(s)),delete:e=>(delete t[JSON.stringify(e)],Promise.resolve()),clear:()=>(t={},Promise.resolve())}}function createAuth(e,t,r){const s={"x-algolia-api-key":r,"x-algolia-application-id":t};return{headers:()=>e===AuthMode.WithinHeaders?s:{},queryParameters:()=>e===AuthMode.WithinQueryParameters?s:{}}}function createRetryablePromise(e){let t=0;const r=()=>(t++,new Promise(s=>{setTimeout(()=>{s(e(r))},Math.min(100*t,1e3))}));return e(r)}function createWaitablePromise(e,t=((e,t)=>Promise.resolve())){return Object.assign(e,{wait:r=>createWaitablePromise(e.then(e=>Promise.all([t(e,r),e])).then(e=>e[1]))})}function shuffle(e){let t=e.length-1;for(;t>0;t--){const r=Math.floor(Math.random()*(t+1)),s=e[t];e[t]=e[r],e[r]=s}return e}function addMethods(e,t){return t?(Object.keys(t).forEach(r=>{e[r]=t[r](e)}),e):e}function encode(e,...t){let r=0;return e.replace(/%s/g,()=>encodeURIComponent(t[r++]))}const version="4.8.5",AuthMode={WithinQueryParameters:0,WithinHeaders:1};function createMappedRequestOptions(e,t){const r=e||{},s=r.data||{};return Object.keys(r).forEach(e=>{-1===["timeout","headers","queryParameters","data","cacheable"].indexOf(e)&&(s[e]=r[e])}),{data:Object.entries(s).length>0?s:void 0,timeout:r.timeout||t,headers:r.headers||{},queryParameters:r.queryParameters||{},cacheable:r.cacheable}}const CallEnum={Read:1,Write:2,Any:3},HostStatusEnum={Up:1,Down:2,Timeouted:3},EXPIRATION_DELAY=12e4;function createStatefulHost(e,t=HostStatusEnum.Up){return{...e,status:t,lastUpdate:Date.now()}}function isStatefulHostUp(e){return e.status===HostStatusEnum.Up||Date.now()-e.lastUpdate>EXPIRATION_DELAY}function isStatefulHostTimeouted(e){return e.status===HostStatusEnum.Timeouted&&Date.now()-e.lastUpdate<=EXPIRATION_DELAY}function createStatelessHost(e){return"string"==typeof e?{protocol:"https",url:e,accept:CallEnum.Any}:{protocol:e.protocol||"https",url:e.url,accept:e.accept||CallEnum.Any}}const MethodEnum={Delete:"DELETE",Get:"GET",Post:"POST",Put:"PUT"};function createRetryableOptions(e,t){return Promise.all(t.map(t=>e.get(t,()=>Promise.resolve(createStatefulHost(t))))).then(e=>{const r=e.filter(e=>isStatefulHostUp(e)),s=e.filter(e=>isStatefulHostTimeouted(e)),a=[...r,...s];return{getTimeout:(e,t)=>(0===s.length&&0===e?1:s.length+3+e)*t,statelessHosts:a.length>0?a.map(e=>createStatelessHost(e)):t}})}const isNetworkError=({isTimedOut:e,status:t})=>!e&&0==~~t,isRetryable=e=>{const t=e.status;return e.isTimedOut||isNetworkError(e)||2!=~~(t/100)&&4!=~~(t/100)},isSuccess=({status:e})=>2==~~(e/100),retryDecision=(e,t)=>isRetryable(e)?t.onRetry(e):isSuccess(e)?t.onSucess(e):t.onFail(e);function retryableRequest(e,t,r,s){const a=[],o=serializeData(r,s),n=serializeHeaders(e,s),i=r.method,c=r.method!==MethodEnum.Get?{}:{...r.data,...s.data},l={"x-algolia-agent":e.userAgent.value,...e.queryParameters,...c,...s.queryParameters};let d=0;const u=(t,c)=>{const m=t.pop();if(void 0===m)throw createRetryError(stackTraceWithoutCredentials(a));const h={data:o,headers:n,method:i,url:serializeUrl(m,r.path,l),connectTimeout:c(d,e.timeouts.connect),responseTimeout:c(d,s.timeout)},p=e=>{const r={request:h,response:e,host:m,triesLeft:t.length};return a.push(r),r},y={onSucess:e=>deserializeSuccess(e),onRetry(r){const s=p(r);return r.isTimedOut&&d++,Promise.all([e.logger.info("Retryable failure",stackFrameWithoutCredentials(s)),e.hostsCache.set(m,createStatefulHost(m,r.isTimedOut?HostStatusEnum.Timeouted:HostStatusEnum.Down))]).then(()=>u(t,c))},onFail(e){throw p(e),deserializeFailure(e,stackTraceWithoutCredentials(a))}};return e.requester.send(h).then(e=>retryDecision(e,y))};return createRetryableOptions(e.hostsCache,t).then(e=>u([...e.statelessHosts].reverse(),e.getTimeout))}function createTransporter(e){const{hostsCache:t,logger:r,requester:s,requestsCache:a,responsesCache:o,timeouts:n,userAgent:i,hosts:c,queryParameters:l,headers:d}=e,u={hostsCache:t,logger:r,requester:s,requestsCache:a,responsesCache:o,timeouts:n,userAgent:i,headers:d,queryParameters:l,hosts:c.map(e=>createStatelessHost(e)),read(e,t){const r=createMappedRequestOptions(t,u.timeouts.read),s=()=>retryableRequest(u,u.hosts.filter(e=>0!=(e.accept&CallEnum.Read)),e,r);if(!0!==(void 0!==r.cacheable?r.cacheable:e.cacheable))return s();const a={request:e,mappedRequestOptions:r,transporter:{queryParameters:u.queryParameters,headers:u.headers}};return u.responsesCache.get(a,()=>u.requestsCache.get(a,()=>u.requestsCache.set(a,s()).then(e=>Promise.all([u.requestsCache.delete(a),e]),e=>Promise.all([u.requestsCache.delete(a),Promise.reject(e)])).then(([e,t])=>t)),{miss:e=>u.responsesCache.set(a,e)})},write:(e,t)=>retryableRequest(u,u.hosts.filter(e=>0!=(e.accept&CallEnum.Write)),e,createMappedRequestOptions(t,u.timeouts.write))};return u}function createUserAgent(e){const t={value:`Algolia for JavaScript (${e})`,add(e){const r=`; ${e.segment}${void 0!==e.version?` (${e.version})`:""}`;return-1===t.value.indexOf(r)&&(t.value=`${t.value}${r}`),t}};return t}function deserializeSuccess(e){try{return JSON.parse(e.content)}catch(t){throw createDeserializationError(t.message,e)}}function deserializeFailure({content:e,status:t},r){let s=e;try{s=JSON.parse(e).message}catch(e){}return createApiError(s,t,r)}function serializeUrl(e,t,r){const s=serializeQueryParameters(r);let a=`${e.protocol}://${e.url}/${"/"===t.charAt(0)?t.substr(1):t}`;return s.length&&(a+=`?${s}`),a}function serializeQueryParameters(e){return Object.keys(e).map(t=>encode("%s=%s",t,(e=>"[object Object]"===Object.prototype.toString.call(e)||"[object Array]"===Object.prototype.toString.call(e))(e[t])?JSON.stringify(e[t]):e[t])).join("&")}function serializeData(e,t){if(e.method===MethodEnum.Get||void 0===e.data&&void 0===t.data)return;const r=Array.isArray(e.data)?e.data:{...e.data,...t.data};return JSON.stringify(r)}function serializeHeaders(e,t){const r={...e.headers,...t.headers},s={};return Object.keys(r).forEach(e=>{const t=r[e];s[e.toLowerCase()]=t}),s}function stackTraceWithoutCredentials(e){return e.map(e=>stackFrameWithoutCredentials(e))}function stackFrameWithoutCredentials(e){const t=e.request.headers["x-algolia-api-key"]?{"x-algolia-api-key":"*****"}:{};return{...e,request:{...e.request,headers:{...e.request.headers,...t}}}}function createApiError(e,t,r){return{name:"ApiError",message:e,status:t,transporterStackTrace:r}}function createDeserializationError(e,t){return{name:"DeserializationError",message:e,response:t}}function createRetryError(e){return{name:"RetryError",message:"Unreachable hosts - your application id may be incorrect. If the error persists, contact support@algolia.com.",transporterStackTrace:e}}const createAnalyticsClient=e=>{const t=e.region||"us",r=createAuth(AuthMode.WithinHeaders,e.appId,e.apiKey),s=createTransporter({hosts:[{url:`analytics.${t}.algolia.com`}],...e,headers:{...r.headers(),...{"content-type":"application/json"},...e.headers},queryParameters:{...r.queryParameters(),...e.queryParameters}});return addMethods({appId:e.appId,transporter:s},e.methods)},addABTest=e=>(t,r)=>e.transporter.write({method:MethodEnum.Post,path:"2/abtests",data:t},r),deleteABTest=e=>(t,r)=>e.transporter.write({method:MethodEnum.Delete,path:encode("2/abtests/%s",t)},r),getABTest=e=>(t,r)=>e.transporter.read({method:MethodEnum.Get,path:encode("2/abtests/%s",t)},r),getABTests=e=>t=>e.transporter.read({method:MethodEnum.Get,path:"2/abtests"},t),stopABTest=e=>(t,r)=>e.transporter.write({method:MethodEnum.Post,path:encode("2/abtests/%s/stop",t)},r),createRecommendationClient=e=>{const t=e.region||"us",r=createAuth(AuthMode.WithinHeaders,e.appId,e.apiKey),s=createTransporter({hosts:[{url:`recommendation.${t}.algolia.com`}],...e,headers:{...r.headers(),...{"content-type":"application/json"},...e.headers},queryParameters:{...r.queryParameters(),...e.queryParameters}});return addMethods({appId:e.appId,transporter:s},e.methods)},getPersonalizationStrategy=e=>t=>e.transporter.read({method:MethodEnum.Get,path:"1/strategies/personalization"},t),setPersonalizationStrategy=e=>(t,r)=>e.transporter.write({method:MethodEnum.Post,path:"1/strategies/personalization",data:t},r);function createBrowsablePromise(e){const t=r=>e.request(r).then(s=>{if(void 0!==e.batch&&e.batch(s.hits),!e.shouldStop(s))return s.cursor?t({cursor:s.cursor}):t({page:(r.page||0)+1})});return t({})}const createSearchClient=e=>{const t=e.appId,r=createAuth(void 0!==e.authMode?e.authMode:AuthMode.WithinHeaders,t,e.apiKey),s=createTransporter({hosts:[{url:`${t}-dsn.algolia.net`,accept:CallEnum.Read},{url:`${t}.algolia.net`,accept:CallEnum.Write}].concat(shuffle([{url:`${t}-1.algolianet.com`},{url:`${t}-2.algolianet.com`},{url:`${t}-3.algolianet.com`}])),...e,headers:{...r.headers(),...{"content-type":"application/x-www-form-urlencoded"},...e.headers},queryParameters:{...r.queryParameters(),...e.queryParameters}});return addMethods({transporter:s,appId:t,addAlgoliaAgent(e,t){s.userAgent.add({segment:e,version:t})},clearCache:()=>Promise.all([s.requestsCache.clear(),s.responsesCache.clear()]).then(()=>void 0)},e.methods)};function createMissingObjectIDError(){return{name:"MissingObjectIDError",message:"All objects must have an unique objectID (like a primary key) to be valid. Algolia is also able to generate objectIDs automatically but *it's not recommended*. To do it, use the `{'autoGenerateObjectIDIfNotExist': true}` option."}}function createObjectNotFoundError(){return{name:"ObjectNotFoundError",message:"Object not found."}}const addApiKey=e=>(t,r)=>{const{queryParameters:s,...a}=r||{},o={acl:t,...void 0!==s?{queryParameters:s}:{}};return createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:"1/keys",data:o},a),(t,r)=>createRetryablePromise(s=>getApiKey(e)(t.key,r).catch(e=>{if(404!==e.status)throw e;return s()})))},assignUserID=e=>(t,r,s)=>{const a=createMappedRequestOptions(s);return a.queryParameters["X-Algolia-User-ID"]=t,e.transporter.write({method:MethodEnum.Post,path:"1/clusters/mapping",data:{cluster:r}},a)},assignUserIDs=e=>(t,r,s)=>e.transporter.write({method:MethodEnum.Post,path:"1/clusters/mapping/batch",data:{users:t,cluster:r}},s),copyIndex=e=>(t,r,s)=>{return createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/operation",t),data:{operation:"copy",destination:r}},s),(r,s)=>initIndex(e)(t,{methods:{waitTask:waitTask}}).waitTask(r.taskID,s))},copyRules=e=>(t,r,s)=>copyIndex(e)(t,r,{...s,scope:[ScopeEnum.Rules]}),copySettings=e=>(t,r,s)=>copyIndex(e)(t,r,{...s,scope:[ScopeEnum.Settings]}),copySynonyms=e=>(t,r,s)=>copyIndex(e)(t,r,{...s,scope:[ScopeEnum.Synonyms]}),deleteApiKey=e=>(t,r)=>{return createWaitablePromise(e.transporter.write({method:MethodEnum.Delete,path:encode("1/keys/%s",t)},r),(r,s)=>createRetryablePromise(r=>getApiKey(e)(t,s).then(r).catch(e=>{if(404!==e.status)throw e})))},getApiKey=e=>(t,r)=>e.transporter.read({method:MethodEnum.Get,path:encode("1/keys/%s",t)},r),getLogs=e=>t=>e.transporter.read({method:MethodEnum.Get,path:"1/logs"},t),getTopUserIDs=e=>t=>e.transporter.read({method:MethodEnum.Get,path:"1/clusters/mapping/top"},t),getUserID=e=>(t,r)=>e.transporter.read({method:MethodEnum.Get,path:encode("1/clusters/mapping/%s",t)},r),hasPendingMappings=e=>t=>{const{retrieveMappings:r,...s}=t||{};return!0===r&&(s.getClusters=!0),e.transporter.read({method:MethodEnum.Get,path:"1/clusters/mapping/pending"},s)},initIndex=e=>(t,r={})=>{return addMethods({transporter:e.transporter,appId:e.appId,indexName:t},r.methods)},listApiKeys=e=>t=>e.transporter.read({method:MethodEnum.Get,path:"1/keys"},t),listClusters=e=>t=>e.transporter.read({method:MethodEnum.Get,path:"1/clusters"},t),listIndices=e=>t=>e.transporter.read({method:MethodEnum.Get,path:"1/indexes"},t),listUserIDs=e=>t=>e.transporter.read({method:MethodEnum.Get,path:"1/clusters/mapping"},t),moveIndex=e=>(t,r,s)=>{return createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/operation",t),data:{operation:"move",destination:r}},s),(r,s)=>initIndex(e)(t,{methods:{waitTask:waitTask}}).waitTask(r.taskID,s))},multipleBatch=e=>(t,r)=>{return createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:"1/indexes/*/batch",data:{requests:t}},r),(t,r)=>Promise.all(Object.keys(t.taskID).map(s=>initIndex(e)(s,{methods:{waitTask:waitTask}}).waitTask(t.taskID[s],r))))},multipleGetObjects=e=>(t,r)=>e.transporter.read({method:MethodEnum.Post,path:"1/indexes/*/objects",data:{requests:t}},r),multipleQueries=e=>(t,r)=>{const s=t.map(e=>({...e,params:serializeQueryParameters(e.params||{})}));return e.transporter.read({method:MethodEnum.Post,path:"1/indexes/*/queries",data:{requests:s},cacheable:!0},r)},multipleSearchForFacetValues=e=>(t,r)=>Promise.all(t.map(t=>{const{facetName:s,facetQuery:a,...o}=t.params;return initIndex(e)(t.indexName,{methods:{searchForFacetValues:searchForFacetValues}}).searchForFacetValues(s,a,{...r,...o})})),removeUserID=e=>(t,r)=>{const s=createMappedRequestOptions(r);return s.queryParameters["X-Algolia-User-ID"]=t,e.transporter.write({method:MethodEnum.Delete,path:"1/clusters/mapping"},s)},restoreApiKey=e=>(t,r)=>{return createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/keys/%s/restore",t)},r),(r,s)=>createRetryablePromise(r=>getApiKey(e)(t,s).catch(e=>{if(404!==e.status)throw e;return r()})))},searchUserIDs=e=>(t,r)=>e.transporter.read({method:MethodEnum.Post,path:"1/clusters/mapping/search",data:{query:t}},r),updateApiKey=e=>(t,r)=>{const s=Object.assign({},r),{queryParameters:a,...o}=r||{},n=a?{queryParameters:a}:{},i=["acl","indexes","referers","restrictSources","queryParameters","description","maxQueriesPerIPPerHour","maxHitsPerQuery"];return createWaitablePromise(e.transporter.write({method:MethodEnum.Put,path:encode("1/keys/%s",t),data:n},o),(r,a)=>createRetryablePromise(r=>getApiKey(e)(t,a).then(e=>(e=>Object.keys(s).filter(e=>-1!==i.indexOf(e)).every(t=>e[t]===s[t]))(e)?Promise.resolve():r())))},batch=e=>(t,r)=>{return createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/batch",e.indexName),data:{requests:t}},r),(t,r)=>waitTask(e)(t.taskID,r))},browseObjects=e=>t=>createBrowsablePromise({shouldStop:e=>void 0===e.cursor,...t,request:r=>e.transporter.read({method:MethodEnum.Post,path:encode("1/indexes/%s/browse",e.indexName),data:r},t)}),browseRules=e=>t=>{const r={hitsPerPage:1e3,...t};return createBrowsablePromise({shouldStop:e=>e.hits.length<r.hitsPerPage,...r,request:t=>searchRules(e)("",{...r,...t}).then(e=>({...e,hits:e.hits.map(e=>(delete e._highlightResult,e))}))})},browseSynonyms=e=>t=>{const r={hitsPerPage:1e3,...t};return createBrowsablePromise({shouldStop:e=>e.hits.length<r.hitsPerPage,...r,request:t=>searchSynonyms(e)("",{...r,...t}).then(e=>({...e,hits:e.hits.map(e=>(delete e._highlightResult,e))}))})},chunkedBatch=e=>(t,r,s)=>{const{batchSize:a,...o}=s||{},n={taskIDs:[],objectIDs:[]},i=(s=0)=>{const c=[];let l;for(l=s;l<t.length&&(c.push(t[l]),c.length!==(a||1e3));l++);return 0===c.length?Promise.resolve(n):batch(e)(c.map(e=>({action:r,body:e})),o).then(e=>(n.objectIDs=n.objectIDs.concat(e.objectIDs),n.taskIDs.push(e.taskID),i(++l)))};return createWaitablePromise(i(),(t,r)=>Promise.all(t.taskIDs.map(t=>waitTask(e)(t,r))))},clearObjects=e=>t=>createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/clear",e.indexName)},t),(t,r)=>waitTask(e)(t.taskID,r)),clearRules=e=>t=>{const{forwardToReplicas:r,...s}=t||{},a=createMappedRequestOptions(s);return r&&(a.queryParameters.forwardToReplicas=1),createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/rules/clear",e.indexName)},a),(t,r)=>waitTask(e)(t.taskID,r))},clearSynonyms=e=>t=>{const{forwardToReplicas:r,...s}=t||{},a=createMappedRequestOptions(s);return r&&(a.queryParameters.forwardToReplicas=1),createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/synonyms/clear",e.indexName)},a),(t,r)=>waitTask(e)(t.taskID,r))},deleteBy=e=>(t,r)=>createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/deleteByQuery",e.indexName),data:t},r),(t,r)=>waitTask(e)(t.taskID,r)),deleteIndex=e=>t=>createWaitablePromise(e.transporter.write({method:MethodEnum.Delete,path:encode("1/indexes/%s",e.indexName)},t),(t,r)=>waitTask(e)(t.taskID,r)),deleteObject=e=>(t,r)=>createWaitablePromise(deleteObjects(e)([t],r).then(e=>({taskID:e.taskIDs[0]})),(t,r)=>waitTask(e)(t.taskID,r)),deleteObjects=e=>(t,r)=>{const s=t.map(e=>({objectID:e}));return chunkedBatch(e)(s,BatchActionEnum.DeleteObject,r)},deleteRule=e=>(t,r)=>{const{forwardToReplicas:s,...a}=r||{},o=createMappedRequestOptions(a);return s&&(o.queryParameters.forwardToReplicas=1),createWaitablePromise(e.transporter.write({method:MethodEnum.Delete,path:encode("1/indexes/%s/rules/%s",e.indexName,t)},o),(t,r)=>waitTask(e)(t.taskID,r))},deleteSynonym=e=>(t,r)=>{const{forwardToReplicas:s,...a}=r||{},o=createMappedRequestOptions(a);return s&&(o.queryParameters.forwardToReplicas=1),createWaitablePromise(e.transporter.write({method:MethodEnum.Delete,path:encode("1/indexes/%s/synonyms/%s",e.indexName,t)},o),(t,r)=>waitTask(e)(t.taskID,r))},exists=e=>t=>getSettings(e)(t).then(()=>!0).catch(e=>{if(404!==e.status)throw e;return!1}),findAnswers=e=>(t,r,s)=>e.transporter.read({method:MethodEnum.Post,path:encode("1/answers/%s/prediction",e.indexName),data:{query:t,queryLanguages:r},cacheable:!0},s),findObject=e=>(t,r)=>{const{query:s,paginate:a,...o}=r||{};let n=0;const i=()=>search(e)(s||"",{...o,page:n}).then(e=>{for(const[r,s]of Object.entries(e.hits))if(t(s))return{object:s,position:parseInt(r,10),page:n};if(n++,!1===a||n>=e.nbPages)throw createObjectNotFoundError();return i()});return i()},getObject=e=>(t,r)=>e.transporter.read({method:MethodEnum.Get,path:encode("1/indexes/%s/%s",e.indexName,t)},r),getObjectPosition=()=>(e,t)=>{for(const[r,s]of Object.entries(e.hits))if(s.objectID===t)return parseInt(r,10);return-1},getObjects=e=>(t,r)=>{const{attributesToRetrieve:s,...a}=r||{},o=t.map(t=>({indexName:e.indexName,objectID:t,...s?{attributesToRetrieve:s}:{}}));return e.transporter.read({method:MethodEnum.Post,path:"1/indexes/*/objects",data:{requests:o}},a)},getRule=e=>(t,r)=>e.transporter.read({method:MethodEnum.Get,path:encode("1/indexes/%s/rules/%s",e.indexName,t)},r),getSettings=e=>t=>e.transporter.read({method:MethodEnum.Get,path:encode("1/indexes/%s/settings",e.indexName),data:{getVersion:2}},t),getSynonym=e=>(t,r)=>e.transporter.read({method:MethodEnum.Get,path:encode("1/indexes/%s/synonyms/%s",e.indexName,t)},r),getTask=e=>(t,r)=>e.transporter.read({method:MethodEnum.Get,path:encode("1/indexes/%s/task/%s",e.indexName,t.toString())},r),partialUpdateObject=e=>(t,r)=>createWaitablePromise(partialUpdateObjects(e)([t],r).then(e=>({objectID:e.objectIDs[0],taskID:e.taskIDs[0]})),(t,r)=>waitTask(e)(t.taskID,r)),partialUpdateObjects=e=>(t,r)=>{const{createIfNotExists:s,...a}=r||{},o=s?BatchActionEnum.PartialUpdateObject:BatchActionEnum.PartialUpdateObjectNoCreate;return chunkedBatch(e)(t,o,a)},replaceAllObjects=e=>(t,r)=>{const{safe:s,autoGenerateObjectIDIfNotExist:a,batchSize:o,...n}=r||{},i=(t,r,s,a)=>createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/operation",t),data:{operation:s,destination:r}},a),(t,r)=>waitTask(e)(t.taskID,r)),c=Math.random().toString(36).substring(7),l=`${e.indexName}_tmp_${c}`,d=saveObjects({appId:e.appId,transporter:e.transporter,indexName:l});let u=[];const m=i(e.indexName,l,"copy",{...n,scope:["settings","synonyms","rules"]});return u.push(m),createWaitablePromise((s?m.wait(n):m).then(()=>{const e=d(t,{...n,autoGenerateObjectIDIfNotExist:a,batchSize:o});return u.push(e),s?e.wait(n):e}).then(()=>{const t=i(l,e.indexName,"move",n);return u.push(t),s?t.wait(n):t}).then(()=>Promise.all(u)).then(([e,t,r])=>({objectIDs:t.objectIDs,taskIDs:[e.taskID,...t.taskIDs,r.taskID]})),(e,t)=>Promise.all(u.map(e=>e.wait(t))))},replaceAllRules=e=>(t,r)=>saveRules(e)(t,{...r,clearExistingRules:!0}),replaceAllSynonyms=e=>(t,r)=>saveSynonyms(e)(t,{...r,clearExistingSynonyms:!0}),saveObject=e=>(t,r)=>createWaitablePromise(saveObjects(e)([t],r).then(e=>({objectID:e.objectIDs[0],taskID:e.taskIDs[0]})),(t,r)=>waitTask(e)(t.taskID,r)),saveObjects=e=>(t,r)=>{const{autoGenerateObjectIDIfNotExist:s,...a}=r||{},o=s?BatchActionEnum.AddObject:BatchActionEnum.UpdateObject;if(o===BatchActionEnum.UpdateObject)for(const e of t)if(void 0===e.objectID)return createWaitablePromise(Promise.reject(createMissingObjectIDError()));return chunkedBatch(e)(t,o,a)},saveRule=e=>(t,r)=>saveRules(e)([t],r),saveRules=e=>(t,r)=>{const{forwardToReplicas:s,clearExistingRules:a,...o}=r||{},n=createMappedRequestOptions(o);return s&&(n.queryParameters.forwardToReplicas=1),a&&(n.queryParameters.clearExistingRules=1),createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/rules/batch",e.indexName),data:t},n),(t,r)=>waitTask(e)(t.taskID,r))},saveSynonym=e=>(t,r)=>saveSynonyms(e)([t],r),saveSynonyms=e=>(t,r)=>{const{forwardToReplicas:s,clearExistingSynonyms:a,replaceExistingSynonyms:o,...n}=r||{},i=createMappedRequestOptions(n);return s&&(i.queryParameters.forwardToReplicas=1),(o||a)&&(i.queryParameters.replaceExistingSynonyms=1),createWaitablePromise(e.transporter.write({method:MethodEnum.Post,path:encode("1/indexes/%s/synonyms/batch",e.indexName),data:t},i),(t,r)=>waitTask(e)(t.taskID,r))},search=e=>(t,r)=>e.transporter.read({method:MethodEnum.Post,path:encode("1/indexes/%s/query",e.indexName),data:{query:t},cacheable:!0},r),searchForFacetValues=e=>(t,r,s)=>e.transporter.read({method:MethodEnum.Post,path:encode("1/indexes/%s/facets/%s/query",e.indexName,t),data:{facetQuery:r},cacheable:!0},s),searchRules=e=>(t,r)=>e.transporter.read({method:MethodEnum.Post,path:encode("1/indexes/%s/rules/search",e.indexName),data:{query:t}},r),searchSynonyms=e=>(t,r)=>e.transporter.read({method:MethodEnum.Post,path:encode("1/indexes/%s/synonyms/search",e.indexName),data:{query:t}},r),setSettings=e=>(t,r)=>{const{forwardToReplicas:s,...a}=r||{},o=createMappedRequestOptions(a);return s&&(o.queryParameters.forwardToReplicas=1),createWaitablePromise(e.transporter.write({method:MethodEnum.Put,path:encode("1/indexes/%s/settings",e.indexName),data:t},o),(t,r)=>waitTask(e)(t.taskID,r))},waitTask=e=>(t,r)=>createRetryablePromise(s=>getTask(e)(t,r).then(e=>"published"!==e.status?s():void 0)),BatchActionEnum={AddObject:"addObject",UpdateObject:"updateObject",PartialUpdateObject:"partialUpdateObject",PartialUpdateObjectNoCreate:"partialUpdateObjectNoCreate",DeleteObject:"deleteObject",DeleteIndex:"delete",ClearIndex:"clear"},ScopeEnum={Settings:"settings",Synonyms:"synonyms",Rules:"rules"},LogLevelEnum={Debug:1,Info:2,Error:3};function createConsoleLogger(e){return{debug:(t,r)=>(LogLevelEnum.Debug>=e&&console.debug(t,r),Promise.resolve()),info:(t,r)=>(LogLevelEnum.Info>=e&&console.info(t,r),Promise.resolve()),error:(e,t)=>(console.error(e,t),Promise.resolve())}}function createBrowserXhrRequester(){return{send:e=>new Promise(t=>{const r=new XMLHttpRequest;r.open(e.method,e.url,!0),Object.keys(e.headers).forEach(t=>r.setRequestHeader(t,e.headers[t]));const s=(e,s)=>setTimeout(()=>{r.abort(),t({status:0,content:s,isTimedOut:!0})},1e3*e),a=s(e.connectTimeout,"Connection timeout");let o;r.onreadystatechange=(()=>{r.readyState>r.OPENED&&void 0===o&&(clearTimeout(a),o=s(e.responseTimeout,"Socket timeout"))}),r.onerror=(()=>{0===r.status&&(clearTimeout(a),clearTimeout(o),t({content:r.responseText||"Network request failed",status:r.status,isTimedOut:!1}))}),r.onload=(()=>{clearTimeout(a),clearTimeout(o),t({content:r.responseText,status:r.status,isTimedOut:!1})}),r.send(e.data)})}}function algoliasearch(e,t,r){const s={appId:e,apiKey:t,timeouts:{connect:1,read:2,write:30},requester:createBrowserXhrRequester(),logger:createConsoleLogger(LogLevelEnum.Error),responsesCache:createInMemoryCache(),requestsCache:createInMemoryCache({serializable:!1}),hostsCache:createFallbackableCache({caches:[createBrowserLocalStorageCache({key:`${version}-${e}`}),createInMemoryCache()]}),userAgent:createUserAgent(version).add({segment:"Browser"})};return createSearchClient({...s,...r,methods:{search:multipleQueries,searchForFacetValues:multipleSearchForFacetValues,multipleBatch:multipleBatch,multipleGetObjects:multipleGetObjects,multipleQueries:multipleQueries,copyIndex:copyIndex,copySettings:copySettings,copySynonyms:copySynonyms,copyRules:copyRules,moveIndex:moveIndex,listIndices:listIndices,getLogs:getLogs,listClusters:listClusters,multipleSearchForFacetValues:multipleSearchForFacetValues,getApiKey:getApiKey,addApiKey:addApiKey,listApiKeys:listApiKeys,updateApiKey:updateApiKey,deleteApiKey:deleteApiKey,restoreApiKey:restoreApiKey,assignUserID:assignUserID,assignUserIDs:assignUserIDs,getUserID:getUserID,searchUserIDs:searchUserIDs,listUserIDs:listUserIDs,getTopUserIDs:getTopUserIDs,removeUserID:removeUserID,hasPendingMappings:hasPendingMappings,initIndex:e=>t=>initIndex(e)(t,{methods:{batch:batch,delete:deleteIndex,findAnswers:findAnswers,getObject:getObject,getObjects:getObjects,saveObject:saveObject,saveObjects:saveObjects,search:search,searchForFacetValues:searchForFacetValues,waitTask:waitTask,setSettings:setSettings,getSettings:getSettings,partialUpdateObject:partialUpdateObject,partialUpdateObjects:partialUpdateObjects,deleteObject:deleteObject,deleteObjects:deleteObjects,deleteBy:deleteBy,clearObjects:clearObjects,browseObjects:browseObjects,getObjectPosition:getObjectPosition,findObject:findObject,exists:exists,saveSynonym:saveSynonym,saveSynonyms:saveSynonyms,getSynonym:getSynonym,searchSynonyms:searchSynonyms,browseSynonyms:browseSynonyms,deleteSynonym:deleteSynonym,clearSynonyms:clearSynonyms,replaceAllObjects:replaceAllObjects,replaceAllSynonyms:replaceAllSynonyms,searchRules:searchRules,getRule:getRule,deleteRule:deleteRule,saveRule:saveRule,saveRules:saveRules,replaceAllRules:replaceAllRules,browseRules:browseRules,clearRules:clearRules}}),initAnalytics:()=>e=>createAnalyticsClient({...s,...e,methods:{addABTest:addABTest,getABTest:getABTest,getABTests:getABTests,stopABTest:stopABTest,deleteABTest:deleteABTest}}),initRecommendation:()=>e=>createRecommendationClient({...s,...e,methods:{getPersonalizationStrategy:getPersonalizationStrategy,setPersonalizationStrategy:setPersonalizationStrategy}})}})}algoliasearch.version=version;export default algoliasearch;