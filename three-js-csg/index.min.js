"use strict";var ThreeBSP,EPSILON=1e-5,COPLANAR=0,FRONT=1,BACK=2,SPANNING=3;module.exports=function(v){var d=function(t){var e,i,r,o,s,n,l,h=[];if(t instanceof v.Geometry)this.matrix=new v.Matrix4;else{if(!(t instanceof v.Mesh)){if(t instanceof d.Node)return this.tree=t,this.matrix=new v.Matrix4,this;throw"ThreeBSP: Given geometry is unsupported"}t.updateMatrix(),this.matrix=t.matrix.clone(),t=t.geometry}for(e=0,i=t.faces.length;e<i;e++)r=t.faces[e],s=t.faceVertexUvs[0][e],l=new d.Polygon,r instanceof v.Face3?(o=t.vertices[r.a],n=s?new v.Vector2(s[0].x,s[0].y):null,(o=new d.Vertex(o.x,o.y,o.z,r.vertexNormals[0],n)).applyMatrix4(this.matrix),l.vertices.push(o),o=t.vertices[r.b],n=s?new v.Vector2(s[1].x,s[1].y):null,(o=new d.Vertex(o.x,o.y,o.z,r.vertexNormals[2],n)).applyMatrix4(this.matrix),l.vertices.push(o),o=t.vertices[r.c],n=s?new v.Vector2(s[2].x,s[2].y):null,(o=new d.Vertex(o.x,o.y,o.z,r.vertexNormals[2],n)).applyMatrix4(this.matrix)):(v.Face4,o=t.vertices[r.a],n=s?new v.Vector2(s[0].x,s[0].y):null,(o=new d.Vertex(o.x,o.y,o.z,r.vertexNormals[0],n)).applyMatrix4(this.matrix),l.vertices.push(o),o=t.vertices[r.b],n=s?new v.Vector2(s[1].x,s[1].y):null,(o=new d.Vertex(o.x,o.y,o.z,r.vertexNormals[1],n)).applyMatrix4(this.matrix),l.vertices.push(o),o=t.vertices[r.c],n=s?new v.Vector2(s[2].x,s[2].y):null,(o=new d.Vertex(o.x,o.y,o.z,r.vertexNormals[2],n)).applyMatrix4(this.matrix),l.vertices.push(o),o=t.vertices[r.d],n=s?new v.Vector2(s[3].x,s[3].y):null,(o=new d.Vertex(o.x,o.y,o.z,r.vertexNormals[3],n)).applyMatrix4(this.matrix)),l.vertices.push(o),l.calculateProperties(),h.push(l);this.tree=new d.Node(h)};return d.prototype.subtract=function(t){var e=this.tree.clone(),i=t.tree.clone();return e.invert(),e.clipTo(i),i.clipTo(e),i.invert(),i.clipTo(e),i.invert(),e.build(i.allPolygons()),e.invert(),(e=new d(e)).matrix=this.matrix,e},d.prototype.union=function(t){var e=this.tree.clone(),i=t.tree.clone();return e.clipTo(i),i.clipTo(e),i.invert(),i.clipTo(e),i.invert(),e.build(i.allPolygons()),(e=new d(e)).matrix=this.matrix,e},d.prototype.intersect=function(t){var e=this.tree.clone(),i=t.tree.clone();return e.invert(),i.clipTo(e),i.invert(),e.clipTo(i),i.clipTo(e),e.build(i.allPolygons()),e.invert(),(e=new d(e)).matrix=this.matrix,e},d.prototype.toGeometry=function(){for(var t,e,i,r,o,s,n,l,h,c=(new v.Matrix4).getInverse(this.matrix),a=new v.Geometry,p=this.tree.allPolygons(),y=p.length,u={},x=0;x<y;x++)for(i=(e=p[x]).vertices.length,t=2;t<i;t++)h=[],n=e.vertices[0],h.push(new v.Vector2(n.uv.x,n.uv.y)),(n=new v.Vector3(n.x,n.y,n.z)).applyMatrix4(c),r=void 0!==u[n.x+","+n.y+","+n.z]?u[n.x+","+n.y+","+n.z]:(a.vertices.push(n),u[n.x+","+n.y+","+n.z]=a.vertices.length-1),n=e.vertices[t-1],h.push(new v.Vector2(n.uv.x,n.uv.y)),(n=new v.Vector3(n.x,n.y,n.z)).applyMatrix4(c),o=void 0!==u[n.x+","+n.y+","+n.z]?u[n.x+","+n.y+","+n.z]:(a.vertices.push(n),u[n.x+","+n.y+","+n.z]=a.vertices.length-1),n=e.vertices[t],h.push(new v.Vector2(n.uv.x,n.uv.y)),(n=new v.Vector3(n.x,n.y,n.z)).applyMatrix4(c),s=void 0!==u[n.x+","+n.y+","+n.z]?u[n.x+","+n.y+","+n.z]:(a.vertices.push(n),u[n.x+","+n.y+","+n.z]=a.vertices.length-1),l=new v.Face3(r,o,s,new v.Vector3(e.normal.x,e.normal.y,e.normal.z)),a.faces.push(l),a.faceVertexUvs[0].push(h);return a},d.prototype.toMesh=function(t){var e=this.toGeometry(),i=new v.Mesh(e,t);return i.position.setFromMatrixPosition(this.matrix),i.rotation.setFromRotationMatrix(this.matrix),i},d.Polygon=function(t,e,i){t instanceof Array||(t=[]),0<(this.vertices=t).length?this.calculateProperties():this.normal=this.w=void 0},d.Polygon.prototype.calculateProperties=function(){var t=this.vertices[0],e=this.vertices[1],i=this.vertices[2];return this.normal=e.clone().subtract(t).cross(i.clone().subtract(t)).normalize(),this.w=this.normal.clone().dot(t),this},d.Polygon.prototype.clone=function(){for(var t=new d.Polygon,e=0,i=this.vertices.length;e<i;e++)t.vertices.push(this.vertices[e].clone());return t.calculateProperties(),t},d.Polygon.prototype.flip=function(){var t,e=[];for(this.normal.multiplyScalar(-1),this.w*=-1,t=this.vertices.length-1;0<=t;t--)e.push(this.vertices[t]);return this.vertices=e,this},d.Polygon.prototype.classifyVertex=function(t){var e=this.normal.dot(t)-this.w;return e<-EPSILON?BACK:EPSILON<e?FRONT:COPLANAR},d.Polygon.prototype.classifySide=function(t){for(var e,i,r=0,o=0,s=t.vertices.length,n=0;n<s;n++)e=t.vertices[n],(i=this.classifyVertex(e))===FRONT?r++:i===BACK&&o++;return 0<r&&0===o?FRONT:0===r&&0<o?BACK:0===r&&0===o?COPLANAR:SPANNING},d.Polygon.prototype.splitPolygon=function(t,e,i,r,o){var s=this.classifySide(t);if(s===COPLANAR)(0<this.normal.dot(t.normal)?e:i).push(t);else if(s===FRONT)r.push(t);else if(s===BACK)o.push(t);else{for(var n,l,h,c,a,p,y,u=[],x=[],v=0,f=t.vertices.length;v<f;v++)n=(v+1)%f,c=t.vertices[v],a=t.vertices[n],l=this.classifyVertex(c),h=this.classifyVertex(a),l!=BACK&&u.push(c),l!=FRONT&&x.push(c),(l|h)===SPANNING&&(p=(this.w-this.normal.dot(c))/this.normal.dot(a.clone().subtract(c)),y=c.interpolate(a,p),u.push(y),x.push(y));3<=u.length&&r.push(new d.Polygon(u).calculateProperties()),3<=x.length&&o.push(new d.Polygon(x).calculateProperties())}},d.Vertex=function(t,e,i,r,o){this.x=t,this.y=e,this.z=i,this.normal=r||new v.Vector3,this.uv=o||new v.Vector2},d.Vertex.prototype.clone=function(){return new d.Vertex(this.x,this.y,this.z,this.normal.clone(),this.uv.clone())},d.Vertex.prototype.add=function(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this},d.Vertex.prototype.subtract=function(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this},d.Vertex.prototype.multiplyScalar=function(t){return this.x*=t,this.y*=t,this.z*=t,this},d.Vertex.prototype.cross=function(t){var e=this.x,i=this.y,r=this.z;return this.x=i*t.z-r*t.y,this.y=r*t.x-e*t.z,this.z=e*t.y-i*t.x,this},d.Vertex.prototype.normalize=function(){var t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);return this.x/=t,this.y/=t,this.z/=t,this},d.Vertex.prototype.dot=function(t){return this.x*t.x+this.y*t.y+this.z*t.z},d.Vertex.prototype.lerp=function(t,e){return this.add(t.clone().subtract(this).multiplyScalar(e)),this.normal.add(t.normal.clone().sub(this.normal).multiplyScalar(e)),this.uv.add(t.uv.clone().sub(this.uv).multiplyScalar(e)),this},d.Vertex.prototype.interpolate=function(t,e){return this.clone().lerp(t,e)},d.Vertex.prototype.applyMatrix4=function(t){var e=this.x,i=this.y,r=this.z,o=t.elements;return this.x=o[0]*e+o[4]*i+o[8]*r+o[12],this.y=o[1]*e+o[5]*i+o[9]*r+o[13],this.z=o[2]*e+o[6]*i+o[10]*r+o[14],this},d.Node=function(t){var e,i,r=[],o=[];if(this.polygons=[],this.front=this.back=void 0,t instanceof Array&&0!==t.length){for(this.divider=t[0].clone(),e=0,i=t.length;e<i;e++)this.divider.splitPolygon(t[e],this.polygons,this.polygons,r,o);0<r.length&&(this.front=new d.Node(r)),0<o.length&&(this.back=new d.Node(o))}},d.Node.isConvex=function(t){for(var e,i=0;i<t.length;i++)for(e=0;e<t.length;e++)if(i!==e&&t[i].classifySide(t[e])!==BACK)return!1;return!0},d.Node.prototype.build=function(t){var e,i,r=[],o=[];for(this.divider||(this.divider=t[0].clone()),e=0,i=t.length;e<i;e++)this.divider.splitPolygon(t[e],this.polygons,this.polygons,r,o);0<r.length&&(this.front||(this.front=new d.Node),this.front.build(r)),0<o.length&&(this.back||(this.back=new d.Node),this.back.build(o))},d.Node.prototype.allPolygons=function(){var t=this.polygons.slice();return this.front&&(t=t.concat(this.front.allPolygons())),this.back&&(t=t.concat(this.back.allPolygons())),t},d.Node.prototype.clone=function(){var t=new d.Node;return t.divider=this.divider.clone(),t.polygons=this.polygons.map(function(t){return t.clone()}),t.front=this.front&&this.front.clone(),t.back=this.back&&this.back.clone(),t},d.Node.prototype.invert=function(){for(var t,e=0,i=this.polygons.length;e<i;e++)this.polygons[e].flip();return this.divider.flip(),this.front&&this.front.invert(),this.back&&this.back.invert(),t=this.front,this.front=this.back,this.back=t,this},d.Node.prototype.clipPolygons=function(t){var e,i,r,o;if(!this.divider)return t.slice();for(r=[],o=[],e=0,i=t.length;e<i;e++)this.divider.splitPolygon(t[e],r,o,r,o);return this.front&&(r=this.front.clipPolygons(r)),o=this.back?this.back.clipPolygons(o):[],r.concat(o)},d.Node.prototype.clipTo=function(t){this.polygons=t.clipPolygons(this.polygons),this.front&&this.front.clipTo(t),this.back&&this.back.clipTo(t)},d};