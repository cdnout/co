import{EventEmitter}from"./event-emitter";export class EventHub extends EventEmitter{constructor(t){super(),this._layoutManager=t,this._childEventListener=(t=>this.onEventFromChild(t)),this._dontPropagateToParent=null,this._childEventSource=null,this.on(EventEmitter.ALL_EVENT,(t,...e)=>this.onEventFromThis(t,e)),globalThis.addEventListener(EventHub.ChildEventName,this._childEventListener,{passive:!0})}destroy(){globalThis.removeEventListener(EventHub.ChildEventName,this._childEventListener)}onEventFromParent(t,...e){this._dontPropagateToParent=t,this.emitUnknown(t,e)}onEventFromThis(t,...e){this._layoutManager.isSubWindow&&e[0]!==this._dontPropagateToParent&&this.propagateToParent(t,e),this.propagateToChildren(t,e),this._dontPropagateToParent=null,this._childEventSource=null}onEventFromChild(t){const e=t.detail;this._childEventSource=e.layoutManager,this.emitUnknown(e.eventName,e.args)}propagateToParent(t,e){const n={bubbles:!0,cancelable:!0,detail:{layoutManager:this._layoutManager,eventName:t,args:e}},o=new CustomEvent(EventHub.ChildEventName,n);globalThis.opener.dispatchEvent(o)}propagateToChildren(t,e){for(let n=0;n<this._layoutManager.openPopouts.length;n++){const o=this._layoutManager.openPopouts[n].getGlInstance();o&&o!==this._childEventSource&&o.eventHub.onEventFromParent(t,e)}}};!function(t){t.ChildEventName="gl_child_event"}(EventHub||(EventHub={}));