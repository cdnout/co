import{EventEmitter}from"./event-emitter";export class DragListener extends EventEmitter{constructor(t,e){super(),this._eElement=t,this._mouseTouchTracking=!1,this._mouseDownEventListener=(t=>this.onMouseDown(t)),this._mouseMoveEventListener=(t=>this.onMouseMove(t)),this._mouseUpEventListener=(t=>this.onMouseUp(t)),this._touchStartEventListener=(t=>this.onTouchStart(t)),this._touchMoveEventListener=(t=>this.onTouchMove(t)),this._touchEndEventListener=(t=>this.onTouchEnd(t)),this._timeout=void 0,this._allowableTargets=[t,...e],this._oDocument=document,this._eBody=document.body,this._nDelay=1800,this._nDistance=10,this._nX=0,this._nY=0,this._nOriginalX=0,this._nOriginalY=0,this._dragging=!1,this._eElement.addEventListener("mousedown",this._mouseDownEventListener,{passive:!0}),this._eElement.addEventListener("touchstart",this._touchStartEventListener,{passive:!0})}destroy(){this.checkRemoveMouseTouchTrackingEventListeners(),this._eElement.removeEventListener("mousedown",this._mouseDownEventListener),this._eElement.removeEventListener("touchstart",this._touchStartEventListener)}cancelDrag(){const t={mouseEvent:void 0,touchEvent:void 0,pageX:-1,pageY:-1};this.processDragStop(t)}onMouseDown(t){if(this._allowableTargets.includes(t.target)&&0===t.button){const e=this.getMouseCoordinates(t);this.processMouseDownTouchStart(e)}}onTouchStart(t){if(this._allowableTargets.includes(t.target)){const e=this.getTouchCoordinates(t);void 0!==e&&this.processMouseDownTouchStart(e)}}processMouseDownTouchStart(t){this._nOriginalX=t.x,this._nOriginalY=t.y,this._oDocument.addEventListener("mousemove",this._mouseMoveEventListener),this._oDocument.addEventListener("touchmove",this._touchMoveEventListener,{passive:!0}),this._oDocument.addEventListener("mouseup",this._mouseUpEventListener,{passive:!0}),this._oDocument.addEventListener("touchend",this._touchEndEventListener,{passive:!0}),this._mouseTouchTracking=!0,this._timeout=setTimeout(()=>this.startDrag(),this._nDelay)}onMouseMove(t){if(this._mouseTouchTracking){t.preventDefault();const e=this.getMouseCoordinates(t),s={mouseEvent:t,touchEvent:void 0,pageX:e.x,pageY:e.y};this.processDragMove(s)}}onTouchMove(t){if(this._mouseTouchTracking){const e=this.getTouchCoordinates(t);if(void 0!==e){const s={mouseEvent:void 0,touchEvent:t,pageX:e.x,pageY:e.y};this.processDragMove(s)}}}processDragMove(t){this._nX=t.pageX-this._nOriginalX,this._nY=t.pageY-this._nOriginalY,!1===this._dragging&&(Math.abs(this._nX)>this._nDistance||Math.abs(this._nY)>this._nDistance)&&this.startDrag(),this._dragging&&this.emit("drag",this._nX,this._nY,t)}onMouseUp(t){const e=this.getMouseCoordinates(t),s={mouseEvent:t,touchEvent:void 0,pageX:e.x,pageY:e.y};this.processDragStop(s)}onTouchEnd(t){let e=this.getTouchCoordinates(t);void 0===e&&(e={x:this._nOriginalX,y:this._nOriginalY});const s={mouseEvent:void 0,touchEvent:t,pageX:e.x,pageY:e.y};this.processDragStop(s)}processDragStop(t){var e;void 0!==this._timeout&&(clearTimeout(this._timeout),this._timeout=void 0),this.checkRemoveMouseTouchTrackingEventListeners(),!0===this._dragging&&(this._eBody.classList.remove("lm_dragging"),this._eElement.classList.remove("lm_dragging"),null===(e=this._oDocument.querySelector("iframe"))||void 0===e||e.style.setProperty("pointer-events",""),this._dragging=!1,this.emit("dragStop",t))}checkRemoveMouseTouchTrackingEventListeners(){this._mouseTouchTracking&&(this._oDocument.removeEventListener("mousemove",this._mouseMoveEventListener),this._oDocument.removeEventListener("touchmove",this._touchMoveEventListener),this._oDocument.removeEventListener("mouseup",this._mouseUpEventListener),this._oDocument.removeEventListener("touchend",this._touchEndEventListener),this._mouseTouchTracking=!1)}startDrag(){var t;void 0!==this._timeout&&(clearTimeout(this._timeout),this._timeout=void 0),this._dragging=!0,this._eBody.classList.add("lm_dragging"),this._eElement.classList.add("lm_dragging"),null===(t=this._oDocument.querySelector("iframe"))||void 0===t||t.style.setProperty("pointer-events","none"),this.emit("dragStart",this._nOriginalX,this._nOriginalY)}getMouseCoordinates(t){return{x:t.pageX,y:t.pageY}}getTouchCoordinates(t){if(0!==t.targetTouches.length){const e=t.targetTouches[0];return{x:e.pageX,y:e.pageY}}}};