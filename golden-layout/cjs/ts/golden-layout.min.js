"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.GoldenLayout=void 0;const config_1=require("./config/config"),resolved_config_1=require("./config/resolved-config"),layout_manager_1=require("./layout-manager"),utils_1=require("./utils/utils");class GoldenLayout extends layout_manager_1.LayoutManager{constructor(e,t){super(GoldenLayout.createConfig(e,t)),this._subWindowsCreated=!1,this._creationTimeoutPassed=!1,this.isSubWindow&&(document.body.style.visibility="hidden"),void 0===this.layoutConfig.root&&this.init()}init(){if(!1===this._subWindowsCreated&&(this.createSubWindows(),this._subWindowsCreated=!0),"loading"!==document.readyState&&null!==document.body){if(!0===this.isSubWindow&&!1===this._creationTimeoutPassed)return setTimeout(()=>this.init(),7),void(this._creationTimeoutPassed=!0);!0===this.isSubWindow&&this.adjustToWindowMode(),super.init()}else document.addEventListener("DOMContentLoaded",()=>this.init(),{passive:!0})}createSubWindows(){for(let e=0;e<this.layoutConfig.openPopouts.length;e++){const t=this.layoutConfig.openPopouts[e];this.createPopoutFromPopoutLayoutConfig(t)}}adjustToWindowMode(){const e=document.createElement("div");e.classList.add("lm_popin"),e.setAttribute("title",this.layoutConfig.header.dock);const t=document.createElement("div");t.classList.add("lm_icon");const o=document.createElement("div");o.classList.add("lm_bg"),e.appendChild(t),e.appendChild(o),e.click=(()=>this.emit("popIn"));const i=document.head,n=new Array(4);n[0]=document.querySelectorAll("body link"),n[1]=document.querySelectorAll("body style"),n[2]=document.querySelectorAll("template"),n[3]=document.querySelectorAll(".gl_keep");for(let e=0;e<n.length;e++){const t=n[e];for(let e=0;e<t.length;e++){const o=t[e];i.appendChild(o)}}const s=document.body;s.innerHTML="",s.style.visibility="visible",s.appendChild(e);document.body.offsetHeight;window.__glInstance=this}}exports.GoldenLayout=GoldenLayout,function(e){e.createConfig=function(e,t){const o=utils_1.getQueryStringParam("gl-window"),i=null!==o;let n;if(null!==o){const e=localStorage.getItem(o);if(null===e)throw new Error("Null gl-window Config");localStorage.removeItem(o);const t=JSON.parse(e);n=resolved_config_1.ResolvedLayoutConfig.unminifyConfig(t)}else void 0===e?n=void 0:e instanceof HTMLElement?(n=void 0,t=e):n=config_1.LayoutConfig.isResolved(e)?e:config_1.LayoutConfig.resolve(e);return{layoutConfig:n,isSubWindow:i,containerElement:t}}}(GoldenLayout=exports.GoldenLayout||(exports.GoldenLayout={}));