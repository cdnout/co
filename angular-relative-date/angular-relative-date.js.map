{"version":3,"names":[],"mappings":"","sources":["angular-relative-date.js"],"sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.relativeDate = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = relativeDateFilter;\nvar getTranslate = function getTranslate(injector, translations) {\n  if (injector.has('$translate')) {\n    return injector.get('$translate');\n  } else {\n    return {\n      instant: function instant(id, params) {\n        return translations[id].replace('{{time}}', params.time);\n      }\n    };\n  }\n};\n\nvar calculateDelta = function calculateDelta(now, date) {\n  return Math.round(Math.abs(now - date) / 1000);\n};\n\nfunction relativeDateFilter($injector, _now, relativeDateTranslations) {\n  var $translate = getTranslate($injector, relativeDateTranslations);\n\n  return function (date) {\n    var now = _now || new Date();\n\n    if (!(date instanceof Date)) {\n      date = new Date(date);\n    }\n\n    var delta = null;\n\n    var minute = 60;\n    var hour = minute * 60;\n    var day = hour * 24;\n    var week = day * 7;\n    var month = day * 30;\n    var year = day * 365;\n\n    delta = calculateDelta(now, date);\n\n    if (delta > day && delta < week) {\n      date = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0);\n      delta = calculateDelta(now, date);\n    }\n\n    var translate = function translate(translatePhrase, timeValue) {\n      var translateKey;\n\n      if (translatePhrase === 'just_now') {\n        translateKey = translatePhrase;\n      } else if (now >= date) {\n        translateKey = translatePhrase + '_ago';\n      } else {\n        translateKey = translatePhrase + '_from_now';\n      }\n\n      return $translate.instant(translateKey, {\n        time: timeValue\n      });\n    };\n\n    switch (false) {\n      case !(delta < 30):\n        return translate('just_now');\n\n      case !(delta < minute):\n        return translate('seconds', delta);\n\n      case !(delta < 2 * minute):\n        return translate('a_minute');\n\n      case !(delta < hour):\n        return translate('minutes', Math.floor(delta / minute));\n\n      case Math.floor(delta / hour) !== 1:\n        return translate('an_hour');\n\n      case !(delta < day):\n        return translate('hours', Math.floor(delta / hour));\n\n      case !(delta < day * 2):\n        return translate('a_day');\n\n      case !(delta < week):\n        return translate('days', Math.floor(delta / day));\n\n      case Math.floor(delta / week) !== 1:\n        return translate('a_week');\n\n      case !(delta < month):\n        return translate('weeks', Math.floor(delta / week));\n\n      case Math.floor(delta / month) !== 1:\n        return translate('a_month');\n\n      case !(delta < year):\n        return translate('months', Math.floor(delta / month));\n\n      case Math.floor(delta / year) !== 1:\n        return translate('a_year');\n\n      default:\n        return translate('over_a_year');\n    }\n  };\n}\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _translations = require('./translations');\n\nvar _translations2 = _interopRequireDefault(_translations);\n\nvar _filter = require('./filter');\n\nvar _filter2 = _interopRequireDefault(_filter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* global angular */\n\nvar relativeDate = angular.module('relativeDate', []);\n\nrelativeDate.value('now', null);\nrelativeDate.value('relativeDateTranslations', _translations2.default);\n\nrelativeDate.filter('relativeDate', ['$injector', 'now', 'relativeDateTranslations', _filter2.default]);\n\nexports.default = relativeDate;\n\n},{\"./filter\":1,\"./translations\":3}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  just_now: 'just now',\n  seconds_ago: '{{time}} seconds ago',\n  a_minute_ago: 'a minute ago',\n  minutes_ago: '{{time}} minutes ago',\n  an_hour_ago: 'an hour ago',\n  hours_ago: '{{time}} hours ago',\n  a_day_ago: 'yesterday',\n  days_ago: '{{time}} days ago',\n  a_week_ago: 'a week ago',\n  weeks_ago: '{{time}} weeks ago',\n  a_month_ago: 'a month ago',\n  months_ago: '{{time}} months ago',\n  a_year_ago: 'a year ago',\n  years_ago: '{{time}} years ago',\n  over_a_year_ago: 'over a year ago',\n  seconds_from_now: '{{time}} seconds from now',\n  a_minute_from_now: 'a minute from now',\n  minutes_from_now: '{{time}} minutes from now',\n  an_hour_from_now: 'an hour from now',\n  hours_from_now: '{{time}} hours from now',\n  a_day_from_now: 'tomorrow',\n  days_from_now: '{{time}} days from now',\n  a_week_from_now: 'a week from now',\n  weeks_from_now: '{{time}} weeks from now',\n  a_month_from_now: 'a month from now',\n  months_from_now: '{{time}} months from now',\n  a_year_from_now: 'a year from now',\n  years_from_now: '{{time}} years from now',\n  over_a_year_from_now: 'over a year from now'\n};\n\n},{}]},{},[2])(2)\n});"],"file":"angular-relative-date.js"}