var Tracing=function(){function n(){}function t(n){return"function"==typeof n}function r(n){return null!=d[n]&&void 0!=d[n]}function o(n){return"string"==typeof n}function i(n,t){var r=typeof t;if(t!==t)return"NaN";switch(r){case"number":case"string":case"boolean":case"undefined":return t}return null==t?t:"function"==typeof t?t.toString():t}function e(n){return JSON.stringify(n,i)}function u(n){return Array.prototype.slice.call(n)}function f(n,t){for(var r in n)n.hasOwnProperty(r)&&t(r,n[r]);return n}function a(n,t){return f(n,function(n,r){t[n]=r}),t}function c(n,t){for(var r=n.split("."),o=w,i=0;i<r.length;i++){if(!(r[i]in o))throw"Property "+r.slice(0,i+1).join(".")+" not found!";arguments.length>1&&i==r.length-1&&(o[r[i]]=t),o=o[r[i]]}return o}function l(n,t,r){t=t.map(e),console.log(">"+new Array(r+1).join("  ")+n+" called with arguments: ("+t.join(", ")+")")}function s(n,t,r){console.log(">"+new Array(r+1).join("  ")+n+" returned: "+e(t))}function h(o){var i=c(o);if(!t(i))throw"Not a valid function to trace!";if(r(o))throw"This function is already being traced!";d[o]={original:i,before:n,after:n};var e=function(){var n,t=d[o];return b++,t.before.call(this,o,u(arguments),b),n=t.original.apply(this,arguments),t.after.call(this,o,n,b),b--,n};a(i,e),e.prototype=i.prototype,c(o,e)}function g(n){if(!o(n))throw"The function name should be a string.";if(!r(n))throw"This function is not being traced!";var t=c(n),i=d[n];a(t,i.original),i.original.prototype=t.prototype,c(n,i.original),delete d[n]}function p(i,e){if(!o(i))throw"The function name should be a string.";return r(i)||h(i),t(e)?e:n}function y(n,t){var r=p(n,t);d[n].before=r}function v(n,t){var r=p(n,t);d[n].after=r}var d={},w=Function("return this")(),b=0,m={trace:function(n){for(var t=0;t<arguments.length;t++)y(arguments[t],l),v(arguments[t],s)},before:function(n,t){y(n,t)},after:function(n,t){v(n,t)},untrace:function(n){if(arguments.length>0)for(var t=0;t<arguments.length;t++)g(arguments[t]);else f(d,g)}};return function(){var n=this;return f(n,function(r,o){t(o)&&(n[r]=function(){return o.apply(n,u(arguments)),n})})}.call(m)}();