/*!
 * Inheritance.js (0.4.12)
 *
 * Copyright (c) 2016 Brandon Sara (http://bsara.github.io)
 * Licensed under the CPOL-1.02 (https://github.com/bsara/inheritance.js/blob/master/LICENSE.md)
 */
!function(e,n){"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?module.exports=n():e.I=n()}(this,function(){function e(e,n,t){if(null==e)throw new TypeError("`obj` cannot be undefined or null!");if(n!==!0&&null!=e.extend){if(t===!0)return e;throw new TypeError("`obj.extend` already exists! You're seeing this error to prevent the current extend function from being overwritten. See docs for how to override this functionality.")}return null!=e.extend&&delete e.extend,Object.defineProperties(e,{sealed:{get:function(){return!0}},extend:{configurable:!1,enumerable:!1,writable:!1,value:function(){throw new TypeError("The object definition you are trying to extend is sealed and cannot be inherited.")}}}),e}return e});