/*! Fasy: transducers.mjs
    v9.0.0 (c) 2021 Kyle Simpson
    MIT License: http://getify.mit-license.org
*/
import{runner}from"./internals.mjs";import{reduce as serialReduce}from"./serial.mjs";var transducers={filter:filter,map:map,transduce:transduce,into:into,string:string,number:number,booleanAnd:booleanAnd,booleanOr:booleanOr,array:array,identity:identity,default:identity};export default transducers;export{filter};export{map};export{transduce};export{into};export{string};export{number};export{booleanAnd};export{booleanOr};export{array};export{identity};function filter(r){return function curried(n){return async function reducer(e,t,u,a){return await runner(r)(t,u,a)?runner(n)(e,t):e}}}function map(r){return function curried(n){return async function reducer(e,t,u,a){return runner(n)(e,await runner(r)(t,u,a))}}}async function transduce(r,n,e,t=[]){var u=await r(n);return serialReduce(u,e,t)}async function into(r,n,e=[]){var t="string"==typeof n?transducers.string:"number"==typeof n?transducers.number:"boolean"==typeof n?transducers.booleanAnd:Array.isArray(n)?transducers.array:transducers.default;return transducers.transduce(r,t,n,e)}function string(r,n){return r+n}function number(r,n){return r+n}function booleanAnd(r,n){return r&&n}function booleanOr(r,n){return r||n}function array(r,n){return r.push(n),r}function identity(r){return r}