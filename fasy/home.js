/*! Fasy: bundle.js
    v9.0.0 (c) 2021 Kyle Simpson
    MIT License: http://getify.mit-license.org
*/
!function UMDBundle(e,n){for(let[r,t,u]of n)"function"==typeof define&&define.amd?(t=Object.values(t),define(r,t,u)):"undefined"!=typeof module&&module.exports?(t=Object.keys(t).map((e=>require(e))),module.exports[r]=u(...t)):(t=Object.values(t).map((n=>e[n])),e[r]=u(...t))}("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof global?global:"undefined"!=typeof window?window:"undefined"!=typeof self?self:new Function("return this")(),[["FAInternals",{},function DEF(){"use strict";let e={runner:function runner(e){return async function getArgs(...n){var r=e(...n);return r&&"function"==typeof r.next&&"function"==typeof r[Symbol.iterator]?Promise.resolve().then((function handleNext(e){return function handleResult(e){return e.done?e.value:Promise.resolve(e.value).then(handleNext,(function handleErr(e){return Promise.resolve(r.throw(e)).then(handleResult)}))}(r.next(e))})):r}}};return e}],["FAConcurrent",{"./internals.js":"FAInternals"},function DEF(e){"use strict";var{runner:n}=e,r={},t=new Promise((function c(){}));Object.assign(defineConcurrentAPI,defineConcurrentAPI(Number.MAX_SAFE_INTEGER));let u={};function defineConcurrentAPI(e=5,u=e){if(e=Number(e),u=Number(u),!(e>=1))throw new Error("Batch size limit must be at least 1.");if(!(u>=1&&u<=e))throw new Error(`Minimum active threshold must be between 1 and ${e}.`);var i=`${e}:${u}`;if(!(i in r)){let e=function concurrentMap(e,r){return async function map(e,u=[]){e=n(e);for(var i=u.entries(),o=0,a=[],f=[];;)if(o<r){let n=i.next();if(n.done)return Promise.all(a);{let[r,i]=n.value;o++,f[r]=a[r]=e(i,r,u).then((function mapped(e){return o--,f[r]=t,e}))}}else await Promise.race(f)}}(0,u),o=function concurrentFilterIn(e){return async function filterIn(r,t=[]){return r=n(r),(await e((async function mapper(e,n,t){return[e,await r(e,n,t)]}),t)).reduce((function reducer(e,[n,r]){return r?[...e,n]:e}),[])}}(e);r[i]={forEach:concurrentForEach(e),map:e,flatMap:concurrentFlatMap(e),filter:o,filterIn:o,filterOut:concurrentFilterOut(o),reduce:concurrentReduce,reduceRight:concurrentReduceRight,pipe:concurrentPipe,compose:concurrentCompose}}return r[i]}function concurrentForEach(e){return async function forEach(n,r=[]){await e(n,r)}}function concurrentFlatMap(e){return async function flatMap(n,r=[]){return(await e(n,r)).reduce((function reducer(e,n){return e.concat(n)}),[])}}function concurrentFilterOut(e){return async function filterOut(r,t=[]){return r=n(r),e((async function filterer(e,n,t){return!await r(e,n,t)}),t)}}async function concurrentReduce(e,r,t=[]){e=n(e);var u=r;for(let[n,r]of t.entries())u=await e(u,r,n,t);return u}async function concurrentReduceRight(e,r,t=[]){e=n(e);var u=r;for(let[n,r]of[...t.entries()].reverse())u=await e(u,r,n,t);return u}function concurrentPipe(e=[]){return 0==e.length&&(e=[e=>e]),function piped(...n){return concurrentReduce((function reducer(e,r){return e===n?r(...e):r(e)}),n,e)}}function concurrentCompose(e=[]){return 0==e.length&&(e=[e=>e]),function composed(...n){return concurrentReduceRight((function reducer(e,r){return e===n?r(...e):r(e)}),n,e)}}return u=defineConcurrentAPI,u.reduce=defineConcurrentAPI.reduce,u.reduceRight=defineConcurrentAPI.reduceRight,u.pipe=defineConcurrentAPI.pipe,u.compose=defineConcurrentAPI.compose,u.filter=defineConcurrentAPI.filter,u.filterIn=defineConcurrentAPI.filterIn,u.filterOut=defineConcurrentAPI.filterOut,u.forEach=defineConcurrentAPI.forEach,u.map=defineConcurrentAPI.map,u.flatMap=defineConcurrentAPI.flatMap,u}],["FASerial",{"./concurrent.js":"FAConcurrent"},function DEF(e){"use strict";var n=e(1);let r={};return r=n,r.reduce=n.reduce,r.reduceRight=n.reduceRight,r.pipe=n.pipe,r.compose=n.compose,r.filter=n.filter,r.filterIn=n.filterIn,r.filterOut=n.filterOut,r.forEach=n.forEach,r.map=n.map,r.flatMap=n.flatMap,r}],["FATransducers",{"./internals.js":"FAInternals","./serial.js":"FASerial"},function DEF(e,n){"use strict";var{runner:r}=e,{reduce:t}=n,u={filter:filter,map:map,transduce:transduce,into:into,string:string,number:number,booleanAnd:booleanAnd,booleanOr:booleanOr,array:array,identity:identity,default:identity};let i={};function filter(e){return function curried(n){return async function reducer(t,u,i,o){return await r(e)(u,i,o)?r(n)(t,u):t}}}function map(e){return function curried(n){return async function reducer(t,u,i,o){return r(n)(t,await r(e)(u,i,o))}}}async function transduce(e,n,r,u=[]){var i=await e(n);return t(i,r,u)}async function into(e,n,r=[]){var t="string"==typeof n?u.string:"number"==typeof n?u.number:"boolean"==typeof n?u.booleanAnd:Array.isArray(n)?u.array:u.default;return u.transduce(e,t,n,r)}function string(e,n){return e+n}function number(e,n){return e+n}function booleanAnd(e,n){return e&&n}function booleanOr(e,n){return e||n}function array(e,n){return e.push(n),e}function identity(e){return e}return i=u,i.filter=filter,i.map=map,i.transduce=transduce,i.into=into,i.string=string,i.number=number,i.booleanAnd=booleanAnd,i.booleanOr=booleanOr,i.array=array,i.identity=identity,i}],["FA",{"./concurrent.js":"FAConcurrent","./serial.js":"FASerial","./transducers.js":"FATransducers"},function DEF(e,n,r){"use strict";var t=e,u=n,i=r;let o={};return o={concurrent:t,serial:u,transducers:i},o.concurrent=t,o.serial=u,o.transducers=i,o}]]);