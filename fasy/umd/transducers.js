/*! Fasy: transducers.js
    v8.0.4 (c) 2020 Kyle Simpson
    MIT License: http://getify.mit-license.org
*/
!function UMD(n,e,r,t){"function"==typeof define&&define.amd?(r=Object.keys(r).map((n=>n.replace(/^\.\//,""))),define(n,r,t)):"undefined"!=typeof module&&module.exports?(r=Object.keys(r).map((n=>require(n))),module.exports=t(...r)):(r=Object.values(r).map((n=>e[n])),e[n]=t(...r))}("FA_Transducers","undefined"!=typeof globalThis?globalThis:"undefined"!=typeof global?global:"undefined"!=typeof window?window:"undefined"!=typeof self?self:new Function("return this")(),{"./internals.js":"FA_Internals","./serial.js":"FA_Serial"},(function DEF(n,e){"use strict";var{runner:r}=n,{reduce:t}=e,i={filter:filter,map:map,transduce:transduce,into:into,string:string,number:number,booleanAnd:booleanAnd,booleanOr:booleanOr,array:array,identity:identity,default:identity};let u={};function filter(n){return function curried(e){return async function reducer(t,i,u,a){return await r(n)(i,u,a)?r(e)(t,i):t}}}function map(n){return function curried(e){return async function reducer(t,i,u,a){return r(e)(t,await r(n)(i,u,a))}}}async function transduce(n,e,r,i=[]){var u=await n(e);return t(u,r,i)}async function into(n,e,r=[]){var t="string"==typeof e?i.string:"number"==typeof e?i.number:"boolean"==typeof e?i.booleanAnd:Array.isArray(e)?i.array:i.default;return i.transduce(n,t,e,r)}function string(n,e){return n+e}function number(n,e){return n+e}function booleanAnd(n,e){return n&&e}function booleanOr(n,e){return n||e}function array(n,e){return n.push(e),n}function identity(n){return n}return u=i,u.filter=filter,u.map=map,u.transduce=transduce,u.into=into,u.string=string,u.number=number,u.booleanAnd=booleanAnd,u.booleanOr=booleanOr,u.array=array,u.identity=identity,u}));