function _typeof(t){"@babel/helpers - typeof";return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}export function getDecoratedComponent(t){var o=t.current;return null==o?null:o.decoratedRef?o.decoratedRef.current:o};export function isClassComponent(t){return t&&t.prototype&&"function"==typeof t.prototype.render};export function isRefForwardingComponent(t){var o,e=t;return"Symbol(react.forward_ref)"===(null==e?void 0:null===(o=e.$$typeof)||void 0===o?void 0:o.toString())};export function isRefable(t){return isClassComponent(t)||isRefForwardingComponent(t)};export function checkDecoratorArguments(t,o){if("production"!==process.env.NODE_ENV)for(var e=0;e<(arguments.length<=2?0:arguments.length-2);e++){var r=e+2<2||arguments.length<=e+2?void 0:arguments[e+2];if(r&&r.prototype&&r.prototype.render)return void console.error("You seem to be applying the arguments in the wrong order. "+"It should be ".concat(t,"(").concat(o,")(Component), not the other way around. ")+"Read more: http://react-dnd.github.io/react-dnd/docs/troubleshooting#you-seem-to-be-applying-the-arguments-in-the-wrong-order")}};export function isFunction(t){return"function"==typeof t};export function noop(){};function isObjectLike(t){return"object"===_typeof(t)&&null!==t}export function isPlainObject(t){if(!isObjectLike(t))return!1;if(null===Object.getPrototypeOf(t))return!0;for(var o=t;null!==Object.getPrototypeOf(o);)o=Object.getPrototypeOf(o);return Object.getPrototypeOf(t)===o};export function isValidType(t,o){return"string"==typeof t||"symbol"===_typeof(t)||!!o&&Array.isArray(t)&&t.every(function(t){return isValidType(t,!1)})};