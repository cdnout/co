import{invariant}from"@react-dnd/invariant";import{registerSource,DragSourceMonitorImpl,SourceConnector}from"../internals";import{checkDecoratorArguments,isPlainObject,isValidType}from"./utils";import{decorateHandler}from"./decorateHandler";import{createSourceFactory}from"./createSourceFactory";export function DragSource(e,r,t){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};checkDecoratorArguments("DragSource","type, spec, collect[, options]",e,r,t,o);var a=e;"function"!=typeof e&&(invariant(isValidType(e),'Expected "type" provided as the first argument to DragSource to be a string, or a function that returns a string given the current props. Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source',e),a=function(){return e}),invariant(isPlainObject(r),'Expected "spec" provided as the second argument to DragSource to be a plain object. Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source',r);var n=createSourceFactory(r);return invariant("function"==typeof t,'Expected "collect" provided as the third argument to DragSource to be a function that returns a plain object of props to inject. Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source',t),invariant(isPlainObject(o),'Expected "options" provided as the fourth argument to DragSource to be a plain object when specified. Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source',t),function(e){return decorateHandler({containerDisplayName:"DragSource",createHandler:n,registerHandler:registerSource,createConnector:function(e){return new SourceConnector(e)},createMonitor:function(e){return new DragSourceMonitorImpl(e)},DecoratedComponent:e,getType:a,collect:t,options:o})}};