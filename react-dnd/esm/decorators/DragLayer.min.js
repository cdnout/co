function _typeof(t){"@babel/helpers - typeof";return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function _createClass(t,e,r){return e&&_defineProperties(t.prototype,e),r&&_defineProperties(t,r),t}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&_setPrototypeOf(t,e)}function _setPrototypeOf(t,e){return(_setPrototypeOf=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function _createSuper(t){var e=_isNativeReflectConstruct();return function(){var r,n=_getPrototypeOf(t);if(e){var o=_getPrototypeOf(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return _possibleConstructorReturn(this,r)}}function _possibleConstructorReturn(t,e){return!e||"object"!==_typeof(e)&&"function"!=typeof e?_assertThisInitialized(t):e}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}function _getPrototypeOf(t){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}import*as React from"react";import{shallowEqual}from"@react-dnd/shallowequal";import hoistStatics from"hoist-non-react-statics";import{invariant}from"@react-dnd/invariant";import{DndContext}from"../common/DndContext";import{isPlainObject}from"../utils/js_utils";import{isRefable,checkDecoratorArguments}from"./utils";export function DragLayer(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return checkDecoratorArguments("DragLayer","collect[, options]",t,e),invariant("function"==typeof t,'Expected "collect" provided as the first argument to DragLayer to be a function that collects props to inject into the component. ',"Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-layer",t),invariant(isPlainObject(e),'Expected "options" provided as the second argument to DragLayer to be a plain object when specified. Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-layer',e),function(r){var n=r,o=e.arePropsEqual,a=void 0===o?shallowEqual:o,i=n.displayName||n.name||"Component",s=function(){var e=function(e){_inherits(o,React.Component);var r=_createSuper(o);function o(){var t;return _classCallCheck(this,o),(t=r.apply(this,arguments)).isCurrentlyMounted=!1,t.ref=React.createRef(),t.handleChange=function(){if(t.isCurrentlyMounted){var e=t.getCurrentState();shallowEqual(e,t.state)||t.setState(e)}},t}return _createClass(o,[{key:"getDecoratedComponentInstance",value:function(){return invariant(this.ref.current,"In order to access an instance of the decorated component, it must either be a class component or use React.forwardRef()"),this.ref.current}},{key:"shouldComponentUpdate",value:function(t,e){return!a(t,this.props)||!shallowEqual(e,this.state)}},{key:"componentDidMount",value:function(){this.isCurrentlyMounted=!0,this.handleChange()}},{key:"componentWillUnmount",value:function(){this.isCurrentlyMounted=!1,this.unsubscribeFromOffsetChange&&(this.unsubscribeFromOffsetChange(),this.unsubscribeFromOffsetChange=void 0),this.unsubscribeFromStateChange&&(this.unsubscribeFromStateChange(),this.unsubscribeFromStateChange=void 0)}},{key:"render",value:function(){var t=this;return React.createElement(DndContext.Consumer,null,function(e){var r=e.dragDropManager;return void 0===r?null:(t.receiveDragDropManager(r),t.isCurrentlyMounted?React.createElement(n,Object.assign({},t.props,t.state,{ref:isRefable(n)?t.ref:null})):null)})}},{key:"receiveDragDropManager",value:function(t){if(void 0===this.manager){this.manager=t,invariant("object"===_typeof(t),"Could not find the drag and drop manager in the context of %s. Make sure to render a DndProvider component in your top-level component. Read more: http://react-dnd.github.io/react-dnd/docs/troubleshooting#could-not-find-the-drag-and-drop-manager-in-the-context",i,i);var e=this.manager.getMonitor();this.unsubscribeFromOffsetChange=e.subscribeToOffsetChange(this.handleChange),this.unsubscribeFromStateChange=e.subscribeToStateChange(this.handleChange)}}},{key:"getCurrentState",value:function(){if(!this.manager)return{};var e=this.manager.getMonitor();return t(e,this.props)}}]),o}();return e.displayName="DragLayer(".concat(i,")"),e.DecoratedComponent=r,e}();return hoistStatics(s,r)}};