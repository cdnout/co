"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DropTargetMonitorImpl=void 0;var _invariant=require("@react-dnd/invariant");function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function _createClass(t,e,n){return e&&_defineProperties(t.prototype,e),n&&_defineProperties(t,n),t}var isCallingCanDrop=!1,DropTargetMonitorImpl=function(){function e(t){_classCallCheck(this,e),this.targetId=null,this.internalMonitor=t.getMonitor()}return _createClass(e,[{key:"receiveHandlerId",value:function(t){this.targetId=t}},{key:"getHandlerId",value:function(){return this.targetId}},{key:"subscribeToStateChange",value:function(t,e){return this.internalMonitor.subscribeToStateChange(t,e)}},{key:"canDrop",value:function(){if(!this.targetId)return!1;(0,_invariant.invariant)(!isCallingCanDrop,"You may not call monitor.canDrop() inside your canDrop() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor");try{return isCallingCanDrop=!0,this.internalMonitor.canDropOnTarget(this.targetId)}finally{isCallingCanDrop=!1}}},{key:"isOver",value:function(t){return!!this.targetId&&this.internalMonitor.isOverTarget(this.targetId,t)}},{key:"getItemType",value:function(){return this.internalMonitor.getItemType()}},{key:"getItem",value:function(){return this.internalMonitor.getItem()}},{key:"getDropResult",value:function(){return this.internalMonitor.getDropResult()}},{key:"didDrop",value:function(){return this.internalMonitor.didDrop()}},{key:"getInitialClientOffset",value:function(){return this.internalMonitor.getInitialClientOffset()}},{key:"getInitialSourceClientOffset",value:function(){return this.internalMonitor.getInitialSourceClientOffset()}},{key:"getSourceClientOffset",value:function(){return this.internalMonitor.getSourceClientOffset()}},{key:"getClientOffset",value:function(){return this.internalMonitor.getClientOffset()}},{key:"getDifferenceFromInitialOffset",value:function(){return this.internalMonitor.getDifferenceFromInitialOffset()}}]),e}();exports.DropTargetMonitorImpl=DropTargetMonitorImpl;