"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function getDecoratedComponent(e){e=e.current;return null==e?null:e.decoratedRef?e.decoratedRef.current:e}function isClassComponent(e){return e&&e.prototype&&"function"==typeof e.prototype.render}function isRefForwardingComponent(e){var o,e=e;return"Symbol(react.forward_ref)"===(null==e||null===(o=e.$$typeof)||void 0===o?void 0:o.toString())}function isRefable(e){return isClassComponent(e)||isRefForwardingComponent(e)}function checkDecoratorArguments(e,o){if("production"!==process.env.NODE_ENV)for(var t=0;t<(arguments.length<=2?0:arguments.length-2);t++){var n=t+2<2||arguments.length<=t+2?void 0:arguments[t+2];if(n&&n.prototype&&n.prototype.render)return void console.error("You seem to be applying the arguments in the wrong order. "+"It should be ".concat(e,"(").concat(o,")(Component), not the other way around. ")+"Read more: http://react-dnd.github.io/react-dnd/docs/troubleshooting#you-seem-to-be-applying-the-arguments-in-the-wrong-order")}}function isFunction(e){return"function"==typeof e}function noop(){}function isObjectLike(e){return"object"===_typeof(e)&&null!==e}function isPlainObject(e){if(!isObjectLike(e))return!1;if(null===Object.getPrototypeOf(e))return!0;for(var o=e;null!==Object.getPrototypeOf(o);)o=Object.getPrototypeOf(o);return Object.getPrototypeOf(e)===o}function isValidType(e,o){return"string"==typeof e||"symbol"===_typeof(e)||!!o&&Array.isArray(e)&&e.every(function(e){return isValidType(e,!1)})}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getDecoratedComponent=getDecoratedComponent,exports.isClassComponent=isClassComponent,exports.isRefForwardingComponent=isRefForwardingComponent,exports.isRefable=isRefable,exports.checkDecoratorArguments=checkDecoratorArguments,exports.isFunction=isFunction,exports.noop=noop,exports.isPlainObject=isPlainObject,exports.isValidType=isValidType;