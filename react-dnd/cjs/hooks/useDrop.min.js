"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.useDrop=useDrop;var _react=require("react"),_invariant=require("@react-dnd/invariant"),_useMonitorOutput=require("./internal/useMonitorOutput"),_useIsomorphicLayoutEffect=require("./internal/useIsomorphicLayoutEffect"),_drop=require("./internal/drop");function _slicedToArray(r,e){return _arrayWithHoles(r)||_iterableToArrayLimit(r,e)||_unsupportedIterableToArray(r,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(r,e){if(r){if("string"==typeof r)return _arrayLikeToArray(r,e);var t=Object.prototype.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,e):void 0}}function _arrayLikeToArray(r,e){(null==e||e>r.length)&&(e=r.length);for(var t=0,o=new Array(e);t<e;t++)o[t]=r[t];return o}function _iterableToArrayLimit(r,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r)){var t=[],o=!0,n=!1,a=void 0;try{for(var i,u=r[Symbol.iterator]();!(o=(i=u.next()).done)&&(t.push(i.value),!e||t.length!==e);o=!0);}catch(r){n=!0,a=r}finally{try{o||null==u.return||u.return()}finally{if(n)throw a}}return t}}function _arrayWithHoles(r){if(Array.isArray(r))return r}function useDrop(r){var e=(0,_react.useRef)(r);e.current=r,(0,_invariant.invariant)(null!=r.accept,"accept must be defined");var t=_slicedToArray((0,_drop.useDropTargetMonitor)(),2),o=t[0],n=t[1];(0,_drop.useDropHandler)(e,o,n);var a=(0,_useMonitorOutput.useMonitorOutput)(o,e.current.collect||function(){return{}},function(){return n.reconnect()}),i=(0,_react.useMemo)(function(){return n.hooks.dropTarget()},[n]);return(0,_useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(function(){n.dropTargetOptions=r.options||null,n.reconnect()},[r.options]),[a,i]}