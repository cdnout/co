import _extends from"@babel/runtime/helpers/extends";import _slicedToArray from"@babel/runtime/helpers/slicedToArray";import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";var _excluded=["viewDate","value","weekStartsOn","onDayChange","isDaySelected","isDayActive","isDaySelectionEnd","isDaySelectionStart","onDayEnter","onDayLeave","isDayHinted","isHintedDaySelectionStart","isHintedDaySelectionEnd","isDayFocused","isDayDisabled","size","showNeighboringMonth"];import{createScopedElement}from"../../lib/jsxRuntime";import*as React from"react";import{isSameDay,isSameMonth}from"../../lib/date";import{CalendarDay}from"../CalendarDay/CalendarDay";import{getDaysNames,getWeeks}from"../../lib/calendar";import{LocaleProviderContext}from"../LocaleProviderContext/LocaleProviderContext";import{classNames}from"../../lib/classNames";import{Caption}from"../Typography/Caption/Caption";import"./CalendarDays.css";var CalendarDays=function(e){var i=e.viewDate,a=(e.value,e.weekStartsOn),t=e.onDayChange,n=e.isDaySelected,o=e.isDayActive,r=e.isDaySelectionEnd,s=e.isDaySelectionStart,l=e.onDayEnter,c=e.onDayLeave,d=e.isDayHinted,y=e.isHintedDaySelectionStart,m=e.isHintedDaySelectionEnd,u=e.isDayFocused,D=e.isDayDisabled,p=e.size,S=e.showNeighboringMonth,v=void 0!==S&&S,S=_objectWithoutProperties(e,_excluded),C=React.useContext(LocaleProviderContext),h=React.useRef(null),e=React.useState(new Date),f=_slicedToArray(e,1)[0],e=React.useMemo(function(){return getWeeks(i,a)},[a,i]),b=React.useMemo(function(){return getDaysNames(f,a,C)},[C,f,a]),_=React.useCallback(function(e){t(e),null!=(e=h.current)&&e.focus()},[t]);return createScopedElement("div",_extends({},S,{vkuiClass:"CalendarDays",ref:h}),createScopedElement("div",{vkuiClass:classNames("CalendarDays__row","CalendarDays__row--size-".concat(p))},b.map(function(e){return createScopedElement(Caption,{level:"1",weight:"regular",vkuiClass:"CalendarDays__weekday",key:e},e)})),e.map(function(e,a){return createScopedElement("div",{vkuiClass:classNames("CalendarDays__row","CalendarDays__row--size-".concat(p)),key:a},e.map(function(e,a){var t=isSameMonth(e,i);return createScopedElement(CalendarDay,{key:e.toISOString(),day:e,today:isSameDay(e,f),active:o(e),onChange:_,hidden:!v&&!t,disabled:D(e),selectionStart:s(e,a),selectionEnd:r(e,a),hintedSelectionStart:null==y?void 0:y(e,a),hintedSelectionEnd:null==m?void 0:m(e,a),selected:null==n?void 0:n(e),focused:u(e),onEnter:l,onLeave:c,hinted:null==d?void 0:d(e),sameMonth:t,size:p})}))}))};export{CalendarDays};