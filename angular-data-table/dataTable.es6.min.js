!function(){function e(e){Array.prototype[e]||(Array.prototype[e]=function(t){var o,n,i,r=arguments[1];if("function"!=typeof t)throw new TypeError;for(i=r?function(){return t.apply(r,arguments)}:t,o=0,n=this.length;o<n;o++)if(!0===i(this[o],o,this))return"find"===e?this[o]:o;if("find"!==e)return-1})}for(var t in{find:1,findIndex:1})e(t)}();class PagerController{constructor(e){e.$watch("pager.count",e=>{this.calcTotalPages(this.size,this.count),this.getPages(this.page||1)}),e.$watch("pager.size",e=>{this.calcTotalPages(this.size,this.count),this.getPages(this.page||1)}),e.$watch("pager.page",e=>{0!==e&&e<=this.totalPages&&this.getPages(e)}),this.getPages(this.page||1)}calcTotalPages(e,t){t=e<1?1:Math.ceil(t/e);this.totalPages=Math.max(t||0,1)}selectPage(e){e>0&&e<=this.totalPages&&(this.page=e,this.onPage({page:e}))}prevPage(){this.page>1&&this.selectPage(--this.page)}nextPage(){this.selectPage(++this.page)}canPrevious(){return this.page>1}canNext(){return this.page<this.totalPages}getPages(e){var t=[],o=1,n=this.totalPages;5<this.totalPages&&(o=5*(Math.ceil(e/5)-1)+1,n=Math.min(o+5-1,this.totalPages));for(var i=o;i<=n;i++)t.push({number:i,text:i,active:i===e});this.pages=t}}function PagerDirective(){return{restrict:"E",controller:PagerController,controllerAs:"pager",scope:!0,bindToController:{page:"=",size:"=",count:"=",onPage:"&"},template:'<div class="dt-pager">\n        <ul class="pager">\n          <li ng-class="{ disabled: !pager.canPrevious() }">\n            <a href ng-click="pager.selectPage(1)" class="icon-prev"></a>\n          </li>\n          <li ng-class="{ disabled: !pager.canPrevious() }">\n            <a href ng-click="pager.prevPage()" class="icon-left"></a>\n          </li>\n          <li ng-repeat="pg in pager.pages track by $index" ng-class="{ active: pg.active }">\n            <a href ng-click="pager.selectPage(pg.number)">{{pg.text}}</a>\n          </li>\n          <li ng-class="{ disabled: !pager.canNext() }">\n            <a href ng-click="pager.nextPage()" class="icon-right"></a>\n          </li>\n          <li ng-class="{ disabled: !pager.canNext() }">\n            <a href ng-click="pager.selectPage(pager.totalPages)" class="icon-skip"></a>\n          </li>\n        </ul>\n      </div>',replace:!0}}class FooterController{constructor(e){this.page=this.paging.offset+1,e.$watch("footer.paging.offset",e=>{this.offsetChanged(e)})}offsetChanged(e){this.page=e+1}onPaged(e){this.paging.offset=e-1,this.onPage({offset:this.paging.offset,size:this.paging.size})}}function FooterDirective(){return{restrict:"E",controller:FooterController,controllerAs:"footer",scope:!0,bindToController:{paging:"=",onPage:"&"},template:'<div class="dt-footer">\n        <div class="page-count" ng-bind="footer.paging.countText ? footer.paging.countText(footer.paging.count) : \'\'"></div>\n        <dt-pager page="footer.page"\n               size="footer.paging.size"\n               count="footer.paging.count"\n               on-page="footer.onPaged(page)"\n               ng-show="footer.paging.count / footer.paging.size > 1">\n         </dt-pager>\n      </div>',replace:!0}}class CellController{styles(){return{width:this.column.width+"px","min-width":this.column.width+"px"}}cellClass(){var e={"dt-tree-col":this.column.isTreeColumn};return this.column.className&&(e[this.column.className]=!0),e}treeClass(){return{"dt-tree-toggle":!0,"icon-right":!this.expanded,"icon-down":this.expanded}}onTreeToggled(e){e.stopPropagation(),this.expanded=!this.expanded,this.onTreeToggle({cell:{value:this.value,column:this.column,expanded:this.expanded}})}onCheckboxChanged(e){e.stopPropagation(),this.onCheckboxChange({$event:e})}getValue(){var e=this.column.cellDataGetter?this.column.cellDataGetter(this.value):this.value;return null==e&&(e=""),e}}function CellDirective(e,t,o,n){return{restrict:"E",controller:CellController,scope:!0,controllerAs:"cell",bindToController:{options:"=",value:"=",selected:"=",column:"=",row:"=",expanded:"=",hasChildren:"=",onTreeToggle:"&",onCheckboxChange:"&"},template:'<div class="dt-cell"\n            data-title="{{::cell.column.name}}"\n            ng-style="cell.styles()"\n            ng-class="cell.cellClass()">\n        <label ng-if="cell.column.isCheckboxColumn" class="dt-checkbox">\n          <input type="checkbox"\n                 ng-checked="cell.selected"\n                 ng-click="cell.onCheckboxChanged($event)" />\n        </label>\n        <span ng-if="cell.column.isTreeColumn && cell.hasChildren"\n              ng-class="cell.treeClass()"\n              ng-click="cell.onTreeToggled($event)"></span>\n        <span class="dt-cell-content"></span>\n      </div>',replace:!0,compile:function(){return{pre:function(e,o,n,i){var r,s=angular.element(o[0].querySelector(".dt-cell-content"));function l(){(r=i.options.$outer.$new(!1)).getValue=i.getValue}(i.column.template||i.column.cellRenderer)&&l(),e.$watch("cell.row",()=>{if(r&&(r.$destroy(),l(),r.$cell=i.value,r.$row=i.row,r.$column=i.column,r.$$watchers=null),i.column.template){s.empty();var e=angular.element(`<span>${i.column.template.trim()}</span>`);s.append(t(e)(r))}else if(i.column.cellRenderer){s.empty();e=angular.element(i.column.cellRenderer(r,s));s.append(t(e)(r))}else s[0].innerHTML=i.getValue()},!0)}}}}}var cache={},testStyle=document.createElement("div").style,prefix=function(){var e=window.getComputedStyle(document.documentElement,""),t=(Array.prototype.slice.call(e).join("").match(/-(moz|webkit|ms)-/)||""===e.OLink&&["","o"])[1];return{dom:"WebKit|Moz|MS|O".match(new RegExp("("+t+")","i"))[1],lowercase:t,css:"-"+t+"-",js:t[0].toUpperCase()+t.substr(1)}}();function CamelCase(e){return e=(e=(e=(e=e.replace(/[^a-zA-Z0-9 ]/g," ")).replace(/([a-z](?=[A-Z]))/g,"$1 ")).replace(/([^a-zA-Z0-9 ])|^[0-9]+/g,"").trim().toLowerCase()).replace(/([ 0-9]+)([a-zA-Z])/g,function(e,t,o){return t.trim()+o.toUpperCase()})}function GetVendorPrefixedName(e){var t=CamelCase(e);return cache[t]||(void 0!==testStyle[prefix.css+e]?cache[t]=prefix.css+e:void 0!==testStyle[e]&&(cache[t]=e)),cache[t]}var transform=GetVendorPrefixedName("transform"),backfaceVisibility=GetVendorPrefixedName("backfaceVisibility"),hasCSSTransforms=!!GetVendorPrefixedName("transform"),hasCSS3DTransforms=!!GetVendorPrefixedName("perspective"),ua=window.navigator.userAgent,isSafari=/Safari\//.test(ua)&&!/Chrome\//.test(ua);function TranslateXY(e,t,o){hasCSSTransforms?!isSafari&&hasCSS3DTransforms?(e[transform]=`translate3d(${t}px, ${o}px, 0)`,e[backfaceVisibility]="hidden"):e[CamelCase(transform)]=`translate(${t}px, ${o}px)`:(e.top=o+"px",e.left=t+"px")}class GroupRowController{onGroupToggled(e){e.stopPropagation(),this.onGroupToggle({group:this.row})}treeClass(){return{"dt-tree-toggle":!0,"icon-right":!this.expanded,"icon-down":this.expanded}}}function GroupRowDirective(){return{restrict:"E",controller:GroupRowController,controllerAs:"group",bindToController:{row:"=",onGroupToggle:"&",expanded:"=",options:"="},scope:!0,replace:!0,template:'\n      <div class="dt-group-row">\n        <span ng-class="group.treeClass()"\n              ng-click="group.onGroupToggled($event)">\n        </span>\n        <span class="dt-group-row-label" ng-bind="group.row.name">\n        </span>\n      </div>',link:function(e,t,o,n){TranslateXY(t[0].style,0,n.row.$$index*n.options.rowHeight),n.options.internal.styleTranslator.register(e.$index,t)}}}function DeepValueGetter(e,t){if(!e||!t)return e;var o=e,n=t.split(".");if(n.length)for(var i=0,r=n.length;i<r;i++)o=o[n[i]];return o}class RowController{getValue(e){return e.prop?DeepValueGetter(this.row,e.prop):""}onTreeToggled(e){this.onTreeToggle({cell:e,row:this.row})}stylesByGroup(e){var t={width:this.columnWidths[e]+"px"};if("left"===e)TranslateXY(t,this.options.internal.offsetX,0);else if("right"===e){TranslateXY(t,-1*(this.columnWidths.total-this.options.internal.innerWidth-this.options.internal.offsetX+this.options.internal.scrollBarWidth),0)}return t}onCheckboxChanged(e){this.onCheckboxChange({$event:e,row:this.row})}}function RowDirective(){return{restrict:"E",controller:RowController,controllerAs:"rowCtrl",scope:!0,bindToController:{row:"=",columns:"=",columnWidths:"=",expanded:"=",selected:"=",hasChildren:"=",options:"=",onCheckboxChange:"&",onTreeToggle:"&"},link:function(e,t,o,n){n.row&&TranslateXY(t[0].style,0,n.row.$$index*n.options.rowHeight),n.options.internal.styleTranslator.register(e.$index,t)},template:'\n      <div class="dt-row">\n        <div class="dt-row-left dt-row-block"\n             ng-if="rowCtrl.columns[\'left\'].length"\n             ng-style="rowCtrl.stylesByGroup(\'left\')">\n          <dt-cell ng-repeat="column in rowCtrl.columns[\'left\'] track by column.$id"\n                   on-tree-toggle="rowCtrl.onTreeToggled(cell)"\n                   column="column"\n                   options="rowCtrl.options"\n                   has-children="rowCtrl.hasChildren"\n                   on-checkbox-change="rowCtrl.onCheckboxChanged($event)"\n                   selected="rowCtrl.selected"\n                   expanded="rowCtrl.expanded"\n                   row="rowCtrl.row"\n                   value="rowCtrl.getValue(column)">\n          </dt-cell>\n        </div>\n        <div class="dt-row-center dt-row-block"\n             ng-style="rowCtrl.stylesByGroup(\'center\')">\n          <dt-cell ng-repeat="column in rowCtrl.columns[\'center\'] track by column.$id"\n                   on-tree-toggle="rowCtrl.onTreeToggled(cell)"\n                   column="column"\n                   options="rowCtrl.options"\n                   has-children="rowCtrl.hasChildren"\n                   expanded="rowCtrl.expanded"\n                   selected="rowCtrl.selected"\n                   row="rowCtrl.row"\n                   on-checkbox-change="rowCtrl.onCheckboxChanged($event)"\n                   value="rowCtrl.getValue(column)">\n          </dt-cell>\n        </div>\n        <div class="dt-row-right dt-row-block"\n             ng-if="rowCtrl.columns[\'right\'].length"\n             ng-style="rowCtrl.stylesByGroup(\'right\')">\n          <dt-cell ng-repeat="column in rowCtrl.columns[\'right\'] track by column.$id"\n                   on-tree-toggle="rowCtrl.onTreeToggled(cell)"\n                   column="column"\n                   options="rowCtrl.options"\n                   has-children="rowCtrl.hasChildren"\n                   selected="rowCtrl.selected"\n                   on-checkbox-change="rowCtrl.onCheckboxChanged($event)"\n                   row="rowCtrl.row"\n                   expanded="rowCtrl.expanded"\n                   value="rowCtrl.getValue(column)">\n          </dt-cell>\n        </div>\n      </div>',replace:!0}}var KEYS={BACKSPACE:8,TAB:9,RETURN:13,ALT:18,ESC:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,DELETE:46,COMMA:188,PERIOD:190,A:65,Z:90,ZERO:48,NUMPAD_0:96,NUMPAD_9:105};class SelectionController{constructor(e){this.body=e.body,this.options=e.body.options,this.selected=e.body.selected}keyDown(e,t,o){if(KEYS[e.keyCode]&&e.preventDefault(),e.keyCode===KEYS.DOWN){var n=e.target.nextElementSibling;n&&n.focus()}else if(e.keyCode===KEYS.UP){var i=e.target.previousElementSibling;i&&i.focus()}else e.keyCode===KEYS.RETURN&&this.selectRow(t,o)}rowClicked(e,t,o){this.options.checkboxSelection||this.selectRow(e,t,o),this.body.onRowClick({row:o})}rowDblClicked(e,t,o){this.options.checkboxSelection||(e.preventDefault(),this.selectRow(e,t,o)),this.body.onRowDblClick({row:o})}onCheckboxChange(e,t,o){this.selectRow(e,t,o)}selectRow(e,t,o){if(this.options.selectable)if(this.options.multiSelect){e.ctrlKey||e.metaKey;if(e.shiftKey)this.selectRowsBetween(t,o);else{var n=this.selected.indexOf(o);n>-1?this.selected.splice(n,1):(this.options.multiSelectOnShift&&1===this.selected.length&&this.selected.splice(0,1),this.selected.push(o),this.body.onSelect({rows:[o]}))}this.prevIndex=t}else this.selected=o,this.body.onSelect({rows:[o]})}selectRowsBetween(e){for(var t=e<this.prevIndex,o=[],n=0,i=this.body.rows.length;n<i;n++){var r=this.body.rows[n],s=n>=this.prevIndex&&n<=e,l=n<=this.prevIndex&&n>=e,a={};if(a=t?{start:e,end:this.prevIndex-e}:{start:this.prevIndex,end:e+1},t&&l||!t&&s){var c=this.selected.indexOf(r);if(t&&c>-1){this.selected.splice(c,1);continue}n>=a.start&&n<a.end&&-1===c&&(this.selected.push(r),o.push(r))}}this.body.onSelect({rows:o})}}function SelectionDirective(){return{controller:SelectionController,restrict:"A",require:"^dtBody",controllerAs:"selCtrl"}}var requestAnimFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e){window.setTimeout(e,1e3/60)};class StyleTranslator{constructor(e){this.height=e,this.map=new Map}update(e){let t=0;for(;t<=this.map.size;){let o=this.map.get(t),n=e[t];o&&n&&TranslateXY(o[0].style,0,n.$$index*this.height),t++}}register(e,t){this.map.set(e,t)}}function ScrollerDirective(e,t){return{restrict:"E",require:"^dtBody",transclude:!0,replace:!0,template:'<div ng-style="scrollerStyles()" ng-transclude></div>',link:function(e,t,o,n){var i=!1,r=0,s=0,l=t.parent();function a(){n.options.internal.offsetY=r,n.options.internal.offsetX=s,n.updatePage(),n.options.scrollbarV&&n.getRows(),n.options.$outer.$digest(),i=!1}n.options.internal.styleTranslator=new StyleTranslator(n.options.rowHeight),n.options.internal.setYOffset=function(e){l[0].scrollTop=e},l.on("scroll",function(e){r=this.scrollTop,s=this.scrollLeft,i||(requestAnimFrame(a),i=!0)}),e.$on("$destroy",()=>{l.off("scroll")}),e.scrollerStyles=function(){if(n.options.scrollbarV)return{height:n.count*n.options.rowHeight+"px"}}}}}class BodyController{constructor(e,t){if(this.$scope=e,this.tempRows=[],this.treeColumn=this.options.columns.find(e=>e.isTreeColumn),this.groupColumn=this.options.columns.find(e=>e.group),e.$watchCollection("body.rows",this.rowsUpdated.bind(this)),this.options.scrollbarV||!this.options.scrollbarV&&this.options.paging.externalPaging){var o=!1;e.$watch("body.options.paging.size",(e,t)=>{(!o||e>t)&&(this.getRows(),o=!0)}),e.$watch("body.options.paging.count",e=>{this.count=e,this.updatePage()}),e.$watch("body.options.paging.offset",e=>{this.options.paging.size&&this.onPage({offset:e,size:this.options.paging.size})})}}rowsUpdated(e,t){if(e)if(this.options.paging.externalPaging||(this.options.paging.count=e.length),this.count=this.options.paging.count,(this.treeColumn||this.groupColumn)&&this.buildRowsByGroup(),this.options.scrollbarV){let o=e&&t&&(e.length===t.length||e.length<t.length);this.getRows(o)}else{let e=this.rows;if(this.treeColumn?e=this.buildTree():this.groupColumn&&(e=this.buildGroups()),this.options.paging.externalPaging){let t=this.getFirstLastIndexes(),o=t.first;for(this.tempRows.splice(0,this.tempRows.length);o<t.last;)this.tempRows.push(e[o++])}else this.tempRows.splice(0,this.tempRows.length),this.tempRows.push(...e)}}getFirstLastIndexes(){var e,t;return this.options.scrollbarV?(e=Math.max(Math.floor((this.options.internal.offsetY||0)/this.options.rowHeight,0),0),t=Math.min(e+this.options.paging.size,this.count)):this.options.paging.externalPaging?(e=Math.max(this.options.paging.offset*this.options.paging.size,0),t=Math.min(e+this.options.paging.size,this.count)):t=this.count,{first:e,last:t}}updatePage(){let e=this.options.paging.offset,t=this.getFirstLastIndexes();void 0===this.options.internal.oldScrollPosition&&(this.options.internal.oldScrollPosition=0);let o=this.options.internal.oldScrollPosition,n=t.first/this.options.paging.size;this.options.internal.oldScrollPosition=n,n=n<o?Math.floor(n):n>o?Math.ceil(n):e,isNaN(n)||(this.options.paging.offset=n)}calculateDepth(e,t=0){var o=this.treeColumn?this.treeColumn.relationProp:this.groupColumn.prop,n=this.treeColumn.prop;if(!e[o])return t;if(e.$$depth)return e.$$depth+t;var i=this.index[e[o]];if(i)return t+=1,this.calculateDepth(i,t);for(var r=0,s=this.rows.length;r<s;r++){var l=this.rows[r];if(l[n]==e[o])return t+=1,this.calculateDepth(l,t)}return t}buildRowsByGroup(){this.index={},this.rowsByGroup={};for(var e=this.treeColumn?this.treeColumn.relationProp:this.groupColumn.prop,t=0,o=this.rows.length;t<o;t++){var n=this.rows[t],i=n[e];if(i&&(this.rowsByGroup[i]?this.rowsByGroup[i].push(n):this.rowsByGroup[i]=[n]),this.treeColumn){var r=this.treeColumn.prop;if(this.index[n[r]]=n,void 0===n[e])n.$$depth=0;else{var s=this.index[n[e]];if(void 0===s)for(var l=0;l<o;l++)if(this.rows[l][r]==i){s=this.rows[l];break}void 0===s.$$depth&&(s.$$depth=this.calculateDepth(s)),n.$$depth=s.$$depth+1,s.$$children?s.$$children.push(n[r]):s.$$children=[n[r]]}}}}buildGroups(){var e=[];return angular.forEach(this.rowsByGroup,(t,o)=>{e.push({name:o,group:!0}),this.expanded[o]&&e.push(...t)}),e}isSelected(e){var t=!1;return this.options.selectable&&(t=this.options.multiSelect?this.selected.indexOf(e)>-1:this.selected===e),t}buildTree(){var e=[],t=this;return function e(o,n,i){o.forEach(function(o){var r=o[t.treeColumn.relationProp],s=o[t.treeColumn.prop],l=t.rowsByGroup[s],a=t.expanded[s];(i>0||!r)&&(n.push(o),l&&l.length>0&&a&&e(l,n,i+1))})}(this.rows,e,0),e}getRows(e){if((this.treeColumn||this.groupColumn)&&!this.rowsByGroup)return!1;var t;this.treeColumn?(t=this.treeTemp||[],!e&&this.treeTemp||(this.treeTemp=t=this.buildTree(),this.count=t.length,this.tempRows.splice(0,this.tempRows.length))):this.groupColumn?(t=this.groupsTemp||[],!e&&this.groupsTemp||(this.groupsTemp=t=this.buildGroups(),this.count=t.length)):(t=this.rows,!0===e&&this.tempRows.splice(0,this.tempRows.length));var o=0,n=this.getFirstLastIndexes(),i=n.first;for(this.tempRows.splice(0,n.last-n.first);i<n.last&&i<this.count;){var r=t[i];r&&(r.$$index=i,this.tempRows[o]=r),o++,i++}return this.options.internal.styleTranslator.update(this.tempRows),this.tempRows}styles(){var e={width:this.options.internal.innerWidth+"px"};return this.options.scrollbarV?!1===this.options.scrollbarH&&(e.overflowX="hidden"):e.overflowY="hidden",this.options.scrollbarV&&(e.height=this.options.internal.bodyHeight+"px"),e}rowStyles(e){let t={};return"auto"===this.options.rowHeight&&(t.height=this.options.rowHeight+"px"),t}groupRowStyles(e){var t=this.rowStyles(e);return t.width=this.columnWidths.total+"px",t}rowClasses(e){var t={selected:this.isSelected(e),"dt-row-even":e&&e.$$index%2==0,"dt-row-odd":e&&e.$$index%2!=0};return this.treeColumn&&(t["dt-leaf"]=this.rowsByGroup[e[this.treeColumn.relationProp]],t["dt-has-leafs"]=this.rowsByGroup[e[this.treeColumn.prop]],t["dt-depth-"+e.$$depth]=!0),t}getRowValue(e){return this.tempRows[e]}getRowExpanded(e){return this.treeColumn?this.expanded[e[this.treeColumn.prop]]:this.groupColumn?this.expanded[e.name]:void 0}getRowHasChildren(e){if(this.treeColumn){var t=this.rowsByGroup[e[this.treeColumn.prop]];return void 0!==t||t&&!t.length}}onTreeToggled(e,t){var o=e[this.treeColumn.prop];if(this.expanded[o]=!this.expanded[o],this.options.scrollbarV)this.getRows(!0);else{var n=this.buildTree();this.tempRows.splice(0,this.tempRows.length),this.tempRows.push(...n)}this.onTreeToggle({row:e,cell:t})}onGroupToggle(e){if(this.expanded[e.name]=!this.expanded[e.name],this.options.scrollbarV)this.getRows(!0);else{var t=this.buildGroups();this.tempRows.splice(0,this.tempRows.length),this.tempRows.push(...t)}}}function BodyDirective(e){return{restrict:"E",controller:BodyController,controllerAs:"body",bindToController:{columns:"=",columnWidths:"=",rows:"=",options:"=",selected:"=?",expanded:"=?",onPage:"&",onTreeToggle:"&",onSelect:"&",onRowClick:"&",onRowDblClick:"&"},scope:!0,template:'\n      <div \n        class="progress-linear" \n        role="progressbar" \n        ng-show="body.options.paging.loadingIndicator">\n        <div class="container">\n          <div class="bar"></div>\n        </div>\n      </div>\n      <div class="dt-body" ng-style="body.styles()" dt-seletion>\n        <dt-scroller class="dt-body-scroller">\n          <dt-group-row ng-repeat-start="r in body.tempRows track by $index"\n                        ng-if="r.group"\n                        ng-style="body.groupRowStyles(r)" \n                        options="body.options"\n                        on-group-toggle="body.onGroupToggle(group)"\n                        expanded="body.getRowExpanded(r)"\n                        tabindex="{{$index}}"\n                        row="r">\n          </dt-group-row>\n          <dt-row ng-repeat-end\n                  ng-if="!r.group"\n                  row="body.getRowValue($index)"\n                  tabindex="{{$index}}"\n                  columns="body.columns"\n                  column-widths="body.columnWidths"\n                  ng-keydown="selCtrl.keyDown($event, $index, r)"\n                  ng-click="selCtrl.rowClicked($event, r.$$index, r)"\n                  ng-dblclick="selCtrl.rowDblClicked($event, r.$$index, r)"\n                  on-tree-toggle="body.onTreeToggled(row, cell)"\n                  ng-class="body.rowClasses(r)"\n                  options="body.options"\n                  selected="body.isSelected(r)"\n                  on-checkbox-change="selCtrl.onCheckboxChange($event, $index, row)"\n                  columns="body.columnsByPin"\n                  has-children="body.getRowHasChildren(r)"\n                  expanded="body.getRowExpanded(r)"\n                  ng-style="body.rowStyles(r)">\n          </dt-row>\n        </dt-scroller>\n        <div ng-if="body.rows && !body.rows.length" \n             class="empty-row" \n             ng-bind="::body.options.emptyMessage">\n       </div>\n       <div ng-if="body.rows === undefined" \n             class="loading-row"\n             ng-bind="::body.options.loadingMessage">\n        </div>\n      </div>'}}function NextSortDirection(e,t){return"single"===e?"asc"===t?"desc":"asc":t?"asc"===t?"desc":void 0:"asc"}class HeaderCellController{styles(){return{width:this.column.width+"px",minWidth:this.column.minWidth+"px",maxWidth:this.column.maxWidth+"px",height:this.column.height+"px"}}cellClass(){var e={sortable:this.column.sortable,resizable:this.column.resizable};return this.column.headerClassName&&(e[this.column.headerClassName]=!0),e}onSorted(){this.column.sortable&&(this.column.sort=NextSortDirection(this.sortType,this.column.sort),void 0===this.column.sort&&(this.column.sortPriority=void 0),this.onSort({column:this.column}))}sortClass(){return{"sort-btn":!0,"sort-asc icon-down":"asc"===this.column.sort,"sort-desc icon-up":"desc"===this.column.sort}}onResized(e,t){this.onResize({column:t,width:e})}onCheckboxChange(){this.onCheckboxChanged()}}function HeaderCellDirective(e){return{restrict:"E",controller:HeaderCellController,controllerAs:"hcell",scope:!0,bindToController:{options:"=",column:"=",onCheckboxChange:"&",onSort:"&",sortType:"=",onResize:"&",selected:"="},replace:!0,template:'<div ng-class="hcell.cellClass()"\n            class="dt-header-cell"\n            draggable="true"\n            data-id="{{column.$id}}"\n            ng-style="hcell.styles()"\n            title="{{::hcell.column.name}}">\n        <div resizable="hcell.column.resizable"\n             on-resize="hcell.onResized(width, hcell.column)"\n             min-width="hcell.column.minWidth"\n             max-width="hcell.column.maxWidth">\n          <label ng-if="hcell.column.isCheckboxColumn && hcell.column.headerCheckbox" class="dt-checkbox">\n            <input type="checkbox"\n                   ng-checked="hcell.selected"\n                   ng-click="hcell.onCheckboxChange()" />\n          </label>\n          <span class="dt-header-cell-label"\n                ng-click="hcell.onSorted()">\n          </span>\n          <span ng-class="hcell.sortClass()"></span>\n        </div>\n      </div>',compile:function(){return{pre:function(t,o,n,i){let r,s=o[0].querySelector(".dt-header-cell-label");if((i.column.headerTemplate||i.column.headerRenderer)&&((r=i.options.$outer.$new(!1)).$header=i.column.name,r.$index=t.$index),i.column.headerTemplate){let t=angular.element(`<span>${i.column.headerTemplate.trim()}</span>`);angular.element(s).append(e(t)(r))}else if(i.column.headerRenderer){let t=angular.element(i.column.headerRenderer(o));angular.element(s).append(e(t)(r)[0])}else{let e=i.column.name;null==e&&(e=""),s.textContent=e}}}}}}class HeaderController{styles(){return{width:this.options.internal.innerWidth+"px",height:this.options.headerHeight+"px"}}innerStyles(){return{width:this.columnWidths.total+"px"}}onSorted(e){if("single"===this.options.sortType){function t(t){t!==e&&(t.sort=void 0)}this.columns.left.forEach(t),this.columns.center.forEach(t),this.columns.right.forEach(t)}this.onSort({column:e})}stylesByGroup(e){var t={width:this.columnWidths[e]+"px"};if("center"===e)TranslateXY(t,-1*this.options.internal.offsetX,0);else if("right"===e){TranslateXY(t,-1*(this.columnWidths.total-this.options.internal.innerWidth),0)}return t}onCheckboxChanged(){this.onCheckboxChange()}onResized(e,t){this.onResize({column:e,width:t})}}function HeaderDirective(e){return{restrict:"E",controller:HeaderController,controllerAs:"header",scope:!0,bindToController:{options:"=",columns:"=",columnWidths:"=",onSort:"&",onResize:"&",onCheckboxChange:"&"},template:'\n      <div class="dt-header" ng-style="header.styles()">\n\n        <div class="dt-header-inner" ng-style="header.innerStyles()">\n          <div class="dt-row-left"\n               ng-style="header.stylesByGroup(\'left\')"\n               ng-if="header.columns[\'left\'].length"\n               sortable="header.options.reorderable"\n               on-sortable-sort="columnsResorted(event, columnId)">\n            <dt-header-cell\n              ng-repeat="column in header.columns[\'left\'] track by column.$id"\n              on-checkbox-change="header.onCheckboxChanged()"\n              on-sort="header.onSorted(column)"\n              options="header.options"\n              sort-type="header.options.sortType"\n              on-resize="header.onResized(column, width)"\n              selected="header.isSelected()"\n              column="column">\n            </dt-header-cell>\n          </div>\n          <div class="dt-row-center"\n               sortable="header.options.reorderable"\n               ng-style="header.stylesByGroup(\'center\')"\n               on-sortable-sort="columnsResorted(event, columnId)">\n            <dt-header-cell\n              ng-repeat="column in header.columns[\'center\'] track by column.$id"\n              on-checkbox-change="header.onCheckboxChanged()"\n              on-sort="header.onSorted(column)"\n              sort-type="header.options.sortType"\n              selected="header.isSelected()"\n              on-resize="header.onResized(column, width)"\n              options="header.options"\n              column="column">\n            </dt-header-cell>\n          </div>\n          <div class="dt-row-right"\n               ng-if="header.columns[\'right\'].length"\n               sortable="header.options.reorderable"\n               ng-style="header.stylesByGroup(\'right\')"\n               on-sortable-sort="columnsResorted(event, columnId)">\n            <dt-header-cell\n              ng-repeat="column in header.columns[\'right\'] track by column.$id"\n              on-checkbox-change="header.onCheckboxChanged()"\n              on-sort="header.onSorted(column)"\n              sort-type="header.options.sortType"\n              selected="header.isSelected()"\n              on-resize="header.onResized(column, width)"\n              options="header.options"\n              column="column">\n            </dt-header-cell>\n          </div>\n        </div>\n      </div>',replace:!0,link:function(t,o,n,i){t.columnsResorted=function(t,o){var n=r(o),s=angular.element(t.currentTarget),l=-1;angular.forEach(s.children(),(e,t)=>{o===angular.element(e).attr("data-id")&&(l=t)}),e(()=>{angular.forEach(i.columns,e=>{if(e.indexOf(n)>-1){var t=e[l],o=i.options.columns.indexOf(t),r=i.options.columns.indexOf(n);return i.options.columns.splice(r,1),i.options.columns.splice(o,0,n),!1}})})};var r=function(e){return i.columns.left.concat(i.columns.center).concat(i.columns.right).find(function(t){return t.$id===e})}}}}function SortableDirective(e){return{restrict:"A",scope:{isSortable:"=sortable",onSortableSort:"&"},link:function(e,t,o){var n,i;t[0];function r(e){var t=e.target;!function(e,t){if(e.parentNode==t.parentNode)for(var o=e;o;o=o.previousSibling)if(o===t)return!0;return!1}(n,t)?t.nextSibling&&t.hasAttribute("draggable")&&t.parentNode.insertBefore(n,t.nextSibling.nextSibling):t.parentNode.insertBefore(n,t)}function s(o){o.preventDefault(),n.classList.remove("dt-clone"),t.off("dragend",s),t.off("dragenter",r),i!==n.nextSibling&&e.onSortableSort({event:o,columnId:angular.element(n).attr("data-id")})}function l(o){if(!e.isSortable)return!1;o=o.originalEvent||o,n=o.target,i=n.nextSibling,n.classList.add("dt-clone"),o.dataTransfer.effectAllowed="move",o.dataTransfer.setData("Text",n.textContent),t.on("dragenter",r),t.on("dragend",s)}t.on("dragstart",l),e.$on("$destroy",()=>{t.off("dragstart",l)})}}}function ResizableDirective(e,t){return{restrict:"A",scope:{isResizable:"=resizable",minWidth:"=",maxWidth:"=",onResize:"&"},link:function(o,n,i){o.isResizable&&n.addClass("resizable");var r,s=angular.element('<span class="dt-resize-handle" title="Resize"></span>'),l=n.parent();function a(e){e=e.originalEvent||e;var t=l[0].clientWidth+(e.movementX||e.mozMovementX||e.screenX-r||0);r=e.screenX,(!o.minWidth||t>=o.minWidth)&&(!o.maxWidth||t<=o.maxWidth)&&l.css({width:t+"px"})}function c(){o.onResize&&t(function(){let e=l[0].clientWidth;e<o.minWidth&&(e=o.minWidth),o.onResize({width:e})}),e.unbind("mousemove",a),e.unbind("mouseup",c)}s.on("mousedown",function(t){if(!n[0].classList.contains("resizable"))return!1;t.stopPropagation(),t.preventDefault(),e.on("mousemove",a),e.on("mouseup",c)}),n.append(s)}}}function throttle(e,t,o){var n,i,r,s=null,l=0;o||(o={});var a=function(){l=!1===o.leading?0:new Date,s=null,r=e.apply(n,i)};return function(){var c=new Date;l||!1!==o.leading||(l=c);var d=t-(c-l);return n=this,i=arguments,d<=0?(clearTimeout(s),s=null,l=c,r=e.apply(n,i)):s||!1===o.trailing||(s=setTimeout(a,d)),r}}function ScrollbarWidth(){var e=document.createElement("div");e.style.visibility="hidden",e.style.width="100px",e.style.msOverflowStyle="scrollbar",document.body.appendChild(e);var t=e.offsetWidth;e.style.overflow="scroll";var o=document.createElement("div");o.style.width="100%",e.appendChild(o);var n=o.offsetWidth;return e.parentNode.removeChild(e),t-n}let DataTableService={columns:{},dTables:{},saveColumns(e,t){if(t&&t.length){let o=[].slice.call(t);this.dTables[e]=o}},buildColumns(e,t){angular.forEach(this.dTables,(o,n)=>{this.columns[n]=[],angular.forEach(o,o=>{let i={};var r=!0;angular.forEach(o.attributes,o=>{let n=CamelCase(o.name);switch(n){case"class":i.className=o.value;break;case"name":case"prop":i[n]=o.value;break;case"headerRenderer":case"cellRenderer":case"cellDataGetter":i[n]=t(o.value);break;case"visible":r=t(o.value)(e);break;default:i[n]=t(o.value)(e)}});let s=o.getElementsByTagName("column-header");s.length&&(i.headerTemplate=s[0].innerHTML,o.removeChild(s[0])),""!==o.innerHTML&&(i.template=o.innerHTML),r&&this.columns[n].push(i)})}),this.dTables={}}};function ObjectId(){return((new Date).getTime()/1e3|0).toString(16)+"xxxxxxxxxxxxxxxx".replace(/[x]/g,function(){return(16*Math.random()|0).toString(16)}).toLowerCase()}function ScaleColumns(e,t,o){angular.forEach(e,e=>{e.forEach(e=>{e.canAutoResize?e.width=0:(t-=e.width,o-=e.flexGrow)})});var n={},i=t;do{let t=i/o;i=0,angular.forEach(e,e=>{e.forEach((e,o)=>{if(e.canAutoResize&&!n[o]){let r=e.width+e.flexGrow*t;void 0!==e.minWidth&&r<e.minWidth?(i+=r-e.minWidth,e.width=e.minWidth,n[o]=!0):e.width=r}})})}while(0!==i)}function ColumnsByPin(e){for(var t={left:[],center:[],right:[]},o=0,n=e.length;o<n;o++){var i=e[o];i.frozenLeft?t.left.push(i):i.frozenRight?t.right.push(i):t.center.push(i)}return t}function GetTotalFlexGrow(e){var t=0;for(let o of e)t+=o.flexGrow||0;return t}function ColumnTotalWidth(e,t){var o=0;return e.forEach(e=>{var n=t&&e[t];o+=n?e[t]:e.width}),o}function AdjustColumnWidths(e,t){var o=ColumnTotalWidth(e),n=GetTotalFlexGrow(e),i=ColumnsByPin(e);o!==t&&ScaleColumns(i,t,n)}function ForceFillColumnWidths(e,t,o){var n=0,i=o>-1?e.slice(o,e.length).filter(e=>e.canAutoResize):e.filter(e=>e.canAutoResize);e.forEach(e=>{e.canAutoResize?n+=e.$$oldWidth||e.width:n+=e.width});var r=(t-n)/i.length,s=n>t;i.forEach(e=>{if(s)e.width=e.$$oldWidth||e.width;else{e.$$oldWidth||(e.$$oldWidth=e.width);var t=e.$$oldWidth+r;e.minWith&&t<e.minWidth?e.width=e.minWidth:e.maxWidth&&t>e.maxWidth?e.width=e.maxWidth:e.width=t}})}function ColumnGroupWidths(e,t){return{left:ColumnTotalWidth(e.left),center:ColumnTotalWidth(e.center),right:ColumnTotalWidth(e.right),total:ColumnTotalWidth(t)}}const ColumnDefaults={frozenLeft:!1,frozenRight:!1,className:void 0,headerClassName:void 0,flexGrow:0,minWidth:100,maxWidth:void 0,width:150,resizable:!0,comparator:void 0,sortable:!0,sort:void 0,sortBy:void 0,headerRenderer:void 0,cellRenderer:void 0,cellDataGetter:void 0,isTreeColumn:!1,isCheckboxColumn:!1,headerCheckbox:!1,canAutoResize:!0},TableDefaults={scrollbarV:!0,rowHeight:30,columnMode:"standard",loadingMessage:"Loading...",emptyMessage:"No data to display",headerHeight:30,footerHeight:0,paging:{externalPaging:!1,size:void 0,count:0,offset:0,loadingIndicator:!1,countText:function(e){return`${e} total`}},selectable:!1,multiSelect:!1,checkboxSelection:!1,reorderable:!0,internal:{offsetX:0,offsetY:0,innerWidth:0,bodyHeight:300},externalSorting:!1};class DataTableController{constructor(e,t,o,n){Object.assign(this,{$scope:e,$filter:t,$log:o}),this.defaults(),this.options.$outer=e.$parent,e.$watch("dt.options.columns",(e,t)=>{this.transposeColumnDefaults(),e.length!==t.length&&this.adjustColumns(),this.calculateColumns()},!0);var i=e.$watch("dt.rows",e=>{e&&(i(),this.onSorted())})}defaults(){this.expanded=this.expanded||{},this.options=angular.extend(angular.copy(TableDefaults),this.options),angular.forEach(TableDefaults.paging,(e,t)=>{this.options.paging[t]||(this.options.paging[t]=e)}),this.options.selectable&&this.options.multiSelect&&(this.selected=this.selected||[])}transposeColumnDefaults(){for(var e=0,t=this.options.columns.length;e<t;e++){var o=this.options.columns[e];o.$id=ObjectId(),angular.forEach(ColumnDefaults,(e,t)=>{o.hasOwnProperty(t)||(o[t]=e)}),o.name&&!o.prop&&(o.prop=CamelCase(o.name)),this.options.columns[e]=o}}calculateColumns(){var e=this.options.columns;this.columnsByPin=ColumnsByPin(e),this.columnWidths=ColumnGroupWidths(this.columnsByPin,e)}tableCss(){return{fixed:this.options.scrollbarV,selectable:this.options.selectable,checkboxable:this.options.checkboxSelection}}adjustColumns(e){var t=this.options.internal.innerWidth-this.options.internal.scrollBarWidth;"force"===this.options.columnMode?ForceFillColumnWidths(this.options.columns,t,e):"flex"===this.options.columnMode&&AdjustColumnWidths(this.options.columns,t)}calculatePageSize(){this.options.paging.size=Math.ceil(this.options.internal.bodyHeight/this.options.rowHeight)+1}onSorted(){if(this.rows){var e=this.options.columns.filter(e=>e.sort).sort((e,t)=>{if(e.sortPriority&&t.sortPriority){if(e.sortPriority>t.sortPriority)return 1;if(e.sortPriority<t.sortPriority)return-1}else{if(e.sortPriority)return-1;if(t.sortPriority)return 1}return 0}).map((e,t)=>(e.sortPriority=t+1,e));if(e.length&&(this.onSort({sorts:e}),this.options.onSort&&this.options.onSort(e),!this.options.externalSorting)){for(var t=[],o=0,n=e.length;o<n;o++){var i=e[o];if(!1!==i.comparator){var r="asc"===i.sort?"":"-";void 0!==i.sortBy?t.push(r+i.sortBy):t.push(r+i.prop)}}if(t.length){var s=this.$filter("orderBy")(this.rows,t);this.rows.splice(0,this.rows.length),this.rows.push(...s)}}this.options.internal.setYOffset(0)}}onTreeToggled(e,t){this.onTreeToggle({row:e,cell:t})}onBodyPage(e,t){this.onPage({offset:e,size:t})}onFooterPage(e,t){var o=this.options.rowHeight*t*e;this.options.internal.setYOffset(o)}onHeaderCheckboxChange(){if(this.rows){var e=this.selected.length===this.rows.length;this.selected.splice(0,this.selected.length),e||this.selected.push(...this.rows)}}isAllRowsSelected(){return!this.rows&&this.selected.length===this.rows.length}onResized(e,t){var o=this.options.columns.indexOf(e);o>-1&&((e=this.options.columns[o]).width=t,e.canAutoResize=!1,this.adjustColumns(o),this.calculateColumns());this.onColumnResize&&this.onColumnResize({column:e,width:t})}onSelected(e){this.onSelect({rows:e})}onRowClicked(e){this.onRowClick({row:e})}onRowDblClicked(e){this.onRowDblClick({row:e})}}function DataTableDirective(e,t,o){return{restrict:"E",replace:!0,controller:DataTableController,scope:!0,bindToController:{options:"=",rows:"=",selected:"=?",expanded:"=?",onSelect:"&",onSort:"&",onTreeToggle:"&",onPage:"&",onRowClick:"&",onRowDblClick:"&",onColumnResize:"&"},controllerAs:"dt",template:function(e){var t=e[0].getElementsByTagName("column"),o=ObjectId();return DataTableService.saveColumns(o,t),`<div class="dt" ng-class="dt.tableCss()" data-column-id="${o}">\n          <dt-header options="dt.options"\n                     on-checkbox-change="dt.onHeaderCheckboxChange()"\n                     columns="dt.columnsByPin"\n                     column-widths="dt.columnWidths"\n                     ng-if="dt.options.headerHeight"\n                     on-resize="dt.onResized(column, width)"\n                     selected="dt.isAllRowsSelected()"\n                     on-sort="dt.onSorted()">\n          </dt-header>\n          <dt-body rows="dt.rows"\n                   selected="dt.selected"\n                   expanded="dt.expanded"\n                   columns="dt.columnsByPin"\n                   on-select="dt.onSelected(rows)"\n                   on-row-click="dt.onRowClicked(row)"\n                   on-row-dbl-click="dt.onRowDblClicked(row)"\n                   column-widths="dt.columnWidths"\n                   options="dt.options"\n                   on-page="dt.onBodyPage(offset, size)"\n                   on-tree-toggle="dt.onTreeToggled(row, cell)">\n           </dt-body>\n          <dt-footer ng-if="dt.options.footerHeight"\n                     ng-style="{ height: dt.options.footerHeight + 'px' }"\n                     on-page="dt.onFooterPage(offset, size)"\n                     paging="dt.options.paging">\n           </dt-footer>\n        </div>`},compile:function(n,i){return{pre:function(n,i,r,s){DataTableService.buildColumns(n,o);var l=i.attr("data-column-id"),a=DataTableService.columns[l];function c(){var e=i[0].getBoundingClientRect();if(s.options.internal.innerWidth=Math.floor(e.width),s.options.scrollbarV){var t=e.height;s.options.headerHeight&&(t-=s.options.headerHeight),s.options.footerHeight&&(t-=s.options.footerHeight),s.options.internal.bodyHeight=t,s.calculatePageSize()}s.adjustColumns()}a&&(s.options.columns=a),s.transposeColumnDefaults(),s.options.internal.scrollBarWidth=ScrollbarWidth(),angular.element(e).on("resize",throttle(()=>{t(c)}));var d=function(){var e=i[0].getBoundingClientRect();e.width&&e.height?c():t(d,100)};d(),i.addClass("dt-loaded"),n.$on("$destroy",()=>{angular.element(e).off("resize")})}}}}}var dataTable=angular.module("data-table",[]).directive("dtable",DataTableDirective).directive("resizable",ResizableDirective).directive("sortable",SortableDirective).directive("dtHeader",HeaderDirective).directive("dtHeaderCell",HeaderCellDirective).directive("dtBody",BodyDirective).directive("dtScroller",ScrollerDirective).directive("dtSeletion",SelectionDirective).directive("dtRow",RowDirective).directive("dtGroupRow",GroupRowDirective).directive("dtCell",CellDirective).directive("dtFooter",FooterDirective).directive("dtPager",PagerDirective);export default dataTable;