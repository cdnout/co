"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Conv2DProgram=function(n){this.variableNames=["x","W"],this.outputShape=n.outShape;var e=n.padInfo.top,t=n.padInfo.left,o=n.strideHeight,d=n.strideWidth,r=n.filterHeight,i=n.filterWidth,a=4*Math.floor(n.inChannels/4),C=n.inChannels%4;this.userCode="\n      const ivec2 strides = ivec2("+o+", "+d+");\n      const ivec2 pads = ivec2("+e+", "+t+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+r+"; wR++) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= "+n.inHeight+") {\n            continue;\n          }\n\n          for (int wC = 0; wC < "+i+"; wC++) {\n            int xC = xCCorner + wC;\n\n            if (xC < 0 || xC >= "+n.inWidth+") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < "+a+"; d1 += 4) {\n              vec4 xValues = vec4(\n                getX(batch, xR, xC, d1),\n                getX(batch, xR, xC, d1 + 1),\n                getX(batch, xR, xC, d1 + 2),\n                getX(batch, xR, xC, d1 + 3)\n              );\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              dotProd += dot(xValues, wValues);\n            }\n\n            if ("+(1==C)+") {\n              dotProd +=\n                getX(batch, xR, xC, "+a+") *\n                getW(wR, wC, "+a+", d2);\n            } else if ("+(2==C)+") {\n              vec2 xValues = vec2(\n                getX(batch, xR, xC, "+a+"),\n                getX(batch, xR, xC, "+a+" + 1)\n              );\n              vec2 wValues = vec2(\n                getW(wR, wC, "+a+", d2),\n                getW(wR, wC, "+a+" + 1, d2)\n              );\n              dotProd += dot(xValues, wValues);\n            } else if ("+(3==C)+") {\n              vec3 xValues = vec3(\n                getX(batch, xR, xC, "+a+"),\n                getX(batch, xR, xC, "+a+" + 1),\n                getX(batch, xR, xC, "+a+" + 2)\n              );\n              vec3 wValues = vec3(\n                getW(wR, wC, "+a+", d2),\n                getW(wR, wC, "+a+" + 1, d2),\n                getW(wR, wC, "+a+" + 2, d2)\n              );\n              dotProd += dot(xValues, wValues);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "};exports.Conv2DProgram=Conv2DProgram;