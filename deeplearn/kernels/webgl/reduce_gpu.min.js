"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var ReduceProgram=function(n,e){this.variableNames=["x"];var i=n.windowSize,a=n.batchSize,t=n.inSize,u=Math.ceil(t/i);this.outputShape=[a,u];var l="sum"===e,o="0.0";l||(o="min"===e?"1.0 / 0.0":"-1.0 / 0.0");var s="min"===e?"min":"max",c=e+"("+e+"("+e+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===e&&(c="sumValue");var d=4*Math.floor(i/4),r=i%4,v="\n      if ("+l+") {\n        sumValue += dot(values, ones);\n      } else {\n        if (hasNaN(values)) {\n          setOutput(getNaN(values));\n          return;\n        }\n        minMaxValue = "+s+"(values, minMaxValue);\n      }\n    ",x=0<t%i?"\n        if (inIdx < 0 || inIdx >= "+t+") {\n          return initializationValue;\n        }\n      ":"";this.userCode="\n      const float initializationValue = "+o+";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        "+x+"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * "+i+";\n\n        vec4 minMaxValue = vec4("+o+");\n        float sumValue = 0.0;\n\n        for (int i = 0; i < "+d+"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          "+v+"\n        }\n\n        int inIdx = inOffset + "+d+";\n        if ("+(1==r)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n          "+v+"\n        } else if ("+(2==r)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n          "+v+"\n        } else if ("+(3==r)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n          "+v+"\n        }\n        setOutput("+c+");\n      }\n    "};exports.ReduceProgram=ReduceProgram;