"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var util=require("../util");function axesAreInnerMostDims(e,n){for(var t=0;t<e.length;++t)if(e[e.length-t-1]!==n-1-t)return!1;return!0}function combineLocations(e,n,t){for(var r=e.length+n.length,s=[],o=0,u=0,i=0;i<r;i++)-1===t.indexOf(i)?s.push(e[o++]):s.push(n[u++]);return s}function computeOutAndReduceShapes(n,e){for(var t=[],r=n.length,s=0;s<r;s++)-1===e.indexOf(s)&&t.push(n[s]);return[t,e.map(function(e){return n[e]})]}function expandShapeToKeepDim(e,n){return combineLocations(e,n.map(function(e){return 1}),n)}function parseAxisParam(e,n){var t=n.length;return e=null==e?n.map(function(e,n){return n}):[].concat(e),util.assert(e.every(function(e){return-t<=e&&e<t}),"All values in axis param must be in range [-"+t+", "+t+") but got axis "+e),util.assert(e.every(function(e){return util.isInt(e)}),"All values in axis param must be integers but got axis "+e),e.map(function(e){return e<0?t+e:e})}function assertAxesAreInnerMostDims(e,n,t){util.assert(axesAreInnerMostDims(n,t),e+" supports only inner-most axes for now. Got axes "+n+" and rank-"+t+" input.")}function getAxesPermutation(e,n){if(axesAreInnerMostDims(e,n))return null;for(var t=[],r=0;r<n;++r)-1===e.indexOf(r)&&t.push(r);return e.forEach(function(e){return t.push(e)}),t}function getUndoAxesPermutation(e){return e.map(function(e,n){return[n,e]}).sort(function(e,n){return e[1]-n[1]}).map(function(e){return e[0]})}function getInnerMostAxes(e,n){for(var t=[],r=n-e;r<n;++r)t.push(r);return t}exports.axesAreInnerMostDims=axesAreInnerMostDims,exports.combineLocations=combineLocations,exports.computeOutAndReduceShapes=computeOutAndReduceShapes,exports.expandShapeToKeepDim=expandShapeToKeepDim,exports.parseAxisParam=parseAxisParam,exports.assertAxesAreInnerMostDims=assertAxesAreInnerMostDims,exports.getAxesPermutation=getAxesPermutation,exports.getUndoAxesPermutation=getUndoAxesPermutation,exports.getInnerMostAxes=getInnerMostAxes;