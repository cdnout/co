"use strict";var __awaiter=this&&this.__awaiter||function(o,i,s,u){return new(s=s||Promise)(function(t,e){function n(t){try{a(u.next(t))}catch(t){e(t)}}function r(t){try{a(u.throw(t))}catch(t){e(t)}}function a(e){e.done?t(e.value):new s(function(t){t(e.value)}).then(n,r)}a((u=u.apply(o,i||[])).next())})},__generator=this&&this.__generator||function(n,r){var a,o,i,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]},t={next:e(0),throw:e(1),return:e(2)};return"function"==typeof Symbol&&(t[Symbol.iterator]=function(){return this}),t;function e(e){return function(t){return function(e){if(a)throw new TypeError("Generator is already executing.");for(;s;)try{if(a=1,o&&(i=o[2&e[0]?"return":e[0]?"throw":"next"])&&!(i=i.call(o,e[1])).done)return i;switch(o=0,i&&(e=[0,i.value]),e[0]){case 0:case 1:i=e;break;case 4:return s.label++,{value:e[1],done:!1};case 5:s.label++,o=e[1],e=[0];continue;case 7:e=s.ops.pop(),s.trys.pop();continue;default:if(!(i=0<(i=s.trys).length&&i[i.length-1])&&(6===e[0]||2===e[0])){s=0;continue}if(3===e[0]&&(!i||e[1]>i[0]&&e[1]<i[3])){s.label=e[1];break}if(6===e[0]&&s.label<i[1]){s.label=i[1],i=e;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(e);break}i[2]&&s.ops.pop(),s.trys.pop();continue}e=r.call(n,s)}catch(t){e=[6,t],o=0}finally{a=i=0}if(5&e[0])throw e[1];return{value:e[0]?e[1]:void 0,done:!0}}([e,t])}}};Object.defineProperty(exports,"__esModule",{value:!0});var globals_1=require("../../globals"),tensor_1=require("../../tensor"),util=require("../../util"),BatchDataset=function(){function t(t,e,n){void 0===n&&(n=!0),this.base=t,this.batchSize=e,this.smallLastBatch=n}return t.prototype.getStream=function(){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(t){return[2,this.base.getStream().batch(this.batchSize,this.smallLastBatch).map(makeDatasetBatch)]})})},t}();function makeDatasetBatch(e){var r={},t=e[0],a=Object.keys(t);a.forEach(function(t){r[t]=[]});for(var n=function(n){a.forEach(function(t){var e=n[t];r[t].push(e)})},o=0,i=e;o<i.length;o++){n(i[o])}var s={};return a.forEach(function(t){if(r[t].length!==e.length)throw new Error("Batching failed to get a '"+t+"' value for each element.");"string"==typeof r[t][0]?s[t]=r[t]:s[t]=batchConcat(r[t])}),e.forEach(globals_1.dispose),s}function batchConcat(t){for(var e=shapeAndValues(t[0])[0],n=[t.length].concat(e),r=new Float32Array(n.reduce(function(t,e){return t*e})),a=0,o=0,i=t;o<i.length;o++){var s=shapeAndValues(i[o]),u=s[0],c=s[1];if(!util.arraysEqual(u,e))throw new Error("Elements must have the same shape to be batched");r.set(c,a),a+=c.length}return tensor_1.Tensor.make(n,{values:r})}function shapeAndValues(t){return t instanceof tensor_1.Tensor?[t.shape,t.dataSync()]:Array.isArray(t)?[[t.length],t]:[[],[t]]}exports.BatchDataset=BatchDataset;