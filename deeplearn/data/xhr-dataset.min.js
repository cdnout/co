"use strict";var __extends=this&&this.__extends||function(){var a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])};return function(t,e){function r(){this.constructor=t}a(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}();Object.defineProperty(exports,"__esModule",{value:!0});var tensor_1=require("../tensor"),util=require("../util"),dataset_1=require("./dataset"),PARSING_IMAGE_CANVAS_HEIGHT_PX=1e3;function getXhrDatasetConfig(a){return new Promise(function(t,e){var r=new XMLHttpRequest;r.open("GET",a),r.onload=function(){t(JSON.parse(r.responseText))},r.onerror=function(t){e(t)},r.send()})}exports.getXhrDatasetConfig=getXhrDatasetConfig;var XhrDataset=function(r){function t(t){var e=r.call(this,t.data.map(function(t){return t.shape}))||this;return e.xhrDatasetConfig=t,e}return __extends(t,r),t.prototype.getTensor=function(o){var t="png"===o.dataType?parseTypedArrayFromPng(o,o.shape):parseTypedArrayFromBinary(o),i=util.sizeFromShape(o.shape);return t.then(function(t){for(var e=[],r=0;r<t.length/i;r++){var a=t.subarray(r*i,(r+1)*i),n=tensor_1.Tensor.make(o.shape,{values:new Float32Array(a)},"float32");e.push(n)}return e})},t.prototype.fetchData=function(){var a=this;return new Promise(function(e,t){var r=a.xhrDatasetConfig.data.map(function(t){return a.getTensor(t)});Promise.all(r).then(function(t){a.dataset=t,e()})})},t}(dataset_1.InMemoryDataset);function parseTypedArrayFromBinary(n){return new Promise(function(r,e){var a=new XMLHttpRequest;a.open("GET",n.path),a.responseType="arraybuffer",a.onload=function(t){var e=new("float32"===n.dataType?Float32Array:Uint8Array)(a.response);r(e)},a.onerror=function(t){return e(t)},a.send()})}function parseGrayscaleImageData(t,e,r){for(var a=r,n=0;n<t.length;n+=4)e[a++]=t[n]}function parseRGBImageData(t,e,r){for(var a=r,n=0;n<t.length;n+=4)e[a]=t[n],e[a+1]=t[n+1],e[a+2]=t[n+2],a+=3}function parseImage(t,e){var r=document.createElement("canvas"),a=r.getContext("2d"),n=t.height,o=util.sizeFromShape(e),i=new Uint8Array(n*o);if(t.width!==e[0]*e[1])throw new Error("Image width ("+t.width+") must be multiple of rows*columns ("+e[0]+"*"+e[1]+") of the tensor");r.width=t.width,r.height=PARSING_IMAGE_CANVAS_HEIGHT_PX;for(var s=r.width,u=r.height,h=s,p=u,f=e[2],c=0,g=Math.ceil(n/r.height),d=0;d<g;++d){var l=d*r.height;d===g-1&&0<n%r.height&&(r.height=n%r.height,p=u=r.height),a.drawImage(t,0,l,s,u,0,0,h,p);var y=a.getImageData(0,0,r.width,r.height).data;(1===f?parseGrayscaleImageData:parseRGBImageData)(y,i,c),c+=r.height*o}return i}function parseTypedArrayFromPng(a,n){return new Promise(function(e,t){var r=new Image;r.setAttribute("crossOrigin",""),r.onload=function(){var t=parseImage(r,n);r.src="",r=null,e(t)},r.src=a.path})}exports.XhrDataset=XhrDataset;