"use strict";var __extends=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}();Object.defineProperty(exports,"__esModule",{value:!0});var globals_1=require("../../globals"),conv_util=require("../../ops/conv_util"),util=require("../../util"),op_1=require("./op"),Convolution2D=function(p){function e(e,t,o,r,s,i,n,a){void 0===n&&(n=1);var u=p.call(this)||this;return u.wTensor=e,u.xTensor=t,u.bTensor=o,u.yTensor=r,u.fieldSize=s,u.outputDepth=i,u.stride=n,u.assertWeightsShape(e.shape),u.zeroPad=null!=a?a:conv_util.computeDefaultPad(u.xTensor.shape,u.fieldSize,u.stride),util.assert(util.isInt(u.zeroPad),"The zero padding ("+u.zeroPad+") must be an integer. Change the stride and/or zero pad parameters"),u}return __extends(e,p),e.prototype.feedForward=function(e,t){var o=this,r=t.get(this.wTensor),s=t.get(this.bTensor),i=t.get(this.xTensor);globals_1.tidy(function(){t.set(o.yTensor,globals_1.keep(e.conv2d(i,r,s,o.stride,o.zeroPad)))})},e.prototype.backProp=function(r,e,s){var i=this,n=e.get(this.wTensor),a=e.get(this.xTensor),u=s.get(this.yTensor);globals_1.tidy(function(){var e=r.conv2dDerFilter(a,u,n.shape,i.stride,i.zeroPad),t=r.sum(u,[0,1]),o=r.conv2dDerInput(a.shape,u,n,i.stride,i.zeroPad);s.add(i.wTensor,e),s.add(i.bTensor,t),s.add(i.xTensor,o)})},e.prototype.assertWeightsShape=function(e){util.assert(e[0]===this.fieldSize&&e[1]===this.fieldSize&&e[2]===this.xTensor.shape[2]&&e[3]===this.outputDepth,"weights must be of shape ["+this.fieldSize+","+this.fieldSize+","+this.xTensor.shape[2]+","+this.outputDepth+"] but they are ofshape ["+e+"]")},e}(op_1.Operation);exports.Convolution2D=Convolution2D;