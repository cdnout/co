"use strict";var __extends=this&&this.__extends||function(){var a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,s){e.__proto__=s}||function(e,s){for(var r in s)s.hasOwnProperty(r)&&(e[r]=s[r])};return function(e,s){function r(){this.constructor=e}a(e,s),e.prototype=null===s?Object.create(s):(r.prototype=s.prototype,new r)}}();Object.defineProperty(exports,"__esModule",{value:!0});var globals_1=require("../../globals"),util=require("../../util"),graph_util=require("../graph_util"),op_1=require("./op"),Add=function(t){function e(e,s,r){var a=t.call(this)||this;return a.x1Tensor=e,a.x2Tensor=s,a.yTensor=r,util.assert(1===util.sizeFromShape(e.shape)||1===util.sizeFromShape(s.shape)||util.arraysEqual(e.shape,s.shape)||2===e.shape.length&&1===s.shape.length&&e.shape[1]===s.shape[0]||1===e.shape.length&&2===s.shape.length&&e.shape[0]===s.shape[1],"One of t1 or t2 must be a scalar, or t1 and t2 must have the same shape, or one of them can be broadcasted (2D and 1D)."),a}return __extends(e,t),e.prototype.feedForward=function(s,r){var a=this,t=r.get(this.x1Tensor),o=r.get(this.x2Tensor);globals_1.tidy(function(){var e=util.isScalarShape(t.shape)?s.scalarPlusArray(t,o):util.isScalarShape(o.shape)?s.scalarPlusArray(o,t):s.add(t,o);r.set(a.yTensor,globals_1.keep(e))})},e.prototype.backProp=function(s,e,r){var a=this,t=r.get(this.yTensor);globals_1.tidy(function(){var e;graph_util.shouldBackProp(a.x1Tensor)&&(1===a.x1Tensor.shape.length&&2===a.x2Tensor.shape.length&&a.x1Tensor.shape[0]===a.x2Tensor.shape[1]?(e=s.sum(t,0),r.add(a.x1Tensor,e)):util.isScalarShape(a.x1Tensor.shape)?(e=s.sum(t),r.add(a.x1Tensor,e)):r.add(a.x1Tensor,s.clone(t))),graph_util.shouldBackProp(a.x2Tensor)&&(2===a.x1Tensor.shape.length&&1===a.x2Tensor.shape.length&&a.x1Tensor.shape[1]===a.x2Tensor.shape[0]?(e=s.sum(t,0),r.add(a.x2Tensor,e)):util.isScalarShape(a.x2Tensor.shape)?(e=s.sum(t),r.add(a.x2Tensor,e)):r.add(a.x2Tensor,s.clone(t)))})},e.prototype.dispose=function(){null!=this.dySizeScalar&&this.dySizeScalar.dispose()},e}(op_1.Operation);exports.Add=Add;