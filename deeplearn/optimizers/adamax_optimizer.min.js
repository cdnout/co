"use strict";var __extends=this&&this.__extends||function(){var s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])};return function(e,t){function a(){this.constructor=e}s(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}}();Object.defineProperty(exports,"__esModule",{value:!0});var environment_1=require("../environment"),globals_1=require("../globals"),tensor_array_map_1=require("../graph/tensor_array_map"),ops_1=require("../ops/ops"),tensor_1=require("../tensor"),optimizer_1=require("./optimizer"),AdamaxOptimizer=function(n){function e(e,t,a,s,r,o){void 0===s&&(s=1e-8),void 0===r&&(r=0);var i=n.call(this,e,o)||this;return i.learningRate=e,i.accumulatedFirstMoment={},i.accumulatedWeightedInfNorm={},i.firstMomentGraph=new tensor_array_map_1.TensorArrayMap,i.weightedInfNormGraph=new tensor_array_map_1.TensorArrayMap,i.c=globals_1.keep(ops_1.scalar(-e)),i.eps=globals_1.keep(ops_1.scalar(s)),i.beta1=globals_1.keep(ops_1.scalar(t)),i.beta2=globals_1.keep(ops_1.scalar(a)),i.decay=globals_1.keep(ops_1.scalar(r)),globals_1.tidy(function(){i.iteration=ops_1.scalar(0).variable(),i.accBeta1=ops_1.scalar(t).variable()}),i.oneMinusBeta1=globals_1.keep(ops_1.scalar(1-t)),i.one=globals_1.keep(ops_1.scalar(1)),i}return __extends(e,n),e.prototype.applyGradients=function(m){var h=this;globals_1.tidy(function(){var e=h.one.sub(h.accBeta1),t=h.c.div(h.one.add(h.decay.mul(h.iteration)));for(var a in m){var s,r=environment_1.ENV.engine.registeredVariables[a];null==h.accumulatedFirstMoment[a]&&(s=!1,h.accumulatedFirstMoment[a]=ops_1.zerosLike(r).variable(s)),null==h.accumulatedWeightedInfNorm[a]&&(s=!1,h.accumulatedWeightedInfNorm[a]=ops_1.zerosLike(r).variable(s));var o=m[a],i=h.accumulatedFirstMoment[a],n=h.accumulatedWeightedInfNorm[a],p=h.beta1.mul(i).add(h.oneMinusBeta1.mul(o)),u=h.beta2.mul(n),c=o.abs(),d=u.maximum(c);h.accumulatedFirstMoment[a].assign(p),h.accumulatedWeightedInfNorm[a].assign(d);var l=t.div(e).mul(p.div(h.eps.add(d))).add(r);r.assign(l)}h.iteration.assign(h.iteration.add(h.one)),h.accBeta1.assign(h.accBeta1.mul(h.beta1))})},e.prototype.beforeBatch=function(e,t,a,s,r){var o=this;n.prototype.beforeBatch.call(this,e,t,a,s,r),0===this.firstMomentGraph.size()&&this.variableNodes.forEach(function(e){o.firstMomentGraph.set(e.output,tensor_1.Tensor.zeros(e.output.shape))}),0===this.weightedInfNormGraph.size()&&this.variableNodes.forEach(function(e){o.weightedInfNormGraph.set(e.output,tensor_1.Tensor.zeros(e.output.shape))})},e.prototype.afterBatch=function(d,e,t,l,a){var m=this;globals_1.tidy(function(){var c=m.cGraph.div(m.one.add(m.decay.mul(m.iteration)));m.variableNodes.forEach(function(e){var t=l.get(e.output),a=m.variableGradients.get(e.output),s=m.firstMomentGraph.get(e.output),r=m.weightedInfNormGraph.get(e.output),o=d.scaledArrayAdd(m.beta1,s,m.oneMinusBeta1,a),i=m.beta2.mul(r),n=a.abs(),p=i.maximum(n),u=d.scaledArrayAdd(m.one,t,c.div(m.one.sub(m.accBeta1)),o.div(m.eps.add(p)));l.set(e.output,globals_1.keep(u)),e.data=u,m.firstMomentGraph.set(e.output,globals_1.keep(o)),m.weightedInfNormGraph.set(e.output,globals_1.keep(p)),t.dispose(),a.dispose(),s.dispose(),r.dispose()}),m.iteration.assign(m.iteration.add(m.one)),m.accBeta1.assign(m.accBeta1.mul(m.beta1))}),this.variableGradients.dispose(),this.variableGradients=new tensor_array_map_1.TensorArrayMap},e.prototype.dispose=function(){var t=this;n.prototype.dispose.call(this),this.c.dispose(),this.eps.dispose(),this.accBeta1.dispose(),this.beta1.dispose(),this.beta2.dispose(),this.oneMinusBeta1.dispose(),this.decay.dispose(),this.iteration.dispose(),this.one.dispose(),null!=this.firstMomentGraph&&this.firstMomentGraph.dispose(),null!=this.weightedInfNormGraph&&this.weightedInfNormGraph.dispose(),null!=this.accumulatedFirstMoment&&Object.keys(this.accumulatedFirstMoment).forEach(function(e){return t.accumulatedFirstMoment[e].dispose()}),null!=this.accumulatedWeightedInfNorm&&Object.keys(this.accumulatedWeightedInfNorm).forEach(function(e){return t.accumulatedWeightedInfNorm[e].dispose()})},e}(optimizer_1.Optimizer);exports.AdamaxOptimizer=AdamaxOptimizer;