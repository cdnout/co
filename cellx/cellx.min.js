import{Cell}from"./Cell";export{configure}from"./config";export{EventEmitter}from"./EventEmitter";export{Cell}from"./Cell";export{WaitError}from"./WaitError";export const KEY_VALUE_CELLS=Symbol("valueCells");const cellxProto={__proto__:Function.prototype,cell:null,on(e,r,t){return this.cell.on(e,r,t)},off(e,r,t){return this.cell.off(e,r,t)},onChange(e,r){return this.cell.onChange(e,r)},offChange(e,r){return this.cell.offChange(e,r)},onError(e,r){return this.cell.onError(e,r)},offError(e,r){return this.cell.offError(e,r)},subscribe(e,r){return this.cell.subscribe(e,r)},unsubscribe(e,r){return this.cell.unsubscribe(e,r)},get value(){return this.cell.value},set value(e){this.cell.value=e},pull(){return this.cell.pull()},reap(){return this.cell.reap()},dispose(){return this.cell.dispose()}};export function cellx(e,r){let t=function(e){return arguments.length?(t.cell.set(e),e):t.cell.get()};return Object.setPrototypeOf(t,cellxProto),t.constructor=cellx,t.cell=new Cell(e,r),t};export function defineObservableProperty(e,r,t){return(e[KEY_VALUE_CELLS]||(e[KEY_VALUE_CELLS]=new Map)).set(r,t instanceof Cell?t:new Cell(t,{context:e})),Object.defineProperty(e,r,{configurable:!0,enumerable:!0,get(){return this[KEY_VALUE_CELLS].get(r).get()},set(e){this[KEY_VALUE_CELLS].get(r).set(e)}}),e};export function defineObservableProperties(e,r){return Object.keys(r).forEach(t=>{defineObservableProperty(e,t,r[t])}),e};export function define(e,r,t){return"object"==typeof r?defineObservableProperties(e,r):defineObservableProperty(e,r,t),e};