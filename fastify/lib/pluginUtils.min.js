"use strict";const semver=require("semver"),assert=require("assert"),registeredPlugins=Symbol.for("registered-plugin"),{kReply:kReply,kRequest:kRequest,kTestInternals:kTestInternals}=require("./symbols.js"),{FST_ERR_PLUGIN_VERSION_MISMATCH:FST_ERR_PLUGIN_VERSION_MISMATCH}=require("./errors");function getMeta(e){return e[Symbol.for("plugin-meta")]}function getPluginName(e){const r=require.cache,t=Object.keys(r);for(let s=0;s<t.length;s++)if(r[t[s]].exports===e)return t[s];return e.name?e.name:null}function getFuncPreview(e){return e.toString().split("\n").slice(0,2).map(e=>e.trim()).join(" -- ")}function getDisplayName(e){return e[Symbol.for("fastify.display-name")]}function shouldSkipOverride(e){return!!e[Symbol.for("skip-override")]}function checkDependencies(e){const r=getMeta(e);if(!r)return;const t=r.dependencies;t&&(assert(Array.isArray(t),"The dependencies should be an array of strings"),t.forEach(e=>{assert(this[registeredPlugins].indexOf(e)>-1,`The dependency '${e}' of plugin '${r.name}' is not registered`)}))}function checkDecorators(e){const r=getMeta(e);if(!r)return;const{decorators:t,name:s}=r;t&&(t.fastify&&_checkDecorators.call(this,"Fastify",t.fastify,s),t.reply&&_checkDecorators.call(this[kReply],"Reply",t.reply,s),t.request&&_checkDecorators.call(this[kRequest],"Request",t.request,s))}function _checkDecorators(e,r,t){assert(Array.isArray(r),"The decorators should be an array of strings"),r.forEach(r=>{const s="string"==typeof t?` required by '${t}'`:"";assert("Fastify"===e?r in this:r in this.prototype,`The decorator '${r}'${s} is not present in ${e}`)})}function checkVersion(e){const r=getMeta(e);if(!r)return;const t=r.fastify;if(t&&!semver.satisfies(this.version,t))throw new FST_ERR_PLUGIN_VERSION_MISMATCH(r.name,t,this.version)}function registerPluginName(e){const r=getMeta(e);if(!r)return;const t=r.name;t&&this[registeredPlugins].push(t)}function registerPlugin(e){return registerPluginName.call(this,e),void 0!==this.version&&checkVersion.call(this,e),checkDecorators.call(this,e),checkDependencies.call(this,e),shouldSkipOverride(e)}module.exports={getPluginName:getPluginName,getFuncPreview:getFuncPreview,registeredPlugins:registeredPlugins,getDisplayName:getDisplayName,registerPlugin:registerPlugin},module.exports[kTestInternals]={shouldSkipOverride:shouldSkipOverride,getMeta:getMeta,checkDecorators:checkDecorators,checkDependencies:checkDependencies};