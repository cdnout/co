"use strict";const semver=require("semver"),assert=require("assert"),registeredPlugins=Symbol.for("registered-plugin"),kTestInternals=require("./symbols.js")["kTestInternals"],{exist,existReply,existRequest}=require("./decorate"),FST_ERR_PLUGIN_VERSION_MISMATCH=require("./errors")["FST_ERR_PLUGIN_VERSION_MISMATCH"];function getMeta(e){return e[Symbol.for("plugin-meta")]}function getPluginName(r){var e=getDisplayName(r);if(e)return e;var t=require.cache,s=Object.keys(t);for(let e=0;e<s.length;e++){var i=s[e];if(t[i].exports===r)return i}return r.name||null}function getFuncPreview(e){return e.toString().split("\n").slice(0,2).map(e=>e.trim()).join(" -- ")}function getDisplayName(e){return e[Symbol.for("fastify.display-name")]}function shouldSkipOverride(e){return!!e[Symbol.for("skip-override")]}function checkDependencies(e){const r=getMeta(e);if(r){const t=r.dependencies;t&&(assert(Array.isArray(t),"The dependencies should be an array of strings"),t.forEach(e=>{assert(-1<this[registeredPlugins].indexOf(e),`The dependency '${e}' of plugin '${r.name}' is not registered`)}))}}function checkDecorators(e){var r=getMeta(e);r&&({decorators:e,name:r}=r,e&&(e.fastify&&_checkDecorators(this,"Fastify",e.fastify,r),e.reply&&_checkDecorators(this,"Reply",e.reply,r),e.request&&_checkDecorators(this,"Request",e.request,r)))}const checks={Fastify:exist,Request:existRequest,Reply:existReply};function _checkDecorators(t,s,e,i){assert(Array.isArray(e),"The decorators should be an array of strings"),e.forEach(e=>{var r="string"==typeof i?` required by '${i}'`:"";if(!checks[s].call(t,e))throw new Error(`The decorator '${e}'${r} is not present in ${s}`)})}function checkVersion(e){var r=getMeta(e);if(r){e=r.fastify;if(e&&!semver.satisfies(this.version,e))throw new FST_ERR_PLUGIN_VERSION_MISMATCH(r.name,e,this.version)}}function registerPluginName(e){e=getMeta(e);!e||(e=e.name)&&this[registeredPlugins].push(e)}function registerPlugin(e){return registerPluginName.call(this,e),checkVersion.call(this,e),checkDecorators.call(this,e),checkDependencies.call(this,e),shouldSkipOverride(e)}module.exports={getPluginName:getPluginName,getFuncPreview:getFuncPreview,registeredPlugins:registeredPlugins,getDisplayName:getDisplayName,registerPlugin:registerPlugin},module.exports[kTestInternals]={shouldSkipOverride:shouldSkipOverride,getMeta:getMeta,checkDecorators:checkDecorators,checkDependencies:checkDependencies};