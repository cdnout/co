"use strict";const nullLogger=require("abstract-logging"),pino=require("pino"),{serializersSym:serializersSym}=pino.symbols,{FST_ERR_LOG_INVALID_DESTINATION:FST_ERR_LOG_INVALID_DESTINATION}=require("./errors");function createPinoLogger(e,r){if(r=r||e.stream,delete e.stream,r&&e.file)throw new FST_ERR_LOG_INVALID_DESTINATION;e.file&&(r=pino.destination(e.file),delete e.file);const o=e.logger,i=e.genReqId;let t=null;return o?(e.logger=void 0,e.genReqId=void 0,o[serializersSym]&&(e.serializers=Object.assign({},e.serializers,o[serializersSym])),t=o.child(e),e.logger=o,e.genReqId=i):t=pino(e,r),t}const serializers={req:function(e){return{method:e.method,url:e.url,version:e.headers["accept-version"],hostname:e.hostname,remoteAddress:e.ip,remotePort:e.socket.remotePort}},err:pino.stdSerializers.err,res:function(e){return{statusCode:e.statusCode}}};function now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}function createLogger(e){if(isValidLogger(e.logger)){return{logger:createPinoLogger({logger:e.logger,serializers:Object.assign({},serializers,e.logger.serializers)}),hasLogger:!0}}if(e.logger){const r={};return"[object Object]"===Object.prototype.toString.call(e.logger)&&Reflect.ownKeys(e.logger).forEach(o=>{Object.defineProperty(r,o,{value:e.logger[o],writable:!0,enumerable:!0,configurable:!0})}),r.level=r.level||"info",r.serializers=Object.assign({},serializers,r.serializers),e.logger=r,{logger:createPinoLogger(e.logger),hasLogger:!0}}{const e=nullLogger;return e.child=(()=>e),{logger:e,hasLogger:!1}}}function isValidLogger(e){if(!e)return!1;let r=!0;const o=["info","error","debug","fatal","warn","trace","child"];for(let i=0;i<o.length;i+=1)if(!e[o[i]]||"function"!=typeof e[o[i]]){r=!1;break}return r}module.exports={createLogger:createLogger,serializers:serializers,now:now};