"use strict";const validate=require("./configValidator"),deepClone=require("rfdc")({circles:!0,proto:!1}),FST_ERR_INIT_OPTS_INVALID=require("./errors")["FST_ERR_INIT_OPTS_INVALID"];function validateInitialConfig(e){e=deepClone(e);if(validate(e))return deepFreezeObject(e);{const r=new FST_ERR_INIT_OPTS_INVALID(JSON.stringify(validate.errors.map(e=>e.message)));throw r.errors=validate.errors,r}}function deepFreezeObject(e){for(const t of Object.getOwnPropertyNames(e)){var r=e[t];(!ArrayBuffer.isView(r)||r instanceof DataView)&&(e[t]=r&&"object"==typeof r?deepFreezeObject(r):r)}return Object.freeze(e)}module.exports=validateInitialConfig,module.exports.defaultInitOptions=validate.defaultInitOptions,module.exports.utils={deepFreezeObject:deepFreezeObject};