"use strict";const validate=require("./configValidator"),deepClone=require("rfdc")({circles:!0,proto:!1}),{FST_ERR_INIT_OPTS_INVALID:FST_ERR_INIT_OPTS_INVALID}=require("./errors");function validateInitialConfig(e){const t=deepClone(e);if(!validate(t)){const e=new FST_ERR_INIT_OPTS_INVALID(JSON.stringify(validate.errors.map(e=>e.message)));throw e.errors=validate.errors,e}return deepFreezeObject(t)}function deepFreezeObject(e){const t=Object.getOwnPropertyNames(e);for(const r of t){const t=e[r];(!ArrayBuffer.isView(t)||t instanceof DataView)&&(e[r]=t&&"object"==typeof t?deepFreezeObject(t):t)}return Object.freeze(e)}module.exports=validateInitialConfig,module.exports.defaultInitOptions=validate.defaultInitOptions,module.exports.utils={deepFreezeObject:deepFreezeObject};