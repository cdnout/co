"use strict";const{kSchemaHeaders:headersSchema,kSchemaParams:paramsSchema,kSchemaQuerystring:querystringSchema,kSchemaBody:bodySchema,kSchemaResponse:responseSchema}=require("./symbols");function compileSchemasForSerialization(e,r){if(!e.schema||!e.schema.response)return;const{method:a,url:t}=e.config||{};e[responseSchema]=Object.keys(e.schema.response).reduce(function(o,s){return o[s]=r({schema:e.schema.response[s],url:t,method:a,httpStatus:s}),o},{})}function compileSchemasForValidation(e,r){if(!e.schema)return;const{method:a,url:t}=e.config||{},o=e.schema.headers;if(o&&Object.getPrototypeOf(o)!==Object.prototype)e[headersSchema]=r({schema:o,method:a,url:t,httpPart:"headers"});else if(o){const s={};Object.keys(o).forEach(e=>{s[e]=o[e]}),s.required instanceof Array&&(s.required=s.required.map(e=>e.toLowerCase())),o.properties&&(s.properties={},Object.keys(o.properties).forEach(e=>{s.properties[e.toLowerCase()]=o.properties[e]})),e[headersSchema]=r({schema:s,method:a,url:t,httpPart:"headers"})}e.schema.body&&(e[bodySchema]=r({schema:e.schema.body,method:a,url:t,httpPart:"body"})),e.schema.querystring&&(e[querystringSchema]=r({schema:e.schema.querystring,method:a,url:t,httpPart:"querystring"})),e.schema.params&&(e[paramsSchema]=r({schema:e.schema.params,method:a,url:t,httpPart:"params"}))}function validateParam(e,r,a){const t=e&&e(r[a]);return!1===t?e.errors:t&&t.error?t.error:(t&&t.value&&(r[a]=t.value),!1)}function validate(e,r){const a=validateParam(e[paramsSchema],r,"params");if(a)return wrapValidationError(a,"params",e.schemaErrorFormatter);const t=validateParam(e[bodySchema],r,"body");if(t)return wrapValidationError(t,"body",e.schemaErrorFormatter);const o=validateParam(e[querystringSchema],r,"query");if(o)return wrapValidationError(o,"querystring",e.schemaErrorFormatter);const s=validateParam(e[headersSchema],r,"headers");return s?wrapValidationError(s,"headers",e.schemaErrorFormatter):null}function wrapValidationError(e,r,a){if(e instanceof Error)return e.validationContext=e.validationContext||r,e;const t=a(e,r);return t.validation=e,t.validationContext=r,t}module.exports={symbols:{bodySchema:bodySchema,querystringSchema:querystringSchema,responseSchema:responseSchema,paramsSchema:paramsSchema,headersSchema:headersSchema},compileSchemasForValidation:compileSchemasForValidation,compileSchemasForSerialization:compileSchemasForSerialization,validate:validate};