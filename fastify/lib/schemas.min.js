"use strict";const fastClone=require("rfdc")({circles:!1,proto:!0}),{kSchemaVisited,kSchemaResponse}=require("./symbols"),kFluentSchema=Symbol.for("fluent-schema-object"),{FST_ERR_SCH_MISSING_ID,FST_ERR_SCH_ALREADY_PRESENT,FST_ERR_SCH_DUPLICATE}=require("./errors"),SCHEMAS_SOURCE=["params","body","querystring","query","headers"];function Schemas(e){this.store=e||{}}function normalizeSchema(e,r){if(e[kSchemaVisited])return e;if(e.query){if(e.querystring)throw new FST_ERR_SCH_DUPLICATE("querystring");e.querystring=e.query}generateFluentSchema(e);for(const t of["headers","querystring","params","body"])if("object"==typeof e[t]&&Object.getPrototypeOf(e[t])!==Object.prototype)return e;if(e.body&&(e.body=getSchemaAnyway(e.body,r.jsonShorthand)),e.headers&&(e.headers=getSchemaAnyway(e.headers,r.jsonShorthand)),e.querystring&&(e.querystring=getSchemaAnyway(e.querystring,r.jsonShorthand)),e.params&&(e.params=getSchemaAnyway(e.params,r.jsonShorthand)),e.response)for(const n of Object.keys(e.response))e.response[n]=getSchemaAnyway(e.response[n],r.jsonShorthand);return e[kSchemaVisited]=!0,e}function generateFluentSchema(e){for(const r of SCHEMAS_SOURCE)e[r]&&(e[r].isFluentSchema||e[r][kFluentSchema])&&(e[r]=e[r].valueOf());if(e.response)for(const t of Object.keys(e.response))(e.response[t].isFluentSchema||e.response[t][kFluentSchema])&&(e.response[t]=e.response[t].valueOf())}function getSchemaAnyway(e,r){return!r||e.$ref||e.oneOf||e.allOf||e.anyOf||e.$merge||e.$patch||e.type||e.properties?e:{type:"object",properties:e}}function getSchemaSerializer(e,r){e=e[kSchemaResponse];if(!e)return!1;if(e[r])return e[r];r=(r+"")[0]+"xx";return e[r]||!1}Schemas.prototype.add=function(e){var r=fastClone(e.isFluentSchema||e.isFluentJSONSchema||e[kFluentSchema]?e.valueOf():e),e=r.$id;if(!e)throw new FST_ERR_SCH_MISSING_ID;if(this.store[e])throw new FST_ERR_SCH_ALREADY_PRESENT(e);this.store[e]=r},Schemas.prototype.getSchemas=function(){return Object.assign({},this.store)},Schemas.prototype.getSchema=function(e){return this.store[e]},module.exports={buildSchemas(e){return new Schemas(e)},getSchemaSerializer:getSchemaSerializer,normalizeSchema:normalizeSchema};