"use strict";const fastClone=require("rfdc")({circles:!1,proto:!0}),{kSchemaVisited:kSchemaVisited}=require("./symbols"),kFluentSchema=Symbol.for("fluent-schema-object"),{FST_ERR_SCH_MISSING_ID:FST_ERR_SCH_MISSING_ID,FST_ERR_SCH_ALREADY_PRESENT:FST_ERR_SCH_ALREADY_PRESENT,FST_ERR_SCH_DUPLICATE:FST_ERR_SCH_DUPLICATE}=require("./errors");function Schemas(){this.store={},this.newSchemasAdded=!1}function normalizeSchema(e){if(e[kSchemaVisited])return e;if(e.query){if(e.querystring)throw new FST_ERR_SCH_DUPLICATE("querystring");e.querystring=e.query}generateFluentSchema(e);for(const t of["headers","querystring","params","body"])if("object"==typeof e[t]&&Object.getPrototypeOf(e[t])!==Object.prototype)return e;return e.body&&(e.body=getSchemaAnyway(e.body)),e.headers&&(e.headers=getSchemaAnyway(e.headers)),e.querystring&&(e.querystring=getSchemaAnyway(e.querystring)),e.params&&(e.params=getSchemaAnyway(e.params)),e.response&&Object.keys(e.response).forEach(t=>{e.response[t]=getSchemaAnyway(e.response[t])}),e[kSchemaVisited]=!0,e}function generateFluentSchema(e){["params","body","querystring","query","headers"].forEach(t=>{e[t]&&(e[t].isFluentSchema||e[t][kFluentSchema])&&(e[t]=e[t].valueOf())}),e.response&&Object.keys(e.response).forEach(t=>{(e.response[t].isFluentSchema||e.response[t][kFluentSchema])&&(e.response[t]=e.response[t].valueOf())})}function getSchemaAnyway(e){return e.$ref||e.oneOf||e.allOf||e.anyOf||e.$merge||e.$patch?e:e.type||e.properties?e:{type:"object",properties:e}}function buildSchemas(e){const t=new Schemas;return Object.values(e.getSchemas()).forEach(e=>t.add(e)),t.newSchemasAdded=!1,t}Schemas.prototype.add=function(e){const t=fastClone(e.isFluentSchema||e.isFluentJSONSchema||e[kFluentSchema]?e.valueOf():e),r=t.$id;if(!r)throw new FST_ERR_SCH_MISSING_ID;if(this.store[r])throw new FST_ERR_SCH_ALREADY_PRESENT(r);this.store[r]=t,this.newSchemasAdded=!0},Schemas.prototype.getSchemas=function(){return Object.assign({},this.store)},Schemas.prototype.getSchema=function(e){return this.store[e]},Schemas.prototype.hasNewSchemas=function(){return this.newSchemasAdded},module.exports={Schemas:Schemas,buildSchemas:buildSchemas,normalizeSchema:normalizeSchema};