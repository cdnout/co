"use strict";const{validate:validateSchema}=require("./validation"),{hookRunner:hookRunner,hookIterator:hookIterator}=require("./hooks"),wrapThenable=require("./wrapThenable");function handleRequest(e,n,r){if(!0===r.sent)return;if(null!=e)return void r.send(e);const t=n.raw.method,a=n.headers;if("GET"===t||"HEAD"===t)return void handler(n,r);const o=a["content-type"];"POST"!==t&&"PUT"!==t&&"PATCH"!==t?"OPTIONS"!==t&&"DELETE"!==t?r.code(404).send(new Error("Not Found")):void 0===o||void 0===a["transfer-encoding"]&&void 0===a["content-length"]?handler(n,r):r.context.contentTypeParser.run(o,handler,n,r):void 0===o?void 0!==a["transfer-encoding"]||"0"!==a["content-length"]&&void 0!==a["content-length"]?r.context.contentTypeParser.run("",handler,n,r):handler(n,r):r.context.contentTypeParser.run(o,handler,n,r)}function handler(e,n){try{null!==n.context.preValidation?hookRunner(n.context.preValidation,hookIterator,e,n,preValidationCallback):preValidationCallback(null,e,n)}catch(r){preValidationCallback(r,e,n)}}function preValidationCallback(e,n,r){if(!0===r.sent||!0===r.raw.writableEnded||!1===r.raw.writable)return;if(null!=e)return void r.send(e);const t=validateSchema(r.context,n);if(t){if(!1===r.context.attachValidation)return void r.code(400).send(t);r.request.validationError=t}null!==r.context.preHandler?hookRunner(r.context.preHandler,hookIterator,n,r,preHandlerCallback):preHandlerCallback(null,n,r)}function preHandlerCallback(e,n,r){if(r.sent||!0===r.raw.writableEnded||!1===r.raw.writable)return;if(null!=e)return void r.send(e);let t;try{t=r.context.handler(n,r)}catch(e){return void r.send(e)}void 0!==t&&(null!==t&&"function"==typeof t.then?wrapThenable(t,r):r.send(t))}module.exports=handleRequest,module.exports[Symbol.for("internals")]={handler:handler,preHandlerCallback:preHandlerCallback};