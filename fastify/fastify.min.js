"use strict";const Avvio=require("avvio"),http=require("http"),querystring=require("querystring");let lightMyRequest,version,versionLoaded=!1;const{kAvvioBoot:kAvvioBoot,kChildren:kChildren,kBodyLimit:kBodyLimit,kRoutePrefix:kRoutePrefix,kLogLevel:kLogLevel,kLogSerializers:kLogSerializers,kHooks:kHooks,kSchemas:kSchemas,kValidatorCompiler:kValidatorCompiler,kSerializerCompiler:kSerializerCompiler,kReplySerializerDefault:kReplySerializerDefault,kContentTypeParser:kContentTypeParser,kReply:kReply,kRequest:kRequest,kFourOhFour:kFourOhFour,kState:kState,kOptions:kOptions,kPluginNameChain:kPluginNameChain,kSchemaErrorFormatter:kSchemaErrorFormatter,kErrorHandler:kErrorHandler}=require("./lib/symbols.js"),{createServer:createServer}=require("./lib/server"),Reply=require("./lib/reply"),Request=require("./lib/request"),supportedMethods=["DELETE","GET","HEAD","PATCH","POST","PUT","OPTIONS"],decorator=require("./lib/decorate"),ContentTypeParser=require("./lib/contentTypeParser"),{Hooks:Hooks,hookRunnerApplication:hookRunnerApplication}=require("./lib/hooks"),{Schemas:Schemas}=require("./lib/schemas"),{createLogger:createLogger}=require("./lib/logger"),pluginUtils=require("./lib/pluginUtils"),reqIdGenFactory=require("./lib/reqIdGenFactory"),{buildRouting:buildRouting,validateBodyLimitOption:validateBodyLimitOption}=require("./lib/route"),build404=require("./lib/fourOhFour"),getSecuredInitialConfig=require("./lib/initialConfigValidation"),override=require("./lib/pluginOverride"),{defaultInitOptions:defaultInitOptions}=getSecuredInitialConfig,{FST_ERR_BAD_URL:FST_ERR_BAD_URL,FST_ERR_MISSING_MIDDLEWARE:FST_ERR_MISSING_MIDDLEWARE}=require("./lib/errors"),onBadUrlContext={config:{},onSend:[],onError:[]};function defaultErrorHandler(e,r,t){t.statusCode<500?t.log.info({res:t,err:e},e&&e.message):t.log.error({req:r,res:t,err:e},e&&e.message),t.send(e)}function fastify(e){if("object"!=typeof(e=e||{}))throw new TypeError("Options must be an object");if(e.querystringParser&&"function"!=typeof e.querystringParser)throw new Error(`querystringParser option should be a function, instead got '${typeof e.querystringParser}'`);validateBodyLimitOption(e.bodyLimit);const r=e.requestIdHeader||defaultInitOptions.requestIdHeader,t=e.querystringParser||querystring.parse,o=e.genReqId||reqIdGenFactory(),n=e.requestIdLogLabel||"reqId",i=e.bodyLimit||defaultInitOptions.bodyLimit,a=e.disableRequestLogging||!1,s=null!=e.exposeHeadRoutes&&e.exposeHeadRoutes,l=Object.assign({customOptions:{},plugins:[]},e.ajv),u=e.frameworkErrors;if(!l.customOptions||"[object Object]"!==Object.prototype.toString.call(l.customOptions))throw new Error(`ajv.customOptions option should be an object, instead got '${typeof l.customOptions}'`);if(!l.plugins||!Array.isArray(l.plugins))throw new Error(`ajv.plugins option should be an array, instead got '${typeof l.plugins}'`);l.plugins=l.plugins.map(e=>Array.isArray(e)?e:[e]);const{logger:d,hasLogger:c}=createLogger(e);e.connectionTimeout=e.connectionTimeout||defaultInitOptions.connectionTimeout,e.keepAliveTimeout=e.keepAliveTimeout||defaultInitOptions.keepAliveTimeout,e.logger=d,e.genReqId=o,e.requestIdHeader=r,e.querystringParser=t,e.requestIdLogLabel=n,e.disableRequestLogging=a,e.ajv=l,e.clientErrorHandler=e.clientErrorHandler||function(e,r){if("ECONNRESET"===e.code)return;const t=JSON.stringify({error:http.STATUS_CODES[400],message:"Client Error",statusCode:400});this.log.trace({err:e},"client error"),r.writable&&r.end(`HTTP/1.1 400 Bad Request\r\nContent-Length: ${t.length}\r\nContent-Type: application/json\r\n\r\n${t}`)},e.exposeHeadRoutes=s;const p=getSecuredInitialConfig(e),h=buildRouting({config:{defaultRoute:function(e,r){void 0!==e.headers["accept-version"]&&(e.headers["accept-version"]=void 0);g.router.lookup(e,r)},onBadUrl:function(e,r,t){if(u){const n=o(r),i=d.child({reqId:n});i.info({req:r},"incoming request");const a=new Request(n,null,r,null,i,onBadUrlContext),s=new Reply(t,a,i);return u(new FST_ERR_BAD_URL(e),a,s)}const n=`{"error":"Bad Request","message":"'${e}' is not a valid url component","statusCode":400}`;t.writeHead(400,{"Content-Type":"application/json","Content-Length":n.length}),t.end(n)},ignoreTrailingSlash:e.ignoreTrailingSlash||defaultInitOptions.ignoreTrailingSlash,maxParamLength:e.maxParamLength||defaultInitOptions.maxParamLength,caseSensitive:e.caseSensitive,versioning:e.versioning}}),g=build404(e),f=wrapRouting(h.routing,e);e.http2SessionTimeout=p.http2SessionTimeout;const{server:y,listen:m}=createServer(e,f),k=Reply.setupResponseListeners,R=new Schemas,S={[kState]:{listening:!1,closing:!1,started:!1},[kOptions]:e,[kChildren]:[],[kBodyLimit]:i,[kRoutePrefix]:"",[kLogLevel]:"",[kLogSerializers]:null,[kHooks]:new Hooks,[kSchemas]:R,[kValidatorCompiler]:null,[kSchemaErrorFormatter]:null,[kErrorHandler]:defaultErrorHandler,[kSerializerCompiler]:null,[kReplySerializerDefault]:null,[kContentTypeParser]:new ContentTypeParser(i,e.onProtoPoisoning||defaultInitOptions.onProtoPoisoning,e.onConstructorPoisoning||defaultInitOptions.onConstructorPoisoning),[kReply]:Reply.buildReply(Reply),[kRequest]:Request.buildRequest(Request,e.trustProxy),[kFourOhFour]:g,[pluginUtils.registeredPlugins]:[],[kPluginNameChain]:[],[kAvvioBoot]:null,delete:function(e,r,t){return h.prepareRoute.call(this,"DELETE",e,r,t)},get:function(e,r,t){return h.prepareRoute.call(this,"GET",e,r,t)},head:function(e,r,t){return h.prepareRoute.call(this,"HEAD",e,r,t)},patch:function(e,r,t){return h.prepareRoute.call(this,"PATCH",e,r,t)},post:function(e,r,t){return h.prepareRoute.call(this,"POST",e,r,t)},put:function(e,r,t){return h.prepareRoute.call(this,"PUT",e,r,t)},options:function(e,r,t){return h.prepareRoute.call(this,"OPTIONS",e,r,t)},all:function(e,r,t){return h.prepareRoute.call(this,supportedMethods,e,r,t)},route:function(e){return h.route.call(this,e)},log:d,addHook:function(e,r){if(C('Cannot call "addHook" when fastify instance is already started!'),"onSend"===e||"preSerialization"===e||"onError"===e){if("AsyncFunction"===r.constructor.name&&4===r.length)throw new Error("Async function has too many arguments. Async hooks should not use the 'done' argument.")}else if("onReady"===e){if("AsyncFunction"===r.constructor.name&&0!==r.length)throw new Error("Async function has too many arguments. Async hooks should not use the 'done' argument.")}else if("preParsing"!==e&&"AsyncFunction"===r.constructor.name&&3===r.length)throw new Error("Async function has too many arguments. Async hooks should not use the 'done' argument.");"onClose"===e?(this[kHooks].validate(e,r),this.onClose(r)):"onReady"===e?(this[kHooks].validate(e,r),this[kHooks].add(e,r)):this.after((t,o)=>{(function e(r,t){this[kHooks].add(r,t);this[kChildren].forEach(o=>e.call(o,r,t))}).call(this,e,r),o(t)});return this},addSchema:function(e){return C('Cannot call "addSchema" when fastify instance is already started!'),this[kSchemas].add(e),this[kChildren].forEach(r=>r.addSchema(e)),this},getSchema:R.getSchema.bind(R),getSchemas:R.getSchemas.bind(R),setValidatorCompiler:function(e){return C('Cannot call "setValidatorCompiler" when fastify instance is already started!'),this[kValidatorCompiler]=e,this},setSerializerCompiler:function(e){return C('Cannot call "setSerializerCompiler" when fastify instance is already started!'),this[kSerializerCompiler]=e,this},setReplySerializer:function(e){return C('Cannot call "setReplySerializer" when fastify instance is already started!'),this[kReplySerializerDefault]=e,this},setSchemaErrorFormatter:function(e){return C('Cannot call "setSchemaErrorFormatter" when fastify instance is already started!'),validateSchemaErrorFormatter(e),this[kSchemaErrorFormatter]=e.bind(this),this},addContentTypeParser:ContentTypeParser.helpers.addContentTypeParser,hasContentTypeParser:ContentTypeParser.helpers.hasContentTypeParser,getDefaultJsonParser:ContentTypeParser.defaultParsers.getDefaultJsonParser,defaultTextParser:ContentTypeParser.defaultParsers.defaultTextParser,register:null,after:null,ready:null,onClose:null,close:null,listen:m,server:y,decorate:decorator.add,hasDecorator:decorator.exist,decorateReply:decorator.decorateReply,decorateRequest:decorator.decorateRequest,hasRequestDecorator:decorator.existRequest,hasReplyDecorator:decorator.existReply,inject:function(e,r){void 0===lightMyRequest&&(lightMyRequest=require("light-my-request"));if(S[kState].started){if(S[kState].closing){const e=new Error("Server is closed");return r?void r(e):Promise.reject(e)}return lightMyRequest(f,e,r)}if(!r)return lightMyRequest((e,r)=>{this.ready(function(t){t?r.emit("error",t):f(e,r)})},e);this.ready(t=>{t?r(t,null):lightMyRequest(f,e,r)})},printRoutes:h.printRoutes,setNotFoundHandler:function(e,r){return C('Cannot call "setNotFoundHandler" when fastify instance is already started!'),g.setNotFoundHandler.call(this,e,r,v,h.routeHandler),this},setErrorHandler:function(e){return C('Cannot call "setErrorHandler" when fastify instance is already started!'),this[kErrorHandler]=e.bind(this),this},initialConfig:p};Object.defineProperties(S,{pluginName:{get(){return this[kPluginNameChain].length>1?this[kPluginNameChain].join(" -> "):this[kPluginNameChain][0]}},prefix:{get(){return this[kRoutePrefix]}},validatorCompiler:{get(){return this[kValidatorCompiler]}},serializerCompiler:{get(){return this[kSerializerCompiler]}},version:{get:()=>(!1===versionLoaded&&(version=loadVersion()),version)},errorHandler:{get(){return this[kErrorHandler]}}}),Object.setPrototypeOf(S,{use:function(){throw new FST_ERR_MISSING_MIDDLEWARE}}),e.schemaErrorFormatter&&(validateSchemaErrorFormatter(e.schemaErrorFormatter),S[kSchemaErrorFormatter]=e.schemaErrorFormatter.bind(S));const v=Avvio(S,{autostart:!1,timeout:Number(e.pluginTimeout)||defaultInitOptions.pluginTimeout,expose:{use:"register"}});return v.override=override,v.on("start",()=>S[kState].started=!0),S[kAvvioBoot]=S.ready,S.ready=function(e){let r,t;if(process.nextTick(function(){S[kAvvioBoot]((e,r)=>{e||S[kState].started?o(e):hookRunnerApplication("onReady",S[kAvvioBoot],S,o),r()})}),!e)return new Promise(function(e,o){r=e,t=o});function o(o){if(e)o?e(o):e(void 0,S);else{if(o)return t(o);r(S)}}},v.once("preReady",()=>{S.onClose((e,r)=>{S[kState].closing=!0,h.closeRoutes(),S[kState].listening?e.server.close(r):r(null)})}),S.setNotFoundHandler(),g.arrange404(S),h.setup(e,{avvio:v,fourOhFour:g,logger:d,hasLogger:c,setupResponseListeners:k,throwIfAlreadyStarted:C}),y.on("clientError",e.clientErrorHandler.bind(S)),S;function C(e){if(S[kState].started)throw new Error(e)}}function validateSchemaErrorFormatter(e){if("function"!=typeof e)throw new Error(`schemaErrorFormatter option should be a function, instead got ${typeof e}`);if("AsyncFunction"===e.constructor.name)throw new Error("schemaErrorFormatter option should not be an async function")}function wrapRouting(e,{rewriteUrl:r,logger:t}){return r?function(o,n){const i=o.url,a=r(o);i!==a&&(t.debug({originalUrl:i,url:a},"rewrite url"),"string"==typeof a?o.url=a:o.destroy(new Error(`Rewrite url for "${o.url}" needs to be of type "string" but received "${typeof a}"`))),e(o,n)}:e}function loadVersion(){versionLoaded=!0;const e=require("fs"),r=require("path");try{const t=r.join(__dirname,"package.json");e.accessSync(t,e.constants.R_OK);const o=JSON.parse(e.readFileSync(t));return"fastify"===o.name?o.version:void 0}catch(e){return}}module.exports=fastify,module.exports.fastify=fastify,module.exports.default=fastify;