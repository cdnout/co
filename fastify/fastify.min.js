"use strict";const Avvio=require("avvio"),http=require("http"),querystring=require("querystring");let lightMyRequest,version,versionLoaded=!1;const{kAvvioBoot:kAvvioBoot,kChildren:kChildren,kBodyLimit:kBodyLimit,kRoutePrefix:kRoutePrefix,kLogLevel:kLogLevel,kLogSerializers:kLogSerializers,kHooks:kHooks,kSchemaController:kSchemaController,kReplySerializerDefault:kReplySerializerDefault,kContentTypeParser:kContentTypeParser,kReply:kReply,kRequest:kRequest,kFourOhFour:kFourOhFour,kState:kState,kOptions:kOptions,kPluginNameChain:kPluginNameChain,kSchemaErrorFormatter:kSchemaErrorFormatter,kErrorHandler:kErrorHandler}=require("./lib/symbols.js"),{createServer:createServer}=require("./lib/server"),Reply=require("./lib/reply"),Request=require("./lib/request"),supportedMethods=["DELETE","GET","HEAD","PATCH","POST","PUT","OPTIONS"],decorator=require("./lib/decorate"),ContentTypeParser=require("./lib/contentTypeParser"),SchemaController=require("./lib/schema-controller"),{Hooks:Hooks,hookRunnerApplication:hookRunnerApplication}=require("./lib/hooks"),{createLogger:createLogger}=require("./lib/logger"),pluginUtils=require("./lib/pluginUtils"),reqIdGenFactory=require("./lib/reqIdGenFactory"),{buildRouting:buildRouting,validateBodyLimitOption:validateBodyLimitOption}=require("./lib/route"),build404=require("./lib/fourOhFour"),getSecuredInitialConfig=require("./lib/initialConfigValidation"),override=require("./lib/pluginOverride"),{defaultInitOptions:defaultInitOptions}=getSecuredInitialConfig,{FST_ERR_BAD_URL:FST_ERR_BAD_URL,FST_ERR_MISSING_MIDDLEWARE:FST_ERR_MISSING_MIDDLEWARE}=require("./lib/errors"),onBadUrlContext={config:{},onSend:[],onError:[]};function defaultErrorHandler(e,t,r){r.statusCode<500?r.log.info({res:r,err:e},e&&e.message):r.log.error({req:t,res:r,err:e},e&&e.message),r.send(e)}function fastify(e){if("object"!=typeof(e=e||{}))throw new TypeError("Options must be an object");if(e.querystringParser&&"function"!=typeof e.querystringParser)throw new Error(`querystringParser option should be a function, instead got '${typeof e.querystringParser}'`);if(e.schemaController&&e.schemaController.bucket&&"function"!=typeof e.schemaController.bucket)throw new Error(`schemaController.bucket option should be a function, instead got '${typeof e.schemaController.bucket}'`);validateBodyLimitOption(e.bodyLimit);const t=e.requestIdHeader||defaultInitOptions.requestIdHeader,r=e.querystringParser||querystring.parse,o=e.genReqId||reqIdGenFactory(),n=e.requestIdLogLabel||"reqId",i=e.bodyLimit||defaultInitOptions.bodyLimit,a=e.disableRequestLogging||!1,s=null!=e.exposeHeadRoutes&&e.exposeHeadRoutes,l=Object.assign({customOptions:{},plugins:[]},e.ajv),u=e.frameworkErrors;if(!l.customOptions||"[object Object]"!==Object.prototype.toString.call(l.customOptions))throw new Error(`ajv.customOptions option should be an object, instead got '${typeof l.customOptions}'`);if(!l.plugins||!Array.isArray(l.plugins))throw new Error(`ajv.plugins option should be an array, instead got '${typeof l.plugins}'`);l.plugins=l.plugins.map(e=>Array.isArray(e)?e:[e]);const{logger:c,hasLogger:d}=createLogger(e);e.connectionTimeout=e.connectionTimeout||defaultInitOptions.connectionTimeout,e.keepAliveTimeout=e.keepAliveTimeout||defaultInitOptions.keepAliveTimeout,e.logger=c,e.genReqId=o,e.requestIdHeader=t,e.querystringParser=r,e.requestIdLogLabel=n,e.disableRequestLogging=a,e.ajv=l,e.clientErrorHandler=e.clientErrorHandler||function(e,t){if("ECONNRESET"===e.code)return;const r=JSON.stringify({error:http.STATUS_CODES[400],message:"Client Error",statusCode:400});this.log.trace({err:e},"client error"),t.writable&&t.end(`HTTP/1.1 400 Bad Request\r\nContent-Length: ${r.length}\r\nContent-Type: application/json\r\n\r\n${r}`)},e.exposeHeadRoutes=s;const h=getSecuredInitialConfig(e),p=buildRouting({config:{defaultRoute:function(e,t){void 0!==e.headers["accept-version"]&&(e.headers["accept-version"]=void 0);g.router.lookup(e,t)},onBadUrl:function(e,t,r){if(u){const n=o(t),i=c.child({reqId:n});i.info({req:t},"incoming request");const a=new Request(n,null,t,null,i,onBadUrlContext),s=new Reply(r,a,i);return u(new FST_ERR_BAD_URL(e),a,s)}const n=`{"error":"Bad Request","message":"'${e}' is not a valid url component","statusCode":400}`;r.writeHead(400,{"Content-Type":"application/json","Content-Length":n.length}),r.end(n)},ignoreTrailingSlash:e.ignoreTrailingSlash||defaultInitOptions.ignoreTrailingSlash,maxParamLength:e.maxParamLength||defaultInitOptions.maxParamLength,caseSensitive:e.caseSensitive,versioning:e.versioning}}),g=build404(e),f=wrapRouting(p.routing,e);e.http2SessionTimeout=h.http2SessionTimeout;const{server:m,listen:y}=createServer(e,f),k=Reply.setupResponseListeners,S=SchemaController.buildSchemaController(null,e.schemaController),R={[kState]:{listening:!1,closing:!1,started:!1},[kOptions]:e,[kChildren]:[],[kBodyLimit]:i,[kRoutePrefix]:"",[kLogLevel]:"",[kLogSerializers]:null,[kHooks]:new Hooks,[kSchemaController]:S,[kSchemaErrorFormatter]:null,[kErrorHandler]:defaultErrorHandler,[kReplySerializerDefault]:null,[kContentTypeParser]:new ContentTypeParser(i,e.onProtoPoisoning||defaultInitOptions.onProtoPoisoning,e.onConstructorPoisoning||defaultInitOptions.onConstructorPoisoning),[kReply]:Reply.buildReply(Reply),[kRequest]:Request.buildRequest(Request,e.trustProxy),[kFourOhFour]:g,[pluginUtils.registeredPlugins]:[],[kPluginNameChain]:[],[kAvvioBoot]:null,routing:f,getDefaultRoute:p.getDefaultRoute.bind(p),setDefaultRoute:p.setDefaultRoute.bind(p),delete:function(e,t,r){return p.prepareRoute.call(this,"DELETE",e,t,r)},get:function(e,t,r){return p.prepareRoute.call(this,"GET",e,t,r)},head:function(e,t,r){return p.prepareRoute.call(this,"HEAD",e,t,r)},patch:function(e,t,r){return p.prepareRoute.call(this,"PATCH",e,t,r)},post:function(e,t,r){return p.prepareRoute.call(this,"POST",e,t,r)},put:function(e,t,r){return p.prepareRoute.call(this,"PUT",e,t,r)},options:function(e,t,r){return p.prepareRoute.call(this,"OPTIONS",e,t,r)},all:function(e,t,r){return p.prepareRoute.call(this,supportedMethods,e,t,r)},route:function(e){return p.route.call(this,e)},log:c,addHook:function(e,t){if(v('Cannot call "addHook" when fastify instance is already started!'),"onSend"===e||"preSerialization"===e||"onError"===e){if("AsyncFunction"===t.constructor.name&&4===t.length)throw new Error("Async function has too many arguments. Async hooks should not use the 'done' argument.")}else if("onReady"===e){if("AsyncFunction"===t.constructor.name&&0!==t.length)throw new Error("Async function has too many arguments. Async hooks should not use the 'done' argument.")}else if("preParsing"!==e&&"AsyncFunction"===t.constructor.name&&3===t.length)throw new Error("Async function has too many arguments. Async hooks should not use the 'done' argument.");"onClose"===e?(this[kHooks].validate(e,t),this.onClose(t)):"onReady"===e?(this[kHooks].validate(e,t),this[kHooks].add(e,t)):this.after((r,o)=>{(function e(t,r){this[kHooks].add(t,r);this[kChildren].forEach(o=>e.call(o,t,r))}).call(this,e,t),o(r)});return this},addSchema:function(e){return v('Cannot call "addSchema" when fastify instance is already started!'),this[kSchemaController].add(e),this[kChildren].forEach(t=>t.addSchema(e)),this},getSchema:S.getSchema.bind(S),getSchemas:S.getSchemas.bind(S),setValidatorCompiler:function(e){return v('Cannot call "setValidatorCompiler" when fastify instance is already started!'),this[kSchemaController].setValidatorCompiler(e),this},setSerializerCompiler:function(e){return v('Cannot call "setSerializerCompiler" when fastify instance is already started!'),this[kSchemaController].setSerializerCompiler(e),this},setSchemaController:function(e){v('Cannot call "setSchemaController" when fastify instance is already started!');const t=this[kSchemaController],r=SchemaController.buildSchemaController(t.parent,Object.assign({},t.opts,e));return this[kSchemaController]=r,this.getSchema=r.getSchema.bind(r),this.getSchemas=r.getSchemas.bind(r),this},setReplySerializer:function(e){return v('Cannot call "setReplySerializer" when fastify instance is already started!'),this[kReplySerializerDefault]=e,this},setSchemaErrorFormatter:function(e){return v('Cannot call "setSchemaErrorFormatter" when fastify instance is already started!'),validateSchemaErrorFormatter(e),this[kSchemaErrorFormatter]=e.bind(this),this},addContentTypeParser:ContentTypeParser.helpers.addContentTypeParser,hasContentTypeParser:ContentTypeParser.helpers.hasContentTypeParser,getDefaultJsonParser:ContentTypeParser.defaultParsers.getDefaultJsonParser,defaultTextParser:ContentTypeParser.defaultParsers.defaultTextParser,register:null,after:null,ready:null,onClose:null,close:null,listen:y,server:m,decorate:decorator.add,hasDecorator:decorator.exist,decorateReply:decorator.decorateReply,decorateRequest:decorator.decorateRequest,hasRequestDecorator:decorator.existRequest,hasReplyDecorator:decorator.existReply,inject:function(e,t){void 0===lightMyRequest&&(lightMyRequest=require("light-my-request"));if(R[kState].started){if(R[kState].closing){const e=new Error("Server is closed");return t?void t(e):Promise.reject(e)}return lightMyRequest(f,e,t)}if(!t)return lightMyRequest((e,t)=>{this.ready(function(r){r?t.emit("error",r):f(e,t)})},e);this.ready(r=>{r?t(r,null):lightMyRequest(f,e,t)})},printRoutes:p.printRoutes,setNotFoundHandler:function(e,t){return v('Cannot call "setNotFoundHandler" when fastify instance is already started!'),g.setNotFoundHandler.call(this,e,t,C,p.routeHandler),this},setErrorHandler:function(e){return v('Cannot call "setErrorHandler" when fastify instance is already started!'),this[kErrorHandler]=e.bind(this),this},initialConfig:h};Object.defineProperties(R,{pluginName:{get(){return this[kPluginNameChain].length>1?this[kPluginNameChain].join(" -> "):this[kPluginNameChain][0]}},prefix:{get(){return this[kRoutePrefix]}},validatorCompiler:{get(){return this[kSchemaController].getValidatorCompiler()}},serializerCompiler:{get(){return this[kSchemaController].getSerializerCompiler()}},version:{get:()=>(!1===versionLoaded&&(version=loadVersion()),version)},errorHandler:{get(){return this[kErrorHandler]}}}),Object.setPrototypeOf(R,{use:function(){throw new FST_ERR_MISSING_MIDDLEWARE}}),e.schemaErrorFormatter&&(validateSchemaErrorFormatter(e.schemaErrorFormatter),R[kSchemaErrorFormatter]=e.schemaErrorFormatter.bind(R));const C=Avvio(R,{autostart:!1,timeout:Number(e.pluginTimeout)||defaultInitOptions.pluginTimeout,expose:{use:"register"}});return C.override=override,C.on("start",()=>R[kState].started=!0),R[kAvvioBoot]=R.ready,R.ready=function(e){let t,r;if(process.nextTick(function(){R[kAvvioBoot]((e,t)=>{e||R[kState].started?o(e):hookRunnerApplication("onReady",R[kAvvioBoot],R,o),t()})}),!e)return new Promise(function(e,o){t=e,r=o});function o(o){if(e)o?e(o):e(void 0,R);else{if(o)return r(o);t(R)}}},C.once("preReady",()=>{R.onClose((e,t)=>{R[kState].closing=!0,p.closeRoutes(),R[kState].listening?e.server.close(t):t(null)})}),R.setNotFoundHandler(),g.arrange404(R),p.setup(e,{avvio:C,fourOhFour:g,logger:c,hasLogger:d,setupResponseListeners:k,throwIfAlreadyStarted:v}),m.on("clientError",e.clientErrorHandler.bind(R)),R;function v(e){if(R[kState].started)throw new Error(e)}}function validateSchemaErrorFormatter(e){if("function"!=typeof e)throw new Error(`schemaErrorFormatter option should be a function, instead got ${typeof e}`);if("AsyncFunction"===e.constructor.name)throw new Error("schemaErrorFormatter option should not be an async function")}function wrapRouting(e,{rewriteUrl:t,logger:r}){return t?function(o,n){const i=o.url,a=t(o);i!==a&&(r.debug({originalUrl:i,url:a},"rewrite url"),"string"==typeof a?o.url=a:o.destroy(new Error(`Rewrite url for "${o.url}" needs to be of type "string" but received "${typeof a}"`))),e(o,n)}:e}function loadVersion(){versionLoaded=!0;const e=require("fs"),t=require("path");try{const r=t.join(__dirname,"package.json");e.accessSync(r,e.constants.R_OK);const o=JSON.parse(e.readFileSync(r));return"fastify"===o.name?o.version:void 0}catch(e){return}}module.exports=fastify,module.exports.fastify=fastify,module.exports.default=fastify;