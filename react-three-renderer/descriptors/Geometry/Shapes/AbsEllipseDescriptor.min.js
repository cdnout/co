"use strict";var _createClass=function(){function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(e,t,r){return t&&o(e.prototype,t),r&&o(e,r),e}}(),_propTypes=require("prop-types"),_propTypes2=_interopRequireDefault(_propTypes),_ShapeActionDescriptorBase=require("./ShapeActionDescriptorBase"),_ShapeActionDescriptorBase2=_interopRequireDefault(_ShapeActionDescriptorBase),_AbsEllipseAction=require("../../../Shapes/AbsEllipseAction"),_AbsEllipseAction2=_interopRequireDefault(_AbsEllipseAction);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var AbsEllipseDescriptor=function(){function r(e){_classCallCheck(this,r);var t=_possibleConstructorReturn(this,(r.__proto__||Object.getPrototypeOf(r)).call(this,e));return["x","y","xRadius","yRadius","startAngle","endAngle"].forEach(function(e){t.hasProp(e,{type:_propTypes2.default.number.isRequired,update:t.triggerRemount,default:0})}),t.hasProp("clockwise",{type:_propTypes2.default.bool,update:t.triggerRemount,default:!1}),t.hasProp("rotation",{type:_propTypes2.default.number,update:t.triggerRemount,default:0}),t}return _inherits(r,_ShapeActionDescriptorBase2.default),_createClass(r,[{key:"construct",value:function(e){var t=e.x,r=e.y,o=e.xRadius,n=e.yRadius,i=e.startAngle,s=e.endAngle,p=e.clockwise,a=e.rotation;return new _AbsEllipseAction2.default(t,r,o,n,i,s,p,a)}}]),r}();module.exports=AbsEllipseDescriptor;