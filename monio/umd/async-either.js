/*! Monio: async-either.js
    v0.24.2 (c) 2021 Kyle Simpson
    MIT License: http://getify.mit-license.org
*/
!function UMD(e,n,t,i){"function"==typeof define&&define.amd?(t=Object.values(t),define(e,t,i)):"undefined"!=typeof module&&module.exports?(t=Object.keys(t).map((e=>require(e))),module.exports=i(...t)):(t=Object.values(t).map((e=>n[e])),n[e]=i(...t))}("AsyncEither","undefined"!=typeof globalThis?globalThis:"undefined"!=typeof global?global:"undefined"!=typeof window?window:"undefined"!=typeof self?self:new Function("return this")(),{"./lib/util.js":"MonioUtil","./either.js":"Either"},(function DEF(e,n){"use strict";var{isFunction:t,isPromise:i}=e,r={};let o={};function AsyncRight(e){return AsyncEither(n.Right(e))}function AsyncEither(e){return fromPromise(i(e)?e:n.Left.is(e)?Promise.reject(e):Promise.resolve(e))}function fromPromise(e){e=splitPromise(e);var t={map:function map(n){var handle=e=>{var _doMap=n=>{var t=e.chain(n);return i(t)?splitPromise(t):e._is_right()?t:Promise.reject(t)};return i(n)?n.then(_doMap):_doMap(n)};return AsyncEither(e.then(handle,handle))},chain:chain,flatMap:chain,bind:chain,ap:function ap(n){return n.map(e)},concat:function concat(n){return n.map((n=>e.then((e=>e.concat(n)))))},fold:function fold(n,t){var handle=e=>n=>n.fold((n=>Promise.reject(e(n))),e);return e.then(handle(t),handle(n))},_inspect:function _inspect(){return`${t[Symbol.toStringTag]}(Promise)`},_is:function _is(e){return e===r},[Symbol.toStringTag]:"AsyncEither"};return t;function chain(t){var handle=e=>{var _doChain=t=>{var i=e.chain(t);return is(i)?i.fold((e=>e),(e=>e)):n.is(i)?i.fold((e=>Promise.reject(e)),(e=>e)):i};return i(t)?t.then(_doChain):_doChain(t)};return AsyncEither(e.then(handle,handle))}}function is(e){return e&&t(e._is)&&e._is(r)}function splitPromise(e){return e.then((e=>n.is(e)?e:n.Right(e)),(e=>Promise.reject(n.is(e)?e:n.Left(e))))}return o=Object.assign(AsyncEither,{Left:function AsyncLeft(e){return AsyncEither(n.Left(e))},Right:AsyncRight,of:AsyncRight,pure:AsyncRight,unit:AsyncRight,is:is,fromFoldable:function fromFoldable(e){return e.fold(AsyncEither.Left,AsyncEither.Right)},fromPromise:fromPromise}),o}));