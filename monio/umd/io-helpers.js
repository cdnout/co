/*! Monio: io-helpers.js
    v0.15.0 (c) 2021 Kyle Simpson
    MIT License: http://getify.mit-license.org
*/
!function UMD(n,e,i,t){"function"==typeof define&&define.amd?(i=Object.values(i),define(n,i,t)):"undefined"!=typeof module&&module.exports?(i=Object.keys(i).map((n=>require(n))),module.exports=t(...i)):(i=Object.values(i).map((n=>e[n])),e[n]=t(...i))}("IOHelpers","undefined"!=typeof globalThis?globalThis:"undefined"!=typeof global?global:"undefined"!=typeof window?window:"undefined"!=typeof self?self:new Function("return this")(),{"./lib/util.js":"MonioUtil","./io.js":"IO","./maybe.js":"Maybe","./either.js":"Either"},(function DEF(n,e,i,t){"use strict";var{isFunction:r,isPromise:o,isMonad:u}=n,f=new WeakSet;let d={};function iif(n,i,...t){return e((r=>liftIO(r,n).chain((function doThens(n){return n?(Array.isArray(i)?i:[i]).reduce(((n,i)=>n.chain((n=>liftIO(r,n).chain((n=>f.has(n)?e.of(n):liftIO(r,i)))))),e.of()).chain((i=>liftIO(r,i).chain((i=>e.of(f.has(i)?i:n))))):e.of(n)})).chain(function doNextElse(n){return i=>!i&&n.length>0?liftIO(r,n[0]).chain(doNextElse(n.slice(1))):e.of(i)}(t)).run(r)))}function liftIO(n,o){if(u(o)){if(e.is(o))return o;if(t.Left.is(o)||i.Nothing.is(o)){let n={returned:o};return f.add(n),e.of(n)}{let n=o.chain(e.of);return e.is(n)?n:e.of(o)}}return r(o)?liftIO(n,o(n)):o&&"object"==typeof o&&r(o.next)?e.do(o):e.of(o)}return d.applyIO=function applyIO(n,i){return e((()=>n.run(i)))},d.doIO=function doIO(n,...i){return i.length>0?e((t=>e.do(n(t,...i)).run(t))):e.do(n)},d.doIOBind=function doIOBind(n,i){var t=e((()=>e.do(n).run(i)));return(...r)=>r.length>0?e((()=>e.do(n(i,...r)).run(i))):t},d.filterIOList=function filterIOList(n,i){return i.reduce(((e,i)=>e.chain((e=>n(i).map((n=>n?[...e,i]:e))))),e.of([]))},d.concatIOList=function concatIOList(n){return n.reduce(((n,e)=>n.map((n=>[...n,e]))),e.of([]))},d.iif=iif,d.elif=function elif(n,e){return iif(n,e)},d.els=function els(n){return iif(!0,n)},d.iNot=function iNot(n){return e((e=>liftIO(e,n).map((n=>!n)).run(e)))},d.iReturn=function iReturn(n){return e((e=>liftIO(e,n).map((n=>{var e={returned:n};return f.add(e),e})).run(e)))},d.wasReturned=function wasReturned(n){return f.has(n)},d}));