/*! Monio: io-event-stream.mjs
    v0.24.2 (c) 2021 Kyle Simpson
    MIT License: http://getify.mit-license.org
*/
import{isFunction,curry}from"./lib/util.mjs";import IO from"./io.mjs";IOEventStream=Object.assign(curry(IOEventStream,2),{merge:merge,zip:zip,close:close});export default IOEventStream;export{merge};export{zip};export{close};function IOEventStream(e,r,t={}){var{bufferSize:n=100,throwBufferOverflow:i=!1,evtOpts:l={}}=t;return IO((()=>{var t,o,a=Symbol("force closed"),{pr:u,next:s}=getDeferred(),c=async function*eventStream(){t=[],o=[],isFunction(e.addEventListener)?e.addEventListener(r,handler,l):isFunction(e.addListener)?e.addListener(r,handler):isFunction(e.on)&&e.on(r,handler);try{for(;;){if(0==t.length){let{pr:e,next:r}=getDeferred();t.push(e),o.push(r)}let e=await Promise.race([u,t.shift()]);if(e==a)return;yield e}}finally{isFunction(e.removeEventListener)?e.removeEventListener(r,handler,l):isFunction(e.removeListener)?e.removeListener(r,handler):isFunction(e.off)&&e.off(r,handler),t.length=o.length=0}}(),f=c.return;return c.return=function itReturn(...e){var r=f.apply(c,e);return c.closed=!0,s(a),c.return=f,r},c.closed=!1,c;function handler(e){if(o.length>0){o.shift()(e)}else if(t.length<n){let{pr:r,next:n}=getDeferred();t.push(r),n(e)}else if(i){let r=new Error("Event stream buffer overflow");throw r.evt=e,r}}}))}function merge(...e){return IO((()=>async function*mergeStreams(){try{for(;;){let r=pullFromStreams(e);if(!(r.length>0))return;try{if(1==r.length){let[t,n,i]=await r[0];if(i.done)return void(e[t]=null);e[t]=n,yield i.value}else{let[t,n,i]=await Promise.race(r);e[t]=null,i.done||(e.push(n),yield i.value)}}catch(e){return Promise.reject(e)}}}finally{await close(e)}}()))}function zip(...e){return IO((()=>async function*zipStreams(){try{for(;;){let r=pullFromStreams(e);if(!(r.length>0))return;try{let t=(await Promise.all(r)).reduce((function getStreamVals(r,t){var[n,i,l]=t;return l.done?(e[n]=null,r):(e[n]=i,[...r,l.value])}),[]);if(!(t.length>0))return;yield t}catch(e){return Promise.reject(e)}}}finally{await close(...e).run()}}()))}function pullFromStreams(e){return e.map((function callIter(r,t){return r&&isFunction(r.next)?(e[t]=async function getNext(){var n=r.next();try{let i=await n;return e[t]=[t,r,i]}catch(r){return e[t]=null,n}}(),e[t]):r})).filter(Boolean)}function close(...e){return IO((()=>Promise.all(e.map((async function closeStream(e){if(e&&isFunction(e.return))try{return await e.return()}catch(e){}})))))}function getDeferred(){var e;return{pr:new Promise((r=>e=r)),next:e}}