var LT=Object.create,Vd=Object.defineProperty,BT=Object.getOwnPropertyDescriptor,Vw=Object.getOwnPropertyNames,VT=Object.getPrototypeOf,WT=Object.prototype.hasOwnProperty,UT=e=>Vd(e,"__esModule",{value:!0}),zt=(e,t)=>function(){return t||(0,e[Vw(e)[0]])((t={exports:{}}).exports,t),t.exports},Ae=(e,t)=>{for(var a in t)Vd(e,a,{get:t[a],enumerable:!0})},GT=(t,a,r,n)=>{if(a&&"object"==typeof a||"function"==typeof a)for(let e of Vw(a))WT.call(t,e)||!r&&"default"===e||Vd(t,e,{get:()=>a[e],enumerable:!(n=BT(a,e))||n.enumerable});return t},xa=(e,t)=>GT(UT(Vd(null!=e?LT(VT(e)):{},"default",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),HT=zt({"src/node_modules/long/src/long.js"(e,t){t.exports=r;var h=null;try{h=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,a){this.low=0|e,this.high=0|t,this.unsigned=!!a}function c(e){return!0===(e&&e.__isLong__)}Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=c;var s={},i={};function a(e,t){var a,r,n;return t?(n=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(a=m(e,(0|e)<0?-1:0,!0),n&&(i[e]=a),a):(n=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(a=m(e,e<0?-1:0,!1),n&&(s[e]=a),a)}function f(e,t){if(isNaN(e))return t?p:y;if(t){if(e<0)return p;if(o<=e)return I}else{if(e<=-l)return S;if(l<=e+1)return k}return e<0?f(-e,t).neg():m(e%n|0,e/n|0,t)}function m(e,t,a){return new r(e,t,a)}r.fromInt=a,r.fromNumber=f,r.fromBits=m;var u=Math.pow;function d(e,t,a){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if(t="number"==typeof t?(a=t,!1):!!t,(a=a||10)<2||36<a)throw RangeError("radix");var r;if(0<(r=e.indexOf("-")))throw Error("interior hyphen");if(0===r)return d(e.substring(1),t,a).neg();for(var n=f(u(a,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),l=parseInt(e.substring(i,i+o),a);s=o<8?(o=f(u(a,o)),s.mul(o).add(f(l))):(s=s.mul(n)).add(f(l))}return s.unsigned=t,s}function g(e,t){return"number"==typeof e?f(e,t):"string"==typeof e?d(e,t):m(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=d,r.fromValue=g;var n=4294967296,o=n*n,l=o/2,b=a(1<<24),y=a(0);r.ZERO=y;var p=a(0,!0);r.UZERO=p;var v=a(1);r.ONE=v;var x=a(1,!0);r.UONE=x;var w=a(-1);r.NEG_ONE=w;var k=m(-1,2147483647,!1);r.MAX_VALUE=k;var I=m(-1,-1,!0);r.MAX_UNSIGNED_VALUE=I;var S=m(0,-2147483648,!1);r.MIN_VALUE=S;t=r.prototype;t.toInt=function(){return this.unsigned?this.low>>>0:this.low},t.toNumber=function(){return this.unsigned?(this.high>>>0)*n+(this.low>>>0):this.high*n+(this.low>>>0)},t.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=f(e),a=this.div(t),t=a.mul(t).sub(this);return a.toString(e)+t.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=f(u(e,6),this.unsigned),n=this,s="";;){var i=n.div(r),o=(n.sub(i.mul(r)).toInt()>>>0).toString(e);if((n=i).isZero())return o+s;for(;o.length<6;)o="0"+o;s=""+o+s}},t.getHighBits=function(){return this.high},t.getHighBitsUnsigned=function(){return this.high>>>0},t.getLowBits=function(){return this.low},t.getLowBitsUnsigned=function(){return this.low>>>0},t.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;0<t&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},t.isZero=function(){return 0===this.high&&0===this.low},t.eqz=t.isZero,t.isNegative=function(){return!this.unsigned&&this.high<0},t.isPositive=function(){return this.unsigned||0<=this.high},t.isOdd=function(){return 1==(1&this.low)},t.isEven=function(){return 0==(1&this.low)},t.equals=function(e){return c(e)||(e=g(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},t.eq=t.equals,t.notEquals=function(e){return!this.eq(e)},t.neq=t.notEquals,t.ne=t.notEquals,t.lessThan=function(e){return this.comp(e)<0},t.lt=t.lessThan,t.lessThanOrEqual=function(e){return this.comp(e)<=0},t.lte=t.lessThanOrEqual,t.le=t.lessThanOrEqual,t.greaterThan=function(e){return 0<this.comp(e)},t.gt=t.greaterThan,t.greaterThanOrEqual=function(e){return 0<=this.comp(e)},t.gte=t.greaterThanOrEqual,t.ge=t.greaterThanOrEqual,t.compare=function(e){if(c(e)||(e=g(e)),this.eq(e))return 0;var t=this.isNegative(),a=e.isNegative();return t&&!a?-1:!t&&a?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},t.comp=t.compare,t.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(v)},t.neg=t.negate,t.add=function(e){c(e)||(e=g(e));var t=this.high>>>16,a=65535&this.high,r=this.low>>>16,n=65535&this.low,s=e.high>>>16,i=65535&e.high,o=e.low>>>16,l=0,u=0,d=0,p=0;return d+=(p+=n+(65535&e.low))>>>16,u+=(d+=r+o)>>>16,l+=(u+=a+i)>>>16,l+=t+s,m((d&=65535)<<16|(p&=65535),(l&=65535)<<16|(u&=65535),this.unsigned)},t.subtract=function(e){return c(e)||(e=g(e)),this.add(e.neg())},t.sub=t.subtract,t.multiply=function(e){if(this.isZero())return y;if(c(e)||(e=g(e)),h)return m(h.mul(this.low,this.high,e.low,e.high),h.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(S))return e.isOdd()?S:y;if(e.eq(S))return this.isOdd()?S:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(b)&&e.lt(b))return f(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,a=65535&this.high,r=this.low>>>16,n=65535&this.low,s=e.high>>>16,i=65535&e.high,o=e.low>>>16,l=65535&e.low,u=0,d=0,p=0,e=0;return p+=(e+=n*l)>>>16,d+=(p+=r*l)>>>16,p&=65535,d+=(p+=n*o)>>>16,u+=(d+=a*l)>>>16,d&=65535,u+=(d+=r*o)>>>16,d&=65535,u+=(d+=n*i)>>>16,u+=t*l+a*o+r*i+n*s,m((p&=65535)<<16|(e&=65535),(u&=65535)<<16|(d&=65535),this.unsigned)},t.mul=t.multiply,t.divide=function(e){if((e=!c(e)?g(e):e).isZero())throw Error("division by zero");var t,a,r;if(h)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?m((this.unsigned?h.div_u:h.div_s)(this.low,this.high,e.low,e.high),h.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?p:y;if(this.unsigned){if((e=!e.unsigned?e.toUnsigned():e).gt(this))return p;if(e.gt(this.shru(1)))return x;a=p}else{if(this.eq(S))return e.eq(v)||e.eq(w)?S:e.eq(S)?v:(r=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?v:w:(t=this.sub(e.mul(r)),a=r.add(t.div(e)));else if(e.eq(S))return this.unsigned?p:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=y}for(t=this;t.gte(e);){r=Math.max(1,Math.floor(t.toNumber()/e.toNumber()));for(var n=Math.ceil(Math.log(r)/Math.LN2),s=n<=48?1:u(2,n-48),i=f(r),o=i.mul(e);o.isNegative()||o.gt(t);)o=(i=f(r-=s,this.unsigned)).mul(e);i.isZero()&&(i=v),a=a.add(i),t=t.sub(o)}return a},t.div=t.divide,t.modulo=function(e){return c(e)||(e=g(e)),h?m((this.unsigned?h.rem_u:h.rem_s)(this.low,this.high,e.low,e.high),h.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},t.mod=t.modulo,t.rem=t.modulo,t.not=function(){return m(~this.low,~this.high,this.unsigned)},t.and=function(e){return c(e)||(e=g(e)),m(this.low&e.low,this.high&e.high,this.unsigned)},t.or=function(e){return c(e)||(e=g(e)),m(this.low|e.low,this.high|e.high,this.unsigned)},t.xor=function(e){return c(e)||(e=g(e)),m(this.low^e.low,this.high^e.high,this.unsigned)},t.shiftLeft=function(e){return c(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?m(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):m(0,this.low<<e-32,this.unsigned)},t.shl=t.shiftLeft,t.shiftRight=function(e){return c(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?m(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):m(this.high>>e-32,0<=this.high?0:-1,this.unsigned)},t.shr=t.shiftRight,t.shiftRightUnsigned=function(e){if(c(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?m(this.low>>>e|t<<32-e,t>>>e,this.unsigned):m(32===e?t:t>>>e-32,0,this.unsigned)},t.shru=t.shiftRightUnsigned,t.shr_u=t.shiftRightUnsigned,t.toSigned=function(){return this.unsigned?m(this.low,this.high,!1):this},t.toUnsigned=function(){return this.unsigned?this:m(this.low,this.high,!0)},t.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},t.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},t.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,a){return a?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}}}),qT=zt({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),jT=zt({"(disabled):util"(){}}),KT=zt({"src/node_modules/seedrandom/lib/alea.js"(e,t){!function(e,t){function n(e){var r,t=this,a=(r=4022871197,function(e){e=String(e);for(var t=0;t<e.length;t++){var a=.02519603282416938*(r+=e.charCodeAt(t));a-=r=a>>>0,r=(a*=r)>>>0,r+=4294967296*(a-=r)}return 2.3283064365386963e-10*(r>>>0)});t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=a(" "),t.s1=a(" "),t.s2=a(" "),t.s0-=a(e),t.s0<0&&(t.s0+=1),t.s1-=a(e),t.s1<0&&(t.s1+=1),t.s2-=a(e),t.s2<0&&(t.s2+=1)}function s(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function a(e,t){var a=new n(e),t=t&&t.state,r=a.next;return r.int32=function(){return 4294967296*a.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,t&&("object"==typeof t&&s(t,a),r.state=function(){return s(a,{})}),r}e&&e.exports?e.exports=a:t&&t.amd?t(function(){return a}):this.alea=a}("object"==typeof t&&t,"function"==typeof define&&define)}}),XT=zt({"src/node_modules/seedrandom/lib/xor128.js"(e,t){!function(e,t){function r(e){var t=this,a="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:a+=e;for(var r=0;r<a.length+64;r++)t.x^=0|a.charCodeAt(r),t.next()}function n(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function a(e,t){var a=new r(e),e=t&&t.state,t=function(){return(a.next()>>>0)/4294967296};return t.double=function(){do{var e=((a.next()>>>11)+(a.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},t.int32=a.next,t.quick=t,e&&("object"==typeof e&&n(e,a),t.state=function(){return n(a,{})}),t}e&&e.exports?e.exports=a:t&&t.amd?t(function(){return a}):this.xor128=a}("object"==typeof t&&t,"function"==typeof define&&define)}}),YT=zt({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){!function(e,t){function r(e){var t=this,a="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,e===((t.v=0)|e)?t.x=e:a+=e;for(var r=0;r<a.length+64;r++)t.x^=0|a.charCodeAt(r),r==a.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function n(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function a(e,t){var a=new r(e),e=t&&t.state,t=function(){return(a.next()>>>0)/4294967296};return t.double=function(){do{var e=((a.next()>>>11)+(a.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},t.int32=a.next,t.quick=t,e&&("object"==typeof e&&n(e,a),t.state=function(){return n(a,{})}),t}e&&e.exports?e.exports=a:t&&t.amd?t(function(){return a}):this.xorwow=a}("object"==typeof t&&t,"function"==typeof define&&define)}}),QT=zt({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){!function(e,t){function r(e){var n=this;n.next=function(){var e=n.x,t=n.i,a=e[t],r=(a^=a>>>7)^a<<24;return r^=(a=e[t+1&7])^a>>>10,r^=(a=e[t+3&7])^a>>>3,r^=(a=e[t+4&7])^a<<7,a=e[t+7&7],e[t]=r^=(a^=a<<13)^a<<9,n.i=t+1&7,r},function(e,t){var a,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,a=0;a<t.length;++a)r[7&a]=r[7&a]<<15^t.charCodeAt(a)+r[a+1&7]<<13;for(;r.length<8;)r.push(0);for(a=0;a<8&&0===r[a];++a);for(8==a?r[7]=-1:r[a],e.x=r,e.i=0,a=256;0<a;--a)e.next()}(n,e)}function n(e,t){return t.x=e.x.slice(),t.i=e.i,t}function a(e,t){var a=new r(e=null==e?+new Date:e),e=t&&t.state,t=function(){return(a.next()>>>0)/4294967296};return t.double=function(){do{var e=((a.next()>>>11)+(a.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},t.int32=a.next,t.quick=t,e&&(e.x&&n(e,a),t.state=function(){return n(a,{})}),t}e&&e.exports?e.exports=a:t&&t.amd?t(function(){return a}):this.xorshift7=a}("object"==typeof t&&t,"function"==typeof define&&define)}}),ZT=zt({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){!function(e,t){function r(e){var s=this;s.next=function(){var e,t,a=s.w,r=s.X,n=s.i;return s.w=a=a+1640531527|0,t=r[n+34&127],e=r[n=n+1&127],t^=t<<13,e^=e<<17,t=r[n]=(t^=t>>>15)^(e^=e>>>12),s.i=n,t+(a^a>>>16)|0},function(e,t){var a,r,n,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),n=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,0<=s&&(n=0==(a=o[127&s]^=r+(i=i+1640531527|0))?n+1:0);for(128<=n&&(o[127&(t&&t.length||0)]=-1),n=127,s=512;0<s;--s)r=o[n+34&127],a=o[n=n+1&127],r^=r<<13,a^=a<<17,o[n]=(r^=r>>>15)^(a^=a>>>12);e.w=i,e.X=o,e.i=n}(s,e)}function n(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function a(e,t){var a=new r(e=null==e?+new Date:e),e=t&&t.state,t=function(){return(a.next()>>>0)/4294967296};return t.double=function(){do{var e=((a.next()>>>11)+(a.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},t.int32=a.next,t.quick=t,e&&(e.X&&n(e,a),t.state=function(){return n(a,{})}),t}e&&e.exports?e.exports=a:t&&t.amd?t(function(){return a}):this.xor4096=a}("object"==typeof t&&t,"function"==typeof define&&define)}}),JT=zt({"src/node_modules/seedrandom/lib/tychei.js"(e,t){!function(e,t){function r(e){var n=this,t="";n.next=function(){var e=(e=n.b)<<25^e>>>7^(t=n.c),t=t-(a=n.d)|0,a=a<<24^a>>>8^(r=n.a),r=r-e|0;return n.b=e=e<<20^e>>>12^t,n.c=t=t-a|0,n.d=a<<16^t>>>16^r,n.a=r-e|0},n.a=0,n.b=0,n.c=-1640531527,n.d=1367130551,e===Math.floor(e)?(n.a=e/4294967296|0,n.b=0|e):t+=e;for(var a=0;a<t.length+20;a++)n.b^=0|t.charCodeAt(a),n.next()}function n(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function a(e,t){var a=new r(e),e=t&&t.state,t=function(){return(a.next()>>>0)/4294967296};return t.double=function(){do{var e=((a.next()>>>11)+(a.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},t.int32=a.next,t.quick=t,e&&("object"==typeof e&&n(e,a),t.state=function(){return n(a,{})}),t}e&&e.exports?e.exports=a:t&&t.amd?t(function(){return a}):this.tychei=a}("object"==typeof t&&t,"function"==typeof define&&define)}}),e$=zt({"(disabled):crypto"(){}}),t$=zt({"src/node_modules/seedrandom/seedrandom.js"(e,t){!function(s,i,o){var l,u=256,d=o.pow(u,6),p=o.pow(2,52),h=2*p,c=u-1;function e(e,t,a){var r=[],e=g(function e(t,a){var r,n=[],s=typeof t;if(a&&"object"==s)for(r in t)try{n.push(e(t[r],a-1))}catch(e){}return n.length?n:"string"==s?t:t+"\0"}((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(i)]:null==e?function(){try{return l&&(t=l.randomBytes)?t=t(u):(t=new Uint8Array(u),(s.crypto||s.msCrypto).getRandomValues(t)),b(t)}catch(e){var t=s.navigator,t=t&&t.plugins;return[+new Date,s,t,s.screen,b(i)]}}():e,3),r),n=new f(r),r=function(){for(var e=n.g(6),t=d,a=0;e<p;)e=(e+a)*u,t*=u,a=n.g(1);for(;h<=e;)e/=2,t/=2,a>>>=1;return(e+a)/t};return r.int32=function(){return 0|n.g(4)},r.quick=function(){return n.g(4)/4294967296},r.double=r,g(b(n.S),i),(t.pass||a||function(e,t,a,r){return r&&(r.S&&m(r,n),e.state=function(){return m(n,{})}),a?(o.random=e,t):e})(r,e,"global"in t?t.global:this==o,t.state)}function f(e){var t,a=e.length,i=this,r=0,n=i.i=i.j=0,s=i.S=[];for(a||(e=[a++]);r<u;)s[r]=r++;for(r=0;r<u;r++)s[r]=s[n=c&n+e[r%a]+(t=s[r])],s[n]=t;(i.g=function(e){for(var t,a=0,r=i.i,n=i.j,s=i.S;e--;)t=s[r=c&r+1],a=a*u+s[c&(s[r]=s[n=c&n+t])+(s[n]=t)];return i.i=r,i.j=n,a})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){for(var a,r=e+"",n=0;n<r.length;)t[c&n]=c&(a^=19*t[c&n])+r.charCodeAt(n++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(g(o.random(),i),"object"==typeof t&&t.exports){t.exports=e;try{l=e$()}catch(e){}}else"function"==typeof define&&define.amd?define(function(){return e}):o.seedrandom=e}("undefined"!=typeof self?self:e,[],Math)}}),Wd=zt({"src/node_modules/seedrandom/index.js"(e,t){var a=KT(),r=XT(),n=YT(),s=QT(),i=ZT(),o=JT(),l=t$();l.alea=a,l.xor128=r,l.xorwow=n,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}}),Ww=zt({"(disabled):src/node_modules/string_decoder/index.js"(){}}),tg=zt({"(disabled):fs"(){}}),dd=zt({"(disabled):path"(){}}),n$=zt({"(disabled):worker_threads"(){}}),s$=zt({"(disabled):perf_hooks"(){}}),r$=zt({"(disabled):os"(){}}),a$=zt({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var dt,a=(dt="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(dt=dt||__filename),function(e){function d(){return A.buffer!=B&&j(A.buffer),W}function u(){return A.buffer!=B&&j(A.buffer),U}function p(){return A.buffer!=B&&j(A.buffer),V}function h(){return A.buffer!=B&&j(A.buffer),G}var a,s,t,i=void 0!==(e=e||{})?e:{};i.ready=new Promise(function(e,t){a=e,s=t}),"undefined"!=typeof process&&process.listeners&&(t={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var r,o,n,l,c,f,m=Object.assign({},i),g=(e,t)=>{throw t},b="object"==typeof window,y="function"==typeof importScripts,v="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,x=i.ENVIRONMENT_IS_PTHREAD||!1,w="";function k(e){return i.locateFile?i.locateFile(e,w):w+e}if(v){w=y?dd().dirname(w)+"/":__dirname+"/",f=()=>{c||(l=tg(),c=dd())},r=function(e,t){return f(),e=c.normalize(e),l.readFileSync(e,t?void 0:"utf8")},n=e=>{e=r(e,!0);return e=!e.buffer?new Uint8Array(e):e},o=(e,a,r)=>{f(),e=c.normalize(e),l.readFile(e,function(e,t){e?r(e):a(t.buffer)})},1<process.argv.length&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(e){if(!(e instanceof lt))throw e}),process.on("unhandledRejection",function(e){throw e}),g=(e,t)=>{if(Q())throw process.exitCode=e,t;(t=t)instanceof lt||N("exiting due to exception: "+t),process.exit(e)},i.inspect=function(){return"[Emscripten Module object]"};let e;try{e=n$()}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=e.Worker}else(b||y)&&(y?w=self.location.href:"undefined"!=typeof document&&document.currentScript&&(w=document.currentScript.src),w=0!==(w=void 0!==dt&&dt?dt:w).indexOf("blob:")?w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):"",v||(r=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},y&&(n=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,a)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):a()},r.onerror=a,r.send(null)}),0);v&&"undefined"==typeof performance&&(global.performance=s$().performance);var I=console.log.bind(console),S=console.warn.bind(console);v&&(f(),I=e=>l.writeSync(1,e+`
`),S=e=>l.writeSync(2,e+`
`));var C=i.print||I,N=i.printErr||S;Object.assign(i,m),m=null,i.arguments&&i.arguments,i.thisProgram&&i.thisProgram,i.quit&&(g=i.quit);function T(e){T.shown||(T.shown={}),T.shown[e]||(T.shown[e]=1,N(e))}var $;Atomics.load,Atomics.store,Atomics.compareExchange;i.wasmBinary&&($=i.wasmBinary);var _=i.noExitRuntime||!0;"object"!=typeof WebAssembly&&se("no native wasm support detected");var A,E,R=!1;function F(e){return i["_"+e]}function O(e,t,a,r){var n={string:function(e){var t,a=0;return null!=e&&0!==e&&(t=1+(e.length<<2),P(e,a=it(t),t)),a},array:function(e){var t,a=it(e.length);return t=e,e=a,d().set(t,e),a}};var e=F(e),s=[],i=0;if(r)for(var o=0;o<r.length;o++){var l=n[a[o]];l?(0===i&&(i=nt()),s[o]=l(r[o])):s[o]=r[o]}var u,e=e.apply(null,s);return u=e,0!==i&&st(i),u=u,e="string"===t?L(u):"boolean"===t?Boolean(u):u}function M(e){var t=new TextDecoder(e);this.decode=e=>(e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e))}var D="undefined"!=typeof TextDecoder?new M("utf8"):void 0;function z(e,t,a){for(var r=t+a,n=t;e[n]&&!(r<=n);)++n;if(16<n-t&&e.subarray&&D)return D.decode(e.subarray(t,n));for(var s="";t<n;){var i,o,l=e[t++];128&l?(i=63&e[t++],192!=(224&l)?(o=63&e[t++],(l=224==(240&l)?(15&l)<<12|i<<6|o:(7&l)<<18|i<<12|o<<6|63&e[t++])<65536?s+=String.fromCharCode(l):(o=l-65536,s+=String.fromCharCode(55296|o>>10,56320|1023&o))):s+=String.fromCharCode((31&l)<<6|i)):s+=String.fromCharCode(l)}return s}function L(e,t){return e?z(u(),e,t):""}function P(e,t,a){return function(e,t,a,r){if(!(0<r))return;for(var n=a,s=a+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if((o=55296<=o&&o<=57343?65536+((1023&o)<<10)|1023&e.charCodeAt(++i):o)<=127){if(s<=a)break;t[a++]=o}else if(o<=2047){if(s<=a+1)break;t[a++]=192|o>>6,t[a++]=128|63&o}else if(o<=65535){if(s<=a+2)break;t[a++]=224|o>>12,t[a++]=128|o>>6&63,t[a++]=128|63&o}else{if(s<=a+3)break;t[a++]=240|o>>18,t[a++]=128|o>>12&63,t[a++]=128|o>>6&63,t[a++]=128|63&o}}return t[a]=0,a-n}(e,u(),t,a)}var B,W,U,V,G;"undefined"!=typeof TextDecoder&&new M("utf-16le");function j(e){B=e,i.HEAP8=W=new Int8Array(e),i.HEAP16=new Int16Array(e),i.HEAP32=V=new Int32Array(e),i.HEAPU8=U=new Uint8Array(e),i.HEAPU16=new Uint16Array(e),i.HEAPU32=new Uint32Array(e),i.HEAPF32=new Float32Array(e),i.HEAPF64=G=new Float64Array(e)}x&&(B=i.buffer);m=i.INITIAL_MEMORY||16777216;if(x)A=i.wasmMemory,B=i.buffer;else if(i.wasmMemory)A=i.wasmMemory;else if(!((A=new WebAssembly.Memory({initial:m/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw N("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),v&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");m=(B=A?A.buffer:B).byteLength,j(B);var H,q=[],X=[],K=[],Y=[],Z=0;function Q(){return _||0<Z}function J(){if(i.preRun)for("function"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;)e=i.preRun.shift(),q.unshift(e);var e;pe(q)}function ee(){x||pe(X)}function te(){if(!x){if(i.postRun)for("function"==typeof i.postRun&&(i.postRun=[i.postRun]);i.postRun.length;)e=i.postRun.shift(),Y.unshift(e);pe(Y)}var e}var ae=0,re=null,ne=null;function se(e){x?postMessage({cmd:"onAbort",arg:e}):i.onAbort&&i.onAbort(e),N(e="Aborted("+e+")"),R=!0,e+=". Build with -s ASSERTIONS=1 for more info.";e=new WebAssembly.RuntimeError(e);throw s(e),e}i.preloadedImages={},i.preloadedAudios={};var ie;function oe(e){return e.startsWith("data:application/octet-stream;base64,")}function le(e){return e.startsWith("file://")}function ue(e){try{if(e==ie&&$)return new Uint8Array($);if(n)return n(e);throw"both async and sync fetching of the wasm failed"}catch(e){se(e)}}oe(ie="tfjs-backend-wasm-threaded-simd.wasm")||(ie=k(ie));var de={};function pe(e){for(;0<e.length;){var t,a=e.shift();"function"!=typeof a?"number"==typeof(t=a.func)?void 0===a.arg?ye(t)():ye(t)(a.arg):t(void 0===a.arg?null:a.arg):a(i)}}function he(e){var t=nt(),e=e();return st(t),e}function ce(e){var t=me.pthreads[e];t&&(p()[e>>2]=0,t=t.worker,me.returnWorkerToPool(t))}function fe(e){!function(e,t){if(!t&&x)throw ge(e),"unwind";Q()||x||(me.terminateAllThreads(),0),function(e){Q()||(me.terminateAllThreads(),i.onExit&&i.onExit(e),R=!0),g(e,new lt(e))}(e)}(e)}var me={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){x?me.initWorker():me.initMainThread()},initMainThread:function(){for(var e=0;e<8;++e)me.allocateUnusedWorker()},initWorker:function(){_=!1},pthreads:{},setExitStatus:function(e){0},terminateAllThreads:function(){for(var e in me.pthreads){e=me.pthreads[e];e&&e.worker&&me.returnWorkerToPool(e.worker)}for(var t=0;t<me.unusedWorkers.length;++t)me.unusedWorkers[t].terminate();me.unusedWorkers=[]},returnWorkerToPool:function(e){me.runWithoutMainThreadQueuedCalls(function(){delete me.pthreads[e.pthread.threadInfoStruct],me.unusedWorkers.push(e),me.runningWorkers.splice(me.runningWorkers.indexOf(e),1),at(e.pthread.threadInfoStruct),e.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(e){p()[ot>>2]=0;try{e()}finally{p()[ot>>2]=1}},receiveObjectTransfer:function(e){},threadInit:function(){for(var e in me.tlsInitFunctions)me.tlsInitFunctions[e]()},loadWasmModuleToWorker:function(r,n){r.onmessage=e=>{var t=e.data,e=t.cmd;if(r.pthread&&(me.currentProxiedOperationCallerThread=r.pthread.threadInfoStruct),t.targetThread&&t.targetThread!=Ye()){var a=me.pthreads[t.targetThread];return a?a.worker.postMessage(t,t.transferList):N('Internal error! Worker sent a message "'+e+'" to target pthread '+t.targetThread+", but that thread no longer exists!"),void(me.currentProxiedOperationCallerThread=void 0)}"processQueuedMainThreadWork"===e?Ze():"spawnThread"===e?ke(t):"cleanupThread"===e?ce(t.thread):"killThread"===e?function(e){p()[e>>2]=0;var t=me.pthreads[e];delete me.pthreads[e],t.worker.terminate(),at(e),me.runningWorkers.splice(me.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}(t.thread):"cancelThread"===e?(a=t.thread,me.pthreads[a].worker.postMessage({cmd:"cancel"})):"loaded"===e?(r.loaded=!0,n&&n(r),r.runPthread&&(r.runPthread(),delete r.runPthread)):"print"===e?C("Thread "+t.threadId+": "+t.text):"printErr"===e?N("Thread "+t.threadId+": "+t.text):"alert"===e?alert("Thread "+t.threadId+": "+t.text):"setimmediate"===t.target?r.postMessage(t):"onAbort"===e?i.onAbort&&i.onAbort(t.arg):N("worker sent an unknown command "+e),me.currentProxiedOperationCallerThread=void 0},r.onerror=e=>{throw N("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},v&&(r.on("message",function(e){r.onmessage({data:e})}),r.on("error",function(e){r.onerror(e)}),r.on("detachedExit",function(){})),r.postMessage({cmd:"load",urlOrBlob:i.mainScriptUrlOrBlob||dt,wasmMemory:A,wasmModule:E})},allocateUnusedWorker:function(){var e=k("tfjs-backend-wasm-threaded-simd.worker.js");me.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==me.unusedWorkers.length&&(me.allocateUnusedWorker(),me.loadWasmModuleToWorker(me.unusedWorkers[0])),me.unusedWorkers.pop()}};function ge(e){if(x)return Se(1,0,e);try{fe(e)}catch(e){!function(e){if(e instanceof lt||"unwind"==e)return;g(1,e)}(e)}}i.establishStackSpace=function(){var e=Ye(),t=p()[e+44>>2],e=p()[e+48>>2];rt(t,t-e),st(t)};var be=[];function ye(e){var t=be[e];return t||(e>=be.length&&(be.length=e+1),be[e]=t=H.get(e)),t}i.invokeEntryPoint=function(e,t){return ye(e)(t)};var ve=v?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:x?()=>performance.now()-i.__performance_now_clock_drift:()=>performance.now(),xe=!0;function we(e,t){var a;if(0===e)a=Date.now();else{if(1!==e&&4!==e||!xe)return e=28,p()[Ke()>>2]=e,-1;a=ve()}return p()[t>>2]=a/1e3|0,p()[t+4>>2]=a%1e3*1e3*1e3|0,0}function ke(e){var t=me.getNewWorker();if(!t)return 6;me.runningWorkers.push(t);var a=me.pthreads[e.pthread_ptr]={worker:t,threadInfoStruct:e.pthread_ptr};t.pthread=a;var r={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr};return t.runPthread=()=>{r.time=performance.now(),t.postMessage(r,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread),0}function Ie(){return 2147483648}function Se(s,i){var o=arguments.length-2,l=arguments;return he(function(){for(var e=o,t=it(8*e),a=t>>3,r=0;r<o;r++){var n=l[2+r];h()[a+r]=n}return et(s,e,t,i)})}var Ce=[];var Ne={inEventHandler:0,removeAllEventListeners:function(){for(var e=Ne.eventHandlers.length-1;0<=e;--e)Ne._removeHandler(e);Ne.eventHandlers=[],Ne.deferredCalls=[]},registerRemoveEventListeners:function(){Ne.removeEventListenersRegistered||(K.push(Ne.removeAllEventListeners),Ne.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,a){for(var r in Ne.deferredCalls){r=Ne.deferredCalls[r];if(r.targetFunction==e&&function(e,t){if(e.length==t.length){for(var a in e)if(e[a]!=t[a])return;return 1}}(r.argsList,a))return}Ne.deferredCalls.push({targetFunction:e,precedence:t,argsList:a}),Ne.deferredCalls.sort(function(e,t){return e.precedence<t.precedence})},removeDeferredCalls:function(e){for(var t=0;t<Ne.deferredCalls.length;++t)Ne.deferredCalls[t].targetFunction==e&&(Ne.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return Ne.inEventHandler&&Ne.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(Ne.canPerformEventHandlerRequests())for(var e=0;e<Ne.deferredCalls.length;++e){var t=Ne.deferredCalls[e];Ne.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var a=0;a<Ne.eventHandlers.length;++a)Ne.eventHandlers[a].target!=e||t&&t!=Ne.eventHandlers[a].eventTypeString||Ne._removeHandler(a--)},_removeHandler:function(e){var t=Ne.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),Ne.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(t){function e(e){++Ne.inEventHandler,Ne.currentEventHandler=t,Ne.runDeferredCalls(),t.handlerFunc(e),Ne.runDeferredCalls(),--Ne.inEventHandler}if(t.callbackfunc)t.eventListenerFunc=e,t.target.addEventListener(t.eventTypeString,e,t.useCapture),Ne.eventHandlers.push(t),Ne.registerRemoveEventListeners();else for(var a=0;a<Ne.eventHandlers.length;++a)Ne.eventHandlers[a].target==t.target&&Ne.eventHandlers[a].eventTypeString==t.eventTypeString&&Ne._removeHandler(a--)},queueEventHandlerOnThread_iiii:function(t,a,r,n,s){he(function(){var e=it(12);p()[e>>2]=r,p()[e+4>>2]=n,p()[e+8>>2]=s,tt(t,637534208,a,n,e)})},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return me.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Te(e){var t=function(e){for(var t=0,a=0;a<e.length;++a){var r=e.charCodeAt(a);(r=55296<=r&&r<=57343?65536+((1023&r)<<10)|1023&e.charCodeAt(++a):r)<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}(e)+1,a=qe(t);return P(e,a,t),a}function $e(e,t,a,r){var n,s,i,o;t=t?L(t):"",n=e,s=t,i=a,o=r,he(function(){var e=it(12),t=0;s&&(t=Te(s)),p()[e>>2]=t,p()[e+4>>2]=i,p()[e+8>>2]=o,tt(n,657457152,0,t,e)})}var _e=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function Ae(e){var t;return e=2<(t=e)?L(t):t,_e[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function Ee(e){return Ae(e)}function Re(e,t,a){var r=Ee(e);if(!r)return-4;if(r.canvasSharedPtr&&(p()[r.canvasSharedPtr>>2]=t,p()[r.canvasSharedPtr+4>>2]=a),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?($e(p()[r.canvasSharedPtr+8>>2],e,t,a),1):-4;var n=!1;return(r=r.offscreenCanvas?r.offscreenCanvas:r).GLctxObject&&r.GLctxObject.GLctx&&(n=0===(e=r.GLctxObject.GLctx.getParameter(2978))[0]&&0===e[1]&&e[2]===r.width&&e[3]===r.height),r.width=t,r.height=a,n&&r.GLctxObject.GLctx.viewport(0,0,t,a),0}function Fe(e,t,a){return x?Se(2,1,e,t,a):Re(e,t,a)}var Oe={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(e){Oe.lastError||(Oe.lastError=e)},getNewId:function(e){for(var t=Oe.counter++,a=e.length;a<t;a++)e[a]=null;return t},getSource:function(e,t,a,r){for(var n="",s=0;s<t;++s){var i=r?p()[r+4*s>>2]:-1;n+=L(p()[a+4*s>>2],i<0?void 0:i)}return n},createContext:function(a,e){a.getContextSafariWebGL2Fixed||(a.getContextSafariWebGL2Fixed=a.getContext,a.getContext=function(e,t){t=a.getContextSafariWebGL2Fixed(e,t);return"webgl"==e==t instanceof WebGLRenderingContext?t:null});var t=a.getContext("webgl",e);return t?Oe.registerContext(t,e):0},registerContext:function(e,t){var a=qe(8);p()[a+4>>2]=Ye();var r={handle:a,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),Oe.contexts[a]=r,void 0!==t.enableExtensionsByDefault&&!t.enableExtensionsByDefault||Oe.initExtensions(r),a},makeContextCurrent:function(e){return Oe.currentContext=Oe.contexts[e],i.ctx=Be=Oe.currentContext&&Oe.currentContext.GLctx,!(e&&!Be)},getContext:function(e){return Oe.contexts[e]},deleteContext:function(e){Oe.currentContext===Oe.contexts[e]&&(Oe.currentContext=null),"object"==typeof Ne&&Ne.removeAllHandlersOnTarget(Oe.contexts[e].GLctx.canvas),Oe.contexts[e]&&Oe.contexts[e].GLctx.canvas&&(Oe.contexts[e].GLctx.canvas.GLctxObject=void 0),Xe(Oe.contexts[e].handle),Oe.contexts[e]=null},initExtensions:function(e){var t,a,r,s;(e=e||Oe.currentContext).initExtensionsDone||(e.initExtensionsDone=!0,t=e.GLctx,(s=(e=t).getExtension("ANGLE_instanced_arrays"))&&(e.vertexAttribDivisor=function(e,t){s.vertexAttribDivisorANGLE(e,t)},e.drawArraysInstanced=function(e,t,a,r){s.drawArraysInstancedANGLE(e,t,a,r)},e.drawElementsInstanced=function(e,t,a,r,n){s.drawElementsInstancedANGLE(e,t,a,r,n)}),(r=(e=t).getExtension("OES_vertex_array_object"))&&(e.createVertexArray=function(){return r.createVertexArrayOES()},e.deleteVertexArray=function(e){r.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){r.bindVertexArrayOES(e)},e.isVertexArray=function(e){return r.isVertexArrayOES(e)}),(a=(e=t).getExtension("WEBGL_draw_buffers"))&&(e.drawBuffers=function(e,t){a.drawBuffersWEBGL(e,t)}),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),t.multiDrawWebgl=t.getExtension("WEBGL_multi_draw"),(t.getSupportedExtensions()||[]).forEach(function(e){e.includes("lose_context")||e.includes("debug")||t.getExtension(e)}))}},Me=["default","low-power","high-performance"];var De={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var a=De.buffers[e];0===t||10===t?((1===e?C:N)(z(a,0)),a.length=0):a.push(t)},varargs:void 0,get:function(){return De.varargs+=4,p()[De.varargs-4>>2]},getStr:function(e){return L(e)},get64:function(e,t){return e}};function ze(e){return x?Se(3,1,e):0}function Le(e,t,a,r,n){if(x)return Se(4,1,e,t,a,r,n)}function Pe(e,t,a,r){if(x)return Se(5,1,e,t,a,r);for(var n=0,s=0;s<a;s++){var i=p()[t>>2],o=p()[t+4>>2];t+=8;for(var l=0;l<o;l++)De.printChar(e,u()[i+l]);n+=o}return p()[r>>2]=n,0}me.init();var Be,We,Ue,Ve,Ge,je=[null,ge,Fe,ze,Le,Pe],He={__clock_gettime:we,__emscripten_init_main_thread_js:function(e){Qe(e,!y,1,!b),me.threadInit()},__emscripten_thread_cleanup:function(e){x?postMessage({cmd:"cleanupThread",thread:e}):ce(e)},__pthread_create_js:function(e,t,a,r){if("undefined"==typeof SharedArrayBuffer)return N("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var n=[];return x&&0===n.length?Je(687865856,e,t,a,r):(r={startRoutine:a,pthread_ptr:e,arg:r,transferList:n},x?(r.cmd="spawnThread",postMessage(r,n),0):ke(r))},_emscripten_default_pthread_stack_size:function(){return 2097152},_emscripten_notify_thread_queue:function(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(x)postMessage({targetThread:e,cmd:"processThreadQueue"});else{e=me.pthreads[e],e=e&&e.worker;if(!e)return;e.postMessage({cmd:"processThreadQueue"})}return 1},abort:function(){se("")},emscripten_check_blocking_allowed:function(){v||y||T("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_get_heap_max:Ie,emscripten_get_now:ve,emscripten_memcpy_big:function(e,t,a){u().copyWithin(e,t,t+a)},emscripten_num_logical_cores:function(){return v?r$().cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,a){Ce.length=t;for(var r=a>>3,n=0;n<t;n++)Ce[n]=h()[r+n];return(e<0?de[-e-1]:je[e]).apply(null,Ce)},emscripten_resize_heap:function(e){var t=u().length;if((e>>>=0)<=t)return!1;if(2147483648<e)return!1;for(var a,r=1;r<=4;r*=2){var n=t*(1+.2/r),n=Math.min(n,e+100663296);if(function(e){try{return A.grow(e-B.byteLength+65535>>>16),j(A.buffer),1}catch(e){}}(Math.min(2147483648,(0<(a=Math.max(e,n))%(n=65536)&&(a+=n-a%n),a))))return!0}return!1},emscripten_set_canvas_element_size:function(e,t,a){return(Ee(e)?Re:Fe)(e,t,a)},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},emscripten_webgl_create_context:function(e,t){return a=e,t=(e=t)>>2,e=p()[6+t],t={alpha:!!p()[t],depth:!!p()[1+t],stencil:!!p()[2+t],antialias:!!p()[3+t],premultipliedAlpha:!!p()[4+t],preserveDrawingBuffer:!!p()[5+t],powerPreference:Me[e],failIfMajorPerformanceCaveat:!!p()[7+t],majorVersion:p()[8+t],minorVersion:p()[9+t],enableExtensionsByDefault:p()[10+t],explicitSwapControl:p()[11+t],proxyContextToMainThread:p()[12+t],renderViaOffscreenBackBuffer:p()[13+t]},!(a=Ee(a))||t.explicitSwapControl?0:Oe.createContext(a,t);var a},exit:fe,fd_close:ze,fd_seek:Le,fd_write:Pe,memory:A||i.wasmMemory,setTempRet0:function(e){0}},qe=(function(){var t={env:He,wasi_snapshot_preview1:He};function a(e,t){var a,e=e.exports;i.asm=e,e=i.asm.emscripten_tls_init,me.tlsInitFunctions.push(e),H=i.asm.__indirect_function_table,e=i.asm.__wasm_call_ctors,X.unshift(e),E=t,x||(a=me.unusedWorkers.length,me.unusedWorkers.forEach(function(e){me.loadWasmModuleToWorker(e,function(){var e;--a||(ae--,i.monitorRunDependencies&&i.monitorRunDependencies(ae),0==ae&&(null!==re&&(clearInterval(re),re=null),ne)&&(e=ne,ne=null,e()))})}))}function r(e){a(e.instance,e.module)}function n(e){return function(){if(!$&&(b||y)){if("function"==typeof fetch&&!le(ie))return fetch(ie,{credentials:"same-origin"}).then(function(e){if(!e.ok)throw"failed to load wasm binary file at '"+ie+"'";return e.arrayBuffer()}).catch(function(){return ue(ie)});if(o)return new Promise(function(t,e){o(ie,function(e){t(new Uint8Array(e))},e)})}return Promise.resolve().then(function(){return ue(ie)})}().then(function(e){return WebAssembly.instantiate(e,t)}).then(function(e){return e}).then(e,function(e){N("failed to asynchronously prepare wasm: "+e),se(e)})}if(x||(ae++,i.monitorRunDependencies&&i.monitorRunDependencies(ae)),i.instantiateWasm)try{return i.instantiateWasm(t,a)}catch(e){return N("Module.instantiateWasm callback failed with error: "+e)}($||"function"!=typeof WebAssembly.instantiateStreaming||oe(ie)||le(ie)||"function"!=typeof fetch?n(r):fetch(ie,{credentials:"same-origin"}).then(function(e){return WebAssembly.instantiateStreaming(e,t).then(r,function(e){return N("wasm streaming compile failed: "+e),N("falling back to ArrayBuffer instantiation"),n(r)})})).catch(s)}(),i.___wasm_call_ctors=function(){return(i.___wasm_call_ctors=i.asm.__wasm_call_ctors).apply(null,arguments)},i._init=function(){return(i._init=i.asm.init).apply(null,arguments)},i._init_with_threads_count=function(){return(i._init_with_threads_count=i.asm.init_with_threads_count).apply(null,arguments)},i._get_threads_count=function(){return(i._get_threads_count=i.asm.get_threads_count).apply(null,arguments)},i._register_tensor=function(){return(i._register_tensor=i.asm.register_tensor).apply(null,arguments)},i._dispose_data=function(){return(i._dispose_data=i.asm.dispose_data).apply(null,arguments)},i._dispose=function(){return(i._dispose=i.asm.dispose).apply(null,arguments)},i._Abs=function(){return(i._Abs=i.asm.Abs).apply(null,arguments)},i._Add=function(){return(i._Add=i.asm.Add).apply(null,arguments)},i._AddN=function(){return(i._AddN=i.asm.AddN).apply(null,arguments)},i._All=function(){return(i._All=i.asm.All).apply(null,arguments)},i._Any=function(){return(i._Any=i.asm.Any).apply(null,arguments)},i._ArgMax=function(){return(i._ArgMax=i.asm.ArgMax).apply(null,arguments)},i._AvgPool=function(){return(i._AvgPool=i.asm.AvgPool).apply(null,arguments)},i._BatchMatMul=function(){return(i._BatchMatMul=i.asm.BatchMatMul).apply(null,arguments)},i._Ceil=function(){return(i._Ceil=i.asm.Ceil).apply(null,arguments)},i._ClipByValue=function(){return(i._ClipByValue=i.asm.ClipByValue).apply(null,arguments)},i._Conv2D=function(){return(i._Conv2D=i.asm.Conv2D).apply(null,arguments)},i._Conv2DBackpropInput=function(){return(i._Conv2DBackpropInput=i.asm.Conv2DBackpropInput).apply(null,arguments)},i._Cos=function(){return(i._Cos=i.asm.Cos).apply(null,arguments)},i._Cosh=function(){return(i._Cosh=i.asm.Cosh).apply(null,arguments)},i._CropAndResize=function(){return(i._CropAndResize=i.asm.CropAndResize).apply(null,arguments)},i._Cumprod=function(){return(i._Cumprod=i.asm.Cumprod).apply(null,arguments)},i._Cumsum=function(){return(i._Cumsum=i.asm.Cumsum).apply(null,arguments)},i._DepthToSpace=function(){return(i._DepthToSpace=i.asm.DepthToSpace).apply(null,arguments)},i._DepthwiseConv2dNative=function(){return(i._DepthwiseConv2dNative=i.asm.DepthwiseConv2dNative).apply(null,arguments)},i._Elu=function(){return(i._Elu=i.asm.Elu).apply(null,arguments)},i._Equal=function(){return(i._Equal=i.asm.Equal).apply(null,arguments)},i._Exp=function(){return(i._Exp=i.asm.Exp).apply(null,arguments)},i._FlipLeftRight=function(){return(i._FlipLeftRight=i.asm.FlipLeftRight).apply(null,arguments)},i._Floor=function(){return(i._Floor=i.asm.Floor).apply(null,arguments)},i._FloorDiv=function(){return(i._FloorDiv=i.asm.FloorDiv).apply(null,arguments)},i._FusedBatchNorm=function(){return(i._FusedBatchNorm=i.asm.FusedBatchNorm).apply(null,arguments)},i._FusedConv2D=function(){return(i._FusedConv2D=i.asm.FusedConv2D).apply(null,arguments)},i._FusedDepthwiseConv2D=function(){return(i._FusedDepthwiseConv2D=i.asm.FusedDepthwiseConv2D).apply(null,arguments)},i._Gather=function(){return(i._Gather=i.asm.Gather).apply(null,arguments)},i._GatherNd=function(){return(i._GatherNd=i.asm.GatherNd).apply(null,arguments)},i._Greater=function(){return(i._Greater=i.asm.Greater).apply(null,arguments)},i._GreaterEqual=function(){return(i._GreaterEqual=i.asm.GreaterEqual).apply(null,arguments)},i._LeakyRelu=function(){return(i._LeakyRelu=i.asm.LeakyRelu).apply(null,arguments)},i._Less=function(){return(i._Less=i.asm.Less).apply(null,arguments)},i._LessEqual=function(){return(i._LessEqual=i.asm.LessEqual).apply(null,arguments)},i._Log=function(){return(i._Log=i.asm.Log).apply(null,arguments)},i._LogicalAnd=function(){return(i._LogicalAnd=i.asm.LogicalAnd).apply(null,arguments)},i._Max=function(){return(i._Max=i.asm.Max).apply(null,arguments)},i._MaxPool=function(){return(i._MaxPool=i.asm.MaxPool).apply(null,arguments)},i._Maximum=function(){return(i._Maximum=i.asm.Maximum).apply(null,arguments)},i._Mean=function(){return(i._Mean=i.asm.Mean).apply(null,arguments)},i._Min=function(){return(i._Min=i.asm.Min).apply(null,arguments)},i._Minimum=function(){return(i._Minimum=i.asm.Minimum).apply(null,arguments)},i._MirrorPad=function(){return(i._MirrorPad=i.asm.MirrorPad).apply(null,arguments)},i._Multiply=function(){return(i._Multiply=i.asm.Multiply).apply(null,arguments)},i._Neg=function(){return(i._Neg=i.asm.Neg).apply(null,arguments)},i._NonMaxSuppressionV3=function(){return(i._NonMaxSuppressionV3=i.asm.NonMaxSuppressionV3).apply(null,arguments)},i._NonMaxSuppressionV4=function(){return(i._NonMaxSuppressionV4=i.asm.NonMaxSuppressionV4).apply(null,arguments)},i._NonMaxSuppressionV5=function(){return(i._NonMaxSuppressionV5=i.asm.NonMaxSuppressionV5).apply(null,arguments)},i._NotEqual=function(){return(i._NotEqual=i.asm.NotEqual).apply(null,arguments)},i._OneHot=function(){return(i._OneHot=i.asm.OneHot).apply(null,arguments)},i._PadV2=function(){return(i._PadV2=i.asm.PadV2).apply(null,arguments)},i._Pow=function(){return(i._Pow=i.asm.Pow).apply(null,arguments)},i._Prelu=function(){return(i._Prelu=i.asm.Prelu).apply(null,arguments)},i._Prod=function(){return(i._Prod=i.asm.Prod).apply(null,arguments)},i._RealDiv=function(){return(i._RealDiv=i.asm.RealDiv).apply(null,arguments)},i._Relu=function(){return(i._Relu=i.asm.Relu).apply(null,arguments)},i._Relu6=function(){return(i._Relu6=i.asm.Relu6).apply(null,arguments)},i._ResizeBilinear=function(){return(i._ResizeBilinear=i.asm.ResizeBilinear).apply(null,arguments)},i._Reverse=function(){return(i._Reverse=i.asm.Reverse).apply(null,arguments)},i._RotateWithOffset=function(){return(i._RotateWithOffset=i.asm.RotateWithOffset).apply(null,arguments)},i._Round=function(){return(i._Round=i.asm.Round).apply(null,arguments)},i._Rsqrt=function(){return(i._Rsqrt=i.asm.Rsqrt).apply(null,arguments)},i._ScatterNd=function(){return(i._ScatterNd=i.asm.ScatterNd).apply(null,arguments)},i._SelectV2=function(){return(i._SelectV2=i.asm.SelectV2).apply(null,arguments)},i._Sigmoid=function(){return(i._Sigmoid=i.asm.Sigmoid).apply(null,arguments)},i._Sin=function(){return(i._Sin=i.asm.Sin).apply(null,arguments)},i._Softmax=function(){return(i._Softmax=i.asm.Softmax).apply(null,arguments)},i._SparseFillEmptyRows=function(){return(i._SparseFillEmptyRows=i.asm.SparseFillEmptyRows).apply(null,arguments)},i._SparseReshape=function(){return(i._SparseReshape=i.asm.SparseReshape).apply(null,arguments)},i._SparseSegmentReduction=function(){return(i._SparseSegmentReduction=i.asm.SparseSegmentReduction).apply(null,arguments)},i._Sqrt=function(){return(i._Sqrt=i.asm.Sqrt).apply(null,arguments)},i._Square=function(){return(i._Square=i.asm.Square).apply(null,arguments)},i._SquaredDifference=function(){return(i._SquaredDifference=i.asm.SquaredDifference).apply(null,arguments)},i._Step=function(){return(i._Step=i.asm.Step).apply(null,arguments)},i._StridedSlice=function(){return(i._StridedSlice=i.asm.StridedSlice).apply(null,arguments)},i._Sub=function(){return(i._Sub=i.asm.Sub).apply(null,arguments)},i._Sum=function(){return(i._Sum=i.asm.Sum).apply(null,arguments)},i._Tan=function(){return(i._Tan=i.asm.Tan).apply(null,arguments)},i._Tanh=function(){return(i._Tanh=i.asm.Tanh).apply(null,arguments)},i._Tile=function(){return(i._Tile=i.asm.Tile).apply(null,arguments)},i._TopK=function(){return(i._TopK=i.asm.TopK).apply(null,arguments)},i._Transform=function(){return(i._Transform=i.asm.Transform).apply(null,arguments)},i._Transpose=function(){return(i._Transpose=i.asm.Transpose).apply(null,arguments)},i.__FusedMatMul=function(){return(i.__FusedMatMul=i.asm._FusedMatMul).apply(null,arguments)},i._malloc=function(){return(qe=i._malloc=i.asm.malloc).apply(null,arguments)}),Xe=i._free=function(){return(Xe=i._free=i.asm.free).apply(null,arguments)},Ke=(i._emscripten_tls_init=function(){return(i._emscripten_tls_init=i.asm.emscripten_tls_init).apply(null,arguments)},i.___errno_location=function(){return(Ke=i.___errno_location=i.asm.__errno_location).apply(null,arguments)}),Ye=i._pthread_self=function(){return(Ye=i._pthread_self=i.asm.pthread_self).apply(null,arguments)},Ze=i._emscripten_main_thread_process_queued_calls=function(){return(Ze=i._emscripten_main_thread_process_queued_calls=i.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},Qe=(i.__emscripten_thread_crashed=function(){return(i.__emscripten_thread_crashed=i.asm._emscripten_thread_crashed).apply(null,arguments)},i.__emscripten_thread_init=function(){return(Qe=i.__emscripten_thread_init=i.asm._emscripten_thread_init).apply(null,arguments)}),Je=(i._emscripten_current_thread_process_queued_calls=function(){return(i._emscripten_current_thread_process_queued_calls=i.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},i._emscripten_main_browser_thread_id=function(){return(i._emscripten_main_browser_thread_id=i.asm.emscripten_main_browser_thread_id).apply(null,arguments)},i._emscripten_sync_run_in_main_thread_2=function(){return(i._emscripten_sync_run_in_main_thread_2=i.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},i._emscripten_sync_run_in_main_thread_4=function(){return(Je=i._emscripten_sync_run_in_main_thread_4=i.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)}),et=i._emscripten_run_in_main_runtime_thread_js=function(){return(et=i._emscripten_run_in_main_runtime_thread_js=i.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},tt=i._emscripten_dispatch_to_thread_=function(){return(tt=i._emscripten_dispatch_to_thread_=i.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},at=i.__emscripten_thread_free_data=function(){return(at=i.__emscripten_thread_free_data=i.asm._emscripten_thread_free_data).apply(null,arguments)},rt=(i.__emscripten_thread_exit=function(){return(i.__emscripten_thread_exit=i.asm._emscripten_thread_exit).apply(null,arguments)},i._memalign=function(){return(i._memalign=i.asm.memalign).apply(null,arguments)},i._emscripten_stack_set_limits=function(){return(rt=i._emscripten_stack_set_limits=i.asm.emscripten_stack_set_limits).apply(null,arguments)}),nt=i.stackSave=function(){return(nt=i.stackSave=i.asm.stackSave).apply(null,arguments)},st=i.stackRestore=function(){return(st=i.stackRestore=i.asm.stackRestore).apply(null,arguments)},it=i.stackAlloc=function(){return(it=i.stackAlloc=i.asm.stackAlloc).apply(null,arguments)},ot=(i.dynCall_iijjiiii=function(){return(i.dynCall_iijjiiii=i.asm.dynCall_iijjiiii).apply(null,arguments)},i.dynCall_jiji=function(){return(i.dynCall_jiji=i.asm.dynCall_jiji).apply(null,arguments)},i.__emscripten_allow_main_runtime_queued_calls=21456);function lt(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ut(e){if(!(0<ae))return x?(a(i),ee(),void postMessage({cmd:"loaded"})):(J(),void(0<ae||(i.setStatus?(i.setStatus("Running..."),setTimeout(function(){setTimeout(function(){i.setStatus("")},1),t()},1)):t())));function t(){We||(We=!0,i.calledRun=!0,R||(ee(),a(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),te()))}}if(i.cwrap=function(e,t,a,r){var n=(a=a||[]).every(function(e){return"number"===e});return"string"!==t&&n&&!r?F(e):function(){return O(e,t,a,arguments)}},i.keepRuntimeAlive=Q,i.PThread=me,i.PThread=me,i.wasmMemory=A,i.ExitStatus=lt,ne=function e(){We||ut(),We||(ne=e)},i.run=ut,i.preInit)for("function"==typeof i.preInit&&(i.preInit=[i.preInit]);0<i.preInit.length;)i.preInit.pop()();if(ut(),t&&(Ue={uncaughtException:process.listeners("uncaughtException").filter(function(e){return-1<!t.uncaughtException.indexOf(e)}),unhandledRejection:process.listeners("unhandledRejection").filter(function(e){return-1<!t.unhandledRejection.indexOf(e)})}),"undefined"!=typeof WasmBackendModule)Ve=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");Ve=e}return Ue&&(Ge=Ve._dispose,Ve._dispose=function(){Ge(),Ue.uncaughtException.forEach(function(e){process.removeListener("uncaughtException",e)}),Ue.unhandledRejection.forEach(function(e){process.removeListener("unhandledRejection",e)})}),e.ready});"object"==typeof e&&"object"==typeof t?t.exports=a:"function"==typeof define&&define.amd?define([],function(){return a}):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=a)}}),i$=zt({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var ie,a=(ie="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(ie=ie||__filename),function(e){var a,s,t,i=void 0!==(e=e||{})?e:{};i.ready=new Promise(function(e,t){a=e,s=t}),"undefined"!=typeof process&&process.listeners&&(t={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var r,o,n,l,u,d,p=Object.assign({},i),h="object"==typeof window,c="function"==typeof importScripts,f="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,m="";f?(m=c?dd().dirname(m)+"/":__dirname+"/",d=()=>{u||(l=tg(),u=dd())},r=function(e,t){return d(),e=u.normalize(e),l.readFileSync(e,t?void 0:"utf8")},n=e=>{e=r(e,!0);return e=!e.buffer?new Uint8Array(e):e},o=(e,a,r)=>{d(),e=u.normalize(e),l.readFile(e,function(e,t){e?r(e):a(t.buffer)})},1<process.argv.length&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(e){if(!(e instanceof ne))throw e}),process.on("unhandledRejection",function(e){throw e}),i.inspect=function(){return"[Emscripten Module object]"}):(h||c)&&(c?m=self.location.href:"undefined"!=typeof document&&document.currentScript&&(m=document.currentScript.src),m=0!==(m=ie?ie:m).indexOf("blob:")?m.substr(0,m.replace(/[?#].*/,"").lastIndexOf("/")+1):"",r=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},c&&(n=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,a)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):a()},r.onerror=a,r.send(null)});var g=i.print||console.log.bind(console),b=i.printErr||console.warn.bind(console);Object.assign(i,p),i.arguments&&i.arguments,i.thisProgram&&i.thisProgram,i.quit&&i.quit;var y;i.wasmBinary&&(y=i.wasmBinary);i.noExitRuntime;"object"!=typeof WebAssembly&&B("no native wasm support detected");var v,x=!1;function w(e){return i["_"+e]}function k(e,t,a,r){var n={string:function(e){var t,a=0;return null!=e&&0!==e&&(t=1+(e.length<<2),a=re(t),function(e,t,a,r){if(!(0<r))return;for(var n=a,s=a+r-1,i=0;i<e.length;++i){var o,l=e.charCodeAt(i);if(55296<=l&&l<=57343&&(o=e.charCodeAt(++i),l=65536+((1023&l)<<10)|1023&o),l<=127){if(s<=a)break;t[a++]=l}else if(l<=2047){if(s<=a+1)break;t[a++]=192|l>>6,t[a++]=128|63&l}else if(l<=65535){if(s<=a+2)break;t[a++]=224|l>>12,t[a++]=128|l>>6&63,t[a++]=128|63&l}else{if(s<=a+3)break;t[a++]=240|l>>18,t[a++]=128|l>>12&63,t[a++]=128|l>>6&63,t[a++]=128|63&l}}t[a]=0}(e,$,a,t)),a},array:function(e){var t=re(e.length);return T.set(e,t),t}};var e=w(e),s=[],i=0;if(r)for(var o=0;o<r.length;o++){var l=n[a[o]];l?(0===i&&(i=te()),s[o]=l(r[o])):s[o]=r[o]}var u,e=e.apply(null,s);return u=e,0!==i&&ae(i),u=u,e="string"===t?C(u):"boolean"===t?Boolean(u):u}var I="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function S(e,t,a){for(var r=t+a,n=t;e[n]&&!(r<=n);)++n;if(16<n-t&&e.subarray&&I)return I.decode(e.subarray(t,n));for(var s="";t<n;){var i,o,l=e[t++];128&l?(i=63&e[t++],192!=(224&l)?(o=63&e[t++],(l=224==(240&l)?(15&l)<<12|i<<6|o:(7&l)<<18|i<<12|o<<6|63&e[t++])<65536?s+=String.fromCharCode(l):(o=l-65536,s+=String.fromCharCode(55296|o>>10,56320|1023&o))):s+=String.fromCharCode((31&l)<<6|i)):s+=String.fromCharCode(l)}return s}function C(e,t){return e?S($,e,t):""}var N,T,$,_;"undefined"!=typeof TextDecoder&&new TextDecoder("utf-16le");function A(e){N=e,i.HEAP8=T=new Int8Array(e),i.HEAP16=new Int16Array(e),i.HEAP32=_=new Int32Array(e),i.HEAPU8=$=new Uint8Array(e),i.HEAPU16=new Uint16Array(e),i.HEAPU32=new Uint32Array(e),i.HEAPF32=new Float32Array(e),i.HEAPF64=new Float64Array(e)}i.INITIAL_MEMORY;var E,R=[],F=[],O=[];function M(){if(i.preRun)for("function"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;)e=i.preRun.shift(),R.unshift(e);var e;H(R)}function D(){if(i.postRun)for("function"==typeof i.postRun&&(i.postRun=[i.postRun]);i.postRun.length;)e=i.postRun.shift(),O.unshift(e);var e;H(O)}var z=0,L=null,P=null;function B(e){i.onAbort&&i.onAbort(e),b(e="Aborted("+e+")"),x=!0,e+=". Build with -s ASSERTIONS=1 for more info.";e=new WebAssembly.RuntimeError(e);throw s(e),e}i.preloadedImages={},i.preloadedAudios={};var W,U;function V(e){return e.startsWith("data:application/octet-stream;base64,")}function G(e){return e.startsWith("file://")}function j(e){try{if(e==W&&y)return new Uint8Array(y);if(n)return n(e);throw"both async and sync fetching of the wasm failed"}catch(e){B(e)}}function H(e){for(;0<e.length;){var t,a=e.shift();"function"!=typeof a?"number"==typeof(t=a.func)?void 0===a.arg?X(t)():X(t)(a.arg):t(void 0===a.arg?null:a.arg):a(i)}}V(W="tfjs-backend-wasm.wasm")||(U=W,W=i.locateFile?i.locateFile(U,m):m+U);var q=[];function X(e){var t=q[e];return t||(e>=q.length&&(q.length=e+1),q[e]=t=E.get(e)),t}var K={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var a=K.buffers[e];0===t||10===t?((1===e?g:b)(S(a,0)),a.length=0):a.push(t)},varargs:void 0,get:function(){return K.varargs+=4,_[K.varargs-4>>2]},getStr:function(e){return C(e)},get64:function(e,t){return e}};var Y,Z,Q,J,ee={abort:function(){B("")},emscripten_memcpy_big:function(e,t,a){$.copyWithin(e,t,t+a)},emscripten_resize_heap:function(e){var t=$.length;if(2147483648<(e>>>=0))return!1;for(var a,r=1;r<=4;r*=2){var n=t*(1+.2/r),n=Math.min(n,e+100663296);if(function(e){try{return v.grow(e-N.byteLength+65535>>>16),A(v.buffer),1}catch(e){}}(Math.min(2147483648,(0<(a=Math.max(e,n))%(n=65536)&&(a+=n-a%n),a))))return!0}return!1},fd_close:function(e){return 0},fd_seek:function(e,t,a,r,n){},fd_write:function(e,t,a,r){for(var n=0,s=0;s<a;s++){var i=_[t>>2],o=_[t+4>>2];t+=8;for(var l=0;l<o;l++)K.printChar(e,$[i+l]);n+=o}return _[r>>2]=n,0},setTempRet0:function(e){0}},te=(function(){var t={env:ee,wasi_snapshot_preview1:ee};function a(e,t){e=e.exports;i.asm=e,A((v=i.asm.memory).buffer),E=i.asm.__indirect_function_table,e=i.asm.__wasm_call_ctors,F.unshift(e),z--,i.monitorRunDependencies&&i.monitorRunDependencies(z),0==z&&(null!==L&&(clearInterval(L),L=null),P)&&(e=P,P=null,e())}function r(e){a(e.instance)}function n(e){return function(){if(!y&&(h||c)){if("function"==typeof fetch&&!G(W))return fetch(W,{credentials:"same-origin"}).then(function(e){if(!e.ok)throw"failed to load wasm binary file at '"+W+"'";return e.arrayBuffer()}).catch(function(){return j(W)});if(o)return new Promise(function(t,e){o(W,function(e){t(new Uint8Array(e))},e)})}return Promise.resolve().then(function(){return j(W)})}().then(function(e){return WebAssembly.instantiate(e,t)}).then(function(e){return e}).then(e,function(e){b("failed to asynchronously prepare wasm: "+e),B(e)})}if(z++,i.monitorRunDependencies&&i.monitorRunDependencies(z),i.instantiateWasm)try{return i.instantiateWasm(t,a)}catch(e){return b("Module.instantiateWasm callback failed with error: "+e)}(y||"function"!=typeof WebAssembly.instantiateStreaming||V(W)||G(W)||"function"!=typeof fetch?n(r):fetch(W,{credentials:"same-origin"}).then(function(e){return WebAssembly.instantiateStreaming(e,t).then(r,function(e){return b("wasm streaming compile failed: "+e),b("falling back to ArrayBuffer instantiation"),n(r)})})).catch(s)}(),i.___wasm_call_ctors=function(){return(i.___wasm_call_ctors=i.asm.__wasm_call_ctors).apply(null,arguments)},i._init=function(){return(i._init=i.asm.init).apply(null,arguments)},i._init_with_threads_count=function(){return(i._init_with_threads_count=i.asm.init_with_threads_count).apply(null,arguments)},i._get_threads_count=function(){return(i._get_threads_count=i.asm.get_threads_count).apply(null,arguments)},i._register_tensor=function(){return(i._register_tensor=i.asm.register_tensor).apply(null,arguments)},i._dispose_data=function(){return(i._dispose_data=i.asm.dispose_data).apply(null,arguments)},i._dispose=function(){return(i._dispose=i.asm.dispose).apply(null,arguments)},i._Abs=function(){return(i._Abs=i.asm.Abs).apply(null,arguments)},i._Add=function(){return(i._Add=i.asm.Add).apply(null,arguments)},i._AddN=function(){return(i._AddN=i.asm.AddN).apply(null,arguments)},i._All=function(){return(i._All=i.asm.All).apply(null,arguments)},i._Any=function(){return(i._Any=i.asm.Any).apply(null,arguments)},i._ArgMax=function(){return(i._ArgMax=i.asm.ArgMax).apply(null,arguments)},i._AvgPool=function(){return(i._AvgPool=i.asm.AvgPool).apply(null,arguments)},i._BatchMatMul=function(){return(i._BatchMatMul=i.asm.BatchMatMul).apply(null,arguments)},i._Ceil=function(){return(i._Ceil=i.asm.Ceil).apply(null,arguments)},i._ClipByValue=function(){return(i._ClipByValue=i.asm.ClipByValue).apply(null,arguments)},i._Conv2D=function(){return(i._Conv2D=i.asm.Conv2D).apply(null,arguments)},i._Conv2DBackpropInput=function(){return(i._Conv2DBackpropInput=i.asm.Conv2DBackpropInput).apply(null,arguments)},i._Cos=function(){return(i._Cos=i.asm.Cos).apply(null,arguments)},i._Cosh=function(){return(i._Cosh=i.asm.Cosh).apply(null,arguments)},i._CropAndResize=function(){return(i._CropAndResize=i.asm.CropAndResize).apply(null,arguments)},i._Cumprod=function(){return(i._Cumprod=i.asm.Cumprod).apply(null,arguments)},i._Cumsum=function(){return(i._Cumsum=i.asm.Cumsum).apply(null,arguments)},i._DepthToSpace=function(){return(i._DepthToSpace=i.asm.DepthToSpace).apply(null,arguments)},i._DepthwiseConv2dNative=function(){return(i._DepthwiseConv2dNative=i.asm.DepthwiseConv2dNative).apply(null,arguments)},i._Elu=function(){return(i._Elu=i.asm.Elu).apply(null,arguments)},i._Equal=function(){return(i._Equal=i.asm.Equal).apply(null,arguments)},i._Exp=function(){return(i._Exp=i.asm.Exp).apply(null,arguments)},i._FlipLeftRight=function(){return(i._FlipLeftRight=i.asm.FlipLeftRight).apply(null,arguments)},i._Floor=function(){return(i._Floor=i.asm.Floor).apply(null,arguments)},i._FloorDiv=function(){return(i._FloorDiv=i.asm.FloorDiv).apply(null,arguments)},i._FusedBatchNorm=function(){return(i._FusedBatchNorm=i.asm.FusedBatchNorm).apply(null,arguments)},i._FusedConv2D=function(){return(i._FusedConv2D=i.asm.FusedConv2D).apply(null,arguments)},i._FusedDepthwiseConv2D=function(){return(i._FusedDepthwiseConv2D=i.asm.FusedDepthwiseConv2D).apply(null,arguments)},i._Gather=function(){return(i._Gather=i.asm.Gather).apply(null,arguments)},i._GatherNd=function(){return(i._GatherNd=i.asm.GatherNd).apply(null,arguments)},i._Greater=function(){return(i._Greater=i.asm.Greater).apply(null,arguments)},i._GreaterEqual=function(){return(i._GreaterEqual=i.asm.GreaterEqual).apply(null,arguments)},i._LeakyRelu=function(){return(i._LeakyRelu=i.asm.LeakyRelu).apply(null,arguments)},i._Less=function(){return(i._Less=i.asm.Less).apply(null,arguments)},i._LessEqual=function(){return(i._LessEqual=i.asm.LessEqual).apply(null,arguments)},i._Log=function(){return(i._Log=i.asm.Log).apply(null,arguments)},i._LogicalAnd=function(){return(i._LogicalAnd=i.asm.LogicalAnd).apply(null,arguments)},i._Max=function(){return(i._Max=i.asm.Max).apply(null,arguments)},i._MaxPool=function(){return(i._MaxPool=i.asm.MaxPool).apply(null,arguments)},i._Maximum=function(){return(i._Maximum=i.asm.Maximum).apply(null,arguments)},i._Mean=function(){return(i._Mean=i.asm.Mean).apply(null,arguments)},i._Min=function(){return(i._Min=i.asm.Min).apply(null,arguments)},i._Minimum=function(){return(i._Minimum=i.asm.Minimum).apply(null,arguments)},i._MirrorPad=function(){return(i._MirrorPad=i.asm.MirrorPad).apply(null,arguments)},i._Multiply=function(){return(i._Multiply=i.asm.Multiply).apply(null,arguments)},i._Neg=function(){return(i._Neg=i.asm.Neg).apply(null,arguments)},i._NonMaxSuppressionV3=function(){return(i._NonMaxSuppressionV3=i.asm.NonMaxSuppressionV3).apply(null,arguments)},i._NonMaxSuppressionV4=function(){return(i._NonMaxSuppressionV4=i.asm.NonMaxSuppressionV4).apply(null,arguments)},i._NonMaxSuppressionV5=function(){return(i._NonMaxSuppressionV5=i.asm.NonMaxSuppressionV5).apply(null,arguments)},i._NotEqual=function(){return(i._NotEqual=i.asm.NotEqual).apply(null,arguments)},i._OneHot=function(){return(i._OneHot=i.asm.OneHot).apply(null,arguments)},i._PadV2=function(){return(i._PadV2=i.asm.PadV2).apply(null,arguments)},i._Pow=function(){return(i._Pow=i.asm.Pow).apply(null,arguments)},i._Prelu=function(){return(i._Prelu=i.asm.Prelu).apply(null,arguments)},i._Prod=function(){return(i._Prod=i.asm.Prod).apply(null,arguments)},i._RealDiv=function(){return(i._RealDiv=i.asm.RealDiv).apply(null,arguments)},i._Relu=function(){return(i._Relu=i.asm.Relu).apply(null,arguments)},i._Relu6=function(){return(i._Relu6=i.asm.Relu6).apply(null,arguments)},i._ResizeBilinear=function(){return(i._ResizeBilinear=i.asm.ResizeBilinear).apply(null,arguments)},i._Reverse=function(){return(i._Reverse=i.asm.Reverse).apply(null,arguments)},i._RotateWithOffset=function(){return(i._RotateWithOffset=i.asm.RotateWithOffset).apply(null,arguments)},i._Round=function(){return(i._Round=i.asm.Round).apply(null,arguments)},i._Rsqrt=function(){return(i._Rsqrt=i.asm.Rsqrt).apply(null,arguments)},i._ScatterNd=function(){return(i._ScatterNd=i.asm.ScatterNd).apply(null,arguments)},i._SelectV2=function(){return(i._SelectV2=i.asm.SelectV2).apply(null,arguments)},i._Sigmoid=function(){return(i._Sigmoid=i.asm.Sigmoid).apply(null,arguments)},i._Sin=function(){return(i._Sin=i.asm.Sin).apply(null,arguments)},i._Softmax=function(){return(i._Softmax=i.asm.Softmax).apply(null,arguments)},i._SparseFillEmptyRows=function(){return(i._SparseFillEmptyRows=i.asm.SparseFillEmptyRows).apply(null,arguments)},i._SparseReshape=function(){return(i._SparseReshape=i.asm.SparseReshape).apply(null,arguments)},i._SparseSegmentReduction=function(){return(i._SparseSegmentReduction=i.asm.SparseSegmentReduction).apply(null,arguments)},i._Sqrt=function(){return(i._Sqrt=i.asm.Sqrt).apply(null,arguments)},i._Square=function(){return(i._Square=i.asm.Square).apply(null,arguments)},i._SquaredDifference=function(){return(i._SquaredDifference=i.asm.SquaredDifference).apply(null,arguments)},i._Step=function(){return(i._Step=i.asm.Step).apply(null,arguments)},i._StridedSlice=function(){return(i._StridedSlice=i.asm.StridedSlice).apply(null,arguments)},i._Sub=function(){return(i._Sub=i.asm.Sub).apply(null,arguments)},i._Sum=function(){return(i._Sum=i.asm.Sum).apply(null,arguments)},i._Tan=function(){return(i._Tan=i.asm.Tan).apply(null,arguments)},i._Tanh=function(){return(i._Tanh=i.asm.Tanh).apply(null,arguments)},i._Tile=function(){return(i._Tile=i.asm.Tile).apply(null,arguments)},i._TopK=function(){return(i._TopK=i.asm.TopK).apply(null,arguments)},i._Transform=function(){return(i._Transform=i.asm.Transform).apply(null,arguments)},i._Transpose=function(){return(i._Transpose=i.asm.Transpose).apply(null,arguments)},i.__FusedMatMul=function(){return(i.__FusedMatMul=i.asm._FusedMatMul).apply(null,arguments)},i._malloc=function(){return(i._malloc=i.asm.malloc).apply(null,arguments)},i._free=function(){return(i._free=i.asm.free).apply(null,arguments)},i.___errno_location=function(){return(i.___errno_location=i.asm.__errno_location).apply(null,arguments)},i._emscripten_main_thread_process_queued_calls=function(){return(i._emscripten_main_thread_process_queued_calls=i.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},i.stackSave=function(){return(te=i.stackSave=i.asm.stackSave).apply(null,arguments)}),ae=i.stackRestore=function(){return(ae=i.stackRestore=i.asm.stackRestore).apply(null,arguments)},re=i.stackAlloc=function(){return(re=i.stackAlloc=i.asm.stackAlloc).apply(null,arguments)};i.dynCall_iijjiiii=function(){return(i.dynCall_iijjiiii=i.asm.dynCall_iijjiiii).apply(null,arguments)},i.dynCall_jiji=function(){return(i.dynCall_jiji=i.asm.dynCall_jiji).apply(null,arguments)};function ne(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function se(e){function t(){Y||(Y=!0,i.calledRun=!0,x||(H(F),a(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),D()))}0<z||(M(),0<z)||(i.setStatus?(i.setStatus("Running..."),setTimeout(function(){setTimeout(function(){i.setStatus("")},1),t()},1)):t())}if(i.cwrap=function(e,t,a,r){var n=(a=a||[]).every(function(e){return"number"===e});return"string"!==t&&n&&!r?w(e):function(){return k(e,t,a,arguments)}},P=function e(){Y||se(),Y||(P=e)},i.run=se,i.preInit)for("function"==typeof i.preInit&&(i.preInit=[i.preInit]);0<i.preInit.length;)i.preInit.pop()();if(se(),t&&(Z={uncaughtException:process.listeners("uncaughtException").filter(function(e){return-1<!t.uncaughtException.indexOf(e)}),unhandledRejection:process.listeners("unhandledRejection").filter(function(e){return-1<!t.unhandledRejection.indexOf(e)})}),void 0!==e)Q=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");Q=WasmBackendModuleThreadedSimd}return Z&&(J=Q._dispose,Q._dispose=function(){J(),Z.uncaughtException.forEach(function(e){process.removeListener("uncaughtException",e)}),Z.unhandledRejection.forEach(function(e){process.removeListener("unhandledRejection",e)})}),e.ready});"object"==typeof e&&"object"==typeof t?t.exports=a:"function"==typeof define&&define.amd?define([],function(){return a}):"object"==typeof e&&(e.WasmBackendModule=a)}}),o$=1e-7,u$=1e-4,Ud=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},nl=class{refCount(e){return On("refCount")}incRef(e){return On("incRef")}timerAvailable(){return!0}time(e){return On("time")}read(e){return On("read")}readSync(e){return On("readSync")}readToGPU(e,t){return On("readToGPU")}numDataIds(){return On("numDataIds")}disposeData(e,t){return On("disposeData")}write(e,t,a){return On("write")}move(e,t,a,r,n){return On("move")}memory(){return On("memory")}floatPrecision(){return On("floatPrecision")}epsilon(){return 32===this.floatPrecision()?o$:u$}dispose(){return On("dispose")}};function On(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Uw(e){let t=e.length,a;for(;0<t;)a=Math.random()*t|0,t--,pd(e,t,a)}function l$(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let a=e.length,r;for(;0<a;)r=Math.random()*a|0,a--,pd(e,a,r),pd(t,a,r)}function Vu(e,t,a){return Math.max(e,Math.min(t,a))}function c$(e){return e%2==0?e:e+1}function pd(e,t,a){var r=e[t];e[t]=e[a],e[a]=r}function d$(t){let a=0;for(let e=0;e<t.length;e++)a+=t[e];return a}function p$(e,t){var a=Math.random();return t*a+(1-a)*e}function h$(t,a){let r=0;for(let e=0;e<t.length;e++){var n=Number(t[e])-Number(a[e]);r+=n*n}return r}function O(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function pn(e,t,a=""){O(kr(e,t),()=>a+` Shapes ${e} and ${t} must match`)}function wa(e){O(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function sa(t,a=[],r=!1){if(null==a&&(a=[]),Array.isArray(t)||Qt(t)&&!r)for(let e=0;e<t.length;++e)sa(t[e],a,r);else a.push(t);return a}function pt(t){if(0===t.length)return 1;let a=t[0];for(let e=1;e<t.length;e++)a*=t[e];return a}function f$(e){return 0===e.length}function kr(t,a){if(t===a)return!0;if(null==t||null==a||t.length!==a.length)return!1;for(let e=0;e<t.length;e++)if(t[e]!==a[e])return!1;return!0}function Yi(e){return e%1==0}function m$(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;e=Math.exp(2*e);return(e-1)/(e+1)}function g$(e){var t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function b$(t){let a=new Uint32Array(t);for(let e=0;e<t;++e)a[e]=e;return Uw(a),a}function zu(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function y$(s,i=e=>0,o){return new Promise((t,a)=>{let r=0,n=()=>{var e;s()?t():(r++,e=i(r),null!=o&&r>=o?a():setTimeout(n,e))};n()})}function v$(t,e){let a=1,r=-1;for(let e=0;e<t.length;++e)if(0<=t[e])a*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(0<e&&e!==a)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===a)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%a!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${a}`);let n=t.slice();return n[r]=e/a,n}function ts(e,t){let a=t.length;return O((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-a&&e<a),()=>`All values in axis param must be in range [-${a}, ${a}) but got axis ${e}`),O(e.every(e=>Yi(e)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?a+e:e)}function Gw(t,e){let a=[],r=[],n=null!=e&&Array.isArray(e)&&0===e.length,s=null==e||n?null:ts(e,t).sort(),i=0;for(let e=0;e<t.length;++e){if(null!=s){if(s[i]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==s[i]||s[i]>e)&&1===t[e]&&(a.push(t[e]),r.push(e)),s[i]<=e&&i++}1!==t[e]&&(a.push(t[e]),r.push(e))}return{newShape:a,keptDims:r}}function Hw(e,t){let a=null;if(null==e||"float32"===e)a=new Float32Array(t);else if("int32"===e)a=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);a=new Uint8Array(t)}return a}function qw(e,t){let a=null;if(null==e||"float32"===e)a=new Float32Array(t);else if("int32"===e)a=new Int32Array(t);else if("bool"===e)a=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);a=new Array(t)}return a}function jw(t,a){for(let e=0;e<t.length;e++){var r=t[e];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${a} being uploaded contains ${r}.`)}}function Kw(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function x$(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Qt(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Xf(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Xw(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function ir(e){return"string"==typeof e||e instanceof String}function Yw(e){return"boolean"==typeof e}function Qw(e){return"number"==typeof e}function Gd(e){return Array.isArray(e)?Gd(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Qw(e)?"float32":ir(e)?"string":Yw(e)?"bool":"float32"}function hr(e){return!!(e&&e.constructor&&e.call&&e.apply)}function hd(t,a){for(let e=a;e<t;++e)if(t%e==0)return e;return t}function ao(t){var a=t.length;if(a<2)return[];let r=new Array(a-1);r[a-2]=t[a-1];for(let e=a-3;0<=e;--e)r[e]=r[e+1]*t[e+1];return r}function Zw(n,e,s,i=!1){let o=new Array;if(1===e.length){var t=e[0]*(i?2:1);for(let e=0;e<t;e++)o[e]=s[n+e]}else{let t=e[0],a=e.slice(1),r=a.reduce((e,t)=>e*t)*(i?2:1);for(let e=0;e<t;e++)o[e]=Zw(n+e*r,a,s,i)}return o}function Hi(e,t,a=!1){if(0===e.length)return t[0];var r=e.reduce((e,t)=>e*t)*(a?2:1);if(0==r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${a?" for a complex tensor":""}.`);return Zw(0,e,t,a)}function ng(e,t){let a=Hd(e,t);for(let e=0;e<a.length;e++)a[e]=1;return a}function Hd(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function w$(e,t){var a=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return Hi(e,new Float32Array(a));if("int32"===t)return Hi(e,new Int32Array(a));if("bool"===t)return Hi(e,new Uint8Array(a));throw new Error(`Unknown data type ${t}`)}function sg(t){t.forEach(e=>{O(Number.isInteger(e)&&0<=e,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function k$(t,e,a){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=a[e]*t[e];return r}function I$(t,e,a){if(0===e)return[];if(1===e)return[t];let r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/a[e]),t-=r[e]*a[e];return r[r.length-1]=t,r}function rg(e){return e&&e.then&&"function"==typeof e.then}var tx="tfjsflags",S$=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=C$,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,a){this.flagRegistry[e]={evaluationFn:t,setHook:a},null!=this.urlFlags[e]&&(a=this.urlFlags[e],X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${a}.`),this.set(e,a))}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];var t=this.evaluateFlag(e);if(rg(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0!==this.global&&void 0!==this.global.location&&void 0!==this.global.location.search){let e=this.getQueryParams(this.global.location.search);tx in e&&e[tx].split(",").forEach(e=>{var[t,e]=e.split(":");this.urlFlags[t]=T$(t,e)})}}};function C$(e){let a={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...t)=>(N$(a,t[0],t[1]),t.join("="))),a}function N$(e,t,a){e[decodeURIComponent(t)]=decodeURIComponent(a||"")}function T$(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function X(){return Jw}var Df,Jw=null;function $$(e){Jw=e}function ek(){if(null==Df){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Df=e}return Df}function _$(){let e=ek();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}function ag(e,t){let a=_$();if(a.has(e))return a.get(e);t=t();return a.set(e,t),a.get(e)}var io="Abs",sl="Acos",rl="Acosh",Ir="Add",ka="AddN",al="All",il="Any",Ia="ArgMax",ol="ArgMin",ul="Asin",ll="Asinh",cl="Atan",dl="Atanh",pl="Atan2",Sa="AvgPool",ig="AvgPoolGrad",qd="AvgPool3D",og="AvgPool3DGrad",Ca="BatchMatMul",oo="BatchToSpaceND",ug="Bincount",A$="BroadcastTo",lg="BroadcastArgs",Na="Cast",Ta="Ceil",Sr="ClipByValue",jd="Complex",Kd="ComplexAbs",uo="Concat",$a="Conv2D",cg="Conv2DBackpropFilter",_a="Conv2DBackpropInput",Xd="Conv3D",dg="Conv3DBackpropFilterV2",pg="Conv3DBackpropInputV2",Aa="Cos",Ea="Cosh",hl="Cumprod",lo="Cumsum",co="CropAndResize",hg="DenseBincount",po="DepthToSpace",Ra="DepthwiseConv2dNative",fg="DepthwiseConv2dNativeBackpropFilter",mg="DepthwiseConv2dNativeBackpropInput",gg="Diag",Yd="Dilation2D",Yf="Dilation2DBackpropInput",Qf="Dilation2DBackpropFilter",Da="RealDiv",Qd="Einsum",Fa="Elu",bg="EluGrad",fl="Erf",ho="Equal",Oa="Exp",fo="ExpandDims",mo="Expm1",yg="FFT",ml="Fill",go="FlipLeftRight",Pa="Floor",za="FloorDiv",Ma="FusedBatchNorm",bo="GatherV2",yo="GatherNd",vo="Greater",La="GreaterEqual",Ba="Identity",vg="IFFT",Zd="Imag",gl="IsFinite",bl="IsInf",yl="IsNan",Va="LeakyRelu",xo="Less",wo="LessEqual",xg="LinSpace",Wa="Log",vl="Log1p",ko="LogicalAnd",xl="LogicalNot",Jd="LogicalOr",E$="LogSoftmax",ep="LRN",wg="LRNGrad",Ua="Max",Ga="Maximum",Ha="MaxPool",kg="MaxPoolGrad",tp="MaxPool3D",Ig="MaxPool3DGrad",Sg="MaxPoolWithArgmax",qa="Mean",ja="Min",Ka="Minimum",Xa="MirrorPad",wl="Mod",Cg="Multinomial",Ya="Multiply",Io="Neg",So="NotEqual",Co="NonMaxSuppressionV3",kl="NonMaxSuppressionV4",No="NonMaxSuppressionV5",To="OnesLike",$o="OneHot",_o="Pack",Qa="PadV2",$de="Pool",Za="Pow",Ja="Prelu",Ao="Prod",Il="Range",np="Real",Sl="Reciprocal",ei="Relu",Eo="Reshape",Cl="ResizeNearestNeighbor",Ng="ResizeNearestNeighborGrad",ti="ResizeBilinear",Tg="ResizeBilinearGrad",ni="Relu6",Ro="Reverse",Do="Round",si="Rsqrt",Fo="ScatterNd",Oo="Select",Nl="Selu",Po="Slice",ri="Sin",zo="Sinh",Tl="Sign",ai="Sigmoid",$l="Softplus",ii="Sqrt",oi="Sum",Mo="SpaceToBatchND",Lo="SplitV",ui="Softmax",sp="SparseFillEmptyRows",_l="SparseReshape",rp="SparseSegmentMean",ap="SparseSegmentSum",ip="SparseToDense",li="SquaredDifference",Al="Square",Bo="StridedSlice",op="StringNGrams",$g="StringSplit",_g="StringToHashBucketFast",ci="Sub",Vo="Tan",di="Tanh",Cr="Tile",Wo="TopK",Uo="Transform",pi="Transpose",Ag="Unique",Go="Unpack",up="UnsortedSegmentSum",Ho="ZerosLike",hi="Step",fd="FromPixels",qo="RotateWithOffset",ra="_FusedMatMul",aa="FusedConv2D",ia="FusedDepthwiseConv2D";function ar(...e){X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(...e)}function R$(...e){X().getBool("IS_TEST")||X().getBool("PROD")||console.log(...e)}var Qi=ag("kernelRegistry",()=>new Map),Wu=ag("gradRegistry",()=>new Map);function Zf(e,t){t=Eg(e,t);return Qi.get(t)}function nx(e){return Wu.get(e)}function Jf(r){let n=Qi.entries(),s=[];for(;;){var{done:i,value:o}=n.next();if(i)break;let[e,t]=o,[a]=e.split("_");a===r&&s.push(t)}return s}function El(e){var{kernelName:t,backendName:a}=e,r=Eg(t,a);Qi.has(r)&&ar(`The kernel '${t}' for backend '${a}' is already registered`),Qi.set(r,e)}function D$(e){var t=e["kernelName"];Wu.has(t)&&X().getBool("DEBUG")&&ar(`Overriding the gradient for '${t}'`),Wu.set(t,e)}function _de(e,t){var a=Eg(e,t);if(!Qi.has(a))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Qi.delete(a)}function Ade(e){if(!Wu.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Wu.delete(e)}function Ede(e,t){Jf(e).forEach(e=>{El(Object.assign({},e,{backendName:t}))})}function Eg(e,t){return`${t}_${e}`}var w={};Ae(w,{arraysEqual:()=>kr,assert:()=>O,assertNonNegativeIntegerDimensions:()=>sg,assertNonNull:()=>wa,assertShapesMatch:()=>pn,bytesFromStringArray:()=>Xw,bytesPerElement:()=>Xf,checkConversionForErrors:()=>jw,clamp:()=>Vu,computeStrides:()=>ao,createScalarValue:()=>L$,createShuffledIndices:()=>b$,decodeString:()=>md,distSquared:()=>h$,encodeString:()=>Dl,fetch:()=>V$,fingerPrint64:()=>M$,flatten:()=>sa,getArrayFromDType:()=>qw,getTypedArrayFromDType:()=>Hw,hasEncodingLoss:()=>x$,hexToLong:()=>Rl,indexToLoc:()=>I$,inferDtype:()=>Gd,inferFromImplicitShape:()=>v$,isBoolean:()=>Yw,isFunction:()=>hr,isInt:()=>Yi,isNumber:()=>Qw,isPromise:()=>rg,isScalarShape:()=>f$,isString:()=>ir,isTypedArray:()=>Qt,isValidDtype:()=>Kw,locToIndex:()=>k$,makeOnesTypedArray:()=>ng,makeZerosNestedTypedArray:()=>w$,makeZerosTypedArray:()=>Hd,nearestDivisor:()=>hd,nearestLargerEven:()=>c$,now:()=>Uu,parseAxisParam:()=>ts,randUniform:()=>p$,repeatedTry:()=>y$,rightPad:()=>zu,shuffle:()=>Uw,shuffleCombo:()=>l$,sizeFromShape:()=>pt,sizeToSquarishShape:()=>g$,squeezeShape:()=>Gw,sum:()=>d$,swap:()=>pd,tanh:()=>m$,toNestedArray:()=>Hi,toTypedArray:()=>lp});var sx=xa(HT()),qr=sx.default||sx;function Rl(e){return qr.fromString(e,!0,16)}var tk=Rl("c3a5c85c97cb3127"),Gr=Rl("b492b66fbe98f273"),on=Rl("9ae16a3b2f90404f");function em(e){return e.xor(e.shru(47))}function nk(e,t,a){a=e.slice(t,t+a);return qr.fromBytes(Array.from(a),!0,!0)}function lt(e,t){return nk(e,t,8)}function rx(e,t){return nk(e,t,4)}function Lt(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function ur(e,t,a=Rl("9ddfea08eb382d69")){let r=e.xor(t).mul(a);r=r.xor(r.shru(47));let n=t.xor(r).mul(a);return n=n.xor(n.shru(47)),n=n.mul(a),n}function F$(e,t,a,r,n,s){n=n.add(e),s=Lt(s.add(n).add(r),21);e=n;return n=(n=n.add(t)).add(a),s=s.add(Lt(n,44)),[n.add(r),s.add(e)]}function Vc(e,t,a,r){return F$(lt(e,t),lt(e,t+8),lt(e,t+16),lt(e,t+24),a,r)}function O$(a,r=a.length){if(8<=r){var e=on.add(2*r),t=lt(a,0).add(on),n=lt(a,r-8);return ur(Lt(n,37).mul(e).add(t),Lt(t,25).add(n).mul(e),e)}if(4<=r){let e=on.add(2*r),t=rx(a,0);return ur(t.shl(3).add(r),rx(a,r-4),e)}if(0<r){n=a[0],e=a[r>>1],r=r+(a[r-1]<<2);return em(on.mul(n+(e<<8)).xor(tk.mul(r))).mul(on)}return on}function P$(e,t=e.length){let a=on.add(2*t),r=lt(e,0).mul(Gr),n=lt(e,8),s=lt(e,t-8).mul(a),i=lt(e,t-16).mul(on);return ur(Lt(r.add(n),43).add(Lt(s,30)).add(i),r.add(Lt(n.add(on),18)).add(s),a)}function z$(e,t=e.length){let a=on.add(2*t),r=lt(e,0).mul(on),n=lt(e,8),s=lt(e,t-8).mul(a),i=lt(e,t-16).mul(on),o=Lt(r.add(n),43).add(Lt(s,30)).add(i),l=ur(o,r.add(Lt(n.add(on),18)).add(s),a),u=lt(e,16).mul(a),d=lt(e,24),p=o.add(lt(e,t-32)).mul(a),h=l.add(lt(e,t-24)).mul(a);return ur(Lt(u.add(d),43).add(Lt(p,30)).add(h),u.add(Lt(d.add(r),18)).add(p),a)}function M$(e,t=e.length){let a=qr.fromNumber(81,!0);if(t<=32)return(t<=16?O$:P$)(e,t);if(t<=64)return z$(e,t);let r=a,n=a.mul(Gr).add(113),s=em(n.mul(on).add(113)).mul(on),i=[qr.UZERO,qr.UZERO],o=[qr.UZERO,qr.UZERO];r=r.mul(on).add(lt(e,0));let l=0,u=64*(t-1>>6),d=u+(t-1&63)-63;for(;r=Lt(r.add(n).add(i[0]).add(lt(e,l+8)),37).mul(Gr),n=Lt(n.add(i[1]).add(lt(e,l+48)),42).mul(Gr),r=r.xor(o[1]),n=n.add(i[0]).add(lt(e,l+40)),s=Lt(s.add(o[0]),33).mul(Gr),i=Vc(e,l,i[1].mul(Gr),r.add(o[0])),o=Vc(e,l+32,s.add(o[1]),n.add(lt(e,l+16))),[s,r]=[r,s],l+=64,l!==u;);var p=Gr.add(s.and(255).shl(1));return l=d,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Lt(r.add(n).add(i[0]).add(lt(e,l+8)),37).mul(p),n=Lt(n.add(i[1]).add(lt(e,l+48)),42).mul(p),r=r.xor(o[1].mul(9)),n=n.add(i[0].mul(9).add(lt(e,l+40))),s=Lt(s.add(o[0]),33).mul(p),i=Vc(e,l,i[1].mul(p),r.add(o[0])),o=Vc(e,l+32,s.add(o[1]),n.add(lt(e,l+16))),[s,r]=[r,s],ur(ur(i[0],o[0],p).add(em(n).mul(tk)).add(s),ur(i[1],o[1],p).add(r),p)}function L$(e,t){return"string"===t?Dl(e):lp([e],t)}function B$(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}function lp(a,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(a)&&(a=sa(a)),X().getBool("DEBUG")&&jw(a,e),B$(a,e))return a;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(a);if("int32"===e)return new Int32Array(a);if("bool"!==e)throw new Error(`Unknown data type ${e}`);{let t=new Uint8Array(a.length);for(let e=0;e<t.length;++e)0!==Math.round(a[e])&&(t[e]=1);return t}}function Uu(){return X().platform.now()}function V$(e,t){return X().platform.fetch(e,t)}function Dl(e,t="utf-8"){return t=t||"utf-8",X().platform.encode(e,t)}function md(e,t="utf-8"){return t=t||"utf-8",X().platform.decode(e,t)}var W$=class{constructor(e,t){this.backendTimer=e,null==(this.logger=t)&&(this.logger=new G$)}profileKernel(a,e,t){let r,n=()=>{r=t()},s,i=Uu();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(n);else{n();for(var o of r)o.dataSync();s=Promise.resolve({kernelMs:Uu()-i})}if(X().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<r.length;e++){let t=r[e];t.data().then(e=>{U$(e,t.dtype,a)})}return{kernelName:a,outputs:r,inputs:e,timeMs:s.then(e=>e.kernelMs),extraInfo:s.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:a,outputs:t,timeMs:r,inputs:n,extraInfo:s}=e;t.forEach(t=>{Promise.all([t.data(),r,s]).then(e=>{this.logger.logKernelProfile(a,t,e[0],e[1],n,e[2])})})}};function U$(t,e,a){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){var r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${a}'`),!0}return!1}var G$=class{logKernelProfile(e,t,a,r,n,s){let i="number"==typeof r?zu(`${r}ms`,9):r.error,o=zu(e,25),l=t.rank,u=t.size,d=zu(t.shape.toString(),14),p="";for(var h in n){var c,f=n[h];null!=f&&(f=(c=f.shape||t.shape).length,p+=`${h}: ${f}D ${0<f?c:""} `)}console.log(`%c${o}	%c${i}	%c${l}D ${d}	%c${u}	%c${p}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function H$(a,n,e){let s={},i={};for(let e=0;e<n.length;e++)s[n[e].id]=!0;for(let t=0;t<a.length;t++){let r=a[t],e=r.inputs;for(var o in e){let t=e[o],a=!1;for(let e=0;e<n.length;e++)if(s[t.id]){r.outputs.forEach(e=>s[e.id]=!0),a=!0,i[r.id]=!0;break}if(a)break}}let t={};t[e.id]=!0;let r={};for(let e=a.length-1;0<=e;e--){var l=a[e],u=l.inputs;for(let e=0;e<l.outputs.length;e++)if(t[l.outputs[e].id]){for(var d in u)t[u[d].id]=!0,r[l.id]=!0;break}}let p=[];for(let e=0;e<a.length;e++){var h=a[e];if(i[h.id]&&r[h.id]){let e={};for(var c in h.inputs){var f=h.inputs[c];s[f.id]&&(e[c]=f)}let t=Object.assign({},h);t.inputs=e,t.outputs=h.outputs,p.push(t)}}return p}function q$(n,s,i,o){for(let e=s.length-1;0<=e;e--){let t=s[e],a=[];if(t.outputs.forEach(e=>{e=n[e.id];null!=e?a.push(e):a.push(null)}),null==t.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${t.kernelName}.`);let r=t.gradient(a);for(let e in t.inputs){if(!(e in r))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(r)}.`);var l=i(()=>r[e]());if("float32"!==l.dtype)throw new Error(`Error in gradient for op ${t.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${l.dtype}'`);var u=t.inputs[e];if(!kr(l.shape,u.shape))throw new Error(`Error in gradient for op ${t.kernelName}. The gradient of input '${e}' has shape '${l.shape}', which does not match the shape of the input '${u.shape}'`);if(null==n[u.id])n[u.id]=l;else{let e=n[u.id];n[u.id]=o(e,l),e.dispose()}}}}var ax=20,Su=3,Ff=7;function j$(e,t,a,r){let n=ao(t),s=K$(e,t,a,n),i=t.length,o=ed(e,t,a,n,s),l=["Tensor"];return r&&(l.push(`  dtype: ${a}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(e=>"    "+e).join(`
`)),l.join(`
`)}function K$(e,t,a,r){let n=pt(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===a?_u(e):e;if(1<o)for(let e=0;e<n/s;e++){var u=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],$u(l[u+e],0,a).length)}return i}function $u(e,t,a){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(Ff))} + ${parseFloat(e[1].toFixed(Ff))}j`:ir(e)?`'${e}'`:"bool"===a?sk(e):parseFloat(e.toFixed(Ff)).toString(),zu(r,t)}function sk(e){return 0===e?"false":"true"}function ed(r,e,n,t,s,a=!0){let i="complex64"===n?2:1,o=e[0],l=e.length;if(0===l)return"complex64"!==n?"bool"===n?[sk(r[0])]:[r[0].toString()]:[$u(_u(r)[0],0,n)];if(1===l){if(o>ax){let e=Su*i,t=Array.from(r.slice(0,e)),a=Array.from(r.slice((o-Su)*i,o*i));return"complex64"===n&&(t=_u(t),a=_u(a)),["["+t.map((e,t)=>$u(e,s[t],n)).join(", ")+", ..., "+a.map((e,t)=>$u(e,s[o-Su+t],n)).join(", ")+"]"]}let e="complex64"===n?_u(r):Array.from(r);return["["+e.map((e,t)=>$u(e,s[t],n)).join(", ")+"]"]}let u=e.slice(1),d=t.slice(1),p=t[0]*i,h=[];if(o>ax){for(let e=0;e<Su;e++){var c=e*p;h.push(...ed(r.slice(c,c+p),u,n,d,s,!1))}h.push("...");for(let e=o-Su;e<o;e++){var f=e*p;h.push(...ed(r.slice(f,f+p),u,n,d,s,e===o-1))}}else for(let e=0;e<o;e++){var m=e*p;h.push(...ed(r.slice(m,m+p),u,n,d,s,e===o-1))}var g=2===l?",":"";h[0]="["+h[0]+g;for(let e=1;e<h.length-1;e++)h[e]=" "+h[e]+g;let b=`,
`;for(let e=2;e<l;e++)b+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(a?"":b),h}function _u(t){let a=[];for(let e=0;e<t.length;e+=2)a.push([t[e],t[e+1]]);return a}var Vt=class{constructor(e,t,a){if(this.dtype=t,this.shape=e.slice(),this.size=pt(e),null!=a){let e=a.length;O(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=a||qw(t,this.size),this.strides=ao(e)}set(e,...t){O((t=0===t.length?[0]:t).length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);var a=this.locToIndex(t);this.values[a]=e}get(...t){let e=0;for(var a of t=0===t.length?[0]:t){if(a<0||a>=this.shape[e]){a=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(a)}e++}let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=this.strides[e]*t[e];return this.values[r]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let a=t[t.length-1];for(let e=0;e<t.length-1;++e)a+=this.strides[e]*t[e];return a}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];let a=new Array(this.shape.length);for(let e=0;e<a.length-1;++e)a[e]=Math.floor(t/this.strides[e]),t-=a[e]*this.strides[e];return a[a.length-1]=t,a}get rank(){return this.shape.length}toTensor(){return cs().makeTensor(this.values,this.shape,this.dtype)}},cs=null,Wi=null,X$=null;function Y$(e){cs=e}function Q$(e){Wi=e}function Z$(e){X$=e}var et=class{constructor(e,t,a,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=pt(e),this.strides=ao(e),this.dataId=a,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){var e=await this.data();return Wi.buffer(this.shape,this.dtype,e)}bufferSync(){return Wi.buffer(this.shape,this.dtype,this.dataSync())}async array(){var e=await this.data();return Hi(this.shape,e,"complex64"===this.dtype)}arraySync(){return Hi(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();var t=cs().read(this.dataId);if("string"===this.dtype){let e=await t;try{return e.map(e=>md(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(e){return this.throwIfDisposed(),cs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=cs().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>md(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();var e=await cs().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(cs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Wi.print(this,e)}clone(){return this.throwIfDisposed(),Wi.clone(this)}toString(e=!1){return j$(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Wi.cast(this,e)}variable(e=!0,t,a){return this.throwIfDisposed(),cs().makeVariable(this,e,t,a)}};function J$(){return ag("Tensor",()=>et)}Object.defineProperty(et,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),J$();var gd=class extends et{constructor(e,t,a,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=a}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!kr(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);cs().disposeTensor(this),this.dataId=e.dataId,cs().incRef(this,null)}dispose(){cs().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(gd,Symbol.hasInstance,{value:e=>e instanceof et&&null!=e.assign&&e.assign instanceof Function});var _s={};Ae(_s,{assertTypesMatch:()=>uk,getTensorsInContainer:()=>Rg,isTensorInList:()=>n_,makeTypesMatch:()=>vt});var e_=(e=>(e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6",e))(e_||{}),rk=(e=>(e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64",e))(rk||{}),ak=(e=>(e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64",e))(ak||{}),ik=(e=>(e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64",e))(ik||{}),ok=(e=>(e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64",e))(ok||{}),t_={float32:ik,int32:rk,bool:ak,complex64:ok};function cn(e,t){if("string"!==e&&"string"!==t)return t_[e][t];if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}function cp(e){return cn(e,"int32")}function vt(e,t){if(e.dtype===t.dtype)return[e,t];var a=cn(e.dtype,t.dtype);return[e.cast(a),t.cast(a)]}function uk(e,t){O(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function n_(t,e){return e.some(e=>e.id===t.id)}function Rg(e){var t=[];return lk(e,t,new Set),t}function lk(e,t,a){if(null!=e)if(e instanceof et)t.push(e);else if(s_(e)){var r,n=e;for(r in n){var s=n[r];a.has(s)||(a.add(s),lk(s,t,a))}}}function s_(e){return Array.isArray(e)||"object"==typeof e}function Of(e){return null!=e.kernelName}var ix=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(var e in this.registeredVariables)this.registeredVariables[e].dispose()}},tm=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ix}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null==this.backendInstance){var t=this.getSortedBackends();for(let e=0;e<t.length;e++){var a=t[e];if(await this.initializeBackend(a).success)return void await this.setBackend(a)}throw new Error("Could not initialize any backends, all backend initializations failed.")}}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){var{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;var t=this.initializeBackend(e)["asyncInit"];if(t)return null}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,a=1){return e in this.registryFactory?(ar(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:a},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;var{success:t,asyncInit:a}=this.initializeBackend(e);if(!(a?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new W$(this.backendInstance),!0}setupRegisteredKernels(){Jf(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Jf(t).forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(r){let e=this.registryFactory[r];if(null==e)throw new Error(`Cannot initialize backend ${r}, no registration found.`);try{let a=e.factory();if(!a||a instanceof nl||"function"!=typeof a.then)return this.registry[r]=a,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,e=a.then(e=>!(t<this.pendingBackendInitId)&&(this.registry[r]=e,!(this.pendingBackendInit=null))).catch(e=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ar(`Initialization of backend ${r} failed`),ar(e.stack||e.message)),!1));return{success:this.pendingBackendInit=e,asyncInit:!0}}}catch(e){return ar(`Initialization of backend ${r} failed`),ar(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){var t=this.getSortedBackends();for(let e=0;e<t.length;e++){var a=t[e],{success:r,asyncInit:n}=this.initializeBackend(a);if(n||r)return{name:a,asyncInit:n}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let a=this.state.tensorInfo.get(t),r=a.backend,n=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),(a.backend=e).move(t,n,a.shape,a.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let a=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}let r;return this.scopedRun(()=>this.startScope(a),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,a){e();try{var r=a();return t(),r}catch(e){throw t(),e}}nextTensorId(){return tm.nextTensorId++}nextVariableId(){return tm.nextVariableId++}clone(e){var t=M.runKernel(Ba,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],e=>({x:()=>{return M.runKernel(Na,{x:e},{dtype:"float32"})}}),[],{}),t}runKernel(e,t,a){if(null==this.backendName&&this.backend,null==Zf(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:a})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,a){let r=this.backend.numDataIds(),n=0;a.forEach(e=>{n+="complex64"===e.dtype?3:1});a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-n-a;if(0<a)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,o=[],l=this.isTapeOn(),a=this.state.numBytes,r=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let u;null==this.backendName&&this.backend;let d,n=Of(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Of(e)){let{kernelName:r,inputs:n,attrs:s}=e;null==this.backendName&&this.backend;let i=Zf(r,this.backendName);O(null!=i,()=>`Cannot find registered kernel '${r}' for backend '${this.backendName}'`),u=()=>{var e=this.backend.numDataIds();d=i.kernelFunc({inputs:n,attrs:s,backend:this.backend});let t=Array.isArray(d)?d:[d];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,e,t);var a=t.map(e=>{if(null!=e.rank)return e;var{dataId:t,shape:a,dtype:e}=e;return this.makeTensorFromDataId(t,a,e)});return l&&(e=this.getTensorsForGradient(r,n,a),o=this.saveTensorsForBackwardMode(e)),a}}else{let a=e["forwardFunc"],r=e=>{l&&(o=e.map(e=>this.keep(this.clone(e))))};u=()=>{var e=this.backend.numDataIds();d=this.tidy(()=>a(this.backend,r));var t=Array.isArray(d)?d:[d];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(n,e,t),t}}let{inputs:s,attrs:i}=e,p=Of(e)?null:e.backwardsFunc,h;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{t=this.ENV.getBool("DEBUG")||this.state.profiling?(h=this.profiler.profileKernel(n,s,()=>u()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),h.outputs):u()}),l&&this.addTapeNode(n,s,t,p,o,i),this.state.profiling&&this.state.activeProfile.kernels.push({name:n,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-r,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(s).map(e=>null!=s[e]?s[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(d)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(r,n,s){r=nx(r);if(null==r)return[];{let e=r.inputsToSave||[],a=r.outputsToSave||[],t;t=r.saveAllInputs?(O(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),Object.keys(n).map(e=>n[e])):e.map(e=>n[e]);s=s.filter((e,t)=>a[t]);return t.concat(s)}}makeTensor(a,e,t,r){if(null==a)throw new Error("Values passed to engine.makeTensor() are null");r=r||this.backend;let n=a;"string"===(t=t||"float32")&&ir(a[0])&&(n=a.map(e=>Dl(e)));a=r.write(n,e,t),e=new et(e,t,a,this.nextTensorId());if(this.trackTensor(e,r),"string"===t){let e=this.state.tensorInfo.get(a),t=Xw(n);this.state.numBytes+=t-e.bytes,e.bytes=t}return e}makeTensorFromDataId(e,t,a,r){e=new et(t,a=a||"float32",e,this.nextTensorId());return this.trackTensor(e,r),e}makeVariable(e,t=!0,a,r){a=a||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));a=new gd(e,t,a,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let a=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(a=e.size*Xf(e.dtype)),this.state.numBytes+=a,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:a})),e instanceof gd||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(t){if(this.state.tensorInfo.has(t.dataId)){let e=this.state.tensorInfo.get(t.dataId);var a;this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype&&(a=t.size*Xf(t.dtype),this.state.numBytes-=a),e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}}disposeVariables(){for(var e in this.state.registeredVariables){e=this.state.registeredVariables[e];this.disposeVariable(e)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,0<this.state.numStringTensors&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;var t,a=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-a,this.state.activeProfile.newTensors=this.state.numTensors-r;for(t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return 0<this.state.gradientDepth&&0===this.state.kernelDepth}addTapeNode(e,t,a,r,n,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:a,saved:n},o=nx(e);null!=(r=null!=o?o.gradFunc:r)&&(i.gradient=e=>(e=e.map((e,t)=>{if(null!=e)return e;e=a[t],t=Hd(e.size,e.dtype);return this.makeTensor(t,e.shape,e.dtype)}),r(1<e.length?e:e[0],n,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=Rg(e),a=new Set(t.map(e=>e.id));for(let t=0;t<this.state.activeScope.track.length;t++){let e=this.state.activeScope.track[t];e.kept||a.has(e.id)||e.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,a,r,t=!1){if(O(0<a.length,()=>"gradients() received an empty list of xs."),null!=r&&"float32"!==r.dtype)throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);let n=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));O(n instanceof et,()=>"The result y returned by f() must be a tensor.");let s=H$(this.state.activeTape,a,n);if(!t&&0===s.length&&0<a.length)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let t={};t[n.id]=null==r?r_(n.shape):r,q$(t,s,e=>this.tidy(e),a_);var e=a.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(var t of e.saved)t.dispose()}),this.state.activeTape=null),{value:n,grads:e}})}customGrad(r){return O(hr(r),()=>"The f passed in customGrad(f) must be a function."),(...s)=>{O(s.every(e=>e instanceof et),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let i,a={};s.forEach((e,t)=>{a[t]=e});return this.runKernelFunc({forwardFunc:(e,t)=>(i=r(...s,t),O(i.value instanceof et,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),O(hr(i.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),i.value),backwardsFunc:(e,t)=>{let a=i.gradFunc(e,t),r=Array.isArray(a)?a:[a];O(r.length===s.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),O(r.every(e=>e instanceof et),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let n={};return r.forEach((e,t)=>{n[t]=()=>e}),n},inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Uu(),a=await this.backend.time(e);return a.wallMs=Uu()-t,a}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){for(var e in this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ix,this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},Dg=tm;function r_(e){var t=ng(pt(e),"float32");return M.makeTensor(t,e,"float32")}function ck(){let e=ek();var t;return null==e._tfengine&&(t=new S$(e),e._tfengine=new Dg(t)),$$(e._tfengine.ENV),Y$(()=>e._tfengine),e._tfengine}Dg.nextTensorId=0,Dg.nextVariableId=0;var M=ck();function a_(e,t){return M.runKernel(Ir,{a:e,b:t})}var nm,dp={};function i_(){return"undefined"!=typeof navigator&&null!=navigator}function o_(e){nm=e}function u_(t){if(void 0!==nm)return nm;if(t||i_()){if("ReactNative"===(t=t||navigator).product)return!0;let e=t.userAgent||t.vendor||("undefined"!=typeof window?window.opera:"");if(e)return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4));t=t;return t.userAgentData&&t.userAgentData.mobile}return!1}function dk(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}Ae(dp,{isBrowser:()=>dk,isMobile:()=>u_,mockIsMobile:()=>o_});var jn=X();function Rs(e,t){let a=e;if(Qt(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(a)||Qt(a)&&"string"!==t;)r.push(a.length),a=a[0];return Array.isArray(e)&&X().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&pk(e,r,[]),r}function pk(t,e,a){if(a=a||[],Array.isArray(t)||Qt(t)){O(0<e.length,()=>`Element arr[${a.join("][")}] should be a primitive, but is an array of ${t.length} elements`),O(t.length===e[0],()=>`Element arr[${a.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`);var r=e.slice(1);for(let e=0;e<t.length;++e)pk(t[e],r,a.concat(e))}else O(0===e.length,()=>`Element arr[${a.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`)}function ox(e,t,a,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${a}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function _(e,t,a,r="numeric"){if(e instanceof et)return ox(r,e.dtype,t,a),e;let n=Gd(e);if("string"!==n&&0<=["bool","int32","float32"].indexOf(r)&&(n=r),ox(r,n,t,a),null==e||!Qt(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){var s=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${a}' must be a Tensor or TensorLike, but got '${s}'`)}s=Rs(e,n);Qt(e)||Array.isArray(e)||(e=[e]);e="string"!==n?lp(e,n):sa(e,[],!0);return M.makeTensor(e,s,n)}function Gu(e,a,r,n="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${a} passed to ${r} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,t)=>_(e,`${a}[${t}]`,r,n))}jn.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),jn.registerFlag("IS_BROWSER",()=>dk()),jn.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),jn.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),jn.registerFlag("PROD",()=>!1),jn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>jn.getBool("DEBUG")),jn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),jn.registerFlag("IS_TEST",()=>!1),jn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),jn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),jn.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);var l_="__op";function L(e){var t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let a=t[0],r=e[a];a.endsWith("_")&&(a=a.substring(0,a.length-1)),a+=l_;e=(...e)=>{M.startScope(a);try{var t=r(...e);return rg(t)&&console.error("Cannot return a Promise inside of tidy."),M.endScope(t),t}catch(e){throw M.endScope(null),e}};return Object.defineProperty(e,"name",{value:a,configurable:!0}),e}function c_(e,t){e=_(e,"real","complex"),t=_(t,"imag","complex");return pn(e.shape,t.shape,`real and imag shapes, ${e.shape} and ${t.shape}, must match in call to tf.complex().`),M.runKernel(jd,{real:e,imag:t})}var oa=L({complex_:c_});function Nr(e,a,r,t){if("complex64"===(t=null==t?Gd(e):t))throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Qt(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=a){sg(a);let e=pt(a),t=pt(r);O(e===t,()=>`Based on the provided shape, [${a}], the tensor should have ${e} values but has ${t}`);for(let e=0;e<r.length;++e){var n=r[e],n=e!==r.length-1||n!==pt(a.slice(e));O(r[e]===a[e]||!n,()=>`Error creating a new Tensor. Inferred shape (${r}) does not match the provided shape (${a}). `)}}return Qt(e)||Array.isArray(e)||(e=[e]),a=a||r,e="string"!==t?lp(e,t):sa(e,[],!0),M.makeTensor(e,a,t)}function fs(e,t,a){return Nr(e,t,Rs(e,a),a)}var sm={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},bd=4;async function d_(r,n){let s=[],i=[],l=Array.isArray(r)?r.map(e=>e.name):Object.keys(r);for(let a=0;a<l.length;++a){let e=l[a],o=Array.isArray(r)?r[a].tensor:r[e];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${e}': ${o.dtype}`);let t={name:e,shape:o.shape,dtype:o.dtype};var u;"string"===o.dtype?(u=new Promise(async e=>{let t=await o.bytes(),a=t.reduce((e,t)=>e+t.length,0)+bd*t.length,r=new Uint8Array(a),n=0;for(let e=0;e<t.length;e++){var s=t[e],i=new Uint8Array(new Uint32Array([s.length]).buffer);r.set(i,n),n+=bd,r.set(s,n),n+=s.length}e(r)}),i.push(u)):i.push(o.data()),null!=n&&(t.group=n),s.push(t)}return{data:p_(await Promise.all(i)),specs:s}}function hk(a,e){let o={},r,l=0;for(var u of e){let n=u.name,e=u.dtype,s=u.shape,t=pt(s),i;if("quantization"in u){var d=u.quantization;if("uint8"===d.dtype||"uint16"===d.dtype){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${u.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==d.dtype)throw new Error(`Weight ${u.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==e)throw new Error(`Weight ${u.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${e}.`)}var p=sm[d.dtype],h=a.slice(l,l+t*p),c=new("uint8"===d.dtype?Uint8Array:Uint16Array)(h);if("float32"===e)if("uint8"===d.dtype||"uint16"===d.dtype){i=new Float32Array(c.length);for(let e=0;e<c.length;e++){var f=c[e];i[e]=f*d.scale+d.min}}else{if("float16"!==d.dtype)throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);void 0===r&&(r=y_()),i=r(c)}else{if("int32"!==e)throw new Error(`Unsupported dtype in weight '${n}': ${e}`);if("uint8"!==d.dtype&&"uint16"!==d.dtype)throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);i=new Int32Array(c.length);for(let e=0;e<c.length;e++){var m=c[e];i[e]=Math.round(m*d.scale+d.min)}}l+=t*p}else if("string"===e){var g=pt(u.shape);i=[];for(let e=0;e<g;e++){var b=new Uint32Array(a.slice(l,l+bd))[0];l+=bd;var y=new Uint8Array(a.slice(l,l+b));i.push(y),l+=b}}else{p=sm[e],u=a.slice(l,l+t*p);if("float32"===e)i=new Float32Array(u);else if("int32"===e)i=new Int32Array(u);else if("bool"===e)i=new Uint8Array(u);else{if("complex64"!==e)throw new Error(`Unsupported dtype in weight '${n}': ${e}`);{i=new Float32Array(u);let t=new Float32Array(i.length/2),a=new Float32Array(i.length/2);for(let e=0;e<t.length;e++)t[e]=i[2*e],a[e]=i[2*e+1];let e=fs(t,s,"float32"),r=fs(a,s,"float32");o[n]=oa(e,r),e.dispose(),r.dispose()}}l+=t*p}"complex64"!==e&&(o[n]=fs(i,s,e))}return o}function p_(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,a=[];e.forEach(e=>{if(t+=e.byteLength,a.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});let r=new Uint8Array(t),n=0;return a.forEach(e=>{r.set(new Uint8Array(e.buffer),n),n+=e.byteLength}),r.buffer}var Fg="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function ux(e){return Fg?Buffer.byteLength(e):new Blob([e]).size}function h_(e){if(Fg)return Buffer.from(e).toString("base64");let a=new Uint8Array(e),r="";for(let e=0,t=a.length;e<t;e++)r+=String.fromCharCode(a[e]);return btoa(r)}function f_(t){if(Fg){let e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}let a=atob(t),r=new Uint8Array(a.length);for(let e=0;e<a.length;++e)r.set([a.charCodeAt(e)],e);return r.buffer}function Og(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});let a=new Uint8Array(t),r=0;return e.forEach(e=>{a.set(new Uint8Array(e),r),r+=e.byteLength}),a.buffer}function lx(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);var t=e.split("/");return t[t.length-1]}function fk(e,t){let a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),a}async function Pg(e,t){let a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};var r;return null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest&&([r,t]=await t(e.weightsManifest),a.weightSpecs=r,a.weightData=t),null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),a}function Fl(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:ux(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:ux(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function m_(){let t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=(e=>{let t=e<<13,a=0;for(;0==(8388608&t);)a-=8388608,t<<=1;return t&=-8388609,a+=947912704,t|a})(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function g_(){let t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}function b_(){let t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}function y_(){let n=m_(),s=g_(),i=b_();return t=>{let e=new ArrayBuffer(4*t.length),a=new Uint32Array(e);for(let e=0;e<t.length;e++){var r=t[e],r=n[i[r>>10]+(1023&r)]+s[r>>10];a[e]=r}return new Float32Array(e)}}var xt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==xt.instance&&(xt.instance=new xt),xt.instance}static registerSaveRouter(e){xt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){xt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return xt.getHandlers(e,"save")}static getLoadHandlers(e,t){return xt.getHandlers(e,"load",t)}static getHandlers(t,e,a){let r=[];return("load"===e?xt.getInstance().loadRouters:xt.getInstance().saveRouters).forEach(e=>{e=e(t,a);null!==e&&r.push(e)}),r}},v_=e=>xt.registerSaveRouter(e),x_=e=>xt.registerLoadRouter(e),w_=e=>xt.getSaveHandlers(e),k_=(e,t)=>xt.getLoadHandlers(e,t),rm="tensorflowjs",am=1,Yr="models_store",or="model_info_store";function mk(){if(!X().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");var e="undefined"==typeof window?self:window,e=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function im(e){let t=e.result;t.createObjectStore(Yr,{keyPath:"modelPath"}),t.createObjectStore(or,{keyPath:"modelPath"})}var ua=class{constructor(e){if(this.indexedDB=mk(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,u){return new Promise((o,l)=>{let t=this.indexedDB.open(rm,am);t.onupgradeneeded=()=>im(t),t.onsuccess=()=>{let i=t.result;if(null==u){let e=i.transaction(Yr,"readonly"),t=e.objectStore(Yr).get(this.modelPath);t.onsuccess=()=>{if(null==t.result)return i.close(),l(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));o(t.result.modelArtifacts)},t.onerror=e=>(i.close(),l(t.error)),e.oncomplete=()=>i.close()}else{let e=Fl(u),r=i.transaction(or,"readwrite"),n=r.objectStore(or),t=n.put({modelPath:this.modelPath,modelArtifactsInfo:e}),s;t.onsuccess=()=>{s=i.transaction(Yr,"readwrite");let a=s.objectStore(Yr).put({modelPath:this.modelPath,modelArtifacts:u,modelArtifactsInfo:e});a.onsuccess=()=>o({modelArtifactsInfo:e}),a.onerror=e=>{n=r.objectStore(or);let t=n.delete(this.modelPath);t.onsuccess=()=>(i.close(),l(a.error)),t.onerror=e=>(i.close(),l(a.error))}},t.onerror=e=>(i.close(),l(t.error)),r.oncomplete=()=>{null==s?i.close():s.oncomplete=()=>i.close()}}},t.onerror=e=>l(t.error)})}};ua.URL_SCHEME="indexeddb://";var gk=e=>X().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ua.URL_SCHEME)?I_(e.slice(ua.URL_SCHEME.length)):null;function I_(e){return new ua(e)}function S_(e){return e.startsWith(ua.URL_SCHEME)?e.slice(ua.URL_SCHEME.length):e}xt.registerSaveRouter(gk),xt.registerLoadRouter(gk);var C_=class{constructor(){this.indexedDB=mk()}async listModels(){return new Promise((r,n)=>{let s=this.indexedDB.open(rm,am);s.onupgradeneeded=()=>im(s),s.onsuccess=()=>{let t=s.result,e=t.transaction(or,"readonly"),a=e.objectStore(or).getAll();a.onsuccess=()=>{let e={};for(var t of a.result)e[t.modelPath]=t.modelArtifactsInfo;r(e)},a.onerror=e=>(t.close(),n(a.error)),e.oncomplete=()=>t.close()},s.onerror=e=>n(s.error)})}async removeModel(l){return l=S_(l),new Promise((i,o)=>{let t=this.indexedDB.open(rm,am);t.onupgradeneeded=()=>im(t),t.onsuccess=()=>{let a=t.result,e=a.transaction(or,"readwrite"),r=e.objectStore(or),n=r.get(l),s;n.onsuccess=()=>{if(null==n.result)return a.close(),o(new Error(`Cannot find model with path '${l}' in IndexedDB.`));{let e=r.delete(l),t=()=>{s=a.transaction(Yr,"readwrite");let e=s.objectStore(Yr).delete(l);e.onsuccess=()=>i(n.result.modelArtifactsInfo),e.onerror=e=>o(n.error)};e.onsuccess=t,e.onerror=e=>(t(),a.close(),o(n.error))}},n.onerror=e=>(a.close(),o(n.error)),e.oncomplete=()=>{null==s?a.close():s.oncomplete=()=>a.close()}},t.onerror=e=>o(t.error)})}},Gs="/",Ui="tensorflowjs_models",bk="info",N_="model_topology",T_="weight_specs",$_="weight_data",__="model_metadata";function yk(e){return{info:[Ui,e,bk].join(Gs),topology:[Ui,e,N_].join(Gs),weightSpecs:[Ui,e,T_].join(Gs),weightData:[Ui,e,$_].join(Gs),modelMetadata:[Ui,e,__].join(Gs)}}function vk(e){for(var t of Object.values(e))window.localStorage.removeItem(t)}function A_(e){let t=e.split(Gs);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Gs)}function E_(e){return e.startsWith(la.URL_SCHEME)?e.slice(la.URL_SCHEME.length):e}var la=class{constructor(e){if(!X().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=yk(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");var t=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),r=Fl(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,h_(e.weightData));var n={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(n)),{modelArtifactsInfo:r}}catch(e){throw vk(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}async load(){var e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},a=JSON.parse(this.LS.getItem(this.keys.topology));if(null==a)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=a;e=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==e)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=e;e=this.LS.getItem(this.keys.modelMetadata);null!=e&&(r=JSON.parse(e),t.format=r.format,t.generatedBy=r.generatedBy,t.convertedBy=r.convertedBy,null!=r.signature&&(t.signature=r.signature),null!=r.userDefinedMetadata&&(t.userDefinedMetadata=r.userDefinedMetadata),null!=r.modelInitializer&&(t.modelInitializer=r.modelInitializer),null!=r.trainingConfig&&(t.trainingConfig=r.trainingConfig));var r=this.LS.getItem(this.keys.weightData);if(null==r)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=f_(r),t}};la.URL_SCHEME="localstorage://";var xk=e=>X().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(la.URL_SCHEME)?R_(e.slice(la.URL_SCHEME.length)):null;function R_(e){return new la(e)}xt.registerSaveRouter(xk),xt.registerLoadRouter(xk);var D_=class{constructor(){O(X().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),O("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let a={},r=Ui+Gs,n=Gs+bk;for(let t=0;t<this.LS.length;++t){let e=this.LS.key(t);var s;e.startsWith(r)&&e.endsWith(n)&&(s=A_(e),a[s]=JSON.parse(this.LS.getItem(e)))}return a}async removeModel(e){var t=yk(e=E_(e));if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);e=JSON.parse(this.LS.getItem(t.info));return vk(t),e}},qi="://",zn=class{constructor(){this.managers={}}static getInstance(){return null==zn.instance&&(zn.instance=new zn),zn.instance}static registerManager(e,t){O(null!=e,()=>"scheme must not be undefined or null."),O(0<(e=e.endsWith(qi)?e.slice(0,e.indexOf(qi)):e).length,()=>"scheme must not be an empty string.");let a=zn.getInstance();O(null==a.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),a.managers[e]=t}static getManager(e){var t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function td(e){if(-1===e.indexOf(qi))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${zn.getSchemes().join(",")}`);return{scheme:e.split(qi)[0],path:e.split(qi)[1]}}async function wk(e,t,a=!1){O(e!==t,()=>`Old path and new path are the same: '${e}'`);let r=xt.getLoadHandlers(e);O(0<r.length,()=>`Copying failed because no load handler is found for source URL ${e}.`),O(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);let n=r[0],s=xt.getSaveHandlers(t);O(0<s.length,()=>`Copying failed because no save handler is found for destination URL ${t}.`),O(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);let i=s[0],o=td(e).scheme,l=td(e).path,u=o===td(e).scheme,d=await n.load();a&&u&&await zn.getManager(o).removeModel(l);var p=await i.save(d);return a&&!u&&await zn.getManager(o).removeModel(l),p.modelArtifactsInfo}async function F_(){let e=zn.getSchemes(),t={};for(var a of e){var r,n=await zn.getManager(a).listModels();for(r in n){var s=a+qi+r;t[s]=n[r]}}return t}async function O_(e){e=td(e);return zn.getManager(e.scheme).removeModel(e.path)}async function P_(e,t){return wk(e,t,!1)}async function z_(e,t){return wk(e,t,!0)}var M_=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(X().get("IS_BROWSER")){X().setPlatform("browser",new M_);try{zn.registerManager(la.URL_SCHEME,new D_)}catch(e){}try{zn.registerManager(ua.URL_SCHEME,new C_)}catch(e){}}var Pf,L_={importFetch:()=>qT()},B_=class{constructor(){this.util=jT(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=X().global.fetch?X().global.fetch(e,t):(Pf=null==Pf?L_.importFetch():Pf)(e,t)}now(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}};function De(e,t="float32",a){return t=t||"float32",sg(e),new Vt(e,t,a)}function V_(e,t){e=_(e,"x","cast");if(!Kw(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==e.dtype||"string"!==t&&"string"===e.dtype)throw new Error("Only strings can be casted to strings");return M.runKernel(Na,{x:e},{dtype:t})}X().get("IS_NODE")&&!X().get("IS_BROWSER")&&X().setPlatform("node",new B_);var ce=L({cast_:V_});function W_(e){e={x:_(e,"x","clone","string_or_numeric")};return M.runKernel(Ba,e)}var lr=L({clone_:W_});function U_(e,t=!1){console.log(e.toString(t))}ck();var G_={buffer:De,cast:ce,clone:lr,print:U_};Q$(G_);var En={};Ae(En,{browserFiles:()=>Q_,browserHTTPRequest:()=>nA,concatenateArrayBuffers:()=>Og,copyModel:()=>P_,decodeWeights:()=>hk,encodeWeights:()=>d_,fromMemory:()=>rA,getLoadHandlers:()=>k_,getModelArtifactsForJSON:()=>Pg,getModelArtifactsInfoForJSON:()=>Fl,getSaveHandlers:()=>w_,http:()=>Mg,isHTTPScheme:()=>um,listModels:()=>F_,loadWeights:()=>Z_,moveModel:()=>z_,registerLoadRouter:()=>x_,registerSaveRouter:()=>v_,removeModel:()=>O_,weightsLoaderFactory:()=>Ik,withSaveHandler:()=>aA});var H_="model",q_=".json",j_=".weights.bin";function cx(e){return new Promise(e=>setTimeout(e)).then(e)}var om=class{constructor(e){if(!X().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");null!=(e=e.startsWith(om.URL_SCHEME)?e.slice(om.URL_SCHEME.length):e)&&0!==e.length||(e=H_),this.modelJsonFileName=e+q_,this.weightDataFileName=e+j_}async save(n){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");var s=window.URL.createObjectURL(new Blob([n.weightData],{type:"application/octet-stream"}));if(n.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let e=[{paths:["./"+this.weightDataFileName],weights:n.weightSpecs}],t=fk(n,e),a=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=a,await cx(()=>r.dispatchEvent(new MouseEvent("click"))),null!=n.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=s,await cx(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Fl(n)}}}},yd=om;yd.URL_SCHEME="downloads://";var K_=class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((a,r)=>{let e=new FileReader;e.onload=e=>{var t=JSON.parse(e.target.result),e=t.modelTopology;null!=e?null!=t.weightsManifest?0!==this.weightsFiles.length?(t=Pg(t,e=>this.loadWeights(e)),a(t)):a({modelTopology:e}):r(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`)):r(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`))},e.onerror=e=>r(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),e.readAsText(this.jsonFile)})}loadWeights(e){let t=[],a=[];for(var r of e)t.push(...r.weights),a.push(...r.paths);let n=this.checkManifestAndWeightFiles(e),s=a.map(e=>this.loadWeightsFile(e,n[e]));return Promise.all(s).then(e=>[t,Og(e)])}loadWeightsFile(r,n){return new Promise((t,a)=>{let e=new FileReader;e.onload=e=>{e=e.target.result;t(e)},e.onerror=e=>a(`Failed to weights data from file of path '${r}'.`),e.readAsArrayBuffer(n)})}checkManifestAndWeightFiles(e){let a=[],r=this.weightsFiles.map(e=>lx(e.name)),n={};for(var t of e)t.paths.forEach(e=>{var t=lx(e);if(-1!==a.indexOf(t))throw new Error(`Duplicate file basename found in weights manifest: '${t}'`);if(a.push(t),-1===r.indexOf(t))throw new Error(`Weight file with basename '${t}' is not provided.`);n[e]=this.weightsFiles[r.indexOf(t)]});if(a.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${a.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return n}},X_=e=>X().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(yd.URL_SCHEME)?Y_(e.slice(yd.URL_SCHEME.length)):null;function Y_(e="model"){return new yd(e)}function Q_(e){return new K_(e)}function dx(a,r,n,s){var e,t,i;O(null!=(i=a)&&Array.isArray(i)&&0<i.length,()=>"promises must be a none empty array"),t=s=null==s?1:s,O(0<=(e=n=null==n?0:n)&&e<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`),O(0<=t&&t<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`),O(e<=t,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`);let o=0;return Promise.all(a.map(e=>(e.then(e=>{var t=n+ ++o/a.length*(s-n);return r(t),e}),e)))}async function kk(e,t){let a=null==(t=null==t?{}:t).fetchFunc?X().platform.fetch:t.fetchFunc,r=e.map(e=>a(e,t.requestInit,{isBinary:!0})),n=(null==t.onProgress?await Promise.all(r):await dx(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(n):await dx(n,t.onProgress,.5,1)}async function Z_(e,t="",a,r){return Ik(e=>kk(e,{requestInit:r}))(e,t,a)}function Ik(r){return async(o,t="",i)=>{let l=o.map(()=>!1),u={},d=null!=i?i.map(()=>!1):[],p=[];if(o.forEach((e,n)=>{let s=0;e.weights.forEach(a=>{let e=("quantization"in a?a.quantization:a).dtype,t=sm[e]*pt(a.shape),r=()=>{l[n]=!0,null==u[n]&&(u[n]=[]),u[n].push({manifestEntry:a,groupOffset:s,sizeBytes:t})};null!=i?i.forEach((e,t)=>{e===a.name&&(r(),d[t]=!0)}):r(),p.push(a.name),s+=t})}),!d.every(e=>e)){let e=i.filter((e,t)=>!d[t]);throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. 
Manifest JSON has weights with names: ${p.join(", ")}.`)}let e=l.reduce((e,t,a)=>(t&&e.push(a),e),[]),a=[];e.forEach(e=>{o[e].paths.forEach(e=>{e=t+(t.endsWith("/")?"":"/")+e;a.push(e)})});let h=await r(a),c={},f=0;return e.forEach(e=>{let t=o[e].paths.length,a=0;for(let e=0;e<t;e++)a+=h[f+e].byteLength;let r=new ArrayBuffer(a),n=new Uint8Array(r),s=0;for(let e=0;e<t;e++){var i=new Uint8Array(h[f+e]);n.set(i,s),s+=i.byteLength}u[e].forEach(e=>{var t,a=hk(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(t in a)c[t]=a[t]}),f+=t}),c}}xt.registerSaveRouter(X_);var J_="application/octet-stream",eA="application/json",zg=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",this.weightPathPrefix=(t=null==t?{}:t).weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(O("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=X().platform.fetch,O(null!=e&&0<e.length,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&O(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;var a=fk(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(a)],{type:eA}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:J_}),"model.weights.bin");a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Fl(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}var a=t.modelTopology,r=t.weightsManifest;if(null==a&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Pg(t,e=>this.loadWeights(e))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[a,r]=tA(t),n=this.weightPathPrefix||a,s=[];for(var i of e)s.push(...i.weights);let o=[],l=[];for(var u of e)for(var d of u.paths)null!=this.weightUrlConverter?l.push(this.weightUrlConverter(d)):o.push(n+d+r);this.weightUrlConverter&&o.push(...await Promise.all(l));e=await kk(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,Og(e)]}};function tA(e){var t=e.lastIndexOf("/"),a=e.lastIndexOf("?");return[e.substring(0,t)+"/",t<a?e.substring(a):""]}function um(e){return null!=e.match(zg.URL_SCHEME_REGEX)}zg.URL_SCHEME_REGEX=/^https?:\/\//;var Sk=(t,a)=>{if("undefined"==typeof fetch&&(null==a||null==a.fetchFunc))return null;{let e=!0;if(e=Array.isArray(t)?t.every(e=>um(e)):um(t),e)return Mg(t,a)}return null};function Mg(e,t){return new zg(e,t)}function nA(e,t){return Mg(e,t)}xt.registerSaveRouter(Sk),xt.registerLoadRouter(Sk);var zf=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},sA=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function rA(e,t,a,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new zf(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new zf({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new zf({modelTopology:e,weightSpecs:t,weightData:a,trainingConfig:r}))}function aA(e){return new sA(e)}var iA={};function oA(e,t,a=!1,r=!1){e=_(e,"a","matMul"),t=_(t,"b","matMul");return[e,t]=vt(e,t),M.runKernel(Ca,{a:e,b:t},{transposeA:a,transposeB:r})}Ae(iA,{confusionMatrix:()=>dA});var We=L({matMul_:oA});function uA(e,t,a=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);e={indices:_(e,"indices","oneHot","int32")};return M.runKernel($o,e,{depth:t,onValue:a,offValue:r})}var vd=L({oneHot_:uA});function lA(e,t){let a=_(e,"x","transpose");if(null==t&&(t=a.shape.map((e,t)=>t).reverse()),O(a.rank===t.length,()=>`Error in transpose: rank of input ${a.rank} must match length of perm ${t}.`),t.forEach(e=>{O(0<=e&&e<a.rank,()=>`All entries in 'perm' must be between 0 and ${a.rank-1} but got ${t}`)}),a.rank<=1)return a.clone();var r={x:a},e={perm:t};return M.runKernel(pi,r,e)}var qe=L({transpose_:lA});function cA(e,t,a){let r=_(e,"labels","confusionMatrix"),n=_(t,"predictions","confusionMatrix");O(null==a||0<a&&Number.isInteger(a),()=>`If provided, numClasses must be a positive integer, but got ${a}`),O(1===r.rank,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),O(1===n.rank,()=>`Expected the rank of predictions to be 1, but got ${n.rank}`),O(r.shape[0]===n.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${n.shape[0]}. Labels and predictions should have the same number of elements.`),O(0<a&&Number.isInteger(a),()=>`numClasses is required to be a positive integer, but got ${a}`);e=vd(ce(r,"int32"),a),t=vd(ce(n,"int32"),a),e=qe(e),t=We(e,t);return ce(t,"int32")}var dA=L({confusionMatrix_:cA}),jo={};function Ck(t,a){let r=t.length,n=[];for(let e=0;e<r;e++){var s=r-1-e,i=t[s]||1;1<(a[a.length-1-e]||1)&&1===i&&n.unshift(s)}return n}function _t(t,a){let r=[];for(let e=0;e<a.length;e++){var n=t[t.length-e-1],s=a.length-e-1,i=a[s];(null==n||1===n&&1<i)&&r.unshift(s)}return r}function ot(r,n){let s=[],e=Math.max(r.length,n.length);for(let a=0;a<e;a++){let e=r[r.length-a-1];null==e&&(e=1);let t=n[n.length-a-1];if(null==t&&(t=1),1===e)s.unshift(t);else if(1===t)s.unshift(e);else{if(e!==t)throw Error(`Operands could not be broadcast together with shapes ${r} and ${n}.`);s.unshift(e)}}return s}Ae(jo,{assertAndGetBroadcastShape:()=>ot,getBroadcastDims:()=>Ck,getReductionAxes:()=>_t});var Vr,Nk={};function pA(e,t,a){if(wa(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");var r=Rs(e,a);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Nr(e,t,r,a)}function Tk(e,a=3){if(4<a)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,r=!1,n=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)t=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)n=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(n&&n&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(null!=Zf(fd,M.backendName))return M.runKernel(fd,{pixels:e},{numChannels:a});let[l,u]=n?[e.videoWidth,e.videoHeight]:[e.width,e.height],d;if(i)d=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||t)d=e.data;else if(s||n||o){if(null==Vr)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Vr=new OffscreenCanvas(1,1).getContext("2d")}else Vr=document.createElement("canvas").getContext("2d");Vr.canvas.width=l,Vr.canvas.height=u,Vr.drawImage(e,0,0,l,u),d=Vr.getImageData(0,0,l,u).data}let p;if(4===a)p=new Int32Array(d);else{var h=l*u;p=new Int32Array(h*a);for(let t=0;t<h;t++)for(let e=0;e<a;++e)p[t*a+e]=d[4*t+e]}return pA(p,[u,l,a],"int32")}function hA(e){return null!=e&&e.data instanceof Uint8Array}function fA(){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")}function mA(e){return null!=e&&0!==e.width&&0!==e.height}function gA(e){return fA()&&!(e instanceof ImageBitmap)&&mA(e)&&!hA(e)}async function bA(e,t=3){let a=null;if(X().getBool("WRAP_TO_IMAGEBITMAP")&&gA(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}a=null!=t&&t.width===e.width&&t.height===e.height?t:e}else a=e;return Tk(a,t)}async function yA(e,a){let r=_(e,"img","toPixels");if(!(e instanceof et)){let e=r;r=ce(e,"int32"),e.dispose()}if(2!==r.rank&&3!==r.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${r.rank}.`);var[n,s]=r.shape.slice(0,2),i=2===r.rank?1:r.shape[2];if(4<i||2===i)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${i}`);if("float32"!==r.dtype&&"int32"!==r.dtype)throw new Error(`Unsupported type for toPixels: ${r.dtype}. Please use float32 or int32 tensors.`);let o=await r.data(),l="float32"===r.dtype?255:1,u=new Uint8ClampedArray(s*n*4);for(let a=0;a<n*s;++a){let t=[0,0,0,255];for(let e=0;e<i;e++){var d=o[a*i+e];if("float32"===r.dtype){if(d<0||1<d)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${d}.`)}else if("int32"===r.dtype&&(d<0||255<d))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${d}.`);1===i?(t[0]=d*l,t[1]=d*l,t[2]=d*l):t[e]=d*l}var p=4*a;u[0+p]=Math.round(t[0]),u[1+p]=Math.round(t[1]),u[2+p]=Math.round(t[2]),u[3+p]=Math.round(t[3])}if(null!=a){a.width=s,a.height=n;let e=a.getContext("2d"),t=new ImageData(u,s,n);e.putImageData(t,0,0)}return r!==e&&r.dispose(),u}Ae(Nk,{fromPixels:()=>vA,fromPixelsAsync:()=>bA,toPixels:()=>yA});var vA=L({fromPixels_:Tk}),$k={};function _k(e,t){var a=e.shape.length,r=t.shape.length;if(a<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${a}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>a)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${a}`);if(0===pt(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let n=t.shape,s=n[n.length-1],i=1;for(let e=0;e<n.length-1;++e)i*=n[e];let o=e.shape,l=n.slice();l.pop();let u=1;for(let e=s;e<a;++e)u*=o[e],l.push(o[e]);e=[...ao(e.shape).map(e=>e/u),1].slice(0,s);return[l,i,u,e]}Ae($k,{prepareAndValidate:()=>_k});var Ak={};function Lg(t,a,r){var n=1<a.rank?a.shape[a.rank-1]:1,s=1<a.rank?a.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${r.shape}, indices.shape: ${a.shape}, shape: ${t}, sliceDim: ${n}, and batchDim: ${s}.`;if(r.rank<s)throw new Error(i+` update.rank < ${s}. `);if(t.length<n+(r.rank-s))throw new Error(i+` Output shape length < ${n+(r.rank-s)}`);if(r.rank!==s+t.length-n)throw new Error(i+` update.rank != ${s+t.length-n}`);for(let e=0;e<s;++e)if(r.shape[e]!==a.shape[e])throw new Error(i+` updates.shape[${e}] (${r.shape[e]}) != indices.shape[${e}] (${a.shape[e]}).`);for(let e=0;e<r.rank-s;++e)if(r.shape[e+s]!==t[e+n])throw new Error(i+` updates.shape[${e+s}] (${r.shape[e+s]}) != shape[${e+s}] (${t[e+s]})`)}function Bg(e,t,a){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(a.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${a}`);if(0===a.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Lg(a,t,e)}function Ek(e,t,a){let r=t.shape.length,n=1<r?t.shape[r-1]:1,s=a.length,i=1;for(let e=n;e<s;++e)i*=a[e];var o=n<1?1:n,l=pt(t.shape)/o,t=[...ao(a.slice(0,n)),1],o=pt(a);return{sliceRank:n,numUpdates:l,sliceSize:i,strides:t,outputSize:o}}Ae(Ak,{calculateShapes:()=>Ek,validateInput:()=>Bg,validateUpdateShape:()=>Lg});var wt={};Ae(wt,{assertParamsValid:()=>wA,computeFlatOffset:()=>NA,computeOutShape:()=>IA,getNormalizedAxes:()=>SA,isSliceContinous:()=>CA,maskToAxes:()=>kA,parseSliceParams:()=>Bk,sliceInfo:()=>TA,startForAxis:()=>Mk,startIndicesWithElidedDims:()=>Ok,stopForAxis:()=>Lk,stopIndicesWithElidedDims:()=>Pk,stridesForAxis:()=>zk,stridesWithElidedDims:()=>Rk});var lm=-2,xA=-1;function wA(t,a,r){let n=t.shape.length;O(n===a.length,()=>`Error in slice${n}D: Length of begin ${a} must match the rank of the array (${n}).`),O(n===r.length,()=>`Error in slice${n}D: Length of size ${r} must match the rank of the array (${n}).`);for(let e=0;e<n;++e)O(a[e]+r[e]<=t.shape[e],()=>`Error in slice${n}D: begin[${e}] + size[${e}] (${a[e]+r[e]}) would overflow input.shape[${e}] (${t.shape[e]})`)}function kA(e){let t=[],a=0;for(;0<e;)1&e&&t.push(a),e/=2,a++;return t}function IA(t,a,r){let n=[];for(let e=0;e<t.length;e++)n[e]=Math.ceil((a[e]-t[e])/r[e]);return n}function Rk(e,t,a,r){let n=[...e];for(let e=n.length;e<r.length;e++)n.push(1);for(let e=0;e<a;e++)0===e?n[t]=1:(n.splice(t,0,1),n.pop());return n}function Dk(e,t,a){return a<=e?a:a-(t-1)}function Fk(t,a){let r=[];for(let e=0;e<t;e++)r.push(a+e);return r}function SA(t,e,a,r,n,s,i,o,l){let u=t.length,d=new Array(u),p=new Array(u),h=new Array(u);if(e.length&&0<a){e=e[0],a=a+1;d=Ok(i,e,a,r,t),p=Pk(o,e,a,n,t),h=Rk(s,e,a,t)}else for(let e=0;e<u;e++)d[e]=Mk(i,r,s,t,e,l),p[e]=Lk(o,n,s,t,e,l),h[e]=zk(s,e,l);return{begin:d,end:p,strides:h}}function Ok(r,n,s,i,e){let o=[...e],t=Fk(s,n);for(let a=0;a<o.length;a++)if(-1<t.indexOf(a))o[a]=0;else{let e=Dk(n,s,a),t=i[e];r&1<<e&&(t=0),o[a]=t}return o}function Pk(r,n,s,i,t){let o=[...t],e=Fk(s,n);for(let a=0;a<o.length;a++)if(-1<e.indexOf(a))o[a]=Number.MAX_SAFE_INTEGER;else{let e=Dk(n,s,a),t=i[e];r&1<<e&&(t=Number.MAX_SAFE_INTEGER),o[a]=t}for(let e=0;e<o.length;e++){var a=t[e];o[e]<0&&(o[e]+=a),o[e]=Vu(0,o[e],t[e])}return o}function zk(e,t,a){let r=e[t];return(a&1<<t||null==r)&&(r=1),r}function Mk(e,t,a,r,n,s){let i=t[n],o=a[n]||1;(e&1<<n||s&1<<n||null==i)&&(i=0<o?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);n=r[n];return i<0&&(i+=n),i=Vu(0,i,n-1),i}function Lk(e,t,a,r,n,s){let i=t[n],o=a[n]||1;(e&1<<n||s&1<<n||null==i)&&(i=0<o?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);n=r[n];return i<0&&(i+=n),i=0<o?Vu(0,i,n):Vu(-1,i,n-1),i}function CA(t,a,r){let n=r.length;for(let e=0;e<r.length;e++)if(1<r[e]){n=e;break}for(let e=n+1;e<r.length;e++)if(0<a[e]||r[e]!==t[e])return!1;return!0}function NA(t,a){let r=0<t.length?t[t.length-1]:1;for(let e=0;e<t.length-1;e++)r+=t[e]*a[e];return r}function Bk(a,e,t){let r,n=a.shape.length;r="number"==typeof e?[e,...new Array(n-1).fill(0)]:e.length<n?e.concat(new Array(n-e.length).fill(0)):e.slice(),r.forEach(e=>{O(-1!==e,()=>"slice() does not support negative begin indexing.")});let s;return s=null==t?new Array(n).fill(-1):"number"==typeof t?[t,...new Array(n-1).fill(-1)]:t.length<n?t.concat(new Array(n-t.length).fill(-1)):t,s=s.map((e,t)=>0<=e?e:(O(-1===e,()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${t}.`),a.shape[t]-r[t])),[r,s]}function TA(e,t,a,r,n,s,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let d=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:a.slice(),strides:u.slice(),beginMask:n,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<p.dims;e++)d&&0!=(1<<e&o)&&p.numAddAxisAfterEllipsis++,1<<e&i&&(d=!0);d||(p.ellipsisMask|=1<<p.dims,p.dims++);let h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};$A(p,h);let c=!0,f=!0,m=!0,g=[],b=[];for(let a=0;a<e.length;++a){if(0===h.strides[a])throw Error(`strides[${a}] must be non-zero`);var y=!!(h.shrinkAxisMask&1<<a),v=e[a];if(-1!==v){var x=[h.beginMask&1<<a,h.endMask&1<<a],w=[0<h.strides[a]?0:-1,0<h.strides[a]?v:v-1];if(y&&h.strides[a]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===h.strides[a];var k=!!(h.beginMask&1<<a&&h.endMask&1<<a);if(h.beginValid&&h.endValid){if(y){var I=h.begin[a]<0?v+h.begin[a]:h.begin[a];if(h.begin[a]=I,h.end[a]=h.begin[a]+1,I<0||v<=I)throw Error(`slice index ${h.begin[a]} of dimension ${a} out of bounds.`)}else h.begin[a]=px(h.begin[a],0,h.strides[a],v,x,w),h.end[a]=px(h.end[a],1,h.strides[a],v,x,w);w=1===h.strides[a]&&0===h.begin[a]&&h.end[a]===v;c=c&&w,f=f&&(0===a&&1===h.strides[a]||w)}else c=c&&1===h.strides[a]&&k,f=f&&(0===a&&1===h.strides[a]||k);let t,e=!1;if(h.beginValid&&h.endValid?(t=h.end[a]-h.begin[a],e=!0):y?(t=1,e=!0):k&&0<=v&&(t=h.strides[a]<0?-v:v,e=!0),e){let e;e=0===t||t<0!=h.strides[a]<0?0:Math.trunc(t/h.strides[a])+(t%h.strides[a]!=0?1:0),g.push(e)}else g.push(-1)}else g.push(y?1:-1)}for(let e=0;e<h.finalShapeGatherIndices.length;++e){var S=h.finalShapeGatherIndices[e];0<=S?b.push(g[S]):S===lm&&b.push(1)}return{finalShapeSparse:b.filter((e,t)=>h.finalShapeGatherIndices[t]!==lm),finalShape:b,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function $A(t,a){a.beginMask=0,a.endMask=0;let r=a.shrinkAxisMask=0;a.beginValid=null!=t.begin,a.endValid=null!=t.end,a.begin=new Array(a.dims),a.end=new Array(a.dims),a.strides=new Array(a.dims),a.finalShapeGatherIndices=[],a.finalShapeGatherIndicesSparse=[],a.inputShapeGatherIndicesSparse=new Array(a.dims);for(let e=0;e<t.dims;e++)if(1<<e&t.ellipsisMask)for(var n=Math.min(a.dims-(t.dims-e)+1+t.numAddAxisAfterEllipsis,a.dims);r<n;r++)a.begin[r]=0,a.end[r]=0,a.strides[r]=1,a.beginMask|=1<<r,a.endMask|=1<<r,a.finalShapeGatherIndices.push(r),a.finalShapeGatherIndicesSparse.push(-1),a.inputShapeGatherIndicesSparse[r]=e;else if(1<<e&t.newAxisMask)a.finalShapeGatherIndices.push(lm),a.finalShapeGatherIndicesSparse.push(-1);else{if(r===a.begin.length)throw Error(`Index out of range using input dim ${r}; input has only ${a.dims} dims, ${a.begin.length}.`);null!=t.begin&&(a.begin[r]=t.begin[e]),null!=t.end&&(a.end[r]=t.end[e]),a.strides[r]=t.strides[e],t.beginMask&1<<e&&(a.beginMask|=1<<r),t.endMask&1<<e&&(a.endMask|=1<<r),t.shrinkAxisMask&1<<e?(a.finalShapeGatherIndices.push(xA),a.finalShapeGatherIndicesSparse.push(-1),a.shrinkAxisMask|=1<<r):(a.finalShapeGatherIndices.push(r),a.finalShapeGatherIndicesSparse.push(e)),a.inputShapeGatherIndicesSparse[r]=e,r++}}function px(e,t,a,r,n,s){if(n[t])return 0<a?s[t]:s[t+1&1];e=e<0?r+e:e;return e<s[0]?s[0]:e>s[1]?s[1]:e}var ae={};Ae(ae,{Serializable:()=>Vk,SerializationMap:()=>jr,registerClass:()=>Tr});var Vk=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},jr=class{constructor(){this.classNameMap={}}static getMap(){return null==jr.instance&&(jr.instance=new jr),jr.instance}static register(e){jr.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Tr(e){O(null!=e.className,()=>"Class being registered does not have the static className property defined."),O("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),O(0<e.className.length,()=>"Class being registered has an empty-string as its className, which is disallowed."),jr.register(e)}var _A={};Ae(_A,{TEST_EPSILON_FLOAT16:()=>Wk,encodeStrings:()=>Uk,expectArrayBuffersEqual:()=>PA,expectArraysClose:()=>EA,expectArraysEqual:()=>DA,expectNumbersClose:()=>FA,expectPromiseToFail:()=>RA,expectValuesInRange:()=>OA,testEpsilon:()=>Vg});var AA=.001,Wk=.1;function EA(e,t,a){return null==a&&(a=Vg()),cm(e,t,(e,t)=>Wg(e,t,a))}function Vg(){return 32===M.backend.floatPrecision()?AA:Wk}function cm(e,t,a){let r=!0;if((Qt(e)||Qt(t))&&(r=!1),Qt(e)&&Qt(t)&&(r=!0),r){var n=e.constructor.name,s=t.constructor.name;if(n!==s)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${s}`)}if(Array.isArray(e)&&Array.isArray(t)){n=Rs(e),s=Rs(t);if(!kr(n,s))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${s}]`)}var i=Qt(e)?e:sa(e),o=Qt(t)?t:sa(t);if(i.length!==o.length)throw new Error(`Arrays have different lengths actual: ${i.length} vs expected: ${o.length}.
Actual:   ${i}.
Expected: ${o}.`);for(let e=0;e<o.length;++e){var l=i[e],u=o[e];if(!a(l,u))throw new Error(`Arrays differ: actual[${e}] = ${l}, expected[${e}] = ${u}.
Actual:   ${i}.
Expected: ${o}.`)}}function RA(e,t){e().then(()=>t.fail(),()=>t())}function DA(e,t){var a="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return ir(e)||ir(e[0])||ir(t)||ir(t[0])?cm(e,a,(e,t)=>e==t):cm(e,t,(e,t)=>Wg(e,t,0))}function FA(e,t,a){if(!Wg(e,t,a=null==a?Vg():a))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Wg(e,t,a){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>a)}function OA(t,a,r){for(let e=0;e<t.length;e++)if(t[e]<a||t[e]>r)throw new Error(`Value out of range:${t[e]} low: ${a}, high: ${r}`)}function PA(e,t){var a=new Float32Array(e),r=new Float32Array(t);if(a.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${a.length}`);for(let e=0;e<r.length;e++)if(a[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${a[e]} instead`)}function Uk(t){for(let e=0;e<t.length;e++){var a=t[e];Array.isArray(a)?Uk(a):t[e]=Dl(a)}return t}var Rde="0.0.0";function Dde(){X().set("PROD",!0)}function Fde(){X().set("DEBUG",!0)}function Ode(){X().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Gk(e){X().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Pde(){M.disposeVariables()}function Ss(){return M}function dm(){return M.memory()}function zde(e){return M.profile(e)}function j(e,t){return M.tidy(e,t)}function Re(e){Rg(e).forEach(e=>e.dispose())}function Ht(e){return M.keep(e)}function Mde(e){return M.time(e)}function Lde(e){return M.setBackend(e)}function Bde(){return M.ready()}function Vde(){return M.backendName}function Wde(e){M.removeBackend(e)}function Ude(e){return M.findBackend(e)}function Gde(e){return M.findBackendFactory(e)}function pp(e,t,a=1){return M.registerBackend(e,t,a)}function zA(){return M.backend}function Hde(e,t){X().setPlatform(e,t)}function MA(e,t){e=_(e,"a","add"),t=_(t,"b","add");return[e,t]=vt(e,t),M.runKernel(Ir,{a:e,b:t})}Z$(Gk);var ie=L({add_:MA});function LA(e,t){e=_(e,"a","floorDiv"),t=_(t,"b","floorDiv");return[e,t]=vt(e,t),M.runKernel(za,{a:e,b:t})}var Hk=L({floorDiv_:LA});function BA(e,t){e=_(e,"a","div"),t=_(t,"b","div");if([e,t]=vt(e,t),"int32"===e.dtype&&"int32"===t.dtype)return Hk(e,t);return M.runKernel(Da,{a:e,b:t},{})}var xe=L({div_:BA});function VA(e,t){e=_(e,"a","mul"),t=_(t,"b","mul");return[e,t]=vt(e,t),M.runKernel(Ya,{a:e,b:t})}var V=L({mul_:VA});function WA(e){e=_(e,"x","abs");return"complex64"!==e.dtype?M.runKernel(io,{x:e}):M.runKernel(Kd,{x:e})}var Mt=L({abs_:WA});function UA(e){e={x:_(e,"x","acos")};return M.runKernel(sl,e)}var GA=L({acos_:UA});function HA(e){e={x:_(e,"x","acosh")};return M.runKernel(rl,e)}var qA=L({acosh_:HA});function jA(e){O(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),O(1<=e.length,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((e,t)=>_(e,`tensors${t}`,"addN")),a=t[0];t.forEach(e=>{if(e.dtype!==a.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!kr(e.shape,a.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});var r=t;return M.runKernel(ka,r)}var KA=L({addN_:jA});function XA(e,t=null,a=!1){e={x:_(e,"x","all","bool")};return M.runKernel(al,e,{axis:t,keepDims:a})}var qk=L({all_:XA});function YA(e,t=null,a=!1){e={x:_(e,"x","any","bool")};return M.runKernel(il,e,{axis:t,keepDims:a})}var pm=L({any_:YA});function QA(e,t=0){e={x:_(e,"x","argMax")};return M.runKernel(Ia,e,{axis:t})}var Hu=L({argMax_:QA});function ZA(e,t=0){e={x:_(e,"x","argMin")};return M.runKernel(ol,e,{axis:t})}var JA=L({argMin_:ZA});function eE(e){e={x:_(e,"x","asin")};return M.runKernel(ul,e)}var tE=L({asin_:eE});function nE(e){e={x:_(e,"x","asinh")};return M.runKernel(ll,e)}var sE=L({asinh_:nE});function rE(e){e={x:_(e,"x","atan")};return M.runKernel(cl,e)}var aE=L({atan_:rE});function iE(e,t){e=_(e,"a","atan2"),t=_(t,"b","atan2");return[e,t]=vt(e,t),M.runKernel(pl,{a:e,b:t})}var oE=L({atan2_:iE});function uE(e){e={x:_(e,"x","atanh")};return M.runKernel(dl,e)}var lE=L({atanh_:uE});function cE(e,t,a,r,n="NHWC",s){var i=e[3];return Ol(e,[...t,i],a,s,r,null,null,Xk(n))}function jk(e,t,a,r,n,s,i="channelsLast"){let[o,l]=xd(t),u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return Ol(e,u,a,r,n,s,!1,i)}function dE(e,t,a,r,n,s,i="NDHWC"){let[o,l,u]=hm(t),d,p;if("NDHWC"===i)p="channelsLast",d=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);p="channelsFirst",d=[o,l,u,e[1],e[1]]}return Kk(e,d,a,r,n,!1,p,s)}function Ol(e,t,a,r,n,s,i=!1,o="channelsLast"){let[l,u,d,p]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,d,p]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,p,u,d]=e}let[h,c,,f]=t,[m,g]=xd(a),[b,y]=xd(r),v=ji(h,b),x=ji(c,y),{padInfo:w,outHeight:k,outWidth:I}=fE(n,u,d,m,g,v,x,s,o),S=i?f*p:f,C;return"channelsFirst"===o?C=[l,S,k,I]:"channelsLast"===o&&(C=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:d,inChannels:p,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:c,effectiveFilterHeight:v,effectiveFilterWidth:x,dilationHeight:b,dilationWidth:y,inShape:e,outShape:C,filterShape:t}}function Kk(e,t,a,r,n,s=!1,i="channelsLast",o){let[l,u,d,p,h]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,d,p,h]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,h,u,d,p]=e}let[c,f,m,,g]=t,[b,y,v]=hm(a),[x,w,k]=hm(r),I=ji(c,x),S=ji(f,w),C=ji(m,k),{padInfo:N,outDepth:T,outHeight:$,outWidth:_}=mE(n,u,d,p,b,y,v,I,S,C,o),A=s?g*h:g,E;return"channelsFirst"===i?E=[l,A,T,$,_]:"channelsLast"===i&&(E=[l,T,$,_,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:d,inWidth:p,inChannels:h,outDepth:T,outHeight:$,outWidth:_,outChannels:A,padInfo:N,strideDepth:b,strideHeight:y,strideWidth:v,filterDepth:c,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:C,dilationDepth:x,dilationHeight:w,dilationWidth:k,inShape:e,outShape:E,filterShape:t}}function pE(e,t,a,r,n){null==r&&(r=Ug(e,t,a));var s=e[0],e=e[1];return[Jr((s-t+2*r)/a+1,n),Jr((e-t+2*r)/a+1,n)]}function hE(e,t,a,r,n,s){null==n&&(n=Ug(e,t,r));var i=e[0],o=e[1],e=e[2];return[Jr((i-t+2*n)/r+1,s),Jr((o-t+2*n)/r+1,s),Jr((e-t+2*n)/r+1,s),a]}function Ug(e,t,a,r=1){r=ji(t,r);return Math.floor((e[0]*(a-1)-a+r)/2)}function xd(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function hm(e){return"number"==typeof e?[e,e,e]:e}function ji(e,t){return t<=1?e:e+(e-1)*(t-1)}function fE(e,t,a,r,n,s,i,o,l){let u,d,p;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};var h=pE([t,a],s,r,e,o);d=h[0],p=h[1]}else if("same"===e){d=Math.ceil(t/r),p=Math.ceil(a/n);var c=Math.max(0,(d-1)*r+s-t),f=Math.max(0,(p-1)*n+i-a),h=Math.floor(c/2),m=c-h,c=Math.floor(f/2);u={top:h,bottom:m,left:c,right:f-c,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),p=Math.ceil((a-i+1)/n);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);m=("channelsLast"===l?e[1]:e[2])[0],f=("channelsLast"===l?e[1]:e[2])[1],c=("channelsLast"===l?e[2]:e[3])[0],e=("channelsLast"===l?e[2]:e[3])[1];u={top:m,bottom:f,left:c,right:e,type:0===m&&0===f&&0===c&&0===e?"VALID":"EXPLICIT"},d=Jr((t-s+m+f)/r+1,o),p=Jr((a-i+c+e)/n+1,o)}return{padInfo:u,outHeight:d,outWidth:p}}function mE(e,t,a,r,n,s,i,o,l,u,d){let p,h,c,f;if("number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};var m=hE([t,a,r,1],o,1,n,e,d);h=m[0],c=m[1],f=m[2]}else if("same"===e){h=Math.ceil(t/n),c=Math.ceil(a/s),f=Math.ceil(r/i);var g=(h-1)*n+o-t,b=(c-1)*s+l-a,y=(f-1)*i+u-r,v=Math.floor(g/2),d=g-v,m=Math.floor(b/2),g=b-m,b=Math.floor(y/2);p={top:m,bottom:g,left:b,right:y-b,front:v,back:d,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((t-o+1)/n),c=Math.ceil((a-l+1)/s),f=Math.ceil((r-u+1)/i)}return{padInfo:p,outDepth:h,outHeight:c,outWidth:f}}function Jr(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function fr(e){var[t,a,e]=xd(e);return 1===t&&1===a&&1===e}function Ps(e,t){return fr(e)||fr(t)}function Xk(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function hn(t,e,a){if(null!=a){if("string"==typeof e)throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${a} but got pad ${e}.`);if("number"==typeof e)O(Yi(e),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${a} but got pad ${e}.`);else{if("object"!=typeof e)throw Error(`Error in ${t}: Unknown padding parameter: ${e}`);e.forEach(e=>{e.forEach(e=>{O(Yi(e),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${a} but got pad ${e}.`)})})}}}function gE(e,t){e={x:_(e,"x","reshape","string_or_numeric")};return M.runKernel(Eo,e,{shape:t})}var G=L({reshape_:gE});function bE(e,t,a,r,n){let s=_(e,"x","avgPool","float32");O(Ps(a,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`);let i=s,o=!1;3===s.rank&&(o=!0,i=G(s,[1,s.shape[0],s.shape[1],s.shape[2]])),O(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),hn("avgPool",r,n);e={x:i},n=M.runKernel(Sa,e,{filterSize:t,strides:a,pad:r,dimRoundingMode:n}),n=ce(n,s.dtype);return o?G(n,[n.shape[1],n.shape[2],n.shape[3]]):n}var Gg=L({avgPool_:bE});function yE(e,t,a,r,n,s="NDHWC"){let i=_(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=G(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),O("NDHWC"===s,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),hn("avgPool3d",r,n);e={x:o},n=M.runKernel(qd,e,{filterSize:t,strides:a,pad:r,dimRoundingMode:n,dataFormat:s}),n=ce(n,o.dtype);return l?G(n,[n.shape[1],n.shape[2],n.shape[3],n.shape[4]]):n}var Yk=L({avgPool3d_:yE});function vE(e,t=0){O(1<=e.length,()=>"Pass at least one tensor to concat");let a=Gu(e,"tensors","concat","string_or_numeric");if("complex64"===a[0].dtype&&a.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${e.dtype}. `)}),1===a.length)return lr(a[0]);e=a;return M.runKernel(uo,e,{axis:t})}var Ft=L({concat_:vE});function xE(e){e={x:_(e,"x","sigmoid","float32")};return M.runKernel(ai,e)}var qs=L({sigmoid_:xE});function wE(e,t,a){e=_(e,"x","slice","string_or_numeric");if(0===e.rank)throw new Error("Slicing scalar is not possible");return M.runKernel(Po,{x:e},{begin:t,size:a})}var He=L({slice_:wE});function kE(e){e={x:_(e,"x","tanh","float32")};return M.runKernel(di,e)}var qu=L({tanh_:kE});function IE(e,t,a,r,n,s){var i=_(e,"forgetBias","basicLSTMCell"),o=_(t,"lstmKernel","basicLSTMCell"),e=_(a,"lstmBias","basicLSTMCell"),t=_(r,"data","basicLSTMCell"),a=_(n,"c","basicLSTMCell"),r=_(s,"h","basicLSTMCell"),n=Ft([t,r],1),s=We(n,o),t=ie(s,e),r=t.shape[0],n=t.shape[1]/4,o=[r,n],s=He(t,[0,0],o),e=He(t,[0,n],o),r=He(t,[0,2*n],o),o=He(t,[0,3*n],o),r=ie(V(qs(s),qu(e)),V(a,qs(ie(i,r))));return[r,V(qu(r),qs(o))]}var qde=L({basicLSTMCell_:IE});function SE(e,t,a){let r=_(e,"x","batchToSpaceND"),n=t.reduce((e,t)=>e*t);O(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),O(a.length===t.length,()=>`crops.length is ${a.length} but should be equal to blockShape.length  ${t.length}`),O(r.shape[0]%n==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${n}`);e={x:r};return M.runKernel(oo,e,{blockShape:t,crops:a})}var Hg=L({batchToSpaceND_:SE});function CE(e){let t;return t=0===e.rank||1===e.rank?G(e,[1,1,1,e.size]):2===e.rank?G(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?G(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}function NE(e,t,a,r,n,s){null==s&&(s=.001);let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(a,"variance","batchNorm"),u;null!=n&&(u=_(n,"scale","batchNorm"));let d;null!=r&&(d=_(r,"offset","batchNorm")),O(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),O(null==d||o.rank===d.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),O(null==u||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");r={x:CE(i),scale:u,offset:d,mean:o,variance:l},s=M.runKernel(Ma,r,{varianceEpsilon:s});return G(s,i.shape)}var ju=L({batchNorm_:NE});function TE(e,t,a,r,n,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(a,"variance","batchNorm"),u;null!=n&&(u=_(n,"scale","batchNorm"));let d;return null!=r&&(d=_(r,"offset","batchNorm")),O(2===i.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),O(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),O(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=u&&O(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=d&&O(2===d.rank||1===d.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${d.rank}.`),ju(i,o,l,d,u,s)}var $E=L({batchNorm2d_:TE});function _E(e,t,a,r,n,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(a,"variance","batchNorm"),u;null!=n&&(u=_(n,"scale","batchNorm"));let d;return null!=r&&(d=_(r,"offset","batchNorm")),O(3===i.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),O(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),O(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=u&&O(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=d&&O(3===d.rank||1===d.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${d.rank}.`),ju(i,o,l,d,u,s)}var AE=L({batchNorm3d_:_E});function EE(e,t,a,r,n,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(a,"variance","batchNorm"),u;null!=n&&(u=_(n,"scale","batchNorm"));let d;return null!=r&&(d=_(r,"offset","batchNorm")),O(4===i.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),O(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),O(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=u&&O(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=d&&O(4===d.rank||1===d.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${d.rank}.`),ju(i,o,l,d,u,s)}var RE=L({batchNorm4d_:EE});function DE(e,t,a){let r=_(e,"x","bincount"),n=_(t,"weights","bincount");O("int32"===r.dtype,()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),O(0<=a,()=>`size must be non-negative, but got ${a}.`),O(n.size===r.size||0===n.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${n.shape}.`);t={x:r,weights:n};return M.runKernel(ug,t,{size:a})}var Qk=L({bincount_:DE});function FE(e,t){e=_(e,"s0","broadcastArgs","int32"),t=_(t,"s1","broadcastArgs","int32");if(1!==e.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(1!==t.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${t.rank}`);return M.runKernel(lg,{s0:e,s1:t})}var OE=L({broadcastArgs_:FE});function PE(e,t){let a=_(e,"broadcastTo","x"),r=a.shape;if(t.some(e=>!(0<e)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<a.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${a.rank}.`);if(t.length>a.rank){let e=a.shape.slice();for(;e.length<t.length;)e.unshift(1);a=G(a,e)}let n=a.shape,s=Array.from(t);for(let e=t.length-1;0<=e;e--)if(n[e]===t[e])s[e]=1;else if(1!==a.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map((e,t)=>1<e?t:-1).filter(e=>0<=e).length)return lr(a);var i={x:a},e={reps:s};return M.runKernel(Cr,i,e)}var nd=L({broadcastTo_:PE});function zE(e){e={x:_(e,"x","ceil","float32")};return M.runKernel(Ta,e)}var ME=L({ceil_:zE});function LE(e,t,a){e=_(e,"x","clipByValue");return O(t<=a,()=>`Error in clip: min (${t}) must be less than or equal to max (${a}).`),M.runKernel(Sr,{x:e},{clipValueMin:t,clipValueMax:a})}var Vn=L({clipByValue_:LE});function BE(e){return Ft(e,0)}var VE=L({concat1d_:BE});function WE(e,t){return Ft(e,t)}var UE=L({concat2d_:WE});function GE(e,t){return Ft(e,t)}var HE=L({concat3d_:GE});function qE(e,t){return Ft(e,t)}var jE=L({concat4d_:qE});function KE(e,t,a,r,n="NHWC",s=[1,1],i){let o=_(e,"x","conv2d","float32"),l=_(t,"filter","conv2d","float32"),u=o,d=!1;3===o.rank&&(d=!0,u=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),O(4===l.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),hn("conv2d",r,i);let p="NHWC"===n?u.shape[3]:u.shape[1];O(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),O(Ps(a,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);t={x:u,filter:l},i=M.runKernel($a,t,{strides:a,pad:r,dataFormat:n,dilations:s,dimRoundingMode:i});return d?G(i,[i.shape[1],i.shape[2],i.shape[3]]):i}var ca=L({conv2d_:KE});function XE(e,t,a,r,n="NWC",s=1,i){let o=_(e,"x","conv1d"),l=_(t,"filter","conv1d"),u=o,d=!1;2===o.rank&&(d=!0,u=G(o,[1,o.shape[0],o.shape[1]])),O(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),O(3===l.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),hn("conv1d",r,i),O(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),O(Ps(a,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${a} and dilation '${s}'`),O("NWC"===n,()=>`Error in conv1d: got dataFormat of ${n} but only NWC is currently supported.`);e=G(l,[1,l.shape[0],l.shape[1],l.shape[2]]),t=G(u,[u.shape[0],1,u.shape[1],u.shape[2]]),i=ca(t,e,[1,a],r,"NHWC",[1,s],i);return d?G(i,[i.shape[2],i.shape[3]]):G(i,[i.shape[0],i.shape[2],i.shape[3]])}var Zk=L({conv1d_:XE});function YE(e,t,a,r,n,s="NHWC",i){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=G(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),O(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),O(4===l.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),O(4===a.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${a.rank}`);let d="NHWC"===s?o[3]:o[1],p="NHWC"===s?l.shape[3]:l.shape[1];O(d===a.shape[2],()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${a.shape[2]}.`),O(p===a.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${a.shape[3]}.`),hn("conv2dDerInput",n,i);var h={dy:l,filter:a},i={strides:r,pad:n,dataFormat:s,dimRoundingMode:i,inputShape:o},i=M.runKernel(_a,h,i);return u?G(i,[i.shape[1],i.shape[2],i.shape[3]]):i}var qg=L({conv2DBackpropInput_:YE});function QE(e,t,a,r,n,s){e=_(e,"x","conv2dTranspose"),t=_(t,"filter","conv2dTranspose");return qg(a,e,t,r,n,"NHWC",s)}var Jk=L({conv2dTranspose_:QE});function ZE(e,t,a,r,n="NDHWC",s=[1,1,1]){let i=_(e,"x","conv3d"),o=_(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=G(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),O(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),O(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),O(Ps(a,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`),O("NDHWC"===n,()=>`Error in conv3d: got dataFormat of ${n} but only NDHWC is currently supported.`);t={x:l,filter:o},r=M.runKernel(Xd,t,{strides:a,pad:r,dataFormat:n,dilations:s});return u?G(r,[r.shape[1],r.shape[2],r.shape[3],r.shape[4]]):r}var eI=L({conv3d_:ZE});function JE(e,t,a,r,n){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=G(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];O(5===s.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),O(5===i.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),O(5===a.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${a.rank}`),O(l===a.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${a.shape[3]}.`),O(u===a.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${a.shape[4]}.`);var d={dy:i,filter:a},r={pad:n,strides:r,inputShape:s},r=M.runKernel(pg,d,r);return o?G(r,[r.shape[1],r.shape[2],r.shape[3],r.shape[4]]):r}var tI=L({conv3DBackpropInput_:JE});function eR(e,t,a,r,n){e=_(e,"x","conv3dTranspose"),t=_(t,"filter","conv3dTranspose");return tI(a,e,t,r,n)}var tR=L({conv3dTranspose_:eR});function nR(e){e={x:_(e,"x","cos","float32")};return M.runKernel(Aa,e)}var jg=L({cos_:nR});function sR(e){e={x:_(e,"x","cosh","float32")};return M.runKernel(Ea,e)}var nI=L({cosh_:sR});function rR(e,t=0,a=!1,r=!1){e={x:_(e,"x","cumprod")};return M.runKernel(hl,e,{axis:t,exclusive:a,reverse:r})}var aR=L({cumprod_:rR});function iR(e,t=0,a=!1,r=!1){e={x:_(e,"x","cumsum")};return M.runKernel(lo,e,{axis:t,exclusive:a,reverse:r})}var sI=L({cumsum_:iR});function oR(e,t,a,r=!1){let n=_(e,"x","denseBincount"),s=_(t,"weights","denseBincount");O("int32"===n.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${n.dtype}`),O(n.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${n.rank}.`),O(0<=a,()=>`size must be non-negative, but got ${a}.`),O(s.size===n.size||0===s.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${n.shape}, weights shape: ${s.shape}.`);t={x:n,weights:s};return M.runKernel(hg,t,{size:a,binaryOutput:r})}var uR=L({denseBincount_:oR});function lR(e,t,a="NHWC"){let r=_(e,"x","depthToSpace","float32"),n="NHWC"===a?r.shape[1]:r.shape[2],s="NHWC"===a?r.shape[2]:r.shape[3],i="NHWC"===a?r.shape[3]:r.shape[1];O(1<t,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),O(0<=n*t,()=>`Negative dimension size caused by overflow when multiplying
    ${n} and ${t}  for depthToSpace with input shape
    ${r.shape}`),O(0<=s*t,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${r.shape}`),O(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);e={x:r};return M.runKernel(po,e,{blockSize:t,dataFormat:a})}var cR=L({depthToSpace_:lR});function dR(e,t,a,r,n="NHWC",s=[1,1],i){let o=_(e,"x","depthwiseConv2d","float32"),l=_(t,"filter","depthwiseConv2d","float32"),u=o,d=!1;3===o.rank&&(d=!0,u=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),O(4===l.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),O(u.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),hn("depthwiseConv2d",r,i);t={x:u,filter:l},i=M.runKernel(Ra,t,{strides:a,pad:r,dataFormat:n,dilations:s,dimRoundingMode:i});return d?G(i,[i.shape[1],i.shape[2],i.shape[3]]):i}var hp=L({depthwiseConv2d_:dR});function pR(e){e={x:_(e,"x","diag")};return M.runKernel(gg,e)}var jde=L({diag_:pR});function hR(e,t,a,r,n=[1,1],s="NHWC"){let i=_(e,"x","dilation2d"),o=_(t,"filter","dilation2d");O(3===i.rank||4===i.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),O(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),O("NHWC"===s,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,u=!1;3===i.rank&&(l=G(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);t={x:l,filter:o},n=M.runKernel(Yd,t,{strides:a,pad:r,dilations:n});return u?G(n,[n.shape[1],n.shape[2],n.shape[3]]):n}var fR=L({dilation2d_:hR});function mR(e,t){e=_(e,"a","equal","string_or_numeric"),t=_(t,"b","equal","string_or_numeric");return[e,t]=vt(e,t),ot(e.shape,t.shape),M.runKernel(ho,{a:e,b:t})}var Kn=L({equal_:mR});function gR(e,t,a){var r=_(t,"a","where"),t=_(a,"b","where"),a=_(e,"condition","where","bool"),e=ot(ot(a.shape,r.shape),t.shape),a=nd(a,e),r=nd(r,e),e=nd(t,e);return M.runKernel(Oo,{condition:a,t:r,e:e})}var vn=L({where_:gR});function bR(e){e={x:_(e,"x","zerosLike")};return M.runKernel(Ho,e)}var je=L({zerosLike_:bR});function yR(e,t){var a=_(e,"a","div"),e=_(t,"b","div");[a,e]=vt(a,e);t=xe(a,e),a=je(t),e=Kn(e,a);return vn(e,a,t)}var vR=L({divNoNan_:yR});function xR(e,t){let a=_(e,"t1","dot"),r=_(t,"t2","dot");O(!(1!==a.rank&&2!==a.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${a.rank} and ${r.rank}.`);let n=1===a.rank?a.size:a.shape[1],s=1===r.rank?r.size:r.shape[0];if(O(n===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${n} and ${s}.`),1===a.rank&&1===r.rank){var i=G(a,[1,-1]),o=G(r,[-1,1]),i=We(i,o);return G(i,[])}if(1===a.rank&&2===r.rank){o=G(a,[1,-1]),i=G(r,[r.shape[0],r.shape[1]]),i=We(o,i);return G(i,[i.size])}if(2===a.rank&&1===r.rank){var l=G(r,[-1,1]),l=We(a,l);return G(l,[l.size])}l=G(r,[r.shape[0],r.shape[1]]);return We(a,l)}var Kde=L({dot_:xR});function wR(e,...t){t=t.map((e,t)=>_(e,`tensors${t}`,"einsum"));return M.runKernel(Qd,t,{equation:e})}var kR=L({einsum_:wR});function IR(e){e={x:_(e,"x","elu","float32")};return M.runKernel(Fa,e)}var fp=L({elu_:IR});function SR(e){let t=_(e,"x","erf");O("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=ce(t,"float32"));e={x:t};return M.runKernel(fl,e)}var CR=L({erf_:SR});function NR(e){e={x:_(e,"x","exp")};return M.runKernel(Oa,e)}var Xn=L({exp_:NR});function TR(e,t=0){e=_(e,"x","expandDims","string_or_numeric");return O(t<=e.rank,()=>"Axis must be <= rank of the tensor"),M.runKernel(fo,{input:e},{dim:t})}var Pn=L({expandDims_:TR});function $R(e){e={x:_(e,"x","expm1")};return M.runKernel(mo,e)}var _R=L({expm1_:$R});function AR(e,t){let a=_(e,"x","tile","string_or_numeric");O(a.rank===t.length,()=>`Error in transpose: rank of input ${a.rank} must match length of reps ${t}.`);e={x:a};return M.runKernel(Cr,e,{reps:t})}var ps=L({tile_:AR});function ER(e,t,a,r="float32"){let n=De([e,t=null==t?e:t],r),s=e<=t?e:t;for(let e=0;e<s;++e)n.set(1,e,e);t=G(n.toTensor(),[e,t]);if(null==a)return t;if(1===a.length)return ps(Pn(t,0),[a[0],1,1]);if(2===a.length)return ps(Pn(Pn(t,0),0),[a[0],a[1],1,1]);if(3===a.length)return ps(Pn(Pn(Pn(t,0),0),0),[a[0],a[1],a[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${a.length}D.`)}var rI=L({eye_:ER});function Pl(e,t,a){return M.runKernel(ml,{},{shape:e,value:t,dtype:a})}function RR(e){e={x:_(e,"x","floor","float32")};return M.runKernel(Pa,e)}var mp=L({floor_:RR});function DR(e,t,a=0,r=0){e=_(e,"x","gather"),t=_(t,"indices","gather","int32");return M.runKernel(bo,{x:e,indices:t},{axis:a,batchDims:r})}var Ku=L({gather_:DR});function FR(e,t){e=_(e,"a","greater","string_or_numeric"),t=_(t,"b","greater","string_or_numeric");return[e,t]=vt(e,t),ot(e.shape,t.shape),M.runKernel(vo,{a:e,b:t})}var Wn=L({greater_:FR});function OR(e,t){e=_(e,"a","greaterEqual","string_or_numeric"),t=_(t,"b","greaterEqual","string_or_numeric");return[e,t]=vt(e,t),ot(e.shape,t.shape),M.runKernel(La,{a:e,b:t})}var Ko=L({greaterEqual_:OR});function PR(e){e={input:_(e,"input","imag")};return M.runKernel(Zd,e)}var Kg=L({imag_:PR});function zR(e){e={x:_(e,"x","isFinite")};return M.runKernel(gl,e)}var Xde=L({isFinite_:zR});function MR(e){e={x:_(e,"x","isInf")};return M.runKernel(bl,e)}var Yde=L({isInf_:MR});function LR(e){e={x:_(e,"x","isNaN")};return M.runKernel(yl,e)}var BR=L({isNaN_:LR});function VR(e,t=.2){e={x:_(e,"x","leakyRelu")};return M.runKernel(Va,e,{alpha:t})}var Xg=L({leakyRelu_:VR});function WR(e,t){e=_(e,"a","less","string_or_numeric"),t=_(t,"b","less","string_or_numeric");return[e,t]=vt(e,t),ot(e.shape,t.shape),M.runKernel(xo,{a:e,b:t})}var aI=L({less_:WR});function UR(e,t){e=_(e,"a","lessEqual","string_or_numeric"),t=_(t,"b","lessEqual","string_or_numeric");return[e,t]=vt(e,t),ot(e.shape,t.shape),M.runKernel(wo,{a:e,b:t})}var Xo=L({lessEqual_:UR});function GR(e,t,a){if(a<=0)throw new Error("The number of values should be positive.");return M.runKernel(xg,{},{start:e,stop:t,num:a})}function HR(e,t=5,a=1,r=1,n=.5){let s=_(e,"x","localResponseNormalization");O(4===s.rank||3===s.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),O(Yi(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;3===s.rank&&(o=!0,i=G(s,[1,s.shape[0],s.shape[1],s.shape[2]]));e={x:i},n=M.runKernel(ep,e,{depthRadius:t,bias:a,alpha:r,beta:n});return o?G(n,[n.shape[1],n.shape[2],n.shape[3]]):n}var qR=L({localResponseNormalization_:HR});function jR(e){e={x:_(e,"x","log","float32")};return M.runKernel(Wa,e)}var Yn=L({log_:jR});function KR(e){e={x:_(e,"x","log1p")};return M.runKernel(vl,e)}var Yg=L({log1p_:KR});function Qde(n){return O(hr(n),()=>"The f passed in grad(f) must be a function"),(e,t)=>{let a=_(e,"x","tf.grad","string_or_numeric"),r=null!=t?_(t,"dy","tf.grad"):null;return M.tidy(()=>{var{value:e,grads:t}=M.gradients(()=>n(a),[a],r);return null!=r&&pn(e.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),gp(t),t[0]})}}function Zde(n){return O(hr(n),()=>"The f passed in grads(f) must be a function"),(e,t)=>{O(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let a=Gu(e,"args","tf.grads","string_or_numeric"),r=null!=t?_(t,"dy","tf.grads"):null;return M.tidy(()=>{var{value:e,grads:t}=M.gradients(()=>n(...a),a,r);return null!=r&&pn(e.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),gp(t),t})}}function Jde(r){return O(hr(r),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{O(e instanceof et,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),O(null==t||t instanceof et,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");var{grads:a,value:t}=M.gradients(()=>r(e),[e],t);return gp(a),{grad:a[0],value:t}}}function epe(r){return O(hr(r),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{O(Array.isArray(e)&&e.every(e=>e instanceof et),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),O(null==t||t instanceof et,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");var a=M.gradients(()=>r(...e),e,t);return null!=t&&pn(a.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),gp(a.grads),a}}function XR(e,t){O(hr(e),()=>"The f passed in variableGrads(f) must be a function"),O(null==t||Array.isArray(t)&&t.every(e=>e instanceof gd),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");var a=null!=t;if(!a)for(var r in t=[],M.registeredVariables)t.push(M.registeredVariables[r]);let n=a?t.filter(e=>!e.trainable):null,s=t.length;O(0<(t=t.filter(e=>e.trainable)).length,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);let{value:i,grads:o}=M.gradients(e,t,null,!0);O(o.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),O(0===i.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((e,t)=>{null!=o[t]&&(l[e.name]=o[t])}),null!=n&&n.forEach(e=>l[e.name]=null),{value:i,grads:l}}function js(e){return M.customGrad(e)}function gp(e){if(0<e.filter(e=>null==e).length)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function YR(e){e={x:_(e,"x","neg")};return M.runKernel(Io,e)}var kt=L({neg_:YR});function QR(e){e={x:_(e,"x","softplus")};return M.runKernel($l,e)}var zl=L({softplus_:QR});function ZR(e){e=_(e,"x","logSigmoid");return js(t=>({value:kt(zl(kt(t))),gradFunc:e=>V(e,qs(kt(t)))}))(e)}var tpe=L({logSigmoid_:ZR});function JR(e,t=null,a=!1){e={x:_(e,"x","max")};return M.runKernel(Ua,e,{reductionIndices:t,keepDims:a})}var As=L({max_:JR});function eD(e,t){e=_(e,"a","sub"),t=_(t,"b","sub");return[e,t]=vt(e,t),M.runKernel(ci,{a:e,b:t})}var ge=L({sub_:eD});function tD(e,t=null,a=!1){let r=_(e,"x","sum");"bool"===r.dtype&&(r=ce(r,"int32"));e={x:r};return M.runKernel(oi,e,{axis:t,keepDims:a})}var ve=L({sum_:tD});function nD(e,r=-1){e=_(e,"logits","logSoftmax");if((r=-1===r?e.rank-1:r)!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${r}`);return js((e,t)=>{var a=As(e,r,!0),a=ge(e,a),a=ge(ce(a,"float32"),Yn(ve(Xn(a),r,!0)));return t([a]),{value:a,gradFunc:(e,t)=>{var[t]=t,t=Xn(t);return ge(e,V(ve(e,r,!0),t))}}})(e)}var iI=L({logSoftmax_:nD});function Qg(t,a){for(let e=0;e<t.length;++e)if(t[t.length-e-1]!==a-1-e)return!1;return!0}function oI(t,a,r){let n=t.length+a.length,s=[],i=0,o=0;for(let e=0;e<n;e++)-1===r.indexOf(e)?s.push(t[i++]):s.push(a[o++]);return s}function uI(t,a){let r=[],n=t.length;for(let e=0;e<n;e++)-1===a.indexOf(e)&&r.push(t[e]);var e=a.map(e=>t[e]);return[r,e]}function da(e,t){return oI(e,t.map(e=>1),t)}function sD(e,t,a){O(Qg(t,a),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${a} input.`)}function lI(t,a){if(Qg(t,a))return null;let r=[];for(let e=0;e<a;++e)-1===t.indexOf(e)&&r.push(e);return t.forEach(e=>r.push(e)),r}function Zg(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function rD(t,a){let r=[];for(let e=a-t;e<a;++e)r.push(e);return r}function aD(e,t=null,a=!1){var r=_(e,"x","logSumExp"),e=ts(t,r.shape),t=As(r,e,!0),r=ge(r,t),r=Xn(r),r=ve(r,e),r=Yn(r),r=ie(G(t,r.shape),r);if(a){e=da(r.shape,e);return G(r,e)}return r}var iD=L({logSumExp_:aD});function oD(e,t){e=_(e,"a","logicalAnd","bool"),t=_(t,"b","logicalAnd","bool");return ot(e.shape,t.shape),M.runKernel(ko,{a:e,b:t})}var Ds=L({logicalAnd_:oD});function uD(e){e={x:_(e,"x","logicalNot","bool")};return M.runKernel(xl,e)}var Jg=L({logicalNot_:uD});function lD(e,t){e=_(e,"a","logicalOr","bool"),t=_(t,"b","logicalOr","bool");return ot(e.shape,t.shape),M.runKernel(Jd,{a:e,b:t})}var cI=L({logicalOr_:lD});function cD(e,t){var a=_(e,"a","logicalXor","bool"),r=_(t,"b","logicalXor","bool");return ot(a.shape,r.shape),Ds(cI(e,t),Jg(Ds(e,t)))}var npe=L({logicalXor_:cD});function dD(e,t,a,r,n){let s=_(e,"x","maxPool"),i=s,o=!1;3===s.rank&&(o=!0,i=G(s,[1,s.shape[0],s.shape[1],s.shape[2]])),O(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),O(Ps(a,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`),hn("maxPool",r,n);e={x:i},n=M.runKernel(Ha,e,{filterSize:t,strides:a,pad:r,dimRoundingMode:n});return o?G(n,[n.shape[1],n.shape[2],n.shape[3]]):n}var eb=L({maxPool_:dD});function pD(e,t=[1,1,1],a,r,n,s="NDHWC"){let i=_(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=G(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),O("NDHWC"===s,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),hn("maxPool3d",r,n);e={x:o},n=M.runKernel(tp,e,{filterSize:t,strides:a,pad:r,dimRoundingMode:n,dataFormat:s});return l?G(n,[n.shape[1],n.shape[2],n.shape[3],n.shape[4]]):n}var dI=L({maxPool3d_:pD});function hD(e,t,a,r,n=!1){e={x:_(e,"x","maxPoolWithArgmax")},n=M.runKernel(Sg,e,{filterSize:t,strides:a,pad:r,includeBatchInIndex:n});return{result:n[0],indexes:n[1]}}var fD=L({maxPoolWithArgmax_:hD});function mD(e,t){let a=_(e,"a","maximum"),r=_(t,"b","maximum");[a,r]=vt(a,r),"bool"===a.dtype&&(a=ce(a,"int32"),r=ce(r,"int32")),ot(a.shape,r.shape);t={a:a,b:r};return M.runKernel(Ga,t)}var $r=L({maximum_:mD});function gD(e,t=null,a=!1){e={x:_(e,"x","mean")};return M.runKernel(qa,e,{axis:t,keepDims:a})}var St=L({mean_:gD});function $t(e,t="float32"){if("complex64"===t){var a=$t(e,"float32"),r=$t(e,"float32");return oa(a,r)}r=Hd(pt(e),t);return M.makeTensor(r,e,t)}function Mn(e,t="float32"){if("complex64"===t){var a=Mn(e,"float32"),r=$t(e,"float32");return oa(a,r)}r=ng(pt(e),t);return M.makeTensor(r,e,t)}function spe(e,t,{indexing:a="xy"}={}){if("xy"!==a&&"ij"!==a)throw new TypeError(`${a} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=_(e,"x","meshgrid",e instanceof et?e.dtype:"float32");if(void 0===t)return[r];let n=_(t,"y","meshgrid",t instanceof et?t.dtype:"float32"),s=pt(r.shape),i=pt(n.shape);return"xy"===a?(r=G(r,[1,-1]),n=G(n,[-1,1]),[We(Mn([i,1],r.dtype),r),We(n,Mn([1,s],n.dtype))]):(r=G(r,[-1,1]),n=G(n,[1,-1]),[We(r,Mn([1,i],r.dtype)),We(Mn([s,1],n.dtype),n)])}function bD(e,t=null,a=!1){e={x:_(e,"x","min")};return M.runKernel(ja,e,{axis:t,keepDims:a})}var fm=L({min_:bD});function yD(e,t){let a=_(e,"a","minimum"),r=_(t,"b","minimum");[a,r]=vt(a,r),"bool"===a.dtype&&(a=ce(a,"int32"),r=ce(r,"int32")),ot(a.shape,r.shape);t={a:a,b:r};return M.runKernel(Ka,t)}var bp=L({minimum_:yD});function vD(e,t,a){O("reflect"===a||"symmetric"===a,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${a}.`);let r=_(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");O(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);let n="reflect"===a?1:0;for(let e=0;e<r.rank;e++)O(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),O(0<=t[e][0]&&t[e][0]<=r.shape[e]-n&&0<=t[e][1]&&t[e][1]<=r.shape[e]-n,()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-n} or less than 0 for input of shape ${r.shape}`);e={x:r};return M.runKernel(Xa,e,{paddings:t,mode:a})}var xD=L({mirrorPad_:vD});function wD(e,t){e=_(e,"a","mod"),t=_(t,"b","mod");return[e,t]=vt(e,t),M.runKernel(wl,{a:e,b:t})}var kD=L({mod_:wD});function ID(e){e=_(e,"x","square");return M.runKernel("Square",{x:e},{})}var ct=L({square_:ID});function SD(e,t=null,a=!1){let r=ts(t,(e=_(e,"x","moments")).shape),n=St(e,r,a),s=n.shape;a||(s=da(n.shape,r));e=ct(ge(ce(e,"float32"),G(n,s)));return{mean:n,variance:St(e,r,a)}}var tb=L({moments_:SD});function CD(t,e,a,r){let n=_(e,"data","multiRNNCell"),s=Gu(a,"c","multiRNNCell"),i=Gu(r,"h","multiRNNCell"),o=n,l=[];for(let e=0;e<t.length;e++){var u=t[e](o,s[e],i[e]);l.push(u[0]),l.push(u[1]),o=u[1]}let d=[],p=[];for(let e=0;e<l.length;e+=2)d.push(l[e]),p.push(l[e+1]);return[d,p]}var rpe=L({multiRNNCell_:CD});function ND(e,t,a,r=!1){var n=_(e,"logits","multinomial"),s=n.size,e=n.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(2<e)throw new Error(`Rank of probabilities must be 1 or 2, but is ${e}`);a=a||Math.random();n={logits:1===e?G(n,[1,-1]):n},r=M.runKernel(Cg,n,{numSamples:t,seed:a,normalized:r});return 1===e?G(r,[r.size]):r}var TD=L({multinomial_:ND});function $D(e,t){e=_(e,"a","notEqual","string_or_numeric"),t=_(t,"b","notEqual","string_or_numeric");return[e,t]=vt(e,t),ot(e.shape,t.shape),M.runKernel(So,{a:e,b:t})}var Xu=L({notEqual_:$D});function _D(e){e={x:_(e,"x","onesLike")};return M.runKernel(To,e)}var Qn=L({onesLike_:_D});function AD(e,t){let a=_(e,"v1","outerProduct"),r=_(t,"v2","outerProduct");O(1===a.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${a.rank} and ${r.rank}.`);e=G(a,[-1,1]),t=G(r,[1,-1]);return We(e,t)}var ape=L({outerProduct_:AD});function ED(e,t,a=0){e=_(e,"x","pad");if(0===e.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return M.runKernel(Qa,{x:e},{paddings:t,constantValue:a})}var fi=L({pad_:ED});function RD(e,t,a=0){return O(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),fi(e,[t],a)}var ipe=L({pad1d_:RD});function DD(e,t,a=0){return O(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),fi(e,t,a)}var ope=L({pad2d_:DD});function FD(e,t,a=0){return O(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),fi(e,t,a)}var upe=L({pad3d_:FD});function OD(e,t,a=0){return O(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),fi(e,t,a)}var lpe=L({pad4d_:OD});function PD(e,r,n){let t=_(e,"x","spaceToBatchND");O(t.rank>=1+r.length,()=>`input rank ${t.rank} should be > than [blockShape] ${r.length}`),O(n.length===r.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${r.length}`),O(t.shape.reduce((e,t,a)=>0<a&&a<=r.length?e&&(t+n[a-1][0]+n[a-1][1])%r[a-1]==0:e,!0),()=>`input spatial dimensions ${t.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${r.toString()}`);e={x:t};return M.runKernel(Mo,e,{blockShape:r,paddings:n})}var nb=L({spaceToBatchND_:PD});function zD(e,t,a,r,n,s,i){null==n&&(n=[1,1]),null==s&&(s=1),0===r&&(r="valid");let o=_(e,"x","maxPool"),l=o,u=!1;3===o.rank&&(u=!0,l=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(Ps(s,n),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${n}'`);let d=jk(l.shape,t,s,n,r),p=[d.dilationHeight,d.dilationWidth],h;h="same"===r?LD([d.filterHeight,d.filterWidth],p):[[0,0],[0,0]];let c=1===p[0]&&1===p[1],[f,m]=MD([d.inHeight,d.inWidth],p,h),g=c?r:"valid",b=c?l:nb(l,p,f),y=("avg"===a?()=>Gg(b,t,s,g,i):()=>eb(b,t,s,g,i))(),v=c?y:Hg(y,p,m);return u?G(v,[v.shape[1],v.shape[2],v.shape[3]]):v}function MD(e,t,a){let r=a.map(e=>e[0]),n=a.map(e=>e[1]),s=e.concat(r,n),i=t.map((e,t)=>(e-s[t]%e)%e),o=n.map((e,t)=>e+i[t]),l=t.map((e,t)=>[r[t],o[t]]),u=t.map((e,t)=>[0,i[t]]);return[l,u]}function LD(e,a){let t=e.map((e,t)=>e+(e-1)*(a[t]-1)).map(e=>e-1),r=t.map(e=>Math.floor(e/2)),n=t.map((e,t)=>e-r[t]);return t.map((e,t)=>[r[t],n[t]])}var cpe=L({pool_:zD});function BD(e,t){e=_(e,"base","pow"),t=_(t,"exp","pow");return[e,t]=vt(e,t),M.runKernel(Za,{a:e,b:t})}var pa=L({pow_:BD});function VD(e,t){e=_(e,"x","prelu"),t=_(t,"alpha","prelu");return M.runKernel(Ja,{x:e,alpha:t})}var sb=L({prelu_:VD});function WD(e,t=null,a=!1){let r=_(e,"x","prod");"bool"===r.dtype&&(r=ce(r,"int32"));e={x:r};return M.runKernel(Ao,e,{axis:t,keepDims:a})}var pI=L({prod_:WD});function UD(e,t,a){let r=pt(e),n=null;if(null==a||"float32"===a)n=new Float32Array(r);else if("int32"===a)n=new Int32Array(r);else{if("bool"!==a)throw new Error(`Unknown data type ${a}`);n=new Uint8Array(r)}for(let e=0;e<r;e++)n[e]=t();return M.makeTensor(n,e,a)}var dpe=L({rand_:UD}),rb=xa(Wd()),ab=class{constructor(e,t,a,r,n){this.mean=e,this.stdDev=t,this.dtype=a,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=n||Math.random();this.random=rb.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){var e=this.nextVal;return this.nextVal=NaN,e}let r,n,s=!1;for(;!s;){let e,t,a;for(;e=2*this.random()-1,t=2*this.random()-1,a=e*e+t*t,1<=a||0===a;);var i=Math.sqrt(-2*Math.log(a)/a);r=this.mean+this.stdDev*e*i,n=this.mean+this.stdDev*t*i,this.truncated&&!this.isValidTruncated(r)||(s=!0)}return this.truncated&&!this.isValidTruncated(n)||(this.nextVal=this.convertValue(n)),this.convertValue(r)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},GD=class{constructor(e,t,a,r){this.alpha=e,this.beta=1/t,this.dtype=a;let n=r||Math.random();this.randu=rb.alea(n.toString()),this.randn=new ab(0,1,a,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,a,r,n,s;for(;;){for(;r=this.randn.nextValue(),s=1+this.c*r,s<=0;);if(s*=s*s,t=1-.331*(e=r*r)*e,a=.5*e+this.d*(1-s+Math.log(s)),(n=this.randu())<t||Math.log(n)<a)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}},HD=class{constructor(e=0,t=1,a,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=a,"number"==typeof(r=null==r?Math.random():r)&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=rb.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function qD(e,t,a=1,r="float32",n){if(null==a&&(a=1),"float32"!==(r=null==r?"float32":r)&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);let s=new GD(t,a,r,n),i=De(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}var ppe=L({randomGamma_:qD});function jD(e,t=0,a=1,r,n){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);let s=new ab(t,a,r,!1,n),i=De(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}var KD=L({randomNormal_:jD});function XD(e,t=0,a=1,r="float32",n){let s=De(e,r),i=new HD(t,a,null,n);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}var Ml=L({randomUniform_:XD});function Yu(e,t,a=1,r="float32"){if(0===a)throw new Error("Cannot have a step of zero");return M.runKernel(Il,{},{start:e,stop:t,step:a,dtype:r})}function YD(e){e={input:_(e,"input","real")};return M.runKernel(np,e)}var wd=L({real_:YD});function QD(e){e={x:_(e,"x","reciprocal")};return M.runKernel(Sl,e)}var ZD=L({reciprocal_:QD});function JD(e){e={x:_(e,"x","relu")};return M.runKernel(ei,e)}var Xs=L({relu_:JD});function e3(e){e={x:_(e,"x","relu6")};return M.runKernel(ni,e)}var hI=L({relu6_:e3});function t3(e,t){e={x:_(e,"x","reverse")};return M.runKernel(Ro,e,{dims:t})}var Zn=L({reverse_:t3});function n3(e){let t=_(e,"x","reverse");return O(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Zn(t,0)}var hpe=L({reverse1d_:n3});function s3(e,t){let a=_(e,"x","reverse");return O(2===a.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${a.rank}.`),Zn(a,t)}var fpe=L({reverse2d_:s3});function r3(e,t){let a=_(e,"x","reverse");return O(3===a.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${a.rank}.`),Zn(a,t)}var mpe=L({reverse3d_:r3});function a3(e,t){let a=_(e,"x","reverse");return O(4===a.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${a.rank}.`),Zn(a,t)}var gpe=L({reverse4d_:a3});function i3(e){e={x:_(e,"x","round")};return M.runKernel(Do,e)}var fI=L({round_:i3});function o3(e){e={x:_(e,"x","rsqrt","float32")};return M.runKernel(si,e)}var mI=L({rsqrt_:o3});function we(e,t){if((Qt(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Qt(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Nr(e,[],[],t)}function u3(e){e={x:_(e,"x","selu")};return M.runKernel(Nl,e)}var gI=L({selu_:u3});function l3(e,t,a,r,n,s=[1,1],i="NHWC"){let o=_(e,"x","separableConv2d"),l=_(t,"depthwiseFilter","separableConv2d"),u=_(a,"pointwiseFilter","separableConv2d"),d=o,p=!1;if(3===o.rank&&(p=!0,d=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");O(4===d.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`),O(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),O(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),O(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),O(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let h=l.shape[2],c=l.shape[3];O(u.shape[2]===h*c,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*c}, but got ${u.shape[2]}.`);s=hp(d,l,r,n,i,s),i=ca(s,u,1,"valid",i);return p?G(i,[i.shape[1],i.shape[2],i.shape[3]]):i}var c3=L({separableConv2d_:l3});async function d3(e,t){let a=_(e,"x","setdiff1d"),r=_(t,"y","setdiff1d");O(a.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${a.dtype}) and y (${r.dtype}).`),O(1===a.rank,()=>`x should be 1D tensor, but got x (${a.shape}).`),O(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);let n=await a.data(),s=await r.data(),i=new Set(s),o=0;for(let e=0;e<n.length;e++)i.has(n[e])||o++;let l=new Vt([o],a.dtype),u=new Vt([o],"int32");for(let e=0,t=0;e<n.length;e++)i.has(n[e])||(l.values[t]=n[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]}var p3=d3;function h3(e){e={x:_(e,"x","sign")};return M.runKernel(Tl,e)}var f3=L({sign_:h3});function m3(e){e={x:_(e,"x","sin","float32")};return M.runKernel(ri,e)}var bI=L({sin_:m3});function g3(e){e={x:_(e,"x","sinh")};return M.runKernel(zo,e)}var yI=L({sinh_:g3});function b3(e,t,a){let r=_(e,"x","slice1d");return O(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),He(r,[t],[a])}var ib=L({slice1d_:b3});function y3(e,t,a){let r=_(e,"x","slice2d");return O(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),He(r,t,a)}var vI=L({slice2d_:y3});function v3(e,t,a){let r=_(e,"x","slice3d");return O(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),He(r,t,a)}var ob=L({slice3d_:v3});function x3(e,t,a){let r=_(e,"x","slice4d");return O(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),He(r,t,a)}var kd=L({slice4d_:x3});function w3(e,t=-1){e=_(e,"logits","softmax","float32");if((t=-1===t?e.rank-1:t)!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);return M.runKernel(ui,{logits:e},{dim:t})}var ub=L({softmax_:w3});function k3(e){return O("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`),M.runKernel(yg,{input:e})}var lb=L({fft_:k3});function I3(e){return O("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`),M.runKernel(vg,{input:e})}var Id=L({ifft_:I3});function S3(a){let e=a.shape[a.shape.length-1],t=a.size/e,r;var n,s,i,o,l;if(r=e<=2?(o=G(a,[t,e]),Id(o)):(l=[t,2*(e-1)],n=G(wd(a),[t,e]),s=G(Kg(a),[t,e]),i=Zn(He(n,[0,1],[t,e-2]),1),o=V(Zn(He(s,[0,1],[t,e-2]),1),we(-1)),i=Ft([n,i],1),o=Ft([s,o],1),l=G(oa(i,o),[l[0],l[1]]),Id(l)),r=wd(r),3===a.rank&&0!==a.shape[0]){let e=r,t=a.shape[0];r=G(r,[t,r.shape[0]/t,r.shape[1]]),e.dispose()}return r}var xI=L({irfft_:S3});function C3(e,t,a=0){e={x:_(e,"x","split")};return M.runKernel(Lo,e,{numOrSizeSplits:t,axis:a})}var Bn=L({split_:C3});function N3(a,r){O("float32"===a.dtype,()=>`The dtype for rfft() must be real value but got ${a.dtype}`);let n=a.shape[a.shape.length-1],e=a.size/n,s;if(null!=r&&r<n){let e=a.shape.map(e=>0),t=a.shape.map(e=>e);t[a.shape.length-1]=r,s=He(a,e,t),n=r}else if(null!=r&&r>n){let e=a.shape.map(e=>e);e[a.shape.length-1]=r-n,s=Ft([a,$t(e)],a.shape.length-1),n=r}else s=a;let t=je(s),i=G(oa(s,t),[e,n]),o=lb(i),l=Math.floor(n/2)+1,u=wd(o),d=Kg(o),p=Bn(u,[l,n-l],u.shape.length-1),h=Bn(d,[l,n-l],d.shape.length-1),c=s.shape.slice();return c[s.shape.length-1]=l,G(oa(p[0],h[0]),c)}var cb=L({rfft_:N3});function T3(e){e={x:_(e,"x","sqrt","float32")};return M.runKernel(ii,e)}var dn=L({sqrt_:T3});function $3(e,t){e=_(e,"a","squaredDifference"),t=_(t,"b","squaredDifference");[e,t]=vt(e,t),ot(e.shape,t.shape);return M.runKernel(li,{a:e,b:t},{})}var wI=L({squaredDifference_:$3});function _3(e,t){e=_(e,"x","squeeze");return G(e,Gw(e.shape,t).newShape)}var mr=L({squeeze_:_3});function A3(e,t=0){e=Gu(e,"tensors","stack","string_or_numeric");return O(1<=e.length,()=>"Pass at least one tensor to tf.stack"),0<e.length&&O(t<=e[0].rank,()=>"Axis must be <= rank of the tensor"),M.runKernel(_o,e,{axis:t})}var Jn=L({stack_:A3});function E3(e,t=0){e={x:_(e,"x","step")};return M.runKernel(hi,e,{alpha:t})}var yp=L({step_:E3});function R3(e,t,a,r,n=0,s=0,i=0,o=0,l=0){e={x:_(e,"x","stridedSlice","string_or_numeric")};return M.runKernel(Bo,e,{begin:t,end:a,strides:r,beginMask:n,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l})}var D3=L({stridedSlice_:R3});function F3(e){e={x:_(e,"x","tan","float32")};return M.runKernel(Vo,e)}var O3=L({tan_:F3});function Zt(e,t){wa(e);var a=Rs(e,t);if(1!==a.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Nr(e,null,a,t)}function Ki(e,t,a){if(wa(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");var r=Rs(e,a);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Nr(e,t,r,a)}function bpe(e,t,a){if(wa(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");var r=Rs(e,a);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Nr(e,t,r,a)}function ype(e,t,a){if(wa(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");var r=Rs(e,a);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Nr(e,t,r,a)}function vpe(e,t,a){if(wa(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");var r=Rs(e,a);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Nr(e,t=t||r,r,a)}function P3(e,t=1,a=!0){var r=_(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");e=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(e<t)throw new Error(`'k' passed to topk() must be <= the last dimension (${e}) but got ${t}`);var[t,a]=M.runKernel(Wo,{x:r},{k:t,sorted:a});return{values:t,indices:a}}var z3=L({topk_:P3});function M3(e,t=0,a=1,r,n){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");let s=new ab(t,a,r,!0,n),i=De(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}var db=L({truncatedNormal_:M3});function L3(e,t=0){e=_(e,"x","unique","string_or_numeric");O(0<e.rank,()=>"The input tensor must be at least 1D");var[e,t]=M.runKernel(Ag,{x:e},{axis:t});return{values:e,indices:t}}var hx=L({unique_:L3});function B3(e,t,a){e=_(e,"x","unsortedSegmentSum"),t=_(t,"segmentIds","unsortedSegmentSum","int32");return O(Yi(a),()=>"numSegments must be of dtype int"),M.runKernel(up,{x:e,segmentIds:t},{numSegments:a})}var V3=L({unsortedSegmentSum_:B3});function W3(e,t=0){let a=_(e,"x","unstack","string_or_numeric");O(t>=-a.shape.length&&t<a.shape.length,()=>`Axis = ${t} is not in [-${a.shape.length}, ${a.shape.length})`);e={value:a};return M.runKernel(Go,e,{axis:t})}var Fs=L({unstack_:W3});function U3(e,t=!0,a,r){return M.makeVariable(e,t,a,r)}function kI(t,a){let r=[];for(let e=0;e<a.length;e++)a[e]&&r.push(e);let n=De(t,"int32"),s=De([r.length,t.length],"int32");for(let e=0;e<r.length;e++){var i=n.indexToLoc(r[e]),o=e*t.length;s.values.set(i,o)}return s.toTensor()}async function G3(e){let t=_(e,"condition","whereAsync","bool"),a=await t.data(),r=kI(t.shape,a);return e!==t&&t.dispose(),r}var II=G3;async function H3(e,t,a){let r=_(e,"tensor","boolMask"),n=_(t,"mask","boolMask","bool"),s=null==a?0:a,i=n.rank,o=r.shape;O(0<i,()=>"mask cannot be scalar"),pn(o.slice(s,s+i),n.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=s;e<s+i;e++)l*=o[e];let u=o.slice(0,s).concat([l],o.slice(s+i)),d=G(r,u),p=G(n,[-1]),h=await II(p),c=mr(h,[1]),f=Ku(d,c,s);return e!==r&&r.dispose(),t!==n&&n.dispose(),c.dispose(),d.dispose(),p.dispose(),h.dispose(),f}var xpe=H3;function q3(e,t="euclidean",a=null,r=!1){let n=SI(e=_(e,"x","norm"),t,a),s=n.shape;return r&&(e=ts(a,e.shape),s=da(n.shape,e)),G(n,s)}function SI(e,t,a=null){if(0===e.rank)return Mt(e);if(1!==e.rank&&null===a)return SI(G(e,[-1]),t,a);if(1===e.rank||"number"==typeof a||Array.isArray(a)&&1===a.length){if(1===t)return ve(Mt(e),a);if(t===1/0)return As(Mt(e),a);if(t===-1/0)return fm(Mt(e),a);if("euclidean"===t||2===t)return dn(ve(pa(Mt(e),we(2,"int32")),a));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(a)&&2===a.length){if(1===t)return As(ve(Mt(e),a[0]),a[1]-1);if(t===1/0)return As(ve(Mt(e),a[1]),a[0]);if(t===-1/0)return fm(ve(Mt(e),a[1]),a[0]);if("fro"===t||"euclidean"===t)return dn(ve(ct(e),a));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${a}`)}var CI=L({norm_:q3});function j3(e,t,a,r,n=!0){e=_(e,"v","movingAverage"),t=_(t,"x","movingAverage"),a=_(a,"decay","movingAverage");uk(e,t),O(kr(e.shape,t.shape),()=>"Shape mismatch in v and x");let s=we(1),i=ge(s,a),o=V(ge(t,e),i);return n&&(O(null!=r,()=>"When using zeroDebias: true, step is required."),r=_(r,"step","movingAverage"),o=xe(o,ge(s,pa(a,r)))),ie(e,o)}var wpe=L({movingAverage_:j3});function K3(e,t,a){e=_(e,"indices","scatterND","int32"),t=_(t,"updates","scatterND");return Bg(t,e,a),M.runKernel(Fo,{indices:e,updates:t},{shape:a})}var X3=L({scatterND_:K3});function Y3(e,t,a,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(2<e.rank)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);var n=0<e.rank?e.shape[0]:1,e=1<e.rank?e.shape[1]:1;if(a.length!==e)throw new Error(`outputShape has incorrect number of elements:, ${a.length}, should be: ${e}.`);e=t.size;if(0!==t.rank&&(1!==t.rank||e!==n))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${n}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function Q3(e,t,a,r=0){e=_(e,"sparseIndices","sparseToDense","int32"),t=_(t,"sparseValues","sparseToDense"),r=_(r,"defaultValue","sparseToDense",t.dtype);return Y3(e,t,a,r),M.runKernel(ip,{sparseIndices:e,sparseValues:t,defaultValue:r},{outputShape:a})}var NI=L({sparseToDense_:Q3});function Z3(e,t){t=_(t,"indices","gatherND","int32"),t={params:_(e,"x","gatherND","string_or_numeric"),indices:t};return M.runKernel(yo,t)}var J3=L({gatherND_:Z3});function eF(a,r){if(null==r)return a.shape.slice();if(kr(a.shape,r))return r;if(a.shape.length!==r.length)return r;{let t=[];for(let e=0;e<a.shape.length;e++)null==r[e]&&null!=a.shape[e]?t.push(a.shape[e]):t.push(r[e]);return t}}function tF(e,t,a,r){let n=_(e,"x","dropout");if(O("float32"===n.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${n.dtype} tensor instead.`),O(0<=t&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof et?n.clone():n;e=eF(n,a),a=1-t,a=xe(mp(ie(Ml(e,0,1,"float32",r),a)),a);return V(n,a)}var nF=L({dropout_:tF});function sF(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function TI(t,a,r){let n=1-t%2,s=new Float32Array(t);for(let e=0;e<t;++e){var i=2*Math.PI*e/(t+n-1);s[e]=a-r*Math.cos(i)}return Zt(s,"float32")}async function rF(e,t,n=1){let a=_(e,"predictions","inTopK"),r=_(t,"targets","inTopK");O(1<a.rank,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${a.rank}`),O(a.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${a.rank} and targets rank ${r.rank}`),pn(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=a.shape[a.shape.length-1];O(0<n&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);let i=await a.data(),o=await r.data(),[l,u]=[i.length/s,s],d=Hw("bool",l);for(let r=0;r<l;r++){let e=r*u,t=i.subarray(e,e+u),a=[];for(let e=0;e<t.length;e++)a.push({value:t[e],index:e});a.sort((e,t)=>t.value-e.value);for(let e=d[r]=0;e<n;e++)if(a[e].index===o[r]){d[r]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),fs(d,r.shape,"bool")}var kpe=rF,ha={};function aF(e,t,a,r,n,s="NHWC",i){let o=e;3===e.rank&&(o=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=G(t,[1,t.shape[0],t.shape[1],t.shape[2]])),O(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),O(4===l.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),O(4===a.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${a}.`);let u="NHWC"===s?o.shape[3]:o.shape[1],d="NHWC"===s?l.shape[3]:l.shape[1];O(u===a[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${a[2]}.`),O(d===a[3],()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${a[3]}).`),hn("conv2dDerFilter",n,i);t={x:o,dy:l};return M.runKernel(cg,t,{strides:r,pad:n,dataFormat:s,dimRoundingMode:i,filterShape:a})}Ae(ha,{conv2d:()=>oF,depthwiseConv2d:()=>dF,matMul:()=>hF});var pb=L({conv2DBackpropFilter_:aF});function vp(e,t,a){if(null==a||"linear"===a)return e;if("relu"===a)return V(e,yp(t));throw new Error(`Cannot compute gradient for fused activation ${a}.`)}function xp(e,t){let a=t,r=_t(e.shape,t.shape);return 0<r.length&&(a=ve(a,r)),G(a,e.shape)}function wp(e,t,a,r){if("linear"===t)return e;if("relu"===t)return Xs(e);if("elu"===t)return fp(e);if("relu6"===t)return hI(e);if("prelu"===t)return sb(e,a);if("leakyrelu"===t)return Xg(e,r);if("sigmoid"===t)return qs(e);throw new Error(`Unknown fused activation ${t}.`)}var kp=(e,t)=>!(0<e)||"linear"===t;function iF({x:t,filter:a,strides:l,pad:u,dataFormat:r="NHWC",dilations:d=[1,1],dimRoundingMode:n,bias:s,activation:p="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(p=p||"linear",!1===kp(M.state.gradientDepth,p)){let e=ca(t,a,l,u,r,d,n);return null!=s&&(e=ie(e,s)),wp(e,p,i,o)}let e=_(t,"x","conv2d","float32"),h=_(a,"filter","conv2d","float32"),c=e,f=!1;3===e.rank&&(f=!0,c=G(e,[1,e.shape[0],e.shape[1],e.shape[2]])),O(4===c.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`),O(4===h.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),hn("fused conv2d",u,n),O(c.shape[3]===h.shape[2],()=>`Error in conv2d: depth of input (${c.shape[3]}) must match input depth for filter ${h.shape[2]}.`),O(Ps(l,d),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${l} and dilations '${d}'`),O("NHWC"===r,()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);let m=Ol(c.shape,h.shape,l,d,u,n),g;null!=s&&(g=_(s,"bias","fused conv2d"),[g]=vt(g,e),ot(m.outShape,g.shape));let b;null!=i&&(b=_(i,"prelu weights","fused conv2d"));let y=(e,t)=>{var[a,r,n,t]=t,n=vp(e,n,p);O(fr(d),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${d}'`);let s=qg(r.shape,n,a,l,u),i=pb(r,n,a.shape,l,u),o=[s,i];return null!=t&&(n=xp(t,n),o.push(n)),o},v={x:c,filter:h,bias:g,preluActivationWeights:b},x={strides:l,pad:u,dataFormat:r,dilations:d,dimRoundingMode:n,activation:p,leakyreluAlpha:o};return null==s?js((e,t,a)=>{let r=M.runKernel(aa,v,x);return a([t,e,r]),f&&(r=G(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}})(c,h):js((e,t,a,r)=>{let n=M.runKernel(aa,v,x);return r([t,e,n,a]),f&&(n=G(n,[n.shape[1],n.shape[2],n.shape[3]])),{value:n,gradFunc:y}})(c,h,g)}var oF=L({fusedConv2d_:iF});function uF(e,t,a,r,n,s=[1,1],i){let o=e;3===e.rank&&(o=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=G(t,[1,t.shape[0],t.shape[1],t.shape[2]]));t={x:o,dy:l};return M.runKernel(fg,t,{strides:r,pad:n,dimRoundingMode:i,dilations:s,filterShape:a})}var $I=L({depthwiseConv2dNativeBackpropFilter_:uF});function lF(e,t,a,r,n,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=G(t,[1,t.shape[0],t.shape[1],t.shape[2]]));a={dy:o,filter:a},e=M.runKernel(mg,a,{strides:r,pad:n,dimRoundingMode:i,dilations:s,inputShape:e});return l?G(e,[e.shape[1],e.shape[2],e.shape[3]]):e}var _I=L({depthwiseConv2dNativeBackpropInput_:lF});function cF({x:t,filter:a,strides:s,pad:i,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:l,bias:n,activation:u="linear",preluActivationWeights:d,leakyreluAlpha:p}){if(!1===kp(M.state.gradientDepth,u)){let e=hp(t,a,s,i,r,o,l);return null!=n&&(e=ie(e,n)),wp(e,u,d,p)}let e=_(t,"x","depthwiseConv2d","float32"),h=_(a,"filter","depthwiseConv2d","float32"),c=e,f=!1;3===e.rank&&(f=!0,c=G(e,[1,e.shape[0],e.shape[1],e.shape[2]])),O(4===c.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),O(4===h.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),O(c.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),O(Ps(s,o=null==o?[1,1]:o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`),hn("fused depthwiseConv2d",i,l);let m=Ol(c.shape,h.shape,s,o,i,l,!0),g;null!=n&&(g=_(n,"bias","fused conv2d"),[g]=vt(g,e),ot(m.outShape,g.shape));let b;null!=d&&(b=_(d,"prelu weights","fused depthwiseConv2d"));let y=(e,t)=>{O(fr(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);var[a,r,n,t]=t,e=vp(e,n,u),n=_I(r.shape,e,a,s,i,o,l),a=$I(r,e,a.shape,s,i,o,l);return null==t?[n,a]:[n,a,xp(g,e)]},v={x:c,filter:h,bias:g,preluActivationWeights:b},x={strides:s,pad:i,dataFormat:r,dilations:o,dimRoundingMode:l,activation:u,leakyreluAlpha:p};return null==n?js((e,t,a)=>{let r=M.runKernel(ia,v,x);return a([t,e,r]),f&&(r=G(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}})(c,h):js((e,t,a,r)=>{let n=M.runKernel(ia,v,x);return r([t,e,n,a]),f&&(n=G(n,[n.shape[1],n.shape[2],n.shape[3]])),{value:n,gradFunc:y}})(c,h,g)}var dF=L({fusedDepthwiseConv2d_:cF});function pF({a:t,b:a,transposeA:u=!1,transposeB:d=!1,bias:p,activation:h="linear",preluActivationWeights:r,leakyreluAlpha:n}){if(!1===kp(M.state.gradientDepth,h)){let e=We(t,a,u,d);return null!=p&&(e=ie(e,p)),wp(e,h,r,n)}let e=_(t,"a","fused matMul"),s=_(a,"b","fused matMul");[e,s]=vt(e,s);let i=u?e.shape[e.rank-2]:e.shape[e.rank-1],o=d?s.shape[s.rank-1]:s.shape[s.rank-2],l=u?e.shape[e.rank-1]:e.shape[e.rank-2],c=d?s.shape[s.rank-2]:s.shape[s.rank-1],f=e.shape.slice(0,-2),m=s.shape.slice(0,-2),g=pt(f),b=pt(m);O(i===o,()=>`Error in fused matMul: inner shapes (${i}) and (${o}) of Tensors with shapes ${e.shape} and ${s.shape} and transposeA=${u} and transposeB=${d} must match.`);let y=ot(e.shape.slice(0,-2),s.shape.slice(0,-2)).concat([l,c]),v=G(e,u?[g,i,l]:[g,l,i]),x=G(s,d?[b,c,o]:[b,o,c]),w;null!=p&&(w=_(p,"bias","fused matMul"),[w]=vt(w,e),ot(y,w.shape));let k;null!=r&&(k=_(r,"prelu weights","fused matMul"));let I=(e,t)=>{let[a,r,n,s]=t,i=vp(G(e,n.shape),n,h),o,l;if(l=u||d?!u&&d?(o=We(i,r,!1,!1),We(i,a,!0,!1)):u&&!d?(o=We(r,i,!1,!0),We(a,i,!1,!1)):(o=We(r,i,!0,!0),We(i,a,!0,!0)):(o=We(i,r,!1,!0),We(a,i,!0,!1)),null==p)return[o,l];e=xp(s,i);return[o,l,e]},S={a:v,b:x,bias:w,preluActivationWeights:k},C={transposeA:u,transposeB:d,activation:h,leakyreluAlpha:n};return null==p?js((e,t,a)=>{var r=M.runKernel(ra,S,C);return a([e,t,r]),{value:G(r,y),gradFunc:I}})(v,x):js((e,t,a,r)=>{var n=M.runKernel(ra,S,C);return r([e,t,n,a]),{value:G(n,y),gradFunc:I}})(v,x,w)}var hF=L({fusedMatMul_:pF});function fF(e){return TI(e,.54,.46)}var mF=L({hammingWindow_:fF});function gF(e){return TI(e,.5,.5)}var AI=L({hannWindow_:gF});function bF(e,t,a,r=!1,n=0){let s=0,i=[];for(;s+t<=e.size;)i.push(He(e,s,t)),s+=a;if(r)for(;s<e.size;){var o=s+t-e.size,o=Ft([He(e,s,t-o),Pl([o],n)]);i.push(o),s+=a}return 0===i.length?Ki([],[0,t]):G(Ft(i),[i.length,t])}var EI=L({frame_:bF});function yF(e,t,a,r,n=AI){null==r&&(r=sF(t));a=EI(e,t,a),t=V(a,n(t));return cb(t,r)}var vF=L({stft_:yF});function xF(e,t,a,r,n="bilinear",s=0){let i=_(e,"image","cropAndResize"),o=_(t,"boxes","cropAndResize","float32"),l=_(a,"boxInd","cropAndResize","int32"),u=o.shape[0];O(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),O(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),O(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),O(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),O(1<=r[0]&&1<=r[1],()=>`cropSize must be atleast [1,1], but was ${r}`),O("bilinear"===n||"nearest"===n,()=>`method must be bilinear or nearest, but was ${n}`);a={image:i,boxes:o,boxInd:l};return M.runKernel(co,a,{method:n,extrapolationValue:s,cropSize:r})}var wF=L({cropAndResize_:xF});function kF(e){let t=_(e,"image","flipLeftRight","float32");O(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);e={image:t};return M.runKernel(go,e,{})}var IF=L({flipLeftRight_:kF});function SF(e){let t=_(e,"image","grayscaleToRGB"),a=t.rank-1,r=t.shape[a];O(2<=t.rank,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),O(1===r,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);let n=new Array(t.rank);return n.fill(1,0,a),n[a]=3,ps(t,n)}var CF=L({grayscaleToRGB_:SF});function NF(e,t,a=0,r=.5){let n=_(e,"image","rotateWithOffset","float32");O(4===n.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${n.rank}.`);e={image:n};return M.runKernel(qo,e,{radians:t,fillValue:a,center:r})}var TF=L({rotateWithOffset_:NF});function Yo(e,t,a,r,n,s){null==r&&(r=.5),null==n&&(n=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return a=Math.min(a,i),O(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),O(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),O(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),O(1===t.rank,()=>"scores must be a 1D tensor"),O(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),O(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:a,iouThreshold:r,scoreThreshold:n,softNmsSigma:s}}function $F(e,t,a,r=.5,n=Number.NEGATIVE_INFINITY){var s=_(e,"boxes","nonMaxSuppression","float32"),e=_(t,"scores","nonMaxSuppression","float32"),t=Yo(s,e,a,r,n);return a=t.maxOutputSize,r=t.iouThreshold,n=t.scoreThreshold,M.runKernel(Co,{boxes:s,scores:e},{maxOutputSize:a,iouThreshold:r,scoreThreshold:n})}var _F=L({nonMaxSuppression_:$F});function AF(e,t,a){a=EF(e,t,a);e.splice(a<0?-(a+1):a,0,t)}function EF(e,t,a){return DF(e,t,a||RF)}function RF(e,t){return t<e?1:e<t?-1:0}function DF(e,t,a){let r=0,n=e.length,s,i=!1;for(;r<n;){var o=a(t,e[s=r+(n-r>>>1)]);0<o?r=s+1:(n=s,i=!o)}return i?r:-r-1}function RI(e,t,a,r,n){return hb(e,t,a,r,n,0)}function DI(e,t,a,r,n,s){return hb(e,t,a,r,n,0,!1,s,!0)}function FI(e,t,a,r,n,s){return hb(e,t,a,r,n,s,!0)}function hb(s,t,e,i,o,a,r=!1,n=!1,l=!1){let u=[];for(let e=0;e<t.length;e++)t[e]>o&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(fx);let d=0<a?-.5/a:0,p=[],h=[];for(;p.length<e&&0<u.length;){let t=u.pop(),{score:e,boxIndex:a,suppressBeginIndex:r}=t;if(e<o)break;let n=!1;for(let e=p.length-1;e>=r;--e){var c=FF(s,a,p[e]);if(i<=c){n=!0;break}if(t.score=t.score*OF(i,d,c),t.score<=o)break}t.suppressBeginIndex=p.length,n||(t.score===e?(p.push(a),h.push(t.score)):t.score>o&&AF(u,t,fx))}var f=p.length,a=e-f;n&&0<a&&(p.push(...new Array(a).fill(0)),h.push(...new Array(a).fill(0)));let m={selectedIndices:p};return r&&(m.selectedScores=h),l&&(m.validOutputs=f),m}function FF(e,t,a){var r=e.subarray(4*t,4*t+4),n=e.subarray(4*a,4*a+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(n[0],n[2]),t=Math.min(n[1],n[3]),e=Math.max(n[0],n[2]),a=Math.max(n[1],n[3]),r=(o-s)*(l-i),n=(e-u)*(a-t);if(r<=0||n<=0)return 0;u=Math.max(s,u),t=Math.max(i,t),e=Math.min(o,e),a=Math.min(l,a),t=Math.max(e-u,0)*Math.max(a-t,0);return t/(r+n-t)}function OF(e,t,a){t=Math.exp(t*a*a);return a<=e?t:0}function fx(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function PF(e,t,a,r=.5,n=Number.NEGATIVE_INFINITY){let s=_(e,"boxes","nonMaxSuppressionAsync"),i=_(t,"scores","nonMaxSuppressionAsync"),o=Yo(s,i,a,r,n);a=o.maxOutputSize,r=o.iouThreshold,n=o.scoreThreshold;var l=await Promise.all([s.data(),i.data()]),n=RI(l[0],l[1],a,r,n)["selectedIndices"];return s!==e&&s.dispose(),i!==t&&i.dispose(),Zt(n,"int32")}var zF=PF;function MF(e,t,a,r=.5,n=Number.NEGATIVE_INFINITY,s=0){var i=_(e,"boxes","nonMaxSuppression"),e=_(t,"scores","nonMaxSuppression"),t=Yo(i,e,a,r,n,s);a=t.maxOutputSize,r=t.iouThreshold,n=t.scoreThreshold,s=t.softNmsSigma;s=M.runKernel(No,{boxes:i,scores:e},{maxOutputSize:a,iouThreshold:r,scoreThreshold:n,softNmsSigma:s});return{selectedIndices:s[0],selectedScores:s[1]}}var LF=L({nonMaxSuppressionWithScore_:MF});async function BF(e,t,a,r=.5,n=Number.NEGATIVE_INFINITY,s=0){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),l=Yo(i,o,a,r,n,s);a=l.maxOutputSize,r=l.iouThreshold,n=l.scoreThreshold,s=l.softNmsSigma;var u=await Promise.all([i.data(),o.data()]),{selectedIndices:n,selectedScores:s}=FI(u[0],u[1],a,r,n,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Zt(n,"int32"),selectedScores:Zt(s)}}var VF=BF;function WF(e,t,a,r=.5,n=Number.NEGATIVE_INFINITY,s=!1){e=_(e,"boxes","nonMaxSuppression"),t=_(t,"scores","nonMaxSuppression"),a=Yo(e,t,a,r,n,null),r=a.maxOutputSize,n=a.iouThreshold,a=a.scoreThreshold,s=M.runKernel(kl,{boxes:e,scores:t},{maxOutputSize:r,iouThreshold:n,scoreThreshold:a,padToMaxOutputSize:s});return{selectedIndices:s[0],validOutputs:s[1]}}var UF=L({nonMaxSuppressionPadded_:WF});async function GF(e,t,a,r=.5,n=Number.NEGATIVE_INFINITY,s=!1){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),l=Yo(i,o,a,r,n,null),u=l.maxOutputSize,d=l.iouThreshold,p=l.scoreThreshold,[h,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=DI(h,c,u,d,p,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Zt(f,"int32"),validOutputs:we(m,"int32")}}var HF=GF;function qF(e,t,a=!1,r=!1){let n=_(e,"images","resizeBilinear");O(3===n.rank||4===n.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${n.rank}.`),O(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),O(!1===r||!1===a,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=n,i=!1;3===n.rank&&(i=!0,s=G(n,[1,n.shape[0],n.shape[1],n.shape[2]]));var[]=t,e={images:s},r=M.runKernel(ti,e,{alignCorners:a,halfPixelCenters:r,size:t});return i?G(r,[r.shape[1],r.shape[2],r.shape[3]]):r}var jF=L({resizeBilinear_:qF});function KF(e,t,a=!1,r=!1){let n=_(e,"images","resizeNearestNeighbor");O(3===n.rank||4===n.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${n.rank}.`),O(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),O("float32"===n.dtype||"int32"===n.dtype,()=>"`images` must have `int32` or `float32` as dtype"),O(!1===r||!1===a,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=n,i=!1;3===n.rank&&(i=!0,s=G(n,[1,n.shape[0],n.shape[1],n.shape[2]]));var[]=t,e={images:s},r=M.runKernel(Cl,e,{alignCorners:a,halfPixelCenters:r,size:t});return i?G(r,[r.shape[1],r.shape[2],r.shape[3]]):r}var XF=L({resizeNearestNeighbor_:KF});function YF(e,t="binary",a=!1,r=.5){let n=_(e,"image","threshold"),s=n.shape[0]*n.shape[1],i=V(Zt([r]),255),o,l,u,d;var p,h;O(3===n.rank,()=>`Error in threshold: image must be rank 3,but got rank ${n.rank}.`),O(3===n.shape[2]||1===n.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${n.shape[2]}.`),O("int32"===n.dtype||"float32"===n.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${n.dtype}.`),O("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),d=3===n.shape[2]?([o,l,u]=Bn(n,[1,1,1],-1),p=V(o,.2989),h=V(l,.587),r=V(u,.114),ie(ie(p,h),r)):e,"otsu"===t&&(e=Qk(ce(fI(d),"int32"),fs([]),256),i=QF(e,s));a=(a?Xo:Wn)(d,i);return ce(V(a,255),"int32")}function QF(t,a){let r=Zt([-1]),n=Zt([0]),s,i,o,l,u,d,p;for(let e=0;e<t.size-1;e++){i=He(t,0,e+1),o=He(t,e+1),d=xe(ve(i),a),p=xe(ve(o),a);var h=ve(V(i,Yu(0,i.size)));l=xe(h,ve(i));var c=Pl(o.shape,i.size),f=ie(Yu(0,o.size),c),h=V(o,f);u=xe(ve(h),ve(o));c=ge(l,u),f=ge(l,u),h=V(d,p);s=V(V(h,c),f);f=Wn(s,n);n=vn(f,s,n),r=vn(f,Zt([e]),r)}return r}var ZF=L({threshold_:YF});function JF(e,t,a="nearest",r="constant",n=0,s){let i=_(e,"image","transform","float32"),o=_(t,"transforms","transform","float32");O(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),O(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),O(null==s||2===s.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);t={image:i,transforms:o};return M.runKernel(Uo,t,{interpolation:a,fillMode:r,fillValue:n,outputShape:s})}var eO=L({transform_:JF});function tO(e,t,a){O(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),O(a%1==0,()=>`bandPart(): numUpper must be an integer, got ${a}.`);let r=_(e,"a","bandPart");O(2<=r.rank,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);var n=r.shape,[s,e]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(a<=e))throw new Error(`bandPart(): numUpper (${a}) must not be greater than the number of columns (${e}).`);t<0&&(t=s),a<0&&(a=e);let i=G(Yu(0,s,1,"int32"),[-1,1]),o=Yu(0,e,1,"int32"),l=ge(i,o),u=Ds(Xo(l,we(+t,"int32")),Ko(l,we(-a,"int32"))),d=$t([s,e],r.dtype);return G(Jn(Fs(G(r,[-1,s,e])).map(e=>vn(u,e,d))),n)}var nO=L({bandPart_:tO});function sO(a){let e;if(Array.isArray(a)){e=!1,O(null!=a&&0<a.length,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let t=a[0].shape[0];for(let e=1;e<a.length;++e)O(a[e].shape[0]===t,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${a[e].shape[0]} vs. ${t})`)}else e=!0,a=Bn(a,a.shape[0],0).map(e=>mr(e,[0]));O(a.length<=a[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${a.length}) exceeds number of dimensions (${a[0].shape[0]}).`);let n=[],s=a;for(let r=0;r<a.length;++r)n.push(M.tidy(()=>{let t=s[r];if(0<r)for(let e=0;e<r;++e){var a=V(ve(V(n[e],t)),n[e]);t=ge(t,a)}return xe(t,CI(t,"euclidean"))}));return e?Jn(n,0):n}var rO=L({gramSchmidt_:sO});function aO(n,s=!1){if(O(2<=n.rank,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),2===n.rank)return mx(n,s);{let e=n.shape.slice(0,n.shape.length-2).reduce((e,t)=>e*t),t=Fs(G(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),a=[],r=[];return t.forEach(e=>{var[t,e]=mx(e,s);a.push(t),r.push(e)}),[G(Jn(a,0),n.shape),G(Jn(r,0),n.shape)]}}function mx(n,s=!1){return M.tidy(()=>{O(2===n.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);let i=n.shape[0],o=n.shape[1],l=rI(i),u=lr(n),d=Ki([[1]],[1,1]),p=lr(d),e=i>=o?o:i;for(let s=0;s<e;++s){var t=u,a=p,r=l;[p,u,l]=M.tidy(()=>{var e=He(u,[s,s],[i-s,1]),t=CI(e),a=He(u,[s,s],[1,1]),r=vn(Wn(a,0),Ki([[-1]]),Ki([[1]])),a=ge(a,V(r,t)),e=xe(e,a);p=1===e.shape[0]?lr(d):Ft([d,He(e,[1,0],[e.shape[0]-1,e.shape[1]])],0);r=kt(xe(We(r,a),t)),a=He(u,[s,0],[i-s,o]),t=V(r,p),r=qe(p);u=0===s?ge(a,We(t,We(r,a))):(n=ge(a,We(t,We(r,a))),Ft([He(u,[0,0],[s,o]),n],0));var n=qe(t),t=He(l,[0,s],[i,l.shape[1]-s]);return l=0===s?ge(t,We(We(t,p),n)):(n=ge(t,We(We(t,p),n)),Ft([He(l,[0,0],[i,s]),n],1)),[p,u,l]}),Re([t,a,r])}return!s&&i>o&&(l=He(l,[0,0],[i,o]),u=He(u,[0,0],[o,o])),[l,u]})}var iO=L({qr_:aO}),oO=(e=>(e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",e))(oO||{});function uO(e,t,a=3){let r=_(e,"losses","computeWeightedLoss"),n=null;null!=t&&(n=_(t,"weights","computeWeightedLoss"));var s=null==n?r:V(r,n);if(0===a)return s;if(2===a)return ve(s);if(1===a){if(null==n)return St(s);e=r.size/n.size,t=xe(ve(s),ve(n));return 1<e?xe(t,we(e)):t}if(3!==a)throw Error(`Unknown reduction: ${a}`);if(null==n)return xe(ve(s),we(r.size));a=V(n,Mn(r.shape)),a=ce(ve(Xu(a,we(0))),"float32");return xe(ve(s),a)}var Ys=L({computeWeightedLoss_:uO});function lO(e,t,a,r=3){let n=_(e,"labels","absoluteDifference"),s=_(t,"predictions","absoluteDifference"),i=null;null!=a&&(i=_(a,"weights","absoluteDifference")),pn(n.shape,s.shape,"Error in absoluteDifference: ");a=Mt(ge(n,s));return Ys(a,i,r)}var cO=L({absoluteDifference_:lO});function dO(e,t,a,r,n=3){let s=_(e,"labels","cosineDistance"),i=_(t,"predictions","cosineDistance"),o=null;null!=r&&(o=_(r,"weights","cosineDistance")),pn(s.shape,i.shape,"Error in cosineDistance: ");r=we(1),a=ge(r,ve(V(s,i),a,!0));return Ys(a,o,n)}var pO=L({cosineDistance_:dO});function hO(e,t,a,r=3){let n=_(e,"labels","hingeLoss"),s=_(t,"predictions","hingeLoss"),i=null;null!=a&&(i=_(a,"weights","hingeLoss")),pn(n.shape,s.shape,"Error in hingeLoss: ");a=we(1);n=ge(V(we(2),n),a);a=Xs(ge(a,V(n,s)));return Ys(a,i,r)}var fO=L({hingeLoss_:hO});function mO(e,t,a,r=1,n=3){let s=_(e,"labels","huberLoss"),i=_(t,"predictions","huberLoss"),o=null;null!=a&&(o=_(a,"weights","huberLoss")),pn(s.shape,i.shape,"Error in huberLoss: ");t=we(r),a=Mt(ge(i,s)),r=bp(a,t),a=ge(a,r),a=ie(V(we(.5),ct(r)),V(t,a));return Ys(a,o,n)}var gO=L({huberLoss_:mO});function bO(e,t,a,r=1e-7,n=3){let s=_(e,"labels","logLoss"),i=_(t,"predictions","logLoss"),o=null;null!=a&&(o=_(a,"weights","logLoss")),pn(s.shape,i.shape,"Error in logLoss: ");t=we(1),a=we(r),r=kt(V(s,Yn(ie(i,a)))),a=V(ge(t,s),Yn(ie(ge(t,i),a))),a=ge(r,a);return Ys(a,o,n)}var yO=L({logLoss_:bO});function vO(e,t,a,r=3){let n=_(e,"labels","meanSquaredError"),s=_(t,"predictions","meanSquaredError"),i=null;null!=a&&(i=_(a,"weights","meanSquaredError")),pn(n.shape,s.shape,"Error in meanSquaredError: ");a=wI(n,s);return Ys(a,i,r)}var xO=L({meanSquaredError_:vO});function wO(e,t){var a=_(e,"labels","sigmoidCrossEntropyWithLogits"),e=_(t,"logits","sigmoidCrossEntropyWithLogits");pn(a.shape,e.shape,"Error in sigmoidCrossEntropyWithLogits: ");t=Xs(e),a=V(e,a),e=Yg(Xn(kt(Mt(e))));return ie(ge(t,a),e)}function kO(e,t,a,r=0,n=3){let s=_(e,"multiClassLabels","sigmoidCrossEntropy"),i=_(t,"logits","sigmoidCrossEntropy"),o=null;null!=a&&(o=_(a,"weights","sigmoidCrossEntropy")),pn(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),0<r&&(l=we(r),a=we(1),r=we(.5),s=ie(V(s,ge(a,l)),V(r,l)));var l=wO(s,i);return Ys(l,o,n)}var IO=L({sigmoidCrossEntropy_:kO});function SO(e,t,n=-1){if((n=-1===n?t.rank-1:n)!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return js((e,t,a)=>{var r=iD(t,[n],!0),r=ge(ce(t,"float32"),r);a([e,r]);e=kt(V(r,e));return{value:ve(e,[n]),gradFunc:(e,t)=>{var[a,r]=t,t=da(e.shape,[n]);return[V(G(e,t),ge(ce(a,"float32"),Xn(r))),V(G(e,t),ge(Xn(r),ce(a,"float32")))]}}})(e,t)}function CO(e,t,a,r=0,n=3){let s=_(e,"onehotLabels","softmaxCrossEntropy"),i=_(t,"logits","softmaxCrossEntropy"),o=null;null!=a&&(o=_(a,"weights","softmaxCrossEntropy")),pn(s.shape,i.shape,"Error in softmaxCrossEntropy: "),0<r&&(a=we(r),r=we(1),l=we(s.shape[1]),s=ie(V(s,ge(r,a)),xe(a,l)));var l=SO(s,i);return Ys(l,o,n)}var NO=L({softmaxCrossEntropy_:CO});function TO(e,t,a,r){e=_(e,"indices","sparseFillEmptyRows","int32"),t=_(t,"values","sparseFillEmptyRows"),a=_(a,"denseShape","sparseFillEmptyRows","int32"),r=_(r,"defaultValue","sparseFillEmptyRows",t.dtype);if(2!==e.rank)throw new Error(`Indices should be Tensor2D but received shape
        ${e.shape}`);if(1!==t.rank)throw new Error(`Values should be Tensor1D but received shape ${t.shape}`);if(1!==a.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(0!==r.rank)throw new Error(`Default value should be a scalar but received shape ${r.shape}`);r=M.runKernel(sp,{indices:e,values:t,denseShape:a,defaultValue:r});return{outputIndices:r[0],outputValues:r[1],emptyRowIndicator:r[2],reverseIndexMap:r[3]}}var $O=L({sparseFillEmptyRows_:TO});function _O(e,t,a){e=_(e,"inputIndices","sparseReshape","int32"),t=_(t,"inputShape","sparseReshape","int32"),a=_(a,"newShape","sparseReshape","int32");if(2!==e.rank)throw new Error(`Input indices should be Tensor2D but received shape
        ${e.shape}`);if(1!==t.rank)throw new Error(`Input shape should be Tensor1D but received shape ${t.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);a=M.runKernel(_l,{inputIndices:e,inputShape:t,newShape:a});return{outputIndices:a[0],outputShape:a[1]}}var AO=L({sparseReshape_:_O});function EO(e,t,a){e=_(e,"data","sparseSegmentMean"),t=_(t,"indices","sparseSegmentMean","int32"),a=_(a,"segmentIds","sparseSegmentMean","int32");if(e.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==t.rank)throw new Error(`Indices should be Tensor1D but received shape
          ${t.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);return M.runKernel(rp,{data:e,indices:t,segmentIds:a})}var RO=L({sparseSegmentMean_:EO});function DO(e,t,a){e=_(e,"data","sparseSegmentSum"),t=_(t,"indices","sparseSegmentSum","int32"),a=_(a,"segmentIds","sparseSegmentSum","int32");if(e.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==t.rank)throw new Error(`Indices should be Tensor1D but received shape
         ${t.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);return M.runKernel(ap,{data:e,indices:t,segmentIds:a})}var FO=L({sparseSegmentSum_:DO});function OO(e,t,a,r,n,s,i,o){e=_(e,"data","stringNGrams","string");if("string"!==e.dtype)throw new Error("Data must be of datatype string");if(1!==e.shape.length)throw new Error(`Data must be a vector, saw: ${e.shape}`);t=_(t,"dataSplits","stringNGrams");if("int32"!==t.dtype)throw new Error("Data splits must be of datatype int32");o=M.runKernel(op,{data:e,dataSplits:t},{separator:a,nGramWidths:r,leftPad:n,rightPad:s,padWidth:i,preserveShortSequences:o});return{nGrams:o[0],nGramsSplits:o[1]}}var PO=L({stringNGrams_:OO});function zO(e,t,a=!0){e=_(e,"input","stringSplit","string"),t=_(t,"delimiter","stringSplit","string");if(1!==e.rank)throw new Error(`Input should be Tensor1D but received shape ${e.shape}`);if(0!==t.rank)throw new Error(`Delimiter should be a scalar but received shape ${t.shape}`);a=M.runKernel($g,{input:e,delimiter:t},{skipEmpty:a});return{indices:a[0],values:a[1],shape:a[2]}}var MO=L({stringSplit_:zO});function LO(e,t){var a=_(e,"input","stringToHashBucketFast","string"),e={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");return M.runKernel(_g,{input:a},e)}var BO=L({stringToHashBucketFast_:LO}),Ipe={fft:lb,ifft:Id,rfft:cb,irfft:xI},Spe={hammingWindow:mF,hannWindow:AI,frame:EI,stft:vF},qn={flipLeftRight:IF,grayscaleToRGB:CF,resizeNearestNeighbor:XF,resizeBilinear:jF,rotateWithOffset:TF,cropAndResize:wF,nonMaxSuppression:_F,nonMaxSuppressionAsync:zF,nonMaxSuppressionWithScore:LF,nonMaxSuppressionWithScoreAsync:VF,nonMaxSuppressionPadded:UF,nonMaxSuppressionPaddedAsync:HF,threshold:ZF,transform:eO},VO={bandPart:nO,gramSchmidt:rO,qr:iO},Cpe={absoluteDifference:cO,computeWeightedLoss:Ys,cosineDistance:pO,hingeLoss:fO,huberLoss:gO,logLoss:yO,meanSquaredError:xO,sigmoidCrossEntropy:IO,softmaxCrossEntropy:NO},Wc={sparseFillEmptyRows:$O,sparseReshape:AO,sparseSegmentMean:RO,sparseSegmentSum:FO},Mf={stringNGrams:PO,stringSplit:MO,stringToHashBucketFast:BO},_r=class extends Vk{minimize(e,t=!1,a){let{value:r,grads:n}=this.computeGradients(e,a);return null!=a?(a=a.map(e=>({name:e.name,tensor:n[e.name]})),this.applyGradients(a)):this.applyGradients(n),Re(n),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return XR(e,t)}dispose(){null!=this.iterations_&&Re(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:we(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(_r,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var fb=class extends _r{constructor(e,t,a=null){super(),this.learningRate=e,this.rho=t,this.epsilon=a,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==a&&(this.epsilon=M.backend.epsilon())}applyGradients(a){(Array.isArray(a)?a.map(e=>e.name):Object.keys(a)).forEach((e,t)=>{let s=M.registeredVariables[e];null==this.accumulatedGrads[t]&&(this.accumulatedGrads[t]={originalName:`${e}/accum_grad`,variable:j(()=>je(s).variable(!1))}),null==this.accumulatedUpdates[t]&&(this.accumulatedUpdates[t]={originalName:`${e}/accum_var`,variable:j(()=>je(s).variable(!1))});let i=Array.isArray(a)?a[t].tensor:a[e];if(null!=i){let r=this.accumulatedGrads[t].variable,n=this.accumulatedUpdates[t].variable;j(()=>{var e=ie(V(r,this.rho),V(ct(i),1-this.rho)),t=V(xe(dn(ie(n,this.epsilon)),dn(ie(r,this.epsilon))),i),a=ie(V(n,this.rho),V(ct(t),1-this.rho));r.assign(e),n.assign(a);t=ie(V(t,-this.learningRate),s);s.assign(t)})}}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Re(this.accumulatedGrads.map(e=>e.variable)),Re(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};fb.className="Adadelta",Tr(fb);var mb=class extends _r{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(e=>e.name):Object.keys(t)).forEach((e,a)=>{let r=M.registeredVariables[e];null==this.accumulatedGrads[a]&&(this.accumulatedGrads[a]={originalName:`${e}/accumulator`,variable:j(()=>Pl(r.shape,this.initialAccumulatorValue).variable(!1))});let n=Array.isArray(t)?t[a].tensor:t[e];if(null!=n){let t=this.accumulatedGrads[a].variable;j(()=>{var e=ie(t,ct(n));t.assign(e);e=ie(V(xe(n,dn(ie(e,M.backend.epsilon()))),-this.learningRate),r);r.assign(e)})}}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Re(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};mb.className="Adagrad",Tr(mb);var gb=class extends _r{constructor(e,t,a,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=a,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],j(()=>{this.accBeta1=we(t).variable(),this.accBeta2=we(a).variable()}),null==r&&(this.epsilon=M.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);j(()=>{let u=ge(1,this.accBeta1),d=ge(1,this.accBeta2);t.forEach((i,o)=>{let l=M.registeredVariables[i];null==this.accumulatedFirstMoment[o]&&(this.accumulatedFirstMoment[o]={originalName:`${i}/m`,variable:j(()=>je(l).variable(!1))}),null==this.accumulatedSecondMoment[o]&&(this.accumulatedSecondMoment[o]={originalName:`${i}/v`,variable:j(()=>je(l).variable(!1))});i=Array.isArray(e)?e[o].tensor:e[i];if(null!=i){let e=this.accumulatedFirstMoment[o].variable,t=this.accumulatedSecondMoment[o].variable,a=ie(V(e,this.beta1),V(i,1-this.beta1)),r=ie(V(t,this.beta2),V(ct(i),1-this.beta2)),n=xe(a,u),s=xe(r,d);e.assign(a),t.assign(r);i=ie(V(xe(n,ie(dn(s),this.epsilon)),-this.learningRate),l);l.assign(i)}}),this.accBeta1.assign(V(this.accBeta1,this.beta1)),this.accBeta2.assign(V(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Re(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&Re(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),j(()=>{this.accBeta1.assign(pa(this.beta1,this.iterations_+1)),this.accBeta2.assign(pa(this.beta2,this.iterations_+1))});let t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};gb.className="Adam",Tr(gb);var bb=class extends _r{constructor(e,t,a,r=null,n=0){super(),this.learningRate=e,this.beta1=t,this.beta2=a,this.epsilon=r,this.decay=n,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],j(()=>{this.iteration=we(0).variable(),this.accBeta1=we(t).variable()}),null==r&&(this.epsilon=M.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);j(()=>{let u=ge(1,this.accBeta1),d=xe(-this.learningRate,ie(V(this.iteration,this.decay),1));t.forEach((i,o)=>{let l=M.registeredVariables[i];null==this.accumulatedFirstMoment[o]&&(this.accumulatedFirstMoment[o]={originalName:`${i}/m`,variable:je(l).variable(!1)}),null==this.accumulatedWeightedInfNorm[o]&&(this.accumulatedWeightedInfNorm[o]={originalName:`${i}/v`,variable:je(l).variable(!1)});i=Array.isArray(e)?e[o].tensor:e[i];if(null!=i){let e=this.accumulatedFirstMoment[o].variable,t=this.accumulatedWeightedInfNorm[o].variable,a=ie(V(e,this.beta1),V(i,1-this.beta1)),r=V(t,this.beta2),n=Mt(i),s=$r(r,n);e.assign(a),t.assign(s);i=ie(V(xe(d,u),xe(a,ie(s,this.epsilon))),l);l.assign(i)}}),this.iteration.assign(ie(this.iteration,1)),this.accBeta1.assign(V(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Re(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&Re(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};bb.className="Adamax",Tr(bb);var Ip=class extends _r{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(r){(Array.isArray(r)?r.map(e=>e.name):Object.keys(r)).forEach((e,t)=>{let a=Array.isArray(r)?r[t].tensor:r[e];if(null!=a){let t=M.registeredVariables[e];j(()=>{var e=ie(V(this.c,a),t);t.assign(e)})}}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Ht(we(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Ip.className="SGD",Tr(Ip);var yb=class extends Ip{constructor(e,t,a=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=a,this.accumulations=[],this.m=we(this.momentum)}applyGradients(s){(Array.isArray(s)?s.map(e=>e.name):Object.keys(s)).forEach((e,t)=>{let a=M.registeredVariables[e];null==this.accumulations[t]&&(this.accumulations[t]={originalName:`${e}/momentum`,variable:j(()=>je(a).variable(!1))});let r=this.accumulations[t].variable,n=Array.isArray(s)?s[t].tensor:s[e];null!=n&&j(()=>{let e,t=ie(V(this.m,r),n);e=this.useNesterov?ie(V(this.c,ie(n,V(t,this.m))),a):ie(V(this.c,t),a),r.assign(t),a.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Re(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};yb.className="Momentum",Tr(yb);var vb=class extends _r{constructor(e,t=.9,a=0,r=null,n=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=a,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=n,null==r&&(this.epsilon=M.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(e=>e.name):Object.keys(t)).forEach((e,l)=>{let u=M.registeredVariables[e];null==this.accumulatedMeanSquares[l]&&(this.accumulatedMeanSquares[l]={originalName:`${e}/rms`,variable:j(()=>je(u).variable(!1))}),null==this.accumulatedMoments[l]&&(this.accumulatedMoments[l]={originalName:`${e}/momentum`,variable:j(()=>je(u).variable(!1))}),null==this.accumulatedMeanGrads[l]&&this.centered&&(this.accumulatedMeanGrads[l]={originalName:`${e}/mg`,variable:j(()=>je(u).variable(!1))});let d=Array.isArray(t)?t[l].tensor:t[e];if(null!=d){let i=this.accumulatedMeanSquares[l].variable,o=this.accumulatedMoments[l].variable;j(()=>{var n=ie(V(i,this.decay),V(ct(d),1-this.decay));if(this.centered){let e=this.accumulatedMeanGrads[l].variable,t=ie(V(e,this.decay),V(d,1-this.decay)),a=xe(V(d,this.learningRate),dn(ge(n,ie(ct(t),this.epsilon)))),r=ie(V(o,this.momentum),a);i.assign(n),e.assign(t),o.assign(r);var s=ge(u,r);u.assign(s)}else{n=ie(V(i,this.decay),V(ct(d),1-this.decay)),s=ie(V(o,this.momentum),xe(V(d,this.learningRate),dn(ie(n,this.epsilon))));i.assign(n),o.assign(s);s=ge(u,s);u.assign(s)}})}}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Re(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Re(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&Re(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};vb.className="RMSProp",Tr(vb);var Wr=class{static sgd(e){return new Ip(e)}static momentum(e,t,a=!1){return new yb(e,t,a)}static rmsprop(e,t=.9,a=0,r=null,n=!1){return new vb(e,t,a,r,n)}static adam(e=.001,t=.9,a=.999,r=null){return new gb(e,t,a,r)}static adadelta(e=.001,t=.95,a=null){return new fb(e,t,a)}static adamax(e=.002,t=.9,a=.999,r=null,n=0){return new bb(e,t,a,r,n)}static adagrad(e,t=.1){return new mb(e,t)}},Pi={sgd:Wr.sgd,momentum:Wr.momentum,adadelta:Wr.adadelta,adagrad:Wr.adagrad,rmsprop:Wr.rmsprop,adamax:Wr.adamax,adam:Wr.adam},WO="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function OI(){return new Promise(e=>WO(()=>e()))}var S={};function UO(e,r){let n=e[0].length;e.forEach((e,t)=>{O(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),O(0<=r&&r<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let s=e[0];e.forEach((t,a)=>{for(let e=0;e<n;e++)O(e===r||t[e]===s[e],()=>`Error in concat${n}D: Shape of tensors[${a}] (${t}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function GO(t,a){let r=t[0].slice();for(let e=1;e<t.length;e++)r[a]+=t[e][a];return r}Ae(S,{ERF_A1:()=>JO,ERF_A2:()=>eP,ERF_A3:()=>tP,ERF_A4:()=>nP,ERF_A5:()=>sP,ERF_P:()=>ZO,PARALLELIZE_THRESHOLD:()=>xb,SELU_SCALE:()=>zI,SELU_SCALEALPHA:()=>PI,applyActivation:()=>wp,assertAndGetBroadcastShape:()=>ot,assertAxesAreInnerMostDims:()=>sD,assertParamsConsistent:()=>UO,assignToTypedArray:()=>lP,axesAreInnerMostDims:()=>Qg,calculateShapes:()=>Ek,checkEinsumDimSizes:()=>mP,checkPadOnDimRoundingMode:()=>hn,combineLocations:()=>oI,complexWithEvenIndex:()=>iP,complexWithOddIndex:()=>oP,computeConv2DInfo:()=>Ol,computeConv3DInfo:()=>Kk,computeDefaultPad:()=>Ug,computeDilation2DInfo:()=>cE,computeOptimalWindowSize:()=>HO,computeOutAndReduceShapes:()=>uI,computeOutShape:()=>GO,computePool2DInfo:()=>jk,computePool3DInfo:()=>dE,convertConv2DDataFormat:()=>Xk,decodeEinsumEquation:()=>hP,eitherStridesOrDilationsAreOne:()=>Ps,expandShapeToKeepDim:()=>da,exponent:()=>dP,exponents:()=>cP,fromStringArrayToUint8:()=>PP,fromUint8ToStringArray:()=>OP,getAxesPermutation:()=>lI,getBroadcastDims:()=>Ck,getComplexWithIndex:()=>uP,getEinsumComputePath:()=>gP,getEinsumPermutation:()=>fP,getFusedBiasGradient:()=>xp,getFusedDyActivation:()=>vp,getImageCenter:()=>qO,getInnerMostAxes:()=>rD,getPermuted:()=>KO,getReductionAxes:()=>_t,getReshaped:()=>jO,getReshapedPermuted:()=>XO,getSliceBeginCoords:()=>YO,getSliceSize:()=>QO,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>xP,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>wP,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>kP,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>CP,getSparseReshapeInputOutputMismatchErrorMessage:()=>TP,getSparseReshapeInputOutputMultipleErrorMessage:()=>NP,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>IP,getSparseReshapeNegativeOutputDimErrorMessage:()=>SP,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>EP,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>$P,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>_P,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>AP,getUndoAxesPermutation:()=>Zg,isIdentityPermutation:()=>bP,log:()=>R$,mergeRealAndImagArrays:()=>rP,prepareAndValidate:()=>_k,prepareSplitSize:()=>vP,segment_util:()=>MI,shouldFuse:()=>kp,slice_util:()=>wt,splitRealAndImagArrays:()=>aP,tupleValuesAreOne:()=>fr,upcastType:()=>cn,validateInput:()=>Bg,validateUpdateShape:()=>Lg,warn:()=>ar});var xb=30;function HO(e){return e<=xb?e:hd(e,Math.floor(Math.sqrt(e)))}function qO(e,t,a){return[a*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function jO(t,a,e,r=!0){let n=[];if(r)n=n.concat(a.slice(0)),n.push(t[0]/e),n=n.concat(t.slice(1));else{n=n.concat(t[0]);var s=a.length;for(let e=0;e<s;++e)n=n.concat([t[e+1]/a[e],a[e]]);n=n.concat(t.slice(s+1))}return n}function KO(r,n,e=!0){let s=[];if(e){s.push(n);for(let e=n+1;e<r;++e)e<=2*n?(s.push(e),s.push(e-(n+1))):s.push(e)}else{let t=[],a=[];for(let e=1;e<r;++e)(e>=2*n+1||e%2==1?a:t).push(e);s.push(...t),s.push(0),s.push(...a)}return s}function XO(t,a,e,r=!0){let n=[];r?n.push(t[0]/e):n.push(t[0]*e);for(let e=1;e<t.length;++e)e<=a.length?r?n.push(a[e-1]*t[e]):n.push(t[e]/a[e-1]):n.push(t[e]);return n}function YO(t,a){let r=[0];for(let e=0;e<a;++e)r.push(t[e][0]);return r}function QO(t,a,r){let n=t.slice(0,1);for(let e=0;e<r;++e)n.push(t[e+1]-a[e][0]-a[e][1]);return n}var PI=1.7580993408473768,zI=1.0507009873554805,ZO=.3275911,JO=.254829592,eP=-.284496736,tP=1.421413741,nP=-1.453152027,sP=1.061405429;function rP(t,a){if(t.length!==a.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${a.length}.`);let r=new Float32Array(2*t.length);for(let e=0;e<r.length;e+=2)r[e]=t[e/2],r[e+1]=a[e/2];return r}function aP(t){let a=new Float32Array(t.length/2),r=new Float32Array(t.length/2);for(let e=0;e<t.length;e+=2)a[e/2]=t[e],r[e/2]=t[e+1];return{real:a,imag:r}}function iP(t){let e=Math.ceil(t.length/4),a=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)a[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:a,imag:r}}function oP(t){let e=Math.floor(t.length/4),a=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)a[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:a,imag:r}}function uP(e,t){return{real:e[2*t],imag:e[2*t+1]}}function lP(e,t,a,r){e[2*r]=t,e[2*r+1]=a}function cP(t,a){let r=new Float32Array(t/2),n=new Float32Array(t/2);for(let e=0;e<Math.ceil(t/2);e++){var s=(a?2:-2)*Math.PI*(e/t);r[e]=Math.cos(s),n[e]=Math.sin(s)}return{real:r,imag:n}}function dP(e,t,a){t=(a?2:-2)*Math.PI*(e/t);return{real:Math.cos(t),imag:Math.sin(t)}}var Lf="->",pP=/->/g,gx=",",bx="...";function hP(e,t){var a=((e=e.replace(/\s/g,"")).length-e.replace(pP,"").length)/Lf.length;if(a<1)throw new Error("Equations without an arrow are not supported.");if(1<a)throw new Error(`Equation must contain exactly one arrow ("${Lf}").`);let[r,n]=e.split(Lf);O(-1===r.indexOf(bx),()=>`The ellipsis notation ("${bx}") is not supported yet.`);let s=r.split(gx),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(2<i)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let e=0;e<n.length;++e){let t=n[e];if(!s.some(e=>-1!==e.indexOf(t)))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){var l=r[e];-1===o.indexOf(l)&&l!==gx&&o.push(l)}let u=new Array(s.length);for(let t=0;t<i;++t){if(new Set(s[t].split("")).size!==s[t].length)throw new Error(`Found duplicate axes in input component ${s[t]}. Support for duplicate axes in input is not implemented yet.`);u[t]=[];for(let e=0;e<s[t].length;++e)u[t].push(o.indexOf(s[t][e]))}let d=o.length,p=n.length,h=[];for(let e=p;e<d;++e)h.push(e);return{allDims:o,summedDims:h,idDims:u}}function fP(t,a){let r=new Array(t);r.fill(-1);for(let e=0;e<a.length;++e)r[a[e]]=e;let n=[];for(let e=0;e<t;++e)-1===r[e]&&n.push(e);return r=r.filter(e=>-1!==e),{permutationIndices:r,expandDims:n}}function mP(e,r,n){let s=new Array(e);for(let a=0;a<n.length;++a){let t=n[a].shape;for(let e=0;e<r[a].length;++e)void 0===s[r[a][e]]?s[r[a][e]]=t[e]:O(s[r[a][e]]===t[e],()=>`Expected dimension ${s[r[a][e]]} at axis ${e} of input shaped ${JSON.stringify(t)}, but got dimension ${t[e]}`)}}function gP(e,t){let a=e,r=[],n;0===e.length&&a.push(-1),n=e.length+1;for(let e=0;e<n;++e)r.push([]);let s=[];for(let e=0;e<a.length;++e){var i;for(i of yP(t,a[e]))-1===s.indexOf(i)&&(r[e].push(i),s.push(i))}return{path:a,steps:r}}function bP(e){return e.every((e,t)=>e===t)}function yP(t,a){let r=[];for(let e=0;e<t.length;++e)0!==t[e].length&&-1===t[e].indexOf(a)&&-1!==a||r.push(e);return r}function vP(e,t,a=0){let r=[];var n,s;return r="number"==typeof t?(O(e.shape[a]%t==0,()=>"Number of splits must evenly divide the axis."),new Array(t).fill(e.shape[a]/t)):(O(t.reduce((e,t)=>(-1===t&&(e+=1),e),0)<=1,()=>"There should be only one negative value in split array."),-1!==(n=t.indexOf(-1))&&(s=t.reduce((e,t)=>0<t?e+t:e),t[n]=e.shape[a]-s),O(e.shape[a]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),t),r}function xP(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function wP(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function kP(e,t,a){return`indices(${e}, 0) is invalid: ${t} >= ${a}`}function IP(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function SP(e,t){return`size ${e} must be non-negative, not ${t}`}function CP(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function NP(e,t){return`Input to reshape is a SparseTensor with ${pt(e)}
  dense values, but the requested shape requires a multiple of ${pt(t)}. inputShape=${e} outputShape= ${t}`}function TP(e,t){return`Input to reshape is a tensor with ${pt(e)} dense values, but the requested shape has ${pt(t)}. inputShape=${e} outputShape=${t}`}function $P(){return"segment ids must be >= 0"}function _P(){return"segment ids are not increasing"}function AP(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function EP(e,t,a){return`Bad: indices[${e}] == ${t} out of range [0, ${a})`}var MI={};function RP(e,t){let a=!1,r;for(e<=xb?(r=e,a=!0):r=hd(e,Math.floor(Math.sqrt(e)));!a;)r>t||r===e?a=!0:r=hd(e,r+1);return r}function DP(t,a,r){let n=[],s=t.length;for(let e=0;e<s;e++)e!==a?n.push(t[e]):n.push(r);return n}function FP(t,a,r,n){var s=a.shape.length,i=t.shape.length;if(0!==n&&(n<-s||s<n))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${n}`);if(n<0&&(n+=s),i<n)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${i}).`);if(r<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${r}).`);for(let e=0;e<n;++e)if(t.shape[e]!==a.shape[e])throw new Error(`x.shape[${e}]: ${t.shape[e]} should be equal to indices.shape[${e}]: ${a.shape[e]}.`);let e=t.shape[r],o=[],l=1,u=1,d=1;for(let e=0;e<n;++e)o.push(t.shape[e]),l*=t.shape[e];for(let e=n;e<r;e++)o.push(t.shape[e]),u*=t.shape[e];for(let e=n;e<s;e++)o.push(a.shape[e]);for(let e=r+1;e<i;e++)o.push(t.shape[e]),d*=t.shape[e];return{batchSize:l,sliceSize:d,outerSize:u,dimSize:e,outputShape:o}}function OP(e){try{return e.map(e=>md(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function PP(e){return e.map(e=>Dl(e))}Ae(MI,{collectGatherOpShapeInfo:()=>FP,computeOutShape:()=>DP,segOpComputeOptimalWindowSize:()=>RP});var xs={};Ae(xs,{nonMaxSuppressionV3Impl:()=>RI,nonMaxSuppressionV4Impl:()=>DI,nonMaxSuppressionV5Impl:()=>FI,whereImpl:()=>kI});var LI={kernelName:io,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(e,yp(ce(a,"float32"),-1))}}},zP={kernelName:sl,inputsToSave:["x"],gradFunc:(t,e)=>{let[a]=e;return{x:()=>{var e=ct(ce(a,"float32")),e=dn(ge(we(1),e));return kt(xe(t,e))}}}},MP={kernelName:rl,inputsToSave:["x"],gradFunc:(t,e)=>{let[a]=e;return{x:()=>{var e=dn(ge(ct(ce(a,"float32")),1));return xe(t,e)}}}},LP={kernelName:Ir,inputsToSave:["a","b"],gradFunc:(a,e)=>{let[r,n]=e,s=ot(r.shape,n.shape);return{a:()=>{let e=a,t=_t(r.shape,s);return 0<t.length&&(e=ve(e,t)),G(e,r.shape)},b:()=>{let e=a,t=_t(n.shape,s);return 0<t.length&&(e=ve(e,t)),G(e,n.shape)}}}},BP={kernelName:ka,saveAllInputs:!0,gradFunc:(a,e)=>{let r={};return e.forEach((e,t)=>{r[t]=()=>a.clone()}),r}},VP={kernelName:Ia,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>je(a)}}},WP={kernelName:ol,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>je(a)}}},UP={kernelName:ul,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>xe(e,dn(ge(we(1),ct(ce(a,"float32")))))}}},GP={kernelName:ll,inputsToSave:["x"],gradFunc:(t,e)=>{let[a]=e;return{x:()=>{var e=dn(ie(we(1),ct(ce(a,"float32"))));return xe(t,e)}}}},HP={kernelName:pl,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[n,s]=e,i=ot(n.shape,s.shape);return{a:()=>{let e=ie(ct(n),ct(s)),t=V(r,xe(s,e)),a=_t(n.shape,i);return 0<a.length&&(t=ve(t,a)),G(t,n.shape)},b:()=>{let e=ie(ct(n),ct(s)),t=kt(V(r,xe(n,e))),a=_t(s.shape,i);return 0<a.length&&(t=ve(t,a)),G(t,s.shape)}}}},qP={kernelName:cl,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>xe(e,ie(ct(ce(a,"float32")),1))}}},jP={kernelName:dl,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>xe(e,ge(we(1),ct(ce(a,"float32"))))}}};function KP(e,t,a,r,n,s){let i=_(e,"dy","avgPool3dGrad"),o=_(t,"input","avgPool3dGrad"),l=i,u=o,d=!1;4===o.rank&&(d=!0,l=G(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=G(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),O(5===l.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),O(5===u.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),hn("avgPool3dGrad",n,s);t={dy:l,input:u},s=M.runKernel(og,t,{filterSize:a,strides:r,pad:n,dimRoundingMode:s});return d?G(s,[s.shape[1],s.shape[2],s.shape[3],s.shape[4]]):s}var XP=L({avgPool3dGrad_:KP}),YP={kernelName:qd,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{filterSize:n,strides:s,pad:i,dimRoundingMode:o}=a;return{x:()=>XP(e,r,n,s,i,o)}}};function QP(e,t,a,r,n){let s=_(e,"dy","avgPoolGrad"),i=_(t,"input","avgPoolGrad");O(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=G(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=G(s,[1,s.shape[0],s.shape[1],s.shape[2]])),O(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),O(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);t={dy:l,input:o},n=M.runKernel(ig,t,{filterSize:a,strides:r,pad:n});return u?G(n,[n.shape[1],n.shape[2],n.shape[3]]):n}var ZP=L({avgPoolGrad_:QP}),JP={kernelName:Sa,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{filterSize:n,strides:s,pad:i}=a;return{x:()=>ZP(e,r,n,s,i)}}},ez={kernelName:Ca,inputsToSave:["a","b"],gradFunc:(e,t,a)=>{let[r,n]=t,{transposeA:s,transposeB:i}=a;return s||i?!s&&i?{a:()=>We(e,n,!1,!1),b:()=>We(e,r,!0,!1)}:s&&!i?{a:()=>We(n,e,!1,!0),b:()=>We(r,e,!1,!1)}:{a:()=>We(n,e,!0,!0),b:()=>We(e,r,!0,!0)}:{a:()=>We(e,n,!1,!0),b:()=>We(r,e,!0,!1)}}},tz={kernelName:oo,gradFunc:(e,t,a)=>{let{blockShape:r,crops:n}=a;return{x:()=>nb(e,r,n)}}},nz={kernelName:A$,gradFunc:(e,t,a)=>{let r=a,n=r.inputShape,s=r.shape,i=Array.from(s);for(let e=n.length-1;0<=e;e--)if(n[e]===s[e])i[e]=1;else if(1!==n[e])throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${s}].`);let o=[];for(let e=0;e<i.length;e++)1<i[e]&&o.push(e);return{x:()=>ve(e,o,!0)}}},sz={kernelName:Na,gradFunc:e=>({x:()=>e.clone()})},rz={kernelName:Ta,gradFunc:e=>({x:()=>je(e)})},az={kernelName:Sr,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{clipValueMin:n,clipValueMax:s}=a;return{x:()=>vn(Ds(Ko(r,n),Xo(r,s)),e,je(e))}}},iz={kernelName:Kd,inputsToSave:["x"],gradFunc:LI.gradFunc},oz={kernelName:uo,saveAllInputs:!0,gradFunc:(e,t,a)=>{let r=t.map(e=>e.shape),n=a["axis"],s=ts(n,t[0].shape)[0],i=r.map(e=>e[s]);return Bn(e,i,s).map(e=>()=>e)}},uz={kernelName:$a,inputsToSave:["x","filter"],gradFunc:(e,t,a)=>{let[r,n]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=a;return O(fr(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>qg(r.shape,e,n,i,o,l),filter:()=>pb(r,e,n.shape,i,o,l)}}},lz={kernelName:_a,inputsToSave:["dy","filter"],gradFunc:(e,t,a)=>{let[r,n]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=a;return{dy:()=>ca(e,n,s,i,o,1,l),filter:()=>pb(e,r,n.shape,s,i,o,l)}}};function cz(e,t,a,r,n){let s=e;4===e.rank&&(s=G(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=G(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),O(5===s.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),O(5===i.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),O(5===a.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${a}.`),O(s.shape[4]===a[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${a[3]}.`),O(i.shape[4]===a[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${a[4]}).`);t={x:s,dy:i};return M.runKernel(dg,t,{strides:r,pad:n,filterShape:a})}var dz=L({conv3DBackpropFilter_:cz}),pz={kernelName:Xd,inputsToSave:["x","filter"],gradFunc:(e,t,a)=>{let{dilations:r,strides:n,pad:s}=a;O(fr(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);let[i,o]=t;return{x:()=>tI(i.shape,e,o,n,s),filter:()=>dz(i,e,o.shape,n,s)}}},hz={kernelName:Aa,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(kt(bI(ce(a,"float32"))),e)}}},fz={kernelName:Ea,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(yI(ce(a,"float32")),e)}}},mz={kernelName:lo,inputsToSave:["x"],gradFunc:(a,e,t)=>{let[r]=e,{axis:n,exclusive:s,reverse:i}=t;return{x:()=>{let e=lI([n],r.rank),t=sI(a,n,s,!i);return null!=e&&(t=qe(t,e)),t}}}},gz={kernelName:Ra,inputsToSave:["x","filter"],gradFunc:(e,t,a)=>{let{dilations:r,strides:n,pad:s,dimRoundingMode:i}=a,o=null==r?[1,1]:r;O(fr(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,u]=t;return O(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),O(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),O(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),O(Ps(n,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${n} and dilations '${o}'.`),hn("depthwiseConv2d",s,i),{x:()=>_I(l.shape,e,u,n,s,o,i),filter:()=>$I(l,e,u.shape,n,s,o,i)}}},bz={kernelName:Yd,inputsToSave:["x","filter"],gradFunc:(e,t,a)=>{let[r,n]=t,s={x:r,filter:n,dy:e},i={x:r,filter:n,dy:e};return{x:()=>M.runKernel(Yf,s,a),filter:()=>M.runKernel(Qf,i,a)}}},yz={kernelName:Fa,outputsToSave:[!0],gradFunc:(e,t)=>{let[a]=t,r={dy:e,y:a};return{x:()=>M.runKernel(bg,r)}}},vz={kernelName:fl,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t,r=V(Xn(kt(ct(a))),2/Math.sqrt(Math.PI));return{x:()=>V(e,r)}}},xz={kernelName:Oa,outputsToSave:[!0],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(e,a)}}},wz={kernelName:fo,inputsToSave:["input"],gradFunc:(e,t)=>{let[a]=t;return{input:()=>G(e,a.shape)}}},kz={kernelName:mo,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(e,Xn(a))}}},Iz={kernelName:Pa,gradFunc:e=>({x:()=>je(e)})},Sz={kernelName:za,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[n,s]=e,i=ot(n.shape,s.shape);return{a:()=>{var e=xe(r,ce(s,"float32")),t=_t(n.shape,i);return 0<t.length?G(ve(e,t),n.shape):e},b:()=>{let e=V(r,ce(n,"float32")),t=_t(s.shape,i);0<t.length&&(e=G(ve(e,t),s.shape));var a=ct(s);return kt(xe(e,ce(a,"float32")))}}}},Cz={kernelName:Ma,inputsToSave:["x","mean","variance","scale"],gradFunc:(a,e,t)=>{let r=t["varianceEpsilon"],[n,s,i,o]=e,l=null==o?we(1):o,u=_t(s.shape,n.shape),d=[];if(1===s.rank){for(let e=0;e<n.shape.length-1;++e)d.push(n.shape[e]);d.push(1)}let p=ge(n,s),h=V(a,l),c=mI(ie(i,we(r))),f=V(V(V(c,c),c),we(-.5));return{x:()=>1===s.rank?G(V(V(a,ps(G(c,[1,1,1,s.shape[0]]),d)),l),n.shape):G(V(V(a,c),l),n.shape),mean:()=>{let e=V(V(c,we(-1)),h);return 1===s.rank&&(e=ve(e,u)),G(e,s.shape)},variance:()=>{let e=V(V(f,p),h);return 1===s.rank&&(e=ve(e,u)),G(e,s.shape)},scale:()=>{let e=V(p,c),t=V(a,e);return 1===s.rank&&(t=ve(t,u)),G(t,s.shape)},offset:()=>{let e=a;return 1===s.rank&&(e=ve(e,u)),G(e,s.shape)}}}},Nz={kernelName:bo,inputsToSave:["x","indices"],gradFunc:(m,e,t)=>{let[g,b]=e,y=t["axis"],v=ts(y,g.shape)[0];return{x:()=>{let e=g.shape,t=b.size,a=e.slice(0,v),r=a.length,n=e.slice(y,e.length).slice(1),s=n.length,i=yx(0,r),o=yx(r+1,r+1+s),l=vx([a,[t],n]),u=G(m,l),d=G(b,[t]),p=vx([[r],i,o]),h=qe(u,p),c=V3(h,d,g.shape[v]),f=Zg(p);return qe(c,f)},indices:()=>b}}};function yx(t,a){let r=[];for(let e=t;e<a;++e)r.push(e);return r}function vx(a){let r=[];for(let t=0;t<a.length;++t)for(let e=0;e<a[t].length;++e)r.push(a[t][e]);return r}var Tz={kernelName:La,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t;return{a:()=>je(a),b:()=>je(r)}}},$z={kernelName:Ba,gradFunc:e=>({x:()=>ce(e,"float32")})},_z={kernelName:gl,gradFunc:e=>({x:()=>je(e)})},Az={kernelName:bl,gradFunc:e=>({x:()=>je(e)})},Ez={kernelName:yl,gradFunc:e=>({x:()=>je(e)})},Rz={kernelName:Va,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,n=a["alpha"],s=Wn(r,0);return{x:()=>vn(s,e,V(e,n))}}},Dz={kernelName:vl,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>xe(e,ie(a,1))}}},Fz={kernelName:Wa,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>xe(e,ce(a,"float32"))}}},Oz={kernelName:E$,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,a)=>{let[r]=e,n=a["axis"];return{logits:()=>{var e=Xn(r);return ge(t,V(ve(t,n,!0),e))}}}};function Pz(e,t,a,r=5,n=1,s=1,i=.5){return M.runKernel(wg,{x:e,y:t,dy:a},{depthRadius:r,bias:n,alpha:s,beta:i})}var zz=L({localResponseNormalizationBackprop_:Pz}),Mz={kernelName:ep,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let[r,n]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=a;return{x:()=>zz(r,n,e,s,i,o,l)}}};function BI(e,t,a,r){return t.rank<a.rank&&(t=G(t,da(t.shape,r))),e.rank<a.rank&&(e=G(e,da(e.shape,r))),{x:()=>V(e,ce(Kn(a,t),e.dtype))}}var xx={kernelName:Ua,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let r=a,n=r["reductionIndices"],s=t[0],i=t[1],o=ts(n,s.shape),l=BI(e,i,s,o);return{x:()=>l.x()}}},Lz={kernelName:Ga,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t;return{a:()=>V(e,ce(Ko(a,r),"float32")),b:()=>V(e,ce(aI(a,r),"float32"))}}};function Bz(e,t,a,r,n,s,i){let o=_(e,"dy","maxPool3dGrad"),l=_(t,"input","maxPool3dGrad"),u=_(a,"output","maxPool3dGrad"),d=o,p=l,h=u,c=!1;4===l.rank&&(c=!0,d=G(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=G(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=G(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),O(5===d.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`),O(5===p.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),O(5===h.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),hn("maxPool3dGrad",s,i);a={dy:d,input:p,output:h},i=M.runKernel(Ig,a,{filterSize:r,strides:n,pad:s,dimRoundingMode:i});return c?G(i,[i.shape[1],i.shape[2],i.shape[3],i.shape[4]]):i}var Vz=L({maxPool3dGrad_:Bz}),Wz={kernelName:tp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let[r,n]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;return{x:()=>Vz(e,r,n,s,i,o,l)}}};function Uz(e,t,a,r,n,s,i){let o=_(e,"dy","maxPoolGrad"),l=_(t,"input","maxPoolGrad"),u=_(a,"output","maxPoolGrad");O(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),O(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),O(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),hn("maxPoolGrad",s,i);a={dy:o,input:l,output:u};return M.runKernel(kg,a,{filterSize:r,strides:n,pad:s,dimRoundingMode:i})}var Gz=L({maxPoolGrad_:Uz}),Hz={kernelName:Ha,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let[r,n]=t,{filterSize:s,strides:i,pad:o}=a;return{x:()=>Gz(e,r,n,s,i,o)}}},qz={kernelName:qa,inputsToSave:["x"],gradFunc:(a,e,t)=>{let[r]=e,n=t["axis"],s=ts(n,r.shape),i=uI(r.shape,s)[1],o=pt(i);return{x:()=>{let t=r.shape.slice();s.forEach(e=>{t[e]=1});var e=G(a,t);return xe(V(e,Mn(r.shape,"float32")),o)}}}},jz={kernelName:ja,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let r=a,n=r["axis"],[s,i]=t,o=ts(n,s.shape),l=BI(e,i,s,o);return{x:()=>l.x()}}},Kz={kernelName:Ka,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t;return{a:()=>V(e,ce(Xo(a,r),"float32")),b:()=>V(e,ce(Wn(a,r),"float32"))}}},Xz={kernelName:Xa,inputsToSave:["x"],gradFunc:(e,t,a)=>{let r=t[0],n=a["paddings"],s=n.map(e=>e[0]);return{x:()=>He(e,s,r.shape)}}},Yz={kernelName:wl,inputsToSave:["a","b"],gradFunc:(a,e)=>{let[r,n]=e,s=ot(r.shape,n.shape);return{a:()=>{var e=_t(r.shape,s);return 0<e.length?G(ve(a,e),r.shape):a},b:()=>{var e=V(a,kt(mp(xe(r,n)))),t=_t(n.shape,s);return 0<t.length?G(ve(e,t),n.shape):e}}}},Qz={kernelName:Ya,inputsToSave:["a","b"],gradFunc:(a,e)=>{let[r,n]=e,s=ot(r.shape,n.shape);return{a:()=>{var e=V(a,ce(n,"float32")),t=_t(r.shape,s);return 0<t.length?G(ve(e,t),r.shape):e},b:()=>{var e=V(a,ce(r,"float32")),t=_t(n.shape,s);return 0<t.length?G(ve(e,t),n.shape):e}}}},Zz={kernelName:Io,gradFunc:e=>({x:()=>kt(e)})},Jz={kernelName:$o,inputsToSave:["indices"],gradFunc:(e,t)=>{let a=t[0];return{indices:()=>$t(a.shape,"float32")}}},eM={kernelName:To,gradFunc:e=>({x:()=>je(e)})},tM={kernelName:_o,saveAllInputs:!0,gradFunc:(e,t,a)=>{var a=a["axis"];return Fs(e,a).map(e=>()=>e)}},wx={kernelName:Qa,inputsToSave:["x"],gradFunc:(e,t,a)=>{let r=t[0],n=a["paddings"],s=n.map(e=>e[0]);return{x:()=>He(e,s,r.shape)}}},nM={kernelName:Za,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{let[t,a,s]=e,i=t,o=a,l=ot(i.shape,o.shape);return{a:()=>{let e=ce(o,"float32"),t=V(n,V(e,pa(i,ge(e,we(1))))),a=_t(i.shape,l);return 0<a.length&&(t=ve(t,a)),G(t,i.shape)},b:()=>{let e=Wn(i,0),t=vn(e,Yn(i),je(i)),a=V(n,V(s,t)),r=_t(o.shape,l);return 0<r.length&&(a=ve(a,r)),G(a,o.shape)}}}},sM={kernelName:Ja,inputsToSave:["x","alpha"],gradFunc:(a,e)=>{let[r,n]=e,s=Wn(r,0);return{x:()=>vn(s,a,V(a,n)),alpha:()=>{let e=vn(s,je(a),V(a,r)),t=_t(n.shape,a.shape);return 0<t.length&&(e=ve(e,t)),G(e,n.shape)}}}},rM={kernelName:Da,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[n,s]=e,i=ot(n.shape,s.shape);return{a:()=>{var e=xe(r,ce(s,"float32")),t=_t(n.shape,i);return 0<t.length?G(ve(e,t),n.shape):e},b:()=>{let e=V(r,ce(n,"float32")),t=_t(s.shape,i);0<t.length&&(e=G(ve(e,t),s.shape));var a=ct(s);return kt(xe(e,ce(a,"float32")))}}}},aM={kernelName:Sl,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>xe(e,kt(ct(a)))}}},iM={kernelName:ni,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t,r=V(Xo(a,6),yp(a));return{x:()=>V(e,ce(r,"float32"))}}},oM={kernelName:ei,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(e,ce(yp(a),"float32"))}}},uM={kernelName:Eo,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>G(e,a.shape)}}},lM={kernelName:ti,inputsToSave:["images"],gradFunc:(e,t,a)=>{let[r]=t,n={dy:e,images:r};return{images:()=>M.runKernel(Tg,n,a)}}},cM={kernelName:Cl,inputsToSave:["images"],gradFunc:(e,t,a)=>{let[r]=t,n={dy:e,images:r};return{images:()=>M.runKernel(Ng,n,a)}}},dM={kernelName:Ro,gradFunc:(e,t,a)=>{let r=a["dims"],n=ts(r,e.shape);return{x:()=>Zn(e,n)}}},pM={kernelName:Do,gradFunc:e=>({x:()=>je(e)})},hM={kernelName:si,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>kt(xe(e,V(pa(a,1.5),2)))}}},fM={kernelName:Oo,inputsToSave:["condition"],gradFunc:(e,t)=>{let[a]=t;return{condition:()=>ce(je(a),"float32"),t:()=>V(e,ce(a,e.dtype)),e:()=>V(e,ce(Jg(a),e.dtype))}}},mM={kernelName:Nl,inputsToSave:["x"],gradFunc:(r,e)=>{let[n]=e;return{x:()=>{var e=Wn(n,we(0)),t=we(PI),a=we(zI),a=V(r,a),t=V(V(r,t),Xn(ce(n,"float32")));return vn(e,a,t)}}}},gM={kernelName:ai,outputsToSave:[!0],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(e,V(a,ge(we(1),a)))}}},bM={kernelName:Tl,gradFunc:e=>({x:()=>je(e)})},yM={kernelName:ri,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(jg(ce(a,"float32")),e)}}},vM={kernelName:zo,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(nI(ce(a,"float32")),e)}}},xM={kernelName:Po,inputsToSave:["x"],gradFunc:(t,e,a)=>{let[r]=e,{begin:n,size:s}=a,i=r.shape,[o,l]=Bk(r,n,s),u=[];for(let e=0;e<t.rank;e++)u.push([o[e],i[e]-o[e]-l[e]]);return{x:()=>fi(t,u)}}},wM={kernelName:ui,outputsToSave:[!0],gradFunc:(e,t,a)=>{let[r]=t,n=a["dim"],s=V(e,r);return{logits:()=>ge(s,V(ve(s,[n],!0),r))}}},kM={kernelName:$l,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(e,qs(a))}}},kx={kernelName:Mo,gradFunc:(e,t,a)=>{let{blockShape:r,paddings:n}=a;return{x:()=>Hg(e,r,n)}}},Ix={kernelName:Lo,gradFunc:(e,t,a)=>{let r=a["axis"];return{x:()=>Ft(e,r)}}},IM={kernelName:ii,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>xe(e,V(dn(ce(a,"float32")),2))}}},SM={kernelName:Al,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(e,V(ce(a,"float32"),2))}}},CM={kernelName:li,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t,n=we(2);return{a:()=>V(e,V(n,ge(a,r))),b:()=>V(e,V(n,ge(r,a)))}}},NM={kernelName:hi,gradFunc:e=>({x:()=>je(e)})},TM={kernelName:ci,inputsToSave:["a","b"],gradFunc:(a,e)=>{let[r,n]=e,s=ot(r.shape,n.shape);return{a:()=>{let e=a,t=_t(r.shape,s);return 0<t.length&&(e=ve(e,t)),G(e,r.shape)},b:()=>{let e=a,t=_t(n.shape,s);return 0<t.length&&(e=ve(e,t)),G(kt(e),n.shape)}}}},$M={kernelName:oi,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,n=r.shape.slice(),s=a["axis"];ts(s,r.shape).forEach(e=>{n[e]=1});let i=G(e,n),o=V(i,Mn(r.shape,"float32"));return{x:()=>o}}},_M={kernelName:Vo,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>xe(e,ct(jg(a)))}}},AM={kernelName:di,outputsToSave:[!0],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(ge(we(1),ct(a)),e)}}},EM={kernelName:Cr,inputsToSave:["x"],gradFunc:(s,e,t)=>{let[i]=e,o=t["reps"];return{x:()=>{let n=je(i);if(1===i.rank)for(let e=0;e<o[0];++e)n=ie(n,He(s,[e*i.shape[0]],[i.shape[0]]));else if(2===i.rank)for(let t=0;t<o[0];++t)for(let e=0;e<o[1];++e)n=ie(n,He(s,[t*i.shape[0],e*i.shape[1]],[i.shape[0],i.shape[1]]));else if(3===i.rank)for(let a=0;a<o[0];++a)for(let t=0;t<o[1];++t)for(let e=0;e<o[2];++e)n=ie(n,He(s,[a*i.shape[0],t*i.shape[1],e*i.shape[2]],[i.shape[0],i.shape[1],i.shape[2]]));else{if(4!==i.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${i.rank} tensors yet.`);for(let r=0;r<o[0];++r)for(let a=0;a<o[1];++a)for(let t=0;t<o[2];++t)for(let e=0;e<o[3];++e)n=ie(n,He(s,[r*i.shape[0],a*i.shape[1],t*i.shape[2],e*i.shape[3]],[i.shape[0],i.shape[1],i.shape[2],i.shape[3]]))}return n}}}},RM={kernelName:pi,gradFunc:(e,t,a)=>{let r=a,n=r["perm"],s=Zg(n);return{x:()=>qe(e,s)}}},DM={kernelName:Go,gradFunc:(e,t,a)=>{let r=a,n=r["axis"];return{value:()=>Jn(e,n)}}},FM={kernelName:up,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>OM(e,a)}}};function OM(e,t){let a=$r(t,je(t)),r=Ku(e,a),n=Ko(t,we(0,"int32")),s=r.rank-n.rank;for(let e=0;e<s;++e)n=Pn(n,e+1);n=Ds(n,Mn(r.shape,"bool"));t=je(r);return vn(n,r,t)}var PM={kernelName:Ho,gradFunc:e=>({x:()=>je(e)})},zM=[LI,zP,MP,LP,BP,VP,WP,UP,GP,HP,qP,jP,YP,JP,ez,tz,nz,sz,rz,az,iz,oz,lz,uz,pz,hz,fz,mz,gz,bz,rM,yz,vz,xz,wz,kz,Sz,Iz,Cz,Nz,Tz,$z,_z,Az,Ez,Rz,Dz,Fz,Oz,Mz,xx,xx,Lz,Wz,Hz,qz,jz,Kz,Xz,Yz,Qz,Zz,Jz,eM,tM,wx,wx,nM,sM,aM,iM,oM,uM,lM,cM,dM,pM,hM,fM,mM,gM,bM,yM,vM,xM,wM,kM,kx,kx,Ix,Ix,IM,CM,SM,NM,TM,$M,_M,AM,EM,RM,DM,FM,PM];for(let e of zM)D$(e);var Bf,MM={};function Rt(){return Bf=null==Bf?zA().epsilon():Bf}function bs(){return"channelsLast"}Ae(MM,{maxNorm:()=>WM,minMaxNorm:()=>HM,nonNeg:()=>GM,unitNorm:()=>UM});var Vs=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Vs.prototype)}},hs=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,hs.prototype)}},U=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,U.prototype)}},Fe=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Fe.prototype)}},VI=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,VI.prototype)}};function fa(a,r){if(Array.isArray(a)){let t=[];for(let e=0;e<r;e++)t=t.concat(a);return t}{let e=new Array(r);return e.fill(a),e}}function Cs(e,t){if(!e)throw new VI(t)}function Sx(e,t){let a=0;for(var r of e)r===t&&a++;return a}function bn(e){return 1===e.length?e[0]:e}function dt(e){return Array.isArray(e)?e:[e]}function Ws(e){e=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Kr(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var Gn={};function wb(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function mm(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(e=>mm(e));else{var t;for(t of Object.keys(e)){var a=e[t];null!=a&&"object"==typeof a&&(Array.isArray(a)||"ndarray"!==a.type||"number"!=typeof a.value?mm(a):e[t]=a.value)}}}function Ll(n,s={},i={},o="object",l=!1){if("string"==typeof n){let e=n,t;if(e in i)t=i[e];else if(e in Gn)t=Gn[e];else if(t=s[e],null==t)throw new U(`Unknown ${o}: ${n}. This may be due to one of the following reasons:
1. The ${o} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${o} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return t}{n=n;if(null==n.className||null==n.config)throw new U(`${o}: Improper config format: ${JSON.stringify(n)}.
'className' and 'config' must set.`);let e=n.className,a,r;if(e in i?[a,r]=i[e]:e in Gn?[a,r]=Gn.className:e in s&&([a,r]=s[e]),null==a)throw new U(`Unknown ${o}: ${e}. This may be due to one of the following reasons:
1. The ${o} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${o} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=r){let e={};for(var u of Object.keys(Gn))e[u]=Gn[u];for(var d of Object.keys(i))e[d]=i[d];let t=n.config;t.customObjects=e;var p,o={...Gn};for(p of Object.keys(i))Gn[p]=i[p];mm(n.config);var h=r(a,n.config,i,l);return Gn={...o},h}var t,h={...Gn};for(t of Object.keys(i))Gn[t]=i[t];n=new a(n.config);return Gn={...h},n}}function LM(e,t){return e<t?-1:t<e?1:0}function Uc(e,t){return-1*LM(e,t)}function cr(e){if(null==e)return e;let t=[];for(var a of e)-1===t.indexOf(a)&&t.push(a);return t}function BM(e){if(null==e)throw new U(`Invalid value in obj: ${JSON.stringify(e)}`);for(var t in e)if(e.hasOwnProperty(t))return!1;return!0}function mi(e,t,a){if(null!=a&&e.indexOf(a)<0)throw new U(`${a} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function kb(e,t,a=0,r=1/0){return Cs(0<=a),Cs(a<=r),Array.isArray(e)&&e.length>=a&&e.length<=r&&e.every(e=>typeof e===t)}function Bt(e,a){Array.isArray(e)?(w.assert(0<e.length,()=>`${a} is unexpectedly an empty array.`),e.forEach((e,t)=>Bt(e,`element ${t+1} of ${a}`))):w.assert(Number.isInteger(e)&&0<e,()=>`Expected ${a} to be a positive integer, but got ${WI(e)}.`)}function WI(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>WI(e)).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function VM(a,r,n){let s=null!=n?n():w.now(),i;return(...e)=>{var t=null!=n?n():w.now();return t-s<r||(s=t,i=a(...e)),i}}function UI(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function Ib(e,t){return j(()=>dn(ve(V(e,e),t,!0)))}var Bl=class extends ae.Serializable{getConfig(){return{}}},Sb=class extends Bl{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(a){return j(()=>{var e=Ib(a,this.axis),t=Vn(e,0,this.maxValue);return V(a,xe(t,ie(Rt(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Sb.className="MaxNorm",ae.registerClass(Sb);var Cb=class extends Bl{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return j(()=>xe(e,ie(Rt(),Ib(e,this.axis))))}getConfig(){return{axis:this.axis}}};Cb.className="UnitNorm",ae.registerClass(Cb);var Nb=class extends Bl{apply(e){return Xs(e)}};Nb.className="NonNeg",ae.registerClass(Nb);var Tb=class extends Bl{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(a){return j(()=>{var e=Ib(a,this.axis),t=ie(V(this.rate,Vn(e,this.minValue,this.maxValue)),V(1-this.rate,e));return V(a,xe(t,ie(Rt(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Tb.className="MinMaxNorm",ae.registerClass(Tb);var Cx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ot(e){return wb(e)}function Nx(e,t={}){return Ll(e,ae.SerializationMap.getMap().classNameMap,t,"constraint")}function Pt(e){return null==e?null:"string"!=typeof e?e instanceof Bl?e:Nx(e):Nx({className:e in Cx?Cx[e]:e,config:{}})}function WM(e){return new Sb(e)}function UM(e){return new Cb(e)}function GM(){return new Nb}function HM(e){return new Tb(e)}var qM={};Ae(qM,{constant:()=>mL,glorotNormal:()=>kL,glorotUniform:()=>wL,heNormal:()=>IL,heUniform:()=>SL,identity:()=>vL,leCunNormal:()=>CL,leCunUniform:()=>NL,ones:()=>fL,orthogonal:()=>TL,randomNormal:()=>bL,randomUniform:()=>gL,truncatedNormal:()=>yL,varianceScaling:()=>xL,zeros:()=>hL});var jM=["channelsFirst","channelsLast"],KM=["nearest","bilinear"],XM=["valid","same","causal"],YM=["max","avg"],QM=["sum","mul","concat","ave"],zi=new Map;function Ct(e){mi(jM,"DataFormat",e)}function ZM(e){mi(KM,"InterpolationFormat",e)}function Un(e){mi(XM,"PaddingMode",e)}function GI(e){mi(YM,"PoolMode",e)}var Mu=[],Tx="/";function ea(e,t){Mu.push(e);try{var a=t();return Mu.pop(),a}catch(e){throw Mu.pop(),e}}function JM(){return 0===Mu.length?"":Mu.join(Tx)+Tx}function HI(e){if(!jI(e))throw new Error("Not a valid tensor name: '"+e+"'");return JM()+e}function qI(e){if(!jI(e))throw new Error("Not a valid tensor name: '"+e+"'");zi.has(e)||zi.set(e,0);var t=zi.get(e);if(zi.set(e,zi.get(e)+1),0<t){t=`${e}_${t}`;return zi.set(t,1),t}return e}var eL=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function jI(e){return!!e.match(eL)}function tL(e){return e===parseInt(e.toString(),10)}function dr(t,a,r){null==r&&(r=t.length);let n=1;for(let e=a=null==a?0:a;e<r;++e)n*=t[e];return n}function Zi(t){if(0===t.length)return Number.NaN;let a=Number.POSITIVE_INFINITY;for(let e=0;e<t.length;e++){var r=t[e];r<a&&(a=r)}return a}function gr(t){if(0===t.length)return Number.NaN;let a=Number.NEGATIVE_INFINITY;for(let e=0;e<t.length;e++){var r=t[e];r>a&&(a=r)}return a}function ys(t,a){if(a<t)throw new U(`end (${a}) < begin (${t}) is forbidden.`);let r=[];for(let e=t;e<a;++e)r.push(e);return r}function Sp(e,t){return ce(e,t)}function Vl(e,t=-1){let a=e.shape.slice();return t<0&&(t=a.length+t+1),a.splice(t,0,1),G(e,a)}function nL(e,t){return j(()=>{if(2!==e.shape.length)throw new U(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return gm(Vl(e,1),[1,t,1])})}function sL(e){var t=[dr(e.shape)];return G(e,t)}function rL(e){if(e.rank<=1)throw new U(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);var t=[e.shape[0],dr(e.shape,1)];return G(e,t)}function ta(e,t,a){return j(()=>{switch(e.rank){case 1:return ib(e,t,a);case 2:return vI(e,[t,0],[a,e.shape[1]]);case 3:return ob(e,[t,0,0],[a,e.shape[1],e.shape[2]]);case 4:return kd(e,[t,0,0,0],[a,e.shape[1],e.shape[2],e.shape[3]]);case 5:return He(e,[t,0,0,0,0],[a,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return He(e,[t,0,0,0,0,0],[a,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new U(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Vf(e,t,a){return j(()=>{switch(e.rank){case 1:return ib(e,t,a);case 2:return vI(e,[0,t],[e.shape[0],a]);case 3:return ob(e,[0,0,t],[e.shape[0],e.shape[1],a]);case 4:return kd(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],a]);default:throw new U(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Gc(e,t,a,r){return j(()=>{switch(e.rank){case 1:return ib(e,t,a);case 2:switch(r){case 1:return ta(e,t,a);case 2:return Vf(e,t,a);default:throw new U(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return ta(e,t,a);case 2:return ob(e,[0,t,0],[e.shape[0],a,e.shape[2]]);case 3:return Vf(e,t,a);default:throw new U(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return ta(e,t,a);case 2:return kd(e,[0,t,0,0],[e.shape[0],a,e.shape[2],e.shape[3]]);case 3:return kd(e,[0,0,t,0],[e.shape[0],e.shape[1],a,e.shape[3]]);case 4:return Vf(e,t,a);default:throw new U(`The axis is not within the rank of the tensor ${r}`)}default:throw new U(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function $b(e,t=-1){var a;return(t=t<0?0!==(a=e[0].rank)?a:0:t)===e[0].rank&&(t=-1),Ft(e,t)}function $x(e,t){switch(e.rank){case 1:return VE([e,t]);case 2:return UE([e,t],0);case 3:return HE([e,t],0);case 4:return jE([e,t],0);default:throw new U(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function gm(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new U(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return ps(e,t)}function Cp(e,t=0,a=1,r,n){return KD(e,t,a,r,n)}function Es(o,l,u,d){if(o.rank<2||l.rank<2)throw new Fe(`dot requires both inputs to be rank >= 2 but got x shape = ${o.shape} and y shape = ${l.shape}`);if(3<=l.rank&&o.shape.slice(-1)[0]!==l.shape.slice(-2)[0])throw new Fe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${o.shape} and  y shape = ${l.shape}`);if(2===o.rank&&2===l.rank)return ha.matMul({a:o,b:l,transposeA:!1,transposeB:!1,bias:d?bm(o.rank,d,bs()):null,activation:u});{let e=o.shape.slice(),t=e.pop();o=G(o,[-1,t]);let a=l.shape.slice(),r=a.pop(),n=a.pop(),s=[...a,r],i=Array.from({length:l.rank},(e,t)=>0===t?l.rank-2:t<=l.rank-2?t-1:t);l=G(qe(l,i),[n,-1]);var p=[...e,...s];return G(ha.matMul({a:o,b:l,transposeA:!1,transposeB:!1,bias:d?bm(o.rank,d,bs()):null,activation:u}),p)}}function KI(e,t,a){return j(()=>(t=(Array.isArray(t)?Zt:ce)(t,"int32"),Ku(e,t,a)))}function Wl(e){return V(e,e)}function bm(e,t,a){var r=t.shape;if(1!==t.rank&&t.rank!==e)throw new U(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===a)return 1===r.length?G(t,[1,r[0],1,1,1]):G(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===a)return 1===r.length?G(t,[1,1,1,1,r[0]]):G(t,[1].concat(r))}else if(4===e){if("channelsFirst"===a)return 1===r.length?G(t,[1,r[0],1,1]):G(t,[1,r[2],r[0],r[1]]);if("channelsLast"===a)return 1===r.length?G(t,[1,1,1,r[0]]):G(t,[1].concat(r))}else if(3===e){if("channelsFirst"===a)return 1===r.length?G(t,[1,r[0],1]):G(t,[1,r[1],r[0]]);if("channelsLast"===a)return 1===r.length?G(t,[1,1,r[0]]):G(t,[1].concat(r))}else if(e<3)return t;throw new U(`Unsupported input rank by biasAdd: ${t.rank}`)}function ws(e,t,a){return j(()=>(Ct(a=null==a?bs():a),ie(e,bm(e.rank,t,a))))}function aL(e,t=1){if(1!==t)throw new Fe(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return fp(e)}function iL(e){return j(()=>xe(e,ie(Mt(e),1)))}function XI(e,t,a,r){return j(()=>nF(e,t,a,r))}function oL(t){return j(()=>{var e=ie(.5,V(.2,t));return Vn(e,0,1)})}function Ul(e,t,a=!1){return(a?e:t)()}var uL=["fanIn","fanOut","fanAvg"],lL=["normal","uniform","truncatedNormal"];function cL(e){mi(uL,"FanMode",e)}function dL(e){mi(lL,"Distribution",e)}var ns=class extends ae.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},_b=class extends ns{apply(e,t){return $t(e,t)}};_b.className="Zeros",ae.registerClass(_b);var Np=class extends ns{apply(e,t){return Mn(e,t)}};Np.className="Ones",ae.registerClass(Np);var Ab=class extends ns{constructor(e){if(super(),"object"!=typeof e)throw new U(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new U(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return j(()=>V(we(this.value),Mn(e,t)))}getConfig(){return{value:this.value}}};Ab.className="Constant",ae.registerClass(Ab);var Eb=class extends ns{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Ml(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Eb.className="RandomUniform",ae.registerClass(Eb);var Rb=class extends ns{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Fe(`randomNormal does not support dType ${t}.`);return Cp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Rb.className="RandomNormal",ae.registerClass(Rb);var Db=class extends ns{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Fe(`truncatedNormal does not support dType ${t}.`);return db(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Db.className="TruncatedNormal",ae.registerClass(Db);var Fb=class extends ns{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return j(()=>{if(2!==e.length||e[0]!==e[1])throw new U("Identity matrix initializer can only be used for 2D square matrices.");return V(this.gain,rI(e[0]))})}getConfig(){return{gain:this.gain}}};function pL(e,t="channelsLast"){let a,r;var n;return Ct(t),2===e.length?(a=e[0],r=e[1]):-1!==[3,4,5].indexOf(e.length)?"channelsFirst"===t?(n=dr(e,2),a=e[1]*n,r=e[0]*n):"channelsLast"===t&&(t=dr(e,0,e.length-2),a=e[e.length-2]*t,r=e[e.length-1]*t):(e=dr(e),a=Math.sqrt(e),r=Math.sqrt(e)),[a,r]}Fb.className="Identity",ae.registerClass(Fb);var xn=class extends ns{constructor(e){if(super(),e.scale<0)throw new U(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,cL(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,dL(this.distribution),this.seed=e.seed}apply(e,t){let a=pL(e),r=a[0],n=a[1],s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,n):s/=Math.max(1,(r+n)/2),"normal"===this.distribution){var i=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Fe(`${this.getClassName()} does not support dType ${t}.`);return db(e,0,i,t,this.seed)}i=Math.sqrt(3*s);return Ml(e,-i,i,t)}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};xn.className="VarianceScaling",ae.registerClass(xn);var Tp=class extends xn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return xn.className}};Tp.className="GlorotUniform",ae.registerClass(Tp);var $p=class extends xn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return xn.className}};$p.className="GlorotNormal",ae.registerClass($p);var _p=class extends xn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return xn.className}};_p.className="HeNormal",ae.registerClass(_p);var Ap=class extends xn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return xn.className}};Ap.className="HeUniform",ae.registerClass(Ap);var Ep=class extends xn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return xn.className}};Ep.className="LeCunNormal",ae.registerClass(Ep);var Rp=class extends xn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return xn.className}};Rp.className="LeCunNormal",ae.registerClass(Rp);var Ob=class extends ns{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Fe("Random seed is not implemented for Orthogonal Initializer yet.")}apply(r,e){return j(()=>{if(r.length<2)throw new Fe("Shape must be at least 2D.");2e3<r[0]*r[1]&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${r[0]*r[1]}) elements: Slowness may result.`);let e=r[0]>r[1]?[r[1],r[0]]:r,t=Cp(e,0,1,"float32"),a=VO.gramSchmidt(t);return r[0]>r[1]&&(a=qe(a)),V(this.gain,a)})}getConfig(){return{gain:this.gain,seed:this.seed}}};Ob.className="Orthogonal",ae.registerClass(Ob);var _x={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ax(e,t={}){return Ll(e,ae.SerializationMap.getMap().classNameMap,t,"initializer")}function yt(e){return wb(e)}function ht(t){if("string"!=typeof t)return t instanceof ns?t:Ax(t);t=t in _x?_x[t]:t;if("GlorotNormal"===t)return new $p;if("GlorotUniform"===t)return new Tp;if("HeNormal"===t)return new _p;if("HeUniform"===t)return new Ap;if("LeCunNormal"===t)return new Ep;if("LeCunUniform"===t)return new Rp;{let e={};return e.className=t,e.config={},Ax(e)}}function hL(){return new _b}function fL(){return new Np}function mL(e){return new Ab(e)}function gL(e){return new Eb(e)}function bL(e){return new Rb(e)}function yL(e){return new Db(e)}function vL(e){return new Fb(e)}function xL(e){return new xn(e)}function wL(e){return new Tp(e)}function kL(e){return new $p(e)}function IL(e){return new _p(e)}function SL(e){return new Ap(e)}function CL(e){return new Ep(e)}function NL(e){return new Rp(e)}function TL(e){return new Ob(e)}var $L={};Ae($L,{Layer:()=>Ge,RNN:()=>Ar,RNNCell:()=>ql,activation:()=>cV,add:()=>vV,alphaDropout:()=>nW,average:()=>xV,averagePooling1d:()=>Hy,averagePooling2d:()=>qy,averagePooling3d:()=>jy,avgPool1d:()=>_V,avgPool2d:()=>EV,avgPool3d:()=>DV,avgPooling1d:()=>AV,avgPooling2d:()=>RV,avgPooling3d:()=>FV,batchNormalization:()=>NV,bidirectional:()=>KV,concatenate:()=>wV,conv1d:()=>tV,conv2d:()=>nV,conv2dTranspose:()=>sV,conv3d:()=>rV,conv3dTranspose:()=>aV,convLstm2d:()=>GV,convLstm2dCell:()=>HV,cropping2D:()=>oV,dense:()=>dV,depthwiseConv2d:()=>lV,dot:()=>CV,dropout:()=>pV,elu:()=>XB,embedding:()=>yV,flatten:()=>fV,gaussianDropout:()=>tW,gaussianNoise:()=>eW,globalAveragePooling1d:()=>OV,globalAveragePooling2d:()=>PV,globalMaxPool1d:()=>YV,globalMaxPool2d:()=>QV,globalMaxPooling1d:()=>GS,globalMaxPooling2d:()=>HS,gru:()=>MV,gruCell:()=>LV,input:()=>OB,inputLayer:()=>KB,layerNormalization:()=>TV,leakyReLU:()=>QB,lstm:()=>BV,lstmCell:()=>VV,masking:()=>sW,maxPool1d:()=>ZV,maxPool2d:()=>JV,maxPooling1d:()=>qS,maxPooling2d:()=>jS,maxPooling3d:()=>zV,maximum:()=>kV,minimum:()=>IV,multiply:()=>SV,permute:()=>bV,prelu:()=>ZB,reLU:()=>YB,repeatVector:()=>mV,reshape:()=>gV,rnn:()=>qV,separableConv2d:()=>iV,simpleRNN:()=>WV,simpleRNNCell:()=>UV,softmax:()=>JB,spatialDropout1d:()=>hV,stackedRNNCells:()=>jV,thresholdedReLU:()=>eV,timeDistributed:()=>XV,upSampling2d:()=>uV,zeroPadding2d:()=>$V});var _L=0;function YI(){return _L++}var Hc={};function Dp(e=""){return e in Hc||(Hc[e]=0),Hc[e]+=1,e+Hc[e].toString()}function ym(e){return Array.isArray(e)&&Array.isArray(e[0])}function Sd(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Oe(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new U(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function nt(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new U(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Cd(e){let t=0;for(var a of e)0===a.shape.length?t+=1:t+=a.shape.reduce((e,t)=>e*t);return t}var Ex="Variable",AL=class{constructor(e,t="float32",a=Ex,r=!0,n=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=YI(),this.originalName=HI(a=null==a?Ex:a),this.name=qI(this.originalName),this.trainable_=r,this.constraint=n,this.val=U3(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),EL(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function EL(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function vm(e){return e.map(e=>e.read())}function Pb(e){e.forEach(e=>{e[0].write(e[1])})}var Dt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},$s=class{constructor(e,t,a,r,n,s,i){this.dtype=e,this.shape=t,this.sourceLayer=a,this.inputs=r,this.callArgs=n,this.outputTensorIndex=i,this.id=YI(),null!=s&&(this.originalName=HI(s),this.name=qI(this.originalName)),this.rank=t.length}},RL=0,Fp=class{constructor(e,t){this.callArgs=t,this.id=RL++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(var a of e.inboundLayers)null!=a&&a.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(var t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},DL=0,Ge=class extends ae.Serializable{constructor(a={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=DL++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=a.name;var t;if(e||(t=this.getClassName(),e=Ws(t)+"_"+Dp(t)),this.name=e,this.trainable_=null==a.trainable||a.trainable,null!=a.inputShape||null!=a.batchInputShape){let t;if(null!=a.batchInputShape)t=a.batchInputShape;else if(null!=a.inputShape){let e=null;null!=a.batchSize&&(e=a.batchSize),t=[e].concat(a.inputShape)}this.batchInputShape=t;let e=a.dtype;null==e&&(e=a.inputDType),null==e&&(e="float32"),this.dtype=e}null!=a.weights?this.initialWeights=a.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new hs(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new U(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return bn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return bn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(1<this.inboundNodes.length)throw new Vs(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Vs(`Layer ${this.name} is not connected, no input to return.`);return bn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Vs(`Layer ${this.name} has no inbound nodes.`);if(1<this.inboundNodes.length)throw new Vs(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return bn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return(this.trainable?this._trainableWeights.filter(e=>!e.trainable):this._trainableWeights).concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=dt(e),null!=this.inputSpec&&0!==this.inputSpec.length){var t=dt(this.inputSpec);if(e.length!==t.length)throw new U(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let r=0;r<e.length;r++){var a=e[r],n=t[r];if(null!=n){var s=a.rank;if(null!=n.ndim&&s!==n.ndim)throw new U(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${n.ndim}, found ndim=${s}`);if(null!=n.maxNDim&&s>n.maxNDim)throw new U(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${n.maxNDim}, found ndim=${s}`);if(null!=n.minNDim&&s<n.minNDim)throw new U(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${n.minNDim}, found ndim=${s}.`);if(null!=n.dtype&&a.dtype!==n.dtype)throw new U(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${n.dtype}, found dtype=${a.dtype}.`);if(n.axes){var i,o=a.shape;for(i in n.axes){let e=Number(i),t=n.axes[i],a=0<=e?o[e]:o[o.length+e];if(null!=t&&-1===[t,null].indexOf(a))throw new U(`Input ${r} is incompatible with layer ${this.name}: expected axis ${e} of input shape to have value ${t} but got shape ${o}.`)}}if(null!=n.shape)for(let e=0;e<n.shape.length;++e){var l=n.shape[e],u=a.shape[e];if(null!=l&&null!=u&&l!==u)throw new U(`Input ${r} is incompatible with layer ${this.name}: expected shape=${n.shape}, found shape=${a.shape}.`)}}}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(n,s){s=s||{},this.assertNotDisposed();let i=dt(n),e=!0;for(var t of i)if(!(t instanceof $s)){e=!1;break}let a=!0;for(var r of i)if(r instanceof $s){a=!1;break}if(e===a)throw new U("Arguments to apply() must be all SymbolicTensors or all Tensors");return ea(this.name,()=>{if(!this.built){this.assertInputCompatibility(n);let e=[];for(var t of dt(n))e.push(t.shape);this.build(bn(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(n),a){let e=this.call(n,s),t=dt(e),a=[];for(var r of t)-1!==i.indexOf(r)&&(r=r.clone()),a.push(r);if(e=bn(a),null!=this.activityRegularizer)throw new Fe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return e}{let e=FL(n),t=this.computeOutputShape(e),a,r=OL(n);if(this.warnOnIncompatibleInputShape(Array.isArray(n)?e[0]:e),a=null!=t&&0<t.length&&Array.isArray(t[0])?t.map((e,t)=>new $s(r,e,this,dt(n),s,this.name,t)):new $s(r,t,this,dt(n),s,this.name),this.addInboundNode(n,a,null,null,e,t,s),this._refCount++,null!=this.activityRegularizer)throw new Fe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}})}warnOnIncompatibleInputShape(r){if(null!=this.batchInputShape)if(r.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(r)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let a=!1;this.batchInputShape.forEach((e,t)=>{null!=e&&null!=r[t]&&r[t]!==e&&(a=!0)}),a&&console.warn(`The shape of the input tensor (${JSON.stringify(r)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Vs(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(var t of this.inboundNodes){t=JSON.stringify(t.outputShapes);-1===e.indexOf(t)&&e.push(t)}if(1!==e.length)throw new Vs(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`);var a=this.inboundNodes[0].outputShapes;return Array.isArray(a)&&Array.isArray(a[0])&&1===a.length?a[0]:a}countParams(){if(!this.built)throw new hs(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Cd(this.weights)}build(e){this.built=!0}getWeights(e=!1){return vm(e?this.trainableWeights:this.weights)}setWeights(o){j(()=>{var r=this.weights;if(r.length!==o.length)throw new U(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${o.length}, but the layer was expecting ${r.length} weights. Provided weights: ${o}...`);if(0!==r.length){let t=[],a=vm(r);for(let e=0;e<a.length;++e){var n=a[e],s=r[e],i=o[e];if(!w.arraysEqual(n.shape,i.shape))throw new U(`Layer weight shape ${n.shape} not compatible with provided weight shape ${i.shape}`);t.push([s,i])}Pb(t)}})}addWeight(e,t,a,r,n,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new U(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==a&&(a="float32");let l=(r=this.fastWeightInitDuringBuild?null!=o?o():ht("zeros"):r).apply(t,a),u=new AL(l,a,e,s,i);return l.dispose(),null!=n&&this.addLoss(()=>n.apply(u.read())),((s=null==s?!0:s)?this._trainableWeights:this._nonTrainableWeights).push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=dt(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(this.supportsMasking)return t;if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach(e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}addInboundNode(e,t,a,r,n,s,i=null){var o,e=dt(e);t=dt(t),a=dt(a),r=dt(r),n=Sd(n),s=Sd(s);let l=[],u=[],d=[];for(o of e)l.push(o.sourceLayer),u.push(o.nodeIndex),d.push(o.tensorIndex);new Fp({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:d,inputTensors:e,outputTensors:t,inputMasks:a,outputMasks:r,inputShapes:n,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function FL(e){let t=[];for(var a of e=dt(e))t.push(a.shape);return bn(t)}function OL(e){return"float32"}function QI(e,t,a){if((null==t||null!=a&&0<a)&&(t=e.sourceLayer,a=e.nodeIndex),0===t.inboundNodes.length)return[e];var r,n=t.inboundNodes[a];if(0===n.inboundLayers.length)return n.inputTensors;{let t=[];for(let e=0;e<n.inboundLayers.length;e++)for(r of QI(n.inputTensors[e],n.inboundLayers[e],n.nodeIndices[e]))-1===t.indexOf(r)&&t.push(r);return t}}var Qo=class extends Ge{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Dp("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new U("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new U("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new U("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");e=e.dtype||"float32";this.batchInputShape=t,this.dtype=e,this.inputSpec=[{shape:t}];let a=new $s(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Fp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new U(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function ZI(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new U("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let a=e.dtype;return null==a&&(a="float32"),new Qo({batchInputShape:t,name:e.name,dtype:a,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function rr(n){if(null!=n){let t=[],a=[],r=[];for(var s in n){var i=n[s];if("number"!=typeof i){let e=i;t.push(e.data()),a.push(s),r.push(e)}}if(0<t.length){var o=await Promise.all(t);for(let e=0;e<o.length;++e)n[a[e]]=o[e][0];Re(r)}}}function JI(t){if(null!=t)for(var a in t){let e=t[a];"number"!=typeof e&&e.dispose()}}Qo.className="InputLayer",ae.registerClass(Qo);var PL=125,Ji=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},zL=class{constructor(e,t=10){this.callbacks=e=null==e?[]:e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(var t of this.callbacks)t.setParams(e)}setModel(e){for(var t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(var a of this.callbacks)await a.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(var a of this.callbacks)await a.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(var a of this.callbacks)await a.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(var a of this.callbacks)await a.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(var t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(var t of this.callbacks)await t.onTrainEnd(e)}},ML=class extends Ji{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,r){let n=null==(r=null==r?{}:r).size?0:r.size;this.seen+=n;for(let a in r){let t=r[a];if("number"==typeof t)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+t*n;else{let e;a in this.totals?e=this.totals[a]:this.totals[a]=0;var s=j(()=>ie(this.totals[a],V(t,n)));this.totals[a]=s,null!=e&&e.dispose()}}}async onEpochEnd(e,a){if(null!=a)for(let t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?a[t]=this.totals[t]/this.seen:j(()=>{var e=V(xe(1,this.seen),this.totals[t]);a[t]=e,this.totals[t].dispose(),Ht(a[t])}))}},LL=class extends Ji{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){for(var a in null==t&&(t={}),this.epoch.push(e),t)null==this.history[a]&&(this.history[a]=[]),this.history[a].push(t[a])}async syncData(){let a=[],r=[],n=[];for(var s in this.history){var i=this.history[s];for(let t=0;t<i.length;++t)if("number"!=typeof i[t]){let e=i[t];a.push(e.data()),r.push(s),n.push(t)}}var t=await Promise.all(a);for(let e=0;e<t.length;++e)this.history[r[e]][n[e]].dispose(),this.history[r[e]][n[e]]=t[e][0]}},BL=class extends Ji{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||OI,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=PL),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");w.isNumber(this.yieldEvery)&&(this.maybeWait=VM(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,a){let r=[];null!=this.yield&&(await rr(a),r.push(this.yield(e,t,a))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await rr(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let a=[];null!=this.epochEnd&&(await rr(t),a.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&a.push(this.nextFrameFunc()),await Promise.all(a)}async onBatchBegin(e,t){null!=this.batchBegin&&(await rr(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let a=[];null!=this.batchEnd&&(await rr(t),a.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?a.push(this.nextFrameFunc()):w.isNumber(this.yieldEvery)&&a.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(a)}async onTrainBegin(e){null!=this.trainBegin&&(await rr(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await rr(e),await this.trainEnd(e))}};function eS(e,t){return(e=null==e?{}:e)instanceof Ji?[e]:Array.isArray(e)&&e[0]instanceof Ji?e:dt(e).map(e=>new BL(e,t))}var ks=class{constructor(){}static registerCallbackConstructor(e,t){w.assert(0<=e&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),ks.checkForDuplicate(t),null==ks.constructors[e]&&(ks.constructors[e]=[]),ks.constructors[e].push(t)}static checkForDuplicate(t){for(var e in ks.constructors)ks.constructors[+e].forEach(e=>{if(e===t)throw new U("Duplicate callback constructor.")})}static clear(){ks.constructors={}}static createCallbacks(e){let t=[];for(var a in ks.constructors){a=+a;a<=e&&t.push(...ks.constructors[a])}return t.map(e=>new e)}},zb=ks;function tS(e,t,a,r,n,s,i,o,l){let u=new LL,d=[new ML,...zb.createCallbacks(t)];null!=e&&d.push(...e),d.push(u);let p=new zL(d);return p.setParams({epochs:a,initialEpoch:r,samples:n,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:p,history:u}}function ms(e,t={},a=!1){return Ll(e,ae.SerializationMap.getMap().classNameMap,t,"layer",a)}function Nd(a,r){return j(()=>{"float32"!==a.dtype&&(a=ce(a,"float32"));var e=ve(Wl(a),r,!0),t=Pl(e.shape,Rt()),t=dn($r(e,t));return xe(a,t)})}function gi(e,t){return j(()=>St(Wl(ge(t,e)),-1))}function Op(e,t){return j(()=>St(Mt(ge(t,e)),-1))}function Zo(a,r){return j(()=>{var e=ge(a,r),t=Vn(Mt(a),Rt(),Number.MAX_VALUE),t=Mt(xe(e,t));return V(100,St(t,-1))})}function VL(a,r){return j(()=>{var e=Vn(r,Rt(),Number.MAX_VALUE),t=Yn(ie(1,e)),e=Vn(a,Rt(),Number.MAX_VALUE),e=Yn(ie(1,e));return St(Wl(ge(t,e)),-1)})}function WL(t,a){return j(()=>{var e=$r(0,ge(1,V(t,a)));return St(Wl(e),-1)})}function UL(t,a){return j(()=>{var e=$r(0,ge(1,V(t,a)));return St(e,-1)})}function GL(a,r){return j(()=>{var e=ve(V(a,r),-1),t=As(V(ge(1,a),r),-1);return $r(0,ie(1,ge(t,e)))})}function HL(a,r){return j(()=>{var e=Math.log(2),t=ge(r,a),e=ge(ie(t,zl(V(-2,t))),e);return St(e,-1)})}function Qu(t,a,r=!1){return j(()=>{var e;return a=r?ub(a):(e=ve(a,a.shape.length-1,!0),xe(a,e)),a=Vn(a,Rt(),1-Rt()),kt(ve(V(ce(t,"float32"),Yn(a)),a.shape.length-1))})}function Td(a,r,n=!1){return j(()=>{var e=ce(mp(sL(a)),"int32"),t=(r=Vn(r,Rt(),1-Rt())).shape;return Qu(G(vd(e,t[t.length-1]),t),r,n)})}function qL(a,r){if(!w.arraysEqual(a.shape,r.shape))throw new U(`logits and labels must have the same shape, but got shapes ${JSON.stringify(a.shape)} and ${JSON.stringify(r.shape)}`);return j(()=>{var e=Xs(r),t=kt(Mt(r));return ie(ge(e,V(r,a)),Yg(Xn(t)))})}function Pp(t,a){return j(()=>{var e=Vn(a,Rt(),1-Rt());return e=Yn(xe(e,ge(1,e))),St(qL(t,e),-1)})}function jL(a,r){return j(()=>{var e=Vn(a,Rt(),1),t=Vn(r,Rt(),1);return ve(V(a,Yn(xe(e,t))),-1)})}function KL(t,a){return j(()=>{var e=Yn(ie(Rt(),a));return St(ge(a,V(t,e)),-1)})}function Mb(a,r){return j(()=>{var e=Nd(a,-1),t=Nd(r,-1),t=V(e,t);return kt(ve(t,-1))})}zb.constructors={};var $d={meanSquaredError:gi,meanAbsoluteError:Op,meanAbsolutePercentageError:Zo,meanSquaredLogarithmicError:VL,squaredHinge:WL,hinge:UL,categoricalHinge:GL,logcosh:HL,categoricalCrossentropy:Qu,sparseCategoricalCrossentropy:Td,binaryCrossentropy:Pp,kullbackLeiblerDivergence:jL,poisson:KL,cosineProximity:Mb};function Wf(t){if("string"!=typeof t)return t;{if(t in $d)return $d[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new U(e)}}function Lb(t,a){return j(()=>{var e=V(.5,Qn(a)),e=Sp(Wn(a,e),t.dtype);return St(Kn(t,e),-1)})}function Bb(e,t){return j(()=>Sp(Kn(Hu(e,-1),Hu(t,-1)),"float32"))}function nS(e,t){return j(()=>ce(ve(Ds(Kn(e,1),Kn(t,1))),"float32"))}function XL(e,t){return j(()=>ce(ve(Ds(Kn(e,1),Kn(t,0))),"float32"))}function YL(e,t){return j(()=>ce(ve(Ds(Kn(e,0),Kn(t,1))),"float32"))}function sS(a,r){return j(()=>{var e=nS(a,r),t=YL(a,r),t=ie(e,t);return ce(vn(Wn(t,0),xe(e,t),0),"float32")})}function QL(a,r){return j(()=>{var e=nS(a,r),t=XL(a,r),t=ie(e,t);return ce(vn(Wn(t,0),xe(e,t),0),"float32")})}function rS(e,t){return Pp(e,t)}function aS(e,t){return e.rank===t.rank&&(e=mr(e,[e.rank-1])),(t=Hu(t,-1)).dtype!==e.dtype&&(t=ce(t,e.dtype)),ce(Kn(e,t),"float32")}var ZL=gi,JL=gi,eB=Op,tB=Op,nB=Zo,sB=Zo,Vb=Qu,rB=Mb,iS=Td,_d={binaryAccuracy:Lb,categoricalAccuracy:Bb,precision:sS,categoricalCrossentropy:Vb,sparseCategoricalCrossentropy:iS,mse:gi,MSE:gi,mae:Op,MAE:Op,mape:Zo,MAPE:Zo,cosine:Mb};function aB(e){if("string"==typeof e&&e in _d)return _d[e];if("string"!=typeof e&&null!=e)return e;throw new U(`Unknown metric ${e}`)}function qc(t){if(Cs(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(var a of Object.keys($d))if($d[a]===t){e=a;break}if(void 0!==e)return e;for(var r of Object.keys(_d))if(_d[r]===t){e=r;break}return void 0!==e?e:t.name}}function iB(e){let t={Adagrad:()=>Pi.adagrad(.01),Adadelta:()=>Pi.adadelta(1,.95,Rt()),Adam:()=>Pi.adam(.001,.9,.999,Rt()),Adamax:()=>Pi.adamax(.002,.9,.999,Rt(),0),RMSProp:()=>Pi.rmsprop(.001,.9,0,Rt()),SGD:()=>Pi.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new U(`Unknown Optimizer ${e}`)}var Rx=1048576;function Dx(e,t,a=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!xm(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");!a||(e=JSON.stringify(e)).length>Rx&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${e.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Rx}.`)}function xm(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){var t;for(t of Object.keys(e))if("string"!=typeof t||!xm(e[t]))return!1;return!0}if(Array.isArray(e)){for(var a of e)if(!xm(a))return!1;return!0}return!1}var r=typeof e;return"string"==r||"number"==r||"boolean"==r}function oB(e,t,a,r=console.log){let n=lB(e),s=["Layer (type)","Input Shape","Output shape","Param #"];(a=n?(t=t||90,a||[.32,.61,.89,1]):(t=t||115,a||[.24,.48,.7,.8,1]))[a.length-1]<=1&&(a=a.map(e=>Math.floor(t*e)));let i;if(!n)for(var o in s.push("Receives inputs"),i=[],e.nodesByDepth)i.push(...e.nodesByDepth[o]);r("_".repeat(t)),Ad(s,a,r),r("=".repeat(t));var l=e.layers;for(let e=0;e<l.length;++e)n?cB(l[e],a,r):dB(l[e],a,i,r),r((e===l.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();var u=uB(e),d=Cd(e.nonTrainableWeights);r(`Total params: ${u+d}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${d}`),r("_".repeat(t))}function uB(e){let t;return t=null!=e.collectedTrainableWeights?Cd(e.collectedTrainableWeights):Cd(e.trainableWeights),t}function lB(e){let t=!0,a=[],r=[];for(var n in e.nodesByDepth)a.push(e.nodesByDepth[n]);for(var s of a){if(1<s.length||1===s.length&&1<s[0].inboundLayers.length){t=!1;break}r.push(...s)}if(t)for(var i of e.layers){let e=!1;for(var o of i.inboundNodes)if(-1!==r.indexOf(o)){if(e){t=!1;break}e=!0}if(!t)break}return t}function Ad(t,a,e=console.log){let r="";for(let e=0;e<t.length;++e)0<e&&(r=r.slice(0,r.length-1)+" "),r+=t[e],r=r.slice(0,a[e]),r+=" ".repeat(a[e]-r.length);e(r)}function cB(e,t,a){let r,n;try{n=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){n="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Ad([`${e.name} (${e.getClassName()})`,n,r,e.countParams().toString()],t,a)}function dB(e,t,a,r){let n,s;try{s=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){s="multiple"}try{n=JSON.stringify(e.outputShape)}catch(e){n="multiple"}let i=[];for(var o of e.inboundNodes)if(!(null!=a&&0<a.length&&-1===a.indexOf(o)))for(let e=0;e<o.inboundLayers.length;++e){var l=o.inboundLayers[e].name,u=o.nodeIndices[e],d=o.tensorIndices[e];i.push(`${l}[${u}][${d}]`)}var p=e.name,h=e.getClassName(),c=0===i.length?"":i[0];Ad([`${p} (${h})`,s,n,e.countParams().toString(),c],t,r);for(let e=1;e<i.length;++e)Ad(["","","","",i[e]],t,r)}function oS(e,t,a){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof a}function Zu(r,n){if(null===r)return null;if("string"==typeof r)return Kr(r);if("number"==typeof r||"boolean"==typeof r)return r;if(r instanceof Array){let t=[],a=r.length;for(let e=0;e<a;++e){var s=r[e];oS(n,e,s)?t.push(s):t.push(Zu(s,n))}return t}{let e={};for(var t of Object.keys(r)){var a=r[t];"name"===t&&"string"==typeof a?e[t]=a:(t=Kr(t),e[t]=Zu(a,t))}return e}}function wm(r,n){if(null==r)return null;if("string"==typeof r)return Ws(r);if("number"==typeof r||"boolean"==typeof r)return r;if(r instanceof Array){let t=[],a=r.length;for(let e=0;e<a;++e){var s=r[e];oS(n,e,s)?t.push(s):t.push(wm(s,n))}return t}{let e={};for(var t of Object.keys(r)){var a=r[t],i=Ws(t);"name"!==t&&"className"!==t||"string"!=typeof a?e[i]=wm(a,t):e[i]=a}return e}}var uS="0.0.0";function pB(t,a){if(null==t.dtype||t.dtype===a.dtype)return a;try{return ce(a,t.dtype)}catch(e){throw new U(`The dtype of the feed (${a.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}var Qr=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Qr)for(var t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else if(null!=e)for(var a of e)this.add(a.key,a.value)}add(e,t,a){if(null!=this.id2Value[e.id])throw new U(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=pB(e,t),this.name2Id[e.name]=e.id,null!=a&&(this.id2Mask[e.id]=a),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof $s){if(null==this.id2Value[e.id])throw new U(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}var t=this.name2Id[e];if(null==t)throw new U(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}getMask(e){if(e instanceof $s){if(null==this.id2Value[e.id])throw new U(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}var t=this.name2Id[e];if(null==t)throw new U(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}disposeMasks(){null!=this.id2Mask&&Re(this.id2Mask)}},Uf={},Fx={};function Au(e,l,u,t){let d=null!=u&&u.training,a=Array.isArray(e),r=a?e:[e],p=r.map(e=>e.name),h=[],n=l.names();for(var s of p)-1!==n.indexOf(s)?h.push(l.getValue(s)):h.push(null);null!=t&&(t.maxNumTensors=-1/0,t.minNumTensors=1/0);let i=p.join(",")+"|"+l.names().join(","),c,f;null==Uf[i]&&(e=hB(r,l),c=e.sorted,f=e.recipientCounts,Uf[i]=c,Fx[i]=f),c=Uf[i],f={},d||Object.assign(f,Fx[i]);let m=new Qr(l);for(let e=0;e<c.length;++e){null!=t&&((v=dm().numTensors)>t.maxNumTensors&&(t.maxNumTensors=v),v<t.minNumTensors&&(t.minNumTensors=v));let i=c[e],o=i.sourceLayer;if(!(o instanceof Qo)){let e=[],t=[],a=[],r=!1;for(var g of i.inputs){var b=m.getValue(g),y=m.getMask(g);e.push(b),t.push(y),null!=y&&(r=!0),d||(f[g.name]--,0!==f[g.name]||l.hasKey(g)||-1!==p.indexOf(g.name)||b.isDisposed||!0===g.sourceLayer.stateful||a.push(b))}r&&((u=u||{}).mask=t[0]);let n=dt(o.apply(e,u)),s=null;o.supportsMasking&&(s=o.computeMask(e,t));var v=mB(i),x=Array.isArray(v)?v:[v];for(let e=0;e<x.length;++e){m.hasKey(x[e])||m.add(x[e],n[e],Array.isArray(s)?s[0]:s);var w=p.indexOf(x[e].name);-1!==w&&(h[w]=n[e])}d||Re(a)}}return m.disposeMasks(),a?h:h[0]}function hB(e,r){w.assert(null!=e&&0<e.length,()=>"Expected at least one fetch, got none");let n=[],s={};if(1===e.length){var t=Ox(e[0],r);n=t.sorted,s=t.recipientMap}else{let t=new Set;for(var i of e){let{sorted:e,recipientMap:a}=Ox(i,r);for(var o of e)t.has(o.name)||(n.push(o),t.add(o.name));for(let t in a)null==s[t]&&(s[t]=new Set),a[t].forEach(e=>s[t].add(e))}}return{sorted:n,recipientCounts:fB(s)}}function fB(e){let t={};for(var a in e)t[a]=e[a].size;return t}function Ox(e,t){let a=new Set,r=[],n={};for(var s of t.names())a.add(s);let i=[],o=[];for(i.push(e);0<i.length;){var l=i[i.length-1];if(a.has(l.name))i.pop();else{var u=o[o.length-1]===i.length-1;if(0===l.inputs.length||u)i.pop(),r.push(l),a.add(l.name),u&&o.pop();else{o.push(i.length-1);for(var d of l.inputs)null==n[d.name]&&(n[d.name]=new Set),n[d.name].add(l.name),a.has(d.name)||i.push(d)}}}return{sorted:r,recipientMap:n}}function mB(a){let e;if(1===a.sourceLayer.inboundNodes.length)e=a.sourceLayer.output;else{let t=null;for(let e=0;e<a.sourceLayer.inboundNodes.length;++e)for(var r of a.sourceLayer.inboundNodes[e].outputTensors)if(r.id===a.id){t=e;break}e=a.sourceLayer.getOutputAt(t)}return e}var Is=class extends Ge{constructor(a){var e,t,r,n,s,i,o;if(super({}),this.containerNodes=new Set,this.name=a.name,null==this.name&&(F=this.getClassName().toLowerCase(),this.name=Dp(F)),this.supportsMasking=!1,this.trainable_=!0,Array.isArray(a.inputs)?this.inputs=a.inputs.slice():this.inputs=[a.inputs],Array.isArray(a.outputs)?this.outputs=a.outputs.slice():this.outputs=[a.outputs],cr(this.inputs).length!==this.inputs.length)throw new U(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(e=>e.name)}`);cr(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(e=>e.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(e of this.outputs){var l=e.sourceLayer,u=e.nodeIndex,d=e.tensorIndex;this.outputLayers.push(l),this.outputLayersNodeIndices.push(u),this.outputLayersTensorIndices.push(d)}for(t of this.inputs){var p=t.sourceLayer,h=t.nodeIndex,c=t.tensorIndex;Cs(0===h,"input layer has >1 nodes"),Cs(0===c,"input layer has >1 tensors"),this.inputLayers.push(p),this.inputLayersNodeIndices.push(h),this.inputLayersTensorIndices.push(c)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){let e=this.inputLayers[t];if(!(e instanceof Qo))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${a.inputs}. Input ${t} (0-based) originates from layer type ${e.getClassName()}.`);this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(r of this.outputLayers)this.outputNames.push(r.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);let f={},m={},g={},b={},y={},v=[],x=(e,t,a,r,n,s)=>{null!=r&&null!=n&&null!=s||(r=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex);var i=r.inboundNodes[n];if(-1!==a.indexOf(i))throw new hs(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1===t.indexOf(i)){this.containerNodes.add(Is.nodeKey(r,n)),r.id in y||(y[r.id]=Object.keys(y).length),-1===a.indexOf(i)&&a.push(i);var o=i.inboundLayers.length;for(let e=0;e<o;e++){var l=i.inputTensors[e],u=i.inboundLayers[e],d=i.nodeIndices[e],p=i.tensorIndices[e];x(l,t,a,u,d,p)}for(t.push(i);0<=a.indexOf(i);)a.splice(a.indexOf(i),1);v.push(i)}},w=[],k=[];for(n of this.outputs)x(n,w,k);for(s of v.slice().reverse()){m[s.id]=s,s.id in f||(f[s.id]=0);var I=f[s.id],S=null==g[s.outboundLayer.id]?0:g[s.outboundLayer.id],I=Math.max(I,S);g[s.outboundLayer.id]=I,b[s.outboundLayer.id]=s.outboundLayer,f[s.id]=I;for(let e=0;e<s.inboundLayers.length;e++){var C=s.inboundLayers[e],N=s.nodeIndices[e],C=C.inboundNodes[N],N=null==f[C.id]?0:f[C.id];f[C.id]=Math.max(I+1,N),m[C.id]=C}}let T={};for(i in f){var $=f[i];$ in T||(T[$]=[]),T[$].push(m[i])}let _={};for(o in g){var A=g[o];A in _||(_[A]=[]),_[A].push(b[o])}var E,R,F=Object.keys(_).map(e=>parseInt(e,10)).sort(Uc);this.layers=[];for(E of F){let e=_[E];e.sort((e,t)=>{e=y[e.id],t=y[t.id];return e<t?-1:t<e?1:0});for(var O of e)O instanceof Is&&this.internalContainerRefs.push(O),this.layers.push(O)}this.layersByDepth=_,F=Object.keys(T).map(e=>parseInt(e,10)).sort(Uc);let M=this.inputs.slice(),D=[];for(R of F)for(var z of T[R]){var L=z.outboundLayer;if(null!=L){for(var P of z.inputTensors)if(-1===M.indexOf(P))throw new hs(`Graph disconnected: cannot obtain value for tensor ${P} at layer "${L.name}". The following previous layers were accessed without issue: ${D}`);for(var B of z.outputTensors)M.push(B);D.push(L.name)}}this.nodesByDepth=T;let W=this.layers.map(e=>e.name);for(let t of W){var V=W.filter(e=>e===t).length;if(1!==V)throw new hs(`The name "${t}" is used ${V} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(W))}this.outboundNodes=[],this.inboundNodes=[],new Fp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(var t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(var a of this.internalContainerRefs)e.numDisposedVariables+=a.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(e=>e.trainable=t)}),this.trainable_=t}get trainableWeights(){if(0<this._trainableWeights.length)throw new U("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(var t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let t=[];for(var e of this.layers)t.push(...e.nonTrainableWeights);if(this.trainable)return t;{let e=[];for(var a of this.layers)e.push(...a.trainableWeights);return e.concat(t)}}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,a=!0){let r={},t=0;for(var n of this.layers)for(var s of n.weights){if(null!=r[s.originalName])throw new U(`Duplicate weight name: ${s.originalName}`);r[s.originalName]=s,t++}let i=[];for(var o in e){let t=o;if(null==r[o]){let e=o.split("/");t=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=r[t])i.push([r[t],e[o]]);else if(a)throw new U(`Provided weight data has no target variable: ${o}`);delete r[t]}if(a){let e=[];for(var l in r)e.push(l);if(0<e.length)throw new U(`${e.length} of ${t} weights are not set: ${e}`)}Pb(i)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${uS}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){var a=wm(this.updatedConfig());return t?JSON.stringify(a):a}call(a,e){return j(()=>{a=dt(a);let t=new Qr;for(let e=0;e<this.inputs.length;++e)t.add(this.inputs[e],a[e]);return Au(this.outputs,t,e)})}computeMask(t,a){return j(()=>{t=dt(t);let e;return e=null==a?fa(null,t.length):dt(a),this.runInternalGraph(t,e)[1]})}computeOutputShape(e){var t=Sd(e);if(t.length!==this.inputLayers.length)throw new U(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let r={};for(let e=0;e<t.length;e++){var a=this.inputLayers[e],n=t[e],a=a.name+"_0_0";r[a]=n}var s,e=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(Uc);if(1<e.length)for(var i of e)for(s of this.nodesByDepth[i]){let a=s.outboundLayer;if(-1===this.inputLayers.map(e=>e.id).indexOf(a.id)){let t=[];for(let e=0;e<s.inboundLayers.length;e++){var o=s.inboundLayers[e],l=s.nodeIndices[e],u=s.tensorIndices[e],u=`${o.name}_${l}_${u}`,u=r[u];t.push(u)}var d=Sd(a.computeOutputShape(bn(t))),p=a.inboundNodes.indexOf(s);for(let e=0;e<d.length;e++){var h=`${a.name}_${p}_${e}`;r[h]=d[e]}}}let c=[],f=[];for(let e=0;e<this.outputLayers.length;e++){var m=this.outputLayers[e],g=this.outputLayersNodeIndices[e],b=this.outputLayersTensorIndices[e],b=`${m.name}_${g}_${b}`;f.push(b)}for(let e=0;e<f.length;e++){var y=f[e];Cs(y in r),c.push(r[y])}return bn(c)}runInternalGraph(t,a){null==a&&(a=fa(null,t.length));let l={};for(let e=0;e<this.inputs.length;++e){var r=this.inputs[e],n=t[e],s=a[e];l[r.id]=[n,s]}var e,u,d,p,i;for(e of Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(Uc))for(u of this.nodesByDepth[e]){let s=u.outboundLayer,e=u.inputTensors,i=u.outputTensors,o=new Array;for(var h of e)h.id in l&&o.push(l[h.id]);if(o.length===e.length){let e={},t,a,r,n;if(null!=u.callArgs&&(e=u.callArgs),1===o.length?([d,p]=o[0],null==e.mask&&(e.mask=p),r=dt(s.call(d,e)),n=dt(s.computeMask(d,p)),t=[d],a=[p]):(t=o.map(e=>e[0]),a=o.map(e=>e[1]),null==e.mask&&(e.mask=a),r=dt(s.call(t,e)),n=dt(s.computeMask(t,a))),s.activityRegularizer)throw new Fe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<i.length;++e){var c=i[e],f=r[e],m=n[e];l[c.id]=[f,m]}}}let o=[],g=[],b=[];for(i of this.outputs){Cs(i.id in l,`Could not compute output ${i.name} : ${i.id}`);var[y,v]=l[i.id];b.push(y.shape),o.push(y),g.push(v)}return[o,g,b]}buildNodeConversionMap(e){let t={},a;for(var r of this.layers){a=r instanceof Is?1:0;for(let e=0;e<r.inboundNodes.length;e++){var n=Is.nodeKey(r,e);this.containerNodes.has(n)&&(t[n]=a,a+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new U(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new U("Provide either a layer name or layer index");for(var a of this.layers)if(a.name===e)return a;throw new U(`No such layer: ${e}`)}calculateLosses(){return j(()=>{let t=[];for(var a of this.layers)for(let e=0;e<a.inboundNodes.length;++e){var r=Is.nodeKey(a,e);this.containerNodes.has(r)&&t.push(...a.calculateLosses())}return t})}getConfig(){let e={name:this.name},u=this.buildNodeConversionMap(this.layers),n=[];for(var s of this.layers){let e=s.getClassName(),t=s.getConfig(),a=[];for(let t=0;t<s.inboundNodes.length;t++){let o=s.inboundNodes[t],e=Is.nodeKey(s,t),l={};if(this.containerNodes.has(e)){if(o.callArgs)try{JSON.stringify(o.callArgs),l=o.callArgs}catch(e){console.warn(`Layer ${s.name} was passed non-serializable keyword arguments: ${o.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),l={}}if(0<o.inboundLayers.length){let i=[];for(let s=0;s<o.inboundLayers.length;s++){let e=o.inboundLayers[s],t=o.nodeIndices[s],a=o.tensorIndices[s],r=Is.nodeKey(e,t),n=u[r];null==n&&(n=0),i.push([e.name,n,a,l])}a.push(i)}}}let r={};r.name=s.name,r.className=e,r.config=t,r.inboundNodes=a,n.push(r)}e.layers=n;let a=[];for(let t=0;t<this.inputLayers.length;t++){var r=this.inputLayers[t],i=this.inputLayersNodeIndices[t],i=Is.nodeKey(r,i);if(this.containerNodes.has(i)){let e=u[i];null==e&&(e=0);i=this.inputLayersTensorIndices[t];a.push([r.name,e,i])}}e.inputLayers=a;let o=[];for(let t=0;t<this.outputLayers.length;t++){var l=this.outputLayers[t],d=this.outputLayersNodeIndices[t],d=Is.nodeKey(l,d);if(this.containerNodes.has(d)){let e=u[d];null==e&&(e=0);d=this.outputLayersTensorIndices[t];o.push([l.name,e,d])}}return e.outputLayers=o,e}static fromConfig(e,r,t=0,n=!1){let l={},a={};function u(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}var s,i,o,d=r.name,p=r.layers;for(s of p)!function(e){let t=e.name,a=ms(e,null!=r.customObjects?r.customObjects:{});a.setFastWeightInitDuringBuild(n),l[t]=a,e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new U(`Corrupted configuration, expected array for nodeData: ${e}`);u(a,e)})}(s);for(;!BM(a);)for(var h of p){var c=l[h.name];if(c.name in a){var f,h=a[c.name];delete a[c.name];for(f of h)!function(e,t){let a=[],r;for(var n of t){var s=n[0],i=n[1],o=n[2];if(r=null==n[3]?{}:n[3],!(s in l))return u(e,t);s=l[s];if(s.inboundNodes.length<=i)return u(e,t);i=s.inboundNodes[i];a.push(i.outputTensors[o])}0<a.length&&e.apply(bn(a),r)}(c,f)}}let m=[],g=[],b=r.inputLayers;for(i of b){var y=i[0],v=i[1],x=i[2];Cs(y in l);v=l[y].inboundNodes[v].outputTensors;m.push(v[x])}for(o of r.outputLayers){var w=o[0],k=o[1],I=o[2];Cs(w in l);k=l[w].inboundNodes[k].outputTensors;g.push(k[I])}return new e({inputs:m,outputs:g,name:d})}get stateful(){if(this._stateful)throw new U("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(var e of this.layers)if(e.stateful)return!0;return!1}resetStates(){j(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function gB(a,e,t){var r=e.length;if(null==a||Array.isArray(a)&&0===a.length)return e.map(e=>null);if(1===r)return Array.isArray(a)&&1===a.length?a:"object"==typeof a&&e[0]in a?[a[e[0]]]:[a];if(Array.isArray(a)){if(a.length!==r)throw new Error(`Provided ${t} is an array of ${a.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return a}if("object"==typeof a&&0<Object.keys(a).length&&"object"==typeof a[Object.keys(a)[0]]){let t=[];return e.forEach(e=>{e in a?t.push(a[e]):t.push(null)}),t}throw new Error(`The model has multiple (${r}) outputs, so ${t} must be either an array with ${r} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(a)}`)}function lS(e,t){return gB(e,t,"classWeight")}async function cS(r,e,n,t){if(null!=e||null!=t)throw new Error("Support sampleWeight is not implemented yet");if(null==n)return null;{let e=j(()=>{if(1===r.shape.length)return lr(r);if(2!==r.shape.length)throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`);if(1<r.shape[1])return Hu(r,1);if(1===r.shape[1])return G(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}),t=Array.from(await e.data());Re(e);let a=[];return t.forEach(e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])}),Zt(a,"float32")}}function bB(e,t){return V(e,t)}var yB=32;function dS(t,e){var a=e.xs,r=e.ys;w.assert(null!=a&&null!=r,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);let n=Px("input",t.inputNames,a),s=Px("output",t.outputNames,r),i=n[0].shape[0];w.assert(n.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${n.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`),w.assert(s.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${s.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`);for(let e=0;e<n.length;e++)w.assert(n[e].shape[0]===i,()=>`Batch size mismatch: input ${t.inputNames[e]} has ${n[e].shape[0]}; expected  ${i} based on input ${t.inputNames[0]}.`);for(let e=0;e<s.length;e++)w.assert(s[e].shape[0]===i,()=>`Batch size mismatch: output ${t.outputNames[e]} has ${s[e].shape[0]}; expected  ${i} based on input ${t.inputNames[0]}.`);return{xs:n,ys:s}}function Px(t,a,r){if(r instanceof et)return[r];if(Array.isArray(r))return w.assert(r.length===a.length,()=>`Received an array of ${r.length} Tensors, but expected ${a.length} to match the ${t} keys ${a}.`),r;{let e=[];for(var n of a){if(null==r[n])throw new U(`The feature data generated by the dataset lacks the required ${t} key '${n}'.`);e.push(r[n])}return e}}function vB(e){if(3===e.length)throw new Fe("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function xB(h,c,f){var m,g=null!=f.batchesPerEpoch;if(w.assert(null!=h.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),w.assert(null!=f,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),w.assert(null!=f.epochs&&0<f.epochs&&Number.isInteger(f.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${f.epochs}`),w.assert(!g||0<f.batchesPerEpoch&&Number.isInteger(f.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${f.batchesPerEpoch}`),w.assert(null==f.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),h.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");h.isTraining=!0;try{let e=null!=f.validationData,r,i;e&&(zx(f.validationData)?w.assert(null==f.validationBatches||0<f.validationBatches&&Number.isInteger(f.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${f.validationBatches}`):(m=vB(f.validationData),r=m.xs,i=m.ys));let o=h.makeTrainFunction(),l=h.getDedupedMetricsNames(),t;t=e?l.slice().concat(l.map(e=>"val_"+e)):l.slice();let a=eS(f.callbacks,f.yieldEvery),n=null==f.verbose?1:f.verbose,{callbackList:u,history:s}=tS(a,n,f.epochs,null,null,wB(c,f),null,e,t);u.setModel(h),h.history=s,await u.onTrainBegin(),h.stopTraining_=!1;let d=null==f.initialEpoch?0:f.initialEpoch,p=await c.iterator();for(;d<f.epochs;){let a={};await u.onEpochBegin(d);let n=0,s=0;for(g||(p=await c.iterator());!g||n<f.batchesPerEpoch;){var b=await p.next();if(g&&b.done){console.warn(`You provided \`batchesPerEpoch\` as ${f.batchesPerEpoch}, but your dataset iterator ran out of data after ${n} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${f.batchesPerEpoch*f.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=b.value){let{xs:e,ys:t}=dS(h,b.value),a={};a.batch=s,a.size=e[0].shape[0],await u.onBatchBegin(s,a);let r=[];if(null!=f.classWeight){var y=lS(f.classWeight,h.outputNames);for(let e=0;e<y.length;++e)r.push(await cS(t[e],null,y[e]))}var v=e.concat(t).concat(r),x=o(v);Re(v);for(let e=0;e<l.length;++e){var k=l[e],I=x[e];Ht(a[k]=I)}await u.onBatchEnd(s,a),JI(a),s++,n++}if(g?n>=f.batchesPerEpoch:b.done){if(e){let t;t=zx(f.validationData)?dt(await h.evaluateDataset(f.validationData,{batches:f.validationBatches})):dt(h.evaluate(r,i,{batchSize:null==f.validationBatchSize?yB:f.validationBatchSize,verbose:0}));for(let e=0;e<h.metricsNames.length;++e)a[`val_${h.metricsNames[e]}`]=t[e]}break}if(h.stopTraining_)break}if(await u.onEpochEnd(d,a),d++,h.stopTraining_)break}return await u.onTrainEnd(),await h.history.syncData(),h.history}finally{h.isTraining=!1}}function wB(e,t){let a=null;return null!=t.batchesPerEpoch?a=t.batchesPerEpoch:Number.isFinite(e.size)&&(a=e.size),a}function zx(e){return"function"==typeof e.iterator}function kB(e){return"function"==typeof e.next}async function IB(i,e,t){let a=null!=(t=t||{}).batches,o=i.testFunction,l=[];if(0<t.verbose)throw new Fe("Verbose mode is not implemented yet.");w.assert(!a||0<t.batches&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);let r=kB(e)?e:await e.iterator(),u=0,d=0;for(;!a||d<t.batches;){let s=await r.next();if(l=j(()=>{if(s.value){let{xs:e,ys:t}=dS(i,s.value),a=e.concat(t),r=j(()=>o(a));if(Re(a),0===d)for(let e=0;e<r.length;++e)l.push(we(0));let n=a[0].shape[0];for(let a=0;a<r.length;++a){let e=r[a],t=l[a];l[a]=j(()=>ie(l[a],V(n,e))),0<d&&Re(t)}Re(r),u+=n,++d}return l}),s.done){a&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<l.length;++e){var n=l[e];l[e]=xe(l[e],u),Re(n)}return bn(l)}function km(e){w.assert(0<e&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function Eu(e,t,a){return null==e?[null]:Array.isArray(e)?e.map(e=>ta(e,t,a-t)):ta(e,t,a-t)}function Wb(e,t){return j(()=>null==e?null:Array.isArray(e)?e.map(e=>Wb(e,t)):KI(e,"int32"===t.dtype?t:ce(t,"int32")))}function Im(e,t){let a=[],r=0,n=null;for(;r<e;)n=r+t,n>=e&&(n=e),a.push([r,n]),r=n;return a}async function SB(f,m,g,b,y,t,e,a,v,x,r,n,s,i,o){null==y&&(y=32),null==t&&(t=1),null==r&&(r=!0),null==s&&(s=0);let k=null!=v&&null!=x?!0:!1;if(null!=o&&(k=!0,null==i))throw new U("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let l=f.checkNumSamples(g,y,i,"steps_per_epoch"),u;null!=l&&(u=ys(0,l));let{callbackList:I,history:d}=tS(a,e=null==e?1:e,t,s,l,i,y,k,n);I.setModel(f),f.history=d,await I.onTrainBegin(),f.stopTraining_=!1;for(let e=s;e<t;++e){await I.onEpochBegin(e);let c={};if(null!=i)throw new Fe("stepsPerEpoch mode is not implemented yet.");{if("batch"===r)throw new Fe("batch shuffling is not implemneted yet");r&&w.shuffle(u);let p=Zt(u),h=Im(l,y);for(let d=0;d<h.length;++d){let u={};if(await I.onBatchBegin(d,u),j(()=>{var e=h[d][0],t=h[d][1],a=ta(p,e,t-e);u.batch=d,u.size=t-e;var a=Wb(g,a),r=m(a);for(let e=0;e<b.length;++e){var n=b[e],s=r[e];Ht(u[n]=s)}if(d===h.length-1&&k){var i=f.testLoop(v,x,y);for(let e=0;e<b.length;++e){var o=b[e],l=i[e];Ht(l),c["val_"+o]=l}}}),await I.onBatchEnd(d,u),JI(u),f.stopTraining_)break}p.dispose()}if(await I.onEpochEnd(e,c),f.stopTraining_)break}return await I.onTrainEnd(),await f.history.syncData(),f.history}async function CB(i,o,l,u={}){if(i.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");i.isTraining=!0;let d,p,h,c,f,m,g,b,y;try{var v=null==u.batchSize?32:u.batchSize;km(v);var x,w,k=await i.standardizeUserData(o,l,u.sampleWeight,u.classWeight,!1,v);d=k[0],p=k[1],y=k[2];let e=!1,t;if(null!=u.validationData&&0<u.validationData.length){if(e=!0,2!==u.validationData.length)throw 3===u.validationData.length?new Fe("validationData including sample weights is not supported yet."):new U(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${u.validationData} is invalid.`);f=u.validationData[0],m=u.validationData[1];var I=await i.standardizeUserData(f,m,null,null,!0,v);g=I[0],b=I[1],t=g.concat(b)}else null!=u.validationSplit&&0<u.validationSplit&&u.validationSplit<1?(e=!0,x=Math.floor(d[0].shape[0]*(1-u.validationSplit)),w=d[0].shape[0],g=Eu(d,x,w),h=d,d=Eu(d,0,x),b=Eu(p,x,w),c=p,p=Eu(p,0,x),t=g.concat(b)):null!=u.validationSteps&&(e=!0);var S=d.concat(p).concat(y);i.checkTrainableWeightsConsistency();let a=i.makeTrainFunction(),r=i.getDedupedMetricsNames(),n,s;s=e?(i.makeTestFunction(),n=i.testFunction,r.slice().concat(r.map(e=>"val_"+e))):(n=null,t=[],r.slice());var C=eS(u.callbacks,u.yieldEvery);return await SB(i,a,S,r,v,u.epochs,u.verbose,C,n,t,u.shuffle,s,u.initialEpoch,null,null)}finally{i.isTraining=!1,ds(d,o),ds(p,l),ds(h,o),ds(c,l),ds(g,f),ds(b,m),null!=y&&Re(y)}}function pS(t){let a=[];t instanceof et&&(t=[t]);for(let e=0;e<t.length;++e){var r=t[e];if(1===r.rank)a.push(Vl(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");a.push(r)}}return a}function ds(e,r){if(null!=e){let t=[];if(r instanceof et)t.push(r.id);else if(Array.isArray(r))r.forEach(e=>t.push(e.id));else if(null!=r)for(var n in r){n=r[n];t.push(n.id)}let a=[];if(e instanceof et)-1===t.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===t.indexOf(e.id)&&a.push(e)});else if(null!=e)for(var s in e){s=e[s];-1===t.indexOf(s.id)&&a.push(s)}a.forEach(e=>{e.isDisposed||e.dispose()})}}function NB(e){return e instanceof et}function Sm(e){return Array.isArray(e)}function Mx(e){return!NB(e)&&!Sm(e)}function Lx(t,e,r,n=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(Sm(t)&&0<t.length)e=!0;else if(Mx(t)){for(var a in t)if(t.hasOwnProperty(a)){e=!0;break}}else e=!0;if(e)throw new U(`Error when checking model ${s} expected no data, but got ${t}`)}return[]}if(null==t)return e.map(e=>null);let i;if(Mx(t)){i=[];for(var o of e){if(null==t[o])throw new U(`No data provided for "${o}". Need data for each key in: ${e}`);i.push(t[o])}}else if(Sm(t)){if(t.length!==e.length)throw new U(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);i=t}else{if(1<e.length)throw new U(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);i=[t]}if(i=pS(i),null!=r)for(let a=0;a<e.length;++a)if(null!=r[a]){let t=i[a];if(t.shape.length!==r[a].length)throw new U(`Error when checking ${s}: expected ${e[a]} to have ${r[a].length} dimension(s). but got array with shape ${t.shape}`);for(let e=0;e<r[a].length;++e)if(0!==e||n){var l=t.shape[e],u=r[a][e];if(null!=u&&0<=u&&l!==u)throw new U(`${s} expected a batch of elements where each example has shape [${r[a].slice(1,r[a].length)}] (i.e.,tensor shape [*,${r[a].slice(1,r[a].length)}]) but the ${s} received an input with ${t.shape[0]} examples, each with shape [${t.shape.slice(1,t.shape.length)}] (tensor shape [${t.shape}])`)}}return i}function TB(e,t,a){let r=cr(e.map(e=>e.shape[0]));r.sort();let n=cr(t.map(e=>e.shape[0]));if(n.sort(),1<r.length)throw new U(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(e=>e.shape))}`);if(1<n.length)throw new U(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(e=>e.shape))}`);if(0<r.length&&0<n.length&&!w.arraysEqual(r,n))throw new U(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${n[0]} target sample(s).`)}function $B(n,s,i){let o=[gi,Pp,Qu];for(let r=0;r<n.length;++r){let t=n[r],e=s[r],a=i[r];if(null!=e){if(e===Qu&&1===t.shape[t.shape.length-1])throw new U(`You are passing a target array of shape ${t.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==o.indexOf(e)){var l=t.shape.slice(1),u=a.slice(1);for(let e=0;e<l.length;++e){var d=l[e],p=u[e];if(null!=p&&d!==p)throw new U(`A target Tensor with shape ${t.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Bx(e,a,r,n=!0,s=""){let i;if(Array.isArray(e)){if(e.length!==a.length)throw new U(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${a.length} Tensor(s), but instead got ${e.length} Tensors(s).`);i=e}else{if(1<a.length)throw new U(`The model expects ${a.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);i=[e]}if(null!=r)for(let t=0;t<a.length;++t)if(null!=r[t]){var o=i[t];if(o.shape.length!==r[t].length)throw new U(`Error when checking ${s}: expected ${a[t]} to have ${r[t].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let e=0;e<r[t].length;++e)if(0!==e||n){var l=o.shape[e],u=r[t][e];if(null!=u&&u!==l)throw new U(`Error when checking ${s}: expected ${a[t]} to have shape ${JSON.stringify(r[t])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function _B(e,a){if(null==e||Array.isArray(e)&&0===e.length)return a.map(e=>[]);let r;if("string"==typeof e||"function"==typeof e)r=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);r=e}if(Array.isArray(r))return a.map(e=>r);{let t=[];for(var n of a){let e=r.hasOwnProperty(n)?r[n]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}var AB="layers-model",pr=class extends Is{constructor(e){super(e),this.isTraining=!1}summary(e,t,a=console.log){if(!this.built)throw new U("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");oB(this,e,t,a)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=iB(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof _r))throw new U("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let a=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new U(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);a=e.loss.map(e=>Wf(e))}else{let t=Wf(e.loss);this.outputs.forEach(e=>{a.push(t)})}else{for(var t in e.loss=e.loss,e.loss)if(-1===this.outputNames.indexOf(t))throw new U(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(var r of this.outputNames)null==e.loss[r]&&console.warn(`Output "${r}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${r} during training`),a.push(Wf(e.loss[r]))}this.lossFunctions=a,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){var n=this.internalOutputShapes[e],s=this.outputNames[e];this.feedOutputNames.push(s),this.feedOutputShapes.push(n),this.feedLossFns.push(this.lossFunctions[e])}let o=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ea("loss",()=>{for(let e=0;e<this.outputs.length;++e){var t;-1===o.indexOf(e)&&(t=this.lossFunctions[e],1<this.outputs.length&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss")))}});let l=_B(e.metrics,this.outputNames),u=(e,t,a)=>{1<this.outputNames.length&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([a,e])};ea("metric",()=>{for(let i=0;i<this.outputs.length;++i){var e;-1===o.indexOf(i)&&(e=l[i],(()=>{let t,a,r;for(var n of e){if("string"==typeof n&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(n)){var s=this.internalOutputShapes[i];1===s[s.length-1]||this.lossFunctions[i]===Pp?-1!==["accuracy","acc"].indexOf(n)?a=Lb:-1!==["crossentropy","ce"].indexOf(n)&&(a=rS):this.lossFunctions[i]===Td?-1!==["accuracy","acc"].indexOf(n)?a=aS:-1!==["crossentropy","ce"].indexOf(n)&&(a=iS):-1!==["accuracy","acc"].indexOf(n)?a=Bb:-1!==["crossentropy","ce"].indexOf(n)&&(a=Vb);let e;-1!==["accuracy","acc"].indexOf(n)?e="acc":-1!==["crossentropy","ce"].indexOf(n)&&(e="ce"),r=a,t=""+e}else r=aB(n),t=""+qc(n);let e;ea(t,()=>{e=r}),u(i,t,e)}})())}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,a={}){var r=null==a.batchSize?32:a.batchSize;km(r);let n=this.standardizeUserDataXY(e,t,!0,r);try{var s=n[0].concat(n[1]);this.makeTestFunction();var i=this.testFunction;return bn(this.testLoop(i,s,r,a.verbose,a.steps))}finally{ds(n[0],e),ds(n[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),IB(this,e,t)}checkNumSamples(e,t,a,r="steps"){let n;if(null!=a){if((n=null)!=t)throw new U(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new U(`Either the input data should have a defined shape, or ${r} shoud be specified.`);n=(Array.isArray(e)?e[0]:e).shape[0]}return n}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new U("`outputs` is an empty Array, which is not allowed.");let a=Array.isArray(e),r=a?e:[e],n=this.retrieveSymbolicTensors(r),s=new Qr;if(t instanceof et&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new U(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)s.add(this.inputs[e],t[e])}else for(var i of this.inputs){var o=t[i.name];if(null==o)throw new U(`No value is provided for the model's input ${i.name}`);s.add(i,o)}e=Au(n,s);return a?e:e[0]}retrieveSymbolicTensors(r){let n=fa(null,r.length),s=r.length;for(var e of this.layers){let t=Array.isArray(e.output)?e.output:[e.output],a=t.map(e=>e.name);for(let e=0;e<r.length;++e){var i=a.indexOf(r[e]);if(-1!==i&&(n[e]=t[i],s--),0===s)break}if(0===s)break}if(0<s){let a=[];throw n.forEach((e,t)=>{null==e&&a.push(r[t])}),new U(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(a)}`)}return n}predictLoop(o,t=32,r=!1){return j(()=>{var e=this.checkNumSamples(o);if(r)throw new Fe("Verbose predictLoop() is not implemented yet.");let i=Im(e,t),a=this.outputs.map(e=>[]);for(let s=0;s<i.length;++s)j(()=>{let e=i[s][0],t=i[s][1],a=Eu(o,e,t),r=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)r.push({key:this.inputs[e],value:a[e]});else r.push({key:this.inputs[0],value:a});var n=new Qr(r);return Au(this.outputs,n)}).forEach((e,t)=>a[t].push(e));return bn(a.map(e=>Ft(e,0)))})}predict(e,t={}){var a=pS(e);Bx(a,this.inputNames,this.feedInputShapes,!1);try{var r=null==t.batchSize?32:t.batchSize;return km(r),this.predictLoop(a,r)}finally{ds(a,e)}}predictOnBatch(e){Bx(e,this.inputNames,this.feedInputShapes,!0);var t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,a=0,r){if(null==this.optimizer_)throw new hs("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let n=[];for(let t=0;t<this.feedOutputShapes.length;++t){let e=this.feedOutputShapes[t];this.feedLossFns[t]===Td?n.push(e.slice(0,e.length-1).concat([1])):n.push(e)}if(TB(e=Lx(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Lx(t,this.feedOutputNames,n,!1,"target"),null),$B(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&0<r&&e[0].shape[0]%r!=0)throw new U(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,a,r,n=!0,s){var[s,i]=this.standardizeUserDataXY(e,t,n,s);if(null!=a)throw new Error("sample weight is not supported yet.");let o=null;if(null!=r){var l=lS(r,this.outputNames);o=[];for(let e=0;e<l.length;++e)o.push(await cS(i[e],null,l[e]))}return[s,i,o]}testLoop(d,p,e,h=0,c){return j(()=>{let t=this.checkNumSamples(p,e,c,"steps"),a=[];if(0<h)throw new Fe("Verbose mode is not implemented yet.");if(null!=c)throw new Fe("steps mode in testLoop() is not implemented yet");var r=Im(t,e),n=Zt(ys(0,t));for(let e=0;e<r.length;++e){var s=r[e][0],i=r[e][1],o=ta(n,s,i-s),o=Wb(p,o),l=d(o);if(0===e)for(let e=0;e<l.length;++e)a.push(we(0));for(let e=0;e<l.length;++e){var u=l[e];a[e]=ie(a[e],V(i-s,u))}}for(let e=0;e<a.length;++e)a[e]=xe(a[e],t);return a})}getDedupedMetricsNames(){let r=this.metricsNames,n=[];for(let a=0;a<r.length;++a){let e=r[a],t=e;1<Sx(r,e)&&(t+=`_${Sx(r.slice(0,a),e)}`),n.push(t)}return n}makeTrainFunction(){return e=>{let s=[],i=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),l=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),u=[],t=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(()=>{let t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:i[e]});let e=new Qr(t),n=Au(this.outputs,e,{training:!0}),a;for(let t=0;t<this.lossFunctions.length;++t){let e=this.lossFunctions[t](o[t],n[t]);null!=l[t]&&(e=bB(e,l[t]));var r=St(e);s.push(r),a=0===t?e:ie(a,e)}for(let r=0;r<this.metricsTensors.length;++r){let a;if(1<this.outputs.length&&r<this.outputs.length)a=s[r];else{let e=this.metricsTensors[r][0],t=this.metricsTensors[r][1];a=St(e(o[t],n[t]))}Ht(a),u.push(a)}return a=St(a),this.calculateLosses().forEach(e=>{a=ie(a,e)}),a},!0,t)].concat(u)}}makeTestFunction(){this.testFunction=o=>j(()=>{let n=[],r,t=o.slice(0,this.inputs.length),s=o.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:t[e]});var e=new Qr(a),i=Au(this.outputs,e);for(let a=0;a<this.lossFunctions.length;++a){let e=this.lossFunctions[a],t=St(e(s[a],i[a]));r=0===a?t:ie(r,t),n.push(r)}for(let r=0;r<this.metricsTensors.length;++r){let e=this.metricsTensors[r][0],t=this.metricsTensors[r][1],a=St(e(s[t],i[t]));n.push(a)}return n})}async fit(e,t,a={}){return CB(this,e,t,a)}async fitDataset(e,t){return xB(this,e,t)}async trainOnBatch(e,t){let a=await this.standardizeUserData(e,t),r=a[0],n=a[1],s=this.makeTrainFunction()(r.concat(n)),i=[];for(var o of s){o=await o.data();i.push(o[0])}return Re(s),ds(a[0],e),ds(a[1],t),bn(i)}getNamedWeights(e){let t=[],a=null!=e&&e.trainableOnly,r=a?this.trainableWeights:this.weights,n=this.getWeights(a);for(let e=0;e<r.length;++e)a&&!r[e].trainable||t.push({name:r[e].originalName,tensor:n[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();var t;return 0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned&&(t=dm().numTensors,this.optimizer_.dispose(),e.numDisposedVariables+=t-dm().numTensors),e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Ws(this.loss);else if(Array.isArray(this.loss)){for(var t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>Ws(e))}else{var a=Object.keys(this.loss);e={};var r,n=this.loss;for(r of a){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Ws(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Ws(qc(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Ws(qc(e)));{let e={};for(var t in this.metrics)e[t]=Ws(qc(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");let t=Zu(e.optimizer_config),a=ms(t),r;if("string"==typeof e.loss)r=Kr(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(e=>Kr(e));else if(null!=e.loss)for(var n in r={},e.loss)r[n]=Kr(e.loss[n]);let s;if(Array.isArray(e.metrics))s=e.metrics.map(e=>Kr(e));else if(null!=e.metrics)for(var i in s={},e.metrics)s[i]=Kr(e.metrics[i]);this.compile({loss:r,metrics:s,optimizer:a})}async save(e,t){if("string"==typeof e){var a=En.getSaveHandlers(e);if(0===a.length)throw new U(`Cannot find any save handlers for URL '${e}'`);if(1<a.length)throw new U(`Found more than one (${a.length}) save handlers for URL '${e}'`);e=a[0]}if(null==e.save)throw new U("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let r=await En.encodeWeights(this.getNamedWeights(t)),n={modelTopology:this.toJSON(null,!1),format:AB,generatedBy:`TensorFlow.js tfjs-layers v${uS}`,convertedBy:null};return null!=t&&t.includeOptimizer&&null!=this.optimizer&&(n.trainingConfig=this.getTrainingConfig(),{data:a,specs:t}=await En.encodeWeights(await this.optimizer.getWeights(),"optimizer"),r.specs.push(...t),r.data=En.concatenateArrayBuffers([r.data,a])),null!=this.userDefinedMetadata&&(Dx(this.userDefinedMetadata,this.name,!0),n.userDefinedMetadata=this.userDefinedMetadata),n.weightData=r.data,n.weightSpecs=r.specs,e.save(n)}setUserDefinedMetadata(e){Dx(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};pr.className="Model",ae.registerClass(pr);var hS=class extends pr{};async function EB(a,e){let t=(a=!("modelTopology"in a)?{modelTopology:a}:a).modelTopology;null!=t.model_config&&(t=t.model_config);let r=Zu(t),n=ms(r,e);if(null!=a.weightsManifest){let e=await En.loadWeights(a.weightsManifest,a.pathPrefix,n.weights.map(e=>e.originalName)),t={};for(var s of n.weights)t[s.originalName]=e[s.originalName];n.loadWeights(t),Re(e)}return n}async function RB(t,a){if(null==a&&(a={}),"string"==typeof t){let e=En.getLoadHandlers(t,a);if(0===e.length)e.push(En.browserHTTPRequest(t,a));else if(1<e.length)throw new U(`Found more than one (${e.length}) load handlers for URL '${t}'`);t=e[0]}return DB(t,void 0,a)}async function DB(e,t,a){if(null==a&&(a={}),null==e.load)throw new U("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),n=r.modelTopology;null!=n.model_config&&(n=n.model_config);let s=null==a.strict||a.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=ms(Zu(n),t,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new U("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:e,optimizerWeights:t}=FB(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&0<t.length&&await o.optimizer.setWeights(t),Re(e),Re(t.map(e=>e.tensor))}return o}function FB(e,t){let a=En.decodeWeights(e,t),r={},n=[];return t.forEach(e=>{"optimizer"===e.group?n.push({name:e.name,tensor:a[e.name]}):r[e.name]=a[e.name]}),{modelWeights:r,optimizerWeights:n}}hS.className="Functional",ae.registerClass(hS);var Cm=class extends pr{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Dp("sequential_"),null!=e.layers)for(var t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new U(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof Cm||e instanceof pr,a;if(t){if(a=e,1!==a.outputs.length)throw new U("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==a.inputs.length)throw new U("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new U("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");var r=ZI({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=a.outputs,this.inputs=a.inputs;else{if(1!==e.inboundNodes.length)throw new U(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new U("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=QI(this.outputs[0])}this.inboundNodes=[],new Fp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:fa(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");var e;this.layers.pop(),0===this.layers.length?(this.outputs=[],this.inboundNodes=[],this.outboundNodes=[]):(e=this.layers.length-1,this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape])}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(nt(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new pr({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,a=console.log){this.built||this.build(),super.summary(e,t,a)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,a={}){if(!this.built)throw new hs("The model needs to be compiled before being used.");return this.model.evaluate(e,t,a)}async evaluateDataset(e,t){if(!this.built)throw new hs("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,a={}){if(!this.built)throw new hs("The model needs to be compiled before being used.");return this.model.fit(e,t,a)}async fitDataset(e,t){if(!this.built)throw new hs("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,a=0,r=!1){let n,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new U("Legacy serialization format not supported yet.");n=t}else w.assert(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),n=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof Cm))throw new Fe(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(var o of n){let e=ms(o,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(e){if(null==this.model)throw new U("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new U("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let t=[];for(var a of this.layers){let e={};e.className=a.getClassName(),e.config=a.getConfig(),t.push(e)}return{name:this.name,layers:t}}},Ub=Cm;function Npe(e){return new pr(e)}function Tpe(e){return new Ub(e)}function $pe(e,t){return RB(e,t=null==t?{}:t)}function OB(e){return ZI(e)}function _pe(e,t){zb.registerCallbackConstructor(e,t)}Ub.className="Sequential",ae.registerClass(Ub);var In=class extends ae.Serializable{getConfig(){return{}}},fS=class extends In{apply(e,t=1){return aL(e,t)}};fS.className="elu",ae.registerClass(fS);var mS=class extends In{apply(e){return gI(e)}};mS.className="selu",ae.registerClass(mS);var gS=class extends In{apply(e){return Xs(e)}};gS.className="relu",ae.registerClass(gS);var bS=class extends In{apply(e){return j(()=>bp(6,Xs(e)))}};bS.className="relu6",ae.registerClass(bS);var yS=class extends In{apply(e){return e}};yS.className="linear",ae.registerClass(yS);var vS=class extends In{apply(e){return qs(e)}};vS.className="sigmoid",ae.registerClass(vS);var xS=class extends In{apply(e){return oL(e)}};xS.className="hardSigmoid",ae.registerClass(xS);var wS=class extends In{apply(e){return zl(e)}};wS.className="softplus",ae.registerClass(wS);var kS=class extends In{apply(e){return iL(e)}};kS.className="softsign",ae.registerClass(kS);var IS=class extends In{apply(e){return qu(e)}};IS.className="tanh",ae.registerClass(IS);var Gb=class extends In{apply(e,t=-1){return ub(e,t)}};Gb.className="softmax",ae.registerClass(Gb);var SS=class extends In{apply(e,t=-1){return iI(e,t)}};SS.className="logSoftmax",ae.registerClass(SS);var CS=class extends In{apply(e,t=1){return j(()=>V(qs(V(e,t)),e))}};CS.className="swish",ae.registerClass(CS);var NS=class extends In{apply(e){return j(()=>V(e,qu(zl(e))))}};function br(e){return e.getClassName()}function Gf(e,t={}){return Ll(e,ae.SerializationMap.getMap().classNameMap,t,"activation")}function yr(t){if(null==t){let e={className:"linear",config:{}};return Gf(e)}if("string"!=typeof t)return t instanceof In?t:Gf(t);{let e={};return e.className=t,e.config={},Gf(e)}}function Hb(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}NS.className="mish",ae.registerClass(NS);var TS=class extends ae.Serializable{},Gl=class extends TS{constructor(e){super(),Hb(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return j(()=>{let e=$t([1]);return this.hasL1&&(e=ie(e,ve(V(this.l1,Mt(t))))),this.hasL2&&(e=ie(e,ve(V(this.l2,Wl(t))))),G(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};function PB(e){return Hb(e),new Gl({l1:null!=e?e.l1:null,l2:0})}function zB(e){return Hb(e),new Gl({l2:null!=e?e.l2:null,l1:0})}Gl.className="L1L2",ae.registerClass(Gl);var Vx={l1l2:"L1L2"};function it(e){return wb(e)}function Wx(e,t={}){return Ll(e,ae.SerializationMap.getMap().classNameMap,t,"regularizer")}function ft(e){return null==e?null:"string"!=typeof e?e instanceof TS?e:Wx(e):Wx({className:e in Vx?Vx[e]:e,config:{}})}var qb=class extends Ge{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Oe(e);let a=Xs(e);return null!=this.maxValue&&(a=Vn(a,0,this.maxValue)),a}computeOutputShape(e){return e}getConfig(){var e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};qb.className="ReLU",ae.registerClass(qb);var jb=class extends Ge{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,this.alpha=null==(e=null==e?{}:e).alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){e=Oe(e);return Xg(e,this.alpha)}computeOutputShape(e){return e}getConfig(){var e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};jb.className="LeakyReLU",ae.registerClass(jb);var Kb=class extends Ge{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=ht(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ft(e.alphaRegularizer),this.alphaConstraint=Pt(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new U(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(t){let e=(t=nt(t)).slice(1);if(null!=this.sharedAxes)for(var a of this.sharedAxes)e[a-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let r={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)r[e]=t[e];this.inputSpec=[new Dt({ndim:t.length,axes:r})],this.built=!0}call(e,t){return e=Oe(e),sb(e,this.alpha.read())}getConfig(){var e={alphaInitializer:yt(this.alphaInitializer),alphaRegularizer:it(this.alphaRegularizer),alphaConstraint:Ot(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Kb.className="PReLU",ae.registerClass(Kb);var Xb=class extends Ge{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null!=(e=null==e?{}:e).alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Fe(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){e=Oe(e);return fp(e)}computeOutputShape(e){return e}getConfig(){var e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Xb.className="ELU",ae.registerClass(Xb);var Yb=class extends Ge{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,this.theta=null==(e=null==e?{}:e).theta?this.DEFAULT_THETA:e.theta}call(e,t){e=Oe(e);return V(e,ce(Wn(e,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){var e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Yb.className="ThresholdedReLU",ae.registerClass(Yb);var Qb=class extends Ge{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Gb).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){e=Oe(e);return this.softmax(e,this.axis)}computeOutputShape(e){return e}getConfig(){var e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Xi(t,a,r){if("number"==typeof t)return fa(t,a);if(t.length!==a)throw new U(`The ${r} argument must be an integer or tuple of ${a} integers. Received: ${t.length} elements.`);for(let e=0;e<a;++e){var n=t[e];if(!tL(n))throw new U(`The ${r} argument must be an integer or tuple of ${a} integers. Received: ${JSON.stringify(t)} including a non-integer number ${n}`)}return t}function gs(e,t,a,r,n=1){if(null==e)return e;let s=t+(t-1)*(n-1),i;return i="same"===a?e:e-s+1,Math.floor((i+r-1)/r)}function Ns(e,t,a,r){if(null==e)return null;if("valid"===r)e=e*t+gr([a-t,0]);else{if("same"!==r)throw new U(`Unsupport padding mode: ${r}.`);e*=t}return e}function Zb(e,t){return j(()=>(Ct(t),"channelsFirst"===t?qe(e,[0,2,3,1]):e))}function $S(e,t){return j(()=>(Ct(t),"channelsFirst"===t?qe(e,[0,2,3,4,1]):e))}function MB(t,a,r,n=1,s="valid",i,o=1){return j(()=>{if(Ct(i=null==i?bs():i),3!==t.shape.length)throw new U(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==a.shape.length)throw new U(`The kernel for a conv1dWithBias operation should be 3, but is ${a.shape.length} instead`);if(null!=r&&1!==r.shape.length)throw new U(`The bias for a conv1dWithBias operation should be 1, but is ${a.shape.length} instead`);if("channelsFirst"===i&&(t=qe(t,[0,2,1])),"causal"===s)throw new Fe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let e=Zk(t,a,n,"same"===s?"same":"valid","NWC",o);return null!=r&&(e=ws(e,r)),e})}function Ux(t,a,r,n=[1,1],s="valid",i,o,l=null){return j(()=>{if(Ct(i=null==i?bs():i),3!==t.rank&&4!==t.rank)throw new U(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==a.rank&&4!==a.rank)throw new U(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let e=Zb(t,i);if("causal"===s)throw new Fe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return e=ha.conv2d({x:e,filter:a,strides:n,pad:"same"===s?"same":"valid",dilations:o,dataFormat:"NHWC",bias:r,activation:l}),"channelsFirst"===i&&(e=qe(e,[0,3,1,2])),e})}function LB(t,a,r,n=[1,1,1],s="valid",i,o){return j(()=>{if(Ct(i=null==i?bs():i),4!==t.rank&&5!==t.rank)throw new U(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==a.rank&&5!==a.rank)throw new U(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let e=$S(t,i);if("causal"===s)throw new Fe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return e=eI(e,a,n,"same"===s?"same":"valid","NDHWC",o),null!=r&&(e=ws(e,r)),"channelsFirst"===i&&(e=qe(e,[0,4,1,2,3])),e})}Qb.className="Softmax",ae.registerClass(Qb);var Jb=class extends Ge{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Jb.verifyArgs(t),this.rank=e,Bt(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Fe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Xi(t.kernelSize,e,"kernelSize"),this.strides=Xi(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Un(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ct(this.dataFormat),this.activation=yr(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=ht(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Pt(t.biasConstraint),this.biasRegularizer=ft(t.biasRegularizer),this.activityRegularizer=ft(t.activityRegularizer),this.dilationRate=Xi(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new U(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new U(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new U(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Cs("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!kb(e.kernelSize,"number",1,3))throw new U(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){var e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:br(this.activation),useBias:this.useBias,biasInitializer:yt(this.biasInitializer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),biasConstraint:Ot(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Hl=class extends Jb{constructor(e,t){super(e,t),this.kernel=null,Hl.verifyArgs(t),this.filters=t.filters,Bt(this.filters,"filters"),this.kernelInitializer=ht(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Pt(t.kernelConstraint),this.kernelRegularizer=ft(t.kernelRegularizer)}build(e){e=nt(e);var t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new U(`The channel dimension of the input should be defined. Found ${e[t]}`);var a=e[t],e=this.kernelSize.concat([a,this.filters]);this.kernel=this.addWeight("kernel",e,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:a}}],this.built=!0}call(r,e){return j(()=>{r=Oe(r);let e,t=null==this.bias?null:this.bias.read(),a=UI(this.activation.getClassName());if(null!=a&&2===this.rank)e=Ux(r,this.kernel.read(),t,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)e=MB(r,this.kernel.read(),t,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=Ux(r,this.kernel.read(),t,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Fe("convolutions greater than 3D are not implemented yet.");e=LB(r,this.kernel.read(),t,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e})}computeOutputShape(e){e=nt(e);let t=[],a="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<a.length;++e){var r=gs(a[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let n=[e[0]];return"channelsLast"===this.dataFormat?(n=n.concat(t),n.push(this.filters)):(n.push(this.filters),n=n.concat(t)),n}getConfig(){var e={filters:this.filters,kernelInitializer:yt(this.kernelInitializer),kernelRegularizer:it(this.kernelRegularizer),kernelConstraint:Ot(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new U(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},_S=class extends Hl{constructor(e){super(2,e),_S.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!kb(e.kernelSize,"number",1,2))throw new U(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},zp=_S;zp.className="Conv2D",ae.registerClass(zp);var AS=class extends Hl{constructor(e){super(3,e),AS.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new U(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},Mp=AS;Mp.className="Conv3D",ae.registerClass(Mp);var ey=class extends zp{constructor(e){if(super(e),this.inputSpec=[new Dt({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new U(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=nt(e)).length)throw new U("Input should have rank 4; Received input shape: "+JSON.stringify(e));var t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new U("The channel dimension of the inputs should be defined. Found `None`.");var a=e[t],e=this.kernelSize.concat([this.filters,a]);this.kernel=this.addWeight("kernel",e,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Dt({ndim:4,axes:{[t]:a}})],this.built=!0}call(h,e){return j(()=>{let e=Oe(h);if(4!==e.shape.length)throw new U(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);let t=e.shape,a=t[0],r,n;n="channelsFirst"===this.dataFormat?(r=2,3):(r=1,2);var s=t[r],i=t[n],o=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],d=this.strides[1],l=[a,Ns(s,u,o,this.padding),Ns(i,d,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=qe(e,[0,2,3,1]));let p=Jk(e,this.kernel.read(),l,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=qe(p,[0,3,1,2])),null!=this.bias&&(p=ws(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p})}computeOutputShape(e){let t=(e=nt(e)).slice(),a,r,n;n="channelsFirst"===this.dataFormat?(a=1,r=2,3):(a=3,r=1,2);var s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],e=this.strides[1];return t[a]=this.filters,t[r]=Ns(t[r],o,s,this.padding),t[n]=Ns(t[n],e,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};ey.className="Conv2DTranspose",ae.registerClass(ey);var ty=class extends Mp{constructor(e){if(super(e),this.inputSpec=[new Dt({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new U(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=nt(e)).length)throw new U("Input should have rank 5; Received input shape: "+JSON.stringify(e));var t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new U("The channel dimension of the inputs should be defined. Found `None`.");var a=e[t],e=this.kernelSize.concat([this.filters,a]);this.kernel=this.addWeight("kernel",e,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Dt({ndim:5,axes:{[t]:a}})],this.built=!0}call(g,e){return j(()=>{let e=Oe(g);if(5!==e.shape.length)throw new U(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);let t=e.shape,a=t[0],r,n,s;n="channelsFirst"===this.dataFormat?(s=2,r=3,4):(s=1,r=2,3);var i=t[s],o=t[r],l=t[n],u=this.kernelSize[0],d=this.kernelSize[1],p=this.kernelSize[2],h=this.strides[0],c=this.strides[1],f=this.strides[2],p=[a,Ns(i,h,u,this.padding),Ns(o,c,d,this.padding),Ns(l,f,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=qe(e,[0,2,3,4,1]));let m=tR(e,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(m=qe(m,[0,4,1,2,3])),null!==this.bias&&(m=ws(m,this.bias.read(),this.dataFormat)),null!==this.activation&&(m=this.activation.apply(m)),m})}computeOutputShape(e){let t=(e=nt(e)).slice(),a,r,n,s;s="channelsFirst"===this.dataFormat?(a=1,r=2,n=3,4):(a=4,r=1,n=2,3);var i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],d=this.strides[1],e=this.strides[2];return t[a]=this.filters,t[r]=Ns(t[r],u,i,this.padding),t[n]=Ns(t[n],d,o,this.padding),t[s]=Ns(t[s],e,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};ty.className="Conv3DTranspose",ae.registerClass(ty);var ES=class extends Hl{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,(this.pointwiseKernel=null)==t.filters)throw new U("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new U("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new U(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=ht(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ft(t.depthwiseRegularizer),this.depthwiseConstraint=Pt(t.depthwiseConstraint),this.pointwiseInitializer=ht(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ft(t.pointwiseRegularizer),this.pointwiseConstraint=Pt(t.pointwiseConstraint)}build(e){if((e=nt(e)).length<this.rank+2)throw new U(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);var t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new U(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let a=e[t],r=this.kernelSize.concat([a,this.depthMultiplier]),n=[];for(let e=0;e<this.rank;++e)n.push(1);n.push(a*this.depthMultiplier,this.filters);this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",n,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,!0,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.inputSpec=[new Dt({ndim:this.rank+2,axes:{[t]:a}})],this.built=!0}call(t,e){return j(()=>{t=Oe(t);let e;if(1===this.rank)throw new Fe("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=qe(t,[0,2,3,1])),e=c3(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=ws(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=qe(e,[0,3,1,2])),e})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=yt(this.depthwiseInitializer),e.pointwiseInitializer=yt(this.pointwiseInitializer),e.depthwiseRegularizer=it(this.depthwiseRegularizer),e.pointwiseRegularizer=it(this.pointwiseRegularizer),e.depthwiseConstraint=Ot(this.depthwiseConstraint),e.pointwiseConstraint=Ot(this.pointwiseConstraint),e}};ES.className="SeparableConv";var ny=class extends ES{constructor(e){super(2,e)}};ny.className="SeparableConv2D",ae.registerClass(ny);var RS=class extends Hl{constructor(e){super(1,e),RS.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!kb(e.kernelSize,"number",1,1))throw new U(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},sy=RS;sy.className="Conv1D",ae.registerClass(sy);var ry=class extends Ge{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(t,e){return j(()=>{if(t=Oe(t),"channelsLast"===this.dataFormat){var e=Gc(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Gc(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}e=Gc(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Gc(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)})}getConfig(){var e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};ry.className="Cropping2D",ae.registerClass(ry);var ay=class extends Ge{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ct(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,ZM(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){var t=null==e[2]?null:this.size[0]*e[2],a=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,a]}t=null==e[1]?null:this.size[0]*e[1],a=null==e[2]?null:this.size[1]*e[2];return[e[0],t,a,e[3]]}call(n,e){return j(()=>{let e=Oe(n),t=e.shape;if("channelsFirst"===this.dataFormat){e=qe(e,[0,2,3,1]);var a=this.size[0]*t[2],r=this.size[1]*t[3],a="nearest"===this.interpolation?qn.resizeNearestNeighbor(e,[a,r]):qn.resizeBilinear(e,[a,r]);return qe(a,[0,3,1,2])}r=this.size[0]*t[1],a=this.size[1]*t[2];return"nearest"===this.interpolation?qn.resizeNearestNeighbor(e,[r,a]):qn.resizeBilinear(e,[r,a])})}getConfig(){var e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function BB(t,a,r=[1,1],n="valid",s,i){return j(()=>{Ct(s=null==s?bs():s);let e=Zb(t,s);if(4!==t.rank)throw new U(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==a.rank)throw new U(`depthwiseKernel is required to be 4-D, but is instead ${a.rank}-D`);return e=hp(e,a,r,"same"===n?"same":"valid","NHWC",i),"channelsFirst"===s&&(e=qe(e,[0,3,1,2])),e})}ay.className="UpSampling2D",ae.registerClass(ay);var iy=class extends Jb{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=ht(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Pt(e.depthwiseConstraint),this.depthwiseRegularizer=ft(e.depthwiseRegularizer)}build(e){if((e=nt(e)).length<4)throw new U(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);var t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new U(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);e=e[t],t=[this.kernelSize[0],this.kernelSize[1],e,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",t,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[e*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return j(()=>{let e=BB(t=Oe(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=ws(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e})}computeOutputShape(e){e=nt(e);var t="channelsFirst"===this.dataFormat?e[2]:e[1],a="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,t=gs(t,this.kernelSize[0],this.padding,this.strides[0]),a=gs(a,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,t,a]:[e[0],t,a,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=yt(this.depthwiseInitializer),e.depthwiseRegularizer=it(this.depthwiseRegularizer),e.depthwiseConstraint=Ot(this.depthwiseRegularizer),e}};function DS(e,t,a,r){if(Array.isArray(e)){if(null!=t||null!=a)throw new U("When inputs is an array, neither initialState or constants should be provided");null!=r&&(a=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),1<e.length&&(t=e.slice(1,e.length)),e=e[0]}function n(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=n(t),constants:a=n(a)}}function FS(d,p,h,c=!1,f,m,g=!1,b=!1){return j(()=>{var e=p.shape.length;if(e<3)throw new U(`Input should be at least 3D, but is ${e}D.`);var t,a=[1,0].concat(ys(2,e));if(p=qe(p,a),null!=m)throw new Fe("The rnn() functoin of the deeplearn.js backend does not support constants yet.");g&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=f&&((f=ce(ce(f,"bool"),"float32")).rank===e-1&&(f=Pn(f,-1)),f=qe(f,a)),c&&(p=Zn(p,0),null!=f&&(f=Zn(f,0)));let r=[],i,o=h,n=p.shape[0],l=Fs(p),u;null!=f&&(u=Fs(f));for(let s=0;s<n;++s){let e=l[s],n=j(()=>d(e,o));o=null==f?(i=n[0],n[1]):(t=j(()=>{let a=u[s],r=ge(Qn(a),a),e=ie(V(n[0],a),V(o[0],r)),t=o.map((e,t)=>ie(V(n[1][t],a),V(e,r)));return{output:e,newStates:t}}),i=t.output,t.newStates),b&&r.push(i)}let s;return b&&(s=Jn(r,1)),[i,s,o]})}iy.className="DepthwiseConv2D",ae.registerClass(iy);var OS=class extends Ge{constructor(e){super(e);let t;if(null==e.cell)throw new U("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Vp({cells:e.cell}):e.cell,null==t.stateSize)throw new U("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Dt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null!=this.states_?this.states_:ys(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null)}setStates(e){this.states_=e}computeOutputShape(t){ym(t)&&(t=t[0]);let a=this.cell.stateSize;Array.isArray(a)||(a=[a]);let e=a[0],r;if(r=this.returnSequences?[t[0],t[1],e]:[t[0],e],this.returnState){let e=[];for(var n of a)e.push([t[0],n]);return[r].concat(e)}return r}computeMask(e,a){return j(()=>{Array.isArray(a)&&(a=a[0]);let e=this.returnSequences?a:null;if(this.returnState){var t=this.states.map(e=>null);return[e].concat(t)}return e})}get states(){if(null!=this.states_)return this.states_;{let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,a=[];for(let e=0;e<t;++e)a.push(null);return a}}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Fe("Constants support is not implemented in RNN yet.");ym(e)&&(e=e[0]);var t=this.stateful?e[0]:null,a=e.slice(2);this.inputSpec[0]=new Dt({shape:[t,null,...a]});e=[e[0]].concat(e.slice(2));this.cell.build(e);let r;if(r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!w.arraysEqual(this.stateSpec.map(e=>e.shape[e.shape.length-1]),r))throw new U(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(e=>new Dt({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(n,e=!1){j(()=>{if(!this.stateful)throw new Vs("Cannot call resetStates() on an RNN Layer that is not stateful.");let t=this.inputSpec[0].shape[0];if(null==t)throw new U("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>$t([t,e])):this.states_=[$t([t,this.cell.stateSize])];else if(null==n)Re(this.states_),null!=this.keptStates&&(Re(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>$t([t,e])):this.states_[0]=$t([t,this.cell.stateSize]);else{if((n=!Array.isArray(n)?[n]:n).length!==this.states_.length)throw new U(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${n.length} state value(s). Input received: ${n}`);!0===e?this.keptStates.push(this.states_.slice()):Re(this.states_);for(let e=0;e<this.states_.length;++e){var a=n[e],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,r=[t,r];if(!w.arraysEqual(a.shape,r))throw new U(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${a.shape}`);this.states_[e]=a}}this.states_=this.states_.map(e=>Ht(e.clone()))})}apply(e,t){var a=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});var n=DS(e,a,r,this.numConstants);e=n.inputs,a=n.initialState,r=n.constants;let s=[],i=[];if(null!=a){t.initialState=a,s=s.concat(a),this.stateSpec=[];for(var o of a)this.stateSpec.push(new Dt({shape:o.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof $s){n=[e].concat(s),a=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=a;n=super.apply(n,t);return this.inputSpec=r,n}return super.apply(e,t)}call(d,p){return j(()=>{let e=null==p?null:p.mask,t=null==p?null:p.training,a=null==p?null:p.initialState;d=Oe(d),null==a&&(a=this.stateful?this.states_:this.getInitialState(d));var r=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==r)throw new U(`RNN Layer has ${r} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let n={training:t},s=FS((e,t)=>{let a=this.cell.call([e].concat(t),n);return[a[0],a.slice(1)]},d,a,this.goBackwards,e,null,this.unroll,this.returnSequences),i=s[0],o=s[1],l=s[2];this.stateful&&this.resetStates(l,t);let u=this.returnSequences?o:i;return this.returnState?[u].concat(l):u})}getInitialState(e){return j(()=>{let t=$t(e.shape);return t=ve(t,[1,2]),t=Vl(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>1<e?gm(t,[1,e]):t):1<this.cell.stateSize?[gm(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);var a=this.cell.getConfig();return this.getClassName()===OS.className&&(t.cell={className:this.cell.getClassName(),config:a}),{...a,...e,...t}}static fromConfig(e,t,a={}){a=ms(t.cell,a);return new e(Object.assign(t,{cell:a}))}},Ar=OS;Ar.className="RNN",ae.registerClass(Ar);var ql=class extends Ge{},Lp=class extends ql{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Bt(this.units,"units"),this.activation=yr(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ht(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ht(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ht(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ft(e.kernelRegularizer),this.recurrentRegularizer=ft(e.recurrentRegularizer),this.biasRegularizer=ft(e.biasRegularizer),this.kernelConstraint=Pt(e.kernelConstraint),this.recurrentConstraint=Pt(e.recurrentConstraint),this.biasConstraint=Pt(e.biasConstraint),this.dropout=Zi([1,gr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Zi([1,gr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=nt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(i,o){return j(()=>{if(2!==i.length)throw new U(`SimpleRNNCell expects 2 input Tensors, got ${i.length}.`);let e=i[1];i=i[0];var t=null!=o.training&&o.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=vr({ones:()=>Qn(i),rate:this.dropout,training:t,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=vr({ones:()=>Qn(e),rate:this.recurrentDropout,training:t,dropoutFunc:this.dropoutFunc}));let a,r=this.dropoutMask,n=this.recurrentDropoutMask;a=Es(null!=r?V(i,r):i,this.kernel.read()),null!=this.bias&&(a=ws(a,this.bias.read())),null!=n&&(e=V(e,n));let s=ie(a,Es(e,this.recurrentKernel.read()));return null!=this.activation&&(s=this.activation.apply(s)),[s,s]})}getConfig(){var e=super.getConfig(),t={units:this.units,activation:br(this.activation),useBias:this.useBias,kernelInitializer:yt(this.kernelInitializer),recurrentInitializer:yt(this.recurrentInitializer),biasInitializer:yt(this.biasInitializer),kernelRegularizer:it(this.kernelRegularizer),recurrentRegularizer:it(this.recurrentRegularizer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),kernelConstraint:Ot(this.kernelConstraint),recurrentConstraint:Ot(this.recurrentConstraint),biasConstraint:Ot(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};Lp.className="SimpleRNNCell",ae.registerClass(Lp);var oy=class extends Ar{constructor(e){e.cell=new Lp(e),super(e)}call(r,n){return j(()=>{null!=this.cell.dropoutMask&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);var e=null==n?null:n.mask,t=null==n?null:n.training,a=null==n?null:n.initialState;return super.call(r,{mask:e,training:t,initialState:a})})}static fromConfig(e,t){return new e(t)}};oy.className="SimpleRNN",ae.registerClass(oy);var Bp=class extends ql{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new U("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Bt(this.units,"units"),this.activation=yr(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=yr(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ht(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ht(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ht(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ft(e.kernelRegularizer),this.recurrentRegularizer=ft(e.recurrentRegularizer),this.biasRegularizer=ft(e.biasRegularizer),this.kernelConstraint=Pt(e.kernelConstraint),this.recurrentConstraint=Pt(e.recurrentConstraint),this.biasConstraint=Pt(e.biasConstraint),this.dropout=Zi([1,gr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Zi([1,gr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=(e=nt(e))[e.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(u,d){return j(()=>{if(2!==u.length)throw new U(`GRUCell expects 2 input Tensors (inputs, h, c), got ${u.length}.`);let e=null!=d.training&&d.training,t=u[1];u=u[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=vr({ones:()=>Qn(u),rate:this.dropout,training:e,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=vr({ones:()=>Qn(t),rate:this.recurrentDropout,training:e,count:3,dropoutFunc:this.dropoutFunc}));var a=this.dropoutMask,r=this.recurrentDropoutMask;let n=Es(u=0<this.dropout&&this.dropout<1?V(u,a[0]):u,this.kernel.read());this.useBias&&(n=ws(n,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(t=V(t,r[0]));var s=this.recurrentKernel.read(),[i,o]=Bn(s,[2*this.units,this.units],s.rank-1),l=Es(t,i),[a,r,s]=Bn(n,3,n.rank-1),[i,l]=Bn(l,2,l.rank-1),i=this.recurrentActivation.apply(ie(a,i)),l=this.recurrentActivation.apply(ie(r,l)),o=Es(V(l,t),o),o=this.activation.apply(ie(s,o)),o=ie(V(i,t),V(ie(1,kt(i)),o));return[o,o]})}getConfig(){var e=super.getConfig(),t={units:this.units,activation:br(this.activation),recurrentActivation:br(this.recurrentActivation),useBias:this.useBias,kernelInitializer:yt(this.kernelInitializer),recurrentInitializer:yt(this.recurrentInitializer),biasInitializer:yt(this.biasInitializer),kernelRegularizer:it(this.kernelRegularizer),recurrentRegularizer:it(this.recurrentRegularizer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),kernelConstraint:Ot(this.kernelConstraint),recurrentConstraint:Ot(this.recurrentConstraint),biasConstraint:Ot(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};Bp.className="GRUCell",ae.registerClass(Bp);var uy=class extends Ar{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Bp(e),super(e)}call(r,n){return j(()=>{null!=this.cell.dropoutMask&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);var e=null==n?null:n.mask,t=null==n?null:n.training,a=null==n?null:n.initialState;return super.call(r,{mask:e,training:t,initialState:a})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};uy.className="GRU",ae.registerClass(uy);var jl=class extends ql{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Bt(this.units,"units"),this.activation=yr(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=yr(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ht(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ht(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ht(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=ft(e.kernelRegularizer),this.recurrentRegularizer=ft(e.recurrentRegularizer),this.biasRegularizer=ft(e.biasRegularizer),this.kernelConstraint=Pt(e.kernelConstraint),this.recurrentConstraint=Pt(e.recurrentConstraint),this.biasConstraint=Pt(e.biasConstraint),this.dropout=Zi([1,gr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Zi([1,gr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var e=(e=nt(e))[e.length-1];this.kernel=this.addWeight("kernel",[e,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let t;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,i=this.units;t=((e=class extends ns{apply(e,t){var a=s.apply([i]),r=(new Np).apply([i]),n=s.apply([2*i]);return $x($x(a,r),n)}}).className="CustomInit",new e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,t,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(o,l){return j(()=>{var e=null!=l.training&&l.training;if(3!==o.length)throw new U(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${o.length}.`);let t=o[1],a=o[2];o=o[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=vr({ones:()=>Qn(o),rate:this.dropout,training:e,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=vr({ones:()=>Qn(t),rate:this.recurrentDropout,training:e,count:4,dropoutFunc:this.dropoutFunc}));var r=this.dropoutMask,n=this.recurrentDropoutMask;let s=Es(o=0<this.dropout&&this.dropout<1?V(o,r[0]):o,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(t=V(t,n[0])),s=ie(s,Es(t,this.recurrentKernel.read())),this.useBias&&(s=ws(s,this.bias.read()));var[i,e,r,n]=Bn(s,4,s.rank-1),i=this.recurrentActivation.apply(i),e=this.recurrentActivation.apply(e),r=ie(V(e,a),V(i,this.activation.apply(r))),n=this.recurrentActivation.apply(n),n=V(n,this.activation.apply(r));return[n,n,r]})}getConfig(){var e=super.getConfig(),t={units:this.units,activation:br(this.activation),recurrentActivation:br(this.recurrentActivation),useBias:this.useBias,kernelInitializer:yt(this.kernelInitializer),recurrentInitializer:yt(this.recurrentInitializer),biasInitializer:yt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:it(this.kernelRegularizer),recurrentRegularizer:it(this.recurrentRegularizer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),kernelConstraint:Ot(this.kernelConstraint),recurrentConstraint:Ot(this.recurrentConstraint),biasConstraint:Ot(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};jl.className="LSTMCell",ae.registerClass(jl);var ly=class extends Ar{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new jl(e),super(e)}call(r,n){return j(()=>{null!=this.cell.dropoutMask&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);var e=null==n?null:n.mask,t=null==n?null:n.training,a=null==n?null:n.initialState;return super.call(r,{mask:e,training:t,initialState:a})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};ly.className="LSTM",ae.registerClass(ly);var Vp=class extends ql{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(var t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(i,o){return j(()=>{let a=i.slice(1),r=[];for(var e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(a.splice(0,e.stateSize.length)):r.push(a.splice(0,1));r.reverse();let n=[],s;for(let t=0;t<this.cells.length;++t){let e=this.cells[t];a=r[t],s=(0===t?[i[0]]:[s[0]]).concat(a),s=e.call(s,o),n.push(s.slice(1))}a=[];for(var t of n.slice().reverse())a.push(...t);return[s[0]].concat(a)})}build(a){ym(a)&&(a=a[0]);let r;this.cells.forEach((e,t)=>{ea(`RNNCell_${t}`,()=>{e.build(a),r=Array.isArray(e.stateSize)?e.stateSize[0]:e.stateSize,a=[a[0],r]})}),this.built=!0}getConfig(){var e=super.getConfig(),t={cells:this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}))};return{...e,...t}}static fromConfig(e,t,a={}){let r=[];for(var n of t.cells)r.push(ms(n,a));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(var t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let t=[];for(var e of this.cells)t.push(...e.nonTrainableWeights);if(this.trainable)return t;{let e=[];for(var a of this.cells)e.push(...a.trainableWeights);return e.concat(t)}}getWeights(){let e=[];for(var t of this.cells)e.push(...t.weights);return vm(e)}setWeights(e){let t=[];for(var a of this.cells){var r=a.weights.length,n=e.splice(r);for(let e=0;e<a.weights.length;++e)t.push([a.weights[e],n[e]])}Pb(t)}};function vr(e){let{ones:t,rate:a,training:r=!1,count:n=1,dropoutFunc:s}=e,i=()=>(null!=s?s:XI)(t(),a),o=()=>Ul(i,t,r);return!n||n<=1?Ht(o().clone()):Array(n).fill(void 0).map(o).map(e=>Ht(e.clone()))}Vp.className="StackedRNNCells",ae.registerClass(Vp);var PS=class extends Ar{constructor(e){if(e.unroll)throw new Fe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Fe("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Dt({ndim:5})]}call(r,n){return j(()=>{if(null!=this.cell.dropoutMask&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),n&&n.constants)throw new U("ConvRNN2D cell does not support constants");var e=null==n?null:n.mask,t=null==n?null:n.training,a=null==n?null:n.initialState;return super.call(r,{mask:e,training:t,initialState:a})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(s){return j(()=>{let e=this.cell["stateSize"],t=s.shape,a=this.computeSingleOutputShape(t),r=[a[0],...a.slice(2)],n=$t(r);return Array.isArray(e)?Array(e.length).fill(n):[n]})}resetStates(s,i=!1){j(()=>{if(!this.stateful)throw new Vs("Cannot call resetStates() on an RNN Layer that is not stateful.");let e=this.inputSpec[0].shape,t=this.computeSingleOutputShape(e),a=[t[0],...t.slice(2)];if(null==e[0])throw new U("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>$t(a)):this.states_=[$t(a)];else if(null==s)Re(this.states_),null!=this.keptStates&&(Re(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>$t(a)):this.states_[0]=$t(a);else{if((s=!Array.isArray(s)?[s]:s).length!==this.states_.length)throw new U(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${s.length} state value(s). Input received: ${s}`);i?this.keptStates.push(this.states_.slice()):Re(this.states_);for(let e=0;e<this.states_.length;++e){var r=s[e],n=a;if(!w.arraysEqual(r.shape,n))throw new U(`State ${e} is incompatible with layer ${this.name}: expected shape=${n}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map(e=>Ht(e.clone()))})}computeSingleOutputShape(e){var{dataFormat:t,filters:a,kernelSize:r,padding:n,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],t=e[o?4:3],l=gs(l,r[0],n,s[0],i[0]),i=gs(t,r[1],n,s[1],i[1]);return[...e.slice(0,2),...o?[a,l,i]:[l,i,a]]}};PS.className="ConvRNN2D";var Wp=class extends jl{constructor(e){var{filters:t,kernelSize:a,strides:r,padding:n,dataFormat:s,dilationRate:i}=e;super({...e,units:t}),this.filters=t,Bt(this.filters,"filters"),this.kernelSize=Xi(a,2,"kernelSize"),this.kernelSize.forEach(e=>Bt(e,"kernelSize")),this.strides=Xi(r||1,2,"strides"),this.strides.forEach(e=>Bt(e,"strides")),this.padding=n||"valid",Un(this.padding),this.dataFormat=s||"channelsLast",Ct(this.dataFormat),this.dilationRate=Xi(i||1,2,"dilationRate"),this.dilationRate.forEach(e=>Bt(e,"dilationRate"))}build(e){e=nt(e);var t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new U(`The channel dimension of the input should be defined. Found ${e[t]}`);var t=e[t],t=this.kernelSize.concat([t,4*this.filters]);this.kernel=this.addWeight("kernel",t,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);t=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",t,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let a=this.biasInitializer,r=this.filters;e=((t=class extends ns{apply(e,t){return $b([a.apply([r]),Mn([r]),a.apply([2*r])])}}).className="CustomInit",new t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(x,w){return j(()=>{if(3!==x.length)throw new U(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${x.length}.`);let e=w.training||!1,t=x[0],a=x[1],r=x[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=vr({ones:()=>Qn(t),rate:this.dropout,training:e,count:4,dropoutFunc:this.dropoutFunc}));var n=this.dropoutMask,s=(e,t,a)=>t&&t[a]?V(t[a],e):e,i=s(t,n,0),o=s(t,n,1),l=s(t,n,2),u=s(t,n,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=vr({ones:()=>Qn(a),rate:this.recurrentDropout,training:e,count:4,dropoutFunc:this.dropoutFunc}));var d=this.recurrentDropoutMask,p=s(a,d,0),h=s(a,d,1),c=s(a,d,2),f=s(a,d,3),[m,g,b,y]=Bn(this.kernel.read(),4,3),[v,n,s,d]=this.useBias?Bn(this.bias.read(),4):[null,null,null,null],i=this.inputConv(i,m,v,this.padding),o=this.inputConv(o,g,n,this.padding),l=this.inputConv(l,b,s,this.padding),u=this.inputConv(u,y,d,this.padding),[b,s,y,d]=Bn(this.recurrentKernel.read(),4,3),p=this.recurrentConv(p,b),h=this.recurrentConv(h,s),c=this.recurrentConv(c,y),f=this.recurrentConv(f,d),p=this.recurrentActivation.apply(ie(i,p)),h=this.recurrentActivation.apply(ie(o,h)),c=ie(V(h,r),V(p,this.activation.apply(ie(l,c)))),f=V(this.recurrentActivation.apply(ie(u,f)),this.activation.apply(c));return[f,f,c]})}getConfig(){let{units:e,...t}=super.getConfig(),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...a}}inputConv(e,t,a,r){r=ca(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return a?ws(r,a,this.dataFormat):r}recurrentConv(e,t){return ca(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};Wp.className="ConvLSTM2DCell",ae.registerClass(Wp);var cy=class extends PS{constructor(e){var t=new Wp(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};cy.className="ConvLSTM2D",ae.registerClass(cy);var Up=class extends Ge{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,a=[];for(let e=0;e<this.noiseShape.length;++e)a.push((null==this.noiseShape[e]?t:this.noiseShape)[e]);return a}call(e,r){return j(()=>{this.invokeCallHook(e,r);let a=Oe(e);if(0<this.rate&&this.rate<1){let e=null!=r.training&&r.training,t=this.getNoiseShape(a);return Ul(()=>XI(a,this.rate,t,this.seed),()=>a,e)}return e})}getConfig(){var e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Up.className="Dropout",ae.registerClass(Up);var dy=class extends Up{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){e=e.shape;return[e[0],1,e[2]]}};dy.className="SpatialDropout1D",ae.registerClass(dy);var py=class extends Ge{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Bt(this.units,"units"),this.activation=yr(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=ht(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ht(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Pt(t.kernelConstraint),this.biasConstraint=Pt(t.biasConstraint),this.kernelRegularizer=ft(t.kernelRegularizer),this.biasRegularizer=ft(t.biasRegularizer),this.activityRegularizer=ft(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=(e=nt(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{"-1":e}}],this.built=!0}computeOutputShape(e){let t=(e=nt(e)).slice();return t[t.length-1]=this.units,t}call(r,n){return j(()=>{this.invokeCallHook(r,n);let e=Oe(r),t=UI(this.activation.getClassName()),a;return null!=t?a=Es(e,this.kernel.read(),t,this.bias?this.bias.read():null):(a=Es(e,this.kernel.read()),null!=this.bias&&(a=ws(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a})}getConfig(){var e={units:this.units,activation:br(this.activation),useBias:this.useBias,kernelInitializer:yt(this.kernelInitializer),biasInitializer:yt(this.biasInitializer),kernelRegularizer:it(this.kernelRegularizer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),kernelConstraint:Ot(this.kernelConstraint),biasConstraint:Ot(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};py.className="Dense",ae.registerClass(py);var hy=class extends Ge{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){for(var t of(e=nt(e)).slice(1))if(null==t)throw new U(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],dr(e,1)]}call(e,t){return j(()=>{this.invokeCallHook(e,t);let a=Oe(e);if("channelsFirst"===this.dataFormat&&1<a.rank){let t=[0];for(let e=2;e<a.rank;++e)t.push(e);t.push(1),a=qe(a,t)}return rL(a)})}getConfig(){let e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);var t=super.getConfig();return Object.assign(e,t),e}};hy.className="Flatten",ae.registerClass(hy);var fy=class extends Ge{constructor(e){super(e),this.supportsMasking=!0,this.activation=yr(e.activation)}call(t,a){return j(()=>{this.invokeCallHook(t,a);var e=Oe(t);return this.activation.apply(e)})}getConfig(){var e={activation:br(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};fy.className="Activation",ae.registerClass(fy);var my=class extends Ge{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return j(()=>nL(e=Oe(e),this.n))}getConfig(){var e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};my.className="RepeatVector",ae.registerClass(my);var gy=class extends Ge{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let a="Total size of new array must be unchanged.",r=t.slice(),n=1,s=null;for(let e=0;e<r.length;++e){var i=r[e];if(this.isUnknown(i)){if(null!==s)throw new U("Can only specifiy one unknown dimension.");s=e}else n*=i}e=dr(e);if(null!==s){if(0===n||e%n!=0)throw new U(a);r[s]=e/n}else if(e!==n)throw new U(a);return r}computeOutputShape(t){let a=!1;for(let e=0;e<t.length;++e)if(this.isUnknown(t[e])){a=!0;break}return a?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(r,n){return j(()=>{this.invokeCallHook(r,n);let e=Oe(r),t=e.shape,a=t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape));return G(e,a)})}getConfig(){var e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};gy.className="Reshape",ae.registerClass(gy);var by=class extends Ge{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);var t=ys(1,e.dims.length+1);if(!w.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Dt({ndim:this.dims.length+1})]}computeOutputShape(a){let r=(a=nt(a)).slice();return this.dims.forEach((e,t)=>{r[t+1]=a[e]}),r}call(e,t){return qe(Oe(e),this.dimsIncludingBatch)}getConfig(){var e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};by.className="Permute",ae.registerClass(by);var yy=class extends Ge{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null==e||null==e.maskValue?0:e.maskValue}computeOutputShape(e){return e}getConfig(){var e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){e=Oe(e);return pm(Xu(e,this.maskValue),-1)}call(a,r){return j(()=>{this.invokeCallHook(a,r);var e=Oe(a),t=pm(Xu(e,this.maskValue),-1,!0);return V(e,ce(t,e.dtype))})}};yy.className="Masking",ae.registerClass(yy);var vy=class extends Ge{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(dt(t.inputLength))}this.inputDim=t.inputDim,Bt(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Bt(this.outputDim,"outputDim"),this.embeddingsInitializer=ht(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ft(t.embeddingsRegularizer),this.activityRegularizer=ft(t.activityRegularizer),this.embeddingsConstraint=Pt(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return j(()=>this.maskZero?(e=Oe(e),Xu(e,je(e))):null)}computeOutputShape(a){if(a=nt(a),null==this.inputLength)return[...a,this.outputDim];let r=dt(this.inputLength);if(r.length!==a.length-1)throw new U(`"inputLength" is ${this.inputLength}, but received input shape has shape ${a}`);{let t=0;for(let e=0;e<r.length;++e){var n=r[e],s=a[e+1];if(null!=n&&null!=s&&n!==s)throw new U(`"inputLength" is ${this.inputLength}, but received input shape has shape ${a}`);null==n&&(r[t]=s),t++}}return[a[0],...r,this.outputDim]}call(a,r){return j(()=>{this.invokeCallHook(a,r);let e=Oe(a);"int32"!==e.dtype&&(e=Sp(e,"int32"));var t=KI(this.embeddings.read(),G(e,[e.size]));return G(t,nt(this.computeOutputShape(e.shape)))})}getConfig(){var e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:yt(this.embeddingsInitializer),embeddingsRegularizer:it(this.embeddingsRegularizer),activityRegularizer:it(this.activityRegularizer),embeddingsConstraint:Ot(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};vy.className="Embedding",ae.registerClass(vy);var bi=class extends Ge{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Fe}computeElementwiseOpOutputShape(t,a){if(null==t||null==a)return null;if(t.length<a.length)return this.computeElementwiseOpOutputShape(a,t);if(0===a.length)return t;let r=t.slice(0,t.length-a.length);for(let e=0;e<a.length;++e){var n=t[t.length-a.length+e],s=a[e];if(null==n||null==s||n<0||s<0)r.push(null);else if(1===n)r.push(s);else if(1===s)r.push(n);else{if(n!==s)throw new U("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(a));r.push(n)}}return r}build(t){if((t=Array.isArray(t)&&!Array.isArray(t[0])?[nt(t)]:t).length<2)throw new U(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(var a of t)null!=a&&null!==a[0]&&e.push(a[0]);if(e=cr(e),1<e.length)throw new U(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let r=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){var n=null==t[e]?null:t[e].slice(1);r=this.computeElementwiseOpOutputShape(r,n)}var s=t.map(e=>e.length);-1===t.indexOf(null)&&1===cr(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(d,e){return j(()=>{if(this.reshapeRequired){let i=[],e=d.map(e=>e.rank);if(-1===e.indexOf(null)){var t,a=gr(e);for(t of d){var r=t.rank;for(let e=0;e<a-r;++e)t=Vl(t,1);i.push(t)}return this.mergeFunction(i)}{let n=!1;for(var o of d){var l=o.rank;if(null==l){let e=o.shape,t=e[0],a=e.slice(1).concat([t]),r=G(o,[t].concat(dr(e.slice(1))));r=qe(r,[1,0]),r=G(r,a),i.push(r),n=!0}else 1<l?(l=ys(1,l).concat([0]),i.push(qe(o,l)),n=!0):i.push(o)}let s=this.mergeFunction(i),e=s.rank;if(n)if(null==e){let e=s.shape,t=e.length,a=e[t-1],r=[a].concat(e.slice(0,e.length-1));s=G(qe(G(s,[-1,a]),[1,0]),r)}else{var u;1<e&&(u=[e-1].concat(ys(0,e-1)),s=qe(s,u))}return s}}return this.mergeFunction(d)})}computeOutputShape(t){let a;a=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){var r=null==t[e]?null:t[e].slice(1);a=this.computeElementwiseOpOutputShape(a,r)}let e=[];for(var n of t)null!=n&&null!==n[0]&&e.push(n[0]);return e=cr(e),a=(1===e.length?e:[null]).concat(a),a}computeMask(e,a){return j(()=>{if(null==a)return null;if(!Array.isArray(a))throw new U("`mask` should be an Array");if(!Array.isArray(e))throw new U("`inputs` should be an Array");if(a.length!==e.length)throw new U(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${a.length})`);if(a.every(e=>null==e))return null;let t=(a=a.map(e=>null==e?e:Pn(e,0)))[0];for(let e=1;e<a.length-1;++e)t=Ds(t,a[e]);return t})}},xy=class extends bi{constructor(e){super(e)}mergeFunction(a){return j(()=>{let t=a[0].clone();for(let e=1;e<a.length;++e)t=ie(t,a[e]);return t})}};xy.className="Add",ae.registerClass(xy);var wy=class extends bi{constructor(e){super(e)}mergeFunction(a){return j(()=>{let t=a[0].clone();for(let e=1;e<a.length;++e)t=V(t,a[e]);return t})}};wy.className="Multiply",ae.registerClass(wy);var ky=class extends bi{constructor(e){super(e)}mergeFunction(a){return j(()=>{let t=a[0].clone();for(let e=1;e<a.length;++e)t=ie(t,a[e]);return V(1/a.length,t)})}};ky.className="Average",ae.registerClass(ky);var Iy=class extends bi{constructor(e){super(e)}mergeFunction(a){return j(()=>{let t=a[0];for(let e=1;e<a.length;++e)t=$r(t,a[e]);return t})}};Iy.className="Maximum",ae.registerClass(Iy);var Sy=class extends bi{constructor(e){super(e)}mergeFunction(a){return j(()=>{let t=a[0];for(let e=1;e<a.length;++e)t=bp(t,a[e]);return t})}};Sy.className="Minimum",ae.registerClass(Sy);var Cy=class extends bi{constructor(e){super(e),this.DEFAULT_AXIS=-1,this.axis=null==(e=null==e?{}:e).axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(n){if(!Array.isArray(n)||!Array.isArray(n[0])||1===n.length)throw new U("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(var t of n)if(null!=t){e=!1;break}if(!e){let r=[];for(let a=0;a<n.length;++a){let e=n[a].slice();e.splice(this.axis,1);let t=!1;for(var s of r)if(w.arraysEqual(s,e)){t=!0;break}t||r.push(e)}if(1<r.length)throw new U("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(n))}}mergeFunction(e){return j(()=>$b(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new U("A `Concatenate` layer should be called on a list of inputs.");let t=e,a=t[0].slice(),r=this.axis<0?a.length+this.axis:this.axis;for(var n of t.slice(1)){if(null==a[r]||null==n[r]){a[r]=null;break}a[r]+=n[r]}return a}computeMask(r,n){if(null==n)return null;if(!Array.isArray(n))throw new U("`mask` should be an array for Concatenate");if(!Array.isArray(r))throw new U("`inputs` should be an array for Concatenate");if(n.length!==r.length)throw new U(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${r.length})`);return j(()=>{let t=!0;if(n.forEach(e=>{null!=e&&(t=!1)}),t)return null;let a=[];for(let e=0;e<r.length;++e)null==n[e]?a.push(ce(Qn(r[e]),"bool")):n[e].rank<r[e].rank?a.push(Pn(n[e],-1)):a.push(n[e]);var e=Ft(a,this.axis);return qk(e,-1,!1)})}getConfig(){var e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Cu(e,t){for(;e<0;)e+=t;return e}function VB(n,s,e){if(3<n.shape.length||3<s.shape.length)throw new Fe("batchDot is not implemented for tensors of 4D or higher rank yet");if(w.assert(2<=n.shape.length,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),w.assert(2<=n.shape.length,()=>`batchDot requires the rank of y to be >= 2, but got ${s.shape.length}`),"number"==typeof e&&(e=[e,e]),"complex64"===n.dtype||"complex64"===s.dtype)throw new Fe("batchDot is not implemented for complex64-type Tensors yet.");let i=n.shape.length,o=s.shape.length,l=e=null==e?[i-1,o-2]:e;return j(()=>{let r;if(i>o){r=i-o;let t=[];for(let e=0;e<r;++e)t.push(1);s=G(s,s.shape.concat(t))}else if(o>i){r=o-i;let t=[];for(let e=0;e<r;++e)t.push(1);n=G(n,n.shape.concat(t))}else r=0;let e;var t,a;if(e=2===n.shape.length&&2===s.shape.length?l[0]===l[1]?ve(V(n,s),l[0]):ve(V(qe(n,[1,0]),s),l[1]):(t=l[0]!==n.shape.length-1,a=l[1]===s.shape.length-1,We(n,s,t,a)),0<r){let t;t=i>o?i+o-3:i-1;let a=[];for(let e=t;e<t+r;++e)a.push(e);e=mr(e,a)}return 1===e.shape.length&&(e=Pn(e,1)),e})}Cy.className="Concatenate",ae.registerClass(Cy);var Ny=class extends bi{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){w.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");var t=e[0],a=e[1];if(3<t.length||3<a.length)throw new Fe("Dot layer does not support tensors of 4D or higher rank yet.");e=this.interpretAxes(t,a);if(t[e[0]]!==a[e[1]])throw new U(`Dimension incompatibility: ${t[e[0]]} !== ${a[e[1]]}`)}mergeFunction(a){if(2!==a.length)throw new U(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${a.length} input(s).`);let e=a[0],t=a[1],r;return r=Array.isArray(this.axes)?this.axes.map((e,t)=>Cu(e,a[t].shape.length)):[Cu(this.axes,e.shape.length),Cu(this.axes,t.shape.length)],this.normalize&&(e=Nd(e,r[0]),t=Nd(t,r[1])),VB(e,t,r)}interpretAxes(e,t){let a;return a=Array.isArray(this.axes)?this.axes:[Cu(this.axes,e.length),Cu(this.axes,t.length)],a}computeOutputShape(e){w.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),a=e[1].slice();if(3<t.length||3<a.length)throw new Fe("Dot layer does not support tensors of 4D or higher rank yet.");e=this.interpretAxes(t,a);t.splice(e[0],1),a.splice(e[1],1),a.splice(0,1);let r=t.concat(a);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){var e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Ny.className="Dot",ae.registerClass(Ny);var Ty=class extends Ge{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){var e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(t,a){return j(()=>{this.invokeCallHook(t,a);let e=Oe(t);return Ul(()=>ie(Cp(e.shape,0,this.stddev),e),()=>e,a.training||!1)})}};Ty.className="GaussianNoise",ae.registerClass(Ty);var $y=class extends Ge{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){var e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,a){return j(()=>{this.invokeCallHook(e,a);let t=Oe(e);return 0<this.rate&&this.rate<1?Ul(()=>{var e=Math.sqrt(this.rate/(1-this.rate));return V(t,Cp(t.shape,1,e))},()=>t,a.training||!1):t})}};$y.className="GaussianDropout",ae.registerClass($y);var _y=class extends Ge{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Oe(e).shape}computeOutputShape(e){return e}getConfig(){var e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(i,e){return j(()=>{if(this.rate<1&&0<this.rate){let s=this._getNoiseShape(i);return Ul(()=>{var e=Oe(i),t=-1.7580993408473766,a=Sp(a=Ko(Ml(s),this.rate),"float32"),r=((1-this.rate)*(1+this.rate*t**2))**-.5,n=-r*t*this.rate,t=ie(V(e,a),V(ie(a,-1),t));return ie(V(t,r),n)},()=>Oe(i),e.training||!1)}return i})}};function Ju(e,t,a,r,n,s=.001){let i;if(2===e.rank)i=$E(e,t,a,r,n,s);else if(3===e.rank)i=AE(e,t,a,r,n,s);else{if(4!==e.rank)throw new Fe(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=RE(e,t,a,r,n,s)}return i}function WB(a,r,n,s,i=.001){return j(()=>{var e=tb(a,s),t=e.mean,e=e.variance;return[Ju(a,t,e,n,r,i),t,e]})}function UB(u,d,p,h,c=.001){return j(()=>{let e=tb(u,h),t=e.mean,a=e.variance,r=[];for(var n of ys(0,u.rank))-1!==h.indexOf(n)?r.push(1):r.push(u.shape[n]);var s=G(t,r),i=G(a,r),o=null==d?null:G(d,r),l=null==p?null:G(p,r);return[Ju(u,s,i,l,o,c),t,a]})}function GB(e,t,a,r,n=.001){return(w.arraysEqual(r.slice().sort(),ys(0,e.rank-1))?WB:UB)(e,t,a,r,n)}_y.className="AlphaDropout",ae.registerClass(_y);var Ay=class extends Ge{constructor(e){super(e=null==e?{}:e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ht(e.betaInitializer||"zeros"),this.gammaInitializer=ht(e.gammaInitializer||"ones"),this.movingMeanInitializer=ht(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ht(e.movingVarianceInitializer||"ones"),this.betaConstraint=Pt(e.betaConstraint),this.gammaConstraint=Pt(e.gammaConstraint),this.betaRegularizer=ft(e.betaRegularizer),this.gammaRegularizer=ft(e.gammaRegularizer)}build(e){e=nt(e);var t=0<=this.axis?this.axis:this.axis+e.length,a=e[t];if(null==a)throw new U(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Dt({ndim:e.length,axes:{[t]:a}})];a=[a];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(f,m){return j(()=>{let e=null!=m.training&&m.training,n=Oe(f),t=n.shape,a=t.length,r=ys(0,a),s=0<=this.axis?this.axis:this.axis+a;r.splice(s,1);let i=fa(1,a);i[s]=t[s];let o=r.slice();o.sort();let l=!w.arraysEqual(o,ys(0,a).slice(0,a-1)),u=()=>{if(l){var e=G(this.movingMean.read(),i),t=G(this.movingVariance.read(),i),a=this.center?G(this.beta.read(),i):null,r=this.scale?G(this.gamma.read(),i):null;return Ju(n,e,t,a,r,this.epsilon)}return Ju(n,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)};if(!e)return u();let[d,p,h]=GB(n,this.gamma.read(),this.beta.read(),r,this.epsilon),c=(a,r,n)=>{j(()=>{var e=1-n,t=a.read(),e=V(ge(t,r),e);a.write(ge(t,e))})};return c(this.movingMean,p,this.momentum),c(this.movingVariance,h,this.momentum),d})}getConfig(){var e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:yt(this.betaInitializer),gammaInitializer:yt(this.gammaInitializer),movingMeanInitializer:yt(this.movingMeanInitializer),movingVarianceInitializer:yt(this.movingVarianceInitializer),betaRegularizer:it(this.betaRegularizer),gammaRegularizer:it(this.gammaRegularizer),betaConstraint:Ot(this.betaConstraint),gammaConstraint:Ot(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Ay.className="BatchNormalization",ae.registerClass(Ay);var Ey=class extends Ge{constructor(e){if(super(e=null==e?{}:e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(var t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ht(e.betaInitializer||"zeros"),this.gammaInitializer=ht(e.gammaInitializer||"ones"),this.betaRegularizer=ft(e.betaRegularizer),this.gammaRegularizer=ft(e.gammaRegularizer),this.supportsMasking=!0}build(t){var e,a=(t=nt(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=a);for(e of this.axis)if(e<0||e>=a)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==cr(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);var r=this.axis.map(e=>t[e]);this.scale?this.gamma=this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){let u=Oe(e),d=u.shape,p=d.length;return j(()=>{let{mean:e,variance:t}=tb(u,this.axis,!0),a=fa(1,p);for(var r of this.axis)a[r]=d[r];let n=e=>null!=e&&e.shape.length!==p?G(e,a):e,s=n(this.gamma.read()),i=n(this.beta.read()),o=[],l=[];for(let e=0;e<p;++e)-1!==this.axis.indexOf(e)?(o.push(d[e]),l.push(1)):(o.push(1),l.push(d[e]));return e=ps(e,o),t=ps(t,o),s=ps(s,l),i=ps(i,l),Ju(u,e,t,i,s,this.epsilon)})}getConfig(){var e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:yt(this.betaInitializer),gammaInitializer:yt(this.gammaInitializer),betaRegularizer:it(this.betaRegularizer),gammaRegularizer:it(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};function HB(t,a,r){return j(()=>{if(4!==t.rank)throw new U(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(2!==(a=null==a?[[1,1],[1,1]]:a).length||2!==a[0].length||2!==a[1].length)throw new U("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if("channelsLast"!==(r=null==r?bs():r)&&"channelsFirst"!==r)throw new U(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],a[0],a[1]]:[[0,0],a[0],a[1],[0,0]],fi(t,e)})}Ey.className="LayerNormalization",ae.registerClass(Ey);var Ry=class extends Ge{constructor(a){if(super(a=null==a?{}:a),this.dataFormat=null==a.dataFormat?bs():a.dataFormat,null==a.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof a.padding)this.padding=[[a.padding,a.padding],[a.padding,a.padding]];else{if(a.padding=a.padding,2!==a.padding.length)throw new U(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${a.padding.length} array.`);let e,t;if("number"==typeof a.padding[0])e=[a.padding[0],a.padding[0]],t=[a.padding[1],a.padding[1]];else{if(a.padding=a.padding,2!==a.padding[0].length)throw new U(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${a.padding[0].length} array.`);if(e=a.padding[0],2!==a.padding[1].length)throw new U(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${a.padding[1].length} array.`);t=a.padding[1]}this.padding=[e,t]}this.inputSpec=[new Dt({ndim:4})]}computeOutputShape(e){e=nt(e);let t,a;return"channelsFirst"===this.dataFormat?(t=null!=e[2]&&0<=e[2]?e[2]+this.padding[0][0]+this.padding[0][1]:null,a=null!=e[3]&&0<=e[3]?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,a]):(t=null!=e[1]&&0<=e[1]?e[1]+this.padding[0][0]+this.padding[0][1]:null,a=null!=e[2]&&0<=e[2]?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,a,e[3]])}call(e,t){return j(()=>HB(Oe(e),this.padding,this.dataFormat))}getConfig(){var e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function Gp(a,r,n,s,i,o){return j(()=>{Ct(i),GI(o),Un(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==i&&(i=bs()),null==o&&(o="max"),a=Zb(a,i);let e,t="same"===s?"same":"valid";return e=("max"===o?eb:Gg)(a,r,n,t),"channelsFirst"===i&&(e=qe(e,[0,3,1,2])),e})}function zS(a,r,n,s,i,o){return j(()=>{Ct(i),GI(o),Un(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==i&&(i=bs()),null==o&&(o="max"),a=$S(a,i);let e,t="same"===s?"same":"valid";return e=("max"===o?dI:Yk)(a,r,n,t),"channelsFirst"===i&&(e=qe(e,[0,4,1,2,3])),e})}Ry.className="ZeroPadding2D",ae.registerClass(Ry);var MS=class extends Ge{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new U(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Bt(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new U(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Bt(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Un(this.padding),this.inputSpec=[new Dt({ndim:3})]}computeOutputShape(e){var t=gs((e=nt(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(t,a){return j(()=>{this.invokeCallHook(t,a),t=Vl(Oe(t),2);var e=this.poolingFunction(Oe(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return mr(e,[2])})}getConfig(){var e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},Dy=class extends MS{constructor(e){super(e)}poolingFunction(e,t,a,r,n){return Ct(n),Un(r),Gp(e,t,a,r,n,"max")}};Dy.className="MaxPooling1D",ae.registerClass(Dy);var Fy=class extends MS{constructor(e){super(e)}poolingFunction(e,t,a,r,n){return Ct(n),Un(r),Gp(e,t,a,r,n,"avg")}};Fy.className="AveragePooling1D",ae.registerClass(Fy);var LS=class extends Ge{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new U(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Bt(this.poolSize,"poolSize"),Bt(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ct(this.dataFormat),Un(this.padding),this.inputSpec=[new Dt({ndim:4})]}computeOutputShape(e){e=nt(e);var t="channelsFirst"===this.dataFormat?e[2]:e[1],a="channelsFirst"===this.dataFormat?e[3]:e[2],t=gs(t,this.poolSize[0],this.padding,this.strides[0]),a=gs(a,this.poolSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],e[1],t,a]:[e[0],t,a,e[3]]}call(e,t){return j(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){var e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Oy=class extends LS{constructor(e){super(e)}poolingFunction(e,t,a,r,n){return Ct(n),Un(r),Gp(e,t,a,r,n,"max")}};Oy.className="MaxPooling2D",ae.registerClass(Oy);var Py=class extends LS{constructor(e){super(e)}poolingFunction(e,t,a,r,n){return Ct(n),Un(r),Gp(e,t,a,r,n,"avg")}};Py.className="AveragePooling2D",ae.registerClass(Py);var BS=class extends Ge{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new U(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Bt(this.poolSize,"poolSize"),Bt(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ct(this.dataFormat),Un(this.padding),this.inputSpec=[new Dt({ndim:5})]}computeOutputShape(e){e=nt(e);var t="channelsFirst"===this.dataFormat?e[2]:e[1],a="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3],t=gs(t,this.poolSize[0],this.padding,this.strides[0]),a=gs(a,this.poolSize[1],this.padding,this.strides[1]),r=gs(r,this.poolSize[2],this.padding,this.strides[2]);return"channelsFirst"===this.dataFormat?[e[0],e[1],t,a,r]:[e[0],t,a,r,e[4]]}call(e,t){return j(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){var e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},zy=class extends BS{constructor(e){super(e)}poolingFunction(e,t,a,r,n){return Ct(n),Un(r),zS(e,t,a,r,n,"max")}};zy.className="MaxPooling3D",ae.registerClass(zy);var My=class extends BS{constructor(e){super(e)}poolingFunction(e,t,a,r,n){return Ct(n),Un(r),zS(e,t,a,r,n,"avg")}};My.className="AveragePooling3D",ae.registerClass(My);var VS=class extends Ge{constructor(e){super(e),this.inputSpec=[new Dt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Fe}},Ly=class extends VS{constructor(e){super(e||{})}call(t,e){return j(()=>{var e=Oe(t);return St(e,1)})}};Ly.className="GlobalAveragePooling1D",ae.registerClass(Ly);var By=class extends VS{constructor(e){super(e||{})}call(t,e){return j(()=>{var e=Oe(t);return As(e,1)})}};By.className="GlobalMaxPooling1D",ae.registerClass(By);var WS=class extends Ge{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ct(this.dataFormat),this.inputSpec=[new Dt({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Fe}getConfig(){var e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Vy=class extends WS{call(t,e){return j(()=>{var e=Oe(t);return"channelsLast"===this.dataFormat?St(e,[1,2]):St(e,[2,3])})}};Vy.className="GlobalAveragePooling2D",ae.registerClass(Vy);var Wy=class extends WS{call(t,e){return j(()=>{var e=Oe(t);return"channelsLast"===this.dataFormat?As(e,[1,2]):As(e,[2,3])})}};Wy.className="GlobalMaxPooling2D",ae.registerClass(Wy);var US=class extends Ge{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){var e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,a={}){a=ms(t.layer,a);delete t.layer;a={layer:a};return Object.assign(a,t),new e(a)}},Uy=class extends US{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=nt(e)).length<3)throw new U(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];var t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){let t=[(e=nt(e))[0]].concat(e.slice(2)),a=this.layer.computeOutputShape(t),r=e[1];return[a[0],r].concat(a.slice(1))}call(e,a){return j(()=>FS((e,t)=>[Oe(this.layer.call(e,a)),[]],e=Oe(e),[],!1,null,null,!1,!0)[1])}};function qB(e){mi(QM,"BidirectionalMergeMode",e)}Uy.className="TimeDistributed",ae.registerClass(Uy);var jB="concat",Gy=class extends US{constructor(e){super(e);let t=e.layer.getConfig(),a={};a.className=e.layer.getClassName(),a.config=t,this.forwardLayer=ms(a),t.goBackwards=!0!==t.goBackwards;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=ms(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?jB:e.mergeMode,qB(this.mergeMode),e.weights)throw new Fe("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){var t=e.length,t=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,t)),this.backwardLayer.setWeights(e.slice(t))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let a,r,n;return this.returnState&&(n=t.slice(1)),a=t[0],a=a,r="concat"===this.mergeMode?(a[a.length-1]*=2,[a]):null==this.mergeMode?[a,a.slice()]:[a],this.returnState?(null==this.mergeMode?r:[a]).concat(n).concat(n.slice()):bn(r)}apply(e,t){let a=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});var n=DS(e,a,r,this.numConstants);if(e=n.inputs,a=n.initialState,r=n.constants,Array.isArray(e)&&(a=e.slice(1),e=e[0]),(null==a||0===a.length)&&null==r)return super.apply(e,t);let s=[],i=[];if(null!=a){var o=a.length;if(0<o%2)throw new U("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=a,s.push(...a);let e=a.map(e=>new Dt({shape:e.shape}));this.forwardLayer.stateSpec=e.slice(0,o/2),this.backwardLayer.stateSpec=e.slice(o/2),i.push(...e)}if(null!=r)throw new Fe("Support for constants in Bidirectional layers is not implemented yet.");var l,u=s[0]instanceof $s;for(l of s)if(l instanceof $s!=u)throw new U("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){var d=[e].concat(s),n=this.inputSpec.concat(i),o=this.inputSpec;this.inputSpec=n;d=super.apply(d,t);return this.inputSpec=o,d}return super.apply(e,t)}call(o,l){return j(()=>{let e=l.initialState,t,a;var r,n;a=null==e?(t=this.forwardLayer.call(o,l),this.backwardLayer.call(o,l)):(r=e.slice(0,e.length/2),n=e.slice(e.length/2),t=this.forwardLayer.call(o,Object.assign(l,{initialState:r})),this.backwardLayer.call(o,Object.assign(l,{initialState:n})));let s;this.returnState&&(Array.isArray(t)&&(s=t.slice(1).concat(a.slice(1))),t=t[0],a=a[0]),this.returnSequences&&(a=Zn(a,1));let i;return"concat"===this.mergeMode?i=$b([t,a]):"sum"===this.mergeMode?i=ie(t,a):"ave"===this.mergeMode?i=V(.5,ie(t,a)):"mul"===this.mergeMode?i=V(t,a):null==this.mergeMode&&(i=[t,a]),this.returnState?(null==this.mergeMode?i:[i]).concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){ea(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),ea(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let a;if(a=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){t=this.forwardLayer.states.map(e=>null);return(Array.isArray(a)?a:[a]).concat(t).concat(t)}return a}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){var e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){var a=ms(t.layer);if(delete t.layer,null!=t.numConstants)throw new Fe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=a,new e(r)}};function KB(e){return new Qo(e)}function XB(e){return new Xb(e)}function YB(e){return new qb(e)}function QB(e){return new jb(e)}function ZB(e){return new Kb(e)}function JB(e){return new Qb(e)}function eV(e){return new Yb(e)}function tV(e){return new sy(e)}function nV(e){return new zp(e)}function sV(e){return new ey(e)}function rV(e){return new Mp(e)}function aV(e){return new ty(e)}function iV(e){return new ny(e)}function oV(e){return new ry(e)}function uV(e){return new ay(e)}function lV(e){return new iy(e)}function cV(e){return new fy(e)}function dV(e){return new py(e)}function pV(e){return new Up(e)}function hV(e){return new dy(e)}function fV(e){return new hy(e)}function mV(e){return new my(e)}function gV(e){return new gy(e)}function bV(e){return new by(e)}function yV(e){return new vy(e)}function vV(e){return new xy(e)}function xV(e){return new ky(e)}function wV(e){return new Cy(e)}function kV(e){return new Iy(e)}function IV(e){return new Sy(e)}function SV(e){return new wy(e)}function CV(e){return new Ny(e)}function NV(e){return new Ay(e)}function TV(e){return new Ey(e)}function $V(e){return new Ry(e)}function Hy(e){return new Fy(e)}function _V(e){return Hy(e)}function AV(e){return Hy(e)}function qy(e){return new Py(e)}function EV(e){return qy(e)}function RV(e){return qy(e)}function jy(e){return new My(e)}function DV(e){return jy(e)}function FV(e){return jy(e)}function OV(e){return new Ly(e)}function PV(e){return new Vy(e)}function GS(e){return new By(e)}function HS(e){return new Wy(e)}function qS(e){return new Dy(e)}function jS(e){return new Oy(e)}function zV(e){return new zy(e)}function MV(e){return new uy(e)}function LV(e){return new Bp(e)}function BV(e){return new ly(e)}function VV(e){return new jl(e)}function WV(e){return new oy(e)}function UV(e){return new Lp(e)}function GV(e){return new cy(e)}function HV(e){return new Wp(e)}function qV(e){return new Ar(e)}function jV(e){return new Vp(e)}function KV(e){return new Gy(e)}function XV(e){return new Uy(e)}Gy.className="Bidirectional",ae.registerClass(Gy);var YV=GS,QV=HS,ZV=qS,JV=jS;function eW(e){return new Ty(e)}function tW(e){return new $y(e)}function nW(e){return new _y(e)}function sW(e){return new yy(e)}var rW={};function aW(e,t){return Lb(e,t)}function iW(e,t){return rS(e,t)}function oW(e,t){return aS(e,t)}function uW(e,t){return Bb(e,t)}function lW(e,t){return Vb(e,t)}function cW(e,t){return sS(e,t)}function dW(e,t){return QL(e,t)}function pW(e,t){return Mb(e,t)}function hW(e,t){return Op(e,t)}function fW(e,t){return Zo(e,t)}function mW(e,t){return Zo(e,t)}function gW(e,t){return Zo(e,t)}function bW(e,t){return gi(e,t)}function yW(e,t){return gi(e,t)}function vW(e,t){return gi(e,t)}Ae(rW,{MAPE:()=>mW,MSE:()=>yW,binaryAccuracy:()=>aW,binaryCrossentropy:()=>iW,categoricalAccuracy:()=>uW,categoricalCrossentropy:()=>lW,cosineProximity:()=>pW,mape:()=>gW,meanAbsoluteError:()=>hW,meanAbsolutePercentageError:()=>fW,meanSquaredError:()=>bW,mse:()=>vW,precision:()=>cW,recall:()=>dW,sparseCategoricalAccuracy:()=>oW});var xW={};Ae(xW,{modelFromJSON:()=>EB});var wW={};function kW(e){return new Gl(e)}function IW(e){return PB(e)}function SW(e){return zB(e)}Ae(wW,{l1:()=>IW,l1l2:()=>kW,l2:()=>SW});var CW=class extends Ji{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof pr))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function jc(e,t){return e<t}function Gx(e,t){return t<e}var NW=class extends CW{constructor(e){if(super(),(e=null==e?{}:e).restoreBestWeights)throw new Fe("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"!==this.mode&&("max"===this.mode||-1!==this.monitor.indexOf("acc"))?this.monitorFunc=Gx:this.monitorFunc=jc,this.monitorFunc===jc&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===jc?1/0:-1/0}async onEpochEnd(e,t){await rr(t);t=this.getMonitorValue(t);null!=t&&(this.monitorFunc(t-this.minDelta,this.best)?(this.best=t,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){0<this.stoppedEpoch&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){var t=(e=null==e?{}:e)[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function TW(e){return new NW(e)}var Ape={earlyStopping:TW},$W=X();$W.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Hx,KS=(e=>(e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF",e))(KS||{});(e=>{(e=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(Hx=Hx||{});var Ky={};function Epe(e,t){Ky[e]={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t}}function XS(e){return Ky[e]}function Rpe(e){delete Ky[e]}function I(e,a,r,n,s){var i=a.inputParams[e];if(i&&void 0!==i.inputIndexStart){var o=i.inputIndexStart,l=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?o+1:i.inputIndexEnd;if("tensor"===i.type)return un(a.inputNames[i.inputIndexStart],r,n,s);if("tensors"===i.type)return a.inputNames.slice(o,l).map(e=>un(e,r,n,s));let e=un(a.inputNames.slice(o)[0],r,n,s),t=e.dataSync();return"number"===i.type?t[0]:w.toNestedArray(e.shape,t)}e=a.attrParams[e];return e&&e.value}function un(e,t,a,r){let[n,s]=An(e);if(null!=r){r=r.getHashTableHandleByName(n);if(null!=r)return r}a=a.currentContextIds.find(e=>!!t[Ed(n,e)]);return void 0!==a?t[Ed(n,a)][s]:void 0}function _W(e,t,a){return t[Ed(e,a.currentContextId)]}function Ts(e,t){var[a,r,e]=An(e);return[Ed(a,t&&t.currentContextId),r,e]}function Ed(e,t){return t?`${e}-${t}`:e}function An(e){var t=e.split(":");if(1===t.length)return[e,0,void 0];var a=t[0],e=3===t.length?t[1]:void 0;return[a,Number(t[t.length-1]),e]}function sd(e,a,r){let n=I("pad",e,a,r);if("explicit"!==n)return n;{n=I("explicitPaddings",e,a,r);let t=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)t[e][0]=n[2*e],t[e][1]=n[2*e+1];return t}}function Us(e){return e.kept?e:lr(e)}var YS={};Ae(YS,{json:()=>AW});var AW=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],QS={};Ae(QS,{json:()=>EW});var EW=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ZS={};Ae(ZS,{json:()=>RW});var RW=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],JS={};Ae(JS,{json:()=>DW});var DW=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],e0={};Ae(e0,{json:()=>FW});var FW=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],t0={};Ae(t0,{json:()=>OW});var OW=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],n0={};Ae(n0,{json:()=>PW});var PW=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],s0={};Ae(s0,{json:()=>zW});var zW=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],r0={};Ae(r0,{json:()=>MW});var MW=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],a0={};Ae(a0,{json:()=>LW});var LW=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],i0={};Ae(i0,{json:()=>BW});var BW=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],o0={};Ae(o0,{json:()=>VW});var VW=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],u0={};Ae(u0,{json:()=>WW});var WW=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],l0={};Ae(l0,{json:()=>UW});var UW=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],c0={};Ae(c0,{json:()=>GW});var GW=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],d0={};Ae(d0,{json:()=>HW});var HW=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],p0={};Ae(p0,{json:()=>qW});var qW=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],h0={};Ae(h0,{json:()=>jW});var jW=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],f0={};Ae(f0,{json:()=>KW});var KW=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],qx=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[YS,QS,ZS,JS,e0,t0,n0,s0,r0,a0,i0,o0,u0,l0,c0,d0,p0,h0,f0],t=[].concat(...e.map(e=>e.json));this.opMappers=t.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){let a=e.node,r=[],n=[],s=[],i=a.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?n.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e),{}),o=[],l=[],u={},d={};null!=t&&(u=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));let p=Object.keys(i);p.forEach(e=>{let s=i[e];s.inputNames.forEach((e,t)=>{let[a,,r]=Ts(e),n=i[a];null==n.outputs||-1!==(e=n.outputs.indexOf(r))&&(e=`${a}:${e}`,s.inputNames[t]=e),s.inputs.push(n),n.children.push(s)})}),0===Object.keys(d).length?p.forEach(e=>{e=i[e];0===e.children.length&&l.push(e)}):Object.keys(d).forEach(e=>{let[t]=Ts(e),a=i[t];null!=a&&(a.signatureKey=d[e],l.push(a))}),0<Object.keys(u).length?Object.keys(u).forEach(e=>{let[t]=Ts(e),a=i[t];a&&(a.signatureKey=u[e],o.push(a))}):o=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));let c={nodes:i,inputs:o,outputs:l,weights:n,placeholders:r,signature:t,functions:h};return 0<s.length&&(c.initNodes=s),c}mapSignatureEntries(a){return Object.keys(a||{}).reduce((e,t)=>(e[a[t].name]=t,e),{})}mapNode(n){let e=XS(n.op)||this.opMappers[n.op]||{};null==n.attr&&(n.attr={});let t={name:n.name,op:n.op,category:e.category,inputNames:(n.input||[]).map(e=>e.startsWith("^")?e.slice(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:n.attr,outputs:e.outputs};return null!=e.inputs&&(t.inputParams=e.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=e.attrs&&(t.attrParams=e.attrs.reduce((e,t)=>{let a=t.type,r;switch(t.type){case"string":r=Nm(n.attr,t.tfName,t.defaultValue),void 0===r&&t.tfDeprecatedName&&(r=Nm(n.attr,t.tfDeprecatedName,t.defaultValue));break;case"string[]":r=Dm(n.attr,t.tfName,t.defaultValue),void 0===r&&t.tfDeprecatedName&&(r=Dm(n.attr,t.tfDeprecatedName,t.defaultValue));break;case"number":r=$m(n.attr,t.tfName,t.defaultValue||0),void 0===r&&t.tfDeprecatedName&&(r=$m(n.attr,t.tfDeprecatedName,t.defaultValue));break;case"number[]":r=Rm(n.attr,t.tfName,t.defaultValue),void 0===r&&t.tfDeprecatedName&&(r=Rm(n.attr,t.tfDeprecatedName,t.defaultValue));break;case"bool":r=Tm(n.attr,t.tfName,t.defaultValue),void 0===r&&t.tfDeprecatedName&&(r=Tm(n.attr,t.tfDeprecatedName,t.defaultValue));break;case"bool[]":r=Om(n.attr,t.tfName,t.defaultValue),void 0===r&&t.tfDeprecatedName&&(r=Om(n.attr,t.tfDeprecatedName,t.defaultValue));break;case"shape":r=Em(n.attr,t.tfName,t.defaultValue),void 0===r&&t.tfDeprecatedName&&(r=Em(n.attr,t.tfDeprecatedName,t.defaultValue));break;case"shape[]":r=Fm(n.attr,t.tfName,t.defaultValue),void 0===r&&t.tfDeprecatedName&&(r=Fm(n.attr,t.tfDeprecatedName,t.defaultValue));break;case"dtype":r=_m(n.attr,t.tfName,t.defaultValue),void 0===r&&t.tfDeprecatedName&&(r=_m(n.attr,t.tfDeprecatedName,t.defaultValue));break;case"dtype[]":r=Am(n.attr,t.tfName,t.defaultValue),void 0===r&&t.tfDeprecatedName&&(r=Am(n.attr,t.tfDeprecatedName,t.defaultValue));break;case"func":r=jx(n.attr,t.tfName,t.defaultValue),void 0===r&&t.tfDeprecatedName&&(r=jx(n.attr,t.tfDeprecatedName,t.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${t.type} for op: ${n.op}`)}return e[t.name]={value:r,type:a},e},{})),t}mapFunction(e){let t=e.nodeDef,a=[],i={};null!=t&&(i=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&a.push(e[t.name]),e),{}));let r=[],n=[];e.signature.inputArg.forEach(e=>{let[t]=Ts(e.name),a={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Xy(e.type),type:"dtype"}},children:[]};a.signatureKey=e.name,r.push(a),i[t]=a}),Object.keys(i).forEach(e=>{let s=i[e];s.inputNames.forEach((e,t)=>{let[a,,r]=Ts(e),n=i[a];null==n.outputs||-1!==(e=n.outputs.indexOf(r))&&(e=`${a}:${e}`,s.inputNames[t]=e),s.inputs.push(n),n.children.push(s)})});let s=e.ret;e.signature.outputArg.forEach(e=>{let[t,a]=Ts(s[e.name]),r=i[t];null!=r&&(r.defaultOutput=a,n.push(r))});e=this.mapArgsToSignature(e);return{nodes:i,inputs:r,outputs:n,weights:a,placeholders:[],signature:e}}mapArgsToSignature(a){return{methodName:a.signature.name,inputs:a.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:a.signature.outputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t,a.ret),e),{})}}mapArgToTensorInfo(e,t){let a=e.name;return null!=t&&(a=t[a]),{name:a,dtype:e.type}}};function XW(e){let t=X().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function m0(e,t){let a=Array.isArray(e)?String.fromCharCode.apply(null,e):XW(e);return t?a:a.toLowerCase()}function Nm(e,t,a,r=!1){t=e[t];return null!=t?m0(t.s,r):a}function Tm(e,t,a){t=e[t];return t?t.b:a}function $m(e,t,a){t=e[t]||{},a=null!=t.i?t.i:null!=t.f?t.f:a;return"number"==typeof a?a:parseInt(a,10)}function Xy(e){switch(e="string"==typeof e?KS[e]:e){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function jx(e,t,a){t=e[t];return t&&t.func?t.func.name:a}function _m(e,t,a){t=e[t];return t&&t.type?Xy(t.type):a}function Am(e,t,a){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>Xy(e)):a}function g0(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function Em(e,t,a){t=e[t];return t&&t.shape?g0(t.shape):a}function Rm(e,t,a){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):a}function Dm(e,t,a,r=!1){let n=e[t];return n&&n.list&&n.list.s?n.list.s.map(e=>m0(e,r)):a}function Fm(e,t,a){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>g0(e)):a}function Om(e,t,a){t=e[t];return t&&t.list&&t.list.b?t.list.b:a}var YW=class{constructor(e,t,a){this.node=e,this.tensorMap=t,this.context=a,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return un(e,this.tensorMap,this.context)}getAttr(e,t){var a=this.node.rawAttrs[e];if(null!=a.tensor)return un(e,this.tensorMap,this.context);if(null!=a.i||null!=a.f)return $m(this.node.rawAttrs,e,t);if(null!=a.s)return Nm(this.node.rawAttrs,e,t);if(null!=a.b)return Tm(this.node.rawAttrs,e,t);if(null!=a.shape)return Em(this.node.rawAttrs,e,t);if(null!=a.type)return _m(this.node.rawAttrs,e,t);if(null!=a.list){if(null!=a.list.i||null!=a.list.f)return Rm(this.node.rawAttrs,e,t);if(null!=a.list.s)return Dm(this.node.rawAttrs,e,t);if(null!=a.list.shape)return Fm(this.node.rawAttrs,e,t);if(null!=a.list.b)return Om(this.node.rawAttrs,e,t);if(null!=a.list.type)return Am(this.node.rawAttrs,e,t)}return t}},QW=(e,t,a)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ie(I("a",e,t,a),I("b",e,t,a))];case"AddN":return[KA(I("tensors",e,t,a))];case"FloorMod":case"Mod":return[kD(I("a",e,t,a),I("b",e,t,a))];case"Mul":return[V(I("a",e,t,a),I("b",e,t,a))];case"RealDiv":case"Div":return[xe(I("a",e,t,a),I("b",e,t,a))];case"DivNoNan":return[vR(I("a",e,t,a),I("b",e,t,a))];case"FloorDiv":return[Hk(I("a",e,t,a),I("b",e,t,a))];case"Sub":return[ge(I("a",e,t,a),I("b",e,t,a))];case"Minimum":return[bp(I("a",e,t,a),I("b",e,t,a))];case"Maximum":return[$r(I("a",e,t,a),I("b",e,t,a))];case"Pow":return[pa(I("a",e,t,a),I("b",e,t,a))];case"SquaredDifference":return[wI(I("a",e,t,a),I("b",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},ZW=(e,t,a)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Mt(I("x",e,t,a))];case"Acos":return[GA(I("x",e,t,a))];case"Acosh":return[qA(I("x",e,t,a))];case"Asin":return[tE(I("x",e,t,a))];case"Asinh":return[sE(I("x",e,t,a))];case"Atan":return[aE(I("x",e,t,a))];case"Atan2":return[oE(I("x",e,t,a),I("y",e,t,a))];case"Atanh":return[lE(I("x",e,t,a))];case"Ceil":return[ME(I("x",e,t,a))];case"Complex":return[oa(I("real",e,t,a),I("imag",e,t,a))];case"Cos":return[jg(I("x",e,t,a))];case"Cosh":return[nI(I("x",e,t,a))];case"Elu":return[fp(I("x",e,t,a))];case"Erf":return[CR(I("x",e,t,a))];case"Exp":return[Xn(I("x",e,t,a))];case"Expm1":return[_R(I("x",e,t,a))];case"Floor":return[mp(I("x",e,t,a))];case"Log":return[Yn(I("x",e,t,a))];case"Log1p":return[Yg(I("x",e,t,a))];case"Imag":return[Kg(I("x",e,t,a))];case"Neg":return[kt(I("x",e,t,a))];case"Reciprocal":return[ZD(I("x",e,t,a))];case"Real":return[wd(I("x",e,t,a))];case"Relu":return[Xs(I("x",e,t,a))];case"Round":return[fI(I("x",e,t,a))];case"Selu":return[gI(I("x",e,t,a))];case"Sigmoid":return[qs(I("x",e,t,a))];case"Sin":return[bI(I("x",e,t,a))];case"Sign":return[f3(I("x",e,t,a))];case"Sinh":return[yI(I("x",e,t,a))];case"Softplus":return[zl(I("x",e,t,a))];case"Sqrt":return[dn(I("x",e,t,a))];case"Square":return[ct(I("x",e,t,a))];case"Tanh":return[qu(I("x",e,t,a))];case"Tan":return[O3(I("x",e,t,a))];case"ClipByValue":return[Vn(I("x",e,t,a),I("clipValueMin",e,t,a),I("clipValueMax",e,t,a))];case"Relu6":return[hI(I("x",e,t,a))];case"Rsqrt":return[mI(un(e.inputNames[0],t,a))];case"Prod":return[pI(I("x",e,t,a),I("axes",e,t,a))];case"LeakyRelu":return[Xg(I("x",e,t,a),I("alpha",e,t,a))];case"Prelu":return[sb(I("x",e,t,a),I("alpha",e,t,a))];case"IsNan":return[BR(un(e.inputNames[0],t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Hn(t,a,r=""){if("number"!=typeof t&&"number"!=typeof a){w.assert(t.length===a.length,()=>r+` Shapes ${t} and ${a} must match`);for(let e=0;e<t.length;e++){var n=t[e],s=a[e];w.assert(n<0||s<0||n===s,()=>r+` Shapes ${t} and ${a} must match`)}}}function Kx(e){return!("number"==typeof e||e.some(e=>e<0))}function Nu(e,t,a){let r=Pm(e,a),n=!Kx(r);if(n&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(n&&t.forEach(e=>{r=Pm(e.shape,r)}),!Kx(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Pm(t,a){if("number"==typeof t)return a;if("number"==typeof a)return t;if(t.length!==a.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${a}`);let r=[];for(let e=0;e<t.length;++e){var n=t[e],s=a[e];if(0<=n&&0<=s&&n!==s)throw new Error(`Incompatible shape during merge: ${t} vs. ${a}`);r[e]=0<=n?n:s}return r}var JW=class{constructor(e,t,a,r,n,s,i){this.name=e,this.dtype=t,this.maxSize=a,this.elementShape=r,this.identicalElementShapes=n,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=we(0),Ht(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let a=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Hn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),a.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(a.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);Ht(a.tensor=t),a.written=!0,this.tensors[e]=a}writeMany(e,a){if(e.length!==a.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${a.length}.`);e.forEach((e,t)=>this.write(e,a[t]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return fs([],[0].concat(this.elementShape));e=this.readMany(t);return Hn(this.elementShape,e[0].shape,"TensorArray shape mismatch: "),Jn(e,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return fs([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);e=this.readMany(t);return Hn(this.elementShape,e[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${e[0].shape})`),Ft(e,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);var a=Math.max(...e);if(!this.dynamicSize&&a>=this.maxSize)throw new Error(`Max index must be < array size (${a}  vs. ${this.maxSize})`);this.writeMany(e,Fs(t,0))}split(r,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);let s=0,i=r.map(e=>(s+=e,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);if(!this.dynamicSize&&r.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${r.length}), and the TensorArray is not marked as dynamically resizeable`);let o=0===s?0:n.size/s,l=[];j(()=>{n=G(n,[1,s,o]);for(let e=0;e<r.length;++e){var t=[0,0===e?0:i[e-1],0],a=[1,r[e],o];l[e]=G(He(n,t,a),this.elementShape)}return l});let t=[];for(let e=0;e<r.length;e++)t[e]=e;this.writeMany(t,l)}},eo=class{constructor(e,t,a,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=a,null!=e&&e.forEach(e=>{if(a!==e.dtype)throw new Error(`Invalid data types; op elements ${a}, but list elements ${e.dtype}`);Hn(t,e.shape,"TensorList shape mismatch: "),Ht(e)}),this.idTensor=we(0),this.maxNumElements=r,Ht(this.idTensor)}get id(){return this.idTensor.id}copy(){return new eo([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.id)||e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,a=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==a&&this.tensors.length!==a)throw new Error(`Operation expected a list with ${a} elements but got a list with ${this.tensors.length} elements.`);Hn(e,this.elementShape,"TensorList shape mismatch: ");let r=Nu(this.elementShape,this.tensors,e);return j(()=>{var e=this.tensors.map(e=>G(e,r));return Jn(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");var a=Nu(this.elementShape,this.tensors,e),t=this.tensors.pop();return Hn(t.shape,e,"TensorList shape mismatch: "),G(t,a)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Hn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ht(e),this.tensors.push(e)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let a=new eo([],this.elementShape,this.elementDtype,this.maxNumElements);a.tensors.length=t;for(let e=0;e<Math.min(this.tensors.length,t);++e)a.tensors[e]=this.tensors[e];return a}getItem(e,t,a){if(a!==this.elementDtype)throw new Error(`Invalid data types; op elements ${a}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);Hn(this.tensors[e].shape,t,"TensorList shape mismatch: ");t=Nu(this.elementShape,this.tensors,t);return G(this.tensors[e],t)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Hn(this.elementShape,t.shape,"TensorList shape mismatch: "),Ht(t),this.tensors[e]=t}gather(t,e,a){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);Hn(this.elementShape,a,"TensorList shape mismatch: "),t=t.slice(0,this.size());let r=Nu(this.elementShape,this.tensors,a);return 0===t.length?fs([],[0].concat(r)):j(()=>{var e=t.map(e=>G(this.tensors[e],r));return Jn(e,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Hn(this.elementShape,t,"TensorList shape mismatch: ");let a=Nu(this.elementShape,this.tensors,t);return 0===this.size()?fs([],[0].concat(a)):j(()=>{var e=this.tensors.map(e=>G(e,a));return Ft(e,0)})}};function e4(e,t,a){var r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==a)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${a}`);Hn(e.shape.slice(1),t,"TensorList shape mismatch: ");e=Fs(e);return new eo(e,t,r)}function t4(e,t,a){return new eo([],e,t,a)}function n4(e,t,a,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);var n=Math.max(...t);if(null!=r&&-1!==r&&r<=n)throw new Error(`Max index must be < array size (${n}  vs. ${r})`);let s=new eo([],a,e.dtype,r),i=Fs(e,0);return t.forEach((e,t)=>{s.setItem(e,i[t])}),s}function s4(n,s,e){let i=0,o=s.map(e=>(i+=e,i));if(i!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${i}, and tensor's shape is: ${n.shape}`);let t=n.shape.slice(1),l=Pm(t,e),u=0===i?0:n.size/i,a=j(()=>{let t=[];n=G(n,[1,i,u]);for(let e=0;e<s.length;++e){var a=[0,0===e?0:o[e-1],0],r=[1,s[e],u];t[e]=G(He(n,a,r),l)}return n.dispose(),t}),r=new eo([],e,n.dtype,s.length);for(let e=0;e<a.length;e++)r.setItem(e,a[e]);return r}var r4=async(l,u,d)=>{switch(l.op){case"If":case"StatelessIf":{let e=I("thenBranch",l,u,d),t=I("elseBranch",l,u,d),a=I("cond",l,u,d),r=I("args",l,u,d);return((await a.data())[0]?d.functionMap[e]:d.functionMap[t]).executeFunctionAsync(r,d.tensorArrayMap,d.tensorListMap)}case"While":case"StatelessWhile":{let r=I("body",l,u,d),n=I("cond",l,u,d),e=I("args",l,u,d),t=await d.functionMap[n].executeFunctionAsync(e,d.tensorArrayMap,d.tensorListMap),s=e.map(e=>e.id),i=await t[0].data();t.forEach(e=>{e.kept||-1!==s.indexOf(e.id)||e.dispose()});let o=e;for(;i[0];){let e=o;o=await d.functionMap[r].executeFunctionAsync(o,d.tensorArrayMap,d.tensorListMap);let t=o.map(e=>e.id);e.forEach(e=>{e.kept||-1!==s.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});let a=await d.functionMap[n].executeFunctionAsync(o,d.tensorArrayMap,d.tensorListMap);i=await a[0].data(),a.forEach(e=>{e.kept||-1!==s.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return o}case"LoopCond":return[Us(I("pred",l,u,d))];case"Switch":{let e=I("pred",l,u,d),t=I("data",l,u,d);return t.kept||(t=Us(t)),(await e.data())[0]?[void 0,t]:[t,void 0]}case"Merge":var e=l.inputNames.find(e=>void 0!==un(e,u,d));return e?[Us(un(e,u,d))]:void 0;case"Enter":var t=I("frameName",l,u,d),a=I("tensor",l,u,d);return d.enterFrame(t),[Us(a)];case"Exit":var r=I("tensor",l,u,d);return d.exitFrame(),[Us(r)];case"NextIteration":var n=I("tensor",l,u,d);return d.nextIteration(),[Us(n)];case"TensorArrayV3":var s=I("size",l,u,d),e=I("dtype",l,u,d),t=I("elementShape",l,u,d),a=I("dynamicSize",l,u,d),i=I("clearAfterRead",l,u,d),r=I("identicalElementShapes",l,u,d),n=I("name",l,u,d),i=new JW(n,e,s,t,r,a,i);return d.addTensorArray(i),[i.idTensor,we(1)];case"TensorArrayWriteV3":{let e=I("tensorArrayId",l,u,d),t=I("index",l,u,d),a=I("tensor",l,u,d),r=d.getTensorArray(e.id);return r.write(t,a),[r.idTensor]}case"TensorArrayReadV3":var i=I("tensorArrayId",l,u,d),o=I("index",l,u,d);return[d.getTensorArray(i.id).read(o)];case"TensorArrayGatherV3":var p=I("tensorArrayId",l,u,d),h=I("indices",l,u,d),c=I("dtype",l,u,d);return[d.getTensorArray(p.id).gather(h,c)];case"TensorArrayScatterV3":{let e=I("tensorArrayId",l,u,d),t=I("indices",l,u,d),a=I("tensor",l,u,d),r=d.getTensorArray(e.id);return r.scatter(t,a),[r.idTensor]}case"TensorArrayConcatV3":{let e=I("tensorArrayId",l,u,d),t=d.getTensorArray(e.id),a=I("dtype",l,u,d);return[t.concat(a)]}case"TensorArraySplitV3":{let e=I("tensorArrayId",l,u,d),t=I("tensor",l,u,d),a=I("lengths",l,u,d),r=d.getTensorArray(e.id);return r.split(a,t),[r.idTensor]}case"TensorArraySizeV3":{let e=I("tensorArrayId",l,u,d),t=d.getTensorArray(e.id);return[we(t.size(),"int32")]}case"TensorArrayCloseV3":{let e=I("tensorArrayId",l,u,d),t=d.getTensorArray(e.id);return t.clearAndClose(),[t.idTensor]}case"TensorListSetItem":{let e=I("tensorListId",l,u,d),t=I("index",l,u,d),a=I("tensor",l,u,d),r=d.getTensorList(e.id);return r.setItem(t,a),[r.idTensor]}case"TensorListGetItem":o=I("tensorListId",l,u,d),p=I("index",l,u,d),h=I("elementShape",l,u,d),c=I("elementDType",l,u,d);return[d.getTensorList(o.id).getItem(p,h,c)];case"TensorListScatterV2":case"TensorListScatter":var f=I("indices",l,u,d),f=n4(I("tensor",l,u,d),f,I("elementShape",l,u,d),I("numElements",l,u,d));return d.addTensorList(f),[f.idTensor];case"TensorListReserve":case"EmptyTensorList":{let e=I("elementShape",l,u,d),t=I("elementDType",l,u,d),a;a="TensorListReserve"===l.op?"numElements":"maxNumElements";var m=t4(e,t,I(a,l,u,d));return d.addTensorList(m),[m.idTensor]}case"TensorListGather":var f=I("tensorListId",l,u,d),m=I("indices",l,u,d),g=I("elementShape",l,u,d),b=I("elementDType",l,u,d);return[d.getTensorList(f.id).gather(m,b,g)];case"TensorListStack":var b=I("tensorListId",l,u,d),g=I("elementShape",l,u,d),y=I("elementDType",l,u,d),v=I("numElements",l,u,d);return[d.getTensorList(b.id).stack(g,y,v)];case"TensorListFromTensor":var x=e4(I("tensor",l,u,d),I("elementShape",l,u,d),I("elementDType",l,u,d));return d.addTensorList(x),[x.idTensor];case"TensorListConcat":{let e=I("tensorListId",l,u,d),t=d.getTensorList(e.id),a=I("dtype",l,u,d),r=I("elementShape",l,u,d);return[t.concat(a,r)]}case"TensorListPushBack":{let e=I("tensorListId",l,u,d),t=I("tensor",l,u,d),a=d.getTensorList(e.id);return a.pushBack(t),[a.idTensor]}case"TensorListPopBack":y=I("tensorListId",l,u,d),v=I("elementShape",l,u,d),x=I("elementDType",l,u,d);return[d.getTensorList(y.id).popBack(v,x)];case"TensorListSplit":var w=I("tensor",l,u,d),k=I("elementShape",l,u,d),w=s4(w,I("lengths",l,u,d),k);return d.addTensorList(w),[w.idTensor];case"TensorListLength":{let e=I("tensorListId",l,u,d),t=d.getTensorList(e.id);return[we(t.size(),"int32")]}case"TensorListResize":k=I("tensorListId",l,u,d),w=I("size",l,u,d),w=d.getTensorList(k.id).resize(w);return d.addTensorList(w),[w.idTensor];default:throw TypeError(`Node type ${l.op} is not implemented`)}};function Xx(e,t,a){var[r,n]=I("fusedOps",e,t,a),s="biasadd"===r,i=!s,o="prelu"===n,l="fusedbatchnorm"===r,r=I("numArgs",e,t,a);if(s){if(o&&2!==r)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==r)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let u=I("strides",e,t,a),d=sd(e,t,a),p=I("dataFormat",e,t,a).toUpperCase(),h=I("dilations",e,t,a),[c,f]=I("args",e,t,a);i&&(f=c,c=void 0);a=I("leakyreluAlpha",e,t,a);return{stride:u,pad:d,dataFormat:p,dilations:h,biasArg:c,preluArg:f,activationFunc:n,leakyreluAlpha:a}}var a4=(e,t,a)=>{switch(e.op){case"Conv1D":var r=I("stride",e,t,a),n=I("pad",e,t,a),s=I("dataFormat",e,t,a).toUpperCase(),i=I("dilation",e,t,a);return[Zk(I("x",e,t,a),I("filter",e,t,a),r,n,s,i)];case"Conv2D":r=I("strides",e,t,a),n=sd(e,t,a),s=I("dataFormat",e,t,a).toUpperCase(),i=I("dilations",e,t,a);return[ca(I("x",e,t,a),I("filter",e,t,a),[r[1],r[2]],n,s,[i[1],i[2]])];case"_FusedConv2D":var{stride:o,pad:l,dataFormat:u,dilations:d,biasArg:p,preluArg:h,activationFunc:c,leakyreluAlpha:f}=Xx(e,t,a);return[ha.conv2d({x:I("x",e,t,a),filter:I("filter",e,t,a),strides:[o[1],o[2]],pad:l,dataFormat:u,dilations:[d[1],d[2]],bias:p,activation:c,preluActivationWeights:h,leakyreluAlpha:f})];case"FusedDepthwiseConv2dNative":var{stride:o,pad:l,dataFormat:u,dilations:d,biasArg:p,preluArg:c,activationFunc:h,leakyreluAlpha:f}=Xx(e,t,a);return[ha.depthwiseConv2d({x:I("x",e,t,a),filter:I("filter",e,t,a),strides:[o[1],o[2]],pad:l,dataFormat:u,dilations:[d[1],d[2]],bias:p,activation:h,preluActivationWeights:c,leakyreluAlpha:f})];case"Conv2DBackpropInput":case"Conv2dTranspose":var m=I("outputShape",e,t,a),g=I("strides",e,t,a),b=sd(e,t,a);return[Jk(I("x",e,t,a),I("filter",e,t,a),m,[g[1],g[2]],b)];case"DepthwiseConv2dNative":case"DepthwiseConv2d":var m=I("strides",e,t,a),g=sd(e,t,a),y=I("dilations",e,t,a),b=I("dataFormat",e,t,a).toUpperCase();return[hp(I("input",e,t,a),I("filter",e,t,a),[m[1],m[2]],g,b,[y[1],y[2]])];case"Conv3D":var y=I("strides",e,t,a),v=I("pad",e,t,a),x=I("dataFormat",e,t,a).toUpperCase(),w=I("dilations",e,t,a);return[eI(I("x",e,t,a),I("filter",e,t,a),[y[1],y[2],y[3]],v,x,[w[1],w[2],w[3]])];case"AvgPool":v=I("strides",e,t,a),x=I("pad",e,t,a),w=I("kernelSize",e,t,a);return[Gg(I("x",e,t,a),[w[1],w[2]],[v[1],v[2]],x)];case"MaxPool":var k=I("strides",e,t,a),S=I("pad",e,t,a),C=I("kernelSize",e,t,a);return[eb(I("x",e,t,a),[C[1],C[2]],[k[1],k[2]],S)];case"MaxPoolWithArgmax":var C=I("strides",e,t,a),k=I("pad",e,t,a),S=I("kernelSize",e,t,a),N=I("includeBatchInIndex",e,t,a),{result:k,indexes:N}=fD(I("x",e,t,a),[S[1],S[2]],[C[1],C[2]],k,N);return[k,N];case"AvgPool3D":var T=I("strides",e,t,a),$=I("pad",e,t,a),N=I("kernelSize",e,t,a);return[Yk(I("x",e,t,a),[N[1],N[2],N[3]],[T[1],T[2],T[3]],$)];case"MaxPool3D":var _=I("strides",e,t,a),A=I("pad",e,t,a),E=I("kernelSize",e,t,a);return[dI(I("x",e,t,a),[E[1],E[2],E[3]],[_[1],_[2],_[3]],A)];case"Dilation2D":T=I("strides",e,t,a),$=I("pad",e,t,a),E=I("dilations",e,t,a),_=T[1],A=T[2],T=E[1],E=E[2];return[fR(I("x",e,t,a),I("filter",e,t,a),[_,A],$,[T,E],"NHWC")];default:throw TypeError(`Node type ${e.op} is not implemented`)}},i4=(e,t,a)=>{switch(e.op){case"Fill":var r=I("shape",e,t,a),n=I("dtype",e,t,a);return[Pl(r,I("value",e,t,a),n)];case"LinSpace":return[GR(I("start",e,t,a),I("stop",e,t,a),I("num",e,t,a))];case"Multinomial":var s=I("logits",e,t,a),r=I("numSamples",e,t,a),n=I("seed",e,t,a);return[TD(s,r,n)];case"OneHot":var i=I("indices",e,t,a),o=I("depth",e,t,a),l=I("onValue",e,t,a),u=I("offValue",e,t,a);return[vd(i,o,l,u)];case"Ones":return[Mn(I("shape",e,t,a),I("dtype",e,t,a))];case"OnesLike":return[Qn(I("x",e,t,a))];case"RandomUniform":return[Ml(I("shape",e,t,a),I("minval",e,t,a),I("maxval",e,t,a),I("dtype",e,t,a))];case"Range":return[Yu(I("start",e,t,a),I("stop",e,t,a),I("step",e,t,a),I("dtype",e,t,a))];case"TruncatedNormal":i=I("shape",e,t,a),o=I("mean",e,t,a),l=I("stdDev",e,t,a),u=I("seed",e,t,a);return[db(i,o,l,I("dtype",e,t,a),u)];case"Zeros":return[$t(I("shape",e,t,a),I("dtype",e,t,a))];case"ZerosLike":return[je(I("x",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Hf(e,t,a){return{boxes:I("boxes",e,t,a),scores:I("scores",e,t,a),maxOutputSize:I("maxOutputSize",e,t,a),iouThreshold:I("iouThreshold",e,t,a),scoreThreshold:I("scoreThreshold",e,t,a),softNmsSigma:I("softNmsSigma",e,t,a)}}var o4=async(a,r,n)=>{switch(a.op){case"NonMaxSuppressionV5":var{boxes:e,scores:t,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=Hf(a,r,n),l=await qn.nonMaxSuppressionWithScoreAsync(e,t,s,i,o,l);return[l.selectedIndices,l.selectedScores];case"NonMaxSuppressionV4":var{boxes:l,scores:u,maxOutputSize:d,iouThreshold:p,scoreThreshold:h}=Hf(a,r,n),c=I("padToMaxOutputSize",a,r,n),u=await qn.nonMaxSuppressionPaddedAsync(l,u,d,p,h,c);return[u.selectedIndices,u.validOutputs];case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":var{boxes:d,scores:p,maxOutputSize:h,iouThreshold:c,scoreThreshold:u}=Hf(a,r,n);return[await qn.nonMaxSuppressionAsync(d,p,h,c,u)];case"Where":{let e=ce(I("condition",a,r,n),"bool"),t=[await II(e)];return e.dispose(),t}case"ListDiff":return p3(I("x",a,r,n),I("y",a,r,n));default:throw TypeError(`Node type ${a.op} is not implemented`)}},u4=(e,t,a)=>{switch(e.op){case"TopKV2":var r=I("x",e,t,a),n=I("k",e,t,a),s=I("sorted",e,t,a),s=z3(r,n,s);return[s.values,s.indices];case"Unique":var i=I("x",e,t,a),o=hx(i);return[o.values,o.indices];case"UniqueV2":i=I("x",e,t,a),o=I("axis",e,t,a),o=hx(i,o);return[o.values,o.indices];default:throw TypeError(`Node type ${e.op} is not implemented`)}},l4=(n,s,i)=>{switch(n.op){case"Const":return s[n.name];case"PlaceholderWithDefault":var o=I("default",n,s,i);return[un(n.name,s,i)||o];case"Placeholder":return[un(n.name,s,i)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[Us(I("x",n,s,i))];case"IdentityN":return I("x",n,s,i).map(e=>Us(e));case"Snapshot":return[Us(I("x",n,s,i))];case"Shape":return[Zt(I("x",n,s,i).shape,"int32")];case"ShapeN":return I("x",n,s,i).map(e=>Zt(e.shape));case"Size":return[we(I("x",n,s,i).size,"int32")];case"Rank":return[we(I("x",n,s,i).rank,"int32")];case"NoOp":return[we(1)];case"Print":let e=I("x",n,s,i),t=I("data",n,s,i),a=I("message",n,s,i),r=I("summarize",n,s,i);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(a);for(let e=0;e<t.length;e++)console.log(Array.prototype.slice.call(t[e].dataSync()).slice(0,r));return[e];default:throw TypeError(`Node type ${n.op} is not implemented`)}},c4=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=we(0),this.tensorMap=new Map,Ht(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return we(this.size(),"int32")}async import(e,s){this.checkKeyAndValueTensor(e,s);let i=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),j(()=>{let t=Fs(s),a=i.length,e=t.length;w.assert(a===e,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${e} elements.`);for(let e=0;e<a;e++){var r=i[e],n=t[e];Ht(n),this.tensorMap.set(r,n)}return this.handle})}async find(e,r){this.checkKeyAndValueTensor(e,r);let n=await e.data();return j(()=>{let t=[];for(let e=0;e<n.length;e++){var a=n[e],a=this.findWithDefault(a,r);t.push(a)}return Jn(t)})}findWithDefault(e,t){e=this.tensorMap.get(e);return null!=e?e:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},d4=async(e,t,a,r)=>{switch(e.op){case"HashTable":case"HashTableV2":var n=I("keyDType",e,t,a),s=I("valueDType",e,t,a),s=new c4(n,s);return r.addHashTable(e.name,s),[s.handle];case"LookupTableImport":case"LookupTableImportV2":var s=I("tableHandle",e,t,a,r),i=I("keys",e,t,a),o=I("values",e,t,a);return[await r.getHashTableById(s.id).import(i,o)];case"LookupTableFind":case"LookupTableFindV2":var i=I("tableHandle",e,t,a,r),o=I("keys",e,t,a),l=I("defaultValue",e,t,a);return[await r.getHashTableById(i.id).find(o,l)];case"LookupTableSize":case"LookupTableSizeV2":l=I("tableHandle",e,t,a,r);return[r.getHashTableById(l.id).tensorSize()];default:throw TypeError(`Node type ${e.op} is not implemented`)}},p4=(i,o,l)=>{switch(i.op){case"ResizeBilinear":var e=I("images",i,o,l),t=I("size",i,o,l),a=I("alignCorners",i,o,l),r=I("halfPixelCenters",i,o,l);return[qn.resizeBilinear(e,[t[0],t[1]],a,r)];case"ResizeNearestNeighbor":var n=I("images",i,o,l),s=I("size",i,o,l),u=I("alignCorners",i,o,l),d=I("halfPixelCenters",i,o,l);return[qn.resizeNearestNeighbor(n,[s[0],s[1]],u,d)];case"CropAndResize":a=I("image",i,o,l),r=I("boxes",i,o,l),n=I("boxInd",i,o,l),s=I("cropSize",i,o,l),u=I("method",i,o,l),d=I("extrapolationValue",i,o,l);return[qn.cropAndResize(a,r,n,s,u,d)];case"ImageProjectiveTransformV3":{let e=I("images",i,o,l),t=I("transforms",i,o,l),a=I("outputShape",i,o,l),r=I("fillValue",i,o,l),n=I("interpolation",i,o,l),s=I("fillMode",i,o,l);return[qn.transform(e,t,n.toLowerCase(),s.toLowerCase(),r,a)]}default:throw TypeError(`Node type ${i.op} is not implemented`)}},h4=(e,t,a)=>{switch(e.op){case"Equal":return[Kn(I("a",e,t,a),I("b",e,t,a))];case"NotEqual":return[Xu(I("a",e,t,a),I("b",e,t,a))];case"Greater":return[Wn(I("a",e,t,a),I("b",e,t,a))];case"GreaterEqual":return[Ko(I("a",e,t,a),I("b",e,t,a))];case"Less":return[aI(I("a",e,t,a),I("b",e,t,a))];case"LessEqual":return[Xo(I("a",e,t,a),I("b",e,t,a))];case"LogicalAnd":return[Ds(I("a",e,t,a),I("b",e,t,a))];case"LogicalNot":return[Jg(I("a",e,t,a))];case"LogicalOr":return[cI(I("a",e,t,a),I("b",e,t,a))];case"Select":case"SelectV2":return[vn(I("condition",e,t,a),I("a",e,t,a),I("b",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},f4=(e,t,a)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[We(I("a",e,t,a),I("b",e,t,a),I("transposeA",e,t,a),I("transposeB",e,t,a))];case"Einsum":return[kR(I("equation",e,t,a),...I("tensors",e,t,a))];case"Transpose":return[qe(I("x",e,t,a),I("perm",e,t,a))];case"_FusedMatMul":var[r,n]=I("fusedOps",e,t,a),s="biasadd"===r,i="prelu"===n,o=I("numArgs",e,t,a),r=I("leakyreluAlpha",e,t,a);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}var[i,o]=I("args",e,t,a);return[ha.matMul({a:I("a",e,t,a),b:I("b",e,t,a),transposeA:I("transposeA",e,t,a),transposeB:I("transposeB",e,t,a),bias:i,activation:n,preluActivationWeights:o,leakyreluAlpha:r})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},m4=(e,t,a)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[ju(I("x",e,t,a),I("mean",e,t,a),I("variance",e,t,a),I("offset",e,t,a),I("scale",e,t,a),I("epsilon",e,t,a))];case"LRN":return[qR(I("x",e,t,a),I("radius",e,t,a),I("bias",e,t,a),I("alpha",e,t,a),I("beta",e,t,a))];case"Softmax":return[ub(I("x",e,t,a))];case"LogSoftmax":return[iI(I("x",e,t,a))];case"SparseToDense":return[NI(I("sparseIndices",e,t,a),I("outputShape",e,t,a),I("sparseValues",e,t,a),I("defaultValue",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},g4=(e,t,a)=>{switch(e.op){case"Max":var r=I("axis",e,t,a),n=I("keepDims",e,t,a);return[As(I("x",e,t,a),r,n)];case"Mean":var n=I("axis",e,t,a),s=I("keepDims",e,t,a);return[St(I("x",e,t,a),n,s)];case"Min":var s=I("axis",e,t,a),i=I("keepDims",e,t,a);return[fm(I("x",e,t,a),s,i)];case"Sum":var i=I("axis",e,t,a),o=I("keepDims",e,t,a);return[ve(I("x",e,t,a),i,o)];case"All":var o=I("axis",e,t,a),l=I("keepDims",e,t,a);return[qk(I("x",e,t,a),o,l)];case"Any":var l=I("axis",e,t,a),u=I("keepDims",e,t,a);return[pm(I("x",e,t,a),l,u)];case"ArgMax":u=I("axis",e,t,a);return[Hu(I("x",e,t,a),u)];case"ArgMin":var d=I("axis",e,t,a);return[JA(I("x",e,t,a),d)];case"Prod":var d=I("axis",e,t,a),p=I("keepDims",e,t,a);return[pI(I("x",e,t,a),d,p)];case"Cumprod":var p=I("axis",e,t,a),h=I("exclusive",e,t,a),c=I("reverse",e,t,a);return[aR(I("x",e,t,a),p,h,c)];case"Cumsum":var h=I("axis",e,t,a),c=I("exclusive",e,t,a),f=I("reverse",e,t,a);return[sI(I("x",e,t,a),h,c,f)];case"Bincount":var m=I("x",e,t,a),g=I("weights",e,t,a),b=I("size",e,t,a);return[Qk(m,g,b)];case"DenseBincount":f=I("x",e,t,a),m=I("weights",e,t,a),g=I("size",e,t,a),b=I("binaryOutput",e,t,a);return[uR(f,m,g,b)];default:throw TypeError(`Node type ${e.op} is not implemented`)}},b4=(s,i,o)=>{switch(s.op){case"ConcatV2":case"Concat":{let e=I("n",s,i,o),t=I("axis",s,i,o),a=I("tensors",s,i,o);return a=a.slice(0,e),[Ft(a,t)]}case"Gather":var e=I("x",s,i,o),t=I("indices",s,i,o);return[Ku(e,ce(t,"int32"),0)];case"GatherV2":var a=I("axis",s,i,o),r=I("batchDims",s,i,o),t=I("x",s,i,o),n=I("indices",s,i,o);return[Ku(t,ce(n,"int32"),a,r)];case"Reverse":{let t=I("dims",s,i,o),a=[];for(let e=0;e<t.length;e++)t[e]&&a.push(e);var l=I("x",s,i,o);return[Zn(l,a)]}case"ReverseV2":var u=I("axis",s,i,o),d=I("x",s,i,o);return[Zn(d,u)];case"Slice":var p=I("begin",s,i,o),h=I("size",s,i,o);return[He(I("x",s,i,o),p,h)];case"StridedSlice":var n=I("begin",s,i,o),a=I("end",s,i,o),r=I("strides",s,i,o),l=I("beginMask",s,i,o),d=I("endMask",s,i,o),u=I("ellipsisMask",s,i,o),p=I("newAxisMask",s,i,o),c=I("shrinkAxisMask",s,i,o),h=I("x",s,i,o);return[D3(h,n,a,r,l,d,u,p,c)];case"Pack":return j(()=>{let e=I("axis",s,i,o),t=I("tensors",s,i,o),a=t[0].shape,r=mr(t[0]).shape,n=t.map(e=>{var t=w.arraysEqual(e.shape,a);if(!t&&!w.arraysEqual(mr(e).shape,r))throw new Error("the input tensors shape does not match");return t?e:G(e,a)});return[Jn(n,e)]});case"Unpack":var f=I("axis",s,i,o),c=I("tensor",s,i,o);return Fs(c,f);case"Tile":var m=I("reps",s,i,o);return[ps(I("x",s,i,o),m)];case"Split":case"SplitV":var g=I("axis",s,i,o),f=I("numOrSizeSplits",s,i,o),m=I("x",s,i,o);return Bn(m,f,g);case"ScatterNd":var g=I("indices",s,i,o),b=I("values",s,i,o),y=I("shape",s,i,o);return[X3(g,b,y)];case"GatherNd":var v=I("x",s,i,o),x=I("indices",s,i,o);return[J3(v,x)];case"SparseToDense":b=I("sparseIndices",s,i,o),y=I("outputShape",s,i,o),v=I("sparseValues",s,i,o),x=I("defaultValue",s,i,o);return[NI(b,v,y,v.dtype===x.dtype?x:ce(x,v.dtype))];default:throw TypeError(`Node type ${s.op} is not implemented`)}},y4=(e,t,a)=>{switch(e.op){case"SparseFillEmptyRows":var{outputIndices:r,outputValues:n,emptyRowIndicator:s,reverseIndexMap:i}=Wc.sparseFillEmptyRows(I("indices",e,t,a),I("values",e,t,a),I("denseShape",e,t,a),I("defaultValue",e,t,a));return[r,n,s,i];case"SparseReshape":var{outputIndices:s,outputShape:i}=Wc.sparseReshape(I("inputIndices",e,t,a),I("inputShape",e,t,a),I("newShape",e,t,a));return[s,i];case"SparseSegmentMean":return[Wc.sparseSegmentMean(I("data",e,t,a),I("indices",e,t,a),I("segmentIds",e,t,a))];case"SparseSegmentSum":return[Wc.sparseSegmentSum(I("data",e,t,a),I("indices",e,t,a),I("segmentIds",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},v4=(e,t,a)=>{switch(e.op){case"FFT":return[lb(I("x",e,t,a))];case"IFFT":return[Id(I("x",e,t,a))];case"RFFT":return[cb(I("x",e,t,a))];case"IRFFT":return[xI(I("x",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},x4=(e,t,a)=>{switch(e.op){case"StringNGrams":var{nGrams:r,nGramsSplits:n}=Mf.stringNGrams(I("data",e,t,a),I("dataSplits",e,t,a),I("separator",e,t,a),I("nGramWidths",e,t,a),I("leftPad",e,t,a),I("rightPad",e,t,a),I("padWidth",e,t,a),I("preserveShortSequences",e,t,a));return[r,n];case"StringSplit":var{indices:s,values:r,shape:n}=Mf.stringSplit(I("input",e,t,a),I("delimiter",e,t,a),I("skipEmpty",e,t,a));return[s,r,n];case"StringToHashBucketFast":return[Mf.stringToHashBucketFast(I("input",e,t,a),I("numBuckets",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},w4=(e,t,a)=>{switch(e.op){case"Cast":return[ce(I("x",e,t,a),I("dtype",e,t,a))];case"ExpandDims":var r=I("axis",e,t,a);return[Pn(I("x",e,t,a),r)];case"Squeeze":var n=I("axis",e,t,a);return[mr(I("x",e,t,a),n)];case"Reshape":return[G(I("x",e,t,a),I("shape",e,t,a))];case"MirrorPad":return[xD(I("x",e,t,a),I("padding",e,t,a),I("mode",e,t,a))];case"PadV2":case"Pad":return[fi(I("x",e,t,a),I("padding",e,t,a),I("constantValue",e,t,a))];case"SpaceToBatchND":r=I("blockShape",e,t,a),n=I("paddings",e,t,a);return[nb(I("x",e,t,a),r,n)];case"BatchToSpaceND":var s=I("blockShape",e,t,a),i=I("crops",e,t,a);return[Hg(I("x",e,t,a),s,i)];case"DepthToSpace":s=I("blockSize",e,t,a),i=I("dataFormat",e,t,a).toUpperCase();return[cR(I("x",e,t,a),s,i)];case"BroadcastTo":return[nd(I("x",e,t,a),I("shape",e,t,a))];case"BroadcastArgs":return[OE(I("s0",e,t,a),I("s1",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Yx(e,t,a,n){let r=((t,a,r)=>{switch(t.category){case"arithmetic":return j(()=>QW(t,a,r));case"basic_math":return j(()=>ZW(t,a,r));case"control":return r4(t,a,r);case"convolution":return j(()=>a4(t,a,r));case"creation":return j(()=>i4(t,a,r));case"dynamic":return o4(t,a,r);case"evaluation":return j(()=>u4(t,a,r));case"image":return j(()=>p4(t,a,r));case"graph":return j(()=>l4(t,a,r));case"logical":return j(()=>h4(t,a,r));case"matrices":return j(()=>f4(t,a,r));case"normalization":return j(()=>m4(t,a,r));case"reduction":return j(()=>g4(t,a,r));case"slice_join":return j(()=>b4(t,a,r));case"sparse":return j(()=>y4(t,a,r));case"spectral":return j(()=>v4(t,a,r));case"string":return j(()=>x4(t,a,r));case"transformation":return j(()=>w4(t,a,r));case"hash_table":return d4(t,a,r,n);case"custom":let e=XS(t.op);if(e&&e.customExecutor)return e.customExecutor(new YW(t,a,r));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,a);return w.isPromise(r)?r.then(e=>[].concat(e)):[].concat(r)}var Qx=class{constructor(e={},t={},a={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=a,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let t=[];for(let e=0;e<this.contexts.length-1;e++){var a=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(a))}t.push(""),this._currentContextIds=t}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&1<this.contexts.length))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&0<this.contexts.length))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(var t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(var a in this.tensorListMap)this.tensorListMap[a].clearAndClose(e)}};function Zx(e,t,a,r){let n=new Set,s=[],i=null,o=null,l=new Set,u=Object.keys(e).map(e=>An(e)[0]),d=[];null!=r&&(d=r.map(e=>An(e.name)[0]));let p=[...t];for(;0<p.length;){let e=p.pop();(b0(e)||N4(e)||T4(e))&&null==i&&(i=e,o=i.children.map(e=>e.name).filter(e=>n.has(e))),n.add(e.name),null==a[e.name]&&-1===u.indexOf(e.name)&&-1===d.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach(e=>{l.has(e.name)||(l.add(e.name),p.push(e))}):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:n,missingInputs:s,dynamicNode:i,syncInputs:o}}function k4(t,a,e){let{usedNodes:r,inputs:n}=e,s=[],i=Object.keys(n).map(e=>An(e)[0]).map(e=>t.nodes[e]),o=t.initNodes;i.forEach(e=>{r.has(e.name)&&s.push(e)}),t.weights.forEach(e=>{r.has(e.name)&&s.push(e)}),null!=o&&o.forEach(e=>{r.has(e.name)&&s.push(e)});let l=new Set,u=[];for(;0<s.length;){let e=s.pop();l.add(e.name),a[e.name]||u.push(e),e.children.forEach(e=>{!l.has(e.name)&&r.has(e.name)&&e.inputs.every(e=>l.has(e.name))&&s.push(e)})}return u}var I4=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],S4=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],C4=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function b0(e){return 0<=I4.indexOf(e.op)}function N4(e){return 0<=S4.indexOf(e.op)}function T4(e){return 0<=C4.indexOf(e.op)}var zm=class{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(e=>{this._functionExecutorMap[e]=new zm(t.functions[e],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){var e=Object.keys(t).map(e=>t[e].map(e=>e.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{var t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let a=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return a.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){var a=Zx(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:n,syncInputs:s}=a;if(null!=n)throw new Error(`This execution contains the node '${n.name}', which has the dynamic op '${n.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(0<r.length){t=t.map(e=>e.name),e=Object.keys(e);throw new Error(`Cannot compute the outputs [${t}] from the provided inputs [${e}]. Missing the following inputs: [${r}]`)}return k4(this.graph,this.weightMap,a)}execute(o,e){o=this.mapInputs(o);let t=Object.keys(o).sort();this.checkInputs(o),this.checkInputShapeAndType(o),e=this.mapOutputs(e),this.checkOutputs(e);let a=t.map(e=>this.graph.nodes[An(e)[0]]),l=e.map(e=>An(e)[0]),r=l.map(e=>this.graph.nodes[e]);this.resetIntermediateTensors(),0===r.length&&(r=this._outputs);let n=this.getCompilationKey(a,r),u=this.compiledMap.get(n);null==u&&(u=this.compile(o,r),this.compiledMap.set(n,u));let d={},p={};return j(()=>{let t=new Qx(this.weightMap,d,p,this.functionExecutorMap),n={...this.weightMap};Object.keys(o).forEach(e=>{let[t,a]=An(e),r=[];r[a]=o[e],n[t]=r});var a=this.getFrozenTensorIds(n),r={};for(let e=0;e<u.length;e++){var s=u[e];if(!n[s.name]){var i=Yx(s,n,t,this._resourceManager);if(w.isPromise(i))throw new Error(`The execution of the op '${s.op}' returned a promise. Please use model.executeAsync() instead.`);n[s.name]=i,this.checkTensorForDisposal(s.name,s,n,t,a,l,r)}}return null==this.parent&&t.dispose(a),e.map(e=>un(e,n,t))})}getFrozenTensorIds(t){var e=[].concat.apply([],Object.keys(t).map(e=>t[e]).map(e=>e.map(e=>e.id)));return new Set(e)}checkTensorForDisposal(e,n,a,s,i,t,o){"control"===n.category||-1!==t.indexOf(e)||(a[e].forEach(e=>{null!=e&&(o[e.id]=(o[e.id]||0)+n.children.length)}),n.inputs.forEach(t=>{if("control"!==t.category){let e=_W(t.name,a,s);null!=e&&e.forEach(e=>{var t,a,r;!e||e.kept||i.has(e.id)||(1===(t=o[e.id])?(this.keepTensorForDebug?([a,r]=Ts(n.name,s),this.intermediateTensors[a]||(this.intermediateTensors[a]=[]),this.intermediateTensors[a][r]=e):e.dispose(),delete o[e.id]):null!=t&&o[e.id]--)})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(e=>e.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(var e in this.intermediateTensors)this.intermediateTensors[e].forEach(e=>e.dispose()),delete this.intermediateTensors[e]}async _executeAsync(t,e,a=!1,r={},n={}){a||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepTensorForDebug=X().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();let s=new Qx(this.weightMap,r,n,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(t,s,e,a);let i=e.map(e=>un(e,this.tensorsMap,s)),o=i.map(e=>e.id),l=Object.keys(t).map(e=>t[e].id);return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,a){e=e.reduce((e,t,a)=>(e[this.inputs[a].name]=t,e),{});return this._executeAsync(e,this.outputNodes,!0,t,a)}async executeWithControlFlow(n,t,e,a){let r=Object.keys(n),s=r.map(e=>this.graph.nodes[An(e)[0]]),i=e.map(e=>An(e)[0]),o=i.map(e=>this.graph.nodes[e]);0===o.length&&(o=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:d,syncInputs:p}=Zx(n,o,this.weightMap,this._initNodes),h=[...s,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),c={...this.weightMap};Object.keys(n).forEach(e=>{let[t,a]=An(e),r=[];r[a]=n[e],c[t]=r});for(var f={},m=this.getFrozenTensorIds(c),g={};0<h.length;){var b=this.processStack(s,h,t,c,g,m,i,f,l);await Promise.all(b)}null!=d||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");a=o.filter(e=>!b0(e)&&!un(e.name,c,t)).map(e=>e.name);if(0<a.length){let e=null!=d?`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`:"";throw new Error(`Cannot compute the outputs [${a}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${e}`)}return c}processStack(e,n,s,i,o,l,u,d,p){let h=[];for(;0<n.length;){let a=n.pop();s.currentContext=a.contexts;let r="";if("Enter"===a.node.op&&I("isConstant",a.node,i,s)&&([r]=Ts(a.node.name,s)),null==i[a.node.name]){let e=Yx(a.node,i,s,this._resourceManager);r||([r]=Ts(a.node.name,s));let t=s.currentContext;w.isPromise(e)?h.push(e.then(e=>(i[r]=e,s.currentContext=t,this.checkTensorForDisposal(r,a.node,i,s,l,u,d),this.processChildNodes(a.node,n,s,i,o,p),e))):(i[r]=e,this.checkTensorForDisposal(r,a.node,i,s,l,u,d),this.processChildNodes(a.node,n,s,i,o,p))}else this.processChildNodes(a.node,n,s,i,o,p)}return h}processChildNodes(e,a,r,n,s,i){e.children.forEach(e=>{var[t]=Ts(e.name,r);s[t]||!i.has(e.name)||("Merge"===e.op?e.inputNames.some(e=>!!un(e,n,r))&&(s[t]=!0,a.push({contexts:r.currentContext,node:e})):e.inputNames.every(e=>!!un(e,n,r))&&(s[t]=!0,a.push({contexts:r.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(n){Object.keys(n).forEach(e=>{let t=n[e],[a]=An(e),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){let a=r.attrParams.shape.value,e=a.length===t.shape.length&&t.shape.every((e,t)=>-1===a[t]||a[t]===e);w.assert(e,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${a}], but was [${t.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&w.assert(t.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${t.dtype}`)})}mapInputs(e){let t={};for(var a in e){var r;null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[a]?(r=this._signature.inputs[a],t[r.name]=e[a]):t[a]=e[a]}return t}checkInputs(e){e=Object.keys(e).filter(e=>{var[e]=An(e);return null==this.graph.nodes[e]});if(0<e.length)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(e){return e.map(e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e,{})}checkOutputs(e){e.forEach(e=>{var[t]=An(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)})}},$4=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(var e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(var t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}},_4="?tfjs-format=file",A4="model.json",E4=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new $4}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){var t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=En.browserHTTPRequest(t,this.loadOptions);else{let e=En.getLoadHandlers(t,this.loadOptions);if(0===e.length)e.push(En.browserHTTPRequest(t,this.loadOptions));else if(1<e.length)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");var e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,a;a=(null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata:this.artifacts).signature,this.signature=a,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;var r=En.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);return this.executor=new zm(qx.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node&&(e=qx.Instance.transformGraph(e.modelInitializer),this.initializer=new zm(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])),!0}async save(e,t){if("string"==typeof e){var a=En.getSaveHandlers(e);if(0===a.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(1<a.length)throw new Error(`Found more than one (${a.length}) save handlers for URL '${e}'`);e=a[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(r){if(!(r instanceof et||Array.isArray(r)))return r;if((r=Array.isArray(r)?r:[r]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${r.length} input tensors.`);return this.inputNodes.reduce((e,t,a)=>(e[t]=r[a],e),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);t=this.executor.execute(e,t);return 1<t.length?t:t[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);t=await this.executor.executeAsync(e,t);return 1<t.length?t:t[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(a){return Object.keys(a).reduce((e,t)=>(e[t]=[a[t]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function Dpe(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");(t=null==t?{}:t).fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}${A4}${_4}`);let a=new E4(e,t);return await a.load(),a}var Fpe="0.0.0",R4={};Ae(R4,{CSVDataset:()=>_0,Dataset:()=>Jo,FileDataSource:()=>P0,TextLineDataset:()=>$0,URLDataSource:()=>z0,array:()=>tU,csv:()=>pU,func:()=>hU,generator:()=>fU,microphone:()=>gU,version_data:()=>bU,webcam:()=>mU,zip:()=>nU});var D4=xa(Wd()),F4=xa(Wd());function O4(e,t){return Rd(e,t)}function Rd(t,a,r=new Map,n=new Set){if(null==t)return null;if("function"==typeof Blob&&t instanceof Blob)return t.slice();if(n.has(t))throw new Error("Circular references are not supported.");if(r.has(t))return r.get(t);var e=a(t);if(e.recurse&&null!==e.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(e.recurse){if(to(t)){let e=Array.isArray(t)?[]:{};for(var s in n.add(t),t){var i=Rd(t[s],a,r,n);e[s]=i}return n.delete(t),t.__proto__&&(e.__proto__=t.__proto__),e}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return r.set(t,e.value),e.value}function P4(e,t=v0){return y0(e,t)}function y0(a,r,n=new Set){var s=a[0];if(n.has(s))throw new Error("Circular references are not supported.");var e=r(a);if(e.recurse&&null!==e.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(e.recurse){if(to(s)){let e=Array.isArray(s)?[]:{};n.add(s);for(let t in s){var i=y0(a.map(e=>e[t]),r,n);e[t]=i}return n.delete(s),e}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return e.value}function v0(e){return null===e?null:to(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function x0(e,t){let a=new Map;Rd(e,t,a);for(var r of Array.from(a.keys())){var n=a.get(r);w.isPromise(n)&&(n=await n,a.set(r,n))}return Rd(e,t,a)}function to(e){let t=!1;var a;return t=X().get("IS_BROWSER")?e instanceof TextDecoder:(a=Ww()["StringDecoder"],e instanceof a),null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof et)&&!(e instanceof Promise)&&!t)}function z4(e){return null==e||M4(e)||Array.isArray(e)||"object"==typeof e&&e instanceof et||w.isTypedArray(e)}function M4(e){return null===e||"object"!=typeof e&&"function"!=typeof e}function L4(e){return O4(e,B4)}function B4(e){return e instanceof et?{value:e.clone(),recurse:!1}:to(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var w0=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(var t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);var e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");var e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");var t=this.wrap(this.begin+e),e=this.get(t);return this.set(t,this.pop()),e}},k0=class extends w0{constructor(){super(k0.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=new Array(e),a=this.length();for(let e=0;e<a;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=a}},I0=k0;function S0(e){return new U4(e)}function Yy(e){return new G4(e)}function V4(e,t){return new C0(e,t)}function W4(e,t=N0.FAIL){return new J4(e,t)}I0.INITIAL_CAPACITY=32;var Ut=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],a=await e.next();for(;!a.done;)t.push(a.value),a=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),a=e(t.value);for(;!t.done&&a;)t=await this.next(),a=e(t.value)}handleErrors(e){return new Q4(this,e)}filter(e){return new X4(this,e)}map(e){return new Y4(this,e)}mapAsync(e){return new Jx(this,e)}serialMapAsync(e){return new Jx(this,e).serial()}flatmap(e){return new Z4(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new K4(this,e,t)}columnMajorBatch(e,t=!0,a=v0){return this.rowMajorBatch(e,t).map(e=>P4(e,a))}concatenate(e,t){return new C0(S0([this,e]),t)}take(e){return e<0||null==e?this:new j4(this,e)}skip(e){return e<0||null==e?this:new q4(this,e)}prefetch(e){return new T0(this,e)}shuffle(e,t){return new eU(this,e,t)}serial(){return new H4(this)}},U4=class extends Ut{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};var e=this.items[this.trav];return this.trav++,{value:L4(e),done:!1}}},G4=class extends Ut{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},H4=class extends Ut{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},q4=class extends Ut{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){var e=await this.upstream.next();if(e.done)return e;Re(e.value)}return this.upstream.next()}},j4=class extends Ut{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},K4=class extends Ut{constructor(e,t,a=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=a,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){var t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&0<e.length?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},X4=class extends Ut{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){var e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Re(e.value)}}},Y4=class extends Ut{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){var e=await this.upstream.next();if(e.done)return{value:null,done:!0};var t,a=_s.getTensorsInContainer(e.value),e=this.transform(e.value),r=_s.getTensorsInContainer(e);for(t of a)_s.isTensorInList(t,r)||t.dispose();return{value:e,done:!1}}},Q4=class extends Ut{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},Jx=class extends Ut{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){var e=await this.upstream.next();if(e.done)return{value:null,done:!0};var t,a=_s.getTensorsInContainer(e.value),e=await this.transform(e.value),r=_s.getTensorsInContainer(e);for(t of a)_s.isTensorInList(t,r)||t.dispose();return{value:e,done:!1}}},Qy=class extends Ut{constructor(){super(),this.outputQueue=new I0,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},Z4=class extends Qy{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){var e=await this.upstream.next();if(e.done)return!1;var t,a=_s.getTensorsInContainer(e.value),e=this.transform(e.value),r=_s.getTensorsInContainer(e);this.outputQueue.pushAll(e);for(t of a)_s.isTensorInList(t,r)||t.dispose();return!0}},C0=class extends Ut{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){var t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},N0=(e=>(e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST",e))(N0||{}),J4=class extends Ut{constructor(e,t=0){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,a=0;e=await x0(this.iterators,function(e){return e instanceof Ut?{value:e.next().then(e=>(t++,e.done&&a++,e.value)),recurse:!1}:{value:null,recurse:!0}});if(t===a)return{value:null,done:!0};if(0<a)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0}}return this.count++,{value:e,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},T0=class extends Ut{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new w0(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){var e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},eU=class extends T0{constructor(e,t,a){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=F4.alea(a||w.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){var e=this.chooseIndex(),e=await this.buffer.shuffleExcise(e);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}},Jo=class{constructor(){this.size=null}batch(e,t=!0){let a=this;w.assert(0<e,()=>`batchSize needs to be positive, but it is
      ${e}`);let r;return r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),_n(async()=>(await a.iterator()).columnMajorBatch(e,t,sU),r)}concatenate(e){let t=this,a;return a=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,_n(async()=>(await t.iterator()).concatenate(await e.iterator()),a)}filter(t){let e=this,a;return a=this.size===1/0?1/0:null,_n(async()=>(await e.iterator()).filter(e=>j(()=>t(e))),a)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(t){let e=this;return _n(async()=>(await e.iterator()).map(e=>j(()=>t(e))),this.size)}mapAsync(e){let t=this;return _n(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return _n(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(t){let a=this,e;return e=null!=this.size&&0<t?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,_n(async()=>{let e=Yy(async()=>({value:await a.iterator(),done:!1}));return V4(e.take(t))},e)}skip(e){let t=this,a;return a=null!=this.size&&0<=e&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,_n(async()=>(await t.iterator()).skip(e),a)}shuffle(t,e,a=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,n=D4.alea(e||w.now().toString());return _n(async()=>{let e=n.int32();return a&&(e+=n.int32()),(await r.iterator()).shuffle(t,e.toString())},this.size)}take(e){let t=this,a;return a=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,_n(async()=>(await t.iterator()).take(e),a)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function _n(e,t=null){return new class extends Jo{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function tU(e){return _n(async()=>S0(e),e.length)}function nU(t){if(!to(t))throw new Error("The argument to zip() must be an object or array.");let a;if(Array.isArray(t))for(let e=0;e<t.length;e++)a=null==a?t[e].size:Math.min(a,t[e].size);else if(t instanceof Object)for(var e in t)a=null==a?t[e].size:Math.min(a,t[e].size);return _n(async()=>{return W4(await x0(t,e=>{if(e instanceof Jo)return{value:e.iterator(),recurse:!1};if(to(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}),1)},a)}function sU(e){return null===e?null:z4(e[0])?{value:rU(e),recurse:!1}:{value:null,recurse:!0}}function rU(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return(e[0]instanceof et?Jn:fs)(e)}Jo.MAX_BUFFER_SIZE=1e4;var $0=class extends Jo{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(e=>e=e.endsWith("\r")?e.slice(0,-1):e)}},Kc='"',Tu=Symbol("out"),ew=Symbol("field"),Xc=Symbol("quote"),qf=Symbol("quoteafterquote"),tw=Symbol("quoteinquote"),_0=class extends Jo{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new $0(e),this.hasHeader=!1!==(t=t||{}).hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(w.assert(null==t.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter||","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&w.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((e,t)=>(e[t]=e[t]+1||1,e),{}),a=Object.keys(t).filter(e=>1<t[e]);if(w.assert(0===a.length,()=>"Duplicate column names found: "+a.toString()),this.columnConfigs)for(var r of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(r))throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){var e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");e=e.value;return this.parseRow(e,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(e=>this.makeDataElement(e))}makeDataElement(r){let n=this.parseRow(r),s={},i={};for(let a=0;a<this.fullColumnNames.length;a++){var o=this.fullColumnNames[a],l=this.columnConfigs?this.columnConfigs[o]:null;if(!this.configuredColumnsOnly||l){let e=n[a],t=null;if(""===e)if(l&&void 0!==l.default)t=l.default;else{if(l&&(l.required||l.isLabel))throw new Error(`Required column ${o} is empty in this line: ${r}`);t=void 0}else{var u=Number(e);if(isNaN(u))t=l&&"bool"===l.dtype?this.getBoolean(e):e;else if(l&&l.dtype)switch(l.dtype){case"float32":t=u;break;case"int32":t=Math.floor(u);break;case"bool":t=this.getBoolean(e);break;default:t=u}else t=u}l&&l.isLabel?i[o]=t:s[o]=t}}return 0===Object.keys(i).length?s:{xs:s,ys:i}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(t,e=!0){let a=[],r=0,n=t.length,s=Tu;for(let e=0;e<n;e++)switch(s){case Tu:switch(t.charAt(e)){case Kc:r=e+1,s=Xc;break;case this.delimiter:if(r=e+1," "===this.delimiter&&this.delimWhitespace)break;a.push(""),s=Tu;break;default:s=ew,r=e}break;case ew:t.charAt(e)===this.delimiter&&(a.push(t.substring(r,e)),s=Tu,r=e+1);break;case Xc:t.charAt(e)===Kc&&(s=qf);break;case qf:switch(t.charAt(e)){case this.delimiter:a.push(t.substring(r,e-1)),s=Tu,r=e+1;break;case Kc:s=Xc;break;default:s=tw}break;case tw:t.charAt(e)===Kc&&(s=Xc)}if(s===qf?a.push(t.substring(r,n-1)):a.push(t.substring(r)),e&&a.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${a}`);return a}},A0=class extends Ut{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;var t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||14<t||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!X().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new A0(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,a=await this.getAudioData();var r;return this.includeSpectrogram&&(r=this.flattenQueue(a.freqDataQueue),e=this.getTensorFromAudioDataArray(r,[this.numFrames,this.columnTruncateLength,1])),this.includeWaveform&&(r=this.flattenQueue(a.timeDataQueue),t=this.getTensorFromAudioDataArray(r,[this.numFrames*this.fftSize,1])),{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let a=[],r=[],n=0;return new Promise(e=>{let t=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&e({freqDataQueue:a,timeDataQueue:r}),a.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),r.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(t),e({freqDataQueue:a,timeDataQueue:r}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&0<this.stream.getTracks().length&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let a=e[0].length,r=new Float32Array(e.length*a);return e.forEach((e,t)=>r.set(e,t*a)),r}getTensorFromAudioDataArray(e,t){let a=new Float32Array(w.sizeFromShape(t));return a.set(e,a.length-e.length),fs(a,t)}},E0=class extends Ut{constructor(e,t){var a,r;super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize()&&(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Zt([0],"int32"),this.webcamConfig.centerCrop?(a=+this.webcamConfig.resizeWidth/this.webcamVideoElement.width,r=+this.webcamConfig.resizeHeight/this.webcamVideoElement.height,this.cropBox=Ki([e=(1-r)/2,t=(1-a)/2,r+e,t+a],[1,4])):this.cropBox=Ki([0,0,1,1],[1,4]))}summary(){return"webcam"}static async create(e,t={}){if(!X().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let a=new E0(e,t);return await a.start(),a}async start(){this.webcamConfig.facingMode&&w.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode||"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Nk.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(a){return j(()=>{var e=Pn(ce(a,"float32"),0),e=qn.cropAndResize(e,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let t=e.shape;return G(e,t.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},R0=class{},D0=class extends Ut{split(e){return new aU(this,e)}},aU=class extends D0{constructor(e,t){super(),this.upstream=e,this.impl=new iU(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},iU=class extends Qy{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),!(this.carryover=""));let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(var a of t.slice(0,-1))this.outputQueue.push(a);return this.carryover=t[t.length-1],!0}},oU=class extends Ut{decodeUTF8(){return new uU(this)}},uU=class extends D0{constructor(e){super(),this.upstream=e,this.impl=new lU(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},lU=class extends Qy{constructor(e){if(super(),this.upstream=e,X().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let e=Ww()["StringDecoder"];this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){var e=await this.upstream.next();if(e.done)return!1;e=e.value;let t;return t=X().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(t),!0}},F0=class extends oU{constructor(e,t={}){super(),this.file=e,this.options=t,w.assert(e instanceof Uint8Array||!!X().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((r,n)=>{var e=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)r(new Uint8Array(this.file.slice(this.offset,e)));else{let a=new FileReader;a.onload=e=>{let t=a.result;if(t instanceof ArrayBuffer&&(t=new Uint8Array(t)),!(t instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));r(t)},a.onabort=e=>n(new Error("Aborted")),a.onerror=e=>n(new Error(e.type));var t=this.file.slice(this.offset,e);a.readAsArrayBuffer(t)}this.offset=e}),done:!1}}};async function cU(e,t={},a){let r,n;"string"==typeof e?r=e:(r=e.url,n=dU(e));let s=await(a||w.fetch)(r,n);if(s.ok){a=new Uint8Array(await s.arrayBuffer());return new F0(a,t)}throw new Error(s.statusText)}var dU=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function O0(e){return"string"==typeof e&&"file://"===e.slice(0,7)}var P0=class extends R0{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(O0(this.input)&&X().get("IS_NODE")){let e=tg();this.input=e.readFileSync(this.input.slice(7))}return new F0(this.input,this.options)}},z0=class extends R0{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return O0(this.url)?new P0(this.url,this.fileOptions).iterator():cU(this.url,this.fileOptions)}};function pU(e,t={}){return new _0(new z0(e),t)}function hU(e){let t=Yy(e);return _n(async()=>t)}function fU(t){return _n(async()=>{let e=await t();return Yy(()=>e.next())})}async function mU(e,t){return E0.create(e,t)}async function gU(e){return A0.create(e)}var bU="0.0.0";function be(e,t){(e=!Array.isArray(e)?[e]:e).forEach(e=>{null!=e&&w.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var yU=xs.whereImpl,M0=class extends nl{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Ud(this,Ss())}nextDataId(){return M0.nextDataId++}write(e,t,a){this.firstUse&&(this.firstUse=!1,X().get("IS_NODE")&&S.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));var r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:a,refCount:1}),r}makeTensorInfo(e,t,a){let r;var n;return r="string"===t&&null!=a&&0<a.length&&w.isString(a[0])?(n=a.map(e=>w.encodeString(e)),this.write(n,e,t)):this.write(a,e,t),{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(t){if(this.data.has(t)){let e=this.data.get(t);e.refCount--}}move(e,t,a,r,n){this.data.set(e,{values:t,dtype:r,refCount:n})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){var{dtype:t,complexTensorInfos:a}=this.data.get(e);if("complex64"!==t)return this.data.get(e).values;e=this.readSync(a.real.dataId),a=this.readSync(a.imag.dataId);return S.mergeRealAndImagArrays(e,a)}bufferSync(e){let t=this.readSync(e.dataId),a=t;if("string"===e.dtype)try{a=t.map(e=>w.decodeString(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return De(e.shape,e.dtype,a)}makeOutput(e,t,a){e=this.write(e,t,a);return Ss().makeTensorFromDataId(e,t,a,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&0<this.data.get(e).refCount)return!1;var t=this.data.get(e)["complexTensorInfos"];null!=t&&(this.disposeData(t.real.dataId,!0),this.disposeData(t.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){var t=w.now();return e(),{kernelMs:w.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){be([e],"where");var t=this.readSync(e.dataId);return yU(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},L0=M0;L0.nextDataId=0;var Zy={};function B0(t){let a=new Float32Array(t.length);for(let e=0;e<t.length;++e)a[e]=Math.abs(t[e]);return a}Ae(Zy,{addImpl:()=>V0,bincountImpl:()=>ev,bincountReduceImpl:()=>W0,ceilImpl:()=>U0,concatImpl:()=>tv,equalImpl:()=>G0,expImpl:()=>q0,expm1Impl:()=>K0,floorImpl:()=>X0,gatherNdImpl:()=>Y0,gatherV2Impl:()=>Q0,greaterEqualImpl:()=>J0,greaterImpl:()=>Z0,lessEqualImpl:()=>tC,lessImpl:()=>eC,linSpaceImpl:()=>nC,logImpl:()=>sC,maxImpl:()=>rC,maximumImpl:()=>aC,minimumImpl:()=>iC,multiplyImpl:()=>nv,negImpl:()=>oC,notEqualImpl:()=>uC,prodImpl:()=>lC,rangeImpl:()=>rv,rsqrtImpl:()=>cC,sigmoidImpl:()=>iG,simpleAbsImpl:()=>B0,sliceImpl:()=>Fd,sparseFillEmptyRowsImpl:()=>pC,sparseReshapeImpl:()=>hC,sparseSegmentReductionImpl:()=>av,sqrtImpl:()=>lG,squaredDifferenceImpl:()=>fC,stridedSliceImpl:()=>mC,stringNGramsImpl:()=>gC,stringSplitImpl:()=>bC,stringToHashBucketFastImpl:()=>yC,subImpl:()=>vC,tileImpl:()=>xC,topKImpl:()=>kC,transposeImpl:()=>sv,uniqueImpl:()=>IC});var vU=e=>{let t=e.inputs["x"],a=e.backend;be(t,"abs");e=new Float32Array(w.sizeFromShape(t.shape)),e=B0(a.data.get(t.dataId).values);return a.makeOutput(e,t.shape,t.dtype)},xU={kernelName:io,backendName:"cpu",kernelFunc:vU};function At(b){return(e,t,s,i,a)=>{let r=S.assertAndGetBroadcastShape(e,t),o=r.length,l=w.computeStrides(r),n=w.sizeFromShape(r),u=w.getTypedArrayFromDType(a,n),d=e.length,p=t.length,h=w.computeStrides(e),c=w.computeStrides(t),f=S.getBroadcastDims(e,r),m=S.getBroadcastDims(t,r);if(f.length+m.length===0)for(let e=0;e<u.length;++e)u[e]=b(s[e%s.length],i[e%i.length]);else for(let n=0;n<u.length;++n){let e=w.indexToLoc(n,o,l),t=e.slice(-d);f.forEach(e=>t[e]=0);let a=w.locToIndex(t,d,h),r=e.slice(-p);m.forEach(e=>r[e]=0);var g=w.locToIndex(r,p,c);u[n]=b(s[a],i[g])}return[u,r]}}function Rn(e){let{inputs:t,backend:a}=e,{real:r,imag:n}=t,s=a.data.get(r.dataId).values,i=a.data.get(n.dataId).values,o=a.makeTensorInfo(r.shape,"complex64"),l=a.data.get(o.dataId);return l.complexTensorInfos={real:a.makeTensorInfo(r.shape,"float32",s),imag:a.makeTensorInfo(n.shape,"float32",i)},o}var wU={kernelName:jd,backendName:"cpu",kernelFunc:Rn};function Dd(e,t,a="float32"){if("complex64"===a)return Rn({inputs:{real:Dd(e,t,"float32"),imag:Dd(e,t,"float32")},backend:e});var r=w.makeZerosTypedArray(w.sizeFromShape(t),a);return e.makeTensorInfo(t,a,r)}function Os(e){let{inputs:t,backend:a}=e,r=t["x"];return a.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var kU={kernelName:Ba,backendName:"cpu",kernelFunc:Os};function ma(e){let{inputs:t,backend:a}=e,r=t["input"],n=a.data.get(r.dataId).complexTensorInfos.real,s=a.data.get(n.dataId).values;return a.makeTensorInfo(n.shape,n.dtype,s)}var IU={kernelName:np,backendName:"cpu",kernelFunc:ma};function xr(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],s=r["dtype"];if("complex64"===s){if("complex64"===n.dtype)return Os({inputs:{x:n},backend:a});var i=Dd(a,n.shape,n.dtype),e=xr({inputs:{x:n},backend:a,attrs:{dtype:"float32"}}),o=Rn({inputs:{real:e,imag:i},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(e),o}if("complex64"===n.dtype){var o=ma({inputs:{input:n},backend:a}),l=xr({inputs:{x:o},backend:a,attrs:{dtype:s}});return a.disposeIntermediateTensorInfo(o),l}if(!w.hasEncodingLoss(n.dtype,s)){l=Os({inputs:{x:n},backend:a});return{dataId:l.dataId,shape:l.shape,dtype:s}}if("int32"===s){var u=a.data.get(n.dataId).values,d=Int32Array.from(u);return a.makeTensorInfo(n.shape,"int32",d)}if("bool"!==s)throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${s}`);var u=a.data.get(n.dataId).values,d=w.toTypedArray([0],n.dtype),[u,d]=At((e,t)=>e!==t?1:0)(n.shape,[],u,d,"bool");return a.makeTensorInfo(d,"bool",u)}var SU={kernelName:Na,backendName:"cpu",kernelFunc:xr};function Gt(i,u,d,p){return null==d?({inputs:e,backend:t})=>{let{a,b:r}=e,n=t;be([a,r],i);var s=n.data.get(a.dataId).values,e=n.data.get(r.dataId).values,t="string"===a.dtype?S.fromUint8ToStringArray(s):s,s="string"===a.dtype?S.fromUint8ToStringArray(e):e,e=p||a.dtype,[t,s]=u(a.shape,r.shape,t,s,e);return n.makeTensorInfo(s,e,t)}:({inputs:e,backend:t})=>{let{a,b:r}=e,n=t;if("complex64"===a.dtype||"complex64"===r.dtype){var s=xr({inputs:{x:a},backend:n,attrs:{dtype:"complex64"}}),e=n.data.get(s.dataId),i=e.complexTensorInfos.real,o=e.complexTensorInfos.imag,t=n.data.get(i.dataId).values,l=n.data.get(o.dataId).values,e=xr({inputs:{x:r},backend:n,attrs:{dtype:"complex64"}}),i=n.data.get(e.dataId),o=i.complexTensorInfos.real,i=i.complexTensorInfos.imag,o=n.data.get(o.dataId).values,i=n.data.get(i.dataId).values,[l,o,i]=d(a.shape,r.shape,t,l,o,i),l=n.makeTensorInfo(i,"float32",l),i=n.makeTensorInfo(i,"float32",o),o=Rn({inputs:{real:l,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(i),o}var l=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,o=p||a.dtype,[l,i]=u(a.shape,r.shape,l,i,o);return n.makeTensorInfo(i,o,l)}}function Jy(C){return(e,t,a,r,n,s)=>{let i=S.assertAndGetBroadcastShape(e,t),o=w.sizeFromShape(i),l=i.length,u=w.computeStrides(i),d=w.getTypedArrayFromDType("float32",o),p=w.getTypedArrayFromDType("float32",o),h=S.getBroadcastDims(e,i),c=S.getBroadcastDims(t,i),f=S.mergeRealAndImagArrays(a,r),m=S.mergeRealAndImagArrays(n,s),g=e.length,b=w.computeStrides(e),y=t.length,v=w.computeStrides(t);if(h.length+c.length===0)for(let e=0;e<d.length;e++){var x=e%f.length,k=e%m.length,k=C(f[2*x],f[2*x+1],m[2*k],m[2*k+1]);d[e]=k.real,p[e]=k.imag}else for(let n=0;n<d.length;n++){let e=w.indexToLoc(n,l,u),t=e.slice(-g);h.forEach(e=>t[e]=0);let a=w.locToIndex(t,g,b),r=e.slice(-y);c.forEach(e=>r[e]=0);var I=w.locToIndex(r,y,v),I=C(f[2*a],f[2*a+1],m[2*I],m[2*I+1]);d[n]=I.real,p[n]=I.imag}return[d,p,i]}}var V0=At((e,t)=>e+t),CU=Jy((e,t,a,r)=>({real:e+a,imag:t+r})),Kl=Gt(Ir,V0,CU),NU={kernelName:Ir,backendName:"cpu",kernelFunc:Kl};function ev(t,a,e,r,n){let s=w.sizeFromShape(r),i=w.makeZerosTypedArray(n,e);for(let e=0;e<t.length;e++){var o=t[e];if(o<0)throw new Error("Input x must be non-negative!");n<=o||(i[o]+=0<s?a[e]:1)}return i}function W0(a,r,n,s=!1){let e=a.shape[0],i=a.shape[1],o=De([e,n],r.dtype);for(let t=0;t<e;t++)for(let e=0;e<i;e++){var l=a.get(t,e);if(l<0)throw new Error("Input x must be non-negative!");n<=l||(s?o.set(1,t,l):0<r.size?o.set(o.get(t,l)+r.get(t,e),t,l):o.set(o.get(t,l)+1,t,l))}return o}function Er(n){return(t,e,a)=>{let r=w.getTypedArrayFromDType(e,t.length);for(let e=0;e<t.length;++e)r[e]=n(t[e],a);return r}}function st(l,u,d){return({inputs:e,attrs:t,backend:a})=>{var e=e["x"];if(be(e,l),"string"===e.dtype||"string"===d)throw new Error("unaryKernelFunc does not support string input/output");let r=a,n=r.data.get(e.dataId).values,s=w.sizeFromShape(e.shape),i=d||e.dtype,o=w.getArrayFromDType(i,s);for(let e=0;e<s;++e)o[e]=u(n[e],t);return r.makeTensorInfo(e.shape,i,o)}}function eu(o,l,u){return({inputs:e,attrs:t,backend:a})=>{var e=e["x"];if(be(e,o),"string"===e.dtype||"string"===u)throw new Error("unaryKernelFunc does not support string input/output");let r=a,n=r.data.get(e.dataId).values,s=u||e.dtype,i=l(n,s,t);return r.makeTensorInfo(e.shape,s,i)}}var U0=Er(e=>Math.ceil(e)),TU=eu(Ta,U0),$U={kernelName:Ta,backendName:"cpu",kernelFunc:TU};function tv(e,i,o,t){let l=w.getArrayFromDType(o,w.sizeFromShape(i));if(t&&"string"!==o){let a=0;e.forEach(e=>{var t=w.sizeFromShape(e.shape);l.set(e.vals,a),a+=t})}else{let s=0;e.forEach(t=>{let a="string"===o?S.fromUint8ToStringArray(t.vals):t.vals,r=0;for(let e=0;e<t.shape[0];++e){var n=e*i[1]+s;for(let e=0;e<t.shape[1];++e)l[n+e]=a[r++]}s+=t.shape[1]})}return l}var G0=At((e,t)=>e===t?1:0),H0=Gt(ho,G0,null,"bool"),_U={kernelName:ho,backendName:"cpu",kernelFunc:H0},q0=Er(e=>Math.exp(e)),j0=eu(Oa,q0,"float32"),AU={kernelName:Oa,backendName:"cpu",kernelFunc:j0},K0=Er(e=>Math.expm1(e)),EU=eu(mo,K0),RU={kernelName:mo,backendName:"cpu",kernelFunc:EU},X0=Er(e=>Math.floor(e)),DU=eu(Pa,X0),FU={kernelName:Pa,backendName:"cpu",kernelFunc:DU};function Y0(n,s,e,t,i,o,l,u,d){let p=De([t,o],e);for(let r=0;r<t;r++){let t=[],a=0;for(let e=0;e<i;e++){var h=n[r*i+e];a+=h*l[e],t.push(h)}if(a<0||a>=d/o)throw new Error(`Invalid indices: ${t} does not index into ${u}`);for(let e=0;e<o;e++)p.values[r*o+e]=s.get(...s.indexToLoc(a*o+e))}return p}function Q0(s,i,e){let o=De(e,s.dtype);for(let n=0;n<o.size;++n){let e=o.indexToLoc(n).slice(),t=e[0],a=e[2],r=i.locToIndex([t,a]);e[2]=i.values[r];var l=s.locToIndex(e);0<=l&&l<s.values.length&&(o.values[n]=s.values[l])}return o}var Z0=At((e,t)=>t<e?1:0),OU=Gt(vo,Z0,null,"bool"),PU={kernelName:vo,backendName:"cpu",kernelFunc:OU},J0=At((e,t)=>t<=e?1:0),zU=Gt(La,J0,null,"bool"),MU={kernelName:La,backendName:"cpu",kernelFunc:zU},eC=At((e,t)=>e<t?1:0),LU=Gt(xo,eC,null,"bool"),BU={kernelName:xo,backendName:"cpu",kernelFunc:LU},tC=At((e,t)=>e<=t?1:0),VU=Gt(wo,tC,null,"bool"),WU={kernelName:wo,backendName:"cpu",kernelFunc:VU};function nC(e,t,a){let r=(t-e)/(a-1),n=w.makeZerosTypedArray(a,"float32");n[0]=e;for(let e=1;e<n.length;e++)n[e]=n[e-1]+r;return n}var sC=Er(e=>Math.log(e)),UU=eu(Wa,sC),GU={kernelName:Wa,backendName:"cpu",kernelFunc:UU};function rC(r,n,e,t){let s=w.getTypedArrayFromDType(t,w.sizeFromShape(e));for(let e=0;e<s.length;++e){let t=e*n,a=r[t];for(let e=0;e<n;++e){var i=r[t+e];(Number.isNaN(i)||i>a)&&(a=i)}s[e]=a}return s}var aC=At((e,t)=>Math.max(e,t)),HU=Gt(Ga,aC),qU={kernelName:Ga,backendName:"cpu",kernelFunc:HU},iC=At((e,t)=>Math.min(e,t)),jU=Gt(Ka,iC),KU={kernelName:Ka,backendName:"cpu",kernelFunc:jU},nv=At((e,t)=>e*t),XU=Jy((e,t,a,r)=>({real:e*a-t*r,imag:e*r+t*a})),Hp=Gt(Ya,nv,XU),YU={kernelName:Ya,backendName:"cpu",kernelFunc:Hp};function oC(e,t,a){var r=w.createScalarValue(-1,a);return nv([],t,r,e,a)}function QU(e){let{inputs:t,backend:a}=e,r=t["x"];be(r,"neg");var[n,e]=oC(a.data.get(r.dataId).values,r.shape,r.dtype);return a.makeTensorInfo(e,r.dtype,n)}var ZU={kernelName:Io,backendName:"cpu",kernelFunc:QU},uC=At((e,t)=>e!==t?1:0),JU=Gt(So,uC,null,"bool"),eG={kernelName:So,backendName:"cpu",kernelFunc:JU};function sv(r,e,t,n,a){let s=e.length,i=w.sizeFromShape(e),o=w.computeStrides(e),l=w.computeStrides(a),u=w.getTypedArrayFromDType(t,w.sizeFromShape(a));for(let e=0;e<i;++e){let t=w.indexToLoc(e,s,o),a=new Array(t.length);for(let e=0;e<a.length;e++)a[e]=t[n[e]];var d=w.locToIndex(a,s,l);u[d]=r[e]}return u}function wn(e){let{inputs:t,attrs:a,backend:r}=e,n=t["x"],s=a["perm"];be(n,"transpose");let i=n.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=n.shape[s[e]];e=sv(r.data.get(n.dataId).values,n.shape,n.dtype,s,o);return{dataId:r.write(e,o,n.dtype),shape:o,dtype:n.dtype}}var tG={kernelName:pi,backendName:"cpu",kernelFunc:wn};function lC(e,t,r,a){let[n,s]=S.computeOutAndReduceShapes(e,a),i=cn(t,"int32"),o=w.makeZerosTypedArray(w.sizeFromShape(n),i),l=w.sizeFromShape(s);for(let e=0;e<o.length;++e){let t=e*l,a=1;for(let e=0;e<l;++e)a*=r[t+e];o[e]=a}return{outVals:o,outShape:n,outDtype:i}}function nG(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{axis:s,keepDims:i}=r;be(n,"prod");let o=n.shape.length,l=w.parseAxisParam(s,n.shape),u=S.getAxesPermutation(l,o),d=l,p=n,h=[];null!=u&&(p=wn({inputs:{x:n},backend:a,attrs:{perm:u}}),h.push(p),d=S.getInnerMostAxes(d.length,o));let c=a.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=lC(p.shape,p.dtype,c,d),b=m;return i&&(b=S.expandShapeToKeepDim(m,l)),h.forEach(e=>a.disposeIntermediateTensorInfo(e)),a.makeTensorInfo(b,g,f)}var sG={kernelName:Ao,backendName:"cpu",kernelFunc:nG};function rv(e,t,a,r){if(e===t||e<t&&a<0||t<e&&1<a)return w.makeZerosTypedArray(0,r);let n=Math.abs(Math.ceil((t-e)/a)),s=w.makeZerosTypedArray(n,r);t<e&&1===a&&(a=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+a;return s}var cC=Er(e=>1/Math.sqrt(e)),rG=eu(si,cC),aG={kernelName:si,backendName:"cpu",kernelFunc:rG},iG=Er(e=>1/(1+Math.exp(-e))),dC=st(ai,e=>1/(1+Math.exp(-e))),oG={kernelName:ai,backendName:"cpu",kernelFunc:dC};function Fd(e,r,t,a,n){var s=wt.isSliceContinous(a,r,t),i=w.sizeFromShape(t),o=w.computeStrides(a);if(s){o=wt.computeFlatOffset(r,o);return"string"===n?e.slice(o,o+i):e.subarray(o,o+i)}let l="string"===n?S.fromUint8ToStringArray(e):e,u=De(a,n,l),d=De(t,n);for(let a=0;a<d.size;++a){let e=d.indexToLoc(a),t=e.map((e,t)=>e+r[t]);d.set(u.get(...t),...e)}return"string"===n?S.fromStringArrayToUint8(d.values):d.values}function ga(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{begin:s,size:i}=r;be(n,"slice");var[o,e]=wt.parseSliceParams(n,s,i);wt.assertParamsValid(n,o,e);o=Fd(a.data.get(n.dataId).values,o,e,n.shape,n.dtype);return a.makeTensorInfo(e,n.dtype,o)}var uG={kernelName:Po,backendName:"cpu",kernelFunc:ga};function pC(s,e,t,i,o,a,l){let u=e[0],d=a[0],p=new Array(d),h=new Array(u),c=e[1];if(0===d){if(0!==u)throw new Error(S.getSparseFillEmptyRowsIndicesDenseShapeMismatch(u));return[w.getArrayFromDType(t,0),[0,c],w.getArrayFromDType(o,0),p,h]}let r=!0,n=0,f=new Array(d).fill(0);for(let e=0;e<u;++e){var m=s[e*c];if(m<0)throw new Error(S.getSparseFillEmptyRowsNegativeIndexErrorMessage(e,m));if(d<=m)throw new Error(S.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(e,m,d));++f[m],r=r&&m>=n,n=m}let g=!0;for(let e=0;e<d;++e){var b=0===f[e];p[e]=b,g=g&&!b,f[e]=Math.max(f[e],1),0<e&&(f[e]+=f[e-1])}if(g&&r){a=s,e=i;for(let e=0;e<u;++e)h[e]=e;return[a,[u,c],e,p,h]}{let e=f[d-1],a=w.getArrayFromDType(t,e*c),r=w.getArrayFromDType(o,e),n=new Array(d).fill(0);for(let t=0;t<u;++t){var y=s[t*c],v=n[y],x=(0===y?0:f[y-1])+v;n[y]++;for(let e=0;e<c;++e)a[x*c+e]=s[t*c+e];r[x]=i[t],h[t]=x}for(let e=0;e<d;++e)if(0===n[e]){var k=0===e?0:f[e-1];a[k*c+0]=e;for(let e=1;e<c;++e)a[k*c+e]=0;r[k]=l}return[a,[e,c],r,p,h]}}function hC(r,e,t,a,n){let s=w.sizeFromShape(a),i=e[0],o=n.length,l=[],u=1,d=-1;for(let e=0;e<o;++e){var p=n[e];if(-1===p){if(-1!==d)throw new Error(S.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,e));d=e,l.push(1)}else{if(p<0)throw new Error(S.getSparseReshapeNegativeOutputDimErrorMessage(e,p));u*=p,l.push(p)}}if(-1!==d){if(u<=0)throw new Error(S.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());e=Math.trunc(s/u);if(u*e!==s)throw new Error(S.getSparseReshapeInputOutputMultipleErrorMessage(a,l));l[d]=e}if(w.sizeFromShape(l)!==s)throw new Error(S.getSparseReshapeInputOutputMismatchErrorMessage(a,l));let h=a.length,c=[];if(0<h){c[h-1]=1;for(let e=h-2;0<=e;--e)c[e]=c[e+1]*a[e+1]}let f=[];if(0<o){f[o-1]=1;for(let e=o-2;0<=e;--e)f[e]=f[e+1]*l[e+1]}let m=w.getArrayFromDType(t,i*o);for(let a=0;a<i;++a){let t=0;for(let e=0;e<h;++e)t+=r[a*h+e]*c[e];for(let e=0;e<o;++e)m[a*o+e]=Math.trunc(t/f[e]),t%=f[e]}return[m,[i,o],l]}function av(t,e,a,r,n,s=!1,i=0){var o=r.length,l=[e[0],t.length/e[0]],u=l[1],d=0<o?n[o-1]+1:0;if(d<0)throw new Error(S.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=e.slice();p[0]=d;let h=p.reduce((e,t)=>e*t,1),c=w.getArrayFromDType(a,h);if(0===o)return 0<d&&c.fill(i),[c,p];if(d<=0)throw new Error(S.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,b=n[f];for(;;){let e=0;if(m<o){if(e=n[m],b===e){++m;continue}if(b>=e)throw new Error(S.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=d)throw new Error(S.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,d));b>g&&c.fill(i,g*u,b*u);for(let e=f;e<m;++e){var y=r[e];if(y<0||l[0]<=y)throw new Error(S.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(e,r[e],l[0]));for(let e=0;e<u;e++)c[b*u+e]+=t[y*u+e]}if(s)for(let e=0;e<u;e++)c[b*u+e]/=m-f;if(f=m,++m,g=b+1,b=e,m>o)break}return g<d&&c.fill(i,g*u,d*u),[c,p]}var lG=Er(e=>Math.sqrt(e)),cG=st(ii,e=>Math.sqrt(e)),dG={kernelName:ii,backendName:"cpu",kernelFunc:cG},fC=At((e,t)=>{t=e-t;return t*t}),pG=Gt(li,fC),hG={kernelName:li,backendName:"cpu",kernelFunc:pG};function mC(e,r,n,s){let i=De(e,r.dtype);for(let e=0;e<i.size;e++){let t=i.indexToLoc(e),a=new Array(t.length);for(let e=0;e<a.length;e++)a[e]=t[e]*n[e]+s[e];i.set(r.get(...a),...t)}return i}var fG=class{constructor(e,t,a,r,n,s){this.separator=w.encodeString(e),this.nGramWidths=t,this.leftPad=w.encodeString(a),this.rightPad=w.encodeString(r),this.padWidth=n,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){var a=this.getPadWidth(t);return Math.max(0,e+2*a-t+1)}createNGrams(d,p,h,c,f,m){for(let u=0;u<f;++u){let e=this.getPadWidth(m),t=Math.max(0,e-u),a=Math.max(0,e-(f-(u+1))),r=m-(t+a),n=p+(0<t?0:u-e),s=0;s+=t*this.leftPad.length;for(let e=0;e<r;++e)s+=d[n+e].length;s+=a*this.rightPad.length,s+=(t+a+r-1)*this.separator.length,h[c+u]=new Uint8Array(s);let i=h[c+u],o=0,l=e=>e.forEach(e=>i[o++]=e);for(let e=0;e<t;++e)l(this.leftPad),l(this.separator);for(let e=0;e<r-1;++e)l(d[n+e]),l(this.separator);if(0<r){l(d[n+r-1]);for(let e=0;e<a;++e)l(this.separator),l(this.rightPad)}else{for(let e=0;e<a-1;++e)l(this.rightPad),l(this.separator);l(this.rightPad)}}}compute(s,i){var e,t,a=s.length,r=i.length;if(0<r){let t=i[0];if(0!==t)throw new Error(`First split value must be 0, got ${t}`);for(let e=1;e<r;++e){if(!(i[e]>=t&&i[e]<=a))throw new Error(`Invalid split value ${i[e]}, must be in [${t}, ${a}]`);t=i[e]}if(t!==a)throw new Error(`Last split value must be data size. Expected ${a}, got ${t}`)}let o=r-1,l=w.getArrayFromDType("int32",r);if(0===a||0===r){var n=new Array(a);for(let e=0;e<=o;++e)l[e]=0;return[n,l]}l[0]=0;for(let e=1;e<=o;++e){let t=i[e]-i[e-1],a=0;this.nGramWidths.forEach(e=>{a+=this.getNumNGrams(t,e)}),this.preserveShort&&0<t&&0===a&&(a=1),l[e]=l[e-1]+a}let u=new Array(l[o]);for(let n=0;n<o;++n){let a=i[n],r=l[n];this.nGramWidths.forEach(e=>{var t=i[n+1]-i[n],t=this.getNumNGrams(t,e);this.createNGrams(s,a,u,r,t,e),r+=t}),this.preserveShort&&r===l[n]&&0!=(e=i[n+1]-i[n])&&(t=e+2*this.padWidth,this.createNGrams(s,a,u,r,1,t))}return[u,l]}};function gC(e,t,a,r,n,s,i,o){return new fG(a,r,n,s,i,o).compute(e,t)}function mG(a,r,n,s){if(a.length)if(0!==r.length)if(1!==r.length){let t=0;for(let e=0;e<a.length+1;e++){var i;e!==a.length&&-1===r.indexOf(a[e])||(i=a.subarray(t,e),n&&0===i.length||s.push(i),t=e+1)}}else{let e=r[0],t=a.indexOf(e);for(;-1!==t;){var o=a.subarray(0,t);n&&0===o.length||s.push(o),a=a.subarray(t+1),t=a.indexOf(e)}n&&0===a.length||s.push(a)}else for(let e=0;e<a.length;++e)s.push(a.subarray(e,e+1))}function bC(t,a,r){let n=t.length,s=[],i=0,o=0,l=new Array(n);for(let e=0;e<n;++e){var u=s.length;mG(t[e],a,r,s);u=s.length-u;l[e]=u,i+=u,o=Math.max(o,u)}let d=w.getArrayFromDType("int32",2*i),p=new Array(i),e=[n,o],h=0;for(let t=0;t<n;++t)for(let e=0;e<l[t];++e)d[2*h]=t,d[2*h+1]=e,p[h]=s[h],++h;return[d,p,e]}function yC(t,a){let r=w.getArrayFromDType("int32",t.length);for(let e=0;e<t.length;++e)r[e]=w.fingerPrint64(t[e]).modulo(a).getLowBitsUnsigned();return r}var vC=At((e,t)=>e-t),gG=Jy((e,t,a,r)=>({real:e-a,imag:t-r})),iv=Gt(ci,vC,gG),bG={kernelName:ci,backendName:"cpu",kernelFunc:iv};function xC(r,t){let a=new Array(r.rank);for(let e=0;e<a.length;e++)a[e]=r.shape[e]*t[e];let n=De(a,r.dtype);for(let e=0;e<n.values.length;++e){let t=n.indexToLoc(e),a=new Array(r.rank);for(let e=0;e<a.length;e++)a[e]=t[e]%r.shape[e];var s=r.locToIndex(a);n.values[e]=r.values[s]}return n}var Ru=(e,t)=>{var a=t.value-e.value;return 0==a?e.index-t.index:a};function wC(r,n,s=0,i=r.length-1){for(;s<i;){var o,l,u,d;600<i-s&&(o=i-s+1,l=n-s+1,d=Math.log(o),u=.5*Math.exp(2*d/3),d=.5*Math.sqrt(d*u*(o-u)/o)*Math.sign(l-o/2),wC(r,n,Math.max(s,Math.floor(n-l*u/o+d)),Math.min(i,Math.floor(n+(o-l)*u/o+d))));let e=r[n],t=s,a=i;for(w.swap(r,s,n),0<Ru(r[i],e)&&w.swap(r,s,i);t<a;){for(w.swap(r,t,a),t++,a--;Ru(r[t],e)<0;)t+=1;for(;0<Ru(r[a],e);)a-=1}0===Ru(r[s],e)?w.swap(r,s,a):(a+=1,w.swap(r,a,i)),a<=n&&(s=a+1),n<=a&&(i=a-1)}}function kC(o,e,t,l,u){let a=e[e.length-1],[r,d]=[o.length/a,a],p=w.getTypedArrayFromDType(t,r*l),h=w.getTypedArrayFromDType("int32",r*l);for(let i=0;i<r;i++){let e=i*d,t=o.subarray(e,e+d),a=new Array(t.length);t.forEach((e,t)=>a[t]={value:e,index:t}),l<a.length&&(wC(a,l),a=a.slice(0,l)),u&&a.sort(Ru);let r=i*l,n=p.subarray(r,r+l),s=h.subarray(r,r+l);for(let e=0;e<l;e++)n[e]=a[e].value,s[e]=a[e].index}let n=e.slice();return n[n.length-1]=l,[De(n,t,p),De(n,"int32",h)]}function IC(t,e,a,r){let n=w.parseAxisParam(e,a)[0],s=[1,a[0],1];for(let e=0;e<n;e++)s[0]*=a[e];s[1]=a[n];for(let e=n+1;e<a.length;e++)s[2]*=a[e];let i={},o=new Int32Array(a[n]),l=new Vt(s,r,t),u=[],d=1===s[0]&&1===s[2];for(let r=0;r<a[n];r++){let e;if(d)e=t[r].toString();else{let a=[];for(let t=0;t<s[0];t++)for(let e=0;e<s[2];e++)a.push(l.get(t,r,e));e=a.join(",")}var p;void 0!==i[e]?o[r]=i[e]:(p=Object.keys(i).length,i[e]=p,o[r]=p,u.push(r))}let h=s.slice();h[1]=Object.keys(i).length;let c=new Vt(h,r);u.forEach((a,r)=>{for(let t=0;t<s[0];t++)for(let e=0;e<s[2];e++)c.set(l.get(t,a,e),t,r,e)});let f=a.slice();return f[n]=h[1],{outputValues:c.values,outputShape:f,indices:o}}var Ope="0.0.0";pp("cpu",()=>new L0,1);var SC=st(Fa,e=>0<=e?e:Math.exp(e)-1),yG={kernelName:Fa,backendName:"cpu",kernelFunc:SC};function CC(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],s=r["alpha"];be([n],"leakyRelu");let i=w.sizeFromShape(n.shape),o=a.data.get(n.dataId).values,l=w.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return a.makeTensorInfo(n.shape,"float32",l)}var vG={kernelName:Va,backendName:"cpu",kernelFunc:CC},xG=At((e,t)=>e<0?t*e:e);function NC(e){let{inputs:t,backend:a}=e,{x:r,alpha:n}=t;be([r,n],"prelu");var s=a.data.get(r.dataId).values,e=a.data.get(n.dataId).values,[s,e]=xG(r.shape,n.shape,s,e,"float32");return a.makeTensorInfo(e,"float32",s)}var wG={kernelName:Ja,backendName:"cpu",kernelFunc:NC},TC=st(ei,e=>Math.max(0,e)),kG={kernelName:ei,backendName:"cpu",kernelFunc:TC},$C=st(ni,e=>Math.min(Math.max(0,e),6)),IG={kernelName:ni,backendName:"cpu",kernelFunc:$C};function ov(e,t,a,r,n){if("linear"===a)return Os({inputs:{x:t},backend:e});if("relu"===a)return TC({inputs:{x:t},backend:e});if("elu"===a)return SC({inputs:{x:t},backend:e});if("relu6"===a)return $C({inputs:{x:t},backend:e});if("prelu"===a)return NC({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===a)return CC({inputs:{x:t},backend:e,attrs:{alpha:n}});if("sigmoid"===a)return dC({inputs:{x:t},backend:e});throw new Error(`Activation ${a} has not been implemented for the CPU backend.`)}function mt(a){let{inputs:e,backend:t,attrs:r}=a,n=e["x"],s=r["shape"],i=w.sizeFromShape(n.shape),o=w.inferFromImplicitShape(s,i),l=w.sizeFromShape(o);w.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${n.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),t.incRef(n.dataId);a=t.data.get(n.dataId);if(null!=a.complexTensorInfos){let e=a.complexTensorInfos.real,t=a.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:n.dataId,shape:o,dtype:n.dtype}}var SG={kernelName:Eo,backendName:"cpu",kernelFunc:mt};function _C(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s}=t,{transposeA:i,transposeB:o}=r;be([n,s],"matMul");let l=n.shape.length,u=s.shape.length,d=i?n.shape[l-2]:n.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],h=i?n.shape[l-1]:n.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=n.shape.slice(0,-2),m=s.shape.slice(0,-2),g=w.sizeFromShape(f),b=w.sizeFromShape(m),y=jo.assertAndGetBroadcastShape(n.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,c]);w.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${n.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let v=i?[g,d,h]:[g,h,d],x=o?[b,c,p]:[b,p,c],k=mt({inputs:{x:n},backend:a,attrs:{shape:v}}),I=mt({inputs:{x:s},backend:a,attrs:{shape:x}}),S=i?k.shape[1]:k.shape[2],C=i?k.shape[2]:k.shape[1],N=o?I.shape[1]:I.shape[2],T=Math.max(g,b),$=a.data.get(k.dataId).values,_=a.data.get(I.dataId).values,A=w.computeStrides(k.shape),E=w.computeStrides(I.shape),[R,F,O]=i?[A[0],1,A[1]]:[A[0],A[1],1],[M,D,z]=o?[1,E[1],E[0]]:[E[1],1,E[0]],L=C*N,P=De([T,C,N],k.dtype),B=P.values,W=a.blockSize;for(let s=0;s<T;s++)for(let t=0;t<C;t+=W)for(let e=0;e<N;e+=W)for(let n=0;n<S;n+=W){var U=Math.min(t+W,C),V=Math.min(e+W,N),G=Math.min(n+W,S);for(let r=t;r<U;r++)for(let a=e;a<V;a++){let t=0;for(let e=n;e<G;e++){var j=Math.min(s,g-1)*R,H=Math.min(s,b-1)*z,j=$[j+r*F+e*O],H=_[e*M+a*D+H];t+=j*H}B[s*L+(r*N+a)]+=t}}return a.disposeIntermediateTensorInfo(k),a.disposeIntermediateTensorInfo(I),a.makeTensorInfo(y,P.dtype,P.values)}var CG={kernelName:Ca,backendName:"cpu",kernelFunc:_C};function NG(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:p}=r,h,c,f,m=[];h=_C({inputs:{a:n,b:s},attrs:{transposeA:l,transposeB:u},backend:a}),i&&(c=Kl({inputs:{a:h,b:i},backend:a}),m.push(h),h=c),d&&(f=ov(a,h,d,o,p),m.push(h),h=f);for(var g of m)a.disposeIntermediateTensorInfo(g);return h}var TG={kernelName:ra,backendName:"cpu",kernelFunc:NG},$G=st(sl,e=>Math.acos(e)),_G={kernelName:sl,backendName:"cpu",kernelFunc:$G},AG=st(rl,e=>Math.acosh(e)),EG={kernelName:rl,backendName:"cpu",kernelFunc:AG};function RG(e){let{inputs:t,backend:a}=e,r=t;be(t,"addN");let n=r.map(e=>a.data.get(e.dataId).values),s=De(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){var o=n[e];for(let e=0;e<i.length;e++)i[e]+=o[e]}return a.makeTensorInfo(s.shape,s.dtype,s.values)}var DG={kernelName:ka,backendName:"cpu",kernelFunc:RG};function FG(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{axis:s,keepDims:i}=r;be(n,"all");let o=w.parseAxisParam(s,n.shape),l=o,u=S.getAxesPermutation(l,n.shape.length),d=n;null!=u&&(d=wn({inputs:{x:n},backend:a,attrs:{perm:u}}),l=S.getInnerMostAxes(l.length,n.shape.length)),S.assertAxesAreInnerMostDims("all",l,d.shape.length);let[p,h]=S.computeOutAndReduceShapes(d.shape,l),c=w.sizeFromShape(h),f=w.makeZerosTypedArray(w.sizeFromShape(p),d.dtype),m=a.data.get(d.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,a=m[t];for(let e=0;e<c;++e){var g=m[t+e];a=a&&g}f[e]=a}null!=u&&a.disposeIntermediateTensorInfo(d);var b=a.makeTensorInfo(p,d.dtype,f);if(i){e=S.expandShapeToKeepDim(p,o),e=mt({inputs:{x:b},backend:a,attrs:{shape:e}});return a.disposeIntermediateTensorInfo(b),e}return b}var OG={kernelName:al,backendName:"cpu",kernelFunc:FG};function PG(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{axis:s,keepDims:i}=r;be(n,"any");let o=w.parseAxisParam(s,n.shape),l=o,u=S.getAxesPermutation(l,n.shape.length),d=n;null!=u&&(d=wn({inputs:{x:n},backend:a,attrs:{perm:u}}),l=S.getInnerMostAxes(l.length,n.shape.length)),S.assertAxesAreInnerMostDims("any",l,d.shape.length);let[p,h]=S.computeOutAndReduceShapes(d.shape,l),c=w.sizeFromShape(h),f=w.makeZerosTypedArray(w.sizeFromShape(p),d.dtype),m=a.data.get(d.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,a=m[t];for(let e=0;e<c;++e){var g=m[t+e];a=a||g}f[e]=a}null!=u&&a.disposeIntermediateTensorInfo(d);var b=a.makeTensorInfo(p,d.dtype,f);if(i){e=S.expandShapeToKeepDim(p,o),e=mt({inputs:{x:b},backend:a,attrs:{shape:e}});return a.disposeIntermediateTensorInfo(b),e}return b}var zG={kernelName:il,backendName:"cpu",kernelFunc:PG};function MG(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],s=r["axis"];be(n,"argMax");let i=w.parseAxisParam(s,n.shape),o=S.getAxesPermutation(i,n.shape.length),l=n,u=[];null!=o&&(l=wn({inputs:{x:n},backend:a,attrs:{perm:o}}),u.push(l),i=S.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],S.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[d,p]=S.computeOutAndReduceShapes(l.shape,i),h=w.sizeFromShape(d),c=w.makeZerosTypedArray(h,"int32"),f=w.sizeFromShape(p),m=a.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,a=m[t],r=0;for(let e=0;e<f;++e){var g=m[t+e];g>a&&(a=g,r=e)}c[e]=r}return u.forEach(e=>a.disposeIntermediateTensorInfo(e)),a.makeTensorInfo(d,"int32",c)}var LG={kernelName:Ia,backendName:"cpu",kernelFunc:MG};function BG(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],s=r["axis"];be(n,"argMin");let i=w.parseAxisParam(s,n.shape),o=S.getAxesPermutation(i,n.shape.length),l=n,u=[];null!=o&&(l=wn({inputs:{x:n},backend:a,attrs:{perm:o}}),u.push(l),i=S.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],S.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[d,p]=S.computeOutAndReduceShapes(l.shape,i),h=w.sizeFromShape(d),c=w.makeZerosTypedArray(h,"int32"),f=w.sizeFromShape(p),m=a.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,a=m[t],r=0;for(let e=0;e<f;++e){var g=m[t+e];g<a&&(a=g,r=e)}c[e]=r}return u.forEach(e=>a.disposeIntermediateTensorInfo(e)),a.makeTensorInfo(d,"int32",c)}var VG={kernelName:ol,backendName:"cpu",kernelFunc:BG},WG=st(ul,e=>Math.asin(e)),UG={kernelName:ul,backendName:"cpu",kernelFunc:WG},GG=st(ll,e=>Math.asinh(e)),HG={kernelName:ll,backendName:"cpu",kernelFunc:GG},qG=st(cl,e=>Math.atan(e)),jG={kernelName:cl,backendName:"cpu",kernelFunc:qG},KG=At((e,t)=>Math.atan2(e,t)),XG=Gt(pl,KG),YG={kernelName:pl,backendName:"cpu",kernelFunc:XG},QG=st(dl,e=>Math.atanh(e)),ZG={kernelName:dl,backendName:"cpu",kernelFunc:QG};function uv(l,e,t,u,d,p){let a=d.strideHeight,h=d.strideWidth,c=d.dilationHeight,f=d.dilationWidth,r=d.effectiveFilterHeight,m=d.effectiveFilterWidth,n=d.padInfo.top,g=d.padInfo.left,b="max"===p?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,s=De(d.outShape,t),y=s.values,i=d.outShape[1]*d.outShape[2]*d.outShape[3],v=d.outShape[2]*d.outShape[3],x=d.outShape[3];for(let e=0;e<d.batchSize;++e){var w=e*i,k=e*u[0];for(let o=0;o<d.inChannels;++o)for(let e=0;e<d.outHeight;++e){var I=e*a-n,S=Math.max(0,I),C=Math.min(d.inHeight,r+I),N=w+e*v;for(let i=0;i<d.outWidth;++i){let e=i*h-g,t=Math.max(0,e),a=Math.min(d.inWidth,m+e),r=b,n=0,s=0;for(let e=S;e<C;e+=c){var T=k+e*u[1];for(let e=t;e<a;e+=f){var $=l[T+e*u[2]+o];"max"===p&&$>r?r=$:"avg"===p&&(n+=$,s++)}if(isNaN(r))break}var _=N+i*x+o;y[_]="avg"===p?n/s:r}}}return s}function AC(e,t,a,p,h=!1,c=!1){let f=De(p.outShape,"int32"),r=p.strideHeight,m=p.strideWidth,g=p.dilationHeight,b=p.dilationWidth,n=p.effectiveFilterHeight,y=p.effectiveFilterWidth,s=p.padInfo.top,v=p.padInfo.left,x=De(t,a,e);for(let d=0;d<p.batchSize;++d)for(let u=0;u<p.inChannels;++u)for(let t=0;t<p.outHeight;++t){let o=t*r-s,l=o;for(;l<0;)l+=g;var w=Math.min(p.inHeight,n+o);for(let e=0;e<p.outWidth;++e){let a=e*m-v,r=a;for(;r<0;)r+=b;let n=Math.min(p.inWidth,y+a),s=Number.NEGATIVE_INFINITY,i=-1;for(let t=l;t<w;t+=g){var k=t-o;for(let e=r;e<n;e+=b){var I=e-a,S=x.get(d,t,e,u);S>s&&(s=S,i=h?c?((d*p.inHeight+t)*p.inWidth+e)*p.inChannels+u:(t*p.inWidth+e)*p.inChannels+u:k*y+I)}}f.set(i,d,t,e,u)}}return f}function EC(p,e,t,h,c,f){let a=c.strideDepth,r=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,b=c.dilationHeight,y=c.dilationWidth,n=c.effectiveFilterDepth,s=c.effectiveFilterHeight,v=c.effectiveFilterWidth,i=c.padInfo.front,o=c.padInfo.top,x=c.padInfo.left,w="max"===f?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,l=De(c.outShape,t),k=l.values,u=c.outShape[1]*c.outShape[2]*c.outShape[3]*c.outShape[4],I=c.outShape[2]*c.outShape[3]*c.outShape[4],S=c.outShape[3]*c.outShape[4],C=c.outShape[4];for(let e=0;e<c.batchSize;++e){var N=e*u,T=e*h[0];for(let d=0;d<c.inChannels;++d)for(let t=0;t<c.outDepth;++t){let e=t*a-i,u=e;for(;u<0;)u+=g;var $=Math.min(c.inDepth,n+e),_=N+t*I;for(let t=0;t<c.outHeight;++t){let e=t*r-o,l=e;for(;l<0;)l+=b;var A=Math.min(c.inHeight,s+e),E=_+t*S;for(let o=0;o<c.outWidth;++o){let e=o*m-x,t=e;for(;t<0;)t+=y;let a=Math.min(c.inWidth,v+e),r=E+o*C,n=w,s=0,i=0;for(let e=u;e<$;e+=g){var R=T+e*h[1];for(let e=l;e<A;e+=b){var F=R+e*h[2];for(let e=t;e<a;e+=y){var O=p[F+e*h[3]+d];if("max"===f&&O>n?n=O:"avg"===f&&(s+=O,i++),isNaN(n))break}if(isNaN(n))break}if(isNaN(n))break}var M=r+d;k[M]="avg"===f?s/i:n}}}}return l}function JG(f,m){let g=De(m.outShape,"int32"),e=m.strideDepth,r=m.strideHeight,b=m.strideWidth,y=m.dilationDepth,v=m.dilationHeight,x=m.dilationWidth,t=m.effectiveFilterDepth,w=m.effectiveFilterHeight,k=m.effectiveFilterWidth,n=m.padInfo.front,s=m.padInfo.top,I=m.padInfo.left;for(let c=0;c<m.batchSize;++c)for(let h=0;h<m.inChannels;++h)for(let a=0;a<m.outDepth;++a){let d=a*e-n,p=d;for(;p<0;)p+=y;var S=Math.min(m.inDepth,t+d);for(let t=0;t<m.outHeight;++t){let l=t*r-s,u=l;for(;u<0;)u+=v;var C=Math.min(m.inHeight,w+l);for(let e=0;e<m.outWidth;++e){let r=e*b-I,n=r;for(;n<0;)n+=x;let s=Math.min(m.inWidth,k+r),i=Number.NEGATIVE_INFINITY,o=-1;for(let a=p;a<S;a+=y){var N=a-d;for(let t=u;t<C;t+=v){var T=t-l;for(let e=n;e<s;e+=x){var $=e-r,_=f.get(c,a,t,e,h);_>=i&&(i=_,o=N*w*k+T*w+$)}}}g.set(o,c,a,t,e,h)}}}return g}function eH(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"];be(n,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;w.assert(S.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let u=S.computePool2DInfo(n.shape,s,i,1,o,l),d;var p;return d=1===u.filterWidth&&1===u.filterHeight&&w.arraysEqual(u.inShape,u.outShape)?Os({inputs:{x:n},backend:a}):(p=a.data.get(n.dataId).values,e=w.computeStrides(n.shape),e=uv(p,n.shape,n.dtype,e,u,"avg"),a.makeTensorInfo(u.outShape,n.dtype,e.values)),d}var tH={kernelName:Sa,backendName:"cpu",kernelFunc:eH};function nH(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;be(n,"avgPool3d");e=S.computePool3DInfo(n.shape,s,i,1,o,l,u),e=EC(a.data.get(n.dataId).values,n.shape,n.dtype,w.computeStrides(n.shape),e,"avg");return a.makeTensorInfo(e.shape,"float32",e.values)}var sH={kernelName:qd,backendName:"cpu",kernelFunc:nH};function rH(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;be([n,s],"avgPool3DGrad");let d=S.computePool3DInfo(s.shape,i,o,1,l,u),p=d.strideDepth,h=d.strideHeight,c=d.strideWidth,f=d.filterDepth,m=d.filterHeight,g=d.filterWidth,b=d.dilationDepth,y=d.dilationHeight,v=d.dilationWidth,x=d.effectiveFilterDepth,w=d.effectiveFilterHeight,k=d.effectiveFilterWidth,I=x-1-d.padInfo.front,C=k-1-d.padInfo.left,N=w-1-d.padInfo.top,T=De(s.shape,"float32"),$=1/(f*m*g),_=a.bufferSync(n);for(let l=0;l<d.batchSize;++l)for(let o=0;o<d.inChannels;++o)for(let i=0;i<d.inDepth;++i)for(let s=0;s<d.inHeight;++s)for(let e=0;e<d.inWidth;++e){let t=i-I,a=s-N,r=e-C,n=0;for(let e=0;e<x;e+=b){var A=(t+e)/p;if(!(A<0||A>=d.outDepth||Math.floor(A)!==A))for(let e=0;e<w;e+=y){var E=(a+e)/h;if(!(E<0||E>=d.outHeight||Math.floor(E)!==E))for(let e=0;e<k;e+=v){var R=(r+e)/c;R<0||R>=d.outWidth||Math.floor(R)!==R||(n+=_.get(l,A,E,R,o))}}}T.set(n*$,l,i,s,e,o)}return a.makeTensorInfo(T.shape,T.dtype,T.values)}var aH={kernelName:og,backendName:"cpu",kernelFunc:rH};function iH(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s}=t,i=s;be([n,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,d=S.computePool2DInfo(i.shape,o,l,1,u),p=d.strideHeight,h=d.strideWidth,c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,b=d.effectiveFilterHeight,y=d.effectiveFilterWidth,v=y-1-d.padInfo.left,x=b-1-d.padInfo.top,w=De(i.shape,"float32"),k=1/(c*f),I=a.data.get(n.dataId).values,C=De(n.shape,"float32",I);for(let i=0;i<d.batchSize;++i)for(let s=0;s<d.inChannels;++s)for(let n=0;n<d.inHeight;++n)for(let e=0;e<d.inWidth;++e){let t=n-x,a=e-v,r=0;for(let e=0;e<b;e+=m){var N=(t+e)/p;if(!(N<0||N>=d.outHeight||Math.floor(N)!==N))for(let e=0;e<y;e+=g){var T=(a+e)/h;T<0||T>=d.outWidth||Math.floor(T)!==T||(r+=C.get(i,N,T,s))}}w.set(r*k,i,n,e,s)}return a.makeTensorInfo(w.shape,w.dtype,w.values)}var oH={kernelName:ig,backendName:"cpu",kernelFunc:iH};function uH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,scale:s,offset:i,mean:o,variance:l}=t;w.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(null==s||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),be([n,o,l,s,i],"batchNorm");let u=r["varianceEpsilon"];null==u&&(u=.001);let d=a.data.get(n.dataId).values,p=a.data.get(o.dataId).values,h=a.data.get(l.dataId).values,c=s?a.data.get(s.dataId).values:new Float32Array([1]),f=i?a.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(d.length),g=f.length,b=c.length,y=h.length,v=p.length,x=0,k=0,I=0,S=0;for(let e=0;e<d.length;++e)m[e]=f[x++]+(d[e]-p[k++])*c[I++]/Math.sqrt(h[S++]+u),x>=g&&(x=0),k>=v&&(k=0),I>=b&&(I=0),S>=y&&(S=0);return a.makeTensorInfo(n.shape,n.dtype,m)}var lH={kernelName:Ma,backendName:"cpu",kernelFunc:uH};function cH(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{blockShape:s,crops:i}=r;be([n],"batchToSpaceND");var o=s.reduce((e,t)=>e*t),l=S.getReshaped(n.shape,s,o),u=S.getPermuted(l.length,s.length),d=S.getReshapedPermuted(n.shape,s,o),e=S.getSliceBeginCoords(i,s.length),o=S.getSliceSize(d,i,s.length),l=mt({inputs:{x:n},backend:a,attrs:{shape:l}}),u=wn({inputs:{x:l},backend:a,attrs:{perm:u}}),d=mt({inputs:{x:u},backend:a,attrs:{shape:d}}),o=ga({inputs:{x:d},backend:a,attrs:{begin:e,size:o}});return a.disposeIntermediateTensorInfo(l),a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(d),o}var dH={kernelName:oo,backendName:"cpu",kernelFunc:cH};function pH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,weights:s}=t,i=r["size"],o=a.data.get(n.dataId).values,l=a.data.get(s.dataId).values,u=ev(o,l,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,u)}var hH={kernelName:ug,backendName:"cpu",kernelFunc:pH};function fH(e){let{inputs:t,backend:a}=e,{s0:r,s1:n}=t,s=a.data.get(r.dataId).values,i=a.data.get(n.dataId).values,o=S.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return a.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var mH={kernelName:lg,backendName:"cpu",kernelFunc:fH},gH=st(Sr,(e,t)=>{return e>t.clipValueMax?t.clipValueMax:e<t.clipValueMin?t.clipValueMin:e}),bH={kernelName:Sr,backendName:"cpu",kernelFunc:gH},yH=e=>{let t=e.inputs["x"],a=e.backend,r=new Float32Array(w.sizeFromShape(t.shape)),n=a.data.get(t.dataId),s=n.complexTensorInfos.real,i=n.complexTensorInfos.imag,o=a.data.get(s.dataId).values,l=a.data.get(i.dataId).values;for(let e=0;e<o.length;e++){var u=o[e],d=l[e];r[e]=Math.hypot(u,d)}return a.makeOutput(r,t.shape,"float32")},vH={kernelName:Kd,backendName:"cpu",kernelFunc:yH};function no(e){let{inputs:t,backend:a}=e,r=t["input"],n=a.data.get(r.dataId).complexTensorInfos.imag,s=a.data.get(n.dataId).values;return a.makeTensorInfo(n.shape,n.dtype,s)}var xH={kernelName:Zd,backendName:"cpu",kernelFunc:no};function so(e){let{inputs:t,backend:s,attrs:a}=e,r=a["axis"],i=w.parseAxisParam(r,t[0].shape)[0],n=S.computeOutShape(t.map(e=>e.shape),i);if(0===w.sizeFromShape(n))return s.makeTensorInfo(n,t[0].dtype,[]);let o=t.filter(e=>0<w.sizeFromShape(e.shape));if(1===o.length)return Os({inputs:{x:o[0]},backend:s});var l=o.map(e=>e.shape);if(S.assertParamsConsistent(l,i),"complex64"===o[0].dtype){let e=o.map(e=>ma({inputs:{input:e},backend:s})),t=o.map(e=>no({inputs:{input:e},backend:s})),a=so({inputs:e,backend:s,attrs:{axis:i}}),r=so({inputs:t,backend:s,attrs:{axis:i}}),n=Rn({inputs:{real:a,imag:r},backend:s});return e.forEach(e=>s.disposeIntermediateTensorInfo(e)),t.forEach(e=>s.disposeIntermediateTensorInfo(e)),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(r),n}let u=o.map(e=>{var t=w.sizeFromShape(e.shape.slice(i));return mt({inputs:{x:e},backend:s,attrs:{shape:[-1,t]}})}),d=u.map(e=>({vals:s.data.get(e.dataId).values,shape:e.shape}));n=S.computeOutShape(u.map(e=>e.shape),1);e=1===u[0].shape[0],l=tv(d,n,t[0].dtype,e),e=S.computeOutShape(o.map(e=>e.shape),i),l=s.makeTensorInfo(e,t[0].dtype,l);return u.forEach(e=>s.disposeIntermediateTensorInfo(e)),l}var wH={kernelName:uo,backendName:"cpu",kernelFunc:so};function RC(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=r;be([n,s],"conv2d");let p=S.convertConv2DDataFormat(l),h=S.computeConv2DInfo(n.shape,s.shape,i,u,o,d,!1,p),c=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,b=h.padInfo.left,y=h.padInfo.top,v="channelsLast"===h.dataFormat,x=new Vt(h.outShape,n.dtype),k=w.computeStrides(n.shape),I=w.computeStrides(s.shape),C=k[0],N=v?k[1]:k[2],T=v?k[2]:1,$=v?1:k[1],_=x.strides[0],A=v?x.strides[1]:x.strides[2],E=v?x.strides[2]:1,R=v?1:x.strides[1],F=a.data.get(n.dataId).values,O=a.data.get(s.dataId).values,M=x.values;for(let e=0;e<h.batchSize;++e){var D=e*C,z=e*_;for(let e=0;e<h.outHeight;++e){var L=z+e*A,P=e*h.strideHeight-y;for(let e=0;e<c;++e){var B=P+e*m;if(!(B<0||B>=h.inHeight)){var W=e*I[0],U=D+B*N;for(let e=0;e<h.outWidth;++e){var V=L+e*E,G=e*h.strideWidth-b;for(let r=0;r<f;++r){var j=G+r*g;if(!(j<0||j>=h.inWidth)){let e=W+r*I[1],t=U+j*T,a=e;for(let e=0;e<h.inChannels;++e){var H=F[t+e*$];for(let e=0;e<h.outChannels;++e)M[V+e*R]+=H*O[a+e];a+=h.outChannels}}}}}}}}return a.makeTensorInfo(x.shape,x.dtype,M)}var kH={kernelName:$a,backendName:"cpu",kernelFunc:RC};function IH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=r;be([n,s],"conv2dBackpropFilter");let p=S.convertConv2DDataFormat(l),h=S.computeConv2DInfo(n.shape,d,i,1,o,u,!1,p),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=h,b="channelsLast"===h.dataFormat,y=new Vt(h.filterShape,"float32"),v=h.padInfo.left,x=h.padInfo.top,w=a.data.get(n.dataId).values,k=a.data.get(s.dataId).values,I=new Vt(n.shape,n.dtype,w),C=new Vt(s.shape,s.dtype,k);for(let e=0;e<m;++e){var N=Math.max(0,Math.ceil((x-e)/c)),T=Math.min(h.outHeight,(h.inHeight+x-e)/c);for(let i=0;i<g;++i){var $=Math.max(0,Math.ceil((v-i)/f)),_=Math.min(h.outWidth,(h.inWidth+v-i)/f);for(let s=0;s<h.inChannels;++s)for(let n=0;n<h.outChannels;++n){let r=0;for(let a=0;a<h.batchSize;++a)for(let t=N;t<T;++t){var A=e+t*c-x;for(let e=$;e<_;++e){var E=i+e*f-v;r+=b?I.get(a,A,E,s)*C.get(a,t,e,n):I.get(a,s,A,E)*C.get(a,n,t,e)}}y.set(r,e,i,s,n)}}}return a.makeTensorInfo(y.shape,y.dtype,y.values)}var SH={kernelName:cg,backendName:"cpu",kernelFunc:IH};function CH(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r;be([n,s],"conv2dBackpropInput");let p=w.computeStrides(s.shape),h=w.computeStrides(n.shape),c=S.convertConv2DDataFormat(u),f=S.computeConv2DInfo(i,s.shape,o,1,l,d,!1,c),m=new Vt(f.inShape,"float32"),g=m.values,b=a.data.get(n.dataId).values,y=a.data.get(s.dataId).values,[v,x,k]=p,{batchSize:I,filterHeight:C,filterWidth:N,inChannels:T,inHeight:$,inWidth:_,outChannels:A,outHeight:E,outWidth:R,strideHeight:F,strideWidth:O}=f;c=f.dataFormat;var M=C-1-f.padInfo.top,D=N-1-f.padInfo.left,e="channelsLast"===c,z=m.strides[0],L=e?m.strides[1]:m.strides[2],P=e?m.strides[2]:1,B=e?1:m.strides[1],W=h[0],U=e?h[1]:h[2],V=e?h[2]:1,G=e?1:h[1];for(let o=0;o<I;++o)for(let i=0;i<T;++i)for(let t=0;t<$;++t){var j=t-M,H=Math.max(0,Math.ceil(j/F)),q=Math.min(E,(C+j)/F);for(let e=0;e<_;++e){let a=e-D,r=Math.max(0,Math.ceil(a/O)),n=Math.min(R,(N+a)/O),s=0;for(let t=H;t<q;++t){var X=t*F-j;for(let e=r;e<n;++e){var K=e*O-a,Y=W*o+U*t+V*e,Z=v*(C-1-X)+x*(N-1-K)+k*i;for(let e=0;e<A;++e){var Q=b[Y+G*e],J=y[Z+e];s+=Q*J}}}var ee=z*o+L*t+P*e+B*i;g[ee]=s}}return a.makeTensorInfo(m.shape,m.dtype,m.values)}var NH={kernelName:_a,backendName:"cpu",kernelFunc:CH};function TH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dilations:l}=r;be([n,s],"conv3d");let u=S.computeConv3DInfo(n.shape,s.shape,i,l,o),{filterDepth:d,filterHeight:p,filterWidth:h,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,b=g.front,y=g.left,v=g.top,x=new Vt(u.outShape,n.dtype),k=a.data.get(n.dataId).values,I=a.data.get(s.dataId).values,C=x.values,N=w.computeStrides(n.shape),T=w.computeStrides(s.shape);for(let e=0;e<u.batchSize;++e){var $=e*N[0],_=e*x.strides[0];for(let e=0;e<u.outDepth;++e){var A=_+e*x.strides[1],E=e*u.strideDepth-b;for(let e=0;e<d;++e){var R=E+e*c;if(!(R<0||R>=u.inDepth)){var F=e*T[0],O=$+R*N[1];for(let e=0;e<u.outHeight;++e){var M=A+e*x.strides[2],D=e*u.strideHeight-v;for(let e=0;e<p;++e){var z=D+e*f;if(!(z<0||z>=u.inHeight)){var L=F+e*T[1],P=O+z*N[2];for(let e=0;e<u.outWidth;++e){var B=M+e*u.outChannels,W=e*u.strideWidth-y;for(let r=0;r<h;++r){var U=W+r*m;if(!(U<0||U>=u.inWidth)){let e=L+r*T[2],t=P+U*u.inChannels,a=e;for(let e=0;e<u.inChannels;++e){var V=k[t+e];for(let e=0;e<u.outChannels;++e)C[B+e]+=V*I[a+e];a+=u.outChannels}}}}}}}}}}}return a.makeTensorInfo(x.shape,x.dtype,x.values)}var $H={kernelName:Xd,backendName:"cpu",kernelFunc:TH};function _H(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;be([n,s],"conv3dBackpropFilterV2");let u=w.computeStrides(n.shape),d=w.computeStrides(s.shape),p=S.computeConv3DInfo(n.shape,l,i,1,o),h=p.strideDepth,c=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,b=p.filterWidth,y=new Vt(p.filterShape,"float32"),v=y.values,[x,k,I,C]=y.strides,N=a.data.get(s.dataId).values,[T,$,_,A]=d,E=a.data.get(n.dataId).values,[R,F,O,M]=u,D=p.padInfo.front,z=p.padInfo.left,L=p.padInfo.top;for(let i=0;i<m;++i){var P=Math.max(0,Math.ceil((D-i)/h)),B=Math.min(p.outDepth,(p.inDepth+D-i)/h),W=i*x;for(let s=0;s<g;++s){var U=Math.max(0,Math.ceil((L-s)/c)),V=Math.min(p.outHeight,(p.inHeight+L-s)/c),G=s*k+W;for(let n=0;n<b;++n){var j=Math.max(0,Math.ceil((z-n)/f)),H=Math.min(p.outWidth,(p.inWidth+z-n)/f),q=n*I+G;for(let r=0;r<p.inChannels;++r){var X=r*C+q;for(let a=0;a<p.outChannels;++a){let t=0;for(let e=0;e<p.batchSize;++e){var K=e*R,Y=e*T;for(let e=P;e<B;++e){var Z=(i+e*h-D)*F+K,Q=e*$+Y;for(let e=U;e<V;++e){var J=(s+e*c-L)*O+Z,ee=e*_+Q;for(let e=j;e<H;++e){var te=(n+e*f-z)*M+J,ae=e*A+ee;t+=E[te+r]*N[ae+a]}}}}v[X+a]=t}}}}}return a.makeTensorInfo(y.shape,y.dtype,y.values)}var AH={kernelName:dg,backendName:"cpu",kernelFunc:_H};function EH(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;be([n],"conv3dBackpropInputV2");let u=w.computeStrides(n.shape),d=w.computeStrides(s.shape),p=S.computeConv3DInfo(l,s.shape,o,1,i),h=new Vt(p.inShape,"float32"),c=h.values,[f,m,g,b]=h.strides,y=a.data.get(n.dataId).values,[v,x,k,I]=u,C=a.data.get(s.dataId).values,[N,T,$,_]=d,{batchSize:A,filterDepth:E,filterHeight:R,filterWidth:F,inChannels:O,inDepth:M,inHeight:D,inWidth:z,outChannels:L,outDepth:P,outHeight:B,outWidth:W,strideDepth:U,strideHeight:V,strideWidth:G}=p,j=E-1-p.padInfo.front,H=R-1-p.padInfo.top,q=F-1-p.padInfo.left;for(let l=0;l<A;++l)for(let o=0;o<O;++o)for(let a=0;a<M;++a){var X=a-j,K=Math.max(0,Math.ceil(X/U)),Y=Math.min(P,(E+X)/U);for(let t=0;t<D;++t){var Z=t-H,Q=Math.max(0,Math.ceil(Z/V)),J=Math.min(B,(R+Z)/V);for(let e=0;e<z;++e){let r=e-q,n=Math.max(0,Math.ceil(r/G)),s=Math.min(W,(F+r)/G),i=0;for(let a=K;a<Y;++a){var ee=a*U-X;for(let t=Q;t<J;++t){var te=t*V-Z;for(let e=n;e<s;++e){var ae=e*G-r,re=v*l+x*a+k*t+I*e,ne=N*(E-1-ee)+T*(R-1-te)+$*(F-1-ae)+_*o;for(let e=0;e<L;++e){var se=y[re+e],ie=C[ne+e];i+=se*ie}}}}c[f*l+m*a+g*t+b*e+o]=i}}}return a.makeTensorInfo(h.shape,h.dtype,h.values)}var RH={kernelName:pg,backendName:"cpu",kernelFunc:EH},DH=st(Aa,e=>Math.cos(e)),FH={kernelName:Aa,backendName:"cpu",kernelFunc:DH},OH=st(Ea,e=>Math.cosh(e)),PH={kernelName:Ea,backendName:"cpu",kernelFunc:OH};function zH(e){let{inputs:t,backend:a,attrs:r}=e,{image:n,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[d,p,h,c]=n.shape,f=s.shape[0],[m,g]=o,b=De([f,m,g,c],"float32"),y=a.data.get(s.dataId).values,v=a.data.get(i.dataId).values,x=a.data.get(n.dataId).values,k=w.computeStrides(n.shape),I=w.computeStrides(b.shape);for(let r=0;r<f;r++){var S=4*r,C=y[S],N=y[1+S],T=y[2+S],$=y[3+S],_=v[r];if(!(d<=_)){var A=1<m?(T-C)*(p-1)/(m-1):0,E=1<g?($-N)*(h-1)/(g-1):0;for(let a=0;a<m;a++){var R=1<m?C*(p-1)+a*A:.5*(C+T)*(p-1);if(R<0||p-1<R)for(let t=0;t<g;t++)for(let e=0;e<c;e++){var F=e+t*I[2]+a*I[1]+r*I[0];b.values[F]=u}else if("bilinear"===l){var O=Math.floor(R),M=Math.ceil(R),D=R-O;for(let t=0;t<g;t++){var z=1<g?N*(h-1)+t*E:.5*(N+$)*(h-1);if(z<0||h-1<z)for(let e=0;e<c;e++){var L=e+t*I[2]+a*I[1]+r*I[0];b.values[L]=u}else{var P=Math.floor(z),B=Math.ceil(z),W=z-P;for(let e=0;e<c;e++){var U,V=x[U=e+P*k[2]+O*k[1]+_*k[0]],G=x[U=e+B*k[2]+O*k[1]+_*k[0]],j=x[U=e+P*k[2]+M*k[1]+_*k[0]],H=x[U=e+B*k[2]+M*k[1]+_*k[0]],V=V+(G-V)*W;U=e+t*I[2]+a*I[1]+r*I[0],b.values[U]=V+(j+(H-j)*W-V)*D}}}}else for(let t=0;t<g;++t){var q=1<g?N*(h-1)+t*E:.5*(N+$)*(h-1);if(q<0||h-1<q)for(let e=0;e<c;e++){var X=e+t*I[2]+a*I[1]+r*I[0];b.values[X]=u}else{var K=Math.round(q),Y=Math.round(R);for(let e=0;e<c;e++){var Z=e+K*k[2]+Y*k[1]+_*k[0],Q=e+t*I[2]+a*I[1]+r*I[0];b.values[Q]=x[Z]}}}}}}return a.makeTensorInfo(b.shape,b.dtype,b.values)}var MH={kernelName:co,backendName:"cpu",kernelFunc:zH};function LH(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{axis:s,exclusive:i,reverse:o}=r;be(n,"cumprod");let l=S.getAxesPermutation([s],n.shape.length),u=n;null!=l&&(u=wn({inputs:{x:n},backend:a,attrs:{perm:l}}));var d=S.getInnerMostAxes(1,n.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let p=cn(u.dtype,"int32"),h=w.makeOnesTypedArray(w.sizeFromShape(u.shape),p),c=a.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let t=0;t<c.length;t+=f)for(let e=0;e<f;e++){var g,b=m(t,e);0===e?h[b]=i?1:c[b]:(g=m(t,e-1),h[b]=i?c[g]*h[g]:c[b]*h[g])}e=a.makeTensorInfo(u.shape,p,h);if(null==l)return e;d=S.getUndoAxesPermutation(l),d=wn({inputs:{x:e},backend:a,attrs:{perm:d}});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(u),d}var BH={kernelName:hl,backendName:"cpu",kernelFunc:LH};function VH(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{axis:s,exclusive:i,reverse:o}=r;be(n,"cumsum");let l=S.getAxesPermutation([s],n.shape.length),u=n;null!=l&&(u=wn({inputs:{x:n},backend:a,attrs:{perm:l}}));var d=S.getInnerMostAxes(1,n.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let p=cn(u.dtype,"int32"),h=w.makeZerosTypedArray(w.sizeFromShape(u.shape),p),c=a.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let t=0;t<c.length;t+=f)for(let e=0;e<f;e++){var g,b=m(t,e);0===e?h[b]=i?0:c[b]:(g=m(t,e-1),h[b]=i?c[g]+h[g]:c[b]+h[g])}e=a.makeTensorInfo(u.shape,p,h);if(null==l)return e;d=S.getUndoAxesPermutation(l),d=wn({inputs:{x:e},backend:a,attrs:{perm:d}});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(u),d}var WH={kernelName:lo,backendName:"cpu",kernelFunc:VH};function UH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===n.shape.length){var l=ev(a.data.get(n.dataId).values,a.data.get(s.dataId).values,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,l)}if(2!==n.shape.length)throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`);l=W0(a.bufferSync(n),a.bufferSync(s),i,o);return a.makeTensorInfo(l.shape,s.dtype,l.values)}var GH={kernelName:hg,backendName:"cpu",kernelFunc:UH};function HH(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{blockSize:s,dataFormat:i}=r;w.assert("NHWC"===i,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=n.shape[0],l=n.shape[1],u=n.shape[2],d=n.shape[3],p=l*s,h=u*s,c=d/(s*s),f=a.data.get(n.dataId).values,m=new Float32Array(o*p*h*c),g=0;for(let t=0;t<o;++t)for(let e=0;e<p;++e){var b=Math.floor(e/s),y=e%s;for(let e=0;e<h;++e){var v=Math.floor(e/s),x=(y*s+e%s)*c;for(let e=0;e<c;++e){var k=e+x+d*(v+u*(b+l*t));m[g++]=f[k]}}}return a.makeTensorInfo([o,p,h,c],n.dtype,m)}var qH={kernelName:po,backendName:"cpu",kernelFunc:HH};function DC(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;be([n,s],"depthwiseConv2DNative");let d=w.computeStrides(n.shape),p=w.computeStrides(s.shape),h=l;null==h&&(h=[1,1]),w.assert(S.eitherStridesOrDilationsAreOne(i,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);let c=S.computeConv2DInfo(n.shape,s.shape,i,h,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:b,padInfo:y}=c,v=y.left,x=y.top,k=c.outChannels/c.inChannels,I=new Vt(c.outShape,n.dtype),C=a.data.get(n.dataId).values,N=a.data.get(s.dataId).values,T=I.values;for(let e=0;e<c.batchSize;++e){var $=e*d[0],_=e*I.strides[0];for(let e=0;e<c.outHeight;++e){var A=_+e*I.strides[1],E=e*c.strideHeight-x;for(let e=0;e<f;++e){var R=E+e*g;if(!(R<0||R>=c.inHeight)){var F=e*p[0],O=$+R*d[1];for(let e=0;e<c.outWidth;++e){var M=A+e*I.strides[2],D=e*c.strideWidth-v;for(let n=0;n<m;++n){var z=D+n*b;if(!(z<0||z>=c.inWidth)){let e=F+n*p[1],t=O+z*c.inChannels,a=M,r=e;for(let e=0;e<c.inChannels;++e){var L=C[t+e];for(let e=0;e<k;++e)T[a+e]+=L*N[r+e];a+=k,r+=k}}}}}}}}return a.makeTensorInfo(I.shape,I.dtype,I.values)}var jH={kernelName:Ra,backendName:"cpu",kernelFunc:DC};function KH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=r;be([n,s],"depthwiseConv2dNativeBackpropFilter");let p=S.computeConv2DInfo(n.shape,d,i,o,l,u,!0),{strideHeight:h,strideWidth:c,filterHeight:f,filterWidth:m}=p,g=new Vt(p.filterShape,"float32"),b=p.padInfo.left,y=p.padInfo.top,v=p.outChannels/p.inChannels,x=a.data.get(n.dataId).values,w=new Vt(n.shape,n.dtype,x),k=a.data.get(s.dataId).values,I=new Vt(s.shape,s.dtype,k);for(let o=0;o<f;++o){var C=Math.max(0,Math.ceil((y-o)/h)),N=Math.min(p.outHeight,(p.inHeight+y-o)/h);for(let i=0;i<m;++i){var T=Math.max(0,Math.ceil((b-i)/c)),$=Math.min(p.outWidth,(p.inWidth+b-i)/c);for(let s=0;s<p.outChannels;++s){let r=Math.trunc(s/v),e=s%v,n=0;for(let a=0;a<p.batchSize;++a)for(let t=C;t<N;++t){var _=o+t*h-y;for(let e=T;e<$;++e){var A=i+e*c-b;n+=w.get(a,_,A,r)*I.get(a,t,e,s)}}g.set(n,o,i,r,e)}}}return a.makeTensorInfo(g.shape,g.dtype,g.values)}var XH={kernelName:fg,backendName:"cpu",kernelFunc:KH};function YH(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=r;be([n,s],"depthwiseConv2DNativeBackpropInput");let p=w.computeStrides(n.shape),h=w.computeStrides(s.shape),c=S.computeConv2DInfo(d,s.shape,i,o,l,u,!0),f=new Vt(c.inShape,"float32"),m=f.values,[g,b,y]=f.strides,v=a.data.get(n.dataId).values,[x,k,I]=p,C=a.data.get(s.dataId).values,[N,T,$]=h,{batchSize:_,filterHeight:A,filterWidth:E,inChannels:R,inHeight:F,inWidth:O,outChannels:M,outHeight:D,outWidth:z,strideHeight:L,strideWidth:P}=c,B=A-1-c.padInfo.top,W=E-1-c.padInfo.left,U=M/R;for(let o=0;o<_;++o)for(let i=0;i<R;++i)for(let t=0;t<F;++t){var V=t-B,G=Math.max(0,Math.ceil(V/L)),j=Math.min(D,(A+V)/L);for(let e=0;e<O;++e){let a=e-W,r=Math.max(0,Math.ceil(a/P)),n=Math.min(z,(E+a)/P),s=0;for(let t=G;t<j;++t){var H=t*L-V;for(let e=r;e<n;++e){var q=e*P-a,X=x*o+k*t+I*e,K=N*(A-1-H)+T*(E-1-q)+$*i;for(let e=0;e<U;++e){var Y=v[X+(i*U+e)],Z=C[K+e];s+=Y*Z}}}m[g*o+b*t+y*e+i]=s}}return a.makeTensorInfo(f.shape,f.dtype,f.values)}var QH={kernelName:mg,backendName:"cpu",kernelFunc:YH};function ZH(e){let{inputs:t,backend:a}=e,r=t["x"],n=w.sizeFromShape(r.shape),s=a.data.get(r.dataId).values,i=De([n,n],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*n+e]=s[e];e=[...r.shape,...r.shape];return a.makeTensorInfo(e,i.dtype,i.values)}var JH={kernelName:gg,backendName:"cpu",kernelFunc:ZH},e6={kernelName:Yd,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:s,filter:i}=e,{strides:r,pad:n,dilations:o}=a,l=t,u=l.data.get(s.dataId).values,d=s.shape.length,p=l.data.get(i.dataId).values,h=i.shape.length,{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:v,strideHeight:x,strideWidth:k,filterHeight:I,filterWidth:C,dilationHeight:N,dilationWidth:T,outShape:$}=S.computeDilation2DInfo(s.shape,i.shape,r,n,"NHWC",o),_=w.sizeFromShape($),A=$.length,E=w.getArrayFromDType(s.dtype,_);for(let n=0;n<c;++n)for(let t=0;t<b;++t){var R=t*x-v.top;for(let e=0;e<y;++e){var F=e*k-v.left;for(let r=0;r<g;++r){let a=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){var O=R+t*N;if(0<=O&&O<f)for(let e=0;e<C;++e){var M,D=F+e*T;0<=D&&D<m&&(M=w.locToIndex([n,O,D,r],d,w.computeStrides(s.shape)),D=w.locToIndex([t,e,r],h,w.computeStrides(i.shape)),(D=u[M]+p[D])>a&&(a=D))}}var z=w.locToIndex([n,t,e,r],A,w.computeStrides($));E[z]=a}}}return{dataId:l.write(w.toTypedArray(E,s.dtype),$,s.dtype),shape:$,dtype:s.dtype}}},t6={kernelName:Qf,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:r,filter:n,dy:s}=e,{strides:i,pad:o,dilations:l}=a,u=t,d=w.toNestedArray(r.shape,u.data.get(r.dataId).values),p=w.toNestedArray(n.shape,u.data.get(n.dataId).values),{batchSize:h,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:v,strideWidth:x,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:N,outShape:T}=S.computeDilation2DInfo(r.shape,n.shape,i,o,"NHWC",l);w.assert(s.rank===T.length,()=>`Error in ${Qf}, dy must have the same rank as output ${T.length}, but got ${s.rank}`);let $=w.toNestedArray(T,u.data.get(s.dataId).values),_=w.makeZerosNestedTypedArray(n.shape,n.dtype);for(let i=0;i<h;++i)for(let t=0;t<g;++t){var A=t*v-y.top;for(let e=0;e<b;++e){var E=e*x-y.left;for(let s=0;s<m;++s){let a=Number.MIN_SAFE_INTEGER,r=0,n=0;for(let t=0;t<k;++t){var R=A+t*C;if(0<=R&&R<c)for(let e=0;e<I;++e){var F=E+e*N;0<=F&&F<f&&((F=d[i][R][F][s]+p[t][e][s])>a&&(a=F,r=t,n=e))}}_[r][n][s]+=$[i][t][e][s]}}}return{dataId:u.write(w.toTypedArray(_,r.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},n6={kernelName:Yf,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:r,filter:n,dy:s}=e,{strides:i,pad:o,dilations:l}=a,u=t,d=w.toNestedArray(r.shape,u.data.get(r.dataId).values),p=w.toNestedArray(n.shape,u.data.get(n.dataId).values),{batchSize:h,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:v,strideWidth:x,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:N,outShape:T}=S.computeDilation2DInfo(r.shape,n.shape,i,o,"NHWC",l);w.assert(s.rank===T.length,()=>`Error in ${Yf}, dy must have the same rank as output ${T.length}, but got ${s.rank}`);let $=w.toNestedArray(T,u.data.get(s.dataId).values),_=w.makeZerosNestedTypedArray(r.shape,r.dtype);for(let i=0;i<h;++i)for(let t=0;t<g;++t){var A=t*v-y.top;for(let e=0;e<b;++e){var E=e*x-y.left;for(let s=0;s<m;++s){let a=Number.MIN_SAFE_INTEGER,r=A<0?0:A,n=E<0?0:E;for(let t=0;t<k;++t){var R=A+t*C;if(0<=R&&R<c)for(let e=0;e<I;++e){var F,O=E+e*N;0<=O&&O<f&&((F=d[i][R][O][s]+p[t][e][s])>a&&(a=F,r=R,n=O))}}_[i][r][n][s]+=$[i][t][e][s]}}}return{dataId:u.write(w.toTypedArray(_,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function Xl(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{axis:s,keepDims:i}=r;be(n,"sum");let o;o="bool"===n.dtype?xr({inputs:{x:n},backend:a,attrs:{dtype:"int32"}}):Os({inputs:{x:n},backend:a});let l=o.shape.length,u=w.parseAxisParam(s,o.shape),d=S.getAxesPermutation(u,l),p=u,h=o;null!=d&&(h=wn({inputs:{x:o},backend:a,attrs:{perm:d}}),p=S.getInnerMostAxes(p.length,l)),S.assertAxesAreInnerMostDims("sum",p,h.shape.length);let[c,f]=S.computeOutAndReduceShapes(h.shape,p),m=S.upcastType(h.dtype,"int32"),g=Dd(a,c,m),b=w.sizeFromShape(f),y=a.data.get(g.dataId).values,v=a.data.get(h.dataId).values;for(let e=0;e<y.length;++e){let t=e*b,a=0;for(let e=0;e<b;++e)a+=v[t+e];y[e]=a}var x;return i&&(x=S.expandShapeToKeepDim(g.shape,u),e=g,g=mt({inputs:{x:g},backend:a,attrs:{shape:x}}),a.disposeIntermediateTensorInfo(e)),a.disposeIntermediateTensorInfo(o),null!=d&&a.disposeIntermediateTensorInfo(h),g}var s6={kernelName:oi,backendName:"cpu",kernelFunc:Xl};function r6(e){let{inputs:t,backend:n,attrs:a}=e,r=a["equation"],s=t,{allDims:i,summedDims:o,idDims:l}=S.decodeEinsumEquation(r,s.length);S.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=S.getEinsumComputePath(o,l),p=d.length,h=null,c=i.length,f=[];for(let e=0;e<p;++e){for(var m of d[e]){let{permutationIndices:e,expandDims:t}=S.getEinsumPermutation(c,l[m]),a;S.isIdentityPermutation(e)?a=s[m]:(a=wn({inputs:{x:s[m]},backend:n,attrs:{perm:e}}),f.push(a));let r=a.shape.slice();for(let e=0;e<t.length;++e)r.splice(t[e],0,1);w.arraysEqual(a.shape,r)||(a=mt({inputs:{x:a},backend:n,attrs:{shape:r}}),f.push(a)),null===h?h=a:(h=Hp({inputs:{a:a,b:h},backend:n}),f.push(h))}e<p-1&&(0<=u[e]&&(h=Xl({inputs:{x:h},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(h)),c--)}for(var g of f)g!==h&&n.disposeIntermediateTensorInfo(g);return h}var a6={kernelName:Qd,backendName:"cpu",kernelFunc:r6};function i6(e){let{inputs:t,backend:a}=e,{dy:r,y:n}=t;be([r,n],"eluGrad");let s=new Float32Array(w.sizeFromShape(n.shape)),i=a.data.get(n.dataId).values,o=a.data.get(r.dataId).values;for(let e=0;e<i.length;++e){var l=i[e];s[e]=1<=l?o[e]:o[e]*(l+1)}return a.makeTensorInfo(n.shape,"float32",s)}var o6={kernelName:bg,backendName:"cpu",kernelFunc:i6},u6=S.ERF_P,l6=S.ERF_A1,c6=S.ERF_A2,d6=S.ERF_A3,p6=S.ERF_A4,h6=S.ERF_A5,f6=st(fl,e=>{var t=Math.sign(e),a=Math.abs(e),e=1/(1+u6*a);return t*(1-((((h6*e+p6)*e+d6)*e+c6)*e+l6)*e*Math.exp(-a*a))}),m6={kernelName:fl,backendName:"cpu",kernelFunc:f6};function Od(e){let{inputs:t,backend:a,attrs:r}=e,n=t["input"],s=r["dim"],i=n.shape.length,o=n.shape.slice(),l=s;return s<0&&(w.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),mt({inputs:{x:n},backend:a,attrs:{shape:o}})}var g6={kernelName:fo,backendName:"cpu",kernelFunc:Od},b6=At((e,t)=>e/t),lv=Gt(Da,b6),Mm={kernelName:Da,backendName:"cpu",kernelFunc:lv};function FC(e,a,r){let t=e.shape,n=t[0],s=t[1],i=r.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[n,s],d=w.sizeFromShape(u),p=w.getTypedArrayFromDType("float32",d),h=w.getTypedArrayFromDType("float32",d);for(let t=0;t<n;t++){var c=ga({inputs:{x:o},backend:r,attrs:{begin:[t,0],size:[1,s]}}),f=ga({inputs:{x:l},backend:r,attrs:{begin:[t,0],size:[1,s]}}),m=Rn({inputs:{real:c,imag:f},backend:r}),{real:g,imag:b}=y6(m,a,r),y=S.mergeRealAndImagArrays(g,b);for(let e=0;e<s;e++){var v=S.getComplexWithIndex(y,e);p[t*s+e]=v.real,h[t*s+e]=v.imag}r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m)}var x=r.makeTensorInfo(u,"float32",p),k=r.makeTensorInfo(u,"float32",h),e=Rn({inputs:{real:x,imag:k},backend:r});return r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(k),e}function y6(e,t,a){var r=w.sizeFromShape(e.shape),n=a.data.get(e.dataId),s=a.data.get(n.complexTensorInfos.real.dataId).values,i=a.data.get(n.complexTensorInfos.imag.dataId).values;if(v6(r)){var o=Lm(s,i,r,t,a),l=[e.shape[0],e.shape[1]];if(t){var u=a.makeTensorInfo(l,"float32",o.real),d=a.makeTensorInfo(l,"float32",o.imag),p=a.makeTensorInfo([],"float32",w.createScalarValue(r,"float32")),h=Os({inputs:{x:p},backend:a}),c=Mm.kernelFunc({inputs:{a:u,b:p},backend:a}),n=Mm.kernelFunc({inputs:{a:d,b:h},backend:a}),e=a.data.get(c.dataId).values,l=a.data.get(n.dataId).values;return a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(n),{real:e,imag:l}}return o}t=x6(S.mergeRealAndImagArrays(s,i),r,t);return S.splitRealAndImagArrays(t)}function v6(e){return 0==(e&e-1)}function Lm(e,t,a,r,n){if(1===a)return{real:e,imag:t};var s=S.mergeRealAndImagArrays(e,t),i=a/2,o=S.complexWithEvenIndex(s),l=o.real,u=o.imag,d=[l.length],p=n.makeTensorInfo(d,"float32",l),h=n.makeTensorInfo(d,"float32",u),c=Rn({inputs:{real:p,imag:h},backend:n}),f=S.complexWithOddIndex(s),m=f.real,g=f.imag,b=[m.length],y=n.makeTensorInfo(b,"float32",m),v=n.makeTensorInfo(b,"float32",g),x=Rn({inputs:{real:y,imag:v},backend:n}),w=Lm(l,u,i,r,n),k=w.real,I=w.imag,C=[k.length],N=n.makeTensorInfo(C,"float32",k),T=n.makeTensorInfo(C,"float32",I),e=Rn({inputs:{real:N,imag:T},backend:n}),t=Lm(m,g,i,r,n),o=t.real,d=t.imag,s=[o.length],f=n.makeTensorInfo(s,"float32",o),b=n.makeTensorInfo(s,"float32",d),l=Rn({inputs:{real:f,imag:b},backend:n}),u=S.exponents(a,r),w=[u.real.length],k=n.makeTensorInfo(w,"float32",u.real),C=n.makeTensorInfo(w,"float32",u.imag),I=Rn({inputs:{real:k,imag:C},backend:n}),m=Hp({inputs:{a:I,b:l},backend:n}),g=Kl({inputs:{a:e,b:m},backend:n}),i=iv({inputs:{a:e,b:m},backend:n}),t=ma({inputs:{input:g},backend:n}),o=ma({inputs:{input:i},backend:n}),s=no({inputs:{input:g},backend:n}),d=no({inputs:{input:i},backend:n}),a=so({inputs:[t,o],backend:n,attrs:{axis:0}}),r=so({inputs:[s,d],backend:n,attrs:{axis:0}}),w=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values;return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(N),n.disposeIntermediateTensorInfo(T),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(C),n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),{real:w,imag:u}}function x6(n,s,i){var e=new Float32Array(2*s);for(let r=0;r<s;r++){let t=0,a=0;for(let e=0;e<s;e++){var o=S.exponent(r*e,s,i),l=S.getComplexWithIndex(n,e);t+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}i&&(t/=s,a/=s),S.assignToTypedArray(e,t,a,r)}return e}function w6(e){let{inputs:t,backend:a}=e,r=t["input"],n=w.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=n/s,o=mt({inputs:{x:r},backend:a,attrs:{shape:[i,s]}}),l=FC(o,!1,a),u=mt({inputs:{x:l},backend:a,attrs:{shape:r.shape}});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(l),u}var k6={kernelName:yg,backendName:"cpu",kernelFunc:w6};function cv(e){let{backend:t,attrs:a}=e,{shape:r,value:n,dtype:s}=a,i=s||w.inferDtype(n),o=w.getArrayFromDType(i,w.sizeFromShape(r));return S6(o,n,i),t.makeTensorInfo(r,i,o)}var I6={kernelName:ml,backendName:"cpu",kernelFunc:cv};function S6(e,t,a){e.fill(t)}var C6={kernelName:go,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let a=e["image"],r=t,s=w.getTypedArrayFromDType(a.dtype,w.sizeFromShape(a.shape)),[n,i,o,l]=a.shape,u=r.data.get(a.dataId).values;for(let e=0;e<n;e++){var d=e*o*i*l;for(let e=0;e<i;e++){var p=e*(o*l);for(let n=0;n<o;n++){var h,c=n*l;for(let r=0;r<l;r++){let e=Math.round(o-n-1),t=d+p+c+r,a=u[t];0<=e&&e<o&&(h=d+p+e*l+r,a=u[h]),s[t]=a}}}}return{dataId:r.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},N6=At((e,t)=>Math.floor(e/t)),T6=Gt(za,N6,null,"int32"),$6={kernelName:za,backendName:"cpu",kernelFunc:T6};function _6(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=r,m=RC({inputs:{x:n,filter:s},backend:a,attrs:{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h}});var g;return i&&(g=m,m=Kl({inputs:{a:m,b:i},backend:a}),a.disposeIntermediateTensorInfo(g)),c&&(g=m,m=ov(a,m,c,o,f),a.disposeIntermediateTensorInfo(g)),m}var A6={kernelName:aa,backendName:"cpu",kernelFunc:_6};function E6(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=r,m=DC({inputs:{x:n,filter:s},backend:a,attrs:{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h}});var g;return i&&(g=m,m=Kl({inputs:{a:m,b:i},backend:a}),a.disposeIntermediateTensorInfo(g)),c&&(g=m,m=ov(a,m,c,o,f),a.disposeIntermediateTensorInfo(g)),m}var R6={kernelName:ia,backendName:"cpu",kernelFunc:E6};function D6(e){let{inputs:t,backend:a}=e,{params:r,indices:n}=t,s=w.sizeFromShape(r.shape),i=n.shape,o=i[i.length-1],[l,u,d,p]=S.prepareAndValidate(r,n);if(0===u)return a.makeTensorInfo(l,r.dtype,[]);e=Y0(a.data.get(n.dataId).values,a.bufferSync(r),r.dtype,u,o,d,p,r.shape,s);return a.makeTensorInfo(l,r.dtype,e.values)}var F6={kernelName:yo,backendName:"cpu",kernelFunc:D6};function O6(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,indices:s}=t,{axis:i,batchDims:o}=r;be([n,s],"gatherV2");let l=w.parseAxisParam(i,n.shape)[0],u=a.data.get(s.dataId).values,d=n.shape[l];for(let t=0;t<u.length;++t){let e=u[t];w.assert(e<=d-1&&0<=e,()=>`GatherV2: the index value ${e} is not in [0, ${d-1}]`)}let p=o;null==o&&(p=0);var h=w.sizeFromShape(s.shape),c=S.segment_util.collectGatherOpShapeInfo(n,s,l,p),f=mt({inputs:{x:n},backend:a,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=mt({inputs:{x:s},backend:a,attrs:{shape:[c.batchSize,h/c.batchSize]}}),e=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize],h=a.bufferSync(m),e=Q0(a.bufferSync(f),h,e);return a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(m),a.makeTensorInfo(c.outputShape,e.dtype,e.values)}var P6={kernelName:bo,backendName:"cpu",kernelFunc:O6};function z6(e){let{inputs:t,backend:a}=e,r=t["input"],n=w.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=n/s,o=mt({inputs:{x:r},backend:a,attrs:{shape:[i,s]}}),l=FC(o,!0,a),u=mt({inputs:{x:l},backend:a,attrs:{shape:r.shape}});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(l),u}var M6={kernelName:vg,backendName:"cpu",kernelFunc:z6},L6=st(gl,e=>Number.isFinite(e)?1:0,"bool"),B6={kernelName:gl,backendName:"cpu",kernelFunc:L6},V6=st(bl,e=>Math.abs(e)===1/0?1:0,"bool"),W6={kernelName:bl,backendName:"cpu",kernelFunc:V6},U6=st(yl,e=>Number.isNaN(e)?1:0,"bool"),G6={kernelName:yl,backendName:"cpu",kernelFunc:U6};function H6(e){let{backend:t,attrs:a}=e,{start:r,stop:n,num:s}=a,i=nC(r,n,s);return t.makeTensorInfo([i.length],"float32",i)}var q6={kernelName:xg,backendName:"cpu",kernelFunc:H6},j6=st(vl,e=>Math.log1p(e)),K6={kernelName:vl,backendName:"cpu",kernelFunc:j6},X6=At((e,t)=>e&&t),Y6=Gt(ko,X6,null,"bool"),Q6={kernelName:ko,backendName:"cpu",kernelFunc:Y6},Z6=st(xl,e=>e?0:1,"bool"),J6={kernelName:xl,backendName:"cpu",kernelFunc:Z6},eq=At((e,t)=>e||t),tq=Gt(Jd,eq,null,"bool"),nq={kernelName:Jd,backendName:"cpu",kernelFunc:tq};function sq(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{depthRadius:i,bias:s,alpha:o,beta:l}=r;be(n,"LRN");let u=n.shape[3],d=u-1,p=a.data.get(n.dataId).values,h=w.sizeFromShape(n.shape),c=new Float32Array(h);for(let e=0;e<h;e++){var f=function(e){let t=e%u,a=e-t+Math.max(0,t-i),r=e-t+Math.min(t+i,d),n=0;for(;a<=r;a++){var s=p[a];n+=s*s}return n}(e),f=p[e]*Math.pow(s+o*f,-l);c[e]=f}return a.makeTensorInfo(n.shape,n.dtype,c)}var rq={kernelName:ep,backendName:"cpu",kernelFunc:sq};function aq(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=r;be(i,"LRNGrad");let p=w.sizeFromShape(i.shape),h=i.shape[3],c=a.data.get(i.dataId).values,f=a.data.get(n.dataId).values,m=a.data.get(s.dataId).values,g=new Float32Array(p),b=p;for(let s=0;s<b;s++){let e=s%h,a=s-e+Math.max(0,e-o),r=s-e+Math.min(h,e+o+1),n=0;for(let e=a;e<r;e++)n+=Math.pow(f[e],2);n=u*n+l;for(let t=a;t<r;t++){let e=-2*u*d*f[t]*m[s]/n;s===t&&(e+=Math.pow(n,-d)),e*=c[s],g[t]+=e}}return a.makeTensorInfo(i.shape,n.dtype,g)}var iq={kernelName:wg,backendName:"cpu",kernelFunc:aq};function OC(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{reductionIndices:s,keepDims:i}=r,o=a,l=n.shape,u=l.length,d=w.parseAxisParam(s,l),p=d,h=S.getAxesPermutation(p,u),c=o.data.get(n.dataId).values;if(null!=h){let t=new Array(u);for(let e=0;e<t.length;e++)t[e]=l[h[e]];c=sv(c,l,n.dtype,h,t),p=S.getInnerMostAxes(p.length,u),l=t}be(n,"max"),S.assertAxesAreInnerMostDims("max",p,u);let[f,m]=S.computeOutAndReduceShapes(l,p),g=w.sizeFromShape(m),b=rC(c,g,f,n.dtype),y=o.write(b,f,n.dtype),v=f;return i&&(v=S.expandShapeToKeepDim(f,d)),{dataId:y,shape:v,dtype:n.dtype}}var oq={kernelName:Ua,backendName:"cpu",kernelFunc:OC};function uq(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"];be(n,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;w.assert(S.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let u=S.computePool2DInfo(n.shape,s,i,1,o,l),d;var p;return d=1===u.filterWidth&&1===u.filterHeight&&w.arraysEqual(u.inShape,u.outShape)?Os({inputs:{x:n},backend:a}):(p=a.data.get(n.dataId).values,e=w.computeStrides(n.shape),e=uv(p,n.shape,n.dtype,e,u,"max"),a.makeTensorInfo(u.outShape,n.dtype,e.values)),d}var lq={kernelName:Ha,backendName:"cpu",kernelFunc:uq};function cq(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;be(n,"maxPool3d");e=S.computePool3DInfo(n.shape,s,i,1,o,l,u),e=EC(a.data.get(n.dataId).values,n.shape,n.dtype,w.computeStrides(n.shape),e,"max");return a.makeTensorInfo(e.shape,"float32",e.values)}var dq={kernelName:tp,backendName:"cpu",kernelFunc:cq};function pq(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;be([n,s],"maxPool3DGrad");let d=S.computePool3DInfo(s.shape,i,o,1,l,u),p=a.bufferSync(s),h=JG(p,d),c=d.strideDepth,f=d.strideHeight,m=d.strideWidth,g=d.dilationDepth,b=d.dilationHeight,y=d.dilationWidth,v=d.effectiveFilterDepth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,k=v-1-d.padInfo.front,I=w-1-d.padInfo.left,C=x-1-d.padInfo.top,N=De(s.shape,"float32"),T=a.bufferSync(n);for(let l=0;l<d.batchSize;++l)for(let o=0;o<d.inChannels;++o)for(let i=0;i<d.inDepth;++i)for(let a=0;a<d.inHeight;++a)for(let t=0;t<d.inWidth;++t){let e=i-k,r=a-C,n=t-I,s=0;for(let a=0;a<v;a+=g){var $=(e+a)/c;if(!($<0||$>=d.outDepth||Math.floor($)!==$))for(let t=0;t<x;t+=b){var _=(r+t)/f;if(!(_<0||_>=d.outHeight||Math.floor(_)!==_))for(let e=0;e<w;e+=y){var A,E=(n+e)/m;E<0||E>=d.outWidth||Math.floor(E)!==E||0!=(A=v*x*w-1-h.get(l,$,_,E,o)===a*x*w+t*w+e?1:0)&&(s+=T.get(l,$,_,E,o)*A)}}}N.set(s,l,i,a,t,o)}return a.makeTensorInfo(N.shape,N.dtype,N.values)}var hq={kernelName:Ig,backendName:"cpu",kernelFunc:pq};function fq(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s,output:i}=t,o=s;be([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:p}=r,h=S.computePool2DInfo(o.shape,l,u,1,d,p),c=a.data.get(o.dataId).values,f=De(h.outShape,o.dtype,AC(c,o.shape,o.dtype,h).values),m=h.strideHeight,g=h.strideWidth,b=h.dilationHeight,y=h.dilationWidth,v=h.effectiveFilterHeight,x=h.effectiveFilterWidth,w=x-1-h.padInfo.left,k=v-1-h.padInfo.top,I=De(o.shape,"float32"),C=a.data.get(n.dataId).values,N=De(n.shape,"float32",C);for(let i=0;i<h.batchSize;++i)for(let s=0;s<h.inChannels;++s)for(let n=0;n<h.inHeight;++n)for(let t=0;t<h.inWidth;++t){let e=n-k,a=t-w,r=0;for(let t=0;t<v;t+=b){var T=(e+t)/m;if(!(T<0||T>=h.outHeight||Math.floor(T)!==T))for(let e=0;e<x;e+=y){var $,_=(a+e)/g;_<0||_>=h.outWidth||Math.floor(_)!==_||0!=($=v*x-1-f.get(i,T,_,s)===t*x+e?1:0)&&(r+=N.get(i,T,_,s)*$)}}I.set(r,i,n,t,s)}return a.makeTensorInfo(I.shape,I.dtype,I.values)}var mq={kernelName:kg,backendName:"cpu",kernelFunc:fq};function gq(e,t,a,r,n){var s=uv(e,t,a,w.computeStrides(t),n,"max"),r=AC(e,t,a,n,!0,r);return[s.values,r.values]}var bq={kernelName:Sg,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let r=e["x"],{filterSize:n,strides:s,pad:i,includeBatchInIndex:o}=t,l=a;be(r,"MaxPoolWithArgmax");var e=l.data.get(r.dataId).values,t=S.computePool2DInfo(r.shape,n,s,[1,1],i),[a,e]=gq(e,r.shape,r.dtype,o,t),a=l.write(a,t.outShape,r.dtype),e=l.write(e,t.outShape,r.dtype);return[{dataId:a,shape:t.outShape,dtype:r.dtype},{dataId:e,shape:t.outShape,dtype:"int32"}]}};function yq(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{axis:s,keepDims:i}=r,o=w.parseAxisParam(s,n.shape),l=S.computeOutAndReduceShapes(n.shape,o)[1],u=w.sizeFromShape(l),d=[],p=a.makeTensorInfo([],"float32",new Float32Array([u]));d.push(p);e=xr({inputs:{x:n},backend:a,attrs:{dtype:"float32"}});d.push(e);e=lv({inputs:{a:e,b:p},backend:a});d.push(e);e=Xl({inputs:{x:e},backend:a,attrs:{axis:s,keepDims:i}});return d.forEach(e=>a.disposeIntermediateTensorInfo(e)),e}var vq={kernelName:qa,backendName:"cpu",kernelFunc:yq};function xq(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{axis:s,keepDims:i}=r;be(n,"min");let o=w.parseAxisParam(s,n.shape),l=o,u=S.getAxesPermutation(l,n.shape.length),d=n;null!=u&&(d=wn({inputs:{x:n},backend:a,attrs:{perm:u}}),l=S.getInnerMostAxes(l.length,n.shape.length)),S.assertAxesAreInnerMostDims("min",l,d.shape.length);let[p,h]=S.computeOutAndReduceShapes(d.shape,l),c=w.sizeFromShape(h),f=w.makeZerosTypedArray(w.sizeFromShape(p),d.dtype),m=a.data.get(d.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,a=m[t];for(let e=0;e<c;++e){var g=m[t+e];(Number.isNaN(g)||g<a)&&(a=g)}f[e]=a}null!=u&&a.disposeIntermediateTensorInfo(d);var b=a.makeTensorInfo(p,d.dtype,f);if(i){e=S.expandShapeToKeepDim(p,o),e=mt({inputs:{x:b},backend:a,attrs:{shape:e}});return a.disposeIntermediateTensorInfo(b),e}return b}var wq={kernelName:ja,backendName:"cpu",kernelFunc:xq};function kq(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{paddings:s,mode:i}=r;be(n,"mirrorPad");let o=s.map((e,t)=>e[0]+n.shape[t]+e[1]),l=s.map(e=>e[0]),u=s.map((e,t)=>e[0]+n.shape[t]),d="reflect"===i?0:1,p=a.data.get(n.dataId).values,h=n.shape.length,c=w.computeStrides(n.shape),f=w.sizeFromShape(o),m=o.length,g=w.computeStrides(o),b=w.getTypedArrayFromDType(n.dtype,f);for(let e=0;e<f;e++){let t=w.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-d:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+d);t=t.map((e,t)=>e-l[t]);var y=w.locToIndex(t,h,c);b[e]=p[y]}return{dataId:a.write(b,o,n.dtype),shape:o,dtype:n.dtype}}var Iq={kernelName:Xa,backendName:"cpu",kernelFunc:kq},Sq=At((e,t)=>{var a=e%t;return e<0&&t<0||0<=e&&0<=t?a:(a+t)%t}),Cq=Gt(wl,Sq),Nq={kernelName:wl,backendName:"cpu",kernelFunc:Cq},Tq=xa(Wd());function PC(e){let{inputs:t,backend:a,attrs:r}=e,n=t["logits"],s=r["dim"],i=n.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);var l=w.parseAxisParam([o],n.shape),u=OC({inputs:{x:n},backend:a,attrs:{reductionIndices:l,keepDims:!1}}),d=S.expandShapeToKeepDim(u.shape,l),p=mt({inputs:{x:u},backend:a,attrs:{shape:d}}),h=iv({inputs:{a:n,b:p},backend:a}),c=j0({inputs:{x:h},backend:a}),e=Xl({inputs:{x:c},backend:a,attrs:{axis:l,keepDims:!1}}),l=mt({inputs:{x:e},backend:a,attrs:{shape:d}}),d=lv({inputs:{a:c,b:l},backend:a});return a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(l),d}var $q={kernelName:ui,backendName:"cpu",kernelFunc:PC};function _q(e){let{inputs:t,backend:a,attrs:r}=e,n=t["logits"],{numSamples:s,seed:i,normalized:o}=r;be(n,"multinomial");let l=o?n:PC({inputs:{logits:n},backend:a,attrs:{dim:-1}}),u=l.shape[0],d=l.shape[1],p=a.data.get(l.dataId).values,h=[u,s],c=w.makeZerosTypedArray(w.sizeFromShape(h),"int32");for(let n=0;n<u;++n){let t=n*d,a=new Float32Array(d-1);a[0]=p[t];for(let e=1;e<a.length;++e)a[e]=a[e-1]+p[t+e];let e=Tq.alea(i.toString()),r=n*s;for(let t=0;t<s;++t){var f=e();c[r+t]=a.length;for(let e=0;e<a.length;e++)if(f<a[e]){c[r+t]=e;break}}}return o||a.disposeIntermediateTensorInfo(l),a.makeTensorInfo(h,"int32",c)}var Aq={kernelName:Cg,backendName:"cpu",kernelFunc:_q},Eq=xs.nonMaxSuppressionV3Impl;function Rq(e){let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;be(n,"NonMaxSuppression");var u=a.data.get(n.dataId).values,e=a.data.get(s.dataId).values,e=Eq(u,e,i,o,l)["selectedIndices"];return a.makeTensorInfo([e.length],"int32",new Int32Array(e))}var Dq={kernelName:Co,backendName:"cpu",kernelFunc:Rq},Fq=xs.nonMaxSuppressionV4Impl;function Oq(e){let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;be(n,"NonMaxSuppressionPadded");var d=a.data.get(n.dataId).values,e=a.data.get(s.dataId).values,{selectedIndices:d,validOutputs:e}=Fq(d,e,i,o,l,u);return[a.makeTensorInfo([d.length],"int32",new Int32Array(d)),a.makeTensorInfo([],"int32",new Int32Array([e]))]}var Pq={kernelName:kl,backendName:"cpu",kernelFunc:Oq},zq=xs.nonMaxSuppressionV5Impl;function Mq(e){let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;be(n,"NonMaxSuppressionWithScore");var d=a.data.get(n.dataId).values,e=a.data.get(s.dataId).values,{selectedIndices:d,selectedScores:e}=zq(d,e,i,o,l,u);return[a.makeTensorInfo([d.length],"int32",new Int32Array(d)),a.makeTensorInfo([e.length],"float32",new Float32Array(e))]}var Lq={kernelName:No,backendName:"cpu",kernelFunc:Mq};function Bq(e){let{inputs:t,backend:a,attrs:r}=e,n=t["indices"],{depth:s,onValue:i,offValue:o}=r;be(n,"oneHot");let l=w.sizeFromShape(n.shape),u=new Float32Array(l*s);u.fill(o);var d=a.data.get(n.dataId).values;for(let e=0;e<l;++e)0<=d[e]&&d[e]<s&&(u[e*s+d[e]]=i);return a.makeTensorInfo([...n.shape,s],"int32",u)}var Vq={kernelName:$o,backendName:"cpu",kernelFunc:Bq};function Pd(e){let{inputs:t,backend:a}=e,r=t["x"];if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"!==r.dtype)return cv({backend:a,attrs:{shape:r.shape,value:0,dtype:r.dtype}});var n=ma({inputs:{input:r},backend:a}),s=Pd({inputs:{x:n},backend:a}),i=no({inputs:{input:r},backend:a}),o=Pd({inputs:{x:i},backend:a}),e=Rn({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),e}var Wq={kernelName:Ho,backendName:"cpu",kernelFunc:Pd};function zC(e){let{inputs:t,backend:a}=e,r=t["x"];if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"!==r.dtype)return cv({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}});var n=ma({inputs:{input:r},backend:a}),s=zC({inputs:{x:n},backend:a}),i=no({inputs:{input:r},backend:a}),o=Pd({inputs:{x:i},backend:a}),e=Rn({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),e}var Uq={kernelName:To,backendName:"cpu",kernelFunc:zC};function MC(e){let{inputs:t,backend:a,attrs:r}=e,n=r["axis"];if(1===t.length)return Od({inputs:{input:t[0]},backend:a,attrs:{dim:n}});let s=t[0].shape,i=t[0].dtype;t.forEach(e=>{w.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(e=>{e=Od({inputs:{input:e},backend:a,attrs:{dim:n}});return o.push(e),e}),u=so({inputs:l,backend:a,attrs:{axis:n}});return o.forEach(e=>a.disposeIntermediateTensorInfo(e)),u}var Gq={kernelName:_o,backendName:"cpu",kernelFunc:MC};function Hq(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{paddings:s,constantValue:i}=r;be(n,"pad");let o=s.map((e,t)=>e[0]+n.shape[t]+e[1]),l=s.map(e=>e[0]),u=a.data.get(n.dataId).values,d=w.sizeFromShape(n.shape),p=n.shape.length,h=w.computeStrides(n.shape),c=w.sizeFromShape(o),f=o.length,m=w.computeStrides(o),g=w.getTypedArrayFromDType(n.dtype,c);0!==i&&g.fill(i);for(let e=0;e<d;e++){var b=w.indexToLoc(e,p,h).map((e,t)=>e+l[t]),b=w.locToIndex(b,f,m);g[b]=u[e]}return{dataId:a.write(g,o,n.dtype),shape:o,dtype:n.dtype}}var LC={kernelName:Qa,backendName:"cpu",kernelFunc:Hq},qq=At((e,t)=>Math.pow(e,t)),jq=Gt(Za,qq),Kq={kernelName:Za,backendName:"cpu",kernelFunc:jq};function Xq(e){let{backend:t,attrs:a}=e,{start:r,stop:n,dtype:s,step:i}=a,o=rv(r,n,i,s);return t.makeTensorInfo([o.length],s,o)}var Yq={kernelName:Il,backendName:"cpu",kernelFunc:Xq},Qq=st(Sl,e=>1/e),Zq={kernelName:Sl,backendName:"cpu",kernelFunc:Qq};function Jq(e){let{inputs:t,backend:a,attrs:r}=e,n=t["images"],{alignCorners:s,halfPixelCenters:i,size:o}=r;be(n,"resizeBilinear");let l=w.computeStrides(n.shape),[u,d]=o,[p,h,c,f]=n.shape,m=a.data.get(n.dataId).values,g=new Float32Array(w.sizeFromShape([p,u,d,f])),b=[s&&1<u?h-1:h,s&&1<d?c-1:c],y=[s&&1<u?u-1:u,s&&1<d?d-1:d],v=0,x=b[0]/y[0],k=b[1]/y[1];for(let a=0;a<p;a++)for(let t=0;t<u;t++){let e;e=i?x*(t+.5)-.5:x*t;var I=Math.max(0,Math.floor(e)),S=e-I,C=Math.min(h-1,Math.ceil(e)),N=a*l[0]+I*l[1],T=a*l[0]+C*l[1];for(let t=0;t<d;t++){let e;e=i?k*(t+.5)-.5:k*t;var $=Math.max(0,Math.floor(e)),_=e-$,A=Math.min(c-1,Math.ceil(e)),E=N+$*l[2],R=T+$*l[2],F=N+A*l[2],O=T+A*l[2];for(let e=0;e<f;e++){var M=m[E+e],D=m[R+e],z=m[F+e],L=m[O+e],M=M+(z-M)*_;g[v++]=M+(D+(L-D)*_-M)*S}}}return a.makeTensorInfo([p,u,d,f],"float32",g)}var ej={kernelName:ti,backendName:"cpu",kernelFunc:Jq};function tj(e){let{inputs:t,backend:a,attrs:r}=e,{images:n,dy:s}=t,i=r["alignCorners"];be([s,n],"resizeBilinearGrad");let o=w.computeStrides(n.shape),[l,u,d,p]=n.shape,[,h,c]=s.shape,f=new Float32Array(l*u*d*p),m=[i&&1<h?u-1:u,i&&1<c?d-1:d],g=[i&&1<h?h-1:h,i&&1<c?c-1:c],b=m[0]/g[0],y=m[1]/g[1],v=a.data.get(s.dataId).values,x=0;for(let e=0;e<l;e++){var k=e*o[0];for(let e=0;e<h;e++){var I=e*b,S=Math.floor(I),C=Math.min(Math.ceil(I),u-1),N=k+S*o[1],T=k+C*o[1],$=I-S,_=1-$;for(let e=0;e<c;e++){var A=e*y,E=Math.floor(A),R=Math.min(Math.ceil(A),d-1),F=A-E,A=1-F,O=N+E*o[2],M=N+R*o[2],D=T+E*o[2],z=T+R*o[2],L=_*A,P=_*F,B=$*A,W=$*F;for(let e=0;e<p;e++){var U=v[x++];f[O+e]+=U*L,f[M+e]+=U*P,f[D+e]+=U*B,f[z+e]+=U*W}}}}return a.makeTensorInfo([l,d,u,p],"float32",f)}var nj={kernelName:Tg,backendName:"cpu",kernelFunc:tj};function sj(e){let{inputs:t,backend:a,attrs:r}=e,n=t["images"],{alignCorners:s,halfPixelCenters:i,size:o}=r;be(n,"resizeNearestNeighbor");let l=w.computeStrides(n.shape),[u,d]=o,[p,h,c,f]=n.shape,m=a.data.get(n.dataId).values,g=new Float32Array(p*u*d*f),b=[s&&1<u?h-1:h,s&&1<d?c-1:c],y=[s&&1<u?u-1:u,s&&1<d?d-1:d],v=b[0]/y[0],x=b[1]/y[1],k=0;for(let e=0;e<p;e++){var I=e*l[0];for(let a=0;a<u;a++){let e=i?v*(a+.5):v*a,t=Math.min(h-1,s?Math.round(e):Math.floor(e));i&&(t=Math.max(0,t));var S=I+t*l[1];for(let a=0;a<d;a++){let e=i?x*(a+.5):x*a,t=Math.min(c-1,s?Math.round(e):Math.floor(e));i&&(t=Math.max(0,t));var C=S+t*l[2];for(let e=0;e<f;e++){var N=m[C+e];g[k++]=N}}}}return a.makeTensorInfo([p,u,d,f],n.dtype,g)}var rj={kernelName:Cl,backendName:"cpu",kernelFunc:sj};function aj(e){let{inputs:t,backend:a,attrs:r}=e,{images:n,dy:s}=t,i=r["alignCorners"];be([s,n],"resizeNearestNeighborGrad");let o=w.computeStrides(n.shape),l=w.computeStrides(s.shape),[u,d,p,h]=n.shape,[,c,f]=s.shape,m=new Float32Array(u*d*p*h),g=a.data.get(s.dataId).values,b=[i&&1<c?d-1:d,i&&1<f?p-1:p],y=[i&&1<c?c-1:c,i&&1<f?f-1:f],v=b[0]/y[0],x=b[1]/y[1],k=1/v,I=1/x,S=2*Math.ceil(k)+2,C=2*Math.ceil(I)+2;for(let e=0;e<u;e++){var N=e*o[0];for(let n=0;n<d;n++){var T=N+n*o[1],$=Math.floor(n*k),_=Math.floor($-S/2);for(let r=0;r<p;r++){var A=T+r*o[2],E=Math.floor(r*I),R=Math.floor(E-C/2);for(let a=0;a<h;a++){let t=0;for(let e=0;e<S;e++){var F=e+_;if(!(F<0||c<=F)){var O=N+F*l[1],F=F*v,F=Math.min(d-1,i?Math.round(F):Math.floor(F));if(n===F)for(let e=0;e<C;e++){var M,D=e+R;D<0||f<=D||(M=O+D*l[2],D=D*x,D=Math.min(p-1,i?Math.round(D):Math.floor(D)),r===D&&(t+=g[M+a]))}}}m[A+a]=t}}}}return a.makeTensorInfo(n.shape,n.dtype,m)}var ij={kernelName:Ng,backendName:"cpu",kernelFunc:aj};function oj(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],s=r["dims"];be(n,"reverse");let i=n.shape.length,o=w.parseAxisParam(s,n.shape);if(0===i)return Os({inputs:{x:n},backend:a});let l=new Vt(n.shape,n.dtype),u=a.bufferSync(n);for(let a=0;a<l.size;a++){let e=l.indexToLoc(a),t=e.slice();o.forEach(e=>t[e]=n.shape[e]-1-t[e]),l.set(u.get(...t),...e)}return a.makeTensorInfo(l.shape,l.dtype,l.values)}var uj={kernelName:Ro,backendName:"cpu",kernelFunc:oj},lj={kernelName:qo,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let r=e["image"],{radians:n,fillValue:s,center:i}=t,o=a,l=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(r.shape)),[u,d,p,h]=r.shape,[c,f]=S.getImageCenter(i,d,p),m=Math.sin(n),g=Math.cos(n),b=o.data.get(r.dataId).values;for(let e=0;e<u;e++){var y=e*p*d*h;for(let r=0;r<d;r++){var v=r*(p*h);for(let a=0;a<p;a++){var x=a*h;for(let t=0;t<h;t++){var k=[u,r,a,t],I=k[2],C=k[1],k=(I-c)*g-(C-f)*m,C=(I-c)*m+(C-f)*g,k=Math.round(k+c),C=Math.round(C+f);let e=s;"number"!=typeof s&&(e=3===t?255:s[t]),0<=k&&k<p&&0<=C&&C<d&&(N=y+C*(p*h)+k*h+t,e=b[N]);var N=y+v+x+t;l[N]=e}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},cj=st(Do,e=>{var t=Math.floor(e);return e-t<.5?Math.floor(e):.5<e-t?Math.ceil(e):t%2==0?t:t+1}),dj={kernelName:Do,backendName:"cpu",kernelFunc:cj};function BC(e,n,s,i,o,t,l,u,a,d){var r=[i/o,o],p=e.values,h=n.values;if(0===i)return De(s,n.dtype);let c=De(r,n.dtype);c.values.fill(a);for(let r=0;r<t;r++){let t=[],a=0;for(let e=0;e<l;e++){var f=p[r*l+e];t.push(f),a+=f*u[e]}if(a<0||a>=i/o)throw new Error(`Invalid indices: ${t} does not index into ${s}`);for(let e=0;e<o;e++)d?c.values[a*o+e]+=h[r*o+e]:c.values[a*o+e]=0===n.rank?h[0]:h[r*o+e]}return c}function pj(e){let{inputs:t,backend:a,attrs:r}=e,{indices:n,updates:s}=t,i=r["shape"],{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=S.calculateShapes(s,n,i),h=a.bufferSync(n),c=a.bufferSync(s),f=BC(h,c,i,p,u,l,o,d,0,!0);return a.makeTensorInfo(i,f.dtype,f.values)}var hj={kernelName:Fo,backendName:"cpu",kernelFunc:pj};function fj(e){let{inputs:t,backend:a}=e,{condition:r,t:n,e:s}=t;be([r,n,s],"select");let i=r.shape.length,o=a.data.get(r.dataId).values,l=a.data.get(n.dataId).values,u=a.data.get(s.dataId).values,d=cn(n.dtype,s.dtype),p=w.makeZerosTypedArray(w.sizeFromShape(n.shape),d),h=0,c=0===i||1<i||1===n.shape.length?1:w.sizeFromShape(n.shape.slice(1));for(let t=0;t<o.length;t++)for(let e=0;e<c;e++)1===o[t]?p[h++]=l[t]:p[h++]=u[t];return a.makeTensorInfo(n.shape,d,p)}var mj={kernelName:Oo,backendName:"cpu",kernelFunc:fj},gj=S.SELU_SCALEALPHA,bj=S.SELU_SCALE,yj=st(Nl,e=>0<=e?bj*e:gj*(Math.exp(e)-1)),vj={kernelName:Nl,backendName:"cpu",kernelFunc:yj},xj=st(Tl,e=>e<0?-1:0<e?1:0),wj={kernelName:Tl,backendName:"cpu",kernelFunc:xj},kj=st(ri,e=>Math.sin(e)),Ij={kernelName:ri,backendName:"cpu",kernelFunc:kj},Sj=st(zo,e=>Math.sinh(e)),Cj={kernelName:zo,backendName:"cpu",kernelFunc:Sj},Nj=1.1920928955078125e-7,nw=Math.log(Nj)+2,Tj=st($l,e=>{let t=-nw<e,a=e<nw,r=Math.exp(e),n;return n=a?r:t?e:Math.log(1+r),n}),$j={kernelName:$l,backendName:"cpu",kernelFunc:Tj};function _j(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{blockShape:s,paddings:i}=r;be([n],"spaceToBatchND");let o=w.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<n.shape.length;++e)l.push([0,0]);var u=LC.kernelFunc({inputs:{x:n},backend:a,attrs:{paddings:l,constantValue:0}}),d=S.getReshaped(u.shape,s,o,!1),p=S.getPermuted(d.length,s.length,!1),e=S.getReshapedPermuted(u.shape,s,o,!1),d=mt({inputs:{x:u},backend:a,attrs:{shape:d}}),p=wn({inputs:{x:d},backend:a,attrs:{perm:p}}),e=mt({inputs:{x:p},backend:a,attrs:{shape:e}});return a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(p),e}var Aj={kernelName:Mo,backendName:"cpu",kernelFunc:_j};function Ej(e){let{inputs:t,backend:a}=e,{indices:r,values:n,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(1!==n.shape.length)throw new Error(`Values must be a vector, saw:
        ${n.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=a.data.get(r.dataId).values,l=a.data.get(n.dataId).values,u=a.data.get(s.dataId).values,d=a.data.get(i.dataId).values[0],[p,h,c,f,m]=pC(o,r.shape,r.dtype,l,n.dtype,u,d);return[a.makeTensorInfo(h,r.dtype,p),a.makeTensorInfo([h[0]],n.dtype,c),a.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),a.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var Rj={kernelName:sp,backendName:"cpu",kernelFunc:Ej};function Dj(e){let{inputs:t,backend:a}=e,{inputIndices:r,inputShape:n,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(1!==n.shape.length)throw new Error(`Input shape should be a vector but received shape
        ${n.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);var i=Array.from(a.data.get(n.dataId).values),o=a.data.get(r.dataId).values,e=Array.from(a.data.get(s.dataId).values),[o,i,e]=hC(o,r.shape,r.dtype,i,e);return[a.makeTensorInfo(i,r.dtype,o),a.makeTensorInfo([e.length],s.dtype,new Int32Array(e))]}var Fj={kernelName:_l,backendName:"cpu",kernelFunc:Dj};function Oj(e){let{inputs:t,backend:a}=e,{data:r,indices:n,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==n.shape.length)throw new Error(`Indices should be a vector but received shape
          ${n.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(n.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");var i=a.data.get(r.dataId).values,o=a.data.get(n.dataId).values,e=a.data.get(s.dataId).values,[o,e]=av(i,r.shape,r.dtype,o,e,!0);return a.makeTensorInfo(e,r.dtype,o)}var Pj={kernelName:rp,backendName:"cpu",kernelFunc:Oj};function zj(e){let{inputs:t,backend:a}=e,{data:r,indices:n,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==n.shape.length)throw new Error(`Indices should be a vector but received shape
         ${n.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(n.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");var i=a.data.get(r.dataId).values,o=a.data.get(n.dataId).values,e=a.data.get(s.dataId).values,[o,e]=av(i,r.shape,r.dtype,o,e);return a.makeTensorInfo(e,r.dtype,o)}var Mj={kernelName:ap,backendName:"cpu",kernelFunc:zj};function Lj(e){let{inputs:t,backend:a,attrs:r}=e,{sparseIndices:n,sparseValues:s,defaultValue:i}=t,o=r["outputShape"],{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:h}=S.calculateShapes(s,n,o),c=a.bufferSync(n),f=a.bufferSync(s),m=a.data.get(i.dataId).values[0],g=BC(c,f,o,h,d,u,l,p,m,!1);return a.makeTensorInfo(o,g.dtype,g.values)}var Bj={kernelName:ip,backendName:"cpu",kernelFunc:Lj};function Vj(e){let{inputs:t,backend:r,attrs:a}=e,n=t["x"],{numOrSizeSplits:s,axis:i}=a,o=w.parseAxisParam(i,n.shape)[0],l=S.prepareSplitSize(n,s,o),u=new Array(n.shape.length).fill(0),d=n.shape.slice();return l.map(e=>{let t=[...d];t[o]=e;var a=ga({inputs:{x:n},backend:r,attrs:{begin:u,size:t}});return u[o]+=e,a})}var Wj={kernelName:Lo,backendName:"cpu",kernelFunc:Vj},Uj={kernelName:Al,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let a=e["x"],r=t;be(a,"square");let n=r.data.get(a.dataId).values,s=new Float32Array(n.length);for(let e=0;e<n.length;++e){var i=n[e];s[e]=i*i}return{dataId:r.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Gj=st(hi,(e,t)=>{return isNaN(e)?NaN:0<e?1:t.alpha}),Hj={kernelName:hi,backendName:"cpu",kernelFunc:Gj};function qj(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r;be(n,"stridedSlice");let{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=wt.sliceInfo(n.shape,s,i,o,l,u,d,p,h),k;var I;return m?k=mt({inputs:{x:n},backend:a,attrs:{shape:f}}):g||b?(w.assert(1<=n.shape.length,()=>`Input must have rank at least 1, got: ${n.shape.length}`),I=wt.computeOutShape(y,v,x),I=ga({inputs:{x:n},backend:a,attrs:{begin:y,size:I}}),k=mt({inputs:{x:I},backend:a,attrs:{shape:f}}),a.disposeIntermediateTensorInfo(I)):(I=mC(c,a.bufferSync(n),x,y),k=a.makeTensorInfo(f,I.dtype,I.values)),k}var jj={kernelName:Bo,backendName:"cpu",kernelFunc:qj};function Kj(e){let{inputs:t,backend:a,attrs:r}=e,{separator:n,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:p}=t,h=a.data.get(d.dataId).values,c=a.data.get(p.dataId).values,[f,m]=gC(h,c,n,s,i,o,l,u);return[a.makeTensorInfo([f.length],"string",f),a.makeTensorInfo(p.shape,"int32",m)]}var Xj={kernelName:op,backendName:"cpu",kernelFunc:Kj};function Yj(e){let{inputs:t,backend:a,attrs:r}=e,n=r["skipEmpty"],{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);var[o,l,u]=bC(a.data.get(s.dataId).values,a.data.get(i.dataId).values[0],n),e=l.length;return[a.makeTensorInfo([e,2],"int32",o),a.makeTensorInfo([e],"string",l),a.makeTensorInfo([2],"int32",new Int32Array(u))]}var Qj={kernelName:$g,backendName:"cpu",kernelFunc:Yj};function Zj(e){let{inputs:t,backend:a,attrs:r}=e,n=r["numBuckets"],s=t["input"];if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(n<=0)throw new Error("Number of buckets must be at least 1");e=yC(a.data.get(s.dataId).values,n);return a.makeTensorInfo(s.shape,"int32",e)}var Jj={kernelName:_g,backendName:"cpu",kernelFunc:Zj},e5=st(Vo,e=>Math.tan(e)),t5={kernelName:Vo,backendName:"cpu",kernelFunc:e5},n5=st(di,e=>Math.tanh(e)),s5={kernelName:di,backendName:"cpu",kernelFunc:n5};function r5(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],s=r["reps"];be(n,"tile");e=xC(a.bufferSync(n),s);return a.makeTensorInfo(e.shape,e.dtype,e.values)}var a5={kernelName:Cr,backendName:"cpu",kernelFunc:r5};function i5(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{k:s,sorted:i}=r;be(n,"topk");var[o,e]=kC(a.data.get(n.dataId).values,n.shape,n.dtype,s,i);return[a.makeTensorInfo(o.shape,o.dtype,o.values),a.makeTensorInfo(e.shape,e.dtype,e.values)]}var o5={kernelName:Wo,backendName:"cpu",kernelFunc:i5};function u5(e){let{inputs:t,attrs:a,backend:r}=e,{image:n,transforms:i}=t,{interpolation:o,fillMode:l,fillValue:u,outputShape:s}=a,[d,p,h,c]=n.shape,[f,m]=null!=s?s:[p,h],g=[d,f,m,c],b=w.computeStrides(n.shape),y=b[0],v=b[1],x=b[2],k=w.getTypedArrayFromDType(n.dtype,w.sizeFromShape(g));k.fill(u);let I=r.data.get(n.dataId).values,S=r.data.get(i.dataId).values;for(let s=0;s<d;++s){var C=1===i.shape[0]?S:S.subarray(8*s,8*s+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<c;++a){let e,t=C[6]*r+C[7]*n+1;if(0!=t){var N=(C[0]*r+C[1]*n+C[2])/t,T=(C[3]*r+C[4]*n+C[5])/t,$=sw(N,h,l),_=sw(T,p,l);switch(o){case"nearest":e=f5(I,p,h,y,v,x,s,_,$,a,u);break;case"bilinear":e=m5(I,p,h,y,v,x,s,_,$,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}T=s*y+n*v+r*x+a;k[T]=e}}return r.makeTensorInfo(g,n.dtype,k)}return{dataId:r.write(k,g,n.dtype),shape:n.shape,dtype:n.dtype}}var l5={kernelName:Uo,backendName:"cpu",kernelFunc:u5};function sw(e,t,a){switch(a){case"reflect":return c5(e,t);case"wrap":return d5(e,t);case"nearest":return h5(e,t);default:return p5(e,t)}}function c5(e,t){let a=e;var r;return a<0?a=t<=1?0:(r=2*t,a<r&&(a=r*Math.trunc(-a/r)+a),a<-t?a+r:-a-1):a>t-1&&(t<=1?a=0:(r=2*t,a-=r*Math.trunc(a/r),a>=t&&(a=r-a-1))),w.clamp(0,a,t-1)}function d5(e,t){let a=e;return a<0?t<=1?a=0:a+=t*(Math.trunc(-a/(t-1))+1):a>t-1&&(t<=1?a=0:a-=t*Math.trunc(a/(t-1))),w.clamp(0,a,t-1)}function p5(e,t){return e}function h5(e,t){return w.clamp(0,e,t-1)}function Du(e,t,a,r,n,s,i,o,l,u,d){return 0<=o&&o<t&&0<=l&&l<a?e[i*r+o*n+l*s+u]:d}function f5(e,t,a,r,n,s,i,o,l,u,d){return Du(e,t,a,r,n,s,i,Math.round(o),Math.round(l),u,d)}function m5(e,t,a,r,n,s,i,o,l,u,d){var p=Math.floor(o),h=Math.floor(l),c=p+1,f=h+1;return(c-o)*((f-l)*Du(e,t,a,r,n,s,i,p,h,u,d)+(l-h)*Du(e,t,a,r,n,s,i,p,f,u,d))+(o-p)*((f-l)*Du(e,t,a,r,n,s,i,c,h,u,d)+(l-h)*Du(e,t,a,r,n,s,i,c,f,u,d))}function g5(e){let{inputs:t,attrs:a,backend:r}=e,n=a["axis"],s=t["x"];be(s,"unique");var{outputValues:i,outputShape:o,indices:e}=IC(r.data.get(s.dataId).values,n,s.shape,s.dtype);return[r.makeTensorInfo(o,s.dtype,i),r.makeTensorInfo([e.length],"int32",e)]}var b5={kernelName:Ag,backendName:"cpu",kernelFunc:g5};function y5(e){let{inputs:t,backend:a,attrs:r}=e,n=t["value"],s=r["axis"];s<0&&(s+=n.shape.length);let i=n.shape.length,o=n.shape[s],l=new Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=n.shape[e]);let d=new Array(i).fill(0),p=n.shape.slice();p[s]=1;let h=new Array(o);for(let e=0;e<h.length;e++){d[s]=e;var c=ga({inputs:{x:n},backend:a,attrs:{begin:d,size:p}});h[e]=mt({inputs:{x:c},backend:a,attrs:{shape:l}}),a.disposeIntermediateTensorInfo(c)}return h}var v5={kernelName:Go,backendName:"cpu",kernelFunc:y5};function x5(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,segmentIds:s}=t,i=r["numSegments"];be(n,"unsortedSegmentSum");let o=n.shape.length,l=s.shape.length,u=[],d=[],p=o-l,h=s;for(let e=0;e<p;++e){var c=Od({inputs:{input:h},backend:a,attrs:{dim:e+1}});h=c,d.push(c)}for(let e=0;e<i;++e){var f=w.createScalarValue(e,"int32"),m=a.makeTensorInfo([],"int32",f),g=H0({inputs:{a:m,b:h},backend:a}),b=xr({inputs:{x:g},backend:a,attrs:{dtype:"float32"}}),y=Hp({inputs:{a:b,b:n},backend:a}),f=Xl({inputs:{x:y},backend:a,attrs:{axis:0,keepDims:!1}});u.push(f),d.push(m),d.push(g),d.push(b),d.push(y),d.push(f)}e=MC({inputs:u,backend:a,attrs:{axis:0}});return d.forEach(e=>a.disposeIntermediateTensorInfo(e)),e}var w5={kernelName:up,backendName:"cpu",kernelFunc:x5},k5=[TG,xU,_G,EG,NU,DG,OG,zG,LG,VG,UG,HG,jG,YG,ZG,tH,sH,aH,oH,CG,lH,dH,hH,mH,SU,$U,bH,wU,vH,wH,kH,SH,NH,$H,AH,RH,FH,PH,MH,BH,WH,GH,qH,jH,XH,QH,JH,e6,t6,n6,a6,yG,o6,_U,m6,AU,g6,RU,k6,I6,C6,FU,$6,A6,R6,F6,P6,PU,MU,kU,M6,xH,B6,W6,G6,vG,BU,WU,q6,GU,K6,Q6,J6,nq,rq,iq,oq,qU,lq,dq,hq,mq,bq,vq,wq,KU,Iq,Nq,Aq,YU,ZU,Dq,Pq,Lq,eG,Vq,Uq,Gq,LC,Kq,wG,sG,Yq,IU,Mm,Zq,kG,IG,SG,ej,nj,rj,ij,uj,lj,dj,aG,hj,mj,vj,oG,wj,Ij,Cj,uG,$q,$j,Aj,Rj,Fj,Pj,Mj,Bj,Wj,dG,Uj,hG,Hj,jj,Xj,Qj,Jj,bG,s6,t5,s5,a5,o5,l5,tG,b5,v5,w5,Wq];for(let e of k5)El(e);var I5={};Ae(I5,{assertNotComplex:()=>nu,bindCanvasToFramebuffer:()=>O5,bindColorTextureToFramebuffer:()=>ad,bindTextureToProgramUniformSampler:()=>t1,bindTextureUnit:()=>ZC,bindVertexBufferToProgramAttribute:()=>Bm,callAndCheck:()=>fe,canBeRepresented:()=>VC,createFragmentShader:()=>GC,createFramebuffer:()=>QC,createProgram:()=>HC,createStaticIndexBuffer:()=>KC,createStaticVertexBuffer:()=>jC,createTexture:()=>XC,createVertexShader:()=>UC,getBatchDim:()=>ba,getExtensionOrThrow:()=>Fu,getFramebufferErrorMessage:()=>n1,getMaxTexturesInShader:()=>i1,getNumChannels:()=>D5,getProgramUniformLocation:()=>e1,getProgramUniformLocationOrThrow:()=>JC,getRowsCols:()=>ya,getShapeAs3D:()=>id,getTextureShapeFromLogicalShape:()=>r1,getWebGLDisjointQueryTimerVersion:()=>o1,getWebGLErrorMessage:()=>WC,getWebGLMaxTextureSize:()=>a1,hasExtension:()=>Ln,isCapableOfRenderingToFloatTexture:()=>u1,isDownloadFloatTextureEnabled:()=>l1,isReshapeFree:()=>el,isWebGLFenceEnabled:()=>c1,isWebGLVersionEnabled:()=>Wm,linkProgram:()=>qC,logShaderSourceAndInfoLog:()=>pv,resetMaxTextureSize:()=>P5,resetMaxTexturesInShader:()=>z5,unbindColorTextureFromFramebuffer:()=>Vm,unbindTextureUnit:()=>F5,validateFramebuffer:()=>Ou,validateProgram:()=>rd,validateTextureSize:()=>YC});var Xr={},jf={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function S5(e,t){Xr[e]=t}function vs(e,t){if(!(e in Xr)||null!=t){t=N5(e,t);if(null===t)return console.log("Could not get context for WebGL version",e),null;Xr[e]=t}let a=Xr[e];return null==a||a.isContextLost()?(delete Xr[e],vs(e)):(a.disable(a.DEPTH_TEST),a.disable(a.STENCIL_TEST),a.disable(a.BLEND),a.disable(a.DITHER),a.disable(a.POLYGON_OFFSET_FILL),a.disable(a.SAMPLE_COVERAGE),a.enable(a.SCISSOR_TEST),a.enable(a.CULL_FACE),a.cullFace(a.BACK),Xr[e])}function C5(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function N5(t,e){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let a=null==e?C5(t):e;return a.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete Xr[t]},!1),1===t?a.getContext("webgl",jf)||a.getContext("experimental-webgl",jf):a.getContext("webgl2",jf)}function Yl(e,t){return[t,e]}function T5(e,t){return e*t}function Yc(e){e=w.sizeFromShape(e),e=Math.ceil(e/4);return w.sizeToSquarishShape(e)}function tu(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function $5(e,t){var[e,t]=tu(e,t);return e*t*4}function dv(e,t){let a=e,r,n,s,i,o,l,u,d,p,h;return l=2===X().getNumber("WEBGL_VERSION")?(r=a.R32F,n=a.R16F,s=a.RGBA16F,i=a.RGBA32F,o=a.RED,u=4,d=1,p=a.HALF_FLOAT,h=a.FLOAT,a.RGBA8):(r=e.RGBA,n=e.RGBA,s=e.RGBA,i=a.RGBA,o=e.RGBA,u=4,d=4,p=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:n,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:d,textureTypeHalfFloat:p,textureTypeFloat:h}}function fe(e,t){t=t();return X().getBool("DEBUG")&&_5(e),t}function _5(e){var t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+WC(e,t))}var A5=5.96e-8,E5=65504;function VC(e){return!!(X().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||A5<Math.abs(e)&&Math.abs(e)<E5)}function WC(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Fu(e,t){return Qs(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function UC(e,t){let a=Qs(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(fe(e,()=>e.shaderSource(a,t)),fe(e,()=>e.compileShader(a)),!1===e.getShaderParameter(a,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(a)),new Error("Failed to compile vertex shader.");return a}function GC(e,t){let a=Qs(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(fe(e,()=>e.shaderSource(a,t)),fe(e,()=>e.compileShader(a)),X().get("ENGINE_COMPILE_ONLY"))return a;if(!1===e.getShaderParameter(a,e.COMPILE_STATUS))throw pv(t,e.getShaderInfoLog(a)),new Error("Failed to compile fragment shader.");return a}var od,ud,R5=/ERROR: [0-9]+:([0-9]+):/g;function pv(e,t){var a=R5.exec(t);if(null==a)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);let r=+a[1],n=e.split(`
`),s=n.length.toString().length+2,i=n.map((e,t)=>w.rightPad((t+1).toString(),s)+e),o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);let l=i.slice(0,r-1),u=i.slice(r-1,r),d=i.slice(r);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${w.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join(`
`))}function HC(e){return Qs(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function qC(e,t){if(fe(e,()=>e.linkProgram(t)),!X().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function rd(e,t){if(fe(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function jC(e,t){let a=Qs(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,a)),fe(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),a}function KC(e,t){let a=Qs(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return fe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,a)),fe(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),a}function D5(){return 2===X().getNumber("WEBGL_VERSION")?1:4}function XC(e){return Qs(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function YC(e,t){var a=X().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error("Requested texture size "+`[${e}x${t}]`+" is invalid.");if(a<e||a<t)throw new Error("Requested texture size "+`[${e}x${t}]`+" greater than WebGL maximum on this browser / GPU "+`[${a}x${a}]`+".")}function QC(e){return Qs(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Bm(e,t,a,r,n,s,i){let o=e.getAttribLocation(t,a);return-1!==o&&(fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),fe(e,()=>e.vertexAttribPointer(o,n,e.FLOAT,!1,s,i)),fe(e,()=>e.enableVertexAttribArray(o)),!0)}function ZC(e,t,a){s1(e,a),fe(e,()=>e.activeTexture(e.TEXTURE0+a)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function F5(e,t){s1(e,t),fe(e,()=>e.activeTexture(e.TEXTURE0+t)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function JC(e,t,a){return Qs(e,()=>e.getUniformLocation(t,a),'uniform "'+a+'" not present in program.')}function e1(e,t,a){return e.getUniformLocation(t,a)}function t1(e,t,a,r){fe(e,()=>ZC(e,t,r)),fe(e,()=>e.uniform1i(a,r))}function O5(e){fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),fe(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),fe(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function ad(e,t,a){fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,a)),fe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Vm(e,t){fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),fe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Ou(e){var t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+n1(e,t))}function n1(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Qs(e,t,a){e=fe(e,()=>t());if(null==e)throw new Error(a);return e}function s1(e,t){var a=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,t=t+e.TEXTURE0;if(t<e.TEXTURE0||a<t)throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${a}]`}.`)}function ba(e,t=2){return w.sizeFromShape(e.slice(0,e.length-t))}function ya(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[1<e.length?e[e.length-2]:1,e[e.length-1]]}function id(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[ba(e),...ya(e)]),t}function r1(r,e=!1){let t=X().getNumber("WEBGL_MAX_TEXTURE_SIZE");e&&(t*=2,1===(r=r.map((e,t)=>t>=r.length-2?w.nearestLargerEven(r[t]):r[t])).length&&(r=[2,r[0]])),2!==r.length&&(r=w.squeezeShape(r).newShape);let n=w.sizeFromShape(r);if(r.length<=1&&n<=t)return[1,n];if(2===r.length&&r[0]<=t&&r[1]<=t)return r;if(3===r.length&&r[0]*r[1]<=t&&r[2]<=t)return[r[0]*r[1],r[2]];if(3===r.length&&r[0]<=t&&r[1]*r[2]<=t)return[r[0],r[1]*r[2]];if(4===r.length&&r[0]*r[1]*r[2]<=t&&r[3]<=t)return[r[0]*r[1]*r[2],r[3]];if(4===r.length&&r[0]<=t&&r[1]*r[2]*r[3]<=t)return[r[0],r[1]*r[2]*r[3]];if(e){let e=ba(r),t=2,a=2;return r.length&&([t,a]=ya(r)),n=e*(t/2)*(a/2),w.sizeToSquarishShape(n).map(e=>2*e)}return w.sizeToSquarishShape(n)}function Qc(e){return e%2==0}function el(e,t){if(e=e.slice(-2),t=t.slice(-2),w.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){var a=e.slice(-1)[0],r=t.slice(-1)[0];if(a===r||Qc(a)&&Qc(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Qc(e[0])&&Qc(t[0])}function a1(t){if(null==od){let e=vs(t);od=e.getParameter(e.MAX_TEXTURE_SIZE)}return od}function P5(){od=null}function z5(){ud=null}function i1(t){if(null==ud){let e=vs(t);ud=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ud)}function o1(e){if(0===e)return 0;let t,a=vs(e);return t=Ln(a,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Ln(a,"EXT_disjoint_timer_query")?1:0,t}function Ln(e,t){return null!=e.getExtension(t)}function Wm(e){try{if(null!=vs(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function u1(e){if(0===e)return!1;var t=vs(e);if(1===e){if(!Ln(t,"OES_texture_float"))return!1}else if(!Ln(t,"EXT_color_buffer_float"))return!1;return Um(t)}function l1(e){if(0===e)return!1;let t=vs(e);if(1===e)return!(!Ln(t,"OES_texture_float")||!Ln(t,"WEBGL_color_buffer_float"))&&Um(t);if(Ln(t,"EXT_color_buffer_float"))return Um(t);e="EXT_color_buffer_half_float";if(Ln(t,e)){e=t.getExtension(e);return M5(t,e)}return!1}function Um(e){var t=dv(e),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);var r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);t=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(r),t}function M5(e,t){var a=dv(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,a.internalFormatHalfFloat,1,1,0,a.textureFormatFloat,a.textureTypeHalfFloat,null);t=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(t),a}function c1(e){return 2===e&&null!=vs(e).fenceSync}function nu(e,t){(e=!Array.isArray(e)?[e]:e).forEach(e=>{null!=e&&w.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Ne=X();function fn(){let e,t,a,r,n,s,i,o,l,u;return u=2===X().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",a="out",r="in",n="texture",s="outputColor",i="out vec4 outputColor;",o=`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",a="varying",r="varying",n="texture2D",s="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:a,varyingFs:r,texture2D:n,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function yi(a,e,r="index"){let n=w.computeStrides(e);return n.map((e,t)=>{return`${`int ${a[t]} = ${r} / ${e}`}; ${t===n.length-1?`int ${a[t+1]} = ${r} - ${a[t]} * ${e}`:`index -= ${a[t]} * ${e}`};`}).join("")}function qp(a,e,r="index"){let n=w.computeStrides(e);return n.map((e,t)=>{return`${`int ${a[t]} = ${r} / outShapeStrides[${t}]`}; ${t===n.length-1?`int ${a[t+1]} = ${r} - ${a[t]} * outShapeStrides[${t}]`:`index -= ${a[t]} * outShapeStrides[${t}]`};`}).join("")}function L5(e,t){let a=e.length,r=e.map(e=>`${t}[${e}]`),n=new Array(a-1);n[a-2]=r[a-1];for(let e=a-3;0<=e;--e)n[e]=`(${n[e+1]} * ${r[e+1]})`;return n}function B5(a,e,r="index"){let t=a.map((e,t)=>t),n=L5(t,e);return n.map((e,t)=>{return`${`int ${a[t]} = ${r} / ${n[t]}`}; ${t===n.length-1?`int ${a[t+1]} = ${r} - ${a[t]} * ${n[t]}`:`index -= ${a[t]} * ${n[t]}`};`}).join("")}function hv(e){e=w.computeStrides(e).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function fv(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}Ne.registerFlag("HAS_WEBGL",()=>0<Ne.getNumber("WEBGL_VERSION")),Ne.registerFlag("WEBGL_VERSION",()=>Wm(2)?2:Wm(1)?1:0),Ne.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Ne.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Ne.get("WEBGL_VERSION")),Ne.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Ne.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Ne.registerFlag("WEBGL_PACK",()=>Ne.getBool("HAS_WEBGL")),Ne.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_CLIP",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_REDUCE",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_CONV_IM2COL",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>a1(Ne.getNumber("WEBGL_VERSION"))),Ne.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>i1(Ne.getNumber("WEBGL_VERSION"))),Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{var e=Ne.getNumber("WEBGL_VERSION");return 0===e?0:o1(e)}),Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>0<Ne.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")&&!dp.isMobile()),Ne.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>u1(Ne.getNumber("WEBGL_VERSION"))),Ne.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Ne.getBool("WEBGL_FORCE_F16_TEXTURES")&&Ne.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Ne.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>l1(Ne.getNumber("WEBGL_VERSION"))),Ne.registerFlag("WEBGL_FENCE_API_ENABLED",()=>c1(Ne.getNumber("WEBGL_VERSION"))),Ne.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ne.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Ne.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),Ne.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>dp.isMobile()?1:-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),Ne.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),Ne.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),Ne.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),Ne.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);var d1=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,p1=S["getBroadcastDims"];function V5(e,t,a){let r=[];if(e.forEach(e=>{var t=w.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${1<t?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),a.enableShapeUniforms){var t=mv(a.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape)["uniformShape"];switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}}),a.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}a.customUniforms&&a.customUniforms.forEach(e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});let n=r.join(`
`),s=e.map(e=>W5(e,t,a.packedInputs,a.enableShapeUniforms)).join(`
`),i=t.texShape,o=fn(),l=H5(o),u,d,p=K5(o);return d=t.isPacked?(u=U5(t.logicalShape,i,a.enableShapeUniforms),j5(o)):(u=G5(t.logicalShape,i,a.enableShapeUniforms),q5(o)),a.packedInputs&&(p+=Z5),[p,l,d,n,u,s,a.userCode].join(`
`)}function su(e,t=!1){var a=e.shapeInfo.logicalShape;switch(a.length){case 0:return cK(e,t);case 1:return pK(e,t);case 2:return fK(e,t);case 3:return gK(e,t);case 4:return yK(e,t);case 5:return vK(e);case 6:return xK(e);default:throw new Error(`${a.length}-D input sampling is not yet supported`)}}function h1(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return lK(e);case 1:return dK(e,t);case 2:return hK(e,t);case 3:return mK(e,t);default:return bK(e,t)}}function W5(e,t,a=!1,r){let n="";n+=(a?h1:su)(e,r);var s=e.shapeInfo.logicalShape,r=t.logicalShape;return s.length<=r.length&&(n+=(a?wK:kK)(e,t)),n}function U5(e,t,a){switch(e.length){case 0:return f1();case 1:return J5(e,t,a);case 2:return oK(e,t,a);case 3:return tK(e,t,a);default:return sK(e,t,a)}}function G5(e,t,a){switch(e.length){case 0:return f1();case 1:return eK(e,t,a);case 2:return uK(e,t,a);case 3:return nK(e,t,a);case 4:return rK(e,t,a);case 5:return aK(e,t);case 6:return iK(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function H5(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function q5(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function j5(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function K5(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${X5}
    ${Y5}
    ${Q5}
  `}var X5=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Y5=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Q5=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Z5=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function f1(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function J5(e,t,a){t=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===t[0]?a?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${t[1]}.0);
      }
    `:1===t[1]?a?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${t[0]}.0);
      }
    `:a?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return 2 * (resTexRC.x * ${t[1]} + resTexRC.y);
    }
  `}function eK(e,t,a){return 1===t[0]?a?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:1===t[1]?a?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:a?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function tK(e,t,a){if(a)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],t=Math.ceil(e[2]/2),e=t*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${a[0]}, ${a[1]}));
      int index = resTexRC.x * ${a[1]} + resTexRC.y;

      int b = index / ${e};
      index -= b * ${e};

      int r = 2 * (index / ${t});
      int c = imod(index, ${t}) * 2;

      return ivec3(b, r, c);
    }
  `}function nK(e,t,a){if(a)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${qp(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;e=yi(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${e}
      return ivec3(r, c, d);
    }
  `}function sK(t,e,a){if(a)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],n=Math.ceil(t[t.length-1]/2),s=n*Math.ceil(t[t.length-2]/2),i=s,o="",l="b, r, c";for(let e=2;e<t.length-1;e++)i*=t[t.length-e-1],o=`
      int b${e} = index / ${i};
      index -= b${e} * ${i};
    `+o,l=`b${e}, `+l;return`
    ivec${t.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${o}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec${t.length}(${l});
    }
  `}function rK(e,t,a){if(a)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${qp(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;e=yi(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${e}
      return ivec4(r, c, d, d2);
    }
  `}function aK(e,t){e=yi(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function iK(e,t){e=yi(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function oK(e,t,a){var r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(w.arraysEqual(e,t))return a?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;e=Math.ceil(e[1]/2);return a?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${e});
      int c = imod(index, ${e}) * 2;

      return ivec2(r, c);
    }
  `}function uK(e,t,a){return w.arraysEqual(e,t)?a?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:1===e[1]?a?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:1===e[0]?a?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:a?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function vi(e){return`offset${e}`}function lK(e){let t=e.name,a="get"+t.charAt(0).toUpperCase()+t.slice(1),r=fn();return`
    vec4 ${a}() {
      return ${r.texture2D}(${t}, halfCR);
    }
  `}function cK(e,t){let a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${a};}`;var[n,s]=e.shapeInfo.texShape;if(1===n&&1===s)return`
      float ${r}() {
        return sampleTexture(${a}, halfCR);
      }
    `;s=vi(a);if(t)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], ${s});
      return sampleTexture(${a}, uv);
    }
  `;var[t,e]=e.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${t}, ${e}, ${s});
      return sampleTexture(${a}, uv);
    }
  `}function dK(e,t){let a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),n=e.shapeInfo.texShape,s=fn();if(t)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${a}, uv);
    }
  `;t=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${t[0]}, ${t[1]}, index);
      return ${s.texture2D}(${a}, uv);
    }
  `}function pK(e,t){let a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1);if(e.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${ru(e)}
      }
    `;var n=e.shapeInfo.texShape,s=n[0],e=n[1];if(1===e&&1===s)return`
      float ${r}(int index) {
        return sampleTexture(${a}, halfCR);
      }
    `;n=vi(a);return 1===e?t?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${n}) + 0.5) / float(${a}TexShape[0]));
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${n}) + 0.5) / ${s}.0);
        return sampleTexture(${a}, uv);
      }
    `:1===s?t?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${n}) + 0.5) / float(${a}TexShape[1]), 0.5);
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${n}) + 0.5) / ${e}.0, 0.5);
        return sampleTexture(${a}, uv);
      }
    `:t?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${n});
      return sampleTexture(${a}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${s}, ${e}, index + ${n});
      return sampleTexture(${a}, uv);
    }
  `}function hK(e,t){let a=e.shapeInfo.logicalShape,r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=fn();if(null!=s&&w.arraysEqual(a,s))return t?`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${l.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${l.texture2D}(${r}, uv);
      }
    `;if(t)return`
    vec4 ${n}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `;t=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`
    vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${Math.ceil(a[1]/2)}, ${t[0]}, ${t[1]}, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `}function fK(e,t){let a=e.shapeInfo.logicalShape,r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&w.arraysEqual(a,s)){if(t)return`
      float ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;var i=s[0];return`
    float ${n}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${i}.0);
      return sampleTexture(${r}, uv);
    }
  `}var{newShape:o,keptDims:i}=w.squeezeShape(a);if(o.length<a.length){var l=["row","col"];return`
      ${su(au(e,o),t)}
      float ${n}(int row, int col) {
        return ${n}(${iu(l,i)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${n}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${a[1]}, 1)));
        ${ru(e)}
      }
    `;l=s[0],i=s[1],e=vi(r);return 1===i?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${e}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${e}), vec3(${a[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${r}, uv);
    }
  `:1===l?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${e}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${e}), vec3(${a[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${i}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:t?`
      float ${n}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${e};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${n}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${a[1]} + col + ${e};
    vec2 uv = uvFromFlat(${l}, ${i}, index);
    return sampleTexture(${r}, uv);
  }
`}function mK(e,t){let a=e.shapeInfo.logicalShape,r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===a[0]){var o=[1,2],l=["b","row","col"];return`
        ${h1(au(e,a.slice(1)),t)}
        vec4 ${n}(int b, int row, int col) {
          return ${n}(${iu(l,o)});
        }
      `}e=fn();if(t)return`
    vec4 ${n}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${e.texture2D}(${r}, uv);
    }
  `;l=i[0],o=i[1],t=Math.ceil(a[2]/2);return`
    vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${o}, ${t*Math.ceil(a[1]/2)}, ${t}, b, row, col);
      return ${e.texture2D}(${r}, uv);
    }
  `}function gK(e,t){let a=e.shapeInfo.logicalShape,r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),s=a[1]*a[2],i=a[2],{newShape:o,keptDims:l}=w.squeezeShape(a),u=o;if(u.length<a.length){var d=["row","col","depth"];return`
        ${su(au(e,u),t)}
        float ${n}(int row, int col, int depth) {
          return ${n}(${iu(d,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${ru(e)}
      }
    `;var p=e.shapeInfo.texShape,d=p[0],p=p[1],e=e.shapeInfo.flatOffset;if(p===s&&null==e)return t?`
      float ${n}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${n}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${d}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(p===i&&null==e)return t?`
      float ${n}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${n}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${a[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `;e=vi(r);return t?`
    float ${n}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * ${s} + col * ${i} + depth + ${e};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${n}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${e};
        vec2 uv = uvFromFlat(${d}, ${p}, index);
        return sampleTexture(${r}, uv);
      }
  `}function bK(e,t){let a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),n=fn();if(t)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${a}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${a}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${n.texture2D}(${a}, uv);
    }
  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],d=l[1],p=Math.ceil(s[i-1]/2),h=p*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${h} + (row / 2) * ${p} + (col / 2)`;for(let e=2;e<i-1;e++)c=`int b${e}, `+c,h*=s[i-e-1],f=`b${e} * ${h} + `+f;return`
    vec4 ${r}(${c}) {
      int index = ${f};
      int texR = index / ${d};
      int texC = index - texR * ${d};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${u});
      return ${n.texture2D}(${a}, uv);
    }
  `}function yK(e,t){let a=e.shapeInfo.logicalShape,r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),s=a[3],i=a[2]*s,o=a[1]*i,{newShape:l,keptDims:u}=w.squeezeShape(a);if(l.length<a.length){var d=["row","col","depth","depth2"];return`
      ${su(au(e,l),t)}
      float ${n}(int row, int col, int depth, int depth2) {
        return ${n}(${iu(d,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${s}, 1)));
        ${ru(e)}
      }
    `;var p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,c=h[0],f=h[1],d=`int stride2 = ${r}Shape[3];`,e=`int stride1 = ${r}Shape[2] * stride2;`,h=`int stride0 = ${r}Shape[1] * stride1;`;if(f===o&&null==p)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        ${d}
        ${e}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${c}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(f===s&&null==p)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${a[1]*a[2]}, ${a[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${c}.0);
        return sampleTexture(${r}, uv);
      }
    `;p=vi(r);return t?`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${d}
      ${e}
      ${h}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${p});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${c}, ${f}, index + ${p});
      return sampleTexture(${r}, uv);
    }
  `}function vK(e){let t=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),n=t[4],s=t[3]*n,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=w.squeezeShape(t);if(l.length<t.length){var d=["row","col","depth","depth2","depth3"];return`
      ${su(au(e,l))}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${iu(d,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${s}, ${n})) +
          depth3;
        ${ru(e)}
      }
    `;var p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,e=d[0],d=d[1];return d===o&&null==p?`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${n}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${e}.0);
        return sampleTexture(${a}, uv);
      }
    `:d===n&&null==p?`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${e}.0);
        return sampleTexture(${a}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${s} +
          depth2 * ${n} + depth3 + ${vi(a)};
      vec2 uv = uvFromFlat(${e}, ${d}, index);
      return sampleTexture(${a}, uv);
    }
  `}function xK(e){let t=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),{newShape:n,keptDims:s}=w.squeezeShape(t);if(n.length<t.length){var i=["row","col","depth","depth2","depth3","depth4"];return`
      ${su(au(e,n))}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${iu(i,s)});
      }
    `}var o=t[5],l=t[4]*o,u=t[3]*l,d=t[2]*u,p=t[1]*d;if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${p}, ${d}, ${u}, ${l})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${ru(e)}
      }
    `;var h=e.shapeInfo.flatOffset,i=e.shapeInfo.texShape,e=i[0],i=i[1];return i===p&&null==h?`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${d}, ${u}, ${l}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${i}.0, ${e}.0);
        return sampleTexture(${a}, uv);
      }
    `:i===o&&null==h?`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${i}.0, ${e}.0);
        return sampleTexture(${a}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${p} + col * ${d} + depth * ${u} +
          depth2 * ${l} + depth3 * ${o} + depth4 + ${vi(a)};
      vec2 uv = uvFromFlat(${e}, ${i}, index);
      return sampleTexture(${a}, uv);
    }
  `}function ru(e){var t=e.name,e=w.sizeFromShape(e.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function wK(e,t){let a=e.name,r=a.charAt(0).toUpperCase()+a.slice(1),n="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=p1(e.shapeInfo.logicalShape,t.logicalShape),l=rt(i),u=i-s,d,p=["x","y","z","w","u","v"];d=0===s?"":i<2&&1<=o.length?"coords = 0;":o.map(e=>`coords.${p[e+u]} = 0;`).join(`
`);let h="";h=i<2&&0<s?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${p[t+u]}`).join(", ");let c="return outputValue;",f=1===w.sizeFromShape(e.shapeInfo.logicalShape),m=1===w.sizeFromShape(t.logicalShape);return 1!==s||f||m?f&&!m?c=1===i?`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:`
        return vec4(outputValue.x);
      `:o.length&&(e=s-2,t=s-1,-1<o.indexOf(e)&&-1<o.indexOf(t)?c="return vec4(outputValue.x);":-1<o.indexOf(e)?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":-1<o.indexOf(t)&&(c="return vec4(outputValue.xx, outputValue.zz);")):c=`
      return vec4(outputValue.xy, outputValue.xy);
    `,`
    vec4 ${n}() {
      ${l} coords = getOutputCoords();
      ${d}
      vec4 outputValue = get${r}(${h});
      ${c}
    }
  `}function kK(e,t){let a=e.name,r=a.charAt(0).toUpperCase()+a.slice(1),n="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&w.arraysEqual(i,s))return`
      float ${n}() {
        return sampleTexture(${a}, resultUV);
      }
    `;let u=rt(l),d=p1(e.shapeInfo.logicalShape,t.logicalShape),p=l-o,h,c=["x","y","z","w","u","v"];h=0===o?"":l<2&&1<=d.length?"coords = 0;":d.map(e=>`coords.${c[e+p]} = 0;`).join(`
`);let f="";return f=l<2&&0<o?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${c[t+p]}`).join(", "),`
    float ${n}() {
      ${u} coords = getOutputCoords();
      ${h}
      return get${r}(${f});
    }
  `}function rt(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function mv(e,t,a){var{newShape:r,keptDims:n}=w.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,i=!e&&1<s&&!w.arraysEqual(t,a)&&r.length<s||i;return{useSqueezeShape:i,uniformShape:i?o:t,keptDims:n}}function au(e,t){let a=JSON.parse(JSON.stringify(e));return a.shapeInfo.logicalShape=t,a}function iu(t,e){return e.map(e=>t[e]).join(", ")}function IK(e,r,t,a){let n=t.map((e,t)=>{let a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&0<e.texData.slice.flatOffset&&(a.flatOffset=e.texData.slice.flatOffset),{name:r.variableNames[t],shapeInfo:a}}),s=n.map(e=>e.shapeInfo),i={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},o=V5(n,i,r),l=GC(e.gl,o),u=e.createProgram(l);return X().get("ENGINE_COMPILE_ONLY")?{program:r,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:{program:r,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,...m1(e,r,u)}}function m1(a,t,r){let n={},s={},i={},o=[],e,l,u,d=null,p;p=a.getUniformLocation(r,"NAN",!1),1===X().getNumber("WEBGL_VERSION")&&(d=a.getUniformLocation(r,"INFINITY",!1));for(let e=0;e<t.variableNames.length;e++){var h=t.variableNames[e];n[h]=a.getUniformLocation(r,h,!1),n[`offset${h}`]=a.getUniformLocation(r,`offset${h}`,!1),t.enableShapeUniforms&&(s[`${h}Shape`]=a.getUniformLocation(r,`${h}Shape`,!1),i[`${h}TexShape`]=a.getUniformLocation(r,`${h}TexShape`,!1))}return t.enableShapeUniforms&&(e=a.getUniformLocation(r,"outShape",!1),u=a.getUniformLocation(r,"outShapeStrides",!1),l=a.getUniformLocation(r,"outTexShape",!1)),t.customUniforms&&t.customUniforms.forEach((e,t)=>{o[t]=a.getUniformLocation(r,e.name,!1)}),{uniformLocations:n,customUniformLocations:o,infLoc:d,nanLoc:p,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:e,outShapeStridesLocation:u,outTexShapeLocation:l}}function rw(e,n){if(e.length!==n.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${n.length} inputs`);e.forEach((e,t)=>{var a=e.logicalShape,r=n[t],t=r.shape;if(!w.arraysEqual(a,t))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${t} must match`);if(!e.isUniform||!r.isUniform){e=e.texShape,r=r.isUniform?null:r.texData.texShape;if(!w.arraysEqual(e,r))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${e} and ${r} must match`)}})}function SK(o,l,e,t,r){l.program.enableShapeUniforms||(rw(l.inShapeInfos,e),rw([l.outShapeInfo],[t]));var a=t.texData.texture,n=t.texData.texShape;t.texData.isPacked?o.setOutputPackedMatrixTexture(a.texture,n[0],n[1]):o.setOutputMatrixTexture(a.texture,n[0],n[1]),o.setProgram(l.webGLProgram),1===X().getNumber("WEBGL_VERSION")&&null!==l.infLoc&&o.gl.uniform1f(l.infLoc,1/0),null!==l.nanLoc&&o.gl.uniform1f(l.nanLoc,NaN),e.forEach((t,e)=>{var a=l.program.variableNames[e],r=l.uniformLocations[a],n=l.uniformLocations[`offset${a}`],s=l.inShapesLocations[`${a}Shape`],a=l.inTexShapesLocations[`${a}TexShape`];if(s){var i=mv(l.program.packedInputs,t.shape,t.texData.texShape)["uniformShape"];switch(i.length){case 1:o.gl.uniform1iv(s,new Int32Array(i));break;case 2:o.gl.uniform2iv(s,new Int32Array(i));break;case 3:o.gl.uniform3iv(s,new Int32Array(i));break;case 4:o.gl.uniform4iv(s,new Int32Array(i))}}if(a&&o.gl.uniform2i(a,t.texData.texShape[0],t.texData.texShape[1]),null!=r)if(t.isUniform)if(w.sizeFromShape(t.shape)<2)o.gl.uniform1f(r,t.uniformValues[0]);else{let e=t.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),o.gl.uniform1fv(r,e)}else null!=t.texData.slice&&null!=n&&o.gl.uniform1i(n,t.texData.slice.flatOffset),o.setInputMatrixTexture(t.texData.texture.texture,r,e)});var s=l.outShapeLocation;if(s)switch(t.shape.length){case 1:o.gl.uniform1iv(s,new Int32Array(t.shape));break;case 2:o.gl.uniform2iv(s,new Int32Array(t.shape));break;case 3:o.gl.uniform3iv(s,new Int32Array(t.shape));break;case 4:o.gl.uniform4iv(s,new Int32Array(t.shape))}if(l.outShapeStridesLocation){var i=w.computeStrides(t.shape);switch(t.shape.length){case 2:o.gl.uniform1iv(l.outShapeStridesLocation,new Int32Array(i));break;case 3:o.gl.uniform2iv(l.outShapeStridesLocation,new Int32Array(i));break;case 4:o.gl.uniform3iv(l.outShapeStridesLocation,new Int32Array(i))}}l.outTexShapeLocation&&o.gl.uniform2i(l.outTexShapeLocation,t.texData.texShape[0],t.texData.texShape[1]),l.program.customUniforms&&r&&l.program.customUniforms.forEach((e,t)=>{var a=l.customUniformLocations[t],t=r[t];if("float"===e.type)o.gl.uniform1fv(a,t);else if("vec2"===e.type)o.gl.uniform2fv(a,t);else if("vec3"===e.type)o.gl.uniform3fv(a,t);else if("vec4"===e.type)o.gl.uniform4fv(a,t);else if("int"===e.type)o.gl.uniform1iv(a,t);else if("ivec2"===e.type)o.gl.uniform2iv(a,t);else if("ivec3"===e.type)o.gl.uniform3iv(a,t);else{if("ivec4"!==e.type)throw Error(`uniform type ${e.type} is not supported yet.`);o.gl.uniform4iv(a,t)}}),o.executeProgram()}function CK(m,e,g){let b="";e.concat(g).forEach(o=>{var l=null!=o.texData&&null!=o.texData.slice&&0<o.texData.slice.flatOffset;if(m.enableShapeUniforms&&!o.isUniform){let e=o.texData.texShape,{useSqueezeShape:t,uniformShape:a,keptDims:r}=mv(m.packedInputs,o.shape,e),n="",s="",i="";1===a.length&&m.packedInputs?(c=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],n=`${1<c[0]}_${1<c[1]}`):2!==a.length||m.packedInputs?2<a.length&&!m.packedInputs&&(f=w.computeStrides(a),i=`${f[0]===e[1]}_${f[f.length-1]===e[1]}`):s=`${1<a[0]}_${1<a[1]}`;var u=o.shape.length,d=2===a.length&&w.arraysEqual(o.shape,e),p=1===w.sizeFromShape(o.shape),h=S.getBroadcastDims(o.shape,g.shape),c=!m.packedInputs&&u===g.shape.length&&w.arraysEqual(e,g.texData.texShape),f=m.packedInputs||2<a.length?"":`${1<e[0]}_${1<e[1]}`;b+=`${u}_${c}_${t?r:""}_${a.length}_${p}_${h}_${d}_${n}_${s}_${i}_${f}_${l}`}else{f=o.isUniform?"uniform":o.texData.texShape;b+=`${o.shape}_${f}_${l}`}});var t=m.userCode,e=m.constructor.name;return e+="_"+b+"_"+t+`${X().getNumber("WEBGL_VERSION")}`}function Sn(e){return X().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var NK=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];var t=fn();this.outputShape=e,this.enableShapeUniforms=Sn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${(this.enableShapeUniforms?qp:yi)(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},TK=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];var t=fn();this.outputShape=e,this.enableShapeUniforms=Sn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${(this.enableShapeUniforms?qp:yi)(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},$K=class{constructor(e){this.variableNames=["A"],this.outTexUsage=3;var t=fn();this.outputShape=e,this.userCode=`
      ${d1}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},_K=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=3;var t=fn();this.outputShape=e,this.userCode=`
      ${d1}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},AK=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];var a=fn();this.outputShape=e,this.enableShapeUniforms=Sn(this.outputShape.length);let r=t?"floor(result * 255. + 0.5)":"result";this.userCode=`
      ${this.enableShapeUniforms?fv():hv(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${a.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${a.output} = vec4(${r}, 0., 0., 0.);
      }
    `}},EK=class{constructor(a,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];var r=fn();this.outputShape=a,this.enableShapeUniforms=Sn(this.outputShape.length);let n="",t="result";e&&(t="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let e=0;e<=1;e++){var s=2*t+e;n+=`
          localCoords = coords;
          if(localCoords[2] + ${e} < ${this.enableShapeUniforms?"outShape[2]":`${a[2]}`}) {
          localCoords[2] += ${e};
          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${a[1]}`}) {
            localCoords[1] += ${t};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${s}] = values[0];
            } else if (offset == 1) {
              result[${s}] = values[1];
            } else if (offset == 2) {
              result[${s}] = values[2];
            } else {
              result[${s}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?fv():hv(a)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${n}

          ${r.output} = ${t};
        }
    `}},RK={};function g1(e){var t=fn();return UC(e,`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`)}function b1(e){return jC(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function y1(e){return KC(e,new Uint16Array([0,1,2,2,1,3]))}function Ql(e,t,a,r,n,s){YC(t,a);let i=XC(e),o=e.TEXTURE_2D;return fe(e,()=>e.bindTexture(o,i)),fe(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),fe(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),fe(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),fe(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===X().getNumber("WEBGL_VERSION")?fe(e,()=>e.texImage2D(o,0,r,t,a,0,n,s,null)):fe(e,()=>e.texStorage2D(o,1,r,t,a)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[a,t]}}function gv(e){return e.internalFormatFloat}function v1(e,t,a,r){var[t,a]=Yl(t,a);return Ql(e,t,a,gv(r),r.textureFormatFloat,e.FLOAT)}function bv(e){return e.internalFormatHalfFloat}function x1(e,t,a,r){var[t,a]=Yl(t,a);return Ql(e,t,a,bv(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function yv(e){return e.downloadTextureFormat}function w1(e,t,a,r){var[t,a]=Yl(t,a);return Ql(e,t,a,yv(r),e.RGBA,e.UNSIGNED_BYTE)}function vv(e){return e.internalFormatPackedFloat}function k1(e,t,a,r){var[t,a]=tu(t,a);return Ql(e,t,a,vv(r),e.RGBA,e.FLOAT)}function xv(e){return e.internalFormatPackedHalfFloat}function I1(e,t,a,r){var[t,a]=tu(t,a);return Ql(e,t,a,xv(r),e.RGBA,r.textureTypeHalfFloat)}function S1(e,t,a){return fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,a)),Bm(e,t,"clipSpacePos",a,3,20,0)&&Bm(e,t,"uv",a,2,20,12)}function C1(e,t,a,r,n,s){fe(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,l;l=n instanceof Uint8Array?(i=new Uint8Array(a*r*4),o=e.UNSIGNED_BYTE,e.RGBA):(i=new Float32Array(a*r*4),o=e.FLOAT,s.internalFormatPackedFloat),i.set(n),2===X().getNumber("WEBGL_VERSION")?fe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,a,r,e.RGBA,o,i)):fe(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,a,r,0,e.RGBA,o,i)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function N1(e,t,a){fe(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a.data instanceof Uint8Array?2===X().getNumber("WEBGL_VERSION")?fe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,a.width,a.height,e.RGBA,e.UNSIGNED_BYTE,a.data)):fe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,a.width,a.height,0,e.RGBA,e.UNSIGNED_BYTE,a.data)):2===X().getNumber("WEBGL_VERSION")?fe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,a)):fe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,a)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function T1(e,t,a,r){let n=e.createBuffer();fe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,n));let s=16*t*a;return fe(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),fe(e,()=>e.readPixels(0,0,a,t,e.RGBA,e.FLOAT,0)),fe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),n}function $1(e,t,a){let r=e,n=new Float32Array(a);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,n),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),n}function _1(e,t,a,r){let[n,s]=Yl(t,a),i=new Uint8Array(T5(t*a,4));return fe(e,()=>e.readPixels(0,0,n,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function A1(e,t,a,r,n,s,i,o){let l=e,u=new Float32Array($5(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function E1(e,t,a){let r=new Float32Array(t*a*4);return fe(e,()=>e.readPixels(0,0,a,t,e.RGBA,e.FLOAT,r)),r}Ae(RK,{bindVertexProgramAttributeStreams:()=>S1,createBufferFromOutputTexture:()=>T1,createFloat16MatrixTexture:()=>x1,createFloat16PackedMatrixTexture:()=>I1,createFloat32MatrixTexture:()=>v1,createIndexBuffer:()=>y1,createPackedMatrixTexture:()=>k1,createUnsignedBytesMatrixTexture:()=>w1,createVertexBuffer:()=>b1,createVertexShader:()=>g1,downloadByteEncodedFloatMatrixFromOutputTexture:()=>_1,downloadFloat32MatrixFromBuffer:()=>$1,downloadMatrixFromPackedOutputTexture:()=>E1,downloadPackedMatrixFromBuffer:()=>A1,getInternalFormatForFloat16MatrixTexture:()=>bv,getInternalFormatForFloat16PackedMatrixTexture:()=>xv,getInternalFormatForFloat32MatrixTexture:()=>gv,getInternalFormatForPackedMatrixTexture:()=>vv,getInternalFormatForUnsignedBytesMatrixTexture:()=>yv,uploadDenseMatrixToTexture:()=>C1,uploadPixelDataToTexture:()=>N1});var Kf=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];var t=X().getNumber("WEBGL_VERSION");null!=e?S5(t,this.gl=e):this.gl=vs(t);let a="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===X().getNumber("WEBGL_VERSION")){t="OES_texture_half_float";if(this.textureFloatExtension=Fu(this.gl,"OES_texture_float"),Ln(this.gl,t))this.textureHalfFloatExtension=Fu(this.gl,t);else if(X().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(a),Ln(this.gl,r))this.colorBufferHalfFloatExtension=Fu(this.gl,r);else if(X().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(a="EXT_color_buffer_float",Ln(this.gl,a))this.colorBufferFloatExtension=this.gl.getExtension(a);else{if(!Ln(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=b1(this.gl),this.indexBuffer=y1(this.gl),this.framebuffer=QC(this.gl),this.textureConfig=dv(this.gl,this.textureHalfFloatExtension)}get debug(){return X().getBool("DEBUG")}dispose(){if(!this.disposed){null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;fe(e,()=>e.finish()),fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),fe(e,()=>e.deleteFramebuffer(this.framebuffer)),fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),fe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),fe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),v1(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),x1(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),w1(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),N1(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,a,r){this.throwIfDisposed(),C1(this.gl,e,t,a,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),I1(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),k1(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Vm(this.gl,this.framebuffer),this.outputTexture=null),fe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,a){return this.downloadMatrixDriver(e,()=>_1(this.gl,t,a,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,a,r,n,s){return A1(this.gl,e,t,a,r,n,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return $1(this.gl,e,t)}createBufferFromTexture(e,t,a){this.bindTextureToFrameBuffer(e);a=T1(this.gl,t,a,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){var e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let r,n;if(X().getBool("WEBGL_FENCE_API_ENABLED")){let t=e,a=t.fenceSync(t.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{var e=t.clientWaitSync(a,0,0);return e===t.ALREADY_SIGNALED||e===t.CONDITION_SATISFIED},r=a}else n=0<X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?(r=this.beginQuery(),this.endQuery(),()=>this.isQueryAvailable(r,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):()=>!0;return{query:r,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,a){return this.downloadMatrixDriver(e,()=>E1(this.gl,t,a))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=g1(t));let a=HC(t);return fe(t,()=>t.attachShader(a,this.vertexShader)),fe(t,()=>t.attachShader(a,e)),qC(t,a),this.debug&&rd(t,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=S1(t,this.program,this.vertexBuffer)),a}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&fe(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&rd(this.gl,this.program),fe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,a=!0){return this.throwIfDisposed(),(a?JC:e1)(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),fe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,a){this.throwIfDisposed(),this.throwIfNoProgram(),t1(this.gl,e,t,a)}setOutputMatrixTexture(e,t,a){this.setOutputMatrixTextureDriver(e,a,t)}setOutputPackedMatrixTexture(e,t,a){this.throwIfDisposed();var[t,a]=tu(t,a);this.setOutputMatrixTextureDriver(e,t,a)}setOutputMatrixWriteRegion(e,t,a,r){this.setOutputMatrixWriteRegionDriver(a,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,a,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&rd(this.gl,this.program),Ou(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),fe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),fe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Fu(this.gl,2===X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),a=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,a),a}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2!==X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}else{let e=this.gl,t=this.getQueryTimerExtensionWebGL2();e.endQuery(t.TIME_ELAPSED_EXT)}}async waitForQueryAndGetTime(e){return await w.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){let e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{let e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(r,e){if(0===e)return!0;if(2===e){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),a=e.getQueryParameter(r,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),a&&!this.disjoint}{let e=this.getQueryTimerExtensionWebGL1(),t=e.getQueryObjectEXT(r,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),t&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){var e=DK(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){let e=this.itemsToPoll[t]["resolveFn"];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),1<this.itemsToPoll.length||w.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),ad(this.gl,e,this.framebuffer),this.debug&&Ou(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(ad(this.gl,this.outputTexture,this.framebuffer),this.debug&&Ou(this.gl)):Vm(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);t=t();return this.unbindTextureToFrameBuffer(),t}setOutputMatrixTextureDriver(e,t,a){this.throwIfDisposed();let r=this.gl;ad(r,e,this.framebuffer),this.debug&&Ou(r),this.outputTexture=e,fe(r,()=>r.viewport(0,0,t,a)),fe(r,()=>r.scissor(0,0,t,a))}setOutputMatrixWriteRegionDriver(e,t,a,r){this.throwIfDisposed(),fe(this.gl,()=>this.gl.scissor(e,t,a,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}};function DK(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:FK,bincountImpl:R1,bincountReduceImpl:OK,ceilImpl:PK,concatImpl:zK,equalImpl:MK,expImpl:LK,expm1Impl:BK,floorImpl:VK,gatherNdImpl:WK,gatherV2Impl:UK,greaterImpl:GK,greaterEqualImpl:HK,lessImpl:qK,lessEqualImpl:jK,linSpaceImpl:KK,logImpl:XK,maxImpl:YK,maximumImpl:QK,minimumImpl:ZK,multiplyImpl:JK,negImpl:eX,notEqualImpl:tX,prodImpl:nX,rangeImpl:sX,rsqrtImpl:rX,sigmoidImpl:aX,simpleAbsImpl:D1,sliceImpl:iX,sparseFillEmptyRowsImpl:oX,sparseReshapeImpl:uX,sparseSegmentReductionImpl:F1,sqrtImpl:lX,stridedSliceImpl:cX,stringNGramsImpl:dX,stringSplitImpl:pX,stringToHashBucketFastImpl:hX,subImpl:fX,tileImpl:mX,topKImpl:gX,transposeImpl:wv,uniqueImpl:bX}=Zy;function O1(t,e){return["x","y","z","w","u","v"].slice(0,e).map(e=>`${t}.${e}`)}function ln(e,t){return 1===t?[e]:O1(e,t)}function yX(t,a){if(1===t)return"rc";let r="";for(let e=0;e<t;e++)r+=a[e],e<t-1&&(r+=",");return r}var vX=class{constructor(e){var t,a,r;this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Sn(this.outputShape.length),0===this.rank?this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `:(r=ln("rc",this.rank),t=rt(this.rank),a=this.getOutOfBoundsCondition(r),e=this.getSetup(r),r=this.getOutput(r),this.userCode=`
        void main() {
          ${t} rc = getOutputCoords();

          if(${a}) {
            setOutput(vec4(0));
          } else {
            ${e}

            setOutput(vec4(${r}));
          }
        }
      `)}getSourceCoordsArr(r){let n=[];for(let a=0;a<=1;a++)for(let e=0;e<=1;e++){let t=`${0===a?"r":"rp1"}, ${0===e?"c":"cp1"}`;for(let e=2;e<this.rank;e++)t=`${r[r.length-1-e]},`+t;n.push(t)}return n}getOutOfBoundsCondition(t){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let a="";for(let e=this.rank-2;e<this.rank;e++)a+=`${t[e]} >= ${this.enableShapeUniforms?`outShape[${e}]`:this.outputShape[e]}`,e<this.rank-1&&(a+="||");return a}getSetup(e){if(1===this.rank)return"";var t=e.slice(-2),a=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],e=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${a};
      bool rEdge = rp1 >= ${e};
    `}getOutput(e){e=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}},P1=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Sn(this.outputShape.length);let a="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),1<t&&(e+="thisRC.y += 1;"),a+=`
        ${e}
        ${0<t?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${t}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${0<t?"}":""}
      `}this.userCode=`
      ${xX(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?fv():hv(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${a}

        setOutput(result);
      }
    `}};function xX(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?B5(["r","c","d"],"inputShape"):yi(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var wX=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,a){var r=iw(t,a),n=ow(e,r,a);n in this.freeTextures||(this.freeTextures[n]=[]),n in this.usedTextures||(this.usedTextures[n]=[]);t=aw(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,a);if(0<this.freeTextures[n].length){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=t,this.log();a=this.freeTextures[n].shift();return this.usedTextures[n].push(a),a}let s;return 3===r?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):4===r?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):1===r?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):0===r?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):2===r&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[n].push(s),this.numUsedTextures++,this._numBytesAllocated+=t,this.log(),s}releaseTexture(a,r,n,s){if(null!=this.freeTextures){var i=iw(n,s),n=ow(r,i,s);n in this.freeTextures||(this.freeTextures[n]=[]);i=aw(r,i,this.gpgpu.gl,this.gpgpu.textureConfig,s),s=X().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==s&&this._numBytesAllocated>s?(this.gpgpu.deleteMatrixTexture(a.texture),this._numBytesAllocated-=i):(this.freeTextures[n].push(a),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let e=this.usedTextures[n],t=e.indexOf(a);if(t<0)throw new Error("Cannot release a texture that was never provided by this texture manager");e.splice(t,1),this.log()}}log(){var e;this.logEnabled&&(e=this.numFreeTextures+this.numUsedTextures,console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`),e=this._numBytesFree/this._numBytesAllocated,console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(var e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(var t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function kX(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function aw(e,t,a,r,n){let s=IX(t,r),i;var o;i=n?([n,o]=tu(e[0],e[1]),n*o):([o,e]=Yl(e[0],e[1]),o*e);a=kX(a,s);return i*a}function IX(e,t){switch(e){case 3:return vv(t);case 4:return xv(t);case 1:return gv(t);case 0:return bv(t);case 2:return yv(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function SX(e){return X().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?3:1:e?4:0}function iw(e,t){if(1===e)return 3;if(0===e||null==e)return SX(t);if(3===e||2===e)return 2;throw new Error(`Unknown logical texture type ${e}`)}function ow(e,t,a){return`${e[0]}_${e[1]}_${t}_${a}`}var Hs=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Sn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},ss="if (isnan(x)) return x;",CX="return x;",uw="return abs(x);",NX="return (x >= 0.0) ? x : (exp(x) - 1.0);",TX=ss+`
  return (x < 0.0) ? 0.0 : x;
`,$X=ss+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Mi="return x;",_X="return 1.0 / (1.0 + exp(-1.0 * x));",AX="return x;",EX=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,RX=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,DX=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,FX="return 1.0 / (1.0 + exp(-1.0 * x));",Zr=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Sn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},OX=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Sn(this.outputShape.length);let t=e.length,a=ln("rc",t),r=rt(t),n=yX(t,a),s=a.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${n});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},PX=xs.whereImpl,zX=1e-7,MX=1e-4,Zc={};function LX(e){return e in Zc||(Zc[e]={}),Zc[e]}var BX=X().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),VX=600;function WX(){return null==X().global.screen?1024:X().global.screen.height*X().global.screen.width*window.devicePixelRatio*VX/1024/1024}var z1=class extends nl{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!X().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;var a;null!=e?(t=e instanceof Kf?e:(a=vs(X().getNumber("WEBGL_VERSION"),e),new Kf(a)),this.binaryCache={},this.gpgpuCreatedLocally=!1):(a=vs(X().getNumber("WEBGL_VERSION")),t=new Kf(a),this.binaryCache=LX(X().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0),this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new wX(this.gpgpu),this.numMBBeforeWarning=WX(),this.texData=new Ud(this,Ss())}nextDataId(){return z1.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,a){if((X().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||X().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===a&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");var r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:a,values:e,usage:1,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(t){if(this.texData.has(t)){let e=this.texData.get(t);e.refCount--}}move(e,t,a,r,n){if(X().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:a,dtype:r,values:t,usage:1,refCount:n})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(t){var{values:e,dtype:a,complexTensorInfos:r,slice:n,shape:s,isPacked:i}=this.texData.get(t);if(null!=n){let e;e=new(i?Zr:Hs)(s,Mi);i=this.runWebGLProgram(e,[{dataId:t,shape:s,dtype:a}],a),s=this.readSync(i.dataId);return this.disposeIntermediateTensorInfo(i),s}if(null!=e)return this.convertAndCacheOnCPU(t);if("string"===a)return e;let o=null!=this.activeTimers,l;o&&(l=w.now());let u;return u="complex64"===a?(a=this.readSync(r.real.dataId),r=this.readSync(r.imag.dataId),S.mergeRealAndImagArrays(a,r)):this.getValuesFromTexture(t),o&&(this.downloadWaitMs+=w.now()-l),this.convertAndCacheOnCPU(t,u)}async read(a){if(this.pendingRead.has(a)){let t=this.pendingRead.get(a);return new Promise(e=>t.push(e))}var{values:e,shape:t,slice:r,dtype:n,complexTensorInfos:s,isPacked:i}=this.texData.get(a);if(null!=r){let e;e=new(i?Zr:Hs)(t,Mi);r=this.runWebGLProgram(e,[{dataId:a,shape:t,dtype:n}],n),i=this.read(r.dataId);return this.disposeIntermediateTensorInfo(r),i}if(null!=e)return this.convertAndCacheOnCPU(a);if(X().getBool("DEBUG")&&!X().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===X().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let o=null,l;"complex64"!==n&&X().get("WEBGL_BUFFER_SUPPORTED")&&(l=this.decode(a),e=this.texData.get(l.dataId),o=this.gpgpu.createBufferFromTexture(e.texture.texture,...Yc(t))),this.pendingRead.set(a,[]),"complex64"!==n&&await this.gpgpu.createAndWaitForFence();let u;if(u="complex64"===n?(s=(n=await Promise.all([this.read(s.real.dataId),this.read(s.imag.dataId)]))[0],n=n[1],S.mergeRealAndImagArrays(s,n)):null==o?this.getValuesFromTexture(a):(t=w.sizeFromShape(t),this.gpgpu.downloadFloat32MatrixFromBuffer(o,t)),null!=l&&this.disposeIntermediateTensorInfo(l),null!=o){let e=this.gpgpu.gl;fe(e,()=>e.deleteBuffer(o))}let d=this.convertAndCacheOnCPU(a,u),p=this.pendingRead.get(a);return this.pendingRead.delete(a),p.forEach(e=>e(d)),this.pendingDisposal.has(a)&&(this.pendingDisposal.delete(a),this.disposeData(a)&&Ss().removeDataId(a,this),this.pendingDeletes--),d}readToGPU(t,a={}){var{values:e,shape:r,slice:n,dtype:s,isPacked:i,texture:o}=this.texData.get(t);if("complex64"===s)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=n){let e;e=new(i?Zr:Hs)(r,Mi);r=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:s}],s),s=this.readToGPU(r,a);return this.disposeIntermediateTensorInfo(r),s}if(null==o)throw null!=e?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");a=this.decode(t,a.customTexShape);return{tensorRef:Ss().makeTensorFromDataId(a.dataId,a.shape,a.dtype),...this.texData.get(a.dataId).texture}}bufferSync(e){let t=this.readSync(e.dataId),a=t;if("string"===e.dtype)try{a=t.map(e=>w.decodeString(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return De(e.shape,e.dtype,a)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){var a=t[e];if(!VC(a))throw X().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${a} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${a} cannot be represented on this device.`)}}getValuesFromTexture(e){var{shape:t,dtype:a,isPacked:r}=this.texData.get(e),n=w.sizeFromShape(t);if(X().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){var s=this.decode(e),i=this.texData.get(s.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(i.texture.texture,...Yc(t)).subarray(0,n);return this.disposeIntermediateTensorInfo(s),i}r=X().getBool("WEBGL_PACK")&&!0===r,t=r?id(t):t,r=new(r?_K:$K)(t),a=this.runWebGLProgram(r,[{shape:t,dtype:a,dataId:e}],"float32"),e=this.texData.get(a.dataId),n=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(e.texture.texture,e.texShape[0],e.texShape[1]).subarray(0,n);return this.disposeIntermediateTensorInfo(a),n}timerAvailable(){return 0<X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")}time(e){let t=this.activeTimers,a=[],r=!1;null==this.programTimersStack?(this.programTimersStack=a,r=!0):this.activeTimers.push(a),this.activeTimers=a,e();let n=w.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),s=w.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(0<X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")){let e=await Promise.all(n);i.kernelMs=w.sum(e),i.getExtraProfileInfo=()=>e.map((e,t)=>({name:s[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return 0<X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")?this.gpgpu.beginQuery():{startMs:w.now(),endMs:null}}endTimer(e){return 0<X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")?this.gpgpu.endQuery():e.endMs=w.now(),e}async getQueryTime(e){return 0<X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")?this.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&0<this.texData.get(e).refCount)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);var a=this.texData.get(e)["complexTensorInfos"];return null!=a&&(this.disposeData(a.real.dataId,t),this.disposeData(a.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){var{texture:t,dtype:a,texShape:r,usage:n,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,i=this.dataRefCount.get(o);1<i?this.dataRefCount.set(o,i-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,a),this.textureManager.releaseTexture(t,r,n,s)));let l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=BX){return X().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&w.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){S.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");var t=e.dataSync();return PX(e.shape,t)}packedUnaryOp(e,t,a){t=new Zr(e.shape,t),a=this.compileAndRun(t,[e],a);return Ss().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){var t=D1(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(X().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,uw,e.dtype);t=new Hs(e.shape,uw),e=this.compileAndRun(t,[e]);return Ss().makeTensorFromDataId(e.dataId,e.shape,e.dtype)}makeTensorInfo(e,t,a){let r;var n;return r="string"===t&&null!=a&&0<a.length&&w.isString(a[0])?(n=a.map(e=>w.encodeString(e)),this.write(n,e,t)):this.write(a,e,t),this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,a){var a=this.makeTensorInfo(e,t,a)["dataId"];return Ss().makeTensorFromDataId(a,e,t,this)}unpackTensor(e){var t=new OX(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){var t=new vX(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){var a=[ba(e.shape),...ya(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},n=[ba(t),...ya(t)],n=new P1(n,a),a=this.runWebGLProgram(n,[r],e.dtype,[a],!0);return{dataId:a.dataId,shape:t,dtype:a.dtype}}decode(e,t){var a,r,{isPacked:n,shape:s,dtype:i}=this.texData.get(e);null!=t&&(a=w.sizeFromShape(s),r=t[0]*t[1]*4,w.assert(a<=r,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));let o=id(s),l;l=new(n?TK:NK)(o);n=[null!=t?t:Yc(o)];return{dtype:i,shape:s,dataId:this.runWebGLProgram(l,[{shape:o,dtype:i,dataId:e}],i,n,!0,t).dataId}}runWebGLProgram(t,e,a,r,n=!1,s){let i=this.makeTensorInfo(t.outputShape,a),o=this.texData.get(i.dataId);if(t.packedOutput&&(o.isPacked=!0),0===t.outPackingScheme){let e=null!=s?s:Yc(t.outputShape);o.texShape=e.map(e=>2*e)}if(null!=t.outTexUsage&&(o.usage=t.outTexUsage),0===w.sizeFromShape(i.shape))return o.values=w.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=e.map(a=>{if("complex64"===a.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let r=this.texData.get(a.dataId);if(null==r.texture){if(!t.packedInputs&&w.sizeFromShape(a.shape)<=X().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:a.shape,texData:null,isUniform:!0,uniformValues:r.values};t.packedInputs&&(r.isPacked=!0,r.shape=a.shape)}if(this.uploadToGPU(a.dataId),!!r.isPacked!=!!t.packedInputs)a=r.isPacked?this.unpackTensor(a):this.packTensor(a),l.push(a),r=this.texData.get(a.dataId);else if(r.isPacked&&!el(r.shape,a.shape)){let e=a,t=a.shape;a.shape=r.shape,a=this.packedReshape(a,t),l.push(a),r=this.texData.get(a.dataId),e.shape=t}return{shape:a.shape,texData:r,isUniform:!1}});this.uploadToGPU(i.dataId);let d={shape:i.shape,texData:o,isUniform:!1},p=CK(t,u,d),h=this.getAndSaveBinary(p,()=>IK(this.gpgpu,t,u,d)),c=null!=this.activeTimers,f;c&&(f=this.startTimer()),X().get("ENGINE_COMPILE_ONLY")||SK(this.gpgpu,h,u,d,r),l.forEach(e=>this.disposeIntermediateTensorInfo(e)),c&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)}));e=X().get("WEBGL_FLUSH_THRESHOLD");if(0<e&&((r=w.now())-this.lastGlFlushTime>e&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=r)),X().getBool("WEBGL_LAZILY_UNPACK")||!o.isPacked||!1!==n)return i;n=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),n}compileAndRun(e,t,a,r,n=!1){return a=a||t[0].dtype,this.runWebGLProgram(e,t,a,r,n)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(X().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=j(()=>{if(!X().get("WEBGL_RENDER_FLOAT32_ENABLED")){var e=X().getBool("DEBUG");X().set("DEBUG",!1);var t=this.abs(we(1e-8)).dataSync()[0];if(X().set("DEBUG",e),0<t)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?zX:MX}uploadToGPU(p){let h=this.texData.get(p),{shape:c,dtype:f,values:m,texture:e,usage:t,isPacked:g}=h;if(null==e){let l=null!=this.activeTimers,u;l&&(u=w.now());let d=h.texShape;if(null==d&&(d=r1(c,g),h.texShape=d),null!=m){let e=id(c),t,a=d[1],r=d[0],n=m instanceof Uint8Array||m instanceof Uint8ClampedArray;!g&&n||([a,r]=tu(d[0],d[1])),t=new(g?EK:AK)(e,n);let s=n?[r,a]:d,i=this.makeTensorInfo(s,f),o=this.texData.get(i.dataId);o.usage=n?2:1,o.texShape=s,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(i.dataId),a,r,m);var p=[[r,a]],b=this.runWebGLProgram(t,[i],f,p,!0),p=this.texData.get(b.dataId);h.texShape=p.texShape,h.isPacked=p.isPacked,h.usage=p.usage,X().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(h.texture=p.texture,h.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(i),l&&(this.uploadWaitMs+=w.now()-u)}else{b=this.acquireTexture(d,t,f,g);h.texture=b}}}convertAndCacheOnCPU(e,t){let a=this.texData.get(e),r=a["dtype"];return this.releaseGPUData(e),null!=t&&(a.values=UX(t,r)),a.values}acquireTexture(e,t,a,r){return this.numBytesInGPU+=this.computeBytes(e,a),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024&&(a=(this.numBytesInGPU/1024/1024).toFixed(2),this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${a} MB, most likely due to a memory leak`)),this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*w.bytesPerElement(t)}checkCompileCompletion(){for(var[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(var[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){var a=new Promise(e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}});e.push(a)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await OI(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(pv(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(var[,e]of Object.entries(this.binaryCache)){var{uniformLocations:t,customUniformLocations:a,infLoc:r,nanLoc:n,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=m1(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=a,e.infLoc=r,e.nanLoc=n,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}},M1=z1;function UX(a,e){if("float32"===e||"complex64"===e)return a;if("int32"!==e&&"bool"!==e)throw new Error(`Unknown dtype ${e}`);{let t=new("int32"===e?Int32Array:Uint8Array)(a.length);for(let e=0;e<t.length;++e)t[e]=Math.round(a[e]);return t}}M1.nextDataId=0;var Ppe="0.0.0";function GX(){X().set("WEBGL_FORCE_F16_TEXTURES",!0)}dp.isBrowser()&&pp("webgl",()=>new M1,2);var zpe={forceHalfFloat:GX},L1=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,ro=class{constructor(e,t,a){this.variableNames=["A","B"],this.outputShape=S.assertAndGetBroadcastShape(t,a),this.enableShapeUniforms=Sn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},jp=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,Zl=class{constructor(e,t,a,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=S.assertAndGetBroadcastShape(t,a);a=this.outputShape.length;this.enableShapeUniforms=Sn(a);let n="";r&&(0===a||1===w.sizeFromShape(this.outputShape)?n=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `:(n=`
          ${rt(a)} coords = getOutputCoords();
        `,1===a?this.enableShapeUniforms?n+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:n+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:(r=ln("coords",a),this.enableShapeUniforms?n+=`
            bool nextRowOutOfBounds =
              (${r[a-2]} + 1) >= outShape[${a} - 2];
            bool nextColOutOfBounds =
              (${r[a-1]} + 1) >= outShape[${a} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:n+=`
            bool nextRowOutOfBounds =
              (${r[a-2]} + 1) >= ${this.outputShape[a-2]};
            bool nextColOutOfBounds =
              (${r[a-1]} + 1) >= ${this.outputShape[a-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `))),this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${n}

        setOutput(result);
      }
    `}};function kn(e){let{inputs:t,backend:a}=e,r=t["x"];return a.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var HX={kernelName:Ba,backendName:"webgl",kernelFunc:kn};function Rr(e){let{inputs:t,backend:a}=e,{real:r,imag:n}=t,s=a.makeTensorInfo(r.shape,"complex64"),i=a.texData.get(s.dataId),o=kn({inputs:{x:r},backend:a}),l=kn({inputs:{x:n},backend:a});return i.complexTensorInfos={real:o,imag:l},s}var qX={kernelName:jd,backendName:"webgl",kernelFunc:Rr},B1="return (a < 0.) ? b * a : a;",V1=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function jX(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],s=r["alpha"],i=a.makeTensorInfo([],"float32",w.createScalarValue(s,"float32")),o=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zl(V1,n.shape,i.shape):new ro(B1,n.shape,i.shape),l=a.runWebGLProgram(o,[n,i],"float32");return a.disposeIntermediateTensorInfo(i),l}var KX={kernelName:Va,backendName:"webgl",kernelFunc:jX},W1="return (a < 0.) ? b * a : a;",U1=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function XX(e){let{inputs:t,backend:a}=e,{x:r,alpha:n}=t,s=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zl(U1,r.shape,n.shape):new ro(W1,r.shape,n.shape);return a.runWebGLProgram(s,[r,n],"float32")}var YX={kernelName:Ja,backendName:"webgl",kernelFunc:XX},ou="if (isnan(x)) return x;",QX=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,ZX=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Ke({opSnippet:o,packedOpSnippet:l,cpuKernelImpl:u,dtype:d}){return({inputs:e,backend:t})=>{let a=e["x"],r=t,n=d||a.dtype;if(r.shouldExecuteOnCPU([a])&&null!=u){t=r.texData.get(a.dataId),t=u(t.values,n);return r.makeTensorInfo(a.shape,n,t)}let s=X().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=l,i;return i=s?new Zr(a.shape,l):new Hs(a.shape,o),r.runWebGLProgram(i,[a],n)}}function jt({opSnippet:s,packedOpSnippet:r,checkOutOfBounds:n=!1,supportsComplex:i=!1,cpuKernelImpl:h,dtype:o}){return({inputs:e,backend:l})=>{let{a:u,b:d}=e,p=l;if(i&&"complex64"===u.dtype){let e=p.texData.get(u.dataId),t=p.texData.get(d.dataId),[a,r]=[[e.complexTensorInfos.real,t.complexTensorInfos.real],[e.complexTensorInfos.imag,t.complexTensorInfos.imag]].map(e=>{var[t,a]=e,r={dataId:t.dataId,dtype:t.dtype,shape:u.shape},n={dataId:a.dataId,dtype:a.dtype,shape:d.shape},e=new ro(s,u.shape,d.shape);return p.runWebGLProgram(e,[r,n],cn(t.dtype,a.dtype))}),n=Rr({inputs:{real:a,imag:r},backend:p});return p.disposeIntermediateTensorInfo(a),p.disposeIntermediateTensorInfo(r),n}l=o||cn(u.dtype,d.dtype);if(("string"===u.dtype||"string"===d.dtype||p.shouldExecuteOnCPU([u,d]))&&null!=h){let e=p.texData.get(u.dataId).values,t=p.texData.get(d.dataId).values,a="string"===u.dtype?S.fromUint8ToStringArray(e):e,r="string"===u.dtype?S.fromUint8ToStringArray(t):t,[n,s]=h(u.shape,d.shape,a,r,l),i=p.makeTensorInfo(s,l),o=p.texData.get(i.dataId);return o.values=n,i}let t=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=r,a;return a=t?new Zl(r,u.shape,d.shape,n):new ro(s,u.shape,d.shape),p.runWebGLProgram(a,[u,d],l)}}function Kp(e,t=!1){if("linear"===e)return t?AX:CX;if("relu"===e)return t?RX:TX;if("elu"===e)return t?EX:NX;if("relu6"===e)return t?DX:$X;if("prelu"===e)return t?U1:W1;if("leakyrelu"===e)return t?V1:B1;if("sigmoid"===e)return t?FX:_X;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var G1=class{constructor(e,t,a,r=!1,n=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a,this.enableShapeUniforms=Sn(this.outputShape.length);let u=r?e[1]:e[2],d=Math.ceil(u/2),p=r?"i * 2, rc.y":"rc.y, i * 2",h=n?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=n?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(m=o?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");i=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",y="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(y=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${d}; i++) {
          int batchA = ${b};
          int batchB = ${y};
          vec4 a = getMatrixA(batchA, ${p});
          vec4 b = getMatrixB(batchB, ${h});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${c[0]} * ${f[0]});
          result += (${c[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${i}

        ${g}

        setOutput(result);
      }
    `}},lw={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},cw=class{constructor(e,t,a){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=S.assertAndGetBroadcastShape(t,a),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},dw="return a * b;";function kv(e){let{inputs:t,backend:i}=e,{a:o,b:l}=t,u=S.upcastType(o.dtype,l.dtype);if("complex64"===o.dtype){var a=i.texData.get(o.dataId),r=i.texData.get(l.dataId),n=new cw(lw.REAL,o.shape,l.shape),e=new cw(lw.IMAG,o.shape,l.shape),r=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l.shape},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l.shape}],n=i.runWebGLProgram(n,r,"float32"),e=i.runWebGLProgram(e,r,"float32"),r=Rr({inputs:{real:n,imag:e},backend:i});return i.disposeIntermediateTensorInfo(n),i.disposeIntermediateTensorInfo(e),r}if(i.shouldExecuteOnCPU([o,l])){let e=i.texData.get(o.dataId),t=i.texData.get(l.dataId),[a,r]=JK(o.shape,l.shape,e.values,t.values,u),n=i.makeTensorInfo(r,u),s=i.texData.get(n.dataId);return s.values=a,n}let s;return s=new(X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?Zl:ro)(dw,o.shape,l.shape),i.runWebGLProgram(s,[o,l],u)}var JX={kernelName:Ya,backendName:"webgl",kernelFunc:kv};function e8(e,t,a){var r=[ba(e.shape),...ya(e.shape)],n={dtype:e.dtype,shape:r,dataId:e.dataId},s=[ba(t),...ya(t)],s=new P1(s,r),r=a.runWebGLProgram(s,[n],e.dtype,[r],!0);return{dataId:r.dataId,shape:t,dtype:r.dtype}}function he(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],s=r["shape"],i=a,o=w.sizeFromShape(n.shape),l=w.inferFromImplicitShape(s,o),u=w.sizeFromShape(l);w.assert(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${n.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);e=i.texData.get(n.dataId);return!e.isPacked||el(n.shape,l)||null!==e.texture&&el(e.shape,l)?(i.incRef(n.dataId),{dataId:n.dataId,shape:l,dtype:n.dtype}):e8(n,l,i)}var t8={kernelName:Eo,backendName:"webgl",kernelFunc:he},pw=class{constructor(e,t){this.variableNames=["x"];var{windowSize:a,batchSize:r,inSize:n,outSize:e}=e;this.outputShape=[r,e];let s=4*Math.floor(a/4),i=a%4,o="sumValue += dot(values, ones);";if(null!=t){let e=1/t;o=`sumValue += dot(values * ${w.isInt(e)?e.toPrecision(2):e}, ones);`}let l=0<n%a?`
        if (inIdx < 0 || inIdx >= ${n}) {
          return 0.0;
        }
      `:"";this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        float sumValue = 0.0;

        for (int i = 0; i < ${s}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${o}
        }

        int inIdx = inOffset + ${s};
        if (${1==i}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${o}
        } else if (${2==i}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${o}
        } else if (${3==i}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${o}
        }
        setOutput(sumValue);
      }
    `}},n8=class{constructor(e,t){this.variableNames=["x"];var{windowSize:a,batchSize:r,inSize:n,outSize:e}=e;this.outputShape=[r,e];let s="0.0",i="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",i="min"):"max"===t&&(s="-1.0 / 1e-20",i="max");let o=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?o="sumValue":"prod"===t?o="prodValue":"all"===t?o="allValue":"any"===t&&(o="anyValue");let l=4*Math.floor(a/4),u=a%4,d=`
      if (${"sum"===t}) {
        sumValue += dot(values, ones);
      } else if (${"prod"===t}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${i}(values, minMaxValue);
        if (${"min"===t} || ${"max"===t}) {
          minMaxValue = ${i}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";"all"===t?(s="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):"any"===t&&(s="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let h=0<n%a?`
        if (inIdx < 0 || inIdx >= ${n}) {
          return initializationValue;
        }
      `:"";this.userCode=`
      const float initializationValue = ${s};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        vec4 minMaxValue = vec4(${s});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${l};
        if (${1==u}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${2==u}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${3==u}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${o});
      }
    `}};function s8(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){var a=t.length?t[t.length-1].outSize:e[1],r=S.computeOptimalWindowSize(a);t.push({inSize:a,windowSize:r,outSize:Math.ceil(a/r)})}return t}function xi(i,o,l,u){let d=s8(i.shape),p=i;for(let s=0;s<d.length;s++){let{inSize:e,windowSize:t,outSize:a}=d[s],r,n;r="mean"===l?0===s?new pw({windowSize:t,inSize:e,batchSize:i.shape[0],outSize:a},e):new pw({windowSize:t,inSize:e,batchSize:i.shape[0],outSize:a}):new n8({windowSize:t,inSize:e,batchSize:i.shape[0],outSize:a},l),n=p,p=u.runWebGLProgram(r,[p],o),n.dataId!==i.dataId&&u.disposeIntermediateTensorInfo(n)}return p}var r8=class{constructor(t,a){this.variableNames=["A"];let r=new Array(t.length);for(let e=0;e<r.length;e++)r[e]=t[a[e]];this.outputShape=r,this.rank=r.length;var e=rt(this.rank),n=a8(a);this.userCode=`
    void main() {
      ${e} resRC = getOutputCoords();
      setOutput(getA(${n}));
    }
    `}};function a8(t){var e=t.length;if(6<e)throw Error(`Transpose for rank ${e} is not yet supported`);let a=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=a[e];return r.join()}var i8=class{constructor(t,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let r=new Array(t.length);for(let e=0;e<r.length;e++)r[e]=t[a[e]];if(this.outputShape=r,this.rank=r.length,6<this.rank)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let e=rt(this.rank),n=O1("rc",this.rank),s=new Array(this.rank);for(let e=0;e<a.length;e++)s[a[e]]=n[e];var i=`vec2(${s.slice(-2).join()})`,o=`++${n[this.rank-1]} < ${r[this.rank-1]}`,i=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${e} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${i};
      if(${o}) {
        result[1] = ${i};
      }
      --${n[this.rank-1]};
      if(++${n[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${i};
        if(${o}) {
          result[3] = ${i};
        }
      }
      setOutput(result);
    }
    `}};function Xp(e,t,a){t=new(X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?i8:r8)(e.shape,t);return a.runWebGLProgram(t,[e],e.dtype)}function o8(e,t,a,r){let n=t,s=e.shape.length,i=w.parseAxisParam(n,e.shape),o=i,l=S.getAxesPermutation(o,s),u=null!=l,d=e;u&&(d=Xp(e,l,r),o=S.getInnerMostAxes(o.length,s)),S.assertAxesAreInnerMostDims("sum",o,s);let[p,h]=S.computeOutAndReduceShapes(d.shape,o),c=p;a&&(c=S.expandShapeToKeepDim(p,i));t=w.sizeFromShape(h),a=w.sizeFromShape(e.shape)/t,a=he({inputs:{x:d},attrs:{shape:[a,t]},backend:r}),t=xi(a,cp(e.dtype),"sum",r),e=he({inputs:{x:t},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(t),u&&r.disposeIntermediateTensorInfo(d),e}function Yp(e){var{inputs:t,backend:a,attrs:r}=e,e=t["x"],{axis:t,keepDims:r}=r;return o8(e,t,r,a)}var u8={kernelName:oi,backendName:"webgl",kernelFunc:Yp};function qt(t){let{inputs:e,backend:a,attrs:r}=t,n=e["x"],s=r["perm"],i=a,o=n.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=n.shape[s[e]];let u;if(i.shouldExecuteOnCPU([n])){t=i.texData.get(n.dataId).values,t=wv(t,n.shape,n.dtype,s,l);u=i.makeTensorInfo(l,n.dtype);let e=i.texData.get(u.dataId);e.values=t}else u=Xp(n,s,i);return u}var l8={kernelName:pi,backendName:"webgl",kernelFunc:qt},H1=1e3;function zd({a:r,b:n,transposeA:o,transposeB:l,backend:u,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:d=0,activation:p=null}){let e=r.shape.length,t=n.shape.length,a=o?r.shape[e-2]:r.shape[e-1],h=l?n.shape[t-1]:n.shape[t-2],c=o?r.shape[e-1]:r.shape[e-2],f=l?n.shape[t-2]:n.shape[t-1],m=r.shape.slice(0,-2),g=n.shape.slice(0,-2),b=w.sizeFromShape(m),y=w.sizeFromShape(g),v=jo.assertAndGetBroadcastShape(r.shape.slice(0,-2),n.shape.slice(0,-2)).concat([c,f]);w.assert(a===h,()=>`Error in matMul: inner shapes (${a}) and (${h}) of Tensors with shapes ${r.shape} and ${n.shape} and transposeA=${o} and transposeB=${l} must match.`);let x=o?[b,a,c]:[b,c,a],k=l?[y,f,h]:[y,h,f],I=he({inputs:{x:r},backend:u,attrs:{shape:x}}),S=he({inputs:{x:n},backend:u,attrs:{shape:k}}),C=[I,S],N=Math.max(b,y),T=o?I.shape[1]:I.shape[2],$=null!=s,_=null!=i,A="leakyrelu"===p,E=null!=p?Kp(p,!0):null,R=$||_||A||null!=E,F;if((1===c||1===f)&&H1<T&&!1==R){let e=I,t=S;o&&(e=qt({inputs:{x:I},backend:u,attrs:{perm:[0,2,1]}}),C.push(e)),l&&(t=qt({inputs:{x:S},backend:u,attrs:{perm:[0,2,1]}}),C.push(t));let a=1!==f,r=1===f,n=e;a&&(n=he({inputs:{x:e},backend:u,attrs:{shape:[N,T,1]}}),C.push(n));let s=1===f?2:1,i=t;r&&(i=he({inputs:{x:t},backend:u,attrs:{shape:[N,1,T]}}),C.push(i));p=kv({inputs:{a:n,b:i},backend:u});F=Yp({inputs:{x:p},backend:u,attrs:{axis:s,keepDims:!0}}),C.push(p)}else{let e=cn(r.dtype,n.dtype),t=new G1(x,k,[N,c,f],o,l,$,E,_,A),a=[I,S];null!=s&&a.push(s),_&&a.push(i),A&&(M=u.makeTensorInfo([],"float32",w.createScalarValue(d,"float32")),a.push(M),C.push(M)),F=u.runWebGLProgram(t,a,e)}var O,M=he({inputs:{x:F},backend:u,attrs:{shape:v}});C.push(F);for(O of C)u.disposeIntermediateTensorInfo(O);return M}function c8(e){var{inputs:t,backend:a,attrs:r}=e,{a:n,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:e,activation:t,leakyreluAlpha:r}=r;return zd({a:n,b:s,transposeA:l,transposeB:e,backend:a,bias:i,preluActivationWeights:o,leakyreluAlpha:r,activation:t})}var d8={kernelName:ra,backendName:"webgl",kernelFunc:c8},hw="return abs(x);";function p8(e){let{inputs:t,backend:a}=e,r=t["x"];if(a.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){e=a.texData.get(r.dataId),e=D1(e.values);return a.makeTensorInfo(r.shape,r.dtype,e)}let n;return n=new(X().getBool("WEBGL_PACK_UNARY_OPERATIONS")?Zr:Hs)(r.shape,hw),a.runWebGLProgram(n,[r],r.dtype)}var h8={kernelName:io,backendName:"webgl",kernelFunc:p8},f8=ss+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,m8=Ke({opSnippet:f8}),g8={kernelName:sl,backendName:"webgl",kernelFunc:m8},b8=ss+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,y8=Ke({opSnippet:b8}),v8={kernelName:rl,backendName:"webgl",kernelFunc:y8},fw="return a + b;",x8=jt({opSnippet:fw,packedOpSnippet:fw,supportsComplex:!0,cpuKernelImpl:FK}),w8={kernelName:Ir,backendName:"webgl",kernelFunc:x8},k8=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let a=[];this.variableNames.forEach(e=>{a.push(`float v${e} = get${e}AtOutCoords();`)});t=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${a.join(`
        `)}

        float result = ${t};
        setOutput(result);
      }
    `}},I8=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let a=[];this.variableNames.forEach(e=>{a.push(`vec4 v${e} = get${e}AtOutCoords();`)});t=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${a.join(`
        `)}

        vec4 result = ${t};
        setOutput(result);
      }
    `}};function ld(e){let{inputs:t,backend:a}=e,r=t;if(1===r.length)return kn({inputs:{x:r[0]},backend:a});if(r.length>X().get("WEBGL_MAX_TEXTURES_IN_SHADER")){var n=Math.floor(r.length/2),s=ld({inputs:r.slice(0,n),backend:a}),n=ld({inputs:r.slice(n),backend:a});return ld({inputs:[s,n],backend:a})}s=r.map(e=>e.dtype).reduce((e,t)=>cn(e,t)),n=r.map(e=>e.shape),n=new(X().getBool("WEBGL_PACK")?I8:k8)(r[0].shape,n);return a.runWebGLProgram(n,r,s)}var S8={kernelName:ka,backendName:"webgl",kernelFunc:ld};function C8(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{axis:s,keepDims:i}=r,o=n.shape.length,l=w.parseAxisParam(s,n.shape),u=l,d=S.getAxesPermutation(u,o),p=n;null!=d&&(p=qt({inputs:{x:n},backend:a,attrs:{perm:d}}),u=S.getInnerMostAxes(u.length,o)),S.assertAxesAreInnerMostDims("all",u,o);let[h,c]=S.computeOutAndReduceShapes(p.shape,u),f=w.sizeFromShape(c),m=he({inputs:{x:p},backend:a,attrs:{shape:[-1,f]}}),g=xi(m,m.dtype,"all",a),b;return b=i?(e=S.expandShapeToKeepDim(h,l),he({inputs:{x:g},backend:a,attrs:{shape:e}})):he({inputs:{x:g},backend:a,attrs:{shape:h}}),a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),null!=d&&a.disposeIntermediateTensorInfo(p),b}var N8={kernelName:al,backendName:"webgl",kernelFunc:C8};function T8(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{axis:s,keepDims:i}=r,o=n.shape.length,l=w.parseAxisParam(s,n.shape),u=l,d=S.getAxesPermutation(u,o),p=n;null!=d&&(p=qt({inputs:{x:n},backend:a,attrs:{perm:d}}),u=S.getInnerMostAxes(u.length,o)),S.assertAxesAreInnerMostDims("any",u,o);let[h,c]=S.computeOutAndReduceShapes(p.shape,u),f=w.sizeFromShape(c),m=he({inputs:{x:p},backend:a,attrs:{shape:[-1,f]}}),g=xi(m,m.dtype,"any",a),b;return b=i?(e=S.expandShapeToKeepDim(h,l),he({inputs:{x:g},backend:a,attrs:{shape:e}})):he({inputs:{x:g},backend:a,attrs:{shape:h}}),a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),null!=d&&a.disposeIntermediateTensorInfo(p),b}var $8={kernelName:il,backendName:"webgl",kernelFunc:T8},_8=class{constructor(e,t,a){this.variableNames=["A"];var{windowSize:r,batchSize:n,outSize:e}=e;a||this.variableNames.push("bestIndicesA"),this.outputShape=[n,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${a?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};
          float candidate = getA(batch, inIdx);
          if (candidate ${"max"===t?">":"<"} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},A8=class{constructor(e,t,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,w.assert(2<e.length,()=>`Packed arg${a.charAt(0).toUpperCase()+a.slice(1)} supports only inputs with rank above 2.`);var n=e[e.length-1],n=Math.ceil(n/t);this.outputShape=e.slice(0,-1),1<n&&this.outputShape.push(n),r||this.variableNames.push("bestIndicesA");let s=this.outputShape,i=s.length,o=rt(i),l=ln("coords",i),u,d;u=1===n?(d=i+1,`
        ${n=rt(d)} sourceLocR = ${n}(${l.join()}, 0);
        ++${l[i-1]};
        ${n} sourceLocG = ${n}(${l.join()}, 0);
        ++${l[i-2]};
        ${n} sourceLocA = ${n}(${l.join()}, 0);
        --${l[i-1]};
        ${n} sourceLocB = ${n}(${l.join()}, 0);
        --${l[i-2]};`):(d=i,`
        ${o} sourceLocR = coords;
        ++${l[i-1]};
        ${o} sourceLocG = coords;
        ++${l[i-2]};
        ${o} sourceLocA = coords;
        --${l[i-1]};
        ${o} sourceLocB = coords;
        --${l[i-2]};`);let p=["x","y","z","w","u","v"].slice(0,d),h="."+p[d-1],c=p.map(e=>"int "+e),f=ln("sourceLocR",d-1).concat("inIdx.r"),m=ln("sourceLocG",d-1).concat("inIdx.g"),g=ln("sourceLocB",d-1).concat("inIdx.b"),b=ln("sourceLocA",d-1).concat("inIdx.a"),y="max"===a?"greaterThan":"lessThan",v=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),
                             getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()})));`,x=`vec4(
            getAChannel(${f.join()}),
            hasNextCol ? getAChannel(${m.join()}) : 0.,
            hasNextRow ? getAChannel(${g.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`
      float getBestIndicesAChannel(${c.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${c.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${k}
      void main() {
        ${o} coords = getOutputCoords();
        bool hasNextCol = ${l[i-1]} < ${s[i-1]-1};
        bool hasNextRow = ${l[i-2]} < ${s[i-2]-1};
        ${u}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${x};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${x};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function q1(e,t,a,r=null){let n=t.shape[0],s=t.shape[1];null!=r&&(n=r.shape[0],s=r.shape[1]);let i=S.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:n,outSize:Math.ceil(s/i)},l=new _8(o,a,null==r),u=[t];null!=r&&u.push(r);r=e.runWebGLProgram(l,u,"int32");if(1===r.shape[1])return r;a=q1(e,t,a,r);return e.disposeIntermediateTensorInfo(r),a}function j1(e,t,a,r=null){var n=(null!=r?r:t).shape,s=n[n.length-1],s=S.computeOptimalWindowSize(s),s=new A8(n,s,a,null==r),r=e.runWebGLProgram(s,null==r?[t]:[t,r],"int32");if(r.shape.length!==t.shape.length)return r;a=j1(e,t,a,r);return e.disposeIntermediateTensorInfo(r),a}function K1(n,s,i,o){var l=[i];if(S.assertAxesAreInnerMostDims("arg"+o.charAt(0).toUpperCase()+o.slice(1),l,s.shape.length),!X().getBool("WEBGL_PACK_REDUCE")||s.shape.length<=2){let e=[],t=n.texData.get(s.dataId),a=null!==t&&t.isPacked,r=s;a&&(r=n.unpackTensor(s),e.push(r));var[i,l]=S.computeOutAndReduceShapes(r.shape,l),l=w.sizeFromShape(l),l=he({inputs:{x:r},backend:n,attrs:{shape:[-1,l]}});e.push(l);l=q1(n,l,o);e.push(l);i=he({inputs:{x:l},backend:n,attrs:{shape:i}});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),i}return j1(n,s,o)}function E8(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],s=r["axis"],i=w.parseAxisParam(s,n.shape),o=S.getAxesPermutation(i,n.shape.length),l=n,u=[];null!=o&&(l=qt({inputs:{x:n},backend:a,attrs:{perm:o}}),u.push(l),i=S.getInnerMostAxes(i.length,l.shape.length)),S.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);e=K1(a,l,i[0],"max");return u.forEach(e=>a.disposeIntermediateTensorInfo(e)),e}var R8={kernelName:Ia,backendName:"webgl",kernelFunc:E8};function D8(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],s=r["axis"],i=w.parseAxisParam(s,n.shape),o=S.getAxesPermutation(i,n.shape.length),l=n,u=[];null!=o&&(l=qt({inputs:{x:n},backend:a,attrs:{perm:o}}),u.push(l),i=S.getInnerMostAxes(i.length,l.shape.length)),S.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);e=K1(a,l,i[0],"min");return u.forEach(e=>a.disposeIntermediateTensorInfo(e)),e}var F8={kernelName:ol,backendName:"webgl",kernelFunc:D8},O8=ss+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,P8=Ke({opSnippet:O8}),z8={kernelName:ul,backendName:"webgl",kernelFunc:P8},M8=ss+"return log(x + sqrt(x * x + 1.0));",L8=Ke({opSnippet:M8}),B8={kernelName:ll,backendName:"webgl",kernelFunc:L8},V8=ss+`
  return atan(x);
`,W8=Ke({opSnippet:V8}),U8={kernelName:cl,backendName:"webgl",kernelFunc:W8},G8=QX+`
  return atan(a, b);
`,H8=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+ZX+`
  return result;
`,q8=jt({opSnippet:G8,packedOpSnippet:H8}),j8={kernelName:pl,backendName:"webgl",kernelFunc:q8},K8=ss+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,X8=Ke({opSnippet:K8}),Y8={kernelName:dl,backendName:"webgl",kernelFunc:X8},tl=class{constructor(t,a,e,r=!1,n=!1){if(this.variableNames=["x"],"avg"===a&&e)throw new Error("Cannot compute positions for average pool.");var s=t.filterWidth,i=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,h=t.padInfo.top,c=t.padInfo.left;this.outputShape=t.outShape;let f="avg"===a,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`,b=f?"0.0":"-1.0 / 1e-20";if(e)this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${h}, ${c});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?n?m:g:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;else{let e=`${a}(${a}(${a}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===a&&(e="avgValue / count");p=4*Math.floor(s/4),a=s%4,s=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${h}, ${c});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${s}
          }

          int xC = xCCorner + ${p};
          if (${1==a}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${s}
          } else if (${2==a}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${s}
          } else if (${3==a}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${s}
          }
        }
        setOutput(${e});
      }
    `}}},Iv=class{constructor(t,a,e,r=!1,n=!1){if(this.variableNames=["x"],"avg"===a&&e)throw new Error("Cannot compute positions for average pool.");var s=t.filterWidth,i=t.strideDepth,o=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,d=t.dilationHeight,p=t.dilationWidth,h=t.effectiveFilterDepth,c=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;let y="avg"===a,v=y?"0.0":"-1.0 / 1e-20";if(e)this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${h};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${c};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?n?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${c} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;else{let e=`${a}(${a}(${a}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===a&&(e="avgValue / count");f=4*Math.floor(s/4),a=s%4,s=`
      if (${y}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${b});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${s}
            }

            int xC = xCCorner + ${f};
            if (${1==a}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${s}
            } else if (${2==a}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${s}
            } else if (${3==a}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${s}
            }
          }
          setOutput(${e});
        }
      }
    `}}};function Q8(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"];nu(n,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;w.assert(S.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);e=S.computePool2DInfo(n.shape,s,i,1,o,l);if(1===e.filterWidth&&1===e.filterHeight&&w.arraysEqual(e.inShape,e.outShape))return kn({inputs:{x:n},backend:a});e=new tl(e,"avg",!1);return a.runWebGLProgram(e,[n],"float32")}var Z8={kernelName:Sa,backendName:"webgl",kernelFunc:Q8};function J8(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,d=S.computePool3DInfo(n.shape,s,i,[1,1,1],o,l,u),p=new Iv(d,"avg",!1);return a.runWebGLProgram(p,[n],"float32")}var eY={kernelName:qd,backendName:"webgl",kernelFunc:J8},tY=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;var t=e.filterHeight,a=e.filterWidth,r=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,d=l-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${u}, ${d});
      const float avgMultiplier = float(${1/(t*a)});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},nY=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;var t=e.filterDepth,a=e.filterHeight,r=e.filterWidth,n=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,h=e.effectiveFilterWidth,c=d-1-e.padInfo.front,f=p-1-e.padInfo.top,m=h-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${f}, ${m});
      const float avgMultiplier = float(${1/(t*a*r)});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${n}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${h};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function sY(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=r,p=S.computePool3DInfo(i.shape,o,l,[1,1,1],u,d),h=new nY(p);return a.runWebGLProgram(h,[n],i.dtype)}var rY={kernelName:og,backendName:"webgl",kernelFunc:sY};function aY(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s}=t,i=s;nu([n,s],"avgPoolGrad");var{filterSize:o,strides:l,pad:e}=r,e=S.computePool2DInfo(i.shape,o,l,1,e),e=new tY(e);return a.runWebGLProgram(e,[n],i.dtype)}var iY={kernelName:ig,backendName:"webgl",kernelFunc:aY};function oY(e){var{inputs:t,backend:a,attrs:r}=e,{a:n,b:e}=t,{transposeA:t,transposeB:r}=r;return zd({a:n,b:e,transposeA:t,transposeB:r,backend:a})}var uY={kernelName:Ca,backendName:"webgl",kernelFunc:oY},lY=class{constructor(e,t,a,r,n,s){this.outputShape=[],this.variableNames=["x","mean","variance"],S.assertAndGetBroadcastShape(e,t),S.assertAndGetBroadcastShape(e,a);let i="0.0";null!=r&&(S.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=n&&(S.assertAndGetBroadcastShape(e,n),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},cY=class{constructor(e,t,a,r,n,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],S.assertAndGetBroadcastShape(e,t),S.assertAndGetBroadcastShape(e,a);let i="vec4(0.0)";null!=r&&(S.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=n&&(S.assertAndGetBroadcastShape(e,n),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}},dY=({inputs:e,backend:t,attrs:a})=>{var{x:r,mean:n,variance:s,offset:i,scale:e}=e;w.assert(n.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(null==i||n.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(null==e||n.shape.length===e.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let o=a["varianceEpsilon"];null==o&&(o=.001);let l=[r,n,s],u=null;null!=i&&(u=i.shape,l.push(i));let d=null;null!=e&&(d=e.shape,l.push(e));s=new(X().getBool("WEBGL_PACK_NORMALIZATION")?cY:lY)(r.shape,n.shape,s.shape,u,d,o);return t.runWebGLProgram(s,l,l[0].dtype)},pY={kernelName:Ma,backendName:"webgl",kernelFunc:dY},hY=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;var t=rt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let a=fY(this.rank),r,n=e.map((e,t)=>`sourceLoc.${Gm[t]} = start[${t}] + coords.${Gm[t]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${n.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${a}));
      }
    `}},Gm=["x","y","z","w","u","v"];function fY(e){if(1===e)return"sourceLoc";if(e<=6)return Gm.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var mY=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=rt(this.rank),a=ln("coords",this.rank),r=ln("sourceLoc",this.rank),n=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${n})`,i=`
      result.x = ${s};
      if (++${a[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${s};
        --${r[this.rank-1]};
      }
    `,o=1===this.rank?"":`
      --${a[this.rank-1]};
      if (++${a[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${s};
        if (++${a[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${s};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${a[t]} + start[${t}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}};function gY(e,t,a,r){let n=r.texData.get(e.dataId),s=r.makeTensorInfo(a,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,n),i.refCount=1,i.shape=a,i.dtype=e.dtype;let o=wt.computeFlatOffset(t,w.computeStrides(e.shape));n.slice&&(o+=n.slice.flatOffset),i.slice={flatOffset:o,origDataId:n.slice&&n.slice.origDataId||e.dataId};e=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,e+1),s}function uu(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{begin:s,size:i}=r,[o,l]=wt.parseSliceParams(n,s,i);if(wt.assertParamsValid(n,o,l),0===w.sizeFromShape(l))return a.makeTensorInfo(l,n.dtype,[]);if(a.shouldExecuteOnCPU([n])||"string"===n.dtype){var u=a.texData.get(n.dataId),d=iX(u.values,o,l,n.shape,n.dtype);return a.makeTensorInfo(l,n.dtype,d)}var u=a.texData.get(n.dataId)["isPacked"],d=wt.isSliceContinous(n.shape,o,l);if(!u&&d)return a.uploadToGPU(n.dataId),gY(n,o,l,a);d=new(X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?mY:hY)(l);return a.runWebGLProgram(d,[n],n.dtype,[o])}var bY={kernelName:Po,backendName:"webgl",kernelFunc:uu},yY=e=>{let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{blockShape:s,crops:i}=r;w.assert(n.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((e,t)=>e*t),l=S.getReshaped(n.shape,s,o),u=S.getPermuted(l.length,s.length),d=S.getReshapedPermuted(n.shape,s,o),p=S.getSliceBeginCoords(i,s.length),h=S.getSliceSize(d,i,s.length),c=[],f=he({inputs:{x:n},backend:a,attrs:{shape:l}}),m=qt({inputs:{x:f},backend:a,attrs:{perm:u}}),g=he({inputs:{x:m},backend:a,attrs:{shape:d}}),b=uu({inputs:{x:g},backend:a,attrs:{begin:p,size:h}});return c.push(f),c.push(m),c.push(g),c.forEach(e=>a.disposeIntermediateTensorInfo(e)),b},vY={kernelName:oo,backendName:"webgl",kernelFunc:yY};function xY(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,weights:s}=t,i=r["size"],o=a.readSync(n.dataId),l=a.readSync(s.dataId),u=R1(o,l,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,u)}var wY={kernelName:ug,backendName:"webgl",kernelFunc:xY};function kY(e){let{inputs:t,backend:a}=e,{s0:r,s1:n}=t,s=a.readSync(r.dataId),i=a.readSync(n.dataId),o=S.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return a.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var IY={kernelName:lg,backendName:"webgl",kernelFunc:kY},SY="return float(a != b);",X1=jt({opSnippet:SY,cpuKernelImpl:tX,dtype:"bool"}),CY={kernelName:So,backendName:"webgl",kernelFunc:X1};function Jl(e){let{inputs:t,backend:a}=e,r=t["input"],n=a.texData.get(r.dataId);return kn({inputs:{x:n.complexTensorInfos.real},backend:a})}var NY={kernelName:np,backendName:"webgl",kernelFunc:Jl},TY="return float(int(x));";function $Y(e,t){var a=new Hs(e.shape,TY),e=t.runWebGLProgram(a,[e],"int32");return{dataId:e.dataId,shape:e.shape,dtype:e.dtype}}function Hm(e){let{inputs:t,backend:r,attrs:a}=e,n=t["x"],s=a["dtype"];if("complex64"===s){if("complex64"===n.dtype)return kn({inputs:{x:n},backend:r});let e=$t(n.shape),t=Hm({inputs:{x:n},backend:r,attrs:{dtype:"float32"}}),a=Rr({inputs:{real:t,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(t),a}if("complex64"===n.dtype){var e=Jl({inputs:{input:n},backend:r}),i=Hm({inputs:{x:e},backend:r,attrs:{dtype:s}});return r.disposeIntermediateTensorInfo(e),i}if(!w.hasEncodingLoss(n.dtype,s)){var o=kn({inputs:{x:n},backend:r});return{dataId:o.dataId,shape:o.shape,dtype:s}}if("int32"===s)return $Y(n,r);if("bool"!==s)throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${s}`);i=r.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),o=X1({inputs:{a:n,b:i},backend:r});return r.disposeIntermediateTensorInfo(i),o}var _Y={kernelName:Na,backendName:"webgl",kernelFunc:Hm},mw="return ceil(x);",AY=Ke({opSnippet:mw,packedOpSnippet:mw,cpuKernelImpl:PK}),EY={kernelName:Ta,backendName:"webgl",kernelFunc:AY},RY=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},DY=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function FY(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{clipValueMin:s,clipValueMax:i}=r,o;return o=new(X().getBool("WEBGL_PACK_CLIP")?DY:RY)(n.shape),a.runWebGLProgram(o,[n],n.dtype,[[s],[i]])}var OY={kernelName:Sr,backendName:"webgl",kernelFunc:FY},PY=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function gw(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function zY(e){let{inputs:t,backend:a}=e,r=t["x"],n=a.texData.get(r.dataId),s=new PY(r.shape),i=[gw(r,n.complexTensorInfos.real),gw(r,n.complexTensorInfos.imag)];return a.runWebGLProgram(s,i,i[0].dtype)}var MY={kernelName:Kd,backendName:"webgl",kernelFunc:zY},LY=class{constructor(t){this.outputShape=[],this.outputShape=S.computeOutShape(t,1),this.variableNames=t.map((e,t)=>`T${t}`);let a=new Array(t.length-1);a[0]=t[0][1];for(let e=1;e<a.length;e++)a[e]=a[e-1]+t[e][1];let r=[`if (yC < ${a[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<a.length;e++){var n=a[e-1];r.push(`else if (yC < ${a[e]}) setOutput(getT${e}(yR, yC-${n}));`)}var e=a.length,s=a[a.length-1];r.push(`else setOutput(getT${e}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}},BY=class{constructor(t,a){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=S.computeOutShape(t,a);let e=this.outputShape,r=e.length,n=rt(r),s=ln("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((e,t)=>`T${t}`);let o=new Array(t.length-1);o[0]=t[0][a];for(let e=1;e<o.length;e++)o[e]=o[e-1]+t[e][a];let l=i[a],u=i.slice(-2),d=i.join(),p=`if (${l} < ${o[0]}) {
        return getChannel(
            getT0(${d}), vec2(${u.join()}));
        }`;for(let e=1;e<o.length;e++){var h=o[e-1];p+=`
        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {
          return getChannel(
            getT${e}(${Jc(i,l,h)}),
            vec2(${Jc(u,l,h)}));
        }`}var c=o.length,f=o[o.length-1];p+=`
        return getChannel(
          getT${c}(${Jc(i,l,f)}),
          vec2(${Jc(u,l,f)}));`,this.userCode=`
      float getValue(${i.map(e=>"int "+e)}) {
        ${p}
      }

      void main() {
        ${n} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[r-1]} = ${s[r-1]} + 1;
        if (${s[r-1]} < ${e[r-1]}) {
          result.g = getValue(${s});
        }

        ${s[r-2]} = ${s[r-2]} + 1;
        if (${s[r-2]} < ${e[r-2]}) {
          result.a = getValue(${s});
        }

        ${s[r-1]} = ${s[r-1]} - 1;
        if (${s[r-2]} < ${e[r-2]} &&
            ${s[r-1]} < ${e[r-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function Jc(e,t,a){let r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${a}`:e).join()}function Qp(e){let{inputs:t,backend:a}=e,r=t["input"],n=a.texData.get(r.dataId);return kn({inputs:{x:n.complexTensorInfos.imag},backend:a})}var VY={kernelName:Zd,backendName:"webgl",kernelFunc:Qp};function Gi(o,l,u){var d=o[0].dtype;if("complex64"===d){let e=o.map(e=>Jl({inputs:{input:e},backend:u})),t=o.map(e=>Qp({inputs:{input:e},backend:u})),a=Gi(e,l,u),r=Gi(t,l,u),n=Rr({inputs:{real:a,imag:r},backend:u});return e.forEach(e=>u.disposeIntermediateTensorInfo(e)),t.forEach(e=>u.disposeIntermediateTensorInfo(e)),u.disposeIntermediateTensorInfo(a),u.disposeIntermediateTensorInfo(r),n}let e=u.shouldExecuteOnCPU(o);if("string"===d&&(e=!0),e){let e=o.map(e=>{var t=w.sizeFromShape(e.shape.slice(l));return he({inputs:{x:e},backend:u,attrs:{shape:[-1,t]}})}),t=e.map(e=>({vals:u.readSync(e.dataId),shape:e.shape})),a=S.computeOutShape(e.map(e=>e.shape),1),r=1===e[0].shape[0],n=zK(t,a,d,r),s=S.computeOutShape(o.map(e=>e.shape),l),i=u.makeTensorInfo(s,d,n);return e.forEach(e=>u.disposeIntermediateTensorInfo(e)),i}if(o.length>X().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){var t=Math.floor(o.length/2),a=Gi(o.slice(0,t),l,u),r=Gi(o.slice(t),l,u),t=Gi([a,r],l,u);return u.disposeIntermediateTensorInfo(a),u.disposeIntermediateTensorInfo(r),t}if(X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&1<o[0].shape.length){t=new BY(o.map(e=>e.shape),l);return u.runWebGLProgram(t,o,d)}let{tensors2D:n,outShape:s}=WY(o,l,u),i=new LY(n.map(e=>e.shape)),p=u.runWebGLProgram(i,n,d);n.forEach(e=>u.disposeIntermediateTensorInfo(e));d=he({inputs:{x:p},attrs:{shape:s},backend:u});return u.disposeIntermediateTensorInfo(p),d}function WY(e,t,a){var r=S.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>he({inputs:{x:e},attrs:{shape:[-1,w.sizeFromShape(e.shape.slice(t))]},backend:a})),outShape:r}}function Y1(e){let{inputs:t,backend:a,attrs:r}=e,n=r["axis"],s=w.parseAxisParam(n,t[0].shape)[0],i=S.computeOutShape(t.map(e=>e.shape),s);if(0===w.sizeFromShape(i))return a.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(e=>0<w.sizeFromShape(e.shape));if(1===o.length)return kn({inputs:{x:o[0]},backend:a});e=o.map(e=>e.shape);return S.assertParamsConsistent(e,s),Gi(o,s,a)}var UY={kernelName:uo,backendName:"webgl",kernelFunc:Y1},Q1=class{constructor(e,t=!1,a=null,r=!1,n=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,h=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,b=m?2:3,y=m?3:1,v="",x="";a&&(v=r?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:n?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:`
          float activation(float x) {
            ${a}
          }
        `,x="result = activation(result);");a=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),n&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${v}

      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${y}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${h}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${c}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${1==f}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${c}) *
                    getW(wR, wC, ${c}, d2);
              } else {
                dotProd +=
                    getX(batch, ${c}, xR, xC) *
                    getW(wR, wC, ${c}, d2);
              }

            } else if (${2==f}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${3==f}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2),
                getW(wR, wC, ${c} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1),
                  getX(batch, xR, xC, ${c} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC),
                  getX(batch, ${c} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${a}
        ${x}
        setOutput(result);
      }
    `}},GY=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;var t=e.padInfo.front,a=e.padInfo.top,r=e.padInfo.left,n=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterDepth,p=e.filterHeight,h=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${n}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${a}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${c}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${1==f}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${c}) *
                  getW(wF, wR, wC, ${c}, d2);
              } else if (${2==f}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${3==f}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1),
                  getX(batch, xF, xR, xC, ${c} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2),
                  getW(wF, wR, wC, ${c} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},HY=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Sn(this.outputShape.length);let a=t["dataFormat"],r=fn(),n="channelsLast"===a,s=n?0:1,i=n?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let t=0;t<=1;t++)for(let e=0;e<=1;e++)l+=`
          blockIndex = rc.y + ${e};
          pos = rc.x + ${t};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${n}) {
                  innerDims = vec2(d1, ch);
                  result[${2*t+e}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${2*t+e}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${r.output} = result;
      }
    `}};function Z1({x:s,filter:i,convInfo:o,backend:l,bias:u=null,preluActivationWeights:d=null,leakyreluAlpha:p=0,activation:h=null}){let c=s.shape,f=l.texData.get(s.dataId),e=o.inChannels,t=c[0]*c[1]*c[2],a=o.outChannels,r="channelsLast"===o.dataFormat,m,g=[];if((1!=t&&1!==a||!(H1<e))&&f.isPacked&&r&&null!=f.texture&&c[2]%2!=0&&w.arraysEqual(f.shape.slice(-3),c.slice(-3))){let e=c[0]*c[1]*(c[2]+1),t={dataId:s.dataId,shape:[1,e,o.inChannels],dtype:s.dtype},a=f.shape;f.shape=f.shape.slice(),f.shape[f.shape.length-2]++,w.assert(el(f.shape,t.shape),()=>`packed reshape ${f.shape} to ${t.shape} isn't free`);var b=he({inputs:{x:i},backend:l,attrs:{shape:[1,o.inChannels,o.outChannels]}});g.push(b);let r=zd({a:t,b:b,backend:l,transposeA:!1,transposeB:!1,bias:u,activation:h,preluActivationWeights:d,leakyreluAlpha:p}),n=l.texData.get(r.dataId);w.assert(n.isPacked,()=>"batchMatMul result is expected to be packed"),f.shape=a,n.shape=o.outShape,m=kn({inputs:{x:r},backend:l}),m.shape=o.outShape,g.push(r)}else{s=he({inputs:{x:s},backend:l,attrs:{shape:[1,r?c[0]*c[1]*c[2]:c[0]*c[2]*c[3],o.inChannels]}}),i=he({inputs:{x:i},backend:l,attrs:{shape:[1,o.inChannels,o.outChannels]}}),p=zd({a:s,b:i,transposeA:!1,transposeB:!1,backend:l,bias:u,activation:h,preluActivationWeights:d,leakyreluAlpha:p});m=he({inputs:{x:p},backend:l,attrs:{shape:o.outShape}}),g.push(s),g.push(i),g.push(p)}for(var n of g)l.disposeIntermediateTensorInfo(n);return m}function J1({x:e,filter:t,convInfo:a,backend:r,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:d,outWidth:p,outHeight:h,dataFormat:c}=a,f="channelsLast"===c,m=l*u*d,g=h*p,b=[m,g],y=[],v=he({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),x=he({inputs:{x:t},backend:r,attrs:{shape:[1,m,w.sizeFromShape(t.shape)/m]}});y.push(v),y.push(x);e=new HY(b,a),t=[v.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],e=r.runWebGLProgram(e,[v],"float32",t),t=he({inputs:{x:e},backend:r,attrs:{shape:[1,b[0],b[1]]}});y.push(e),y.push(t);let k=null!=n,I=null!=s,S="leakyrelu"===o,C=o?Kp(o,!0):null,N=new G1(t.shape,x.shape,[1,g,a.outChannels],!0,!1,k,C,I,S),T=[t,x];n&&T.push(n),I&&T.push(s),S&&(_=r.makeTensorInfo([],"float32",w.createScalarValue(i,"float32")),T.push(_),y.push(_));var $,_=r.runWebGLProgram(N,T,"float32"),a=he({inputs:{x:_},backend:r,attrs:{shape:f?[1,h,p,a.outChannels]:[1,a.outChannels,h,p]}});y.push(_);for($ of y)r.disposeIntermediateTensorInfo($);return a}function qY(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=r,p=S.convertConv2DDataFormat(l),h=S.computeConv2DInfo(n.shape,s.shape,i,u,o,d,!1,p),c;c=1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type?X().getBool("WEBGL_CONV_IM2COL")&&1===n.shape[0]?J1({x:n,filter:s,convInfo:h,backend:a}):(f=new Q1(h),a.runWebGLProgram(f,[n,s],"float32")):Z1({x:n,filter:s,convInfo:h,backend:a});var f=he({inputs:{x:c},backend:a,attrs:{shape:h.outShape}});return a.disposeIntermediateTensorInfo(c),f}var jY={kernelName:$a,backendName:"webgl",kernelFunc:qY},KY=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var t=e.strideHeight,a=e.strideWidth,r=e.padInfo.top,n=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${a} - ${n};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${s}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},XY=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var t=e.filterHeight,a=e.filterWidth,r=e.strideHeight,n=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=a-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${s?3:1}];

        ivec2 dyCorner = ivec2(coords[${s?1:2}], coords[${s?2:3}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${a} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},YY=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var t=e.strideDepth,a=e.strideHeight,r=e.strideWidth,n=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${n};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${a} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},QY=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var t=e.filterDepth,a=e.filterHeight,r=e.filterWidth,n=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=a-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${n}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${a}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${a} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function ZY(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=r,p=S.convertConv2DDataFormat(l),h=S.computeConv2DInfo(n.shape,d,i,1,o,u,!1,p),c=new KY(h);return a.runWebGLProgram(c,[n,s],"float32")}var JY={kernelName:cg,backendName:"webgl",kernelFunc:ZY};function e9(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r,p=S.convertConv2DDataFormat(u),h=S.computeConv2DInfo(i,s.shape,o,1,l,d,!1,p),c=new XY(h);return a.runWebGLProgram(c,[n,s],"float32")}var t9={kernelName:_a,backendName:"webgl",kernelFunc:e9};function n9(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=S.computeConv3DInfo(n.shape,s.shape,i,l,o),d=new GY(u);return a.runWebGLProgram(d,[n,s],"float32")}var s9={kernelName:Xd,backendName:"webgl",kernelFunc:n9};function r9(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=S.computeConv3DInfo(n.shape,l,i,1,o),d=new YY(u);return a.runWebGLProgram(d,[n,s],"float32")}var a9={kernelName:dg,backendName:"webgl",kernelFunc:r9};function i9(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=S.computeConv3DInfo(l,s.shape,o,1,i),d=new QY(u);return a.runWebGLProgram(d,[n,s],"float32")}var o9={kernelName:pg,backendName:"webgl",kernelFunc:i9},u9=ou+`
  return cos(x);
`,l9=Ke({opSnippet:u9}),c9={kernelName:Aa,backendName:"webgl",kernelFunc:l9},d9=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,p9=Ke({opSnippet:d9}),h9={kernelName:Ea,backendName:"webgl",kernelFunc:p9},f9=class{constructor(e,t,a,r,n){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];var[s,i,o,l]=e,[u]=t,[d,e]=a;this.outputShape=[u,d,e,l];var[t,a]=[`${i-1}.0`,`${o-1}.0`],[u,l,i]=1<d?[`${(i-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${t} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${t}`],[d,o,e]=1<e?[`${(o-1)/(e-1)}`,"(x2-x1) * width_ratio",`x1*${a} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${a}`];this.userCode=`
      const float height_ratio = float(${u});
      const float width_ratio = float(${d});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${l};
        float width_scale = ${o};

        float in_y = ${i};
        if( in_y < 0.0 || in_y > ${t} ) {
          setOutput(float(${n}));
          return;
        }
        float in_x = ${e};
        if( in_x < 0.0 || in_x > ${a} ) {
          setOutput(float(${n}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${"bilinear"===r?1:0} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},m9=e=>{let{inputs:t,backend:a,attrs:r}=e,{image:n,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,d=new f9(n.shape,s.shape,o,l,u);return a.runWebGLProgram(d,[n,s,i],"float32")},g9={kernelName:co,backendName:"webgl",kernelFunc:m9},bw=class{constructor(e,t,a){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let r=(this.outputShape=e).length,n=t?"1.0":`getX(${yw(r,"coords")})`,s=e[e.length-1],i="",o="";o=t?(i=a?`end != ${s-1}`:"end != 0",a?"end + 1":"end - 1"):(i=a?`end + pow2 < ${s}`:"end >= pow2",a?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${rt(r)} coords = getOutputCoords();
        int end = ${vw(r,"coords")};
        float val = ${n};
        int pow2 = int(pow(2.0, index));
        if (${i}) {
          int idx = ${o};
          ${vw(r,"coords")} = idx;
          val *= getX(${yw(r,"coords")});
        }
        setOutput(val);
      }
    `}};function yw(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative product for rank ${e} is not yet supported`)}function vw(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative product for rank ${e} is not yet supported`)}function b9(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{axis:s,exclusive:i,reverse:o}=r,l=n.shape.length,u=S.getAxesPermutation([s],l),d=n;null!=u&&(d=qt({inputs:{x:n},backend:a,attrs:{perm:u}}));e=S.getInnerMostAxes(1,l)[0];if(e!==l-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${n.shape.length-1} but got axis=${s}`);let p=d.shape[e],h=kn({inputs:{x:d},backend:a});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){var c=new bw(d.shape,!1,o),f=[[e]],m=h;h=a.runWebGLProgram(c,[h],h.dtype,f),a.disposeIntermediateTensorInfo(m)}if(i&&(e=new bw(d.shape,i,o),g=h,h=a.runWebGLProgram(e,[h],h.dtype),a.disposeIntermediateTensorInfo(g)),null==u)return h;var g=S.getUndoAxesPermutation(u),g=qt({inputs:{x:h},backend:a,attrs:{perm:g}});return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(d),g}var y9={kernelName:hl,backendName:"webgl",kernelFunc:b9},xw=class{constructor(e,t,a){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let r=(this.outputShape=e).length,n=t?"0.0":`getX(${ww(r,"coords")})`,s=e[e.length-1],i="",o="";o=t?(i=a?`end != ${s-1}`:"end != 0",a?"end + 1":"end - 1"):(i=a?`end + pow2 < ${s}`:"end >= pow2",a?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${rt(r)} coords = getOutputCoords();
        int end = ${kw(r,"coords")};
        float val = ${n};
        int pow2 = int(pow(2.0, index));
        if (${i}) {
          int idx = ${o};
          ${kw(r,"coords")} = idx;
          val += getX(${ww(r,"coords")});
        }
        setOutput(val);
      }
    `}};function ww(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function kw(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function v9(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{axis:s,exclusive:i,reverse:o}=r,l=n.shape.length,u=S.getAxesPermutation([s],l),d=n;null!=u&&(d=qt({inputs:{x:n},backend:a,attrs:{perm:u}}));e=S.getInnerMostAxes(1,l)[0];if(e!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${n.shape.length-1} but got axis=${s}`);let p=d.shape[e],h=kn({inputs:{x:d},backend:a});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){var c=new xw(d.shape,!1,o),f=[[e]],m=h;h=a.runWebGLProgram(c,[h],h.dtype,f),a.disposeIntermediateTensorInfo(m)}if(i&&(e=new xw(d.shape,i,o),g=h,h=a.runWebGLProgram(e,[h],h.dtype),a.disposeIntermediateTensorInfo(g)),null==u)return h;var g=S.getUndoAxesPermutation(u),g=qt({inputs:{x:h},backend:a,attrs:{perm:g}});return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(d),g}var x9={kernelName:lo,backendName:"webgl",kernelFunc:v9};function w9(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===n.shape.length){var l=a.readSync(n.dataId),u=a.readSync(s.dataId),l=R1(l,u,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,l)}if(2!==n.shape.length)throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`);u=a.bufferSync(n),l=a.bufferSync(s),l=OK(u,l,i,o);return a.makeTensorInfo(l.shape,s.dtype,l.values)}var k9={kernelName:hg,backendName:"webgl",kernelFunc:w9},I9=class{constructor(e,t,a){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=a,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function S9(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{blockSize:s,dataFormat:i}=r,o=n.shape[0],l="NHWC"===i?n.shape[1]:n.shape[2],u="NHWC"===i?n.shape[2]:n.shape[3],d="NHWC"===i?n.shape[3]:n.shape[1],p=l*s,h=u*s,c=d/(s*s),f="NHWC"===i?[o,p,h,c]:[o,c,p,h],m=new I9(f,s,i);return a.runWebGLProgram(m,[n],n.dtype)}var C9={kernelName:po,backendName:"webgl",kernelFunc:S9},e2=class{constructor(e,t=!1,a=null,r=!1,n=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Sn(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";a&&(l=r?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:n?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:`
          float activation(float x) {
            ${a}
          }
        `,u="result = activation(result);");a=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),n&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${a}
        ${u}
        setOutput(result);
      }
    `}},t2=class{constructor(e,t=!1,a=null,r=!1,n=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Sn(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,p=d,h=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<d;e++)h+=`
          vec4 xTexelC${2*e};
          int xTexelC${2*e}Ready;
          vec4 xTexelC${2*e+1};
          int xTexelC${2*e+1}Ready;
          vec4 xC${e};`;h+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let e=0;e<d;e++)h+=`
          xTexelC${2*e} = vec4(0.0);
          xTexelC${2*e}Ready = 0;
          xTexelC${2*e+1} = vec4(0.0);
          xTexelC${2*e+1}Ready = 0;
          xC${e} = vec4(0.0);`;h+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let e=0;e<(p+1)/2;e++){var c,f=2*e;h+=`
          xC = xCCorner + ${f*l};
          `,1===o?f<d&&(i%2==1?(h+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${f}Ready == 0) {
                  xTexelC${f} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${f}.zw = vec2(0.0);
                  }
                  xTexelC${f}Ready = 1;
                }
              `,h+=1===l&&0<f?`
                xC${f} = vec4(xTexelC${f-2}.zw, xTexelC${f}.xy);
                `:`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${f} = vec4(previous.zw, xTexelC${f}.xy);
                  } else {
                    xC${f} = vec4(0.0, 0.0, xTexelC${f}.xy);
                  }
                  `):h+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${f}Ready == 0) {
                  xTexelC${f} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${f}.zw = vec2(0.0);
                  }
                  xTexelC${f}Ready = 1;
                }

                xC${f} = xTexelC${f};
                `,1+f<d)&&(c=i%2==0?w.nearestLargerEven(l):l,l%2==0&&i%2==1||l%2!=0&&i%2!=1?(h+=`
                  xCOffset = xC + imod(pads[1], 2) + ${c};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${1+f}Ready == 0) {
                    xTexelC${1+f} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${1+f}.zw = vec2(0.0);
                    }
                    xTexelC${1+f}Ready = 1;
                  }
                  `,1<l&&(h+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${f}Ready == 0) {
                      xTexelC${f} = getX(batch, xR, xCOffset, d1);
                      xTexelC${f}Ready = 1;
                    }
                    `),h+=`
                  xC${1+f} = vec4(xTexelC${f}.zw, xTexelC${1+f}.xy);
                  `):h+=1===c?`
                    xC${1+f} = xTexelC${f};
                    `:`
                    xCOffset = xC + ${c};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${1+f}Ready == 0) {
                      xTexelC${1+f} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${1+f}.zw = vec2(0.0);
                      }
                      xTexelC${1+f}Ready = 1;
                    }

                    xC${1+f} = xTexelC${1+f};
                    `):f<d&&(i%2==1?(h+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${f}Ready == 0) {
                  xTexelC${f} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${f}.zw = vec2(0.0);
                  }
                  xTexelC${f}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${1+f}Ready == 0) {
                  xTexelC${1+f} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${1+f}.zw = vec2(0.0);
                  }
                  xTexelC${1+f}Ready = 1;
                }

                xC${f} = vec4(xTexelC${f}.zw, xTexelC${1+f}.zw);
              `,1+f<d&&(h+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${1+f} = vec4(xTexelC${1+f}.xy, final.xy);
                `)):(h+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${f}Ready == 0) {
                  xTexelC${f} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${f}.zw = vec2(0.0);
                  }
                  xTexelC${f}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${1+f}Ready == 0) {
                  xTexelC${1+f} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${1+f}.zw = vec2(0.);
                  }
                  xTexelC${1+f}Ready = 1;
                }

                xC${f} = vec4(
                  xTexelC${f}.xy, xTexelC${1+f}.xy);
              `,1+f<d&&(h+=`
                  xC${1+f} = vec4(xTexelC${f}.zw, xTexelC${1+f}.zw);
                `))),f<d&&(h+=`
            wTexel = getW(r, ${f}, d1, q);
            dotProd += xC${f} * vec4(wTexel.xz, wTexel.xz);
          `,1+f<d&&(h+=`
              wTexel = getW(r, ${1+f}, d1, q);
              dotProd += xC${1+f} * vec4(wTexel.xz, wTexel.xz);
            `))}h+=`
    }
  `,h+=`
      }
    `;let m="",g="";a&&(m=r?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:n?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:`vec4 activation(vec4 x) {
          ${a}
        }`,g="result = activation(result);");a=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),n&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${m}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${h}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${a}
        ${g}
        setOutput(result);
      }
    `}};function N9(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,d=l;null==d&&(d=[1,1]),w.assert(S.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let p=S.computeConv2DInfo(n.shape,s.shape,i,d,o,u,!0),h;h=new(X().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?t2:e2)(p);e=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return a.runWebGLProgram(h,[n,s],"float32",e)}var T9={kernelName:Ra,backendName:"webgl",kernelFunc:N9},$9=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var t=e.strideHeight,a=e.strideWidth,r=e.padInfo.top,n=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${a} - ${n};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},_9=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var t=e.filterHeight,a=e.filterWidth,r=e.strideHeight,n=e.strideWidth,s=t-1-e.padInfo.top,i=a-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${a} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function A9(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=r,p=S.computeConv2DInfo(n.shape,d,i,o,l,u,!0),h=new $9(p);return a.runWebGLProgram(h,[n,s],"float32")}var E9={kernelName:fg,backendName:"webgl",kernelFunc:A9};function R9(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=r,p=S.computeConv2DInfo(d,s.shape,i,o,l,u,!0),h=new _9(p);return a.runWebGLProgram(h,[n,s],"float32")}var D9={kernelName:mg,backendName:"webgl",kernelFunc:R9},F9=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function O9(e){let{inputs:t,backend:a}=e,r=t["x"],n=[...r.shape,...r.shape],s=w.sizeFromShape(r.shape),i=he({inputs:{x:r},backend:a,attrs:{shape:[s]}}),o=new F9(s),l=a.runWebGLProgram(o,[i],i.dtype),u=he({inputs:{x:l},backend:a,attrs:{shape:n}});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(l),u}var P9={kernelName:gg,backendName:"webgl",kernelFunc:O9},z9=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;var{inHeight:t,inWidth:a,padInfo:r,strideHeight:n,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:e,left:r}=r;this.userCode=`
      const ivec2 strides = ivec2(${n}, ${s});
      const ivec2 pads = ivec2(${e}, ${r});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${a}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function M9(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=S.computeDilation2DInfo(n.shape,s.shape,i,o,"NHWC",l),d,p=new z9(u);e=he({inputs:{x:d=a.runWebGLProgram(p,[n,s],"float32")},backend:a,attrs:{shape:u.outShape}});return a.disposeIntermediateTensorInfo(d),e}var L9={kernelName:Yd,backendName:"webgl",kernelFunc:M9};function B9(e){let{inputs:t,backend:n,attrs:a}=e,r=a["equation"],s=t,{allDims:i,summedDims:o,idDims:l}=S.decodeEinsumEquation(r,s.length);S.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=S.getEinsumComputePath(o,l),p=d.length,h=null,c=i.length,f=[];for(let e=0;e<p;++e){for(var m of d[e]){let{permutationIndices:e,expandDims:t}=S.getEinsumPermutation(c,l[m]),a;S.isIdentityPermutation(e)?a=s[m]:(a=qt({inputs:{x:s[m]},backend:n,attrs:{perm:e}}),f.push(a));let r=a.shape.slice();for(let e=0;e<t.length;++e)r.splice(t[e],0,1);w.arraysEqual(a.shape,r)||(a=he({inputs:{x:a},backend:n,attrs:{shape:r}}),f.push(a)),null===h?h=a:(h=kv({inputs:{a:a,b:h},backend:n}),f.push(h))}e<p-1&&(0<=u[e]&&(h=Yp({inputs:{x:h},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(h)),c--)}for(var g of f)g!==h&&n.disposeIntermediateTensorInfo(g);return h}var V9={kernelName:Qd,backendName:"webgl",kernelFunc:B9},W9="return (x >= 0.0) ? x : (exp(x) - 1.0);",U9=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,G9=Ke({opSnippet:W9,packedOpSnippet:U9}),H9={kernelName:Fa,backendName:"webgl",kernelFunc:G9},q9="return (b >= 1.0) ? a : a * (b + 1.0);",j9=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,K9=e=>{let{inputs:t,backend:a}=e,{dy:r,y:n}=t,s=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zl(j9,r.shape,n.shape):new ro(q9,r.shape,n.shape);return a.runWebGLProgram(s,[r,n],r.dtype)},X9={kernelName:bg,backendName:"webgl",kernelFunc:K9},Y9=`
  return vec4(equal(a, b));
`,Q9="return float(a == b);",Z9=jt({opSnippet:Q9,packedOpSnippet:Y9,dtype:"bool",cpuKernelImpl:MK}),J9={kernelName:ho,backendName:"webgl",kernelFunc:Z9},eQ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${S.ERF_P};
  float a1 = ${S.ERF_A1};
  float a2 = ${S.ERF_A2};
  float a3 = ${S.ERF_A3};
  float a4 = ${S.ERF_A4};
  float a5 = ${S.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,tQ=Ke({opSnippet:eQ}),nQ={kernelName:fl,backendName:"webgl",kernelFunc:tQ},sQ=ou+`
  return exp(x);
`,rQ=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,n2=Ke({opSnippet:sQ,packedOpSnippet:rQ,cpuKernelImpl:LK,dtype:"float32"}),aQ={kernelName:Oa,backendName:"webgl",kernelFunc:n2};function qm(e){let{inputs:t,attrs:a,backend:r}=e,n=a["dim"],s=t["input"],i=s.shape.length,o=s.shape.slice(),l=n;return n<0&&(w.assert(-(i+1)<=n,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+n+1),o.splice(l,0,1),he({inputs:{x:s},backend:r,attrs:{shape:o}})}var iQ={kernelName:fo,backendName:"webgl",kernelFunc:qm},Iw="return exp(x) - 1.0;",oQ=Ke({opSnippet:Iw,packedOpSnippet:Iw,cpuKernelImpl:BK}),uQ={kernelName:mo,backendName:"webgl",kernelFunc:oQ},Sw=class{constructor(e,t,a){this.variableNames=["real","imag"];var r=t[1];this.outputShape=t;let n=a?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=a?`${r}.0`:"1.0",i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`
      const float exponentMultiplier = ${n};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function s2(e,t,a){var r=a.texData.get(e.dataId),n=w.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=he({inputs:{x:e},backend:a,attrs:{shape:[n/s,s]}}),n=i.shape,s=new Sw("real",n,t),t=new Sw("imag",n,t),n=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:n},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:n}],s=a.runWebGLProgram(s,n,"float32"),t=a.runWebGLProgram(t,n,"float32"),n=Rr({inputs:{real:s,imag:t},backend:a});a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(t);e=he({inputs:{x:n},backend:a,attrs:{shape:e.shape}});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(n),e}function lQ(e){var{inputs:t,backend:e}=e,t=t["input"];return s2(t,!1,e)}var cQ={kernelName:yg,backendName:"webgl",kernelFunc:lQ},dQ=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function ec(e){let{backend:t,attrs:a}=e,{shape:r,value:n}=a,s=a["dtype"];if("string"===(s=s||w.inferDtype(n))){let e=w.getArrayFromDType(s,w.sizeFromShape(r));return e.fill(n),t.makeTensorInfo(r,s,e)}e=new dQ(r,n);return t.runWebGLProgram(e,[],s,[[n]])}var Li,pQ={kernelName:ml,backendName:"webgl",kernelFunc:ec},hQ=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];var t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},fQ={kernelName:go,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let a=e["image"],r=t,n=new hQ(a.shape);return r.runWebGLProgram(n,[a],a.dtype)}},Cw="return floor(x);",mQ=Ke({opSnippet:Cw,packedOpSnippet:Cw,cpuKernelImpl:VK}),gQ={kernelName:Pa,backendName:"webgl",kernelFunc:mQ},bQ=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,yQ=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,vQ=jt({opSnippet:bQ,packedOpSnippet:yQ,dtype:"int32"}),xQ={kernelName:za,backendName:"webgl",kernelFunc:vQ},wQ=class{constructor(e){this.variableNames=["A"];var t=fn(),[a,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${a}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},kQ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var t=fn(),[a,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${a}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},IQ={kernelName:fd,backendName:"webgl",kernelFunc:SQ};function SQ(e){let{inputs:t,backend:a,attrs:r}=e,n=t["pixels"],s=r["numChannels"],i="undefined"!=typeof HTMLVideoElement&&n instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&n instanceof HTMLImageElement,[l,u]=i?[n.videoWidth,n.videoHeight]:[n.width,n.height],d=[u,l],p=[u,l,s];(o||i)&&((Li=null==Li?document.createElement("canvas").getContext("2d"):Li).canvas.width=l,Li.canvas.height=u,Li.drawImage(n,0,0,l,u),n=Li.canvas);var h=a.makeTensorInfo(d,"int32");a.texData.get(h.dataId).usage=2,a.gpgpu.uploadPixelDataToTexture(a.getTexture(h.dataId),n);e=new(X().getBool("WEBGL_PACK")?kQ:wQ)(p),e=a.runWebGLProgram(e,[h],"int32");return a.disposeData(h.dataId),e}function CQ(e){let{inputs:t,backend:i,attrs:a}=e,{x:o,filter:l,bias:u,preluActivationWeights:d}=t,{strides:r,pad:n,dataFormat:s,dilations:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=a,m=S.convertConv2DDataFormat(s),g=S.computeConv2DInfo(o.shape,l.shape,r,p,n,h,!1,m),b,y=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(X().getBool("WEBGL_CONV_IM2COL")&&1===o.shape[0])b=J1({x:o,filter:l,convInfo:g,backend:i,bias:u,activation:c,preluActivationWeights:d,leakyreluAlpha:f});else{let e=null!=u,t=null!=d,a="leakyrelu"===c,r=c?Kp(c,!1):null,n=new Q1(g,e,r,t,a),s=[o,l];u&&s.push(u),d&&s.push(d),a&&(v=i.makeTensorInfo([],"float32",w.createScalarValue(f,"float32")),s.push(v),y.push(v)),b=i.runWebGLProgram(n,s,"float32")}else b=Z1({x:o,filter:l,convInfo:g,backend:i,bias:u,activation:c,preluActivationWeights:d,leakyreluAlpha:f});var v=he({inputs:{x:b},backend:i,attrs:{shape:g.outShape}});return y.push(b),y.forEach(e=>i.disposeIntermediateTensorInfo(e)),v}var NQ={kernelName:aa,backendName:"webgl",kernelFunc:CQ};function TQ(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:c}=r,f=[],m=d;null==m&&(m=[1,1]),w.assert(S.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g=S.computeConv2DInfo(n.shape,s.shape,l,m,u,p,!0),b=X().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,y=h?Kp(h,b):null,v=[n,s],x=null!=i,k=null!=o,I="leakyrelu"===h;x&&v.push(i),k&&v.push(o),I&&(N=a.makeTensorInfo([],"float32",w.createScalarValue(c,"float32")),v.push(N),f.push(N));let C;C=new(b?t2:e2)(g,x,y,k,I);var N=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=a.runWebGLProgram(C,v,"float32",N);return f.forEach(e=>a.disposeIntermediateTensorInfo(e)),N}var $Q={kernelName:ia,backendName:"webgl",kernelFunc:TQ},_Q=class{constructor(e,t,a){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=a;e=rt(t.length),t=rt(a.length),a=1<this.sliceDim?"strides[j]":"strides";this.userCode=`
        ${e} strides = ${e}(${this.strides});
         void main() {
          ${t} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function AQ(e){let{inputs:t,backend:a}=e,{params:r,indices:n}=t,s=n.shape,i=s[s.length-1],o=w.sizeFromShape(r.shape),[l,u,d,p]=S.prepareAndValidate(r,n),h=he({inputs:{x:n},backend:a,attrs:{shape:[u,i]}}),c=he({inputs:{x:r},backend:a,attrs:{shape:[w.sizeFromShape(r.shape)/d,d]}});if(a.shouldExecuteOnCPU([r,n])||"string"===r.dtype){var f=a.readSync(n.dataId),m=a.bufferSync(r),f=WK(f,m,r.dtype,u,i,d,p,r.shape,o);return a.makeTensorInfo(l,r.dtype,f.values)}m=new _Q(i,p,[u,d]),f=a.runWebGLProgram(m,[c,h],c.dtype),m=he({inputs:{x:f},backend:a,attrs:{shape:l}});return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(f),m}var EQ={kernelName:yo,backendName:"webgl",kernelFunc:AQ},RQ=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;var a=rt(this.rank),t=DQ(e,2);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${t}));
      }
    `}};function DQ(t,e){let a=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let e=0;e<t.length;e++)2===e?r.push("index"):r.push(`${a[e]}`);return r.join()}function r2(e){let{inputs:t,backend:n,attrs:a}=e,{x:s,indices:i}=t,{axis:r,batchDims:o}=a,l=w.parseAxisParam(r,s.shape)[0];if(X().get("DEBUG")){let a=n.readSync(i.dataId),r=s.shape[l];for(let t=0;t<a.length;++t){let e=a[t];w.assert(e<=r-1&&0<=e,()=>`GatherV2: the index value ${e} is not in [0, ${r-1}]`)}}let u=S.segment_util.collectGatherOpShapeInfo(s,i,l,o),d=w.sizeFromShape(i.shape),p=[],h=he({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=he({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});p.push(h),p.push(c);var f=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){var m=n.bufferSync(c),e=n.bufferSync(h),m=UK(e,m,f);return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(u.outputShape,m.dtype,m.values)}f=new RQ(h.shape,f),f=n.runWebGLProgram(f,[h,c],h.dtype);p.push(f);f=he({inputs:{x:f},backend:n,attrs:{shape:u.outputShape}});return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}var FQ={kernelName:bo,backendName:"webgl",kernelFunc:r2},OQ="return float(a > b);",PQ=`
  return vec4(greaterThan(a, b));
`,zQ=jt({opSnippet:OQ,packedOpSnippet:PQ,cpuKernelImpl:GK,dtype:"bool"}),MQ={kernelName:vo,backendName:"webgl",kernelFunc:zQ},LQ="return float(a >= b);",BQ=`
  return vec4(greaterThanEqual(a, b));
`,VQ=jt({opSnippet:LQ,packedOpSnippet:BQ,dtype:"bool",cpuKernelImpl:HK}),WQ={kernelName:La,backendName:"webgl",kernelFunc:VQ};function UQ(e){var{inputs:t,backend:e}=e,t=t["input"];return s2(t,!0,e)}var GQ={kernelName:vg,backendName:"webgl",kernelFunc:UQ},HQ="return float(!isnan(x) && !isinf(x));",qQ=Ke({opSnippet:HQ,dtype:"bool"}),jQ={kernelName:gl,backendName:"webgl",kernelFunc:qQ},KQ="return float(isinf(x));",XQ=Ke({opSnippet:KQ,dtype:"bool"}),YQ={kernelName:bl,backendName:"webgl",kernelFunc:XQ},QQ="return float(isnan(x));",ZQ=Ke({opSnippet:QQ,dtype:"bool"}),JQ={kernelName:yl,backendName:"webgl",kernelFunc:ZQ},eZ="return float(a < b);",tZ=`
  return vec4(lessThan(a, b));
`,nZ=jt({opSnippet:eZ,packedOpSnippet:tZ,cpuKernelImpl:qK,dtype:"bool"}),sZ={kernelName:xo,backendName:"webgl",kernelFunc:nZ},rZ="return float(a <= b);",aZ=`
  return vec4(lessThanEqual(a, b));
`,iZ=jt({opSnippet:rZ,packedOpSnippet:aZ,cpuKernelImpl:jK,dtype:"bool"}),oZ={kernelName:wo,backendName:"webgl",kernelFunc:iZ};function uZ(e){let{backend:t,attrs:a}=e,{start:r,stop:n,num:s}=a,i=KK(r,n,s);return t.makeTensorInfo([i.length],"float32",i)}var lZ={kernelName:xg,backendName:"webgl",kernelFunc:uZ},cZ=ou+`
  return x < 0.0 ? 0./0. : log(x);
`,dZ=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,pZ=Ke({opSnippet:cZ,packedOpSnippet:dZ,cpuKernelImpl:XK}),hZ={kernelName:Wa,backendName:"webgl",kernelFunc:pZ},fZ=ou+`
  return log(1.0 + x);
`,mZ=Ke({opSnippet:fZ}),gZ={kernelName:vl,backendName:"webgl",kernelFunc:mZ},bZ="return float(a >= 1.0 && b >= 1.0);",yZ=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,vZ=jt({opSnippet:bZ,packedOpSnippet:yZ,dtype:"bool"}),xZ={kernelName:ko,backendName:"webgl",kernelFunc:vZ},wZ="return float(!(x >= 1.0));",kZ=Ke({opSnippet:wZ}),IZ={kernelName:xl,backendName:"webgl",kernelFunc:kZ},SZ="return float(a >= 1.0 || b >= 1.0);",CZ=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,NZ=jt({opSnippet:SZ,packedOpSnippet:CZ,dtype:"bool"}),TZ={kernelName:Jd,backendName:"webgl",kernelFunc:NZ},$Z=class{constructor(e,t,a,r,n){this.variableNames=["x"],this.outputShape=[];var s=t,t=e[3]-1;this.outputShape=e;let i,o=`float(${a}) + float(${r}) * sum`;i=.5===n?`inversesqrt(${o})`:1===n?`1.0/(${o})`:`exp(log(${o}) * float(-${n}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${t}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}},_Z=class{constructor(e,t,a,r,n){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;var s=t,t=e[3]-1;this.outputShape=e;let i,o=`float(${a}) + float(${r}) * sum`;i=.5===n?`inversesqrt(${o})`:1===n?`1.0/(${o})`:`exp(log(${o}) * float(-${n}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${t}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}},AZ=e=>{let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=new(X().getBool("WEBGL_PACK_NORMALIZATION")?_Z:$Z)(n.shape,s,i,o,l);return a.runWebGLProgram(u,[n],n.dtype)},EZ={kernelName:ep,backendName:"webgl",kernelFunc:AZ},RZ=class{constructor(e,t,a,r,n){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=a,this.alpha=r,this.beta=n,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${a});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${n})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${n});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},DZ=e=>{let{inputs:t,backend:a,attrs:r}=e,{x:n,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=r,p=new RZ(n.shape,o,l,u,d);return a.runWebGLProgram(p,[n,s,i],n.dtype)},FZ={kernelName:wg,backendName:"webgl",kernelFunc:DZ};function OZ(e,t,a,r){t=w.sizeFromShape(t),t=he({inputs:{x:e},attrs:{shape:[w.sizeFromShape(e.shape)/t,t]},backend:r}),e=xi(t,e.dtype,"max",r),a=he({inputs:{x:e},attrs:{shape:a},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(e),a}function a2(e){let{inputs:t,backend:r,attrs:a}=e,n=t["x"],{reductionIndices:s,keepDims:i}=a,o=n.shape.length,l=w.parseAxisParam(s,n.shape),u=l,d=S.getAxesPermutation(u,o),p=null!=d,h=r.shouldExecuteOnCPU([n]),c=n;if(p){if(h){let e=r.texData.get(c.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=n.shape[d[e]];var f=wv(e,n.shape,n.dtype,d,t);c=r.makeTensorInfo(t,n.dtype);let a=r.texData.get(c.dataId);a.values=f}else c=Xp(n,d,r);u=S.getInnerMostAxes(u.length,o)}S.assertAxesAreInnerMostDims("max",u,o);let[m,g]=S.computeOutAndReduceShapes(c.shape,u),b=m;i&&(b=S.expandShapeToKeepDim(m,l));let y;if(h){f=r.texData.get(c.dataId).values,f=YK(f,w.sizeFromShape(g),b,n.dtype);y=r.makeTensorInfo(b,n.dtype);let e=r.texData.get(y.dataId);e.values=f}else y=OZ(c,g,b,r);return p&&r.disposeIntermediateTensorInfo(c),y}var PZ={kernelName:Ua,backendName:"webgl",kernelFunc:a2},zZ=L1+`
  return max(a, b);
`,MZ=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+jp+`
  return result;
`,LZ=jt({opSnippet:zZ,packedOpSnippet:MZ,cpuKernelImpl:QK}),BZ={kernelName:Ga,backendName:"webgl",kernelFunc:LZ};function VZ(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"];nu(n,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;w.assert(S.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);e=S.computePool2DInfo(n.shape,s,i,1,o,l);if(1===e.filterWidth&&1===e.filterHeight&&w.arraysEqual(e.inShape,e.outShape))return kn({inputs:{x:n},backend:a});e=new tl(e,"max",!1);return a.runWebGLProgram(e,[n],n.dtype)}var WZ={kernelName:Ha,backendName:"webgl",kernelFunc:VZ};function UZ(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,d=S.computePool3DInfo(n.shape,s,i,[1,1,1],o,u,l),p=new Iv(d,"max",!1);return a.runWebGLProgram(p,[n],n.dtype)}var GZ={kernelName:tp,backendName:"webgl",kernelFunc:UZ},HZ=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;var t=e.strideHeight,a=e.strideWidth,r=e.dilationHeight,n=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=n-1-e.padInfo.top,o=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${n};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${n*s-1} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},qZ=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;var t=e.strideDepth,a=e.strideHeight,r=e.strideWidth,n=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,d=o-1-e.padInfo.front,p=l-1-e.padInfo.top,h=u-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${p}, ${h});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${n}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${o*l*u-1} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function jZ(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=r,p=S.computePool3DInfo(i.shape,o,l,[1,1,1],u,d),h=new Iv(p,"max",!0),c=a.runWebGLProgram(h,[i],i.dtype),f=new qZ(p),m=a.runWebGLProgram(f,[n,c],i.dtype);return a.disposeIntermediateTensorInfo(c),m}var KZ={kernelName:Ig,backendName:"webgl",kernelFunc:jZ};function XZ(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s,output:i}=t,o=s;nu([s,i],"maxPoolGrad");var{filterSize:l,strides:u,pad:d,dimRoundingMode:e}=r,d=S.computePool2DInfo(o.shape,l,u,1,d,e),e=new tl(d,"max",!0),e=a.runWebGLProgram(e,[o],o.dtype),d=new HZ(d),d=a.runWebGLProgram(d,[n,e],o.dtype);return a.disposeIntermediateTensorInfo(e),d}var YZ={kernelName:kg,backendName:"webgl",kernelFunc:XZ};function QZ(e,t,a,r){var n=new tl(a,"max",!1),s=r.runWebGLProgram(n,[e],"float32"),n=new tl(a,"max",!0,!0,t);return[s,r.runWebGLProgram(n,[e],"float32")]}var ZZ={kernelName:Sg,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let r=e["x"],{filterSize:n,strides:s,pad:i,includeBatchInIndex:o}=t,l=a;w.assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let u=[1,1];w.assert(S.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);var t=S.computePool2DInfo(r.shape,n,s,u,i),[a,t]=QZ(r,o,t,l);return[a,t]}};function JZ(e,t,a,r){t=w.sizeFromShape(t),e=he({inputs:{x:e},attrs:{shape:[w.sizeFromShape(e.shape)/t,t]},backend:r}),t=xi(e,"float32","mean",r),a=he({inputs:{x:t},attrs:{shape:a},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(t),a}var e7={kernelName:qa,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let r=e["x"],{keepDims:n,axis:s}=t,i=a,o=r.shape.length,l=w.parseAxisParam(s,r.shape),u=l,d=S.getAxesPermutation(u,o),p=null!=d,h=i.shouldExecuteOnCPU([r]),c=[],f=r;if(p){if(h){let e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[d[e]];var m=wv(e,r.shape,r.dtype,d,t);f=i.makeTensorInfo(t,r.dtype);let a=i.texData.get(f.dataId);a.values=m}else f=Xp(r,d,i);c.push(f),u=S.getInnerMostAxes(u.length,o)}S.assertAxesAreInnerMostDims("sum",u,o);let[g,b]=S.computeOutAndReduceShapes(f.shape,u),y=g;n&&(y=S.expandShapeToKeepDim(g,l));var v,m=JZ(f,b,y,i);for(v of c)i.disposeIntermediateTensorInfo(v);return m}};function t7(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{axis:s,keepDims:i}=r,o=n.shape.length,l=w.parseAxisParam(s,n.shape),u=l,d=S.getAxesPermutation(u,o),p=n;null!=d&&(p=qt({inputs:{x:n},backend:a,attrs:{perm:d}}),u=S.getInnerMostAxes(u.length,n.shape.length)),S.assertAxesAreInnerMostDims("min",u,o);let[h,c]=S.computeOutAndReduceShapes(p.shape,u),f=w.sizeFromShape(c),m=he({inputs:{x:p},backend:a,attrs:{shape:[-1,f]}}),g=xi(m,m.dtype,"min",a),b;return b=i?(e=S.expandShapeToKeepDim(h,l),he({inputs:{x:g},backend:a,attrs:{shape:e}})):he({inputs:{x:g},backend:a,attrs:{shape:h}}),a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),null!=d&&a.disposeIntermediateTensorInfo(p),b}var n7={kernelName:ja,backendName:"webgl",kernelFunc:t7},s7=L1+`
  return min(a, b);
`,r7=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+jp+`
  return result;
`,a7=jt({opSnippet:s7,packedOpSnippet:r7,cpuKernelImpl:ZK}),i7={kernelName:Ka,backendName:"webgl",kernelFunc:a7},o7=class{constructor(a,e,t){this.variableNames=["x"],this.outputShape=e.map((e,t)=>e[0]+a[t]+e[1]);var r=a.length,n=rt(r),s=e.map(e=>e[0]).join(","),i=e.map((e,t)=>e[0]+a[t]).join(","),e=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),t="reflect"===t?0:1;this.userCode=1!==r?`
      ${n} start = ${n}(${s});
      ${n} end = ${n}(${i});

      void main() {
        ${n} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${t};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${t};
          }
        }
        ${n} coords = outC - start;
        setOutput(getX(${e}));
      }
    `:`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${t};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${t};
          }
          setOutput(getX(outC - start));
        }
      `}},u7=class{constructor(a,e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,t)=>e[0]+a[t]+e[1]);let r=a.length,n=rt(r),s=e.map(e=>e[0]).join(","),i=e.map((e,t)=>e[0]+a[t]).join(","),o=ln("rc",r),l=ln("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,d=1===r?"source":`vec2(${l.slice(-2).join()})`,p="reflect"===t?0:1,h="";var c;h=1===r?`
        ${n} rc = outputLoc;
        ${c=`
        ${n} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${o[r-1]} += 1;
        if(${u}) {
          ${c}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
      `:`
        ${n} rc = outputLoc;
        ${c=`
        ${n} source = rc;
        ${n} lt = ${n}(lessThan(source, start));
        ${n} gte = ${n}(greaterThanEqual(source, end));
        ${n} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${o[r-1]} += 1;
        if(${u}) {
          ${c}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
        rc = outputLoc;
        ${o[r-2]} += 1;
        if(${o[r-2]} < ${this.outputShape[r-2]}) {
          ${c}
          result[2] = getChannel(getX(${l.join()}), ${d});
          ${o[r-1]} += 1;
          if(${u}) {
            ${c}
            result[3] = getChannel(getX(${l.join()}), ${d});
          }
        }
      `,this.userCode=`
      const ${n} start = ${n}(${s});
      const ${n} end = ${n}(${i});

      void main() {
        ${n} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},l7=({inputs:e,backend:t,attrs:a})=>{var r=e["x"],{paddings:e,mode:a}=a,a=new(X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?u7:o7)(r.shape,e,a);return t.runWebGLProgram(a,[r],r.dtype)},c7={kernelName:Xa,backendName:"webgl",kernelFunc:l7},d7=`if (b == 0.0) return NAN;
  return mod(a, b);`,p7=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+jp+`
  return result;
`,h7=jt({opSnippet:d7,packedOpSnippet:p7}),f7={kernelName:wl,backendName:"webgl",kernelFunc:h7},m7=class{constructor(e,t,a){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,a],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},g7=`
if (a == b) {
  return 1.0;
};
return a / b;`,b7=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,i2=jt({opSnippet:g7,packedOpSnippet:b7,checkOutOfBounds:!0}),y7={kernelName:Da,backendName:"webgl",kernelFunc:i2},Nw="return a - b;",o2=jt({opSnippet:Nw,packedOpSnippet:Nw,supportsComplex:!0,cpuKernelImpl:fX}),v7={kernelName:ci,backendName:"webgl",kernelFunc:o2};function u2(e){let{inputs:t,backend:a,attrs:r}=e,n=t["logits"],s=r["dim"],i=w.parseAxisParam([s],n.shape),o=a2({inputs:{x:n},backend:a,attrs:{reductionIndices:i,keepDims:!1}}),l=S.expandShapeToKeepDim(o.shape,i),u=he({inputs:{x:o},backend:a,attrs:{shape:l}}),d=o2({inputs:{a:n,b:u},backend:a}),p=n2({inputs:{x:d},backend:a}),h=Yp({inputs:{x:p},backend:a,attrs:{axis:i,keepDims:!1}}),c=he({inputs:{x:h},backend:a,attrs:{shape:l}}),f=i2({inputs:{a:p,b:c},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(c),f}var x7={kernelName:ui,backendName:"webgl",kernelFunc:u2};function w7(e){let{inputs:t,backend:a,attrs:r}=e,n=t["logits"],{numSamples:s,seed:i,normalized:o}=r,l=o?n:u2({inputs:{logits:n},backend:a,attrs:{dim:n.shape.length-1}}),u=l.shape[0],d=l.shape[1],p=new m7(u,d,s),h=[[i]],c=a.runWebGLProgram(p,[l],"int32",h);return o||a.disposeIntermediateTensorInfo(l),c}var k7={kernelName:Cg,backendName:"webgl",kernelFunc:w7},I7=ss+`
  return -x;
`,S7=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function C7(e){let{inputs:t,backend:a}=e,r=t["x"];if(a.shouldExecuteOnCPU([r])){var n=a.texData.get(r.dataId),[e,n]=eX(n.values,r.shape,r.dtype);return a.makeTensorInfo(n,r.dtype,e)}let s;return s=X().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Zr(r.shape,S7):new Hs(r.shape,I7),a.runWebGLProgram(s,[r],r.dtype)}var N7={kernelName:Io,backendName:"webgl",kernelFunc:C7},T7=xs.nonMaxSuppressionV3Impl;function $7(e){S.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=a.readSync(n.dataId),d=a.readSync(s.dataId),p=T7(u,d,i,o,l)["selectedIndices"];return a.makeTensorInfo([p.length],"int32",new Int32Array(p))}var _7={kernelName:Co,backendName:"webgl",kernelFunc:$7},A7=xs.nonMaxSuppressionV4Impl;function E7(e){S.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,d=a.readSync(n.dataId),p=a.readSync(s.dataId),{selectedIndices:h,validOutputs:c}=A7(d,p,i,o,l,u);return[a.makeTensorInfo([h.length],"int32",new Int32Array(h)),a.makeTensorInfo([],"int32",new Int32Array([c]))]}var R7={kernelName:kl,backendName:"webgl",kernelFunc:E7},D7=xs.nonMaxSuppressionV5Impl;function F7(e){S.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,d=a.readSync(n.dataId),p=a.readSync(s.dataId),h=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=D7(d,p,h,c,f,m);return[a.makeTensorInfo([g.length],"int32",new Int32Array(g)),a.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var O7={kernelName:No,backendName:"webgl",kernelFunc:F7},P7=class{constructor(e,t,a,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${a}),
                      float(index == coords.y)));
      }
    `}},z7=e=>{let{inputs:t,backend:a,attrs:r}=e,n=t["indices"],{depth:s,onValue:i,offValue:o}=r,l=w.sizeFromShape(n.shape),u=new P7(l,s,i,o),d=he({inputs:{x:n},backend:a,attrs:{shape:[l]}}),p=a.runWebGLProgram(u,[d],n.dtype);a.disposeIntermediateTensorInfo(d);e=[...n.shape,s],e=he({inputs:{x:p},backend:a,attrs:{shape:e}});return a.disposeIntermediateTensorInfo(p),e},M7={kernelName:$o,backendName:"webgl",kernelFunc:z7};function Md(e){let{inputs:t,backend:a}=e,r=t["x"];if("complex64"!==r.dtype)return ec({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:a});var n=Jl({inputs:{input:r},backend:a}),s=Md({inputs:{x:n},backend:a}),i=Qp({inputs:{input:r},backend:a}),o=Md({inputs:{x:i},backend:a}),e=Rr({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),e}var L7={kernelName:Ho,backendName:"webgl",kernelFunc:Md};function l2(e){let{inputs:t,backend:a}=e,r=t["x"];if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"!==r.dtype)return ec({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a});var n=Jl({inputs:{input:r},backend:a}),s=l2({inputs:{x:n},backend:a}),i=Qp({inputs:{input:r},backend:a}),o=Md({inputs:{x:i},backend:a}),e=Rr({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),e}var B7={kernelName:To,backendName:"webgl",kernelFunc:l2};function V7(e){let{inputs:t,backend:a,attrs:r}=e,n=r["axis"];if(1===t.length)return qm({inputs:{input:t[0]},backend:a,attrs:{dim:n}});let s=t[0].shape,i=t[0].dtype;t.forEach(e=>{w.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(e=>{e=qm({inputs:{input:e},backend:a,attrs:{dim:n}});return o.push(e),e}),u=Y1({inputs:l,backend:a,attrs:{axis:n}});return o.forEach(e=>a.disposeIntermediateTensorInfo(e)),u}var W7={kernelName:_o,backendName:"webgl",kernelFunc:V7},U7=class{constructor(a,e,t){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((e,t)=>e[0]+a[t]+e[1]);var r=a.length,n=rt(r),s=e.map(e=>e[0]).join(","),i=e.map((e,t)=>e[0]+a[t]).join(","),e=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`
      ${n} start = ${n}(${s});
      ${n} end = ${n}(${i});

      void main() {
        ${n} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${n} coords = outC - start;
          setOutput(getX(${e}));
        }
      }
    `:`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `}},G7=class{constructor(a,e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((e,t)=>e[0]+a[t]+e[1]);let r=a.length,n=rt(r),s=e.map(e=>e[0]).join(","),i=e.map((e,t)=>e[0]+a[t]).join(","),o=ln("rc",r),l=ln("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,d=1===r?"source":`vec2(${l.slice(-2).join()})`,p=[`${n} rc = outputLoc;`,`${o[r-1]} += 1;
       if(${u}) {
      `,1===r?"":`}
       rc = outputLoc;
       ${o[r-2]} += 1;
       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;
         if(${u}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let e=0,t=1===r?2:4;e<t;e++)c+=`
        ${p[e]}
        if (${h}) {
          result[${e}] = float(value);
        } else {
          ${n} source = rc - start;
          result[${e}] = getChannel(getX(${l.join()}), ${d});
        }
      `;c+=1===r?"} ":"}}",this.userCode=`
      const ${n} start = ${n}(${s});
      const ${n} end = ${n}(${i});

      void main() {
        ${n} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${c}
        setOutput(result);
      }
    `}},c2=e=>{let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{paddings:s,constantValue:i}=r;if(0===w.sizeFromShape(n.shape)){var o=s.map((e,t)=>e[0]+n.shape[t]+e[1]);return ec({backend:a,attrs:{shape:o,value:i,dtype:n.dtype}})}o=new(X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?G7:U7)(n.shape,s,i);return a.runWebGLProgram(o,[n],n.dtype,[[i]])},H7={kernelName:Qa,backendName:"webgl",kernelFunc:c2},q7=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,j7=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+jp+`
  return result;
`,K7=jt({opSnippet:q7,packedOpSnippet:j7}),X7={kernelName:Za,backendName:"webgl",kernelFunc:K7};function Y7(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{axis:s,keepDims:i}=r,o=n.shape.length,l=[],u=w.parseAxisParam(s,n.shape),d=u,p=S.getAxesPermutation(d,o),h=n;null!=p&&(h=qt({inputs:{x:n},backend:a,attrs:{perm:p}}),d=S.getInnerMostAxes(d.length,o),l.push(h)),S.assertAxesAreInnerMostDims("prod",d,o);let c;var f,m,g;return a.shouldExecuteOnCPU([h])?(f=a.texData.get(h.dataId).values,{outVals:m,outShape:e,outDtype:f}=nX(h.shape,h.dtype,f,d),c=a.makeTensorInfo(e,f,m)):([f,m]=S.computeOutAndReduceShapes(h.shape,d),g=w.sizeFromShape(m),g=xi(m=he({inputs:{x:h},backend:a,attrs:{shape:[-1,g]}}),cp(n.dtype),"prod",a),c=he({inputs:{x:g},backend:a,attrs:{shape:f}}),l.push(m),l.push(g)),i&&(l.push(c),g=S.expandShapeToKeepDim(c.shape,u),c=he({inputs:{x:c},backend:a,attrs:{shape:g}})),l.forEach(e=>a.disposeIntermediateTensorInfo(e)),c}var Q7={kernelName:Ao,backendName:"webgl",kernelFunc:Y7},d2=e=>{let{backend:t,attrs:a}=e,{start:r,stop:n,step:s,dtype:i}=a,o=sX(r,n,s,i);return t.makeTensorInfo([o.length],i,o)},Z7={kernelName:Il,backendName:"webgl",kernelFunc:d2},J7="return 1.0 / x;",eJ=Ke({opSnippet:J7}),tJ={kernelName:Sl,backendName:"webgl",kernelFunc:eJ},nJ=ss+`
  return (x < 0.0) ? 0.0 : x;
`,sJ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,rJ=Ke({opSnippet:nJ,packedOpSnippet:sJ}),aJ={kernelName:ei,backendName:"webgl",kernelFunc:rJ},iJ=ss+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,oJ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,uJ=Ke({opSnippet:iJ,packedOpSnippet:oJ}),lJ={kernelName:ni,backendName:"webgl",kernelFunc:uJ},cJ=class{constructor(e,t,a,r,n){this.variableNames=["A"],this.outputShape=[];var[s,i,o,e]=e;this.outputShape=[s,t,a,e];let l=[r&&1<t?i-1:i,r&&1<a?o-1:o],u=[r&&1<t?t-1:t,r&&1<a?a-1:a],d;d=n?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/u[0]},
          ${l[1]/u[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},dJ=class{constructor(e,t,a,r,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];var[s,i,o,e]=e;this.outputShape=[s,t,a,e];let l=[r&&1<t?i-1:i,r&&1<a?o-1:o],u=[r&&1<t?t-1:t,r&&1<a?a-1:a],d;d=n?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/u[0]},
          ${l[1]/u[1]},
          ${l[1]/u[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${e-1};
        bool hasNextRow = coords.z < ${a-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function pJ(e){let{inputs:t,backend:a,attrs:r}=e,n=t["images"],{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=new(X().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?dJ:cJ)(n.shape,l,u,s,i);return a.runWebGLProgram(d,[n],"float32")}var hJ={kernelName:ti,backendName:"webgl",kernelFunc:pJ},fJ=class{constructor(e,t,a){this.variableNames=["dy"],this.outputShape=[];var[,r,n]=this.outputShape=t,[,s,i]=e,o=[a&&1<s?r-1:r,a&&1<i?n-1:n],l=[a&&1<s?s-1:s,a&&1<i?i-1:i],u=o[0]/l[0],t=o[1]/l[1],e=1/u,a=1/t,o=2*Math.ceil(e)+2,l=2*Math.ceil(a)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${t});

        const float invHeightScale = float(${e});
        const float invWidthScale = float(${a});

        const int winHeight = int(${o});
        const int winWidth = int(${l});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${n-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function mJ(e){let{inputs:t,backend:a,attrs:r}=e,{images:n,dy:s}=t,i=r["alignCorners"],o=new fJ(s.shape,n.shape,i);return a.runWebGLProgram(o,[s],s.dtype)}var gJ={kernelName:Tg,backendName:"webgl",kernelFunc:mJ},bJ=class{constructor(e,t,a,r,n){this.variableNames=["A"],this.outputShape=[];var[s,i,o,e]=e;this.outputShape=[s,t,a,e];let l=[r&&1<t?i-1:i,r&&1<a?o-1:o],u=[r&&1<t?t-1:t,r&&1<a?a-1:a],d=r?"0.5":"0.0",p;p=n?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/u[0]},
          ${l[1]/u[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},yJ=class{constructor(e,t,a,r,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];var[s,i,o,e]=e;this.outputShape=[s,t,a,e];let l=[r&&1<t?i-1:i,r&&1<a?o-1:o],u=[r&&1<t?t-1:t,r&&1<a?a-1:a],d=r?"0.5":"0.0",p;p=n?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/u[0]},
          ${l[1]/u[1]},
          ${l[1]/u[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${e-1};
        bool hasNextRow = coords.z < ${a-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function vJ(e){let{inputs:t,backend:a,attrs:r}=e,n=t["images"],{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=new(X().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?yJ:bJ)(n.shape,l,u,s,i);return a.runWebGLProgram(d,[n],n.dtype)}var xJ={kernelName:Cl,backendName:"webgl",kernelFunc:vJ},wJ=class{constructor(e,t,a){this.variableNames=["dy"],this.outputShape=[];var[,r,n]=this.outputShape=t,[,s,i]=e,o=[a&&1<s?r-1:r,a&&1<i?n-1:n],l=[a&&1<s?s-1:s,a&&1<i?i-1:i],u=o[0]/l[0],d=o[1]/l[1],p=1/u,h=1/d,t=2*Math.ceil(p)+2,e=2*Math.ceil(h)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${d});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${h});

        const int winHeight = int(${t});
        const int winWidth = int(${e});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${a} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${n}) - 1),
                ${a} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function kJ(e){let{inputs:t,backend:a,attrs:r}=e,{images:n,dy:s}=t,i=r["alignCorners"],o=new wJ(s.shape,n.shape,i);return a.runWebGLProgram(o,[s],s.dtype)}var IJ={kernelName:Ng,backendName:"webgl",kernelFunc:kJ},SJ=class{constructor(a,r){this.variableNames=["x"];var n=a.length;if(4<n)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=a,1!==n){let e=a.map((e,t)=>(e=>-1!==r.indexOf(e)&&1!==a[e]?`${a[e]} - coords[${e}] - 1`:`coords[${e}]`)(t)).join(","),t=rt(n);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        setOutput(getX(${e}));
      }
    `}else this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${a[0]} - coord - 1));
        }
      `}},CJ=class{constructor(n,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let e=n.length;if(4<e)throw new Error(`WebGL backend: Reverse of rank-${e} tensor is not yet supported`);this.outputShape=n;let t=ln("rc",e),a=`${t[e-1]} + 1 < ${this.outputShape[e-1]}`,r=`${t[e-2]} + 1 < ${this.outputShape[e-2]}`,i=rt(e);var o,l,u;function d(a){let e=n.map((e,t)=>function(e,t){return-1!==s.indexOf(e)&&1!==n[e]?`${n[e]} - ${t[e]} - 1`:`${t[e]}`}(t,a)),t=e.join(","),r=e.slice(-2).join(",");return`getChannel(getX(${t}), vec2(${r}))`}1===e?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${n[0]} - rc - 1),
            ${n[0]} - rc - 1);
          if(${a}){
              result.g = getChannel(getX(${n[0]} - (rc  + 1) - 1),
                ${n[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${d(t.slice())};
          if(${a}){
            result.g = ${u=t.slice(),u[e-1]="("+u[e-1]+" + 1)",d(u)};
          }
          if(${r}) {
            result.b = ${l=t.slice(),l[e-2]="("+l[e-2]+" + 1)",d(l)};
            if(${a}) {
              result.a = ${o=t.slice(),o[e-1]="("+o[e-1]+" + 1)",o[e-2]="("+o[e-2]+" + 1)",d(o)};
            }
          }
          setOutput(result);
        }
    `}};function NJ(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],s=r["dims"],i=n.shape.length,o=w.parseAxisParam(s,n.shape);if(0===i)return kn({inputs:{x:n},backend:a});e=new(X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?CJ:SJ)(n.shape,o);return a.runWebGLProgram(e,[n],n.dtype)}var TJ={kernelName:Ro,backendName:"webgl",kernelFunc:NJ},$J=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];var a=e[1],r=e[2];this.outputShape=e;let n="";n="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${n}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${a}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},_J={kernelName:qo,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let r=e["image"],{radians:n,fillValue:s,center:i}=t,o=a,l=new $J(r.shape,s),[u,d]=S.getImageCenter(i,r.shape[1],r.shape[2]),p=[[u,d,Math.sin(n),Math.cos(n)]];return o.runWebGLProgram(l,[r],r.dtype,p)}},AJ=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,EJ=Ke({opSnippet:AJ}),RJ={kernelName:Do,backendName:"webgl",kernelFunc:EJ},DJ="return inversesqrt(x);",FJ=Ke({opSnippet:DJ,cpuKernelImpl:rX}),OJ={kernelName:si,backendName:"webgl",kernelFunc:FJ},p2=class{constructor(e,t,a,r,n,s,i=0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=rt(n.length),l=rt(s.length),u="";1===a?u="i":2===a&&(u="i, j");let d=`getIndices(${u})`,p="";1===r?p="i":2===r&&(p="i, coords[1]");r=`getUpdates(${p})`;this.userCode=`
        ${o} strides = ${o}(${n});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${1<t?"strides[j]":"strides"};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${r};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function PJ(e){let{inputs:t,backend:a,attrs:r}=e,{indices:n,updates:s}=t,i=r["shape"],{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=S.calculateShapes(s,n,i),h=[p/u,u];if(0===p)return a.makeTensorInfo(i,n.dtype);var c=he({inputs:{x:n},backend:a,attrs:{shape:[l,o]}}),f=he({inputs:{x:s},backend:a,attrs:{shape:[l,u]}}),m=a.makeTensorInfo([],"float32",new Float32Array([0])),g=new p2(l,o,c.shape.length,f.shape.length,d,h),e=a.runWebGLProgram(g,[f,c,m],f.dtype),g=he({inputs:{x:e},backend:a,attrs:{shape:i}});return a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(m),g}var zJ={kernelName:Fo,backendName:"webgl",kernelFunc:PJ},MJ=class{constructor(n,s,e){this.variableNames=["c","a","b"],this.outputShape=s;let i,o;if(4<e)throw Error(`Where for rank ${e} is not yet supported`);if(1===e)o="resRC",i="resRC";else{let t=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],r=[];for(let e=0;e<s.length;e++)r.push(`${t[e]}`),e<n&&a.push(`${t[e]}`);i=a.join(),o=r.join()}e=rt(e);this.userCode=`
      void main() {
        ${e} resRC = getOutputCoords();
        float cVal = getC(${i});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}};function LJ(e){let{inputs:t,backend:a}=e,{condition:r,t:n,e:s}=t,i=new MJ(r.shape.length,n.shape,n.shape.length);return a.runWebGLProgram(i,[r,n,s],cn(n.dtype,s.dtype))}var BJ={kernelName:Oo,backendName:"webgl",kernelFunc:LJ},VJ=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${S.SELU_SCALEALPHA};
  float scale = ${S.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,WJ=Ke({opSnippet:VJ}),UJ={kernelName:Nl,backendName:"webgl",kernelFunc:WJ},GJ=ou+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,HJ=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,qJ=Ke({opSnippet:GJ,packedOpSnippet:HJ,cpuKernelImpl:aX}),jJ={kernelName:ai,backendName:"webgl",kernelFunc:qJ},KJ=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,XJ=Ke({opSnippet:KJ}),YJ={kernelName:Tl,backendName:"webgl",kernelFunc:XJ},QJ=ou+`
  return sin(x);
`,ZJ=Ke({opSnippet:QJ}),JJ={kernelName:ri,backendName:"webgl",kernelFunc:ZJ},eee=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,tee=Ke({opSnippet:eee}),nee={kernelName:zo,backendName:"webgl",kernelFunc:tee},see=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,ree=Ke({opSnippet:see}),aee={kernelName:$l,backendName:"webgl",kernelFunc:ree},iee=e=>{let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{blockShape:s,paddings:i}=r;w.assert(n.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((e,t)=>e*t),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<n.shape.length;++e)l.push([0,0]);let u=[],d=c2({inputs:{x:n},backend:a,attrs:{paddings:l,constantValue:0}}),p=S.getReshaped(d.shape,s,o,!1),h=S.getPermuted(p.length,s.length,!1),c=S.getReshapedPermuted(d.shape,s,o,!1),f=he({inputs:{x:d},backend:a,attrs:{shape:p}}),m=qt({inputs:{x:f},backend:a,attrs:{perm:h}}),g=he({inputs:{x:m},backend:a,attrs:{shape:c}});return u.push(d),u.push(f),u.push(m),u.forEach(e=>a.disposeIntermediateTensorInfo(e)),g},oee={kernelName:Mo,backendName:"webgl",kernelFunc:iee};function uee(e){let{inputs:t,backend:a}=e,{indices:r,values:n,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(1!==n.shape.length)throw new Error(`Values must be a vector, saw:
         ${n.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=a.readSync(r.dataId),l=a.readSync(n.dataId),u=a.readSync(s.dataId),d=a.readSync(i.dataId)[0],[p,h,c,f,m]=oX(o,r.shape,r.dtype,l,n.dtype,u,d);return[a.makeTensorInfo(h,r.dtype,p),a.makeTensorInfo([h[0]],n.dtype,c),a.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),a.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var lee={kernelName:sp,backendName:"webgl",kernelFunc:uee};function cee(e){let{inputs:t,backend:a}=e,{inputIndices:r,inputShape:n,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==n.shape.length)throw new Error(`Input shape should be a vector but received shape ${n.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);var i=Array.from(a.readSync(n.dataId)),o=a.readSync(r.dataId),e=Array.from(a.readSync(s.dataId)),[o,i,e]=uX(o,r.shape,r.dtype,i,e);return[a.makeTensorInfo(i,r.dtype,o),a.makeTensorInfo([e.length],s.dtype,new Int32Array(e))]}var dee={kernelName:_l,backendName:"webgl",kernelFunc:cee};function pee(e){let{inputs:t,backend:a}=e,{data:r,indices:n,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==n.shape.length)throw new Error(`Indices should be a vector but received shape
              ${n.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);var i=a.readSync(r.dataId),o=a.readSync(n.dataId),e=a.readSync(s.dataId),[o,e]=F1(i,r.shape,r.dtype,o,e,!0);return a.makeTensorInfo(e,r.dtype,o)}var hee={kernelName:rp,backendName:"webgl",kernelFunc:pee};function fee(e){let{inputs:t,backend:a}=e,{data:r,indices:n,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==n.shape.length)throw new Error(`Indices should be a vector but received shape
             ${n.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);var i=a.readSync(r.dataId),o=a.readSync(n.dataId),e=a.readSync(s.dataId),[o,e]=F1(i,r.shape,r.dtype,o,e);return a.makeTensorInfo(e,r.dtype,o)}var mee={kernelName:ap,backendName:"webgl",kernelFunc:fee};function gee(e){let{inputs:t,backend:a,attrs:r}=e,{sparseIndices:n,sparseValues:s,defaultValue:i}=t,o=r["outputShape"],{sliceRank:l,numUpdates:u,strides:d,outputSize:p}=S.calculateShapes(s,n,o),h=new p2(u,l,n.shape.length,s.shape.length,d,[p,1],!1),c=a.runWebGLProgram(h,[s,n,i],s.dtype),f=he({inputs:{x:c},backend:a,attrs:{shape:o}});return a.disposeIntermediateTensorInfo(c),f}var bee={kernelName:ip,backendName:"webgl",kernelFunc:gee};function yee(e){let{inputs:t,backend:r,attrs:a}=e,n=t["x"],{numOrSizeSplits:s,axis:i}=a,o=w.parseAxisParam(i,n.shape)[0],l=S.prepareSplitSize(n,s,o),u=n.shape.length,d=new Array(u).fill(0),p=n.shape.slice();return l.map(e=>{let t=[...p];t[o]=e;var a=uu({inputs:{x:n},backend:r,attrs:{begin:d,size:t}});return d[o]+=e,a})}var vee={kernelName:Lo,backendName:"webgl",kernelFunc:yee},Tw="return sqrt(x);",xee=Ke({opSnippet:Tw,packedOpSnippet:Tw,cpuKernelImpl:lX}),wee={kernelName:ii,backendName:"webgl",kernelFunc:xee},kee="return x * x;",Iee=Ke({opSnippet:kee}),See={kernelName:Al,backendName:"webgl",kernelFunc:Iee},$w="return (a - b) * (a - b);",Cee=jt({opSnippet:$w,packedOpSnippet:$w}),Nee={kernelName:li,backendName:"webgl",kernelFunc:Cee};function Tee({inputs:e,attrs:t,backend:a}){var e=e["x"],t=ss+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,t=new Hs(e.shape,t);return a.runWebGLProgram(t,[e],e.dtype)}var $ee={kernelName:hi,backendName:"webgl",kernelFunc:Tee},_ee=class{constructor(e,t,r){this.variableNames=["x"];let a=(this.outputShape=r).length,n=rt(r.length),s=rt(r.length),i="";if(1===a)i="coords * strides + begin";else{let a=0;i=r.map((e,t)=>(a++,1===r.length?`coords * strides[${t}] + begin[${t}]`:`coords[${a-1}] * strides[${t}] + begin[${t}]`)).join(",")}this.userCode=`
      ${n} begin = ${n}(${e});
      ${n} strides = ${n}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function Aee(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r,{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=wt.sliceInfo(n.shape,s,i,o,l,u,d,p,h),k;var I;m?k=he({inputs:{x:n},backend:a,attrs:{shape:f}}):g||b?(w.assert(1<=n.shape.length,()=>`Input must have rank at least 1, got: ${n.shape.length}`),I=wt.computeOutShape(y,v,x),I=uu({inputs:{x:n},backend:a,attrs:{begin:y,size:I}}),k=he({inputs:{x:I},backend:a,attrs:{shape:f}}),a.disposeIntermediateTensorInfo(I)):k=a.shouldExecuteOnCPU([n])?(I=a.readSync(n.dataId),I=De(n.shape,n.dtype,I),I=cX(c,I,x,y),a.makeTensorInfo(f,n.dtype,I.values)):(S=new _ee(y,x,c),a.runWebGLProgram(S,[n],n.dtype));var S=he({inputs:{x:k},backend:a,attrs:{shape:f}});return a.disposeIntermediateTensorInfo(k),S}var Eee={kernelName:Bo,backendName:"webgl",kernelFunc:Aee};function Ree(e){let{inputs:t,backend:a,attrs:r}=e,{separator:n,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:p}=t,h=a.readSync(d.dataId),c=a.readSync(p.dataId),[f,m]=dX(h,c,n,s,i,o,l,u);return[a.makeTensorInfo([f.length],"string",f),a.makeTensorInfo(p.shape,"int32",m)]}var Dee={kernelName:op,backendName:"webgl",kernelFunc:Ree};function Fee(e){let{inputs:t,backend:a,attrs:r}=e,n=r["skipEmpty"],{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);var o=a.readSync(s.dataId),l=a.readSync(i.dataId)[0],[u,e,o]=pX(o,l,n),l=e.length;return[a.makeTensorInfo([l,2],"int32",u),a.makeTensorInfo([l],"string",e),a.makeTensorInfo([2],"int32",new Int32Array(o))]}var Oee={kernelName:$g,backendName:"webgl",kernelFunc:Fee};function Pee(e){let{inputs:t,backend:a,attrs:r}=e,n=r["numBuckets"],s=t["input"];if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(n<=0)throw new Error("Number of buckets must be at least 1");e=a.readSync(s.dataId),e=hX(e,n);return a.makeTensorInfo(s.shape,"int32",e)}var zee={kernelName:_g,backendName:"webgl",kernelFunc:Pee},Mee="return tan(x);",Lee=Ke({opSnippet:Mee}),Bee={kernelName:Vo,backendName:"webgl",kernelFunc:Lee},Vee=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Wee=Ke({opSnippet:Vee}),Uee={kernelName:di,backendName:"webgl",kernelFunc:Wee},Gee=class{constructor(t,a){this.variableNames=["A"];let r=new Array(t.length);for(let e=0;e<r.length;e++)r[e]=t[e]*a[e];this.outputShape=r,this.rank=r.length;var e=rt(this.rank),n=Hee(t);this.userCode=`
      void main() {
        ${e} resRC = getOutputCoords();
        setOutput(getA(${n}));
      }
    `}};function Hee(t){var e=t.length;if(5<e)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;let a=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${a[e]}, ${t[e]})`);return r.join()}function h2(e){let{inputs:t,backend:n,attrs:a}=e,s=t["x"],i=a["reps"];if("string"===s.dtype||5<s.shape.length){let e=n.readSync(s.dataId),t="string"===s.dtype?e.map(e=>w.decodeString(e)):e,a=De(s.shape,s.dtype,t),r=mX(a,i);return n.makeTensorInfo(r.shape,r.dtype,r.values)}e=new Gee(s.shape,i);return n.runWebGLProgram(e,[s],s.dtype)}var qee={kernelName:Cr,backendName:"webgl",kernelFunc:h2},jee=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Kee=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Ur(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function _w(e){let t=1;for(;t<e;)t*=2;return t}function Xee(e){let{inputs:t,backend:n,attrs:a}=e,r=t["x"],{k:s,sorted:i}=a,o=X().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=X().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,d=u[u.length-1];if(n.shouldExecuteOnCPU([r])||d<o||l<s){var p=n.readSync(r.dataId),[h,p]=gX(p,u,r.dtype,s,i);return[n.makeTensorInfo(h.shape,h.dtype,h.values),n.makeTensorInfo(p.shape,p.dtype,p.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===d)return[r,ec({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let c=n.texData.get(r.dataId),f=null!==c&&c.isPacked,m=f?n.unpackTensor(r):r,g=w.sizeFromShape(u)/d,b=he({inputs:{x:m},attrs:{shape:[g,d]},backend:n});f&&Ur(n,m);let y=_w(s),v=_w(d),x=null,k=()=>null===x?[b,b]:[b,x],I=(e,t,a)=>{var r=k(),a=new jee(a),e=[[d],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],t=x;x=n.runWebGLProgram(a,r,"int32",e),Ur(n,t)};for(let t=1;t<y;t*=2){var S=2*t;for(let e=t;1<=e;e/=2)I(S,e,[g,v])}for(let e=v;e>y;e/=2){var C=k(),N=new Kee([g,e/2]),T=[[d],[null===x?1:0],[y]],$=x;x=n.runWebGLProgram(N,C,"int32",T),Ur(n,$);var $=y/2,_=2*$;for(let e=$;1<=e;e/=2)I(_,e,x.shape)}h=x;x=uu({inputs:{x:x},backend:n,attrs:{begin:0,size:[g,s]}}),Ur(n,h);p=r2({inputs:{x:b,indices:x},backend:n,attrs:{axis:1,batchDims:1}});Ur(n,b);let A=u.slice(0,-1);A.push(s),h=x,x=he({inputs:{x:x},attrs:{shape:A},backend:n}),Ur(n,h);h=p,p=he({inputs:{x:p},attrs:{shape:A},backend:n});return Ur(n,h),[p,x]}var Yee={kernelName:Wo,backendName:"webgl",kernelFunc:Xee},Qee=class{constructor(e,t,a,r,n,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i="nearest"===a?1:2,o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${n});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${n});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Zee(e){let{inputs:t,backend:a,attrs:r}=e,{image:n,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[d,p,h,c]=n.shape,[f,m]=null!=u?u:[p,h],g=[d,f,m,c],b=new Qee(p,h,i,o,l,g);return a.runWebGLProgram(b,[n,s],"float32")}var Jee={kernelName:Uo,backendName:"webgl",kernelFunc:Zee};function ete(e){let{inputs:t,attrs:a,backend:r}=e,n=a["axis"],s=t["x"];nu(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");var i=r.readSync(s.dataId),{outputValues:o,outputShape:e,indices:i}=bX(i,n,s.shape,s.dtype);return[r.makeTensorInfo(e,s.dtype,o),r.makeTensorInfo([i.length],"int32",i)]}var tte={kernelName:Ag,backendName:"webgl",kernelFunc:ete};function nte(e){let{inputs:t,backend:a,attrs:r}=e,n=t["value"],s=r["axis"];s<0&&(s+=n.shape.length);let i=n,o=i.shape.length,l=n.shape[s],u=new Array(o-1),d=0;for(let e=0;e<o;e++)e!==s&&(u[d++]=i.shape[e]);let p=[],h=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let e=0;e<f.length;e++){h[s]=e;var m=uu({inputs:{x:i},backend:a,attrs:{begin:h,size:c}}),g=he({inputs:{x:m},backend:a,attrs:{shape:u}});f[e]=g,p.push(m)}return p.forEach(e=>a.disposeIntermediateTensorInfo(e)),f}var ste={kernelName:Go,backendName:"webgl",kernelFunc:nte},rte=class{constructor(e,t){this.variableNames=["x","segmentIds"];var a=e.windowSize,r=e.batchSize,n=e.inSize,s=e.numSegments,e=s*Math.ceil(n/a);this.outputShape=[r,e];let i=4*Math.floor(a/4),o=a%4,l=`
        sumValue += dot(values, segFilter);
    `,u="";0<n%a&&(u=`
        if (inIdx < 0 || inIdx >= ${n}) {
          return initializationValue;
        }
      `);let d=0<n%a?`
        if (inIdx < 0 || inIdx >= ${n}) {
          return -1.0;
        }
      `:"";this.userCode=`
      const float initializationValue = 0.0;

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${d}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${a}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${1==o}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${l}
        } else if (${2==o}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${l}
        } else if (${3==o}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${l}
        }
        setOutput(sumValue);
      }
    `}};function ate(e){let{inputs:t,backend:l,attrs:a}=e,{x:r,segmentIds:n}=t,s=a["numSegments"],i=r.shape.length,u=[],o=0,d=S.getAxesPermutation([o],i),p=r;null!=d&&(p=qt({inputs:{x:r},backend:l,attrs:{perm:d}}),u.push(p),o=S.getInnerMostAxes(1,i)[0]);var h=S.segment_util.computeOutShape(p.shape,o,s),e=w.sizeFromShape([p.shape[o]]),e=he({inputs:{x:p},backend:l,attrs:{shape:[-1,e]}});u.push(e);let c=cp(r.dtype),f=(e,t,a,r,n)=>{var s=e.shape[0],i=e.shape[1],o=S.segment_util.segOpComputeOptimalWindowSize(i,n),s=new rte({windowSize:o,inSize:i,batchSize:s,numSegments:n},t),e=l.compileAndRun(s,[e,a],r);if(u.push(e),e.shape[1]===n)return e;a=d2({backend:l,attrs:{start:0,stop:n,step:1,dtype:"float32"}}),o=h2({inputs:{x:a},backend:l,attrs:{reps:[i/o]}});return u.push(a),u.push(o),f(e,t,o,r,n)},m=f(e,"unsortedSegmentSum",n,c,s),g=he({inputs:{x:m},backend:l,attrs:{shape:h}}),b=g;return null!=d&&(u.push(g),h=S.getUndoAxesPermutation(d),b=qt({inputs:{x:b},backend:l,attrs:{perm:h}})),u.forEach(e=>l.disposeIntermediateTensorInfo(e)),b}var ite={kernelName:up,backendName:"webgl",kernelFunc:ate},ote=[d8,h8,g8,v8,w8,S8,N8,$8,R8,F8,z8,B8,U8,j8,Y8,Z8,eY,rY,iY,uY,pY,vY,wY,IY,_Y,EY,OY,qX,MY,UY,jY,JY,t9,s9,a9,o9,c9,h9,g9,y9,x9,k9,C9,T9,E9,D9,P9,L9,V9,H9,X9,J9,nQ,aQ,iQ,uQ,cQ,pQ,fQ,gQ,xQ,IQ,NQ,$Q,EQ,FQ,MQ,WQ,HX,GQ,VY,jQ,YQ,JQ,KX,sZ,oZ,lZ,hZ,gZ,xZ,IZ,TZ,EZ,FZ,PZ,BZ,WZ,GZ,KZ,YZ,ZZ,e7,n7,i7,c7,f7,k7,JX,N7,_7,R7,O7,CY,M7,B7,W7,H7,X7,YX,Q7,Z7,NY,y7,tJ,aJ,lJ,t8,hJ,gJ,xJ,IJ,TJ,_J,RJ,OJ,zJ,BJ,UJ,jJ,YJ,JJ,nee,bY,x7,aee,oee,lee,dee,hee,mee,bee,vee,wee,See,Nee,$ee,Eee,Dee,Oee,zee,v7,u8,Bee,Uee,qee,Yee,Jee,l8,tte,ste,ite,L7];for(let e of ote)El(e);var zs=X();zs.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15),zs.registerFlag("WEBGPU_CPU_FORWARD",()=>!0),zs.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4),zs.registerFlag("WEBGPU_USE_NAIVE_CONV2D",()=>!1),zs.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1),zs.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1),zs.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1),zs.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3),zs.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1),zs.registerFlag("WEBGPU_USE_IMPORT",()=>!1);var ute="return a + b;",lte="return areal * breal - aimag * bimag;",cte="return areal * bimag + aimag * breal;",dte="return a / b;",pte="return a * b;",hte="return (a - b) * (a - b);",fte="return a - b;",mte="return f32(a == b);",gte="return vec4<f32>(a == b);",bte="return f32(a > b);",yte="return vec4<f32>(a > b);",vte="return f32(a >= b);",xte="return vec4<f32>(a >= b);",wte="return f32(a < b);",kte="return vec4<f32>(a < b);",Ite="return f32(a <= b);",Ste="return vec4<f32>(a <= b);",Cte="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",Nte=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Tte=`
  if (isnan(a)) { return a; }
  if (isnan(b)) { return b; }
  `,f2=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,$te=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,_te=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,Ate="return f32(a != b);",Ete="return vec4<f32>(a != b);",Rte=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,Dte=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${f2}
  return resultTemp;
  `,Fte="if (a < 0.0) { return b * a; }  return a;",Ote=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function Aw(e,t){var a=t?f2:Tte;return t?`
    var resultTemp = vec4<f32>(${e}(a, b));
    let isNaN = isnanVec4(a) | isnanVec4(b);
    `+a+`
    return resultTemp;
  `:a+`
    return ${e}(a, b);
  `}function tc(e,t){switch(e){case 0:return pte;case 1:return ute;case 2:return fte;case 3:return dte;case 4:return t?gte:mte;case 5:return t?yte:bte;case 6:return t?xte:vte;case 7:return t?kte:wte;case 8:return t?Ste:Ite;case 9:return t?Nte:Cte;case 10:return t?Ete:Ate;case 11:return hte;case 12:return t?_te:$te;case 14:return t?Ote:Fte;case 15:return Aw("max",t);case 16:return Aw("min",t);case 13:return t?Dte:Rte;case 17:return lte;case 18:return cte;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var Pte="return abs(a);",zte="return ceil(a);",Mte="return cos(a);",Lte=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Bte="return exp(a) - 1.0;",Vte="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Wte=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Ute="return exp(a);",Gte="return floor(a);",Hte="return a;",qte=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,jte="return f32(!(a >= 1.0));",Kte="return -a;",Xte="if (a < 0.0) { return uniforms.alpha * a; } return a;",Yte=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Qte="if(a < 0.0) { return 0.0; } return a;",Zte="return clamp(a, 0.0, 6.0);",Jte="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",ene=`
  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));
  let isNaN = isnanVec4(a);

  if (isNaN.r) {
    resFloat.r = a.r;
  }
  if (isNaN.g) {
    resFloat.g = a.g;
  }
  if (isNaN.b) {
    resFloat.b = a.b;
  }
  if (isNaN.a) {
    resFloat.a = a.a;
  }
  return resFloat;
`,tne="return 1.0/sqrt(a);",nne="return 1.0 / (1.0 + exp(-1.0 * a));",sne="return sin(a);",rne=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,ane="return sqrt(a);",ine="return a * a;",one=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,une="return f32(i32((a)));";function Hr(e,t){switch(e){case 0:return Pte;case 2:return Mte;case 3:return Lte;case 1:return zte;case 4:return t?Wte:Vte;case 5:return Ute;case 6:return Bte;case 7:return Gte;case 8:return Hte;case 9:return qte;case 10:return jte;case 11:return Kte;case 14:return t?Yte:Xte;case 12:return t?ene:Qte;case 13:return t?Jte:Zte;case 15:return tne;case 18:return nne;case 16:return sne;case 17:return rne;case 19:return ane;case 20:return ine;case 21:return one;case 22:return une;default:throw new Error(`BinaryType ${e} is not implemented!`)}}function Zs(e,t=!1){if(null===e)return null;if("linear"===e)return Hr(8);if("relu"===e)return Hr(12,t);if("elu"===e)return Hr(4,t);if("relu6"===e)return Hr(13,t);if("prelu"===e)return tc(14,t);if("sigmoid"===e)return Hr(18,t);if("leakyrelu"===e)return Hr(14,t);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}function lne(e,t){if(3<Math.max(...e))throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let a=e.length,r=e.map(e=>`${t}[${e}]`),n=new Array(a-1);n[a-2]=r[a-1];for(let e=a-3;0<=e;--e)n[e]=`(${n[e+1]} * ${r[e+1]})`;return n}function Wt(e){if(e<=1)return"i32";if(2===e)return"vec2<i32>";if(3===e)return"vec3<i32>";if(4===e)return"vec4<i32>";throw Error(`GPU for rank ${e} is not yet supported`)}function cd(e,t){return"float32"===e?t?"vec4<f32>":"f32":"int32"===e||"bool"===e?t?"vec4<i32>":"i32":e}function Sv(){return`
  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function Dr(){return`
  ${Sv()}
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function Ue(){return`
    ${Dr()}
      let index = getGlobalIndex();
`}function cne(a,t,r,e=!1){let n=[];if(n.push(`
    let workGroupSizeX = ${r.workGroupSize[0]}u;
    let workGroupSizeY = ${r.workGroupSize[1]}u;
    let workGroupSizeZ = ${r.workGroupSize[2]}u;

    var<private> localId: vec3<u32>;
    var<private> globalId: vec3<u32>;
    var<private> numWorkgroups: vec3<u32>;

    // Only used when the y/z dimension of workgroup size is 1.
    fn getGlobalIndex() -> i32 {
      if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {
        return i32(globalId.x);
      }

      let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
          localId.y * workGroupSizeX + localId.x;
      let workGroupID = (globalId - localId)/vec3<u32>(
          workGroupSizeX, workGroupSizeY, workGroupSizeZ);

      return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
        workGroupID.y * numWorkgroups.x + workGroupID.x) *
        (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
        localInvocationIndex);
    }
  `),!0===e)return n.push(`
      struct Uniform {
        size            : i32,
        numChannels     : i32,
        outShapeStrides : vec2<i32>,
        dispatchSize    : vec3<u32>,
      };

      @group(0) @binding(0) var<storage, write> result: array<${cd(t.dtype,r.isVec4)}>;
      @group(0) @binding(2) var<uniform> uniforms: Uniform;
    `),[Ew,n.join(`
`),Rw(t.shape),r.getUserCode()].join(`
`);let s="struct Uniforms { NAN : f32, ";r.variableNames.forEach((e,t)=>{s+=`${e.charAt(0).toLowerCase()+e.slice(1)}Shape : ${Wt(a[t].shape.length)}, `}),s+=`outShape : ${Wt(t.shape.length)}, `;e=t.shape.length-1;s+=`
       outShapeStrides: ${Wt(e)}, `,r.size&&(s+="size : i32, "),r.uniforms&&(s+=r.uniforms),s+="};",n.push(s),r.atomic?n.push(`
    @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
  `):n.push(`
    @group(0) @binding(0) var<storage, write> result: array<${cd(t.dtype,r.isVec4)}>;
  `),r.variableNames.forEach((e,t)=>{n.push(`
    @group(0) @binding(${1+t}) var<storage, read> ${e}: array<${cd(a[t].dtype,r.isVec4)}>;
    `)}),""!==s&&n.push(`
    @group(0) @binding(${1+r.variableNames.length}) var<uniform> uniforms: Uniforms;
    `);let[i,o]=gne(t.shape,r.dispatchLayout),l=[Ew,n.join(`
`),Rw(t.shape),i,dne(t.shape.length)];return r.atomic||l.push(pne(t.shape,t.dtype,r.isVec4)),o===t.shape.length&&(e=a.map(e=>hne(e,t.shape,r.isVec4,r.dispatchLayout.x.length===t.shape.length)).join(`
`),l.push(e)),l.push(r.getUserCode()),l.join(`
`)}var Ew=`
  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));
  }
`;function dne(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;default:w.assert(!1,()=>`Unsupported ${e}D shape`)}return t}function pne(e,t,a){let r=e.length,n=cd(t,a),s;if(s=a?`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result[flatIndex] = ${n}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result[flatIndex] = ${n}(value);
    }`:`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result[flatIndex] = ${n}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result[flatIndex] = ${n}(value);
    }`,2<=r){let e=["d0","d1","d2","d3"].slice(0,r),t=Wt(r);s+=a?`
      fn setOutputAtCoords(${e.map(e=>`${e} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${e.map(e=>`${e} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:`
      fn setOutputAtCoords(${e.map(e=>`${e} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${e.map(e=>`${e} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return s}function hne(e,t,a,r){let n=fne(e,a);return e.shape.length<=t.length&&(n+=mne(e,t,a,r)),n}function fne(e,t){let a=e.name,r=e.shape.length,n=Wt(r),s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=["d0","d1","d2","d3"].slice(0,r),o=i.map(e=>`${e} : i32`).join(", ");if(r<1)return t?`
        fn ${s}() -> vec4<f32> {
          return vec4<f32>(${a}[0]);
        }
      `:`
      fn ${s}() ->f32 {
        return f32(${a}[0]);
      }
    `;let l=`uniforms.${a.charAt(0).toLowerCase()+a.slice(1)}Shape`,u=0===r?"1D":`${r}D`;return t?`
      fn ${s}(${o}) -> vec4<f32> {
        return vec4<f32>(${a}[getIndexFromCoords${u}(${n}(${i.join(",")}),
          ${l}) / 4]);
      }
      `:`
    fn ${s}(${o}) -> f32 {
      return f32(${a}[getIndexFromCoords${u}(${n}(${i.join(",")}),
        ${l})]);
    }
   `}function mne(e,t,a,r){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),i="get"+s+"ByOutput",o=e.shape.length,l=t.length,u=Wt(l);if(w.arraysEqual(e.shape,t)&&r)return a?`
        fn ${i}Index(globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${n}[globalIndex]);
        }

        fn ${i}Coords(coords : ${u}) -> vec4<f32> {
          return vec4<f32>(${n}[${1<l?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
        }
        `:`
      fn ${i}Index(globalIndex : i32) -> f32 {
        return f32(${n}[globalIndex]);
      }

      fn ${i}Coords(coords : ${u}) -> f32 {
        return f32(${n}[${1<l?"getOutputIndexFromCoords(coords)":"coords"}]);
      }
      `;let d=S.getBroadcastDims(e.shape,t),p=l-o,h="";if(0===o)return a?`
      fn ${i}Index(globalIndex : i32) -> vec4<f32> {
        return get${s}();
      }

      fn ${i}Coords(coords : ${u}) -> vec4<f32> {
        return get${s}();
      }
    `:`
      fn ${i}Index(globalIndex : i32) -> f32{
        return get${s}();
      }

      fn ${i}Coords(coords : ${u}) -> f32{
        return get${s}();
      }
    `;h=l<2&&1<=d.length?"coords = 0;":d.map(e=>`coords[${e+p}] = 0;`).join(`
`);let c="";c=!(l<2&&0<o)&&1<l?`${Wt(o)}(${e.shape.map((e,t)=>`coords[${t+p}]`).join(", ")})`:"coords";t=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,e=`${o}D`;return a?`
      fn ${i}Index(globalIndex : i32) -> vec4<f32> {
        var coords = getCoordsFromIndex(globalIndex);
        ${h}
        return ${n}[getIndexFromCoords${e}(${c}, ${t}) / 4];
      }

      fn ${i}Coords(coordsIn : ${u}) -> vec4<f32> {
        var coords = coordsIn;
        ${h}
        return ${n}[getIndexFromCoords${e}(${c}, ${t}) / 4];
      }
    `:`
    fn ${i}Index(globalIndex : i32) -> f32 {
      var coords = getCoordsFromIndex(globalIndex);
      ${h}
      return f32(${n}[getIndexFromCoords${e}(${c}, ${t})]);
    }

    fn ${i}Coords(coordsIn : ${u}) -> f32 {
      var coords = coordsIn;
      ${h}
      return f32(${n}[getIndexFromCoords${e}(${c}, ${t})]);
    }
  `}function gne(e,t){var{x:a,y:r=[],z:t=[]}=t,e=e.length;if(a.length===e)return[`fn getOutputCoords() -> ${Wt(e)}{
      let globalIndex = getGlobalIndex();
      return getCoordsFromIndex(globalIndex);
    }
    `,e];let n="",s=[a,r,t],i=0;for(let t=0;t<s.length;t++){var o=s[t];if(0!==o.length)if(i+=o.length,1===o.length)n+=`let d${o[0]} = i32(globalId[${t}]);`;else{var l=lne(o,"uniforms.outShape");n+=`var index${t} = i32(globalId[${t}]);`;for(let e=0;e<l.length;e++)n+=`let d${o[e]} = index${t} / ${l[e]};`,e===l.length-1?n+=`let d${o[e+1]} = index${t} - d${o[e]} * ${l[e]};`:n+=`index${t} = index${t} - d${o[e]} * ${l[e]};`}}let u=[];for(let e=0;e<i;e++)u.push(`d${e}`);let d=Wt(i),p=`fn getOutputCoords() -> ${d} {
    ${n}
  `;return 0===u.length?p+=`return ${d}(0); }`:p+=`return ${d}(${u.join(",")}); }`,[p,i]}function Rw(e){var t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let a=w.computeStrides(e),r=Wt(t),n=[];for(let e=0;e<t;e++)n.push(`d${e}`);return 1===a.length?`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`:`
    fn getCoordsFromIndex(index : i32) -> ${r} {
      ${"var index2 = index;"+a.map((e,t)=>{return`${`let ${n[t]} = index2 / uniforms.outShapeStrides[${t}]`}; ${t===a.length-1?`let ${n[t+1]} = index2 - ${n[t]} * uniforms.outShapeStrides[${t}]`:`index2 = index2 - ${n[t]} * uniforms.outShapeStrides[${t}]`};`}).join("")}
      return ${r}(${n.join(",")});
    }
  `}var m2={};Ae(m2,{ArrayBufferToTypedArray:()=>b2,GPUBytesPerElement:()=>jm,computeDispatch:()=>_e,computeWorkGroupSizeForConv2d:()=>Cv,computeWorkGroupSizeForMatMul:()=>g2,computeWorkPerThreadForConv2d:()=>Nv,flatDispatchLayout:()=>Be,isWebGPUSupported:()=>Tv,tilesFitEvenlyIntoShape:()=>Ks});var na=t=>{let a=1;for(let e=0;e<t.length;e++)a*=t[e];return a};function Ks(a,e){if(a.length!==e.length)throw new Error(`Cannot compute whether rank ${a.length} tiles fit evenly into rank ${e.length} shape - ranks must match.`);return e.every((e,t)=>e%a[t]==0)}function _e(e,t,a=[1,1,1],r=[1,1,1]){var[e,a,r]=[Math.ceil(na(e.x.map(e=>t[e]))/(a[0]*r[0])),e.y?Math.ceil(na(e.y.map(e=>t[e]))/(a[1]*r[1])):1,e.z?Math.ceil(na(e.z.map(e=>t[e]))/(a[2]*r[2])):1];return[e,a,r]}function Cv(e,t){var a=na(e.x.map(e=>t[e])),e=na(e.y.map(e=>t[e]));return a<=4?[4,16,1]:e<=4?[16,4,1]:[16,16,1]}function g2(e,t,a){return 1===e?[32,1,1]:1===a?[1,32,1]:[8,8,1]}function Nv(e,t){var a=na(e.x.map(e=>t[e])),e=na(e.y.map(e=>t[e]));return a<=4?[1,2,1]:e<=4?[2,1,1]:[2,2,1]}function Be(e){return{x:e.map((e,t)=>t)}}function jm(e){if("float32"===e||"int32"===e||"bool"===e||"string"===e)return 4;if("complex64"===e)return 8;throw new Error(`Unknown dtype ${e}`)}function b2(e,t){if("float32"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function Tv(){return("undefined"!=typeof window||"undefined"!=typeof WorkerGlobalScope)&&!!navigator.gpu}function y2(e,t,a,r){return w.assert(r%4==0&&4===e[0],()=>"tileInner must be divisible by 4. And ColPerThread must be 4"),`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${r/e[0]}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${a/e[0]}>, ${r}>;

  let RowPerThread = ${e[1]};
  let ColPerThread = ${e[0]};
  let TileInner = ${r};

  ${Dr()}

    let tileRow = ${1===t?"0":"i32(localId.y) * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${1===t?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, RowPerThread>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / i32(workGroupSizeY);
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
  }`}var bne=class{constructor(e,t,a,r=null,n=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},1===t[1]?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);r=null!=r,s=null!=s;r&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=1===t[1]?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=r,this.activation=n,this.hasPreluActivationWeights=s,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],a=[this.outputShape[0],e,t],r=[this.tileAOuter,this.tileInner],n=[this.tileInner,this.tileBOuter];return[Ks(r,this.aShape.slice(1)),Ks(n,a.slice(1))]}getUserCode(){let e=this.fitA?"return A[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,a="",r="";this.activation&&(n=Zs(this.activation,this.isVec4),a=this.hasPreluActivationWeights?`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${n}
                }`:`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${n}
            }`,r="value = activation(value, outCoord);");var n=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${a}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / 4;
        let batch = i32(globalId.z);
        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / 4;
        let batch = i32(globalId.z);
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${n}
          ${r}
          setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${y2(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner)}
    `}};function $v(e,t){var a=t[1]*e[1],r=t[0]*e[0],n=r<a?a:r;return`
    var<workgroup> mm_Asub : array<array<f32, ${n}>, ${a}>;
    var<workgroup> mm_Bsub : array<array<f32, ${r}>, ${n}>;
    ${Dr()}
      let tileRow = i32(localId.y) * ${e[1]};
      let tileCol = i32(localId.x) * ${e[0]};

      let globalRow = i32(globalId.y) * ${e[1]};
      let globalCol = i32(globalId.x) * ${e[0]};

      let numTiles = (uniforms.dimInner - 1) / ${n} + 1;

      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${e[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${n} / ${t[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${n} / ${t[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${n} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${n} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${n}; k = k + 1) {
          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function yne(e){return`
    let TileSize = ${4*e[0]};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${Dr()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var v2=class{constructor(e,t,a,r=!1,n=!1,s=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};var l=r?e[1]:e[2];this.workGroupSize=g2(t[1],l,t[2]),1!==t[1]&&1!==t[2]||(a=1),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[a,a,1]),w.arraysEqual(this.dispatch,[1,1,1])&&(this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[a=1,a,1]));s=null!=s,o=null!=o;s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.workPerThread=a,this.aShape=e,this.transposeA=r,this.transposeB=n,this.addBias=s,this.activation=i,this.hasPreluActivationWeights=o;o=this.outputShape[2],o=this.transposeB?[this.outputShape[0],o,l]:[this.outputShape[0],l,o];[this.fitA,this.fitB]=this.getShapeFit(o),this.shaderKey=`matMulPacked_${this.workPerThread}_${r}_${n}_${this.activation}_${this.fitA}_${this.fitB}_${1<this.outputShape[1]}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,a=this.workGroupSize[0]*this.workPerThread,r=a<t?t:a;1===this.outputShape[1]&&(r*=4),w.assert(r%this.workGroupSize[0]==0&&r%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");var n=[t,r],s=[r,a];return[Ks(n,this.aShape.slice(1)),Ks(s,e.slice(1))]}getUserCode(){let e;e=!1===this.transposeA?this.fitA?"return A[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:this.fitA?"return A[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;t=!1===this.transposeB?this.fitB?"return B[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:this.fitB?"return B[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let a="",r="";this.activation&&(n=Zs(this.activation,!1),a=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${n}
            }`:`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${n}
              }
            `,r="value = activation(value, outCoord);");var n=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${a}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${n}
        ${r}
        setOutputAtCoords(batch, row, col, value);
      }
      ${1<this.outputShape[1]?$v([this.workPerThread,this.workPerThread,1],this.workGroupSize):yne(this.workGroupSize)}
    `}};function vne(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${Dr()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var xne=class{constructor(e,t=!1,a=!1,r=null,n=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize);r=null!=r,s=null!=s;r&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=a,this.addBias=r,this.activation=n,this.hasPreluActivationWeights=s,this.shaderKey=`matMulReduce_${this.activation}_${t}_${a}`}getUserCode(){let e;e=!1===this.transposeA?"return A[batch * batchASize + row * uniforms.dimInner + col];":"return A[batch * batchASize + col * uniforms.dimAOuter + row];";let t;t=!1===this.transposeB?"return B[batch * batchBSize + row * uniforms.dimBOuter + col];":"return B[batch * batchBSize + col * uniforms.dimInner + row];";let a="",r="";this.activation&&(n=Zs(this.activation,!1),a=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${n}
            }`:`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${n}
              }
            `,r="value = activation(value, outCoord);");var n=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${a}

      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        ${e}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${n}
        ${r}
        setOutputAtCoords(batch, row, col, value);
      }
      ${vne()}
    `}};function wne(e){var t=e[1]/2,a=e[0],e=a<t?t:a;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${e}>, ${t}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${a}>, ${e}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${e}>, ${t}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${a}>, ${e}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${Dr()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${e} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${e};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${e};
        }
      } else {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${e};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${e};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${e}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${e};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${e};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${e}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};
    if (tileRow >= ${t} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var kne=class{constructor(e,t,a,r=null,n=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,16,1],w.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=a,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(a[2]/this.workGroupSize[0]),Math.ceil(2*a[1]/this.workGroupSize[1]),a[0]];r=null!=r;r&&this.variableNames.push("bias");s=null!=s;s&&this.variableNames.push("preluActivationWeights"),this.addBias=r,this.activation=n,this.hasPreluActivationWeights=s,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e="",t="";this.activation&&(a=Zs(this.activation,!1),e=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsByOutputCoords(outCoord);
            ${a}
            }`:`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${a}
        }`,t="value = activation(value, outCoord);");var a=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${e}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${a}
          ${t}
          setOutputAtCoords(batch, row, col, value);
        }
      }
      ${wne(this.workGroupSize)}
    `}};function Me(e){let{inputs:t,attrs:a}=e,r=t["x"],n=a["shape"],s=w.sizeFromShape(r.shape),i=w.inferFromImplicitShape(n,s),o=w.sizeFromShape(i);return w.assert(s===o,()=>`The new shape (${i}) has ${o} elements and the old shape (${r.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var Ine={kernelName:Eo,backendName:"webgpu",kernelFunc:Me};function _v({a:e,b:t,transposeA:a,transposeB:r,backend:n,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,d=t.shape.length,p=a?e.shape[u-2]:e.shape[u-1],h=r?t.shape[d-1]:t.shape[d-2],c=a?e.shape[u-1]:e.shape[u-2],f=r?t.shape[d-2]:t.shape[d-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),b=w.sizeFromShape(m),y=w.sizeFromShape(g),v=jo.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);w.assert(p===h,()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${a} and transposeB=${r} must match.`);let x=a?[b,p,c]:[b,c,p],k=r?[y,f,h]:[y,h,f],I=Me({inputs:{x:e},backend:n,attrs:{shape:x}}),S=Me({inputs:{x:t},backend:n,attrs:{shape:k}}),C=[I,S],N=Math.max(b,y),T=p%4==0&&f%4==0&&!a&&!r&&32<=f,$;$=c*f<=32?new xne([N,c,f],a,r,s,l,i):a||r||!(c<=16&&(f<=512||h>=2*f)||f<=16&&(c<=512||p>=2*c))?T?new bne(x,[N,c,f],X().get("WEBGPU_MATMUL_WORK_PER_THREAD"),s,l,i):new v2(x,[N,c,f],X().get("WEBGPU_MATMUL_WORK_PER_THREAD"),a,r,s,l,i):new kne(x,k,[N,c,f],s,l,i);let _=[I,S];s&&_.push(s),i&&_.push(i);let A=[{type:"int32",data:[c]},{type:"int32",data:[f]},{type:"int32",data:[p]}];"leakyrelu"===l&&(A.push({type:"float32",data:[o]}),$.uniforms+=" alpha : f32,");var E,l=n.runWebGPUProgram($,_,e.dtype,A),o=Me({inputs:{x:l},backend:n,attrs:{shape:v}});C.push(l);for(E of C)n.disposeData(E.dataId);return o}function Sne(e){var{inputs:t,backend:a,attrs:r}=e,{a:n,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:e,activation:t,leakyreluAlpha:r}=r;return _v({a:n,b:s,transposeA:l,transposeB:e,backend:a,bias:i,preluActivationWeights:o,leakyreluAlpha:r,activation:t})}var Cne={kernelName:ra,backendName:"webgpu",kernelFunc:Sne},Dw=class{constructor(e,t,a){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=S.assertAndGetBroadcastShape(t,a),this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${tc(this.op,!1)}
      }

      ${Ue()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},Nne=class{constructor(e,t,a,r){this.variableNames=["A","B"],this.size=!0;this.workGroupSize=[256,1,1],this.outputShape=S.assertAndGetBroadcastShape(t,a),this.dispatchLayout=Be(this.outputShape),this.lastDimensionSize=(r?a:t)[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=r,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){var e=1<this.lastDimensionSize?`coords[${this.outputShape.length-1}]`:"0",e=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBByOutputCoords(coords);`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${tc(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Ue()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${e}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}},Tne=class{constructor(e,t,a){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0,this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=S.assertAndGetBroadcastShape(t,a),this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`
      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
        ${tc(this.op,this.isVec4)}
      }
      ${Ue()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
    `}},x2=class{constructor(e,t,a){this.variableNames=["A","B"],this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=S.assertAndGetBroadcastShape(t,a),this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`
      fn binaryOperation(a : f32, b : f32) -> f32 {
        ${tc(this.op,!1)}
      }
      ${Ue()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
      `}};function Fw(e,t,a){if(w.arraysEqual(t,a)&&w.sizeFromShape(t)%4==0)return new Tne(e,t,a);var r=1===t.length&&1<a.length&&t[0]<1024,n=1===a.length&&1<t.length&&a[0]<1024;return r||n?new Nne(e,t,a,n):new x2(e,t,a)}function es(e){var t=e["inputs"],t=t["x"];return e.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}var $ne={kernelName:Ba,backendName:"webgpu",kernelFunc:es};function lu(e){let{inputs:t,backend:a}=e,{real:r,imag:n}=t,s=a.makeTensorInfo(r.shape,"complex64"),i=a.tensorMap.get(s.dataId),o=es({inputs:{x:r},backend:a}),l=es({inputs:{x:n},backend:a});return i.complexTensorInfos={real:o,imag:l},s}var _ne={kernelName:jd,backendName:"webgpu",kernelFunc:lu},nc=class{constructor(e,t){this.variableNames=["A"],this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Hr(this.op,!1)}
      }
      ${Ue()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function Kt({opType:i,cpuKernelImpl:o,dtype:l}){return({inputs:e,backend:t})=>{let a=e["x"],r=t,n=l||a.dtype;if(r.shouldExecuteOnCPU([a])&&null!=o){var s=r.tensorMap.get(a.dataId),s=o(s.values,n);return r.makeTensorInfo(a.shape,n,s)}s=new nc(a.shape,i);return r.runWebGPUProgram(s,[a],n)}}function mn({opSnippet:d,cpuKernelImpl:a,supportsComplex:r=!1,dtype:p}){return({inputs:e,backend:n})=>{let{a:s,b:i}=e,o=n;if(r&&"complex64"===s.dtype){let e=o.tensorMap.get(s.dataId),t=o.tensorMap.get(i.dataId),a,r;0!==d?[a,r]=[[e.complexTensorInfos.real,t.complexTensorInfos.real],[e.complexTensorInfos.imag,t.complexTensorInfos.imag]].map(e=>{var[t,a]=e,r={dataId:t.dataId,dtype:t.dtype,shape:s.shape},n={dataId:a.dataId,dtype:a.dtype,shape:i.shape},e=Fw(d,s.shape,i.shape);return o.runWebGPUProgram(e,[r,n],cn(t.dtype,a.dtype))}):(n=new Dw(17,s.shape,i.shape),l=new Dw(18,s.shape,i.shape),u=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:i.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:i.shape}],a=o.runWebGPUProgram(n,u,"float32"),r=o.runWebGPUProgram(l,u,"float32"));var l=lu({inputs:{real:a,imag:r},backend:o});return o.disposeData(a.dataId),o.disposeData(r.dataId),l}var u=p||cn(s.dtype,i.dtype);if(("string"===s.dtype||"string"===i.dtype||o.shouldExecuteOnCPU([s,i]))&&null!=a){var t=o.tensorMap.get(s.dataId).values,l=o.tensorMap.get(i.dataId).values,t="string"===s.dtype?S.fromUint8ToStringArray(t):t,l="string"===s.dtype?S.fromUint8ToStringArray(l):l,[t,l]=a(s.shape,i.shape,t,l,u);return o.makeTensorInfo(l,u,t)}t=Fw(d,s.shape,i.shape);return o.runWebGPUProgram(t,[s,i],u)}}var{addImpl:Ane,ceilImpl:Ene,concatImpl:Rne,equalImpl:Dne,expImpl:Fne,expm1Impl:One,floorImpl:Pne,gatherNdImpl:zne,gatherV2Impl:Mne,greaterEqualImpl:Lne,greaterImpl:Bne,lessEqualImpl:Vne,lessImpl:Wne,logImpl:Une,maxImpl:Gne,maximumImpl:Hne,minimumImpl:qne,multiplyImpl:jne,negImpl:Kne,notEqualImpl:Xne,prodImpl:Yne,rangeImpl:Qne,rsqrtImpl:Zne,simpleAbsImpl:Jne,sliceImpl:ese,stridedSliceImpl:tse,stringNGramsImpl:nse,subImpl:sse,tileImpl:rse,topKImpl:ase,transposeImpl:ise,uniqueImpl:Mpe}=Zy,ose=Kt({opType:0,cpuKernelImpl:Jne}),use={kernelName:io,backendName:"webgpu",kernelFunc:ose},lse=mn({opSnippet:1,cpuKernelImpl:Ane,supportsComplex:!0}),cse={kernelName:Ir,backendName:"webgpu",kernelFunc:lse},dse=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((e,t)=>`T${t}`),this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let t=[];this.variableNames.forEach(e=>{t.push(`let v${e} = get${e}ByOutputCoords(coords);`)});var e=this.variableNames.map(e=>`v${e}`).join(" + ");return`
      ${Ue()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${t.join(`
        `)}
            setOutputAtIndex(flatIndex, ${e});
          }
        }
      }
    `}};function pse(e){let{inputs:t,backend:a}=e,r=t;if(1===r.length)return es({inputs:{x:r[0]},backend:a});var n=r.map(e=>e.dtype).reduce((e,t)=>cn(e,t)),e=r.map(e=>e.shape),e=new dse(e);return a.runWebGPUProgram(e,r,n)}var hse={kernelName:ka,backendName:"webgpu",kernelFunc:pse},w2=class{constructor(e,t,a){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="axis : i32, infinityValue : f32,",this.size=!0;t=[t];S.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),t,e.length),this.op="min"===a?"<":">";var[t]=S.computeOutAndReduceShapes(e,t);this.outputShape=0===t.length?[1]:t,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){var e,t,a=e=>1===this.inputShape.length?"uniforms.xShape":`uniforms.xShape[${e}]`;return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `}

      // In order to get a flattened index into the input tensor, we need to
      // add back the index along the reduced dimension to |outputCoords|.
      // This function outputs the offset to the first value along
      // |axis| and the stride to get the next value of the input along |axis|.
      fn getInputCoordInfo(outputIndex : i32) -> vec2<i32>{
        let outputCoords = getCoordsFromIndex(outputIndex);
        var i = ${this.outputShape.length-1};

        var stride = 1;
        var inputStride = 1;
        var offset = 0;

        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {
          let length = ${a(`${this.inputShape.length} - r`)};
          if (${this.inputShape.length} - r == uniforms.axis) {
            inputStride = stride;
          } else {
            offset = offset + ${e="outputCoords",t="i",1===this.outputShape.length?e:`${e}[${t}]`} * stride;
            i = i - 1;
          }
          stride = stride * length;
        }

        return vec2<i32>(offset, inputStride);
      }

      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{
        return coordInfo[0] + coordInfo[1] * index;
      }

      ${Ue()}
        let outputIndex = index / i32(workGroupSizeX);
        let coordInfo = getInputCoordInfo(outputIndex);
        let Length = ${a("uniforms.axis")};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;

        for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = f32(x[getInputIndex(coordInfo, k)]);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(Length), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}},fse=class{constructor(t,a){this.variableNames=["A"],this.workGroupSize=[16,16,1];let r=new Array(t.length);for(let e=0;e<r.length;e++)r[e]=t[a[e]];this.outputShape=r,this.dispatchLayout={x:[0],y:[1]},this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${Sv()}
      fn main(@builtin(local_invocation_id) localId : vec3<u32>,
              @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = A[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},mse=class{constructor(t,a){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let r=new Array(t.length);for(let e=0;e<r.length;e++)r[e]=t[a[e]];this.outputShape=r,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=a,this.shaderKey=`transpose_${a}`}getUserCode(){var e=Wt(this.outputShape.length),t=gse(this.newDim);return`
      ${Ue()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function gse(t){var e=t.length;if(4<e)throw Error(`Transpose for rank ${e} is not yet supported`);let a=new Array(e);for(let e=0;e<t.length;e++)a[t[e]]=`resRC[${e}]`;return a.join()}function wi(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],s=r["perm"],i=a,o=n.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=n.shape[s[e]];if(a.shouldExecuteOnCPU([n])){e=i.tensorMap.get(n.dataId).values,e=ise(e,n.shape,n.dtype,s,l);return a.makeTensorInfo(l,n.dtype,e)}if(2===n.shape.length&&w.arraysEqual(s,[1,0])){var u=new fse(n.shape,s);return i.runWebGPUProgram(u,[n],n.dtype)}u=new mse(n.shape,s);return i.runWebGPUProgram(u,[n],n.dtype)}var bse={kernelName:pi,backendName:"webgpu",kernelFunc:wi};function yse(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],s=r["axis"],i=w.parseAxisParam(s,n.shape),o=S.getAxesPermutation(i,n.shape.length),l=n,u=[];null!=o&&(l=wi({inputs:{x:n},backend:a,attrs:{perm:o}}),u.push(l),i=S.getInnerMostAxes(i.length,l.shape.length)),S.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);var d=new w2(l.shape,i[0],"max"),e=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.NEGATIVE_INFINITY]}],e=a.runWebGPUProgram(d,[l],"int32",e);return u.forEach(e=>a.disposeData(e.dataId)),e}var vse={kernelName:Ia,backendName:"webgpu",kernelFunc:yse};function xse(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],s=r["axis"],i=w.parseAxisParam(s,n.shape),o=S.getAxesPermutation(i,n.shape.length),l=n,u=[];null!=o&&(l=wi({inputs:{x:n},backend:a,attrs:{perm:o}}),u.push(l),i=S.getInnerMostAxes(i.length,l.shape.length)),S.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);var d=new w2(l.shape,i[0],"min"),e=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.POSITIVE_INFINITY]}],e=a.runWebGPUProgram(d,[l],"int32",e);return u.forEach(e=>a.disposeData(e.dataId)),e}var wse={kernelName:ol,backendName:"webgpu",kernelFunc:xse},k2=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";"avg"===this.poolType&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return"avg"===this.poolType&&(t="resultValue / count"),`
      ${Ue()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}},I2=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>,",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Ue()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function kse(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=S.computePool2DInfo(n.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&w.arraysEqual(u.inShape,u.outShape))return es({inputs:{x:n},backend:a});let d,p=[{type:"int32",data:[u.strideHeight,u.strideWidth]}];return 1===u.filterHeight&&1===u.filterWidth?d=new I2(u):(d=new k2(u,"avg"),p.push({type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]})),a.runWebGPUProgram(d,[n],n.dtype,p)}var Ise={kernelName:Sa,backendName:"webgpu",kernelFunc:kse};function Sse(e){var{inputs:t,backend:a,attrs:r}=e,{a:n,b:e}=t,{transposeA:t,transposeB:r}=r;return _v({a:n,b:e,transposeA:t,transposeB:r,backend:a})}var Cse={kernelName:Ca,backendName:"webgpu",kernelFunc:Sse},Nse=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Wt(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e=Wt(this.rank),t=Tse(this.rank),a;return a=1===this.start.length?this.outputShape.map((e,t)=>"sourceLoc = uniforms.start + coords;"):this.outputShape.map((e,t)=>`sourceLoc.${Km[t]} = uniforms.start[${t}] + coords.${Km[t]};`),`
      ${Ue()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${a.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},Km=["x","y","z","w","u","v"];function Tse(e){if(1===e)return"sourceLoc";if(e<=6)return Km.slice(0,e).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function cu(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{begin:s,size:i}=r,[o,l]=wt.parseSliceParams(n,s,i);if(wt.assertParamsValid(n,o,l),a.shouldExecuteOnCPU([n])||"string"===n.dtype){var u=a.tensorMap.get(n.dataId),u=ese(u.values,o,l,n.shape,n.dtype);return a.makeTensorInfo(l,n.dtype,u)}if(0===w.sizeFromShape(l))return a.makeTensorInfo(l,n.dtype,[]);u=new Nse(o,l);return a.runWebGPUProgram(u,[n],n.dtype,[{type:"int32",data:o}])}var $se={kernelName:Po,backendName:"webgpu",kernelFunc:cu},_se=e=>{let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{blockShape:s,crops:i}=r;w.assert(n.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let o=s.reduce((e,t)=>e*t),l=S.getReshaped(n.shape,s,o),u=S.getPermuted(l.length,s.length),d=S.getReshapedPermuted(n.shape,s,o),p=S.getSliceBeginCoords(i,s.length),h=S.getSliceSize(d,i,s.length),c=[],f=Me({inputs:{x:n},backend:a,attrs:{shape:l}}),m=wi({inputs:{x:f},backend:a,attrs:{perm:u}}),g=Me({inputs:{x:m},backend:a,attrs:{shape:d}}),b=cu({inputs:{x:g},backend:a,attrs:{begin:p,size:h}});return c.push(f),c.push(m),c.push(g),c.forEach(e=>a.disposeData(e.dataId)),b},Ase={kernelName:oo,backendName:"webgpu",kernelFunc:_se},S2=mn({opSnippet:10,dtype:"bool",cpuKernelImpl:Xne}),Ese={kernelName:So,backendName:"webgpu",kernelFunc:S2};function sc(e){let{inputs:t,backend:a}=e,r=t["input"],n=a.tensorMap.get(r.dataId);return es({inputs:{x:n.complexTensorInfos.real},backend:a})}var Rse={kernelName:np,backendName:"webgpu",kernelFunc:sc};function Dse(e,t){var a=new nc(e.shape,22),e=t.runWebGPUProgram(a,[e],"int32");return{dataId:e.dataId,shape:e.shape,dtype:e.dtype}}function Xm(e){let{inputs:t,backend:r,attrs:a}=e,n=t["x"],s=a["dtype"];if("complex64"===s){if("complex64"===n.dtype)return es({inputs:{x:n},backend:r});let e=$t(n.shape),t=Xm({inputs:{x:n},backend:r,attrs:{dtype:"float32"}}),a=lu({inputs:{real:t,imag:e},backend:r});return e.dispose(),r.disposeData(t.dataId),a}if("complex64"===n.dtype){var e=sc({inputs:{input:n},backend:r}),i=Xm({inputs:{x:e},backend:r,attrs:{dtype:s}});return r.disposeData(e.dataId),i}if(!w.hasEncodingLoss(n.dtype,s)){var o=es({inputs:{x:n},backend:r});return{dataId:o.dataId,shape:o.shape,dtype:s}}if("int32"===s)return Dse(n,r);if("bool"!==s)throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${s}`);i=r.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),o=S2({inputs:{a:n,b:i},backend:r});return r.disposeData(i.dataId),o}var Fse={kernelName:Na,backendName:"webgpu",kernelFunc:Xm},Ose=Kt({opType:1,cpuKernelImpl:Ene}),Pse={kernelName:Ta,backendName:"webgpu",kernelFunc:Ose},zse=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Ue()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isnan(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}},Mse=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Ue()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function Lse(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{clipValueMin:s,clipValueMax:i}=r,o,l=[{type:"float32",data:[s]},{type:"float32",data:[i]}];return o=new(w.sizeFromShape(n.shape)%4==0?zse:Mse)(n.shape),a.runWebGPUProgram(o,[n],n.dtype,l)}var Bse={kernelName:Sr,backendName:"webgpu",kernelFunc:Lse},Vse=class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=S.computeOutShape(e,1),this.variableNames=e.map((e,t)=>`T${t}`),this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32,`;this.shaderKey="concat"}getUserCode(){let t=[];if(0<this.offsetLength){t.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let e=1;e<this.offsetLength;e++)t.push(`else if (yC < uniforms.offset${[e]}){ setOutputAtCoords(coords.x, coords.y, getT${e}(yR, yC - uniforms.offset${e-1})); }`);var e=this.offsetLength,a=this.offsetLength-1;t.push(`else { setOutputAtCoords(coords.x, coords.y, getT${e}(yR, yC - uniforms.offset${a})); }`)}else t.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${Ue()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${t.join(`
        `)}
          }
        }
      }
    `}};function Zp(e){let{inputs:t,backend:a}=e,r=t["input"],n=a.tensorMap.get(r.dataId);return es({inputs:{x:n.complexTensorInfos.imag},backend:a})}var Wse={kernelName:Zd,backendName:"webgpu",kernelFunc:Zp};function Ym(o,l,u){var d=o[0].dtype;if("complex64"===d){let e=o.map(e=>sc({inputs:{input:e},backend:u})),t=o.map(e=>Zp({inputs:{input:e},backend:u})),a=Ym(e,l,u),r=Ym(t,l,u),n=lu({inputs:{real:a,imag:r},backend:u});return e.forEach(e=>u.disposeData(e.dataId)),t.forEach(e=>u.disposeData(e.dataId)),u.disposeData(a.dataId),u.disposeData(r.dataId),n}let e=u.shouldExecuteOnCPU(o);if("string"===d&&(e=!0),e){let e=o.map(e=>{var t=w.sizeFromShape(e.shape.slice(l));return Me({inputs:{x:e},backend:u,attrs:{shape:[-1,t]}})}),t=e.map(e=>({vals:u.readSync(e.dataId),shape:e.shape})),a=S.computeOutShape(e.map(e=>e.shape),1),r=1===e[0].shape[0],n=Rne(t,a,d,r),s=S.computeOutShape(o.map(e=>e.shape),l),i=u.makeTensorInfo(s,d,n);return e.forEach(e=>u.disposeData(e.dataId)),i}let{tensors2D:t,outShape:a}=Use(o,l,u),r=t.map(e=>e.shape),n=new Vse(r),s=[],i=new Array(r.length-1);if(0<i.length){i[0]=r[0][1],s.push({type:"int32",data:[i[0]]});for(let e=1;e<i.length;e++)i[e]=i[e-1]+r[e][1],s.push({type:"int32",data:[i[e]]})}d=u.runWebGPUProgram(n,t,t[0].dtype,s);t.forEach(e=>u.disposeData(e.dataId));o=Me({inputs:{x:d},backend:u,attrs:{shape:a}});return u.disposeData(d.dataId),o}function Use(e,t,a){var r=S.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>Me({inputs:{x:e},backend:a,attrs:{shape:[w.sizeFromShape(e.shape.slice(0,t)),w.sizeFromShape(e.shape.slice(t))]}})),outShape:r}}function C2(e){let{inputs:t,backend:a,attrs:r}=e,n=r["axis"],s=w.parseAxisParam(n,t[0].shape)[0],i=S.computeOutShape(t.map(e=>e.shape),s);if(0===w.sizeFromShape(i))return a.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(e=>0<w.sizeFromShape(e.shape));if(1===o.length)return es({inputs:{x:o[0]},backend:a});e=o.map(e=>e.shape);return S.assertParamsConsistent(e,s),Ym(o,s,a)}var Gse={kernelName:uo,backendName:"webgpu",kernelFunc:C2},Hse=class{constructor(e,t=!1,a=null,r=!1,n=!1){this.variableNames=["x","W"],this.uniforms=`filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,
      dimAOuter : i32, dimBOuter : i32, dimInner : i32,`,this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=e.outShape,w.assert("channelsLast"===e.dataFormat,()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},1===this.outputShape[1]?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.convInfo=e,this.addBias=t,this.activation=a,this.hasPreluActivationWeights=r,this.hasLeakyreluAlpha=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),this.tileAOuter=1===this.outputShape[1]?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){var e=[this.tileAOuter,this.tileInner],t=[this.tileInner,this.tileBOuter],a=this.outputShape[1]*this.outputShape[2],r=this.outputShape[3],n=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[Ks(e,[a,n]),Ks(t,[n,r])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getIndexFromCoords4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } else if (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } else if (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let e=y2(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner),t=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.convInfo.inChannels%4==0?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x[getIndexFromCoords4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } else if (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,a=this.fitA?`${t}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${t}
         }
         return vec4<f32>(0.0);
        `,r=this.fitB?"return W[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,n="",s="";if(this.activation){var i=Zs(this.activation,this.isVec4);if(this.hasPreluActivationWeights)n=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${i}
        }`;else{if(this.hasLeakyreluAlpha)throw n=`fn activation(outCoord: vec4<f32>) -> vec4<f32> {
          let b = getLeakyreluAlphaByOutputCoords(outCoord);
          ${i}
        }`,new Error("Leakyrelu is not supported.");n=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${i}
        }`}s="value = activation(value, outCoord);"}i=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
        ${n}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${a}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${r}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${i}
            ${s}
            setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${e}
      `}},qse=class{constructor(e,t=!1,a=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,w.assert("channelsLast"===e.dataFormat,()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=Cv(this.dispatchLayout,this.outputShape),this.elementsPerThread=Nv(this.dispatchLayout,this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=a,this.hasPreluActivationWeights=r,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){var e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],a=t<e?e:t;w.assert(a%this.workGroupSize[0]==0&&a%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");var r=[a,t],n=this.outputShape[1]*this.outputShape[2],s=this.outputShape[3],t=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[Ks([e,a],[n,t]),Ks(r,[t,s])]}getUserCode(){let e=$v(this.elementsPerThread,this.workGroupSize),t=`
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);
    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];
    let coord = vec4<i32>(
        batch,
        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
        col % uniforms.xShape[3]);
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;`,a=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${t}
    }
    return 0.0;
    `,r=this.fitB?"return W[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,n="",s="";this.activation&&(i=Zs(this.activation,!1),n=this.hasPreluActivationWeights?`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${i}
                }`:`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${i}
                  }
                `,s="value = activation(value, outCoord);");var i=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
    ${n}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${a}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${r}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      ${i}
      ${s}
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }
    ${e}
  `}},jse=class{constructor(e,t=!1,a=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),w.assert("channelsLast"===e.dataFormat,()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=a,this.hasPreluActivationWeights=r,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";this.activation&&(a=Zs(this.activation),e=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec4<i32>) -> f32{
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${a}
             }`:`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{
                    ${a}
                  }
                `,t="value = activation(value, outCoord);");var a=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${e}
      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {
        let coord = vec4<i32>(batch, row, col, chan);
        if(coordsInBounds4D(coord, uniforms.xShape)) {
          return getX(batch, row, col, chan);
        }
        return 0.0;
      }

      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
        let coord = vec4<i32>(row, col, xChannel, outChannel);
        if(coordsInBounds4D(coord, uniforms.wShape)) {
          return getW(row, col, xChannel, outChannel);
        }
        return 0.0;
      }

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          ${a}
          ${t}
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${Dr()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let outChannel = coords[3];

        var acc = 0.0;

        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {
              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
              let v = readInp(batch, coordRow, coordCol, xChannel);
              let f = readFilt(row, col, xChannel, outChannel);
              acc = acc + v * f;
            }
          }
        }

        writeResult(batch, coords[1], coords[2], outChannel, acc);
      }
    `}},Kse=class{constructor(e,t){this.variableNames=["A"],this.uniforms=`pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
      inChannels : i32,`,this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){var e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`
    ${Ue()}

      for(var i = 0; i<${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;

        let rc = getCoordsFromIndex(flatIndex);

        if(flatIndex < uniforms.size) {
          let blockIndex = rc[0];
          let pos = rc[1];

          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];
          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;
          var value = 0.0;
          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {
            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -
              uniforms.pad[0];
            let d1 = offsetX + uniforms.dilation[0] * ((pos %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
            let ch = pos % uniforms.inChannels;
            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {
              value = getA(d0, d1, ch);
            }
          }
          setOutputAtIndex(flatIndex, value);
        }
      }
    }
  `}};function Xse({x:e,filter:t,convInfo:a,backend:r,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=e.shape,u="channelsLast"===a.dataFormat,d=a.filterHeight===a.inHeight&&a.filterWidth===a.inWidth&&"VALID"===a.padInfo.type,p,h;var c;h=d?(c=a.inHeight*a.inWidth*a.inChannels,p=Me({inputs:{x:e},backend:r,attrs:{shape:[1,a.batchSize,c]}}),Me({inputs:{x:t},backend:r,attrs:{shape:[1,c,a.outChannels]}})):(c=u?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],p=Me({inputs:{x:e},backend:r,attrs:{shape:[1,c,a.inChannels]}}),Me({inputs:{x:t},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}));i=_v({a:p,b:h,transposeA:!1,transposeB:!1,backend:r,bias:n,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),a=Me({inputs:{x:i},backend:r,attrs:{shape:a.outShape}});return r.disposeData(p.dataId),r.disposeData(h.dataId),r.disposeData(i.dataId),a}function Yse({x:e,filter:t,convInfo:a,backend:r,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:d,strideWidth:p,strideHeight:h,padInfo:c,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:b,dataFormat:y}=a,v="channelsLast"===y,x=l*u*d,w=m*f,k=[w,x],I=[],S=Me({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),C=Me({inputs:{x:t},backend:r,attrs:{shape:[1,x,-1]}});I.push(S),I.push(C);let N=new Kse(k,v),T=[{type:"int32",data:[c.left,c.top]},{type:"int32",data:[p,h]},{type:"int32",data:[g,b]},{type:"int32",data:[f]},{type:"int32",data:[d*l]},{type:"int32",data:[d]}],$=r.runWebGPUProgram(N,[S],S.dtype,T),_=Me({inputs:{x:$},backend:r,attrs:{shape:[1,k[0],k[1]]}});I.push($),I.push(_);let A=[1,k[0],k[1]],E=new v2(A,[1,w,a.outChannels],X().get("WEBGPU_MATMUL_WORK_PER_THREAD"),!1,!1,n,o,s),R=A[1],F=A[2],O=a.outChannels,M=[{type:"int32",data:[R]},{type:"int32",data:[O]},{type:"int32",data:[F]}],D=[_,C];n&&D.push(n),s&&D.push(s),"leakyrelu"===o&&(T.push({type:"float32",data:[i]}),E.uniforms+=" alpha : f32,");var z,i=r.runWebGPUProgram(E,D,_.dtype,M),a=Me({inputs:{x:i},backend:r,attrs:{shape:v?[1,m,f,a.outChannels]:[1,a.outChannels,m,f]}});I.push(i);for(z of I)r.disposeData(z.dataId);return a}function N2({x:e,filter:t,convInfo:a,backend:r,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=null!=n,u=null!=s,d;if(a.filterHeight===a.inHeight&&a.filterWidth===a.inWidth&&"VALID"===a.padInfo.type||1===a.filterHeight&&1===a.filterWidth&&1===a.dilationHeight&&1===a.dilationWidth&&1===a.strideHeight&&1===a.strideWidth&&("SAME"===a.padInfo.type||"VALID"===a.padInfo.type))return Xse({x:e,filter:t,convInfo:a,backend:r,bias:n,activation:o,preluActivationWeights:s,leakyreluAlpha:i});if(X().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&1===e.shape[0])return Yse({x:e,filter:t,convInfo:a,backend:r,bias:n,preluActivationWeights:s,leakyreluAlpha:i,activation:o});let p=X().getBool("WEBGPU_USE_NAIVE_CONV2D"),h=(a.inChannels%4==0||3===a.inChannels&&"VALID"===a.padInfo.type)&&a.outChannels%4==0,c=[a.padInfo.top,a.padInfo.left],f=[{type:"int32",data:[a.filterHeight,a.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[a.strideHeight,a.strideWidth]},{type:"int32",data:[a.dilationHeight,a.dilationWidth]}];var m,g;p?d=new jse(a,l,o,u):(d=new(h?Hse:qse)(a,l,o,u),m=a.outShape[1]*a.outShape[2],g=a.outShape[3],a=a.filterHeight*a.filterWidth*a.inShape[3],f.push({type:"int32",data:[m]},{type:"int32",data:[g]},{type:"int32",data:[a]}));let b=[e,t];return l&&b.push(n),u&&b.push(s),"leakyrelu"===o&&(f.push({type:"float32",data:[i]}),d.uniforms+=" alpha : f32,"),r.runWebGPUProgram(d,b,e.dtype,f)}function Qse(e){var{inputs:t,attrs:a,backend:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dataFormat:e,dilations:t,dimRoundingMode:a}=a,e=S.convertConv2DDataFormat(e);return N2({x:n,filter:s,convInfo:S.computeConv2DInfo(n.shape,s.shape,i,t,o,a,!1,e),backend:r})}var Zse={kernelName:$a,backendName:"webgpu",kernelFunc:Qse},Jse=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,w.assert("channelsLast"===e.dataFormat,()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=Cv(this.dispatchLayout,this.outputShape),this.elementsPerThread=Nv(this.dispatchLayout,this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W[getIndexFromCoords4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }

    ${$v(this.elementsPerThread,this.workGroupSize)}
  `}},ere=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){var e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,a=this.isChannelsLast?3:1;return`
    ${Ue()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${a}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function tre(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r,p=S.convertConv2DDataFormat(u),h=S.computeConv2DInfo(i,s.shape,o,1,l,d,!1,p),c=[{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.batchSize,h.outHeight,h.outWidth,h.outChannels]}],f;var m,g;return X().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")?f=new ere(h):(f=new Jse(h),m=h.inShape[1]*h.inShape[2],g=h.inShape[3],e=h.filterHeight*h.filterWidth*h.outChannels,c.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[e]})),a.runWebGPUProgram(f,[n,s],"float32",c)}var nre={kernelName:_a,backendName:"webgpu",kernelFunc:tre},sre=Kt({opType:2}),rre={kernelName:Aa,backendName:"webgpu",kernelFunc:sre},are=Kt({opType:3}),ire={kernelName:Ea,backendName:"webgpu",kernelFunc:are},ore=class{constructor(e,t,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workGroupSize=[64,1,1],this.size=!0;var[t]=t;this.outputShape=[t,a[0],a[1],e],this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId="bilinear"===r?1:0,this.cropHeightBiggerThan1=1<this.outputShape[1],this.cropWidthBiggerThan1=1<this.outputShape[2],this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){var[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[a,r,n]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[s,i,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${Ue()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${a});
        let width_ratio = f32(${s});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${r};
        let width_scale = ${i};
        let in_y = ${n};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${o};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}},ure=e=>{let{inputs:t,backend:a,attrs:r}=e,{image:n,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,d=new ore(n.shape[3],s.shape,o,l),p=[{type:"float32",data:[u]}];return a.runWebGPUProgram(d,[n,s,i],"float32",p)},lre={kernelName:co,backendName:"webgpu",kernelFunc:ure},cre=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${Ue()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function dre(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{blockSize:s,dataFormat:i}=r,o=n.shape[0],l="NHWC"===i?n.shape[1]:n.shape[2],u="NHWC"===i?n.shape[2]:n.shape[3],d="NHWC"===i?n.shape[3]:n.shape[1],p=l*s,h=u*s,c=d/(s*s),f="NHWC"===i?[o,p,h,c]:[o,c,p,h],m=[{type:"int32",data:[s]}],g=new cre(f,i);return a.runWebGPUProgram(g,[n],n.dtype,m)}var pre={kernelName:po,backendName:"webgpu",kernelFunc:dre},T2=class{constructor(e,t=!1,a=null,r=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),w.assert("channelsLast"===e.dataFormat,()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=a,this.hasPreluActivation=r,this.shaderKey=`depthwise3x3_${a}`}getUserCode(){let e="",t="";this.activation&&(a=Zs(this.activation,this.isVec4),e=this.hasPreluActivation?`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${a}
        }`:`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
            ${a}
          }
        `,t="dotProd[i] = activation(dotProd[i], coords);");var a=this.addBias?"dotProd[i] = dotProd[i] + getBiasByOutputCoords(coords);":"";return`
      ${e}

      ${Sv()}
      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${a}
            ${t}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}},$2=class{constructor(e,t=!1,a=null,r=!1){this.variableNames=["x","W"],this.uniforms=`pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,
      inDims : vec2<i32>, filterHeight : i32, filterWidth : i32,
      channelMul : i32,`,this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),w.assert("channelsLast"===e.dataFormat,()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=a,this.hasPreluActivation=r,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";this.activation&&(a=Zs(this.activation,!1),e=this.hasPreluActivation?`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${a}
        }`:`
          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
            ${a}
          }
        `,t="dotProd = activation(dotProd, coords);");var a=this.addBias?"dotProd = dotProd + getBiasByOutputCoords(coords);":"";return`
      ${e}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,
          value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${Dr()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / uniforms.channelMul;
        let q = d2 - d1 * uniforms.channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${a}
        ${t}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function hre(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,d=l;null==d&&(d=[1,1]);let p=S.computeConv2DInfo(n.shape,s.shape,i,d,o,u,!0),h=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]}],c;return 1===p.batchSize&&p.inHeight===p.outHeight&&p.inWidth===p.outWidth&&1===p.strideHeight&&1===p.strideWidth&&p.filterHeight===p.filterWidth&&p.inChannels===p.outChannels&&1===p.dilationHeight&&1===p.dilationWidth&&3===p.filterHeight&&p.inChannels%4==0?c=new T2(p):(c=new $2(p),h.push({type:"int32",data:[p.filterHeight]},{type:"int32",data:[p.filterWidth]},{type:"int32",data:[p.outChannels/p.inChannels]})),a.runWebGPUProgram(c,[n,s],n.dtype,h)}var fre={kernelName:Ra,backendName:"webgpu",kernelFunc:hre},_2=mn({opSnippet:0,cpuKernelImpl:jne,supportsComplex:!0}),mre={kernelName:Ya,backendName:"webgpu",kernelFunc:_2},gre=class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];var[e]=S.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=0===e.length?[1]:e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";"min"===this.reduceType||"max"===this.reduceType?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${"min"===this.reduceType?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):"sum"===this.reduceType||"mean"===this.reduceType?e=" bestValue = bestValue + candidate; ":"prod"===this.reduceType&&(e=" bestValue = bestValue * candidate; ",t="1.0");var a="mean"===this.reduceType?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${1===this.outputShape.length?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Ue()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${a}
        }
       }
     `}};function rc(e,t,a,r,n){let s=e.shape.length,i=[],o=w.parseAxisParam(t,e.shape),l=o,u=S.getAxesPermutation(l,s),d=e;null!=u&&(d=wi({inputs:{x:e},attrs:{perm:u},backend:n}),l=S.getInnerMostAxes(l.length,s),i.push(d)),S.assertAxesAreInnerMostDims(r,l,s);let[p,h]=S.computeOutAndReduceShapes(d.shape,l),c=p;a&&(c=S.expandShapeToKeepDim(p,o));let f;if("max"!==r&&"prod"!==r||!n.shouldExecuteOnCPU([d])){var m=w.sizeFromShape(h),t={windowSize:m,inSize:m,batchSize:w.sizeFromShape(d.shape)/m,outSize:1},a="mean"===r?"float32":cp(e.dtype),m=[{type:"int32",data:[m]}],t=new gre(t,r),m=n.runWebGPUProgram(t,[d],a,m);i.push(m),f=Me({inputs:{x:m},attrs:{shape:c},backend:n})}else{var g=n.tensorMap.get(d.dataId).values;switch(r){case"max":var b=Gne(g,w.sizeFromShape(h),c,e.dtype);f=n.makeTensorInfo(c,e.dtype,b);break;case"prod":var{outVals:y,outShape:v,outDtype:b}=Yne(d.shape,d.dtype,g,l);f=n.makeTensorInfo(v,b,y);break;default:throw new Error(`${r} CPU implementation is not yet supported.`)}}return i.forEach(e=>n.disposeData(e.dataId)),f}function Av(e){var{inputs:t,backend:a,attrs:r}=e,e=t["x"],{axis:t,keepDims:r}=r;return rc(e,t,r,"sum",a)}var bre={kernelName:oi,backendName:"webgpu",kernelFunc:Av};function yre(e){let{inputs:t,backend:n,attrs:a}=e,r=a["equation"],s=t,{allDims:i,summedDims:o,idDims:l}=S.decodeEinsumEquation(r,s.length);S.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=S.getEinsumComputePath(o,l),p=d.length,h=null,c=i.length,f=[];for(let e=0;e<p;++e){for(var m of d[e]){let{permutationIndices:e,expandDims:t}=S.getEinsumPermutation(c,l[m]),a;S.isIdentityPermutation(e)?a=s[m]:(a=wi({inputs:{x:s[m]},backend:n,attrs:{perm:e}}),f.push(a));let r=a.shape.slice();for(let e=0;e<t.length;++e)r.splice(t[e],0,1);w.arraysEqual(a.shape,r)||(a=Me({inputs:{x:a},backend:n,attrs:{shape:r}}),f.push(a)),null===h?h=a:(h=_2({inputs:{a:a,b:h},backend:n}),f.push(h))}e<p-1&&(0<=u[e]&&(h=Av({inputs:{x:h},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(h)),c--)}for(var g of f)g!==h&&n.disposeData(g.dataId);return h}var vre={kernelName:Qd,backendName:"webgpu",kernelFunc:yre},xre=Kt({opType:4}),wre={kernelName:Fa,backendName:"webgpu",kernelFunc:xre},kre=mn({opSnippet:4,dtype:"bool",cpuKernelImpl:Dne}),Ire={kernelName:ho,backendName:"webgpu",kernelFunc:kre},A2=Kt({opType:5,cpuKernelImpl:Fne,dtype:"float32"}),Sre={kernelName:Oa,backendName:"webgpu",kernelFunc:A2};function Qm(e){let{inputs:t,attrs:a,backend:r}=e,n=a["dim"],s=t["input"],i=s.shape.length,o=s.shape.slice(),l=n;return n<0&&(w.assert(-(i+1)<=n,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+n+1),o.splice(l,0,1),Me({inputs:{x:s},backend:r,attrs:{shape:o}})}var Cre={kernelName:fo,backendName:"webgpu",kernelFunc:Qm},Nre=Kt({opType:6,cpuKernelImpl:One}),Tre={kernelName:mo,backendName:"webgpu",kernelFunc:Nre},$re=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Ue()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function du(e){let{backend:t,attrs:a}=e,{shape:r,value:n}=a,s=a["dtype"];if("string"===(s=s||w.inferDtype(n))){let e=w.getArrayFromDType(s,w.sizeFromShape(r));return e.fill(n),t.makeTensorInfo(r,s,e)}e=new $re(r);return t.runWebGPUProgram(e,[],s,[{type:"float32",data:[n]}])}var _re={kernelName:ml,backendName:"webgpu",kernelFunc:du},Are=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Ue()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}},Ere={kernelName:go,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let a=e["image"],r=t,n=new Are(a.shape);return r.runWebGPUProgram(n,[a],a.dtype)}},Rre=Kt({opType:7,cpuKernelImpl:Pne}),Dre={kernelName:Pa,backendName:"webgpu",kernelFunc:Rre},Fre=mn({opSnippet:12,dtype:"int32"}),Ore={kernelName:za,backendName:"webgpu",kernelFunc:Fre},Pre=(e,t,a,r,n)=>{let s=[r,...a];return n&&s.push(n),e.createBindGroup({layout:t,entries:s.map((e,t)=>({binding:t,resource:e}))})},E2=(e,t,a,r,n,s=!1)=>{s=cne(r,{dtype:n.dtype,shape:n.shape},t,s),s=e.createShaderModule({code:s,label:t.constructor.name});return e.createComputePipeline({layout:a,compute:{module:s,entryPoint:"main"},label:t.constructor.name})};function R2(e,t,a,r="",n=""){return e.shaderKey+"_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(e=>e.length).join(",")+a.join(",")+e.variableNames.join(",")+r+n}function Ow(e){let{externalImage:t,backend:a,attrs:r,outShape:n,useImport:s}=e,i=r["numChannels"],o=w.sizeFromShape(n),l=w.computeStrides(n),u=a.makeTensorInfo(n,"int32"),d=a.getFromPixelsProgram(s?"import":"copyExternal");d.updateOutputShape(n);let p=[u.shape],h=[u.dtype,s?"import":"copyExternal"],c=R2(d,p,h),f=d.getLayout(a.device),m=a.getAndSavePipeline(c,()=>E2(a.device,d,f.pipelineLayout,[],u,!0));d.setPipeline(m),s||a.queue.copyExternalImageToTexture({source:t,origin:{x:0,y:0}},{texture:d.makeInputTexture(a.device,n[1],n[0])},[n[1],n[0]]);let g=a.tensorMap.get(u.dataId);g.bufferInfo.buffer=a.acquireBuffer(g.bufferInfo.byteSize);e=[o,i,...l,...d.dispatch];d.setUniform(a.device,e);let b;return b=s?a.device.importExternalTexture({source:t}):d.inputTexture.createView(),a.runFromPixelsProgram(d,g.bufferInfo.buffer,f,b,u.dataId),u}var Bi,zre={kernelName:fd,backendName:"webgpu",kernelFunc:Mre};function Mre(e){let{inputs:t,backend:a,attrs:r}=e,n=t["pixels"],s=r["numChannels"];if(null==n)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");var i="undefined"!=typeof HTMLVideoElement&&n instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&n instanceof HTMLImageElement,l="undefined"!=typeof HTMLCanvasElement&&n instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&n instanceof OffscreenCanvas,u="undefined"!=typeof ImageBitmap&&n instanceof ImageBitmap,[d,p]=i?[n.videoWidth,n.videoHeight]:[n.width,n.height],e=[p,d,s];if(X().getBool("WEBGPU_USE_IMPORT")&&i)return Ow({externalImage:n,backend:a,attrs:r,outShape:e,useImport:!0});if((i||o)&&((Bi=null==Bi?document.createElement("canvas").getContext("2d"):Bi).canvas.width=d,Bi.canvas.height=p,Bi.drawImage(n,0,0,d,p),n=Bi.canvas),u||l||i||o)return Ow({externalImage:n,backend:a,attrs:r,outShape:e,useImport:!1});let h=n.data,c=h;if(null!=s&&4!==s){c=new Uint8Array(n.width*n.height*s);let t=h.length,a=0;for(let e=0;e<t;e++)e%4<s&&(c[a++]=h[e])}let f=a.makeTensorInfo(e,"int32"),m=a.tensorMap.get(f.dataId);return m.values=new Int32Array(c),a.maybeReleaseBuffer(f.dataId),a.uploadToGPU(f.dataId),f}var Lre=class{constructor(e,t,a,r,n){this.uniforms="varianceEpsilon : f32,",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],S.assertAndGetBroadcastShape(e,t),S.assertAndGetBroadcastShape(e,a),this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),null!=r&&(S.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset")),null!=n&&(S.assertAndGetBroadcastShape(e,n),this.variableNames.push("scale")),this.offsetShape=r,this.scaleShape=n,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";null!=this.offsetShape&&(e="getOffsetByOutputIndex(index)");let t="1.0";return null!=this.scaleShape&&(t="getScaleByOutputIndex(index)"),`
      ${Ue()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},Bre={kernelName:Ma,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:r,scale:n,offset:s,mean:i,variance:o}=e,l=t["varianceEpsilon"],u=a,d=[r,i,o],p=null;null!=s&&(p=s.shape,d.push(s));let h=null;null!=n&&(h=n.shape,d.push(n));a=new Lre(r.shape,i.shape,o.shape,p,h);return u.runWebGPUProgram(a,d,r.dtype,[{type:"float32",data:[l]}])}};function Vre(e){var{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:e,activation:t,leakyreluAlpha:r}=r,d=S.convertConv2DDataFormat(d);return N2({x:n,filter:s,convInfo:S.computeConv2DInfo(n.shape,s.shape,l,p,u,e,!1,d),backend:a,bias:i,preluActivationWeights:o,leakyreluAlpha:r,activation:t})}var Wre={kernelName:aa,backendName:"webgpu",kernelFunc:Vre};function Ure(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:c}=r,f=d;null==f&&(f=[1,1]),w.assert(S.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let m=S.computeConv2DInfo(n.shape,s.shape,l,f,u,p,!0),g=[n,s],b=null!=i,y=null!=o;b&&g.push(i),y&&g.push(o);let v=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]},{type:"int32",data:[m.inHeight,m.inWidth]}],x;return 1===m.batchSize&&m.inHeight===m.outHeight&&m.inWidth===m.outWidth&&1===m.strideHeight&&1===m.strideWidth&&m.filterHeight===m.filterWidth&&m.inChannels===m.outChannels&&1===m.dilationHeight&&1===m.dilationWidth&&3===m.filterHeight&&m.inChannels%4==0?x=new T2(m,b,h,y):(x=new $2(m,b,h,y),v.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.outChannels/m.inChannels]})),"leakyrelu"===h&&(v.push({type:"float32",data:[c]}),x.uniforms+=" alpha : f32,"),a.runWebGPUProgram(x,g,"float32",v)}var Gre={kernelName:ia,backendName:"webgpu",kernelFunc:Ure},Hre=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${Wt(e)},`}getUserCode(){let e;return e=1<this.sliceDim?"uniforms.strides[j]":"uniforms.strides",`
        ${Ue()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function qre(e){let{inputs:t,backend:a}=e,{params:r,indices:n}=t,s=n.shape,i=s[s.length-1],o=w.sizeFromShape(r.shape),[l,u,d,p]=S.prepareAndValidate(r,n),h=Me({inputs:{x:n},backend:a,attrs:{shape:[u,i]}}),c=Me({inputs:{x:r},backend:a,attrs:{shape:[w.sizeFromShape(r.shape)/d,d]}});if(a.shouldExecuteOnCPU([r,n])||"string"===r.dtype){var f=a.readSync(n.dataId),m=a.bufferSync(r),f=zne(f,m,r.dtype,u,i,d,p,r.shape,o);return a.makeTensorInfo(l,r.dtype,f.values)}m=new Hre(i,[u,d]),f=a.runWebGPUProgram(m,[c,h],c.dtype,[{type:"int32",data:[i]},{type:"int32",data:p}]),m=Me({inputs:{x:f},backend:a,attrs:{shape:l}});return a.disposeData(h.dataId),a.disposeData(c.dataId),a.disposeData(f.dataId),m}var jre={kernelName:yo,backendName:"webgpu",kernelFunc:qre},Kre=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){var e=Xre(this.aShape);return`
      ${Ue()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function Xre(t){let a=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let e=0;e<t.length;e++)2===e?r.push("indexZ"):r.push(`${a[e]}`);return r.join()}function D2(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,indices:s}=t,{axis:i,batchDims:o}=r,l=w.parseAxisParam(i,n.shape)[0],u=S.segment_util.collectGatherOpShapeInfo(n,s,l,o),d=w.sizeFromShape(s.shape),p=[],h=Me({inputs:{x:n},backend:a,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=Me({inputs:{x:s},backend:a,attrs:{shape:[u.batchSize,d/u.batchSize]}});p.push(h),p.push(c);var f=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(a.shouldExecuteOnCPU([n,s])){var m=a.tensorMap.get(c.dataId).values,e=De(c.shape,c.dtype,m),m=a.tensorMap.get(h.dataId).values,m=De(h.shape,h.dtype,m),e=Mne(m,e,f);return p.forEach(e=>a.disposeData(e.dataId)),a.makeTensorInfo(u.outputShape,e.dtype,e.values)}f=new Kre(h.shape,f),f=a.runWebGPUProgram(f,[h,c],h.dtype);p.push(f);f=Me({inputs:{x:f},backend:a,attrs:{shape:u.outputShape}});return p.forEach(e=>a.disposeData(e.dataId)),f}var Yre={kernelName:bo,backendName:"webgpu",kernelFunc:D2},Qre=mn({opSnippet:5,cpuKernelImpl:Bne,dtype:"bool"}),Zre={kernelName:vo,backendName:"webgpu",kernelFunc:Qre},Jre=mn({opSnippet:6,dtype:"bool",cpuKernelImpl:Lne}),eae={kernelName:La,backendName:"webgpu",kernelFunc:Jre};function tae(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],s=r["alpha"],i=[{type:"float32",data:[s]}],o=new nc(n.shape,14);return o.uniforms="alpha : f32,",a.runWebGPUProgram(o,[n],"float32",i)}var nae={kernelName:Va,backendName:"webgpu",kernelFunc:tae},sae=mn({opSnippet:7,dtype:"bool",cpuKernelImpl:Wne}),rae={kernelName:xo,backendName:"webgpu",kernelFunc:sae},aae=mn({opSnippet:8,dtype:"bool",cpuKernelImpl:Vne}),iae={kernelName:wo,backendName:"webgpu",kernelFunc:aae},oae=Kt({opType:9,cpuKernelImpl:Une}),uae={kernelName:Wa,backendName:"webgpu",kernelFunc:oae},lae=mn({opSnippet:9,dtype:"bool"}),cae={kernelName:ko,backendName:"webgpu",kernelFunc:lae},dae=Kt({opType:10}),pae={kernelName:xl,backendName:"webgpu",kernelFunc:dae};function F2(e){var{inputs:t,backend:a,attrs:r}=e,e=t["x"],{reductionIndices:t,keepDims:r}=r;return rc(e,t,r,"max",a)}var hae={kernelName:Ua,backendName:"webgpu",kernelFunc:F2},fae=mn({opSnippet:15,cpuKernelImpl:Hne}),mae={kernelName:Ga,backendName:"webgpu",kernelFunc:fae};function gae(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=S.computePool2DInfo(n.shape,s,i,1,o,l),d,p=[];if(1===u.filterHeight&&1===u.filterWidth){if(w.arraysEqual(u.inShape,u.outShape))return es({inputs:{x:n},backend:a});d=new I2(u),p.push({type:"int32",data:[u.strideHeight,u.strideWidth]})}else d=new k2(u,"max"),p.push({type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]});return a.runWebGPUProgram(d,[n],n.dtype,p)}var bae={kernelName:Ha,backendName:"webgpu",kernelFunc:gae};function yae(e){var{inputs:t,backend:a,attrs:r}=e,e=t["x"],{keepDims:t,axis:r}=r;return rc(e,r,t,"mean",a)}var vae={kernelName:qa,backendName:"webgpu",kernelFunc:yae};function xae(e){var{inputs:t,backend:a,attrs:r}=e,e=t["x"],{axis:t,keepDims:r}=r;return rc(e,t,r,"min",a)}var wae={kernelName:ja,backendName:"webgpu",kernelFunc:xae},kae=mn({opSnippet:16,cpuKernelImpl:qne}),Iae={kernelName:Ka,backendName:"webgpu",kernelFunc:kae},Sae=class{constructor(a,e,t){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.map((e,t)=>e[0]+a[t]+e[1]),this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=a,e.map((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`}),this.offset="reflect"===t?0:1,this.shaderKey=`mirrorPad_${t}`}getUserCode(){let a=this.xShape.length,e=this.xShape.map((e,t)=>`uniforms.pad${t}[0]`).join(","),t=this.xShape.map((e,t)=>`uniforms.pad${t}[0] + uniforms.xShape${1<a?`[${t}]`:""}`).join(","),r=1===a?"start":"start[i]",n=1===a?"end":"end[i]",s=1===a?"outC":"outC[i]",i=Wt(a),o=1<a?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a):"coords";return`
      ${Ue()}
        if (index < uniforms.size) {
          let start = ${i}(${e});
          let end = ${i}(${t});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${a}; i = i + 1) {
            if (${s} < ${r}) {
              ${s} = ${r} * 2 - ${s} - ${this.offset};
            } else if(${s} >= ${n}) {
              ${s} = (${n} - 1) * 2 - ${s} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${o}));
        }
      }
    `}},Cae={kernelName:Xa,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let r=e["x"],{paddings:n,mode:s}=t,i=a,o=n.map(e=>({type:"int32",data:[e[0],e[1]]})),l=new Sae(r.shape,n,s);return i.runWebGPUProgram(l,[r],r.dtype,o)}};function Nae(e){let{inputs:t,backend:a}=e,r=t["x"];if(a.shouldExecuteOnCPU([r])){var e=a.tensorMap.get(r.dataId),[n,e]=Kne(e.values,r.shape,r.dtype);return a.makeTensorInfo(e,r.dtype,n)}n=new nc(r.shape,11);return a.runWebGPUProgram(n,[r],r.dtype)}var Tae={kernelName:Io,backendName:"webgpu",kernelFunc:Nae};function $ae(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=a.readSync(n.dataId),d=a.readSync(s.dataId),p=xs.nonMaxSuppressionV3Impl(u,d,i,o,l)["selectedIndices"];return a.makeTensorInfo([p.length],"int32",new Int32Array(p))}var _ae={kernelName:Co,backendName:"webgpu",kernelFunc:$ae};function Aae(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,d=a.readSync(n.dataId),p=a.readSync(s.dataId),h=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=xs.nonMaxSuppressionV5Impl(d,p,h,c,f,m);return[a.makeTensorInfo([g.length],"int32",new Int32Array(g)),a.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var Eae={kernelName:No,backendName:"webgpu",kernelFunc:Aae};function Ld(e){let{inputs:t,backend:a}=e,r=t["x"];if("complex64"!==r.dtype)return du({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:a});var n=sc({inputs:{input:r},backend:a}),s=Ld({inputs:{x:n},backend:a}),i=Zp({inputs:{input:r},backend:a}),o=Ld({inputs:{x:i},backend:a}),e=lu({inputs:{real:s,imag:o},backend:a});return a.disposeData(n.dataId),a.disposeData(s.dataId),a.disposeData(i.dataId),a.disposeData(o.dataId),e}var Rae={kernelName:Ho,backendName:"webgpu",kernelFunc:Ld};function O2(e){let{inputs:t,backend:a}=e,r=t["x"];if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"!==r.dtype)return du({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a});var n=sc({inputs:{input:r},backend:a}),s=O2({inputs:{x:n},backend:a}),i=Zp({inputs:{input:r},backend:a}),o=Ld({inputs:{x:i},backend:a}),e=lu({inputs:{real:s,imag:o},backend:a});return a.disposeData(n.dataId),a.disposeData(s.dataId),a.disposeData(i.dataId),a.disposeData(o.dataId),e}var Dae={kernelName:To,backendName:"webgpu",kernelFunc:O2};function Fae(e){let{inputs:t,backend:a,attrs:r}=e,n=r["axis"];if(1===t.length)return Qm({inputs:{input:t[0]},backend:a,attrs:{dim:n}});let s=t[0].shape,i=t[0].dtype;t.forEach(e=>{w.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(e=>{e=Qm({inputs:{input:e},backend:a,attrs:{dim:n}});return o.push(e),e}),u=C2({inputs:l,backend:a,attrs:{axis:n}});return o.forEach(e=>a.disposeData(e.dataId)),u}var Oae={kernelName:_o,backendName:"webgpu",kernelFunc:Fae},Pae=class{constructor(a,e){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.map((e,t)=>e[0]+a[t]+e[1]),this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),e.map((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`}),this.xShape=a,this.shaderKey="pad"}getUserCode(){let a=this.xShape.length,e=Wt(a),t=this.xShape.map((e,t)=>`uniforms.pad${t}[0]`).join(","),r=this.xShape.map((e,t)=>`uniforms.pad${t}[0] + uniforms.xShape${1<a?`[${t}]`:""}`).join(","),n=1<a?`${e}(${t})`:`${t}`,s=1<a?`${e}(${r})`:`${r}`,i=1<a?"any(outC < start)":"outC < start",o=1<a?"any(outC >= end)":"outC >= end",l=1<a?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a):"coords";return`
      ${Ue()}
        if (index < uniforms.size) {
          let start = ${n};
          let end = ${s};
          let outC = getCoordsFromIndex(index);

          if (${i} || ${o}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${l}));
          }
        }
      }
    `}},P2=e=>{let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{paddings:s,constantValue:i}=r;if(s.every(e=>w.arraysEqual(e,[0,0])))return es({inputs:{x:n},backend:a});if(0===w.sizeFromShape(n.shape)){var o=s.map((e,t)=>e[0]+n.shape[t]+e[1]);return du({backend:a,attrs:{shape:o,value:i,dtype:n.dtype}})}let l=[{type:"float32",data:[i]}];s.map(e=>l.push({type:"int32",data:[e[0],e[1]]}));o=new Pae(n.shape,s);return a.runWebGPUProgram(o,[n],n.dtype,l)},zae={kernelName:Qa,backendName:"webgpu",kernelFunc:P2},Mae=mn({opSnippet:13}),Lae={kernelName:Za,backendName:"webgpu",kernelFunc:Mae};function Bae(e){let{inputs:t,backend:a}=e,{x:r,alpha:n}=t,s=new x2(14,r.shape,n.shape);return a.runWebGPUProgram(s,[r,n],"float32")}var Vae={kernelName:Ja,backendName:"webgpu",kernelFunc:Bae};function Wae(e){var{inputs:t,backend:a,attrs:r}=e,e=t["x"],{axis:t,keepDims:r}=r;return rc(e,t,r,"prod",a)}var Uae={kernelName:Ao,backendName:"webgpu",kernelFunc:Wae},Gae=e=>{let{backend:t,attrs:a}=e,{start:r,stop:n,step:s,dtype:i}=a,o=Qne(r,n,s,i);return t.makeTensorInfo([o.length],i,o)},Hae={kernelName:Il,backendName:"webgpu",kernelFunc:Gae},z2=mn({opSnippet:3}),qae={kernelName:Da,backendName:"webgpu",kernelFunc:z2},jae=Kt({opType:12}),Kae={kernelName:ei,backendName:"webgpu",kernelFunc:jae},Xae=Kt({opType:13}),Yae={kernelName:ni,backendName:"webgpu",kernelFunc:Xae},Qae=class{constructor(e,t,a){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,a,e[3]],this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Ue()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Zae(e){let{inputs:t,backend:a,attrs:r}=e,n=t["images"],{alignCorners:s,size:i,halfPixelCenters:o}=r,[l,u]=i,d=s&&1<l?1:0,p=s&&1<u?1:0,h=[{type:"float32",data:[d,p]},{type:"float32",data:[o?.5:0]}],c=new Qae(n.shape,l,u);return a.runWebGPUProgram(c,[n],"float32",h)}var Jae={kernelName:ti,backendName:"webgpu",kernelFunc:Zae},eie=class{constructor(e,t,a,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,a,e[3]],this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${r}`}getUserCode(){let e;return e=this.halfPixelCenters?"max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Ue()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function tie(e){let{inputs:t,backend:a,attrs:r}=e,n=t["images"],{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=s&&1<l?1:0,p=s&&1<u?1:0,h=[{type:"float32",data:[d,p]},{type:"float32",data:[s?.5:0]}],c=new eie(n.shape,l,u,i);return a.runWebGPUProgram(c,[n],n.dtype,h)}var nie={kernelName:Cl,backendName:"webgpu",kernelFunc:tie},sie=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,"number"==typeof t?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Ue()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}},rie={kernelName:qo,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let r=e["image"],{radians:n,fillValue:s,center:i}=t,o=a,l=new sie(r.shape,s),[u,d]=S.getImageCenter(i,r.shape[1],r.shape[2]),p=[{type:"float32",data:[u]},{type:"float32",data:[d]},{type:"float32",data:[Math.sin(n)]},{type:"float32",data:[Math.cos(n)]}];return"number"==typeof s?p.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):p.push({type:"float32",data:s}),o.runWebGPUProgram(l,[r],r.dtype,p)}},aie=Kt({opType:15,cpuKernelImpl:Zne}),iie={kernelName:si,backendName:"webgpu",kernelFunc:aie},oie=class{constructor(e,t,a,r,n,s,i){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=s,this.type=i,this.dispatchLayout=Be(e),this.dispatch=_e(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=1<t,this.shaderKey=`scatter_${a}_${r}_${this.sliceDimGreaterThanOne}_${i}`;n=Wt(n.length);this.uniforms=`sliceDim : i32, strides: ${n}, size: i32,`,this.updatesRank=r,this.indicesRank=a}getUserCode(){let e="";1===this.indicesRank?e="coords[0]":2===this.indicesRank&&(e="coords[0], j");let t=`getIndices(${e})`,a=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",r="",n="",s="";1===this.updatesRank?(r="coords[0]",n="flattenedIndex",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):2===this.updatesRank&&(r="coords[0], coords[1]",n="vec2<i32>(flattenedIndex, coords[1])",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);var i=`getUpdates(${r})`,o="int32"===this.type?"atomicAdd(&(result[flatIndex]), i32(updateValue));":`
     var assumed = atomicLoad(&(result[flatIndex]));
     var success = 0;
     for (; success == 0;) {
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       let resValue = atomicCompareExchangeWeak(&(result[flatIndex]), assumed, newI32);
       assumed = resValue[0];
       success = resValue[1];
     }
     `;return`
    ${s}

      ${Ue()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${a};
          }
          let updateValue = ${i};
          let flatIndex = getOutputIndexFromCoords(${n});

         ${o}
        }
      }`}};function uie(e){let{inputs:t,backend:a,attrs:r}=e,{indices:n,updates:s}=t,i=r["shape"],{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=S.calculateShapes(s,n,i),h=[p/u,u];if(0===p)return a.makeTensorInfo(i,n.dtype);var c=Me({inputs:{x:n},backend:a,attrs:{shape:[l,o]}}),f=Me({inputs:{x:s},backend:a,attrs:{shape:[l,u]}}),m=f.dtype,g=du({backend:a,attrs:{shape:h,value:0,dtype:m}}),b=[{type:"int32",data:[o]},{type:"int32",data:d},{type:"int32",data:[w.sizeFromShape(f.shape)]}],e=new oie(f.shape,o,c.shape.length,f.shape.length,d,h,m),b=a.runWebGPUProgram(e,[f,c],m,b,g),g=Me({inputs:{x:b},backend:a,attrs:{shape:i}});return a.disposeData(c.dataId),a.disposeData(f.dataId),a.disposeData(b.dataId),g}var lie={kernelName:Fo,backendName:"webgpu",kernelFunc:uie},cie=class{constructor(e,t,a){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=a,this.shaderKey="select"}getUserCode(){let e,n;if(4<this.rank)throw Error(`Where for rank ${this.rank} is not yet supported`);if(1===this.rank)n="resRC",e="resRC";else{let t=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],r=[];for(let e=0;e<this.outputShape.length;e++)r.push(`${t[e]}`),e<this.cRank&&a.push(`${t[e]}`);e=a.join(),n=r.join()}return`
      ${Ue()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${n}));
          } else {
            setOutputAtIndex(index, getB(${n}));
          }
        }
      }
    `}};function die(e){let{inputs:t,backend:a}=e,{condition:r,t:n,e:s}=t,i=new cie(r.shape.length,n.shape,n.shape.length);return a.runWebGPUProgram(i,[r,n,s],cn(n.dtype,s.dtype))}var pie={kernelName:Oo,backendName:"webgpu",kernelFunc:die},hie=Kt({opType:18}),fie={kernelName:ai,backendName:"webgpu",kernelFunc:hie},mie=Kt({opType:16}),gie={kernelName:ri,backendName:"webgpu",kernelFunc:mie},bie=Kt({opType:17}),yie={kernelName:zo,backendName:"webgpu",kernelFunc:bie},M2=mn({opSnippet:2,cpuKernelImpl:sse,supportsComplex:!0}),vie={kernelName:ci,backendName:"webgpu",kernelFunc:M2};function xie(e){let{inputs:t,backend:a,attrs:r}=e,n=t["logits"],s=r["dim"],i=w.parseAxisParam([s],n.shape),o=F2({inputs:{x:n},backend:a,attrs:{reductionIndices:i,keepDims:!1}}),l=S.expandShapeToKeepDim(o.shape,i),u=Me({inputs:{x:o},backend:a,attrs:{shape:l}}),d=M2({inputs:{a:n,b:u},backend:a}),p=A2({inputs:{x:d},backend:a}),h=Av({inputs:{x:p},backend:a,attrs:{axis:i,keepDims:!1}}),c=Me({inputs:{x:h},backend:a,attrs:{shape:l}}),f=z2({inputs:{a:p,b:c},backend:a});return a.disposeData(o.dataId),a.disposeData(u.dataId),a.disposeData(d.dataId),a.disposeData(p.dataId),a.disposeData(h.dataId),a.disposeData(c.dataId),f}var wie={kernelName:ui,backendName:"webgpu",kernelFunc:xie},kie=e=>{let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{blockShape:s,paddings:i}=r;w.assert(n.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let o=s.reduce((e,t)=>e*t),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<n.shape.length;++e)l.push([0,0]);let u=[],d=P2({inputs:{x:n},backend:a,attrs:{paddings:l,constantValue:0}}),p=S.getReshaped(d.shape,s,o,!1),h=S.getPermuted(p.length,s.length,!1),c=S.getReshapedPermuted(d.shape,s,o,!1),f=Me({inputs:{x:d},backend:a,attrs:{shape:p}}),m=wi({inputs:{x:f},backend:a,attrs:{perm:h}}),g=Me({inputs:{x:m},backend:a,attrs:{shape:c}});return u.push(d),u.push(f),u.push(m),u.forEach(e=>a.disposeData(e.dataId)),g},Iie={kernelName:Mo,backendName:"webgpu",kernelFunc:kie},Sie=class{constructor(e,t,a,r,n,s,i=0){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.size=!0,this.outputShape=s,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);t=1<t;this.shaderKey=`scatter_${a}_${r}_${t}`;n=Wt(n.length);this.uniforms=`updateSize : i32, sliceDim : i32, strides: ${n},`;let o="";1===a?o="i":2===a&&(o="i, j"),this.indicesSnippet=`getIndices(${o})`;let l="";1===r?l="i":2===r&&(l="i, coords[1]"),this.updatesSnippet=`getUpdates(${l})`,this.strideString=t?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${Ue()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputAtIndex(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function Cie(e){let{inputs:t,backend:a,attrs:r}=e,{sparseIndices:n,sparseValues:s,defaultValue:i}=t,o=r["outputShape"],{sliceRank:l,numUpdates:u,strides:d,outputSize:p}=S.calculateShapes(s,n,o),h=[{type:"int32",data:[u]},{type:"int32",data:[l]},{type:"int32",data:d}],c=new Sie(u,l,n.shape.length,s.shape.length,d,[p,1],!1),f=a.runWebGPUProgram(c,[s,n,i],s.dtype,h),m=Me({inputs:{x:f},backend:a,attrs:{shape:o}});return a.disposeData(f.dataId),m}var Nie={kernelName:ip,backendName:"webgpu",kernelFunc:Cie};function Tie(e){let{inputs:t,backend:r,attrs:a}=e,n=t["x"],{numOrSizeSplits:s,axis:i}=a,o=w.parseAxisParam(i,n.shape)[0],l=S.prepareSplitSize(n,s,o),u=n.shape.length,d=new Array(u).fill(0),p=n.shape.slice();return l.map(e=>{let t=[...p];t[o]=e;var a=cu({inputs:{x:n},backend:r,attrs:{begin:d,size:t}});return d[o]+=e,a})}var $ie={kernelName:Lo,backendName:"webgpu",kernelFunc:Tie},_ie=Kt({opType:19}),Aie={kernelName:ii,backendName:"webgpu",kernelFunc:_ie},Eie={kernelName:Al,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let a=e["x"],r=t,n=new nc(a.shape,20);return r.runWebGPUProgram(n,[a],a.dtype)}},Rie=mn({opSnippet:11}),Die={kernelName:li,backendName:"webgpu",kernelFunc:Rie},Fie=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);e=Wt(this.outputShape.length);this.uniforms=`begin : ${e},  strides : ${e}, `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(1===e)t="coords * uniforms.strides + uniforms.begin";else{let a=0;t=this.outputShape.map((e,t)=>(a++,1===this.outputShape.length?`coords * uniforms.strides[${t}] + uniforms.begin[${t}]`:`coords[${a-1}] * uniforms.strides[${t}] + uniforms.begin[${t}]`)).join(",")}return`
       ${Ue()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function Oie(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r,{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=wt.sliceInfo(n.shape,s,i,o,l,u,d,p,h),k;var I;return m?k=Me({inputs:{x:n},backend:a,attrs:{shape:f}}):g||b?(w.assert(1<=n.shape.length,()=>`Input must have rank at least 1, got: ${n.shape.length}`),e=wt.computeOutShape(y,v,x),e=cu({inputs:{x:n},backend:a,attrs:{begin:y,size:e}}),k=Me({inputs:{x:e},backend:a,attrs:{shape:f}}),a.disposeData(e.dataId)):a.shouldExecuteOnCPU([n])?(I=a.readSync(n.dataId),I=De(n.shape,n.dtype,I),I=tse(c,I,x,y),k=a.makeTensorInfo(f,n.dtype,I.values)):(I=new Fie(c),I=a.runWebGPUProgram(I,[n],n.dtype,[{type:"int32",data:y},{type:"int32",data:x}]),k=Me({inputs:{x:I},backend:a,attrs:{shape:f}}),a.disposeData(I.dataId)),k}var Pie={kernelName:Bo,backendName:"webgpu",kernelFunc:Oie};function zie(e){let{inputs:t,backend:a,attrs:r}=e,{separator:n,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:p}=t,h=a.readSync(d.dataId),c=a.readSync(p.dataId),[f,m]=nse(h,c,n,s,i,o,l,u);return[a.makeTensorInfo([f.length],"string",f),a.makeTensorInfo(p.shape,"int32",m)]}var Mie={kernelName:op,backendName:"webgpu",kernelFunc:zie},Lie=Kt({opType:21}),Bie={kernelName:di,backendName:"webgpu",kernelFunc:Lie},Vie=class{constructor(t,a){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let r=new Array(t.length);for(let e=0;e<r.length;e++)r[e]=t[e]*a[e];this.outputShape=r,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){var e=Wie(this.rank,"uniforms.");return`
      ${Ue()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function Wie(t,a=""){if(5<=t)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`(resRC % ${a}aShape)`;let r=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let e=0;e<t;e++)n.push(`(${r[e]} % ${a}aShape[${e}])`);return n.join()}function Uie(e){let{inputs:t,backend:n,attrs:a}=e,s=t["x"],i=a["reps"];if(n.shouldExecuteOnCPU([s])||"string"===s.dtype||5<=s.shape.length){let e=n.readSync(s.dataId),t="string"===s.dtype?e.map(e=>w.decodeString(e)):e,a=De(s.shape,s.dtype,t),r=rse(a,i);return n.makeTensorInfo(r.shape,r.dtype,r.values)}e=new Vie(s.shape,i);return n.runWebGPUProgram(e,[s],s.dtype)}var Gie={kernelName:Cr,backendName:"webgpu",kernelFunc:Uie},Hie=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${Ue()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},qie=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${Ue()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function Vi(e,t){null!==t&&e.disposeData(t.dataId)}function Pw(e){let t=1;for(;t<e;)t*=2;return t}function jie(e){let{inputs:t,backend:n,attrs:a}=e,r=t["x"],{k:s,sorted:i}=a,o=r.shape,l=o[o.length-1];if(n.shouldExecuteOnCPU([r])){var u=n.readSync(r.dataId),[d,u]=ase(u,o,r.dtype,s,i);return[n.makeTensorInfo(d.shape,d.dtype,d.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}if(0===s)return o[o.length-1]=0,[n.makeTensorInfo(o,r.dtype,[]),n.makeTensorInfo(o,"int32",[])];if(1===l)return[r,du({attrs:{shape:o,dtype:"int32",value:0},backend:n})];let p=w.sizeFromShape(o)/l,h=Me({inputs:{x:r},attrs:{shape:[p,l]},backend:n}),c=Pw(s),f=Pw(l),m=null,g=()=>null===m?[h,h]:[h,m],b=(e,t,a)=>{var r=g(),a=new Hie(a),e=[{type:"int32",data:[l]},{type:"int32",data:[null===m?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[e]},{type:"int32",data:[t]}],t=m;m=n.runWebGPUProgram(a,r,"int32",e),Vi(n,t)};for(let t=1;t<c;t*=2){var y=2*t;for(let e=t;1<=e;e/=2)b(y,e,[p,f])}for(let e=f;e>c;e/=2){var v=g(),x=new qie([p,e/2]),k=[{type:"int32",data:[l]},{type:"int32",data:[null===m?1:0]},{type:"int32",data:[c]}],I=m;m=n.runWebGPUProgram(x,v,"int32",k),Vi(n,I);var I=c/2,S=2*I;for(let e=I;1<=e;e/=2)b(S,e,m.shape)}d=m;m=cu({inputs:{x:m},backend:n,attrs:{begin:0,size:[p,s]}}),Vi(n,d);u=D2({inputs:{x:h,indices:m},backend:n,attrs:{axis:1,batchDims:1}});Vi(n,h);let C=o.slice(0,-1);C.push(s),d=m,m=Me({inputs:{x:m},attrs:{shape:C},backend:n}),Vi(n,d);d=u,u=Me({inputs:{x:u},attrs:{shape:C},backend:n});return Vi(n,d),[u,m]}var Kie={kernelName:Wo,backendName:"webgpu",kernelFunc:jie},Xie=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Ue()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function Yie(e){let{inputs:t,backend:a,attrs:r}=e,{image:n,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[d,p,h,c]=n.shape,[f,m]=null!=u?u:[p,h],g=[d,f,m,c],b=new Xie(g),y="nearest"===i?1:2,v;switch(o){case"constant":v=1;break;case"reflect":v=2;break;case"wrap":v=3;break;case"nearest":v=4;break;default:v=1}e=[{type:"int32",data:[y]},{type:"int32",data:[v]},{type:"float32",data:[l]}];return a.runWebGPUProgram(b,[n,s],"float32",e)}var Qie={kernelName:Uo,backendName:"webgpu",kernelFunc:Yie};function Zie(e){let{inputs:t,backend:a,attrs:r}=e,n=t["value"],s=r["axis"];s<0&&(s+=n.shape.length);let i=n,o=i.shape.length,l=n.shape[s],u=new Array(o-1),d=0;for(let e=0;e<o;e++)e!==s&&(u[d++]=i.shape[e]);let p=[],h=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let e=0;e<f.length;e++){h[s]=e;var m=cu({inputs:{x:i},backend:a,attrs:{begin:h,size:c}}),g=Me({inputs:{x:m},backend:a,attrs:{shape:u}});f[e]=g,p.push(m)}return p.forEach(e=>a.disposeData(e.dataId)),f}var Jie={kernelName:Go,backendName:"webgpu",kernelFunc:Zie},eoe=[Cne,use,cse,hse,vse,wse,Ise,Cse,Ase,Fse,Pse,Bse,_ne,Gse,Zse,nre,rre,ire,lre,pre,fre,vre,wre,Ire,Sre,Cre,Tre,_re,Ere,zre,Dre,Ore,Bre,Wre,Gre,jre,Yre,Zre,eae,$ne,Wse,nae,rae,iae,uae,cae,pae,hae,mae,bae,vae,wae,Iae,Cae,mre,Tae,_ae,Eae,Ese,Dae,Oae,zae,Lae,Vae,Uae,Hae,Rse,qae,Kae,Yae,Ine,Jae,nie,rie,iie,lie,pie,fie,gie,yie,$se,Pie,Mie,wie,Iie,Nie,$ie,Aie,Eie,Die,vie,bre,Bie,Gie,Kie,Qie,bse,Jie,Rae];for(let e of eoe)El(e);var toe=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,a=!1){var r=zw(e,t);if(this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.usedBuffers.has(r)||this.usedBuffers.set(r,[]),this.numBytesUsed+=e,this.numUsedBuffers++,0<this.freeBuffers.get(r).length){this.numFreeBuffers--;var n=this.freeBuffers.get(r).shift();return this.usedBuffers.get(r).push(n),n}this.numBytesAllocated+=e;t=this.device.createBuffer({mappedAtCreation:a,size:e,usage:t});return this.usedBuffers.get(r).push(t),t}releaseBuffer(a,r,n){if(0!==this.freeBuffers.size){n=zw(r,n);this.freeBuffers.has(n)||this.freeBuffers.set(n,[]),this.freeBuffers.get(n).push(a),this.numFreeBuffers++,this.numUsedBuffers--;let e=this.usedBuffers.get(n),t=e.indexOf(a);if(t<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");e.splice(t,1),this.numBytesUsed-=r}}releaseUploadBuffer(e,t,a){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,a)},e=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(e=>{e.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(e=>{e.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function zw(e,t){return`${e}_${t}`}var L2=class{constructor(){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.lastUniformData=[],this.inputTexture=null,this.layout=null,this.lastPixelSize={width:0,height:0},this.disposed=!1,this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){w.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=Be(this.outputShape),this.dispatch=_e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){var e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${Ue()}
        let flatIndexBase = index * uniforms.numChannels;
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndexBase);
            let values = ${e};
            result[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){var a;this.uniform||(a=e.createBuffer({size:4*t.length,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),this.uniform=a),!t||t.length===this.lastUniformData.length&&t.every((e,t)=>e===this.lastUniformData[t])||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,a){return this.inputTexture&&this.lastPixelSize.width===t&&this.lastPixelSize.height===a||(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,a],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=a),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return null===this.layout&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});var a=e.createBindGroupLayout({entries:t});return{bindGroupLayout:a,pipelineLayout:e.createPipelineLayout({bindGroupLayouts:[a]})}}},noe=class extends L2{constructor(){super(...arguments),this.layout=null,this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return null===this.layout&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});var a=e.createBindGroupLayout({entries:t});return{bindGroupLayout:a,pipelineLayout:e.createPipelineLayout({bindGroupLayouts:[a]})}}},soe=X().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),Mw=(e,t)=>{let a=e.limits.maxComputeWorkgroupsPerDimension,r=t.dispatchLayout,n=t.dispatch;if(n.every(e=>e<=a))return n;w.assert(n[0]>a&&void 0===r.y&&void 0===r.z,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let s=Math.ceil(Math.sqrt(n[0]));return s>a?(s=Math.ceil(Math.cbrt(n[0])),w.assert(s<=a,()=>"Total dispatch size exceeds WebGPU maximum."),[s,s,s]):[s,s,1]},B2=class extends nl{constructor(e,t=!1){if(super(),this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,!Tv())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new toe(this.device),this.tensorMap=new Ud(this,Ss()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),X().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return B2.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.stagingDisposalQueue.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.byteSize,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[]}disposeData(t,a=!1){if(this.tensorMap.has(t)){let e=this.tensorMap.get(t);if(e.refCount--,!a&&0<e.refCount)return!1;if(this.commandQueueOwnedIds.has(t))return this.tensorDisposalQueue.push(t),!1;this.maybeReleaseBuffer(t);var a=this.tensorMap.get(t)["complexTensorInfos"];null!=a&&(this.disposeData(a.real.dataId,!0),this.disposeData(a.imag.dataId,!0)),this.tensorMap.delete(t)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);null!=t&&null!=t.bufferInfo.buffer&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(t){if(this.tensorMap.has(t)){let e=this.tensorMap.get(t);e.refCount--}}write(e,t,a){if("complex64"===a&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");var r={id:this.nextDataId()},t=w.sizeFromShape(t)*jm(a);return this.tensorMap.set(r,{dtype:a,values:e,bufferInfo:{byteSize:t,usage:this.defaultGpuBufferUsage()},refCount:1}),r}move(e,t,a,r,n){if("complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");a=w.sizeFromShape(a)*jm(r);this.tensorMap.set(e,{dtype:r,values:t,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:n})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new L2),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new noe),this.fromPixelImportProgram;default:return void w.assert(!1,()=>"Unsupported fromPixels shape")}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(null!=e.values)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);var a=t.getMappedRange().slice(0);return t.unmap(),null!=t&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),X().getBool("WEBGPU_USE_PROFILE_TOOL")&&(w.assert(void 0!==this.dummyContext,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),a}convertAndCacheOnCPU(e,t){let a=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),a.values=t,a.values}readSync(e){var e=this.tensorMap.get(e)["values"];if(null==e)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return e}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);var t,a=this.tensorMap.get(e),r=a["values"];if(null!=r)return this.convertAndCacheOnCPU(e,r);let n;return n="complex64"===a.dtype?(r=(t=await Promise.all([this.read(a.complexTensorInfos.real.dataId),this.read(a.complexTensorInfos.imag.dataId)]))[0],t=t[1],S.mergeRealAndImagArrays(r,t)):b2(await this.getBufferData(a),a.dtype),this.convertAndCacheOnCPU(e,n),n}bufferSync(e){let t=this.readSync(e.dataId),a=t;if("string"===e.dtype)try{a=t.map(e=>w.decodeString(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return De(e.shape,e.dtype,a)}async time(e){let t=this.activeTimers,a=[],r=!1;null==this.programTimersStack?(this.programTimersStack=a,r=!0):this.activeTimers.push(a),this.activeTimers=a,e();let n=w.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),s=w.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},o=await Promise.all(n);return i.kernelMs=w.sum(o),i.getExtraProfileInfo=()=>o.map((e,t)=>({name:s[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,a){let r;var n;return r="string"===t&&null!=a&&0<a.length&&w.isString(a[0])?(n=a.map(e=>w.encodeString(e)),this.write(n,e,t)):this.write(a,e,t),{dataId:r,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;e=this.tensorMap.get(e.dataId);return{offset:0,size:e.bufferInfo.byteSize,buffer:e.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(a){let r=this.tensorMap.get(a);if(null==r.bufferInfo.buffer&&(r.bufferInfo.buffer=this.acquireBuffer(r.bufferInfo.byteSize),r.values)){let e=this.bufferManager.acquireUploadBuffer(r.bufferInfo.byteSize,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),t=e.getMappedRange();new("int32"===r.dtype||"bool"===r.dtype?Int32Array:Float32Array)(t).set(r.values),e.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,r.bufferInfo.buffer,0,r.bufferInfo.byteSize);a={byteSize:r.bufferInfo.byteSize,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:e};this.stagingDisposalQueue.push(a)}}makeUniforms(e){let a=0,r=[];e.forEach(e=>{0===e.data.length&&(e.data=[1]);let t;switch(e.data.length){case 1:t=4;break;case 2:t=8;break;case 3:case 4:t=16;break;default:w.assert(!1,()=>`Unsupported ${e.data.length}D shape`)}a=Math.ceil(a/t)*t,r.push(a),a+=4*e.data.length});let n=new ArrayBuffer(a);e.forEach((e,t)=>{t=r[t];new("int32"===e.type?Int32Array:"uint32"===e.type?Uint32Array:Float32Array)(n,t,e.data.length).set(e.data)});e=this.acquireBuffer(a,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(e,0,n,0,a),{offset:0,size:a,buffer:e}}createLayout(t){let a=[];a.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let e=0;e<t;e++)a.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});a.push({binding:t+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});var e=this.device.createBindGroupLayout({entries:a});return{bindGroupLayout:e,pipelineLayout:this.device.createPipelineLayout({bindGroupLayouts:[e]})}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(a,e,t,r,n){if(!n){if(n=this.makeTensorInfo(a.outputShape,t),0===w.sizeFromShape(n.shape)){let e=this.tensorMap.get(n.dataId);return e.values=w.getTypedArrayFromDType(n.dtype,0),n}this.uploadToGPU(n.dataId)}a.dispatch=Mw(this.device,a);let s=[{type:"float32",data:[NaN]}],i=e.concat(n).map(e=>e.shape);i.map(e=>{s.push({type:"int32",data:e})});t=w.computeStrides(n.shape);s.push({type:"int32",data:t}),a.size&&(t=w.sizeFromShape(a.outputShape),s.push({type:"int32",data:[a.isVec4?t/4:t]})),r&&(s=[...s,...r]);let o=this.makeUniforms(s),l=e.map((e,t)=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(e.dataId),{dtype:this.tensorMap.get(e.dataId).dtype,shape:e.shape,name:a.variableNames[t]}}),u=l.map(e=>e.dtype).concat(n.dtype),d=l.map(e=>S.getBroadcastDims(e.shape,n.shape)),p=l.map(e=>w.arraysEqual(e.shape,n.shape)).join("_"),h=d.map(e=>e.join("_")).join(";"),c=R2(a,i,u,h,p),{bindGroupLayout:f,pipelineLayout:m}=this.getCachedOrCreateLayout(a.variableNames.length),g=this.getAndSavePipeline(c,()=>E2(this.device,a,m,l,n)),b=null!=this.activeTimers,y=Pre(this.device,f,e.map(e=>this.tensorToBinding(e)),this.tensorToBinding(n),o);this.ensureCommandEncoderReady();let v=this.getComputePass();b&&this.supportTimeQuery&&v.writeTimestamp(this.querySet,0),v.setPipeline(g),v.setBindGroup(0,y),v.dispatch(a.dispatch[0],a.dispatch[1],a.dispatch[2]),b&&this.supportTimeQuery&&v.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,e.forEach(e=>{this.commandQueueOwnedIds.add(e.dataId)}),this.commandQueueOwnedIds.add(n.dataId);e={byteSize:o.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:o.buffer};return this.uniformDisposalQueue.push(e),X().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),b&&this.activeTimers.push({name:a.constructor.name,query:this.getQueryTime(this.querySet)}),n}runFromPixelsProgram(e,t,a,r,n){e.dispatch=Mw(this.device,e);r=this.device.createBindGroup({layout:a.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:r},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let s=this.getComputePass(),i=null!=this.activeTimers;i&&this.supportTimeQuery&&s.writeTimestamp(this.querySet,0),s.setPipeline(e.pipeline),s.setBindGroup(0,r),s.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),i&&this.supportTimeQuery&&s.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(n),this.submitQueue(),i&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),a=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,a,0,16),this.submitQueue(),await a.mapAsync(GPUMapMode.READ);e=new BigUint64Array(a.getMappedRange()),e=Number(e[1]-e[0]);return a.unmap(),this.bufferManager.releaseBuffer(a,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),e/1e6}shouldExecuteOnCPU(e,t=soe){return X().getBool("WEBGPU_CPU_FORWARD")&&e.every(e=>null==this.tensorMap.get(e.dataId).bufferInfo.buffer&&w.sizeFromShape(e.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},Ev=B2;Ev.nextDataId=0;var roe={};Ae(roe,{WebGPUBackend:()=>Ev,webgpu_util:()=>m2}),Tv()&&pp("webgpu",async()=>{X().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:X().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),a=t.limits,r={},n=t.features.has("timestamp-query");r.requiredLimits={maxComputeWorkgroupStorageSize:a.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:a.maxComputeWorkgroupsPerDimension},n?r.requiredFeatures=["timestamp-query"]:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");var s=await t.requestDevice(r);return new Ev(s,n)},3);var V2,It=(e=>(e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64",e))(It||{}),Jp=(e=>(e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu",e))(Jp||{});function aoe(e){V2=e.wasm.cwrap(ra,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function ioe(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==n.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:p}=r,h=a.dataIdMap.get(n.dataId).id,c=a.dataIdMap.get(s.dataId).id,f=0;if(null!=i){var m=a.dataIdMap.get(i.dataId);if(1!==m.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${m.shape.length}.`);f=m.id}var g=null==o?0:a.dataIdMap.get(o.dataId).id,b=Jp[d];if(null==b)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);var y=l?n.shape[2]:n.shape[1],v=u?s.shape[1]:s.shape[2],e=jo.assertAndGetBroadcastShape(n.shape.slice(0,-2),s.shape.slice(0,-2)),m=a.makeOutput([...e,y,v],n.dtype),e=a.dataIdMap.get(m.dataId).id,y=new Uint8Array(new Int32Array(n.shape).buffer),v=new Uint8Array(new Int32Array(s.shape).buffer);return V2(h,y,n.shape.length,c,v,s.shape.length,l,u,b,f,g,p||0,e),m}var ooe={kernelName:ra,backendName:"wasm",setupFunc:aoe,kernelFunc:ioe};function Xt(t,i){let o;return{kernelName:t,backendName:"wasm",setupFunc:function(e){o=e.wasm.cwrap(t,null,["number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:{x:a}}=e,r=t.dataIdMap.get(a.dataId).id,n=t.makeOutput(a.shape,i||a.dtype),s=t.dataIdMap.get(n.dataId).id;return 0===w.sizeFromShape(n.shape)||o(r,It[a.dtype],s),n}}}var uoe=Xt(io);function gn(t,e,c){let f;return{kernelName:t,backendName:"wasm",setupFunc:function(e){f=e.wasm.cwrap(t,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:a}=e,{a:r,b:n}=a,s=t.dataIdMap.get(r.dataId).id,i=t.dataIdMap.get(n.dataId).id,o=null!=c?c:r.dtype,l=S.assertAndGetBroadcastShape(r.shape,n.shape),u=t.makeOutput(l,o);if(0===w.sizeFromShape(l))return u;let d=new Uint8Array(new Int32Array(r.shape).buffer),p=new Uint8Array(new Int32Array(n.shape).buffer),h=t.dataIdMap.get(u.dataId).id;return f(s,d,r.shape.length,i,p,n.shape.length,It[r.dtype],h),u}}}var W2,loe=!0,coe=gn(Ir,loe);function doe(e){W2=e.wasm.cwrap(ka,null,["array","number","number","number"])}function poe(e){let{inputs:t,backend:a}=e,r=a.makeOutput(t[0].shape,t[0].dtype);if(0===w.sizeFromShape(r.shape))return r;var n=t.map(e=>a.dataIdMap.get(e.dataId).id),s=new Uint8Array(new Int32Array(n).buffer),e=a.dataIdMap.get(r.dataId).id;return W2(s,n.length,It[r.dtype],e),r}var hoe={kernelName:ka,backendName:"wasm",setupFunc:doe,kernelFunc:poe};function eh(e){let{inputs:{x:t},backend:a}=e,r=a.makeOutput(t.shape,t.dtype),n=a.typedArrayFromHeap(t);return a.typedArrayFromHeap(r).set(n),r}var U2,foe={kernelName:Ba,backendName:"wasm",kernelFunc:eh};function moe(e){U2=e.wasm.cwrap(pi,null,["number","array","number","number","number","array","number"])}function wr(e){let{inputs:t,backend:a,attrs:r}=e,[n,s]=boe(t.x.shape,r.perm),i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);var o=goe(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:n,dtype:t.x.dtype};if(i){let e=eh({inputs:t,backend:a});return e.shape=o,e}var u=a.makeOutput(o,l.dtype),d=a.dataIdMap.get(l.dataId).id,p=a.dataIdMap.get(u.dataId).id,e=new Uint8Array(new Int32Array(s).buffer),o=new Uint8Array(new Int32Array(l.shape).buffer);return U2(d,o,l.shape.length,It[l.dtype],p,e,s.length),u}function goe(t,a){let r=new Array(t.length);for(let e=0;e<r.length;e++)r[e]=t[a[e]];return r}function boe(t,a){let r=[],n=[];for(let e=0;e<t.length;++e)1!==t[e]&&r.push(t[e]),1!==t[a[e]]&&n.push(a[e]);for(let a=0;a<n.length;++a){let t=-1;for(let e=0;e<n.length;++e)n[e]>=a&&(-1===t||n[t]>n[e])&&(t=e);n[t]=a}return[r,n]}var G2,yoe={kernelName:pi,backendName:"wasm",kernelFunc:wr,setupFunc:moe};function Fr(e,t,a){let r=e.shape,n=e.shape.length,s=w.parseAxisParam(t,r),i=s,o=S.getAxesPermutation(i,n),l=null,u=!1;if(null!=o){let t=new Array(n);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=S.getInnerMostAxes(i.length,n),l=wr({inputs:{x:e},attrs:{perm:o},backend:a});e=a.dataIdMap.get(e.dataId).id;a.dataIdMap.get(l.dataId).id!==e&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}function voe(e){G2=e.wasm.cwrap(al,null,["number, number, number"])}function xoe(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n,keepDims:s}=r,i=a["x"],o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Fr(i,n,t);h&&(f=t.dataIdMap.get(u.dataId).id,l=u,o=f);var c,f=l.shape.length;S.assertAxesAreInnerMostDims("all",d,f);let[m,g]=S.computeOutAndReduceShapes(l.shape,d),b=w.sizeFromShape(g),y=t.makeOutput(m,i.dtype);return 0!==w.sizeFromShape(l.shape)&&(c=t.dataIdMap.get(y.dataId).id,G2(o,b,c)),h&&t.disposeData(u.dataId),s&&(c=S.expandShapeToKeepDim(y.shape,p),y.shape=c),y}var H2,woe={kernelName:al,backendName:"wasm",setupFunc:voe,kernelFunc:xoe};function koe(e){H2=e.wasm.cwrap(il,null,["number, number, number"])}function Ioe(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n,keepDims:s}=r,i=a["x"],o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Fr(i,n,t);h&&(f=t.dataIdMap.get(u.dataId).id,l=u,o=f);var c,f=l.shape.length;S.assertAxesAreInnerMostDims("any",d,f);let[m,g]=S.computeOutAndReduceShapes(l.shape,d),b=w.sizeFromShape(g),y=t.makeOutput(m,i.dtype);return 0!==w.sizeFromShape(l.shape)&&(c=t.dataIdMap.get(y.dataId).id,H2(o,b,c)),h&&t.disposeData(u.dataId),s&&(c=S.expandShapeToKeepDim(y.shape,p),y.shape=c),y}var q2,Soe={kernelName:il,backendName:"wasm",setupFunc:koe,kernelFunc:Ioe};function Coe(e){q2=e.wasm.cwrap(Ia,null,["number","number","number","number","number"])}function Noe(e){let{backend:t,inputs:a,attrs:r}=e,n=r["axis"],s=a["x"],i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:u,axes:d,inputWasTransposed:p}=Fr(s,n,t);!p||(f=t.dataIdMap.get(u.dataId).id)!==i&&(l=u,o=f);var h=l.shape.slice(0,-1),c=t.makeOutput(h,"int32"),e=t.dataIdMap.get(c.dataId).id,f=w.sizeFromShape(c.shape),h=l.shape[d[0]];return q2(o,It[l.dtype],f,h,e),p&&t.disposeData(u.dataId),c}var j2,Toe={kernelName:Ia,backendName:"wasm",kernelFunc:Noe,setupFunc:Coe};function $oe(e){j2=e.wasm.cwrap(Sa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function _oe(e){let{inputs:t,attrs:a,backend:r}=e,n=t.x,s=r.dataIdMap.get(n.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a,d=S.computePool2DInfo(n.shape,i,o,1,l,u),p=d.filterHeight,h=d.filterWidth,c=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,b=d.strideHeight,y=d.strideWidth,v=d.inChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);if(1!==d.dilationWidth||1!==d.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${d.dilationHeight}, ${d.dilationWidth}].`);var x=r.makeOutput(d.outShape,"float32"),e=r.dataIdMap.get(x.dataId).id;return j2(s,n.shape[0],n.shape[1],n.shape[2],p,h,c,f,m,g,b,y,v,e),x}var Aoe={kernelName:Sa,backendName:"wasm",setupFunc:$oe,kernelFunc:_oe};function yn(e){let{inputs:t,attrs:a}=e,r=t["x"],n=a["shape"],s=w.sizeFromShape(r.shape),i=w.inferFromImplicitShape(n,s);return w.assert(s===w.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var K2,Eoe={kernelName:Eo,backendName:"wasm",kernelFunc:yn};function Roe(e){K2=e.wasm.cwrap(Ca,null,["number","array","number","number","array","number","number","number","number"])}function Doe(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==n.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=n.shape.length,u=s.shape.length,d=i?n.shape[l-2]:n.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],h=i?n.shape[l-1]:n.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=n.shape.slice(0,-2),m=s.shape.slice(0,-2),g=w.sizeFromShape(f),b=w.sizeFromShape(m),y=jo.assertAndGetBroadcastShape(n.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,c]);w.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${n.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let v=i?[g,d,h]:[g,h,d],x=o?[b,c,p]:[b,p,c],k=yn({inputs:{x:n},backend:a,attrs:{shape:v}}),I=yn({inputs:{x:s},backend:a,attrs:{shape:x}}),S=a.dataIdMap.get(k.dataId).id,C=a.dataIdMap.get(I.dataId).id,N=i?k.shape[2]:k.shape[1],T=o?I.shape[1]:I.shape[2],$=Math.max(g,b),_=a.makeOutput([$,N,T],k.dtype),A=a.dataIdMap.get(_.dataId).id,E=new Uint8Array(new Int32Array(k.shape).buffer),R=new Uint8Array(new Int32Array(I.shape).buffer);return K2(S,E,k.shape.length,C,R,I.shape.length,i,o,A),a.disposeData(k.dataId),a.disposeData(I.dataId),_.shape=y,_}var Foe={kernelName:Ca,backendName:"wasm",setupFunc:Roe,kernelFunc:Doe};function va(e){let{inputs:{x:t},attrs:{begin:a,size:r},backend:n}=e,[s,i]=wt.parseSliceParams(t,a,r),o=wt.isSliceContinous(t.shape,s,i),l=n.readSync(t.dataId),u=n.makeOutput(i,t.dtype),d=w.computeStrides(t.shape),p=n.dataIdMap.get(u.dataId);if(o){e=wt.computeFlatOffset(s,d);return"string"===t.dtype?p.stringBytes=l.slice(e,e+w.sizeFromShape(i)):n.typedArrayFromHeap(u).set(l.subarray(e,e+w.sizeFromShape(i))),u}if("string"===t.dtype){var h=Fd(l,s,i,t.shape,t.dtype);return p.stringBytes=h,u}let c=n.typedArrayFromHeap(u),f=t.shape.length;return 2===f?Ooe(l,d[0],c,s,i):3===f?Poe(l,d[0],d[1],c,s,i):4===f?zoe(l,d[0],d[1],d[2],c,s,i):(h=Fd(l,s,i,t.shape,t.dtype),c.set(h)),u}function Ooe(t,a,r,e,n){let s=0,i=e[0],o=e[1],l=i+n[0];for(let e=i;e<l;e++){var u=e*a+o;r.set(t.subarray(u,u+n[1]),s),s+=n[1]}}function Poe(a,r,n,s,e,i){let o=0,l=e[0],u=e[1],d=e[2],p=l+i[0],h=u+i[1];for(let t=l;t<p;t++)for(let e=u;e<h;e++){var c=t*r+e*n+d;s.set(a.subarray(c,c+i[2]),o),o+=i[2]}}function zoe(r,n,s,i,o,e,l){let u=0,t=e[0],d=e[1],p=e[2],h=t+l[0],c=d+l[1],f=p+l[2],m=e[3];for(let a=t;a<h;a++)for(let t=d;t<c;t++)for(let e=p;e<f;e++){var g=a*n+t*s+e*i+m;o.set(r.subarray(g,g+l[3]),u),u+=l[3]}}var Moe={kernelName:Po,backendName:"wasm",kernelFunc:va};function Loe(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{blockShape:s,crops:i}=r,o=s.reduce((e,t)=>e*t),l=S.getReshaped(n.shape,s,o),u=S.getPermuted(l.length,s.length),d=S.getReshapedPermuted(n.shape,s,o),p=S.getSliceBeginCoords(i,s.length),h=S.getSliceSize(d,i,s.length),c=yn({inputs:{x:n},backend:a,attrs:{shape:l}}),f=wr({inputs:{x:c},backend:a,attrs:{perm:u}}),m=yn({inputs:{x:f},backend:a,attrs:{shape:d}}),g=va({inputs:{x:m},backend:a,attrs:{begin:p,size:h}});return a.disposeData(c.dataId),a.disposeData(f.dataId),a.disposeData(c.dataId),g}var Boe={kernelName:oo,backendName:"wasm",kernelFunc:Loe};function ac(e){let{inputs:{x:t},attrs:{dtype:a},backend:r}=e,n=r.makeOutput(t.shape,a),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(n).set(s),n}var X2,Voe={kernelName:Na,backendName:"wasm",kernelFunc:ac},Woe=Xt(Ta);function Uoe(e){X2=e.wasm.cwrap(Sr,null,["number","number","number","number"])}function Goe(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{clipValueMin:s,clipValueMax:i}=r,o=a.dataIdMap.get(n.dataId).id,l=a.makeOutput(n.shape,n.dtype),u=a.dataIdMap.get(l.dataId).id;return X2(o,s,i,u),l}var Hoe={kernelName:Sr,backendName:"wasm",setupFunc:Uoe,kernelFunc:Goe};function Y2(r){let{inputs:n,backend:s}=r,i=w.parseAxisParam(r.attrs.axis,n[0].shape)[0],o=S.computeOutShape(n.map(e=>e.shape),i),l=n.filter(e=>0<w.sizeFromShape(e.shape));if(1===l.length)return eh({inputs:{x:l[0]},backend:s});let u=s.makeOutput(o,n[0].dtype);if(0===w.sizeFromShape(o))return u;var d=l.map(e=>e.shape);if(S.assertParamsConsistent(d,i),"string"===l[0].dtype){let e=l.map(e=>{var t=w.sizeFromShape(e.shape.slice(i));return yn({inputs:{x:e},backend:s,attrs:{shape:[-1,t]}})}),t=e.map(e=>({vals:s.readSync(e.dataId),shape:e.shape}));o=S.computeOutShape(e.map(e=>e.shape),1);r=1===e[0].shape[0],d=tv(t,o,n[0].dtype,r),r=S.computeOutShape(l.map(e=>e.shape),i);u.shape=r;let a=s.dataIdMap.get(u.dataId);return a.stringBytes=S.fromStringArrayToUint8(d),e.forEach(e=>s.disposeData(e.dataId)),u}let e=w.sizeFromShape(l[0].shape.slice(0,i)),p=0,h=l.map(e=>{e=w.sizeFromShape(e.shape.slice(i));return p+=e,e}),c=l.map(e=>s.typedArrayFromHeap(e)),f=s.typedArrayFromHeap(u);for(let a=0;a<e;a++){let t=a*p;for(let e=0;e<c.length;e++){var m=h[e],g=a*m,g=c[e].subarray(g,g+m);f.set(g,t),t+=m}}return u}var Q2,qoe={kernelName:uo,backendName:"wasm",kernelFunc:Y2};function joe(e){Q2=e.wasm.cwrap($a,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Koe(e){let{inputs:t,attrs:a,backend:r}=e,{x:n,filter:s}=t,i=r.dataIdMap.get(n.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:p,dataFormat:h}=a,c=S.convertConv2DDataFormat(h),f=S.computeConv2DInfo(n.shape,s.shape,l,u,d,p,!1,c),m=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,y=f.padInfo.right,v=f.padInfo.bottom,x=f.padInfo.left,w=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,C=f.strideWidth,N=f.inChannels,T=f.outChannels,$="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);var _=r.makeOutput(f.outShape,"float32"),e=r.dataIdMap.get(_.dataId).id;return Q2(i,n.shape[0],n.shape[1],n.shape[2],o,m,g,b,y,v,x,$,w,k,I,C,N,T,e),_}var Z2,Xoe={kernelName:$a,backendName:"wasm",setupFunc:joe,kernelFunc:Koe};function Yoe(e){Z2=e.wasm.cwrap(_a,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Qoe(e){let{backend:t,inputs:a,attrs:r}=e,{dy:n,filter:s}=a,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:d}=r,p=S.convertConv2DDataFormat(l),h=S.computeConv2DInfo(d,s.shape,i,1,o,u,!1,p),{batchSize:c,filterHeight:f,filterWidth:m,inChannels:g,inHeight:b,inWidth:y,outChannels:v,outHeight:x,outWidth:k,strideHeight:I,strideWidth:C}=h,N=f-1-h.padInfo.top,T=m-1-h.padInfo.left,$="channelsLast"===h.dataFormat,_=w.computeStrides(h.inShape),A=w.computeStrides(n.shape),[E,R,F]=w.computeStrides(s.shape),O=_[0],M=$?_[1]:_[2],D=$?_[2]:1,z=$?1:_[1],L=A[0],P=$?A[1]:A[2],B=$?A[2]:1,W=$?1:A[1],U=t.makeOutput(h.inShape,"float32"),V=t.dataIdMap.get(U.dataId).id,G=t.dataIdMap.get(n.dataId).id,j=t.dataIdMap.get(s.dataId).id;return Z2(G,j,c,f,m,b,y,g,x,k,v,I,C,N,T,E,R,F,O,M,D,z,L,P,B,W,V),U}var eN,Zoe={kernelName:_a,backendName:"wasm",setupFunc:Yoe,kernelFunc:Qoe},Joe=Xt(Aa),eue=Xt(Ea),J2=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(J2||{});function tue(e){eN=e.wasm.cwrap(co,null,["number","number","number","number","array","number","number","number","number","number"])}function nue(e){let{backend:t,inputs:a,attrs:r}=e,{method:n,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:l,boxInd:u}=a,d=l.shape[0],[p,h]=i,c=[d,p,h,o.shape[3]],f=t.dataIdMap.get(o.dataId),m;"float32"!==o.dtype&&(m=ac({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));var g=f.id,b=t.dataIdMap.get(l.dataId).id,y=t.dataIdMap.get(u.dataId).id,v=t.makeOutput(c,"float32"),x=t.dataIdMap.get(v.dataId).id,e=new Uint8Array(new Int32Array(o.shape).buffer);return eN(g,b,y,d,e,p,h,J2[n],s,x),null!=m&&t.disposeData(m.dataId),v}var tN,sue={kernelName:co,backendName:"wasm",setupFunc:tue,kernelFunc:nue};function rue(e){tN=e.wasm.cwrap(hl,null,["number","number","number","number","number","number"])}function aue(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{axis:s,exclusive:i,reverse:o}=r,l=n.shape.length;w.assert("float32"===n.dtype||"int32"===n.dtype,()=>`cumprod does not support ${n.dtype} tensors in the WASM backend`);let u=S.getAxesPermutation([s],l),d=n;null!==u&&(d=wr({inputs:{x:n},attrs:{perm:u},backend:a}));var p=S.getInnerMostAxes(1,l)[0];S.assertAxesAreInnerMostDims("cumprod",[p],l);var h=a.makeOutput(d.shape,d.dtype),c=d.shape[p],e=a.dataIdMap.get(d.dataId).id,p=a.dataIdMap.get(h.dataId).id;tN(e,i?1:0,o?1:0,c,p,It[n.dtype]);let f=h;return null!==u&&(p=S.getUndoAxesPermutation(u),f=wr({inputs:{x:h},attrs:{perm:p},backend:a}),a.disposeData(d.dataId),a.disposeData(h.dataId)),f}var nN,iue={kernelName:hl,backendName:"wasm",setupFunc:rue,kernelFunc:aue};function oue(e){nN=e.wasm.cwrap(lo,null,["number","number","number","number","number","number"])}function uue(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{axis:s,exclusive:i,reverse:o}=r,l=n.shape.length;w.assert("float32"===n.dtype||"int32"===n.dtype,()=>`cumsum does not support ${n.dtype} tensors in the WASM backend`);let u=S.getAxesPermutation([s],l),d=n;null!==u&&(d=wr({inputs:{x:n},attrs:{perm:u},backend:a}));var p=S.getInnerMostAxes(1,l)[0];S.assertAxesAreInnerMostDims("cumsum",[p],l);var h=a.makeOutput(d.shape,d.dtype),c=d.shape[p],e=a.dataIdMap.get(d.dataId).id,p=a.dataIdMap.get(h.dataId).id;nN(e,i?1:0,o?1:0,c,p,It[n.dtype]);let f=h;return null!==u&&(p=S.getUndoAxesPermutation(u),f=wr({inputs:{x:h},attrs:{perm:p},backend:a}),a.disposeData(d.dataId),a.disposeData(h.dataId)),f}var sN,lue={kernelName:lo,backendName:"wasm",setupFunc:oue,kernelFunc:uue};function cue(e){sN=e.wasm.cwrap(po,null,["number","number","number","array","number","array","array","number","number"])}function due(e){let{backend:t,inputs:a,attrs:r}=e,n=a["x"],{blockSize:s,dataFormat:i}=r,o=n.shape[0],l="NHWC"===i?n.shape[1]:n.shape[2],u="NHWC"===i?n.shape[2]:n.shape[3],d="NHWC"===i?n.shape[3]:n.shape[1],p=l*s,h=u*s,c=d/(s*s),f="NHWC"===i?[o,p,h,c]:[o,c,p,h],m=t.makeOutput(f,"float32"),g=t.dataIdMap.get(n.dataId).id,b=new Uint8Array(new Int32Array(w.computeStrides(n.shape)).buffer),y=new Uint8Array(new Int32Array(f).buffer),v=new Uint8Array(new Int32Array(w.computeStrides(f)).buffer),x=t.dataIdMap.get(m.dataId).id;return sN(g,s,"NHWC"===i?1:0,b,n.shape.length-1,y,v,f.length,x),m}var rN,pue={kernelName:po,backendName:"wasm",setupFunc:cue,kernelFunc:due};function hue(e){rN=e.wasm.cwrap(Ra,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function fue(e){let{inputs:t,attrs:a,backend:r}=e,{x:n,filter:s}=t,i=r.dataIdMap.get(n.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:p}=a,h=null==u?[1,1]:u,c=S.computeConv2DInfo(n.shape,s.shape,l,h,d,p,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,b=c.padInfo.right,y=c.padInfo.bottom,v=c.padInfo.left,x=c.dilationHeight,w=c.dilationWidth,k=c.strideHeight,I=c.strideWidth,C=c.inChannels,N=c.outChannels,T="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);var $=r.makeOutput(c.outShape,"float32"),e=r.dataIdMap.get($.dataId).id;return rN(i,n.shape[0],n.shape[1],n.shape[2],o,f,m,g,b,y,v,T,x,w,k,I,C,N,e),$}var mue={kernelName:Ra,backendName:"wasm",setupFunc:hue,kernelFunc:fue},gue=Xt(Fa),bue=!1,yue=gn(ho,bue,"bool"),vue=Xt(Oa,"float32");function Zm(e){let{inputs:t,attrs:a,backend:r}=e,n=t["input"],s=a["dim"],i=n.shape.length,o=n.shape.slice(),l=s;return s<0&&(w.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),yn({inputs:{x:n},backend:r,attrs:{shape:o}})}var xue={kernelName:fo,backendName:"wasm",kernelFunc:Zm};function aN(e){let{attrs:{shape:t,value:a,dtype:r},backend:n}=e,s=n.makeOutput(t,r);return n.typedArrayFromHeap(s).fill(a),s}var iN,wue={kernelName:ml,backendName:"wasm",kernelFunc:aN};function kue(e){iN=e.wasm.cwrap(go,null,["number","number","number","number","number","number"])}function Iue(e){let{inputs:t,backend:a}=e,r=t["image"],n=a.makeOutput(r.shape,r.dtype),s=a.dataIdMap.get(r.dataId).id,i=a.dataIdMap.get(n.dataId).id,[o,l,u,d]=r.shape;return iN(s,o,l,u,d,i),n}var oN,Sue={kernelName:go,backendName:"wasm",kernelFunc:Iue,setupFunc:kue},Cue=Xt(Pa),Nue=!1,Tue=gn(za,Nue);function $ue(e){oN=e.wasm.cwrap(Ma,null,["number","number","number","number","number","number","number"])}function _ue(e){let{backend:t,inputs:a,attrs:r}=e,n=r["varianceEpsilon"],{x:s,mean:i,variance:o,offset:l,scale:u}=a,d=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,h=t.dataIdMap.get(o.dataId).id,c=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===w.sizeFromShape(s.shape))return m;e=t.dataIdMap.get(m.dataId).id;return oN(d,p,h,c,f,n,e),m}var uN,Aue={kernelName:Ma,backendName:"wasm",setupFunc:$ue,kernelFunc:_ue};function Eue(e){uN=e.wasm.cwrap(aa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Rue(e){let{inputs:t,attrs:a,backend:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=a,m=S.computeConv2DInfo(n.shape,s.shape,l,d,u,h),g=Jp[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let b=r.dataIdMap.get(n.dataId).id,y=r.dataIdMap.get(s.dataId).id,v=m.outChannels,x=0;if(null!=i){var w=r.dataIdMap.get(i.dataId);if(1!==w.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${w.shape.length}.`);if(w.shape[0]!==v)throw new Error(`FusedConv2D bias shape (${w.shape}) does not match the number of output channels (${v})`);x=w.id}var k=m.filterHeight,I=m.filterWidth,C=m.padInfo.top,N=m.padInfo.right,T=m.padInfo.bottom,$=m.padInfo.left,_=m.dilationHeight,A=m.dilationWidth,E=m.strideHeight,R=m.strideWidth,F=m.inChannels,O="SAME"===m.padInfo.type?1:0,M=m.batchSize,D=m.inHeight,z=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);var L=r.makeOutput(m.outShape,"float32"),e=r.dataIdMap.get(L.dataId).id,w=null==o?0:r.dataIdMap.get(o.dataId).id;return uN(b,M,D,z,y,k,I,x,C,N,T,$,O,_,A,E,R,F,v,g,w,f||0,e),L}var lN,Due={kernelName:aa,backendName:"wasm",setupFunc:Eue,kernelFunc:Rue};function Fue(e){lN=e.wasm.cwrap(ia,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Oue(e){let{inputs:t,attrs:a,backend:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=a,m=S.computeConv2DInfo(n.shape,s.shape,l,d,u,h,!0),g=Jp[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let b=r.dataIdMap.get(n.dataId).id,y=r.dataIdMap.get(s.dataId).id,v=m.outChannels,x=0;if(null!=i){var w=r.dataIdMap.get(i.dataId);if(1!==w.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${w.shape.length}.`);if(w.shape[0]!==v)throw new Error(`FusedDepthwiseConv2D bias shape (${w.shape}) does not match the number of output channels (${v})`);x=w.id}var k=m.filterHeight,I=m.filterWidth,C=m.padInfo.top,N=m.padInfo.right,T=m.padInfo.bottom,$=m.padInfo.left,_=m.dilationHeight,A=m.dilationWidth,E=m.strideHeight,R=m.strideWidth,F=m.inChannels,O="SAME"===m.padInfo.type?1:0,M=m.batchSize,D=m.inHeight,z=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);var L=r.makeOutput(m.outShape,"float32"),e=r.dataIdMap.get(L.dataId).id,w=null==o?0:r.dataIdMap.get(o.dataId).id;return lN(b,M,D,z,y,k,I,x,C,N,T,$,O,_,A,E,R,F,v,g,w,f||0,e),L}var cN,Pue={kernelName:ia,backendName:"wasm",setupFunc:Fue,kernelFunc:Oue};function zue(e){cN=e.wasm.cwrap(yo,null,["number","number","number","number","number","number","array","number"])}function Mue(e){let{backend:t,inputs:a}=e,{params:r,indices:n}=a,[s,i,o,l]=$k.prepareAndValidate(r,n),u=t.makeOutput(s,r.dtype);if(0===i)return u;var d=n.shape,p=d[d.length-1],h=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(n.dataId).id,e=new Uint8Array(new Int32Array(l).buffer),d=t.dataIdMap.get(u.dataId).id;return cN(h,It[r.dtype],c,i,p,o,e,d),u}var dN,Lue={kernelName:yo,backendName:"wasm",setupFunc:zue,kernelFunc:Mue};function Bue(e){dN=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Vue(e){let{backend:t,inputs:a,attrs:r}=e,{x:n,indices:s}=a,{axis:i,batchDims:o}=r,l=w.parseAxisParam(i,n.shape)[0],u=t.readSync(s.dataId),d=n.shape[l];for(let t=0;t<u.length;++t){let e=u[t];w.assert(e<=d-1&&0<=e,()=>`GatherV2: the index value ${e} is not in [0, ${d-1}]`)}let p=S.segment_util.collectGatherOpShapeInfo(n,s,l,o),h=yn({inputs:{x:n},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),c=w.sizeFromShape(s.shape),f=yn({inputs:{x:s},attrs:{shape:[p.batchSize,c/p.batchSize]},backend:t}),m=[p.batchSize,p.outerSize,c/p.batchSize,p.sliceSize],g=t.makeOutput(m,n.dtype);if(0===w.sizeFromShape(n.shape))return g;var b=h.shape.length-1,y=t.dataIdMap.get(h.dataId).id,v=t.dataIdMap.get(f.dataId).id,x=t.dataIdMap.get(g.dataId).id,k=new Uint8Array(new Int32Array(w.computeStrides(h.shape)).buffer),e=new Uint8Array(new Int32Array(w.computeStrides(m)).buffer);return dN(y,It[n.dtype],k,b,v,p.batchSize,e,x),t.disposeData(h.dataId),t.disposeData(f.dataId),g.shape=p.outputShape,g}var pN,Wue={kernelName:bo,backendName:"wasm",setupFunc:Bue,kernelFunc:Vue},Uue=!1,Gue=gn(vo,Uue,"bool"),Hue=!1,que=gn(La,Hue,"bool");function jue(e){pN=e.wasm.cwrap(Va,null,["number","number","number","number"])}function Kue(e){let{inputs:{x:t},attrs:{alpha:a},backend:r}=e,n=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");return 0!==w.sizeFromShape(t.shape)&&(e=r.dataIdMap.get(s.dataId).id,pN(n,It[t.dtype],a,e)),s}var hN,Xue={kernelName:Va,backendName:"wasm",setupFunc:jue,kernelFunc:Kue},Yue=!1,Que=gn(xo,Yue,"bool"),Zue=!1,Jue=gn(wo,Zue,"bool"),ele=Xt(Wa),tle=!1,nle=gn(ko,tle,"bool");function sle(e){hN=e.wasm.cwrap(Ua,null,["number","number","number","number"])}function rle(e){let{backend:t,inputs:a,attrs:r}=e,{reductionIndices:n,keepDims:s}=r,i=a["x"],o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Fr(i,n,t);h&&(f=t.dataIdMap.get(u.dataId).id,l=u,o=f);var c,f=l.shape.length;S.assertAxesAreInnerMostDims("max",d,f);let[m,g]=S.computeOutAndReduceShapes(l.shape,d),b=w.sizeFromShape(g),y=t.makeOutput(m,i.dtype);return 0!==w.sizeFromShape(l.shape)&&(c=t.dataIdMap.get(y.dataId).id,hN(o,It[i.dtype],b,c)),h&&t.disposeData(u.dataId),s&&(c=S.expandShapeToKeepDim(y.shape,p),y.shape=c),y}var fN,ale={kernelName:Ua,backendName:"wasm",setupFunc:sle,kernelFunc:rle},ile=!1,ole=gn(Ga,ile);function ule(e){fN=e.wasm.cwrap(Ha,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function lle(e){let{inputs:t,attrs:a,backend:r}=e,n=t.x,s=r.dataIdMap.get(n.dataId).id;w.assert("float32"===n.dtype,()=>`Error in MaxPool: only float32 input is supported. Got ${n.dtype}.`);var{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a,d=S.computePool2DInfo(n.shape,i,o,1,l,u),p=d.filterHeight,h=d.filterWidth,c=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,b=d.dilationHeight,y=d.dilationWidth,e=d.strideHeight,i=d.strideWidth,o=d.inChannels,l=d.outChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);u=r.makeOutput(d.outShape,"float32"),d=r.dataIdMap.get(u.dataId).id;return fN(s,n.shape[0],n.shape[1],n.shape[2],p,h,c,f,m,g,b,y,e,i,o,l,d),u}var mN,cle={kernelName:Ha,backendName:"wasm",setupFunc:ule,kernelFunc:lle};function dle(e){mN=e.wasm.cwrap(qa,null,["number, number, number"])}function ple(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n,keepDims:s}=r,i=a["x"],o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:p,originalAxes:h,inputWasTransposed:c}=Fr(i,n,t),f=p;var m;!c||(e=t.dataIdMap.get(d.dataId).id)!==o&&(u=d,l=e,f=S.getInnerMostAxes(f.length,u.shape.length)),S.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[g,b]=S.computeOutAndReduceShapes(u.shape,f),y=w.sizeFromShape(b),v=u;"float32"!==u.dtype&&(v=ac({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(v.dataId).id);let x=t.makeOutput(g,"float32");return 0!==w.sizeFromShape(u.shape)&&(m=t.dataIdMap.get(x.dataId).id,mN(l,y,m)),c&&t.disposeData(d.dataId),s&&(m=S.expandShapeToKeepDim(x.shape,h),x.shape=m),"float32"!==u.dtype&&t.disposeData(v.dataId),x}var gN,hle={kernelName:qa,backendName:"wasm",setupFunc:dle,kernelFunc:ple};function fle(e){gN=e.wasm.cwrap(ja,null,["number","number","number","number"])}function mle(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n,keepDims:s}=r,i=a["x"],o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:p,originalAxes:h,inputWasTransposed:c}=Fr(i,n,t);!c||(m=t.dataIdMap.get(d.dataId).id)!==o&&(u=d,l=m);var f,m=u.shape.length;S.assertAxesAreInnerMostDims("min",p,m);let[g,b]=S.computeOutAndReduceShapes(u.shape,p),y=w.sizeFromShape(b),v=t.makeOutput(g,u.dtype);return 0!==w.sizeFromShape(u.shape)&&(f=t.dataIdMap.get(v.dataId).id,gN(l,It[i.dtype],y,f)),c&&t.disposeData(d.dataId),s&&(f=S.expandShapeToKeepDim(v.shape,h),v.shape=f),v}var yN,gle={kernelName:ja,backendName:"wasm",setupFunc:fle,kernelFunc:mle},ble=!1,yle=gn(Ka,ble),bN=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(bN||{});function vle(e){yN=e.wasm.cwrap(Xa,null,["number","array","number","number","array","array","number","number"])}function xle(e){let{inputs:{x:a},backend:t,attrs:{paddings:r,mode:n}}=e,s=r.map((e,t)=>e[0]+a.shape[t]+e[1]),i=t.dataIdMap.get(a.dataId).id,o=t.makeOutput(s,a.dtype),l=t.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(a.shape).buffer),d=r.map(e=>e[0]),p=r.map(e=>e[1]),h=new Uint8Array(new Int32Array(d).buffer),c=new Uint8Array(new Int32Array(p).buffer);return yN(i,u,a.shape.length,It[a.dtype],h,c,bN[n],l),o}var vN,wle={kernelName:Xa,backendName:"wasm",kernelFunc:xle,setupFunc:vle},kle=!0,Ile=gn(Ya,kle),Sle=Xt(Io);function Rv(e,t){var a=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=a[0],n=a[1],s=a[2],a=a[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:n,pSelectedScores:s,pValidOutputs:a}}function Cle(e){vN=e.wasm.cwrap(Co,"number",["number","number","number","number","number"])}function Nle(e){let{backend:t,inputs:a,attrs:r}=e,{iouThreshold:n,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=a,u=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(l.dataId).id,p=vN(u,d,s,n,i),{pSelectedIndices:h,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=Rv(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",h)}var xN,Tle={kernelName:Co,backendName:"wasm",setupFunc:Cle,kernelFunc:Nle};function $le(e){xN=e.wasm.cwrap(kl,"number",["number","number","number","number","number","bool"])}function _le(e){let{backend:t,inputs:a,attrs:r}=e,{iouThreshold:n,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=a,d=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,h=xN(d,p,s,n,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Rv(t,h);return t.wasm._free(m),[t.makeOutput([f],"int32",c),t.makeOutput([],"int32",g)]}var wN,Ale={kernelName:kl,backendName:"wasm",setupFunc:$le,kernelFunc:_le};function Ele(e){wN=e.wasm.cwrap(No,"number",["number","number","number","number","number","number"])}function Rle(e){let{backend:t,inputs:a,attrs:r}=e,{iouThreshold:n,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=a,d=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,h=wN(d,p,s,n,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Rv(t,h);return t.wasm._free(g),[t.makeOutput([f],"int32",c),t.makeOutput([f],"float32",m)]}var kN,Dle={kernelName:No,backendName:"wasm",setupFunc:Ele,kernelFunc:Rle},Fle=!1,Ole=gn(So,Fle,"bool");function Ple(e){kN=e.wasm.cwrap($o,null,["number","number","number","number","number"])}function zle(e){let{inputs:t,backend:a,attrs:r}=e,n=t["indices"],{depth:s,onValue:i,offValue:o}=r,l=a.makeOutput([...n.shape,s],"int32"),u=a.dataIdMap.get(l.dataId).id,d=a.dataIdMap.get(n.dataId).id;return kN(d,s,i,o,u),l}var Mle={kernelName:$o,backendName:"wasm",setupFunc:Ple,kernelFunc:zle};function Lle(e){let{inputs:{x:t},backend:a}=e,r=a.makeOutput(t.shape,t.dtype);return a.typedArrayFromHeap(r).fill(1),r}var Ble={kernelName:To,backendName:"wasm",kernelFunc:Lle};function Vle(e){let{inputs:t,backend:a,attrs:r}=e,n=r["axis"];if(1===t.length)return Zm({inputs:{input:t[0]},backend:a,attrs:{dim:n}});let s=t[0].shape,i=t[0].dtype;t.forEach(e=>{w.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(e=>{e=Zm({inputs:{input:e},backend:a,attrs:{dim:n}});return o.push(e),e}),u=Y2({inputs:l,backend:a,attrs:{axis:n}});return o.forEach(e=>a.disposeData(e.dataId)),u}var IN,Wle={kernelName:_o,backendName:"wasm",kernelFunc:Vle};function Ule(e){IN=e.wasm.cwrap(Qa,null,["number","array","number","number","array","array","number","number"])}function Gle(e){let{inputs:{x:a},backend:t,attrs:{paddings:r,constantValue:n}}=e,s=r.map((e,t)=>e[0]+a.shape[t]+e[1]);if(0===w.sizeFromShape(a.shape))return aN({backend:t,attrs:{shape:s,value:n,dtype:a.dtype}});var i=t.dataIdMap.get(a.dataId).id,o=t.makeOutput(s,a.dtype),l=t.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(a.shape).buffer),d=r.map(e=>e[0]),e=r.map(e=>e[1]),d=new Uint8Array(new Int32Array(d).buffer),e=new Uint8Array(new Int32Array(e).buffer);return IN(i,u,a.shape.length,It[a.dtype],d,e,n,l),o}var CN,SN={kernelName:Qa,backendName:"wasm",kernelFunc:Gle,setupFunc:Ule},Hle=!1,qle=gn(Za,Hle);function jle(e){CN=e.wasm.cwrap(Ja,null,["number","number","number"])}function Kle(e){let{inputs:t,backend:a}=e,{x:r,alpha:n}=t,s=a.dataIdMap.get(r.dataId).id,i=a.dataIdMap.get(n.dataId).id,o=s,l=r,u=l;"float32"!==l.dtype&&(u=ac({backend:a,inputs:{x:r},attrs:{dtype:"float32"}}),o=a.dataIdMap.get(u.dataId).id);var d=a.makeOutput(r.shape,"float32"),e=a.dataIdMap.get(d.dataId).id;return CN(o,i,e),"float32"!==l.dtype&&a.disposeData(u.dataId),d}var NN,Xle={kernelName:Ja,backendName:"wasm",setupFunc:jle,kernelFunc:Kle};function Yle(e){NN=e.wasm.cwrap(Ao,null,["number","number","number","number"])}function Qle(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n,keepDims:s}=r,i=a["x"],o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:p,originalAxes:h,inputWasTransposed:c}=Fr(i,n,t),f=p;var m;!c||(e=t.dataIdMap.get(d.dataId).id)!==o&&(u=d,l=e,f=S.getInnerMostAxes(f.length,u.shape.length)),S.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[g,b]=S.computeOutAndReduceShapes(u.shape,f),y=w.sizeFromShape(b),v=t.makeOutput(g,u.dtype);return 0!==w.sizeFromShape(u.shape)&&(m=t.dataIdMap.get(v.dataId).id,NN(l,y,It[v.dtype],m)),c&&t.disposeData(d.dataId),s&&(m=S.expandShapeToKeepDim(v.shape,h),v.shape=m),v}var TN,Zle={kernelName:Ao,backendName:"wasm",setupFunc:Yle,kernelFunc:Qle},Jle=e=>{let{backend:t,attrs:a}=e,{start:r,stop:n,step:s,dtype:i}=a,o=rv(r,n,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l},ece={kernelName:Il,backendName:"wasm",kernelFunc:Jle},tce=!0,nce=gn(Da,tce),sce=Xt(ei),rce=Xt(ni);function ace(e){TN=e.wasm.cwrap(ti,null,["number","number","number","number","number","number","number","number","number","number"])}function ice(e){let{backend:t,inputs:a,attrs:r}=e,n=a["images"],{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,[d,p,h,c]=n.shape,f=[d,l,u,c],m=t.dataIdMap.get(n.dataId),g;"float32"!==m.dtype&&(g=ac({backend:t,inputs:{x:n},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));var b=m.id,y=t.makeOutput(f,"float32");if(0===w.sizeFromShape(n.shape))return y;e=t.dataIdMap.get(y.dataId).id;return TN(b,d,p,h,c,l,u,s?1:0,i?1:0,e),null!=g&&t.disposeData(g.dataId),y}var $N,oce={kernelName:ti,backendName:"wasm",setupFunc:ace,kernelFunc:ice};function uce(e){$N=e.wasm.cwrap(Ro,null,["number","array","number","array","number","number"])}function lce(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],s=r["dims"],i=w.parseAxisParam(s,n.shape);if(0===n.shape.length)return eh({inputs:{x:n},backend:a});var o=a.makeOutput(n.shape,n.dtype),l=a.dataIdMap.get(n.dataId).id,u=a.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(i).buffer),e=new Uint8Array(new Int32Array(n.shape).buffer);$N(l,d,i.length,e,n.shape.length,u);u=yn({inputs:{x:o},attrs:{shape:n.shape},backend:a});return a.disposeData(o.dataId),u}var _N,cce={kernelName:Ro,backendName:"wasm",kernelFunc:lce,setupFunc:uce};function dce(e){_N=e.wasm.cwrap(qo,null,["number","number","number","number","number","number","number","number","array","number","number"])}function pce(e){let{inputs:t,backend:a,attrs:r}=e,n=t["image"],{radians:s,fillValue:i,center:o}=r,l=a.makeOutput(n.shape,n.dtype),u=a.dataIdMap.get(n.dataId).id,d=a.dataIdMap.get(l.dataId).id,[p,h,c,f]=n.shape,[m,g]=S.getImageCenter(o,h,c),b=0===i,y="number"==typeof i?[i,i,i,b?0:255]:[...i,255],v=new Uint8Array(new Int32Array(y).buffer);return _N(u,p,h,c,f,s,m,g,v,y.length,d),l}var AN,hce={kernelName:qo,backendName:"wasm",kernelFunc:pce,setupFunc:dce},fce=Xt(Do),mce=Xt(si);function gce(e){AN=e.wasm.cwrap(Fo,null,["number","number","number","number","number","number","array","number","number"])}function bce(e){let{backend:t,inputs:a,attrs:r}=e,{indices:n,updates:s}=a,i=r["shape"],o=t.makeOutput(i,s.dtype);if(0===w.sizeFromShape(i))return o;var{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:h}=Ak.calculateShapes(s,n,i),c=t.dataIdMap.get(n.dataId).id,f=t.dataIdMap.get(s.dataId).id,e=new Uint8Array(new Int32Array(p).buffer),p=t.dataIdMap.get(o.dataId).id;return AN(c,f,It[s.dtype],l,u,d,e,h,p),o}var EN,yce={kernelName:Fo,backendName:"wasm",setupFunc:gce,kernelFunc:bce};function vce(e){EN=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function xce(e){let{inputs:t,backend:a}=e,{condition:r,t:n,e:s}=t,i=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(n.dataId).id,l=a.dataIdMap.get(s.dataId).id,u=a.makeOutput(n.shape,n.dtype),d=a.dataIdMap.get(u.dataId).id,p=r.shape.length,h=n.shape.length,c=0===p||1<p||1===h?1:w.sizeFromShape(n.shape.slice(1));return EN(i,o,l,c,d),u}var RN,wce={kernelName:Oo,backendName:"wasm",kernelFunc:xce,setupFunc:vce};function kce(e){RN=e.wasm.cwrap(ai,null,["number","number"])}function Ice(e){let{backend:t,inputs:{x:a}}=e,r=t.dataIdMap.get(a.dataId).id,n=t.makeOutput(a.shape,a.dtype),s=t.dataIdMap.get(n.dataId).id;return 0===w.sizeFromShape(n.shape)||RN(r,s),n}var DN,Sce={kernelName:"Sigmoid",backendName:"wasm",setupFunc:kce,kernelFunc:Ice},Cce=Xt(ri);function Nce(e){DN=e.wasm.cwrap(ui,null,["number","number","number","number"])}function Tce(e){let{backend:t,inputs:{logits:a},attrs:{dim:r}}=e,n=t.dataIdMap.get(a.dataId).id,s=t.makeOutput(a.shape,a.dtype),i=t.dataIdMap.get(s.dataId).id,o=a.shape[r],l=w.sizeFromShape(a.shape)/o;return 0===w.sizeFromShape(s.shape)||DN(n,i,o,l),s}var $ce={kernelName:ui,backendName:"wasm",setupFunc:Nce,kernelFunc:Tce};function _ce(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],{blockShape:s,paddings:i}=r,o=w.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<n.shape.length;++e)l.push([0,0]);var u=SN.kernelFunc({inputs:{x:n},backend:a,attrs:{paddings:l,constantValue:0}}),d=S.getReshaped(u.shape,s,o,!1),p=S.getPermuted(d.length,s.length,!1),e=S.getReshapedPermuted(u.shape,s,o,!1),d=yn({inputs:{x:u},backend:a,attrs:{shape:d}}),p=wr({inputs:{x:d},backend:a,attrs:{perm:p}}),e=yn({inputs:{x:p},backend:a,attrs:{shape:e}});return a.disposeData(u.dataId),a.disposeData(d.dataId),a.disposeData(p.dataId),e}var FN,Ace={kernelName:Mo,backendName:"wasm",kernelFunc:_ce};function Ece(e){FN=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function Rce(e){let{backend:t,inputs:a}=e,{indices:r,values:n,denseShape:s,defaultValue:i}=a,o=r.shape[0],l=r.shape[1],u=t.readSync(s.dataId)[0],d=[o+u,l],p=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(n.dataId).id,c=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(d,r.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(d.slice(0,1),n.dtype),b=t.dataIdMap.get(g.dataId).id,y=t.makeOutput([u],"bool"),v=t.dataIdMap.get(y.dataId).id,x=t.makeOutput([o],r.dtype),w=t.dataIdMap.get(x.dataId).id,k=t.makeOutput([4],"int32"),I=t.dataIdMap.get(k.dataId).id,C=FN(p,h,It[n.dtype],o,u,l,c,m,b,v,w,I),N=t.readSync(k.dataId),T;switch(N[0]){case 1:T=S.getSparseFillEmptyRowsIndicesDenseShapeMismatch(N[1]);break;case 2:T=S.getSparseFillEmptyRowsNegativeIndexErrorMessage(N[1],N[2]);break;case 3:T=S.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(N[1],N[2],N[3]);break;default:T=""}if(t.disposeData(k.dataId),T)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(y.dataId),t.disposeData(x.dataId),new Error(T);let $=f,_=g;return C!==d[0]&&($=va({inputs:{x:f},attrs:{begin:0,size:[C,l]},backend:t}),_=va({inputs:{x:g},attrs:{begin:0,size:C},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[$,_,y,x]}var ON,Dce={kernelName:sp,backendName:"wasm",setupFunc:Ece,kernelFunc:Rce};function Fce(e){ON=e.wasm.cwrap(_l,null,["number","number","number","number","number","number","number"])}function Oce(e){let{backend:t,inputs:a}=e,{inputIndices:r,inputShape:n,newShape:s}=a;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(1!==n.shape.length)throw new Error(`Input shape should be a vector but received shape
        ${n.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);var i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(n.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],d=w.sizeFromShape(s.shape),p=t.makeOutput([u,d],r.dtype),h=t.dataIdMap.get(p.dataId).id,c=t.makeOutput([d],s.dtype),f=t.dataIdMap.get(c.dataId).id,e=t.makeOutput([3],"int32"),d=t.dataIdMap.get(e.dataId).id;ON(i,o,l,u,h,f,d);let m=t.readSync(e.dataId),g;switch(m[0]){case 0:g=S.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(m[1],m[2]);break;case 1:g=S.getSparseReshapeNegativeOutputDimErrorMessage(m[1],m[2]);break;case 2:g=S.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:var b=Array.from(t.readSync(n.dataId)),y=Array.from(t.readSync(c.dataId));g=S.getSparseReshapeInputOutputMultipleErrorMessage(b,y);break;case 4:b=Array.from(t.readSync(n.dataId)),y=Array.from(t.readSync(c.dataId));g=S.getSparseReshapeInputOutputMismatchErrorMessage(b,y);break;default:g=""}if(t.disposeData(e.dataId),g)throw t.disposeData(p.dataId),t.disposeData(c.dataId),new Error(g);return[p,c]}var PN,Pce={kernelName:_l,backendName:"wasm",setupFunc:Fce,kernelFunc:Oce};function zN(e){PN=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function MN(e,t){let{backend:a,inputs:r}=e,{data:n,indices:s,segmentIds:i}=r,o=s.shape[0],l=a.readSync(i.dataId,o-1,o)[0],u=0<o?l+1:0;if(u<0)throw new Error(S.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=n.shape.slice();d[0]=u;var p=a.dataIdMap.get(n.dataId).id,h=a.dataIdMap.get(s.dataId).id,c=a.dataIdMap.get(i.dataId).id,f=a.makeOutput(d,n.dtype),m=a.dataIdMap.get(f.dataId).id,g=a.makeOutput([4],"int32"),e=a.dataIdMap.get(g.dataId).id;PN(p,It[n.dtype],n.shape[0],h,c,m,e,t,0);let b=a.readSync(g.dataId),y;switch(b[0]){case 0:y=S.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:y=S.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:y=S.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b[1],b[2]);break;case 3:y=S.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b[1],b[2],b[3]);break;default:y=""}if(a.disposeData(g.dataId),y)throw a.disposeData(f.dataId),new Error(y);return f}function zce(e){return MN(e,!0)}var Mce={kernelName:rp,backendName:"wasm",setupFunc:zN,kernelFunc:zce};function Lce(e){return MN(e,!1)}var Bce={kernelName:ap,backendName:"wasm",setupFunc:zN,kernelFunc:Lce};function Vce(e){let{inputs:t,attrs:a,backend:r}=e,n=t["x"],{numOrSizeSplits:s,axis:i}=a,o=w.parseAxisParam(i,n.shape)[0],l=S.prepareSplitSize(n,s,o),u=new Array(n.shape.length).fill(0),d=n.shape.slice();return l.map(e=>{let t=[...d];t[o]=e;var a=va({inputs:{x:n},attrs:{begin:u,size:t},backend:r});return u[o]+=e,a})}var LN,Wce={kernelName:Lo,backendName:"wasm",kernelFunc:Vce},Uce=Xt(ii),Gce=Xt(Al),Hce=!0,qce=gn(li,Hce);function jce(e){LN=e.wasm.cwrap(hi,null,["number","number","number","number"])}function Kce(e){let{backend:t,inputs:a,attrs:r}=e,n=r["alpha"],s=a["x"],i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return LN(i,n,It[s.dtype],l),o}var BN,Xce={kernelName:hi,backendName:"wasm",setupFunc:jce,kernelFunc:Kce};function Yce(e){BN=e.wasm.cwrap(Bo,null,["number","array","number","array","array","array","array","array","number","number"])}function Qce(e){let{backend:t,inputs:a,attrs:r}=e,n=a["x"],{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r,{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=wt.sliceInfo(n.shape,s,i,o,l,u,d,p,h),k;var I,S,C,N,T,$,_,A;return m?k=yn({inputs:{x:n},backend:t,attrs:{shape:f}}):g||b?(w.assert(1<=n.shape.length,()=>`Input must have rank at least 1, got: ${n.shape.length}`),_=wt.computeOutShape(y,v,x),A=va({inputs:{x:n},backend:t,attrs:{begin:y,size:_}}),k=yn({inputs:{x:A},backend:t,attrs:{shape:f}}),t.disposeData(A.dataId)):(I=t.makeOutput(c,"float32"),S=t.dataIdMap.get(n.dataId).id,C=new Uint8Array(new Int32Array(w.computeStrides(n.shape)).buffer),N=new Uint8Array(new Int32Array(y).buffer),T=new Uint8Array(new Int32Array(v).buffer),$=new Uint8Array(new Int32Array(x).buffer),e=new Uint8Array(new Int32Array(c).buffer),_=new Uint8Array(new Int32Array(w.computeStrides(c)).buffer),A=t.dataIdMap.get(I.dataId).id,BN(S,C,n.shape.length,N,T,$,e,_,c.length,A),k=yn({inputs:{x:I},backend:t,attrs:{shape:f}}),t.disposeData(I.dataId)),k}var VN,Zce={kernelName:Bo,backendName:"wasm",setupFunc:Yce,kernelFunc:Qce},Jce=!0,ede=gn(ci,Jce);function tde(e){VN=e.wasm.cwrap(oi,null,["number","number","number","number"])}function nde(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n,keepDims:s}=r,i=a["x"],o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:p,originalAxes:h,inputWasTransposed:c}=Fr(i,n,t),f=p;var m;!c||(e=t.dataIdMap.get(d.dataId).id)!==o&&(u=d,l=e,f=S.getInnerMostAxes(f.length,u.shape.length)),S.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[g,b]=S.computeOutAndReduceShapes(u.shape,f),y=w.sizeFromShape(b),v=t.makeOutput(g,u.dtype);return 0!==w.sizeFromShape(u.shape)&&(m=t.dataIdMap.get(v.dataId).id,VN(l,y,It[v.dtype],m)),c&&t.disposeData(d.dataId),s&&(m=S.expandShapeToKeepDim(v.shape,h),v.shape=m),v}var WN,sde={kernelName:oi,backendName:"wasm",setupFunc:tde,kernelFunc:nde},rde=Xt(Vo),ade=Xt(di);function ide(e){WN=e.wasm.cwrap(Cr,null,["number","array","number","array","number","number"])}function ode(e){let{inputs:t,backend:a,attrs:r}=e,n=t["x"],s=a.dataIdMap.get(n.dataId).id,i=r["reps"],o=new Array(n.shape.length);for(let e=0;e<o.length;e++)o[e]=n.shape[e]*i[e];var l=new Uint8Array(new Int32Array(n.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),d=a.makeOutput(o,n.dtype),e=a.dataIdMap.get(d.dataId).id;return WN(s,l,n.shape.length,u,o.length,It[d.dtype],e),d}var UN,ude={kernelName:Cr,backendName:"wasm",setupFunc:ide,kernelFunc:ode};function lde(e){UN=e.wasm.cwrap(Wo,null,["number","array","number","number","number","bool","number","number"])}var GN,cde=({inputs:e,backend:t,attrs:a})=>{let r=e["x"],{k:n,sorted:s}=a,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=n;var u=t.makeOutput(l,r.dtype),e=t.dataIdMap.get(u.dataId).id,a=t.makeOutput(l,"int32"),t=t.dataIdMap.get(a.dataId).id;return UN(i,o,r.shape.length,It[r.dtype],n,s,e,t),[u,a]},dde={kernelName:Wo,backendName:"wasm",setupFunc:lde,kernelFunc:cde};function pde(e){GN=e.wasm.cwrap(Uo,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function hde(e){let{backend:t,inputs:a,attrs:r}=e,{image:n,transforms:s}=a,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[d,p,h,c]=n.shape,[f,m]=null!=u?u:[p,h],g=[d,f,m,c],b=new Uint8Array(new Int32Array(w.computeStrides(n.shape)).buffer),y=t.makeOutput(g,n.dtype),v=t.dataIdMap.get(y.dataId).id,x=t.dataIdMap.get(n.dataId).id,k=t.dataIdMap.get(s.dataId).id,I="nearest"===i?1:2,S;switch(o){case"constant":S=1;break;case"reflect":S=2;break;case"wrap":S=3;break;case"nearest":S=4;break;default:S=1}return GN(x,k,1<s.shape[0],d,f,m,c,h,p,b,n.shape.length-1,I,S,l,v),y}var fde={kernelName:Uo,backendName:"wasm",setupFunc:pde,kernelFunc:hde};function mde(e){let{inputs:t,backend:a,attrs:r}=e,n=t["value"],s=r["axis"];s<0&&(s+=n.shape.length);let i=n.shape[s],o=n.shape.length,l=new Array(o-1),u=0;for(let e=0;e<o;e++)e!==s&&(l[u++]=n.shape[e]);let d=new Array(i),p=new Array(o).fill(0),h=n.shape.slice();h[s]=1;for(let e=0;e<d.length;e++)p[s]=e,d[e]=va({inputs:{x:n},attrs:{begin:p,size:h},backend:a});return d.map(({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:l}))}var gde={kernelName:Go,backendName:"wasm",kernelFunc:mde};function bde(e){let{inputs:{x:t},backend:a}=e,r=a.makeOutput(t.shape,t.dtype);return a.typedArrayFromHeap(r).fill(0),r}var yde={kernelName:Ho,backendName:"wasm",kernelFunc:bde},vde=[ooe,uoe,coe,hoe,woe,Soe,Toe,Aoe,Foe,Boe,Voe,Woe,Hoe,qoe,Xoe,Zoe,Joe,eue,sue,iue,lue,pue,mue,gue,yue,vue,xue,wue,Sue,Cue,Tue,Aue,Due,Pue,Lue,Wue,Gue,que,foe,Xue,Que,Jue,ele,nle,ale,ole,cle,hle,gle,yle,wle,Ile,Sle,Tle,Ale,Dle,Ole,Mle,Ble,Wle,SN,qle,Xle,Zle,ece,nce,sce,rce,Eoe,oce,cce,hce,fce,mce,yce,wce,Sce,Cce,Moe,$ce,Ace,Dce,Pce,Mce,Bce,Wce,Uce,Gce,qce,Xce,Zce,ede,sde,rde,ade,ude,dde,fde,yoe,gde,yde];for(let e of vde)El(e);var Jm=X();Jm.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))),Jm.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(Jm.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var Lw=xa(a$()),xde=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else if(e.data.cmd==="processProxyingQueue"){if(Module["_pthread_self"]()){Module["_emscripten_proxy_execute_queue"](e.data.queue)}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}});`,wde=xa(i$()),kde=class extends nl{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(HN),eg=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Ud(this,Ss())}write(e,t,a){var r={id:this.dataIdNextNumber++};return this.move(r,e,t,a,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){var t=w.now();return e(),{kernelMs:w.now()-t}}move(e,t,a,r,n){var s,i,o,l=this.dataIdNextNumber++;"string"!==r?(i=(s=w.sizeFromShape(a))*w.bytesPerElement(r),o=this.wasm._malloc(i),this.dataIdMap.set(e,{id:l,memoryOffset:o,shape:a,dtype:r,refCount:n}),this.wasm.tfjs.registerTensor(l,s,o),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),o)):this.dataIdMap.set(e,{id:l,stringBytes:t,shape:a,dtype:r,memoryOffset:null,refCount:n})}async read(e){return this.readSync(e)}readSync(e,t,a){let{memoryOffset:r,dtype:n,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===n)return null!=t&&0!==t||!(null==a||a>=i.length)?i.slice(t,a):i;t=t||0,a=a||w.sizeFromShape(s);e=w.bytesPerElement(n);return Cde(this.wasm.HEAPU8.slice(r+t*e,r+a*e).buffer,n)}disposeData(t,a=!1){if(this.dataIdMap.has(t)){let e=this.dataIdMap.get(t);if(e.refCount--,!a&&0<e.refCount)return!1;this.wasm._free(e.memoryOffset),this.wasm.tfjs.disposeData(e.id),this.dataIdMap.delete(t)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,a){let r;var n,s;return null==a?r=this.write(null,e,t):(n=this.dataIdNextNumber++,r={id:n},this.dataIdMap.set(r,{id:n,memoryOffset:a,shape:e,dtype:t,refCount:1}),s=w.sizeFromShape(e),this.wasm.tfjs.registerTensor(n,s,a)),{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:a}){var r=this.wasm.HEAPU8.buffer,n=this.dataIdMap.get(a)["memoryOffset"],s=w.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,n,s);case"int32":return new Int32Array(r,n,s);case"bool":return new Uint8Array(r,n,s);default:throw new Error(`Unknown dtype ${t}`)}}};function Ide(r){return(t,a)=>(w.fetch(r,{credentials:"same-origin"}).then(e=>{e.ok||t.env.a(`failed to load wasm binary file at '${r}'`),e.arrayBuffer().then(e=>{WebAssembly.instantiate(e,t).then(e=>{a(e.instance,e.module)})})}),{})}function Bw(e,t,a){if(null!=Bd)return Bd;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=Lu&&null!=Lu[r]?Lu[r]:a+r}async function Sde(){let[s,i]=await Promise.all([X().getAsync("WASM_HAS_SIMD_SUPPORT"),X().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((t,e)=>{let a={locateFile:(e,t)=>{if(e.endsWith(".worker.js")){var a=xde.replace(/\n/g,"\\n"),a=new Blob([a],{type:"application/javascript"});return URL.createObjectURL(a)}return e.endsWith(".wasm")?Bw(s,i,null!=Pu?Pu:t):t+e}};Dv&&(a.instantiateWasm=Ide(Bw(s,i,null!=Pu?Pu:"")));let r=!1;a.onAbort=()=>{r||Bu||(Bu=!0,e({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))};let n;n=i&&s&&null==Bd?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+Lw.default.toString()],{type:"text/javascript"}),(0,Lw.default)(a)):(0,wde.default)(a),n.then(e=>{r=!0,Bu=!1;e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},t({wasm:e})})})}function Cde(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var Nde=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Bd=null,Pu=null,Lu={},Bu=!1,Dv=!1;function Lpe(e,t=!1){if(Gk("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Bu)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Bd=e,Dv=t}function Bpe(t,e=!1){if(Bu)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof t)Pu=t;else{Lu=t;let e=Nde.filter(e=>null==Lu[e]);if(0<e.length)throw new Error(`There were no entries found for the following binaries: ${e.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Dv=e}var HN=-1,eg=-1;function Vpe(e){HN=e}function Wpe(){if(-1===eg)throw new Error("WASM backend not initialized.");return eg}var Upe="0.0.0",Tde=2;pp("wasm",async()=>{var e=(await Sde())["wasm"];return new kde(e)},Tde);var sr="3.15.0-20220405",Gpe={tfjs:sr,"tfjs-core":sr,"tfjs-data":sr,"tfjs-layers":sr,"tfjs-converter":sr,"tfjs-backend-cpu":sr,"tfjs-backend-webgl":sr,"tfjs-backend-wasm":sr};export{io as Abs,sl as Acos,rl as Acosh,fb as AdadeltaOptimizer,mb as AdagradOptimizer,gb as AdamOptimizer,bb as AdamaxOptimizer,Ir as Add,ka as AddN,al as All,il as Any,Ia as ArgMax,ol as ArgMin,ul as Asin,ll as Asinh,cl as Atan,pl as Atan2,dl as Atanh,Sa as AvgPool,qd as AvgPool3D,og as AvgPool3DGrad,ig as AvgPoolGrad,kde as BackendWasm,Ca as BatchMatMul,oo as BatchToSpaceND,ug as Bincount,lg as BroadcastArgs,A$ as BroadcastTo,CW as Callback,zL as CallbackList,Na as Cast,Ta as Ceil,Sr as ClipByValue,jd as Complex,Kd as ComplexAbs,uo as Concat,$a as Conv2D,cg as Conv2DBackpropFilter,_a as Conv2DBackpropInput,Xd as Conv3D,dg as Conv3DBackpropFilterV2,pg as Conv3DBackpropInputV2,Aa as Cos,Ea as Cosh,co as CropAndResize,hl as Cumprod,lo as Cumsum,BL as CustomCallback,Ud as DataStorage,hg as DenseBincount,po as DepthToSpace,Ra as DepthwiseConv2dNative,fg as DepthwiseConv2dNativeBackpropFilter,mg as DepthwiseConv2dNativeBackpropInput,gg as Diag,Yd as Dilation2D,Qf as Dilation2DBackpropFilter,Yf as Dilation2DBackpropInput,Jw as ENV,NW as EarlyStopping,Qd as Einsum,Fa as Elu,bg as EluGrad,S$ as Environment,ho as Equal,fl as Erf,Oa as Exp,fo as ExpandDims,mo as Expm1,yg as FFT,ml as Fill,go as FlipLeftRight,Pa as Floor,za as FloorDiv,fd as FromPixels,Ma as FusedBatchNorm,aa as FusedConv2D,ia as FusedDepthwiseConv2D,Kf as GPGPUContext,yo as GatherNd,bo as GatherV2,E4 as GraphModel,vo as Greater,La as GreaterEqual,LL as History,vg as IFFT,Ba as Identity,Zd as Imag,Dt as InputSpec,gl as IsFinite,bl as IsInf,yl as IsNan,nl as KernelBackend,ep as LRN,wg as LRNGrad,AL as LayerVariable,pr as LayersModel,Va as LeakyRelu,xo as Less,wo as LessEqual,xg as LinSpace,Wa as Log,vl as Log1p,E$ as LogSoftmax,ko as LogicalAnd,xl as LogicalNot,Jd as LogicalOr,L0 as MathBackendCPU,M1 as MathBackendWebGL,Ua as Max,Ha as MaxPool,tp as MaxPool3D,Ig as MaxPool3DGrad,kg as MaxPoolGrad,Sg as MaxPoolWithArgmax,Ga as Maximum,qa as Mean,ja as Min,Ka as Minimum,Xa as MirrorPad,wl as Mod,yb as MomentumOptimizer,Cg as Multinomial,Ya as Multiply,Io as Neg,Co as NonMaxSuppressionV3,kl as NonMaxSuppressionV4,No as NonMaxSuppressionV5,So as NotEqual,l_ as OP_SCOPE_SUFFIX,$o as OneHot,To as OnesLike,_r as Optimizer,Wr as OptimizerConstructors,_o as Pack,Qa as PadV2,$de as Pool,Za as Pow,Ja as Prelu,Ao as Prod,vb as RMSPropOptimizer,Ar as RNN,Il as Range,e_ as Rank,np as Real,Da as RealDiv,Sl as Reciprocal,oO as Reduction,ei as Relu,ni as Relu6,Eo as Reshape,ti as ResizeBilinear,Tg as ResizeBilinearGrad,Cl as ResizeNearestNeighbor,Ng as ResizeNearestNeighborGrad,Ro as Reverse,qo as RotateWithOffset,Do as Round,si as Rsqrt,Ip as SGDOptimizer,Fo as ScatterNd,Oo as Select,Nl as Selu,Ub as Sequential,ai as Sigmoid,Tl as Sign,ri as Sin,zo as Sinh,Po as Slice,ui as Softmax,$l as Softplus,Mo as SpaceToBatchND,sp as SparseFillEmptyRows,_l as SparseReshape,rp as SparseSegmentMean,ap as SparseSegmentSum,ip as SparseToDense,Lo as SplitV,ii as Sqrt,Al as Square,li as SquaredDifference,hi as Step,Bo as StridedSlice,op as StringNGrams,$g as StringSplit,_g as StringToHashBucketFast,ci as Sub,oi as Sum,$s as SymbolicTensor,Vo as Tan,di as Tanh,et as Tensor,Vt as TensorBuffer,Cr as Tile,Wo as TopK,Uo as Transform,pi as Transpose,Ag as Unique,Go as Unpack,up as UnsortedSegmentSum,gd as Variable,Ho as ZerosLike,ra as _FusedMatMul,Mt as abs,GA as acos,qA as acosh,ie as add,KA as addN,qk as all,pm as any,Hu as argMax,JA as argMin,tE as asin,sE as asinh,aE as atan,oE as atan2,lE as atanh,Gg as avgPool,Yk as avgPool3d,zA as backend,S as backend_util,qde as basicLSTMCell,ju as batchNorm,$E as batchNorm2d,AE as batchNorm3d,RE as batchNorm4d,Hg as batchToSpaceND,Qk as bincount,xpe as booleanMaskAsync,OE as broadcastArgs,nd as broadcastTo,jo as broadcast_util,Nk as browser,De as buffer,Ape as callbacks,ce as cast,ME as ceil,Vn as clipByValue,lr as clone,oa as complex,Ft as concat,VE as concat1d,UE as concat2d,HE as concat3d,jE as concat4d,MM as constraints,Zk as conv1d,ca as conv2d,Jk as conv2dTranspose,eI as conv3d,tR as conv3dTranspose,Ede as copyRegisteredKernels,jg as cos,nI as cosh,TI as cosineWindow,aR as cumprod,sI as cumsum,js as customGrad,R4 as data,uR as denseBincount,Gk as deprecationWarn,cR as depthToSpace,hp as depthwiseConv2d,Rpe as deregisterOp,dp as device_util,jde as diag,fR as dilation2d,Ode as disableDeprecationWarnings,Re as dispose,Pde as disposeVariables,xe as div,vR as divNoNan,Kde as dot,nF as dropout,kR as einsum,fp as elu,Fde as enableDebugMode,Dde as enableProdMode,sF as enclosingPowerOfTwo,Ss as engine,X as env,Kn as equal,CR as erf,Xn as exp,Pn as expandDims,_R as expm1,rI as eye,lb as fft,Pl as fill,Ude as findBackend,Gde as findBackendFactory,mp as floor,Hk as floorDiv,GX as forceHalfFloat,ha as fused,Ku as gather,J3 as gatherND,$k as gather_util,Vde as getBackend,nx as getGradient,Zf as getKernel,Jf as getKernelsForBackend,Wpe as getThreadsCount,RK as gpgpu_util,Qde as grad,Zde as grads,Wn as greater,Ko as greaterEqual,Id as ifft,Kg as imag,qn as image,kpe as inTopKAsync,qM as initializers,OB as input,En as io,xI as irfft,Xde as isFinite,Yde as isInf,BR as isNaN,Ht as keep,xs as kernel_impls,$L as layers,Xg as leakyRelu,aI as less,Xo as lessEqual,VO as linalg,GR as linspace,Dpe as loadGraphModel,$pe as loadLayersModel,qR as localResponseNormalization,Yn as log,Yg as log1p,tpe as logSigmoid,iI as logSoftmax,iD as logSumExp,Ds as logicalAnd,Jg as logicalNot,cI as logicalOr,npe as logicalXor,Cpe as losses,We as matMul,iA as math,As as max,eb as maxPool,dI as maxPool3d,fD as maxPoolWithArgmax,$r as maximum,St as mean,dm as memory,spe as meshgrid,rW as metrics,fm as min,bp as minimum,xD as mirrorPad,kD as mod,Npe as model,xW as models,tb as moments,wpe as movingAverage,V as mul,rpe as multiRNNCell,TD as multinomial,kt as neg,OI as nextFrame,CI as norm,Xu as notEqual,vd as oneHot,Mn as ones,Qn as onesLike,L as op,ape as outerProduct,fi as pad,ipe as pad1d,ope as pad2d,upe as pad3d,lpe as pad4d,cpe as pool,pa as pow,sb as prelu,U_ as print,pI as prod,zde as profile,dpe as rand,ppe as randomGamma,KD as randomNormal,Ml as randomUniform,Yu as range,Bde as ready,wd as real,ZD as reciprocal,pp as registerBackend,_pe as registerCallbackConstructor,D$ as registerGradient,El as registerKernel,Epe as registerOp,wW as regularizers,Xs as relu,hI as relu6,Wde as removeBackend,G as reshape,Zn as reverse,hpe as reverse1d,fpe as reverse2d,mpe as reverse3d,gpe as reverse4d,cb as rfft,fI as round,mI as rsqrt,we as scalar,X3 as scatterND,Ak as scatter_util,gI as selu,c3 as separableConv2d,Tpe as sequential,ae as serialization,Lde as setBackend,Hde as setPlatform,Vpe as setThreadsCount,Lpe as setWasmPath,Bpe as setWasmPaths,S5 as setWebGLContext,p3 as setdiff1dAsync,Zy as shared,qs as sigmoid,f3 as sign,Spe as signal,bI as sin,yI as sinh,He as slice,ib as slice1d,vI as slice2d,ob as slice3d,kd as slice4d,wt as slice_util,ub as softmax,zl as softplus,nb as spaceToBatchND,Wc as sparse,NI as sparseToDense,Ipe as spectral,Bn as split,dn as sqrt,ct as square,wI as squaredDifference,mr as squeeze,Jn as stack,yp as step,D3 as stridedSlice,Mf as string,ge as sub,ve as sum,cp as sumOutType,O3 as tan,qu as tanh,fs as tensor,Zt as tensor1d,Ki as tensor2d,pA as tensor3d,bpe as tensor4d,ype as tensor5d,vpe as tensor6d,_s as tensor_util,_A as test_util,j as tidy,ps as tile,Mde as time,z3 as topk,Pi as train,qe as transpose,db as truncatedNormal,hx as unique,Ade as unregisterGradient,_de as unregisterKernel,V3 as unsortedSegmentSum,Fs as unstack,cn as upcastType,w as util,Jde as valueAndGrad,epe as valueAndGrads,U3 as variable,XR as variableGrads,Gpe as version,Fpe as version_converter,Rde as version_core,Ope as version_cpu,uS as version_layers,Upe as version_wasm,Ppe as version_webgl,zpe as webgl,I5 as webgl_util,roe as webgpu,vn as where,II as whereAsync,$t as zeros,je as zerosLike};