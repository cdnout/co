import { Animation } from './animation';
import { Counter } from './counter';
import { DragTracker } from './dragTracker';
import { EventEmitter } from './eventEmitter';
import { Axis } from './axis';
import { EventStore } from './eventStore';
import { Limit } from './limit';
import { ScrollBody } from './scrollBody';
import { ScrollTarget } from './scrollTarget';
import { ScrollTo } from './scrollTo';
import { Vector1D } from './vector1d';
declare type Params = {
    axis: Axis;
    element: HTMLElement;
    target: Vector1D;
    dragFree: boolean;
    dragTracker: DragTracker;
    location: Vector1D;
    animation: Animation;
    scrollTo: ScrollTo;
    scrollBody: ScrollBody;
    scrollTarget: ScrollTarget;
    index: Counter;
    limit: Limit;
    loop: boolean;
    events: EventEmitter;
};
export declare type DragHandler = {
    addActivationEvents: () => void;
    clickAllowed: () => boolean;
    pointerDown: () => boolean;
    removeActivationEvents: EventStore['removeAll'];
    removeInteractionEvents: EventStore['removeAll'];
};
export declare function DragHandler(params: Params): DragHandler;
export {};
