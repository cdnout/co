function _defineProperty(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class GeneralWorker{constructor(e){_defineProperty(this,"handleWorkerExit",()=>{this._debug&&this._log({action:"killed"}),this._onExitHandler(this)}),_defineProperty(this,"forceExit",()=>{this._onExit(),this._worker.kill()}),_defineProperty(this,"handleWorkerMessage",e=>{let t=null;if(this.tasks.some(function(s,r){if(e.id===s.id)return t=r,!0}),null!==t){var s=this.tasks[t];e.error?(this._debug&&this._log({taskId:s.id,action:"task_error",message:`taskId(${s.id}) has thrown an error ${e.error}`}),s.reject(new Error(`task.js: ${e.error}`))):(this._debug&&this._log({taskId:s.id,action:"task_completed",message:`taskId(${s.id}) has completed`}),s.resolve(e.result)),this._onTaskComplete(this),this.tasks.splice(t,1)}}),this.id=e.id,this.managerId=e.managerId,this._debug=e.debug,this._logger=e.logger,this.tasks=[],this.lastTaskTimestamp=null,this._onTaskComplete=e.onTaskComplete,this._onExitHandler=e.onExit}_log(e){let t={source:"worker",managerId:this.managerId,workerId:this.id};Object.keys(e).forEach(s=>{t[s]=e[s]}),t.message||(t.message=t.action),this._logger(t)}run(e){this.lastTaskTimestamp=new Date;let t={id:e.id,startTime:new Date,resolve:e.resolve,reject:e.reject,$options:e};this.tasks.push(t);let s={id:t.id,func:String(e.function)};Object.keys(e.arguments).forEach(function(t,r){s["argument"+r]=e.arguments[r]}),this.postMessage(s,e.transferables)}_purgeTasks(e){this.tasks.forEach(t=>{t.reject(e)}),this.tasks=[]}}module.exports=GeneralWorker;