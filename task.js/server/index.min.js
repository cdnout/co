const os=require("os"),NodeWorker=require("./NodeWorker"),NodeWorkerThread=require("./NodeWorkerThread"),SimulatedWorker=require("./SimulatedWorker"),WorkerManager=require("../WorkerManager"),generateTaskFactoryMethod=require("../generateTaskFactoryMethod"),defaults={maxWorkers:os.cpus().length};module.exports=class extends WorkerManager{constructor(e={}){let r={workerType:"fork_worker"};Object.keys(e).forEach(o=>r[o]=e[o]),super(r,{DefaultWorkerProxy:NodeWorker,NodeWorkerThread:NodeWorkerThread,SimulatedWorker:SimulatedWorker})}};