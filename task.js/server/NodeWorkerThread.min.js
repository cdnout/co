function _defineProperty(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const GeneralWorker=require("../GeneralWorker");class NodeWorker extends GeneralWorker{constructor(e){super(...arguments),_defineProperty(this,"_onExit",()=>{this._alive&&(this._debug&&this._log({action:"killed"}),this._alive=!1,this.handleWorkerExit())}),_defineProperty(this,"_onMessage",e=>{this.handleWorkerMessage(e)}),_defineProperty(this,"postMessage",(e,r)=>{this._debug&&this._log({taskId:e.id,action:"send_task_to_actual_worker",message:`sending taskId(${e.id}) to worker process`}),this._worker.postMessage(e,r)}),_defineProperty(this,"terminate",()=>{this._debug&&this._log({action:"terminated"}),this._worker.terminate()}),e=e||{};const{Worker:r}=require("worker_threads");this._worker=new r(`${__dirname}/WorkerThreadWorker.js`,{env:e.env}),this._worker.on("message",this._onMessage),this._worker.on("exit",this._onExit),this._worker.on("close",this._onExit),this._worker.on("disconnect",this._onExit),this._worker.on("error",this._onExit),this._workerThreadId=this._worker.threadId,this._alive=!0,this._debug&&this._log({action:"initialized"})}_log(e){let r={source:"worker_thread",managerId:this.managerId,workerId:this.id,threadId:this._workerThreadId};Object.keys(e).forEach(t=>{r[t]=e[t]}),r.message||(r.message=r.action),this._logger(r)}}module.exports=NodeWorker;