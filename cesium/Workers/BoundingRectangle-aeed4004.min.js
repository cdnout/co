define(["exports","./Matrix2-37e55508","./RuntimeError-8952249c","./defaultValue-81eec7ed","./Transforms-dca21951"],function(t,h,e,d,a){"use strict";function u(t,e,n,i){this.x=d.defaultValue(t,0),this.y=d.defaultValue(e,0),this.width=d.defaultValue(n,0),this.height=d.defaultValue(i,0)}u.packedLength=4,u.pack=function(t,e,n){return n=d.defaultValue(n,0),e[n++]=t.x,e[n++]=t.y,e[n++]=t.width,e[n]=t.height,e},u.unpack=function(t,e,n){return e=d.defaultValue(e,0),(n=!d.defined(n)?new u:n).x=t[e++],n.y=t[e++],n.width=t[e++],n.height=t[e],n},u.fromPoints=function(e,t){if(d.defined(t)||(t=new u),!d.defined(e)||0===e.length)return t.x=0,t.y=0,t.width=0,t.height=0,t;const n=e.length;let i=e[0].x,h=e[0].y,r=e[0].x,a=e[0].y;for(let t=1;t<n;t++){const n=e[t],d=n.x,u=n.y;i=Math.min(d,i),r=Math.max(d,r),h=Math.min(u,h),a=Math.max(u,a)}return t.x=i,t.y=h,t.width=r-i,t.height=a-h,t};const r=new a.GeographicProjection,o=new h.Cartographic,c=new h.Cartographic;u.fromRectangle=function(t,e,n){if(d.defined(n)||(n=new u),!d.defined(t))return n.x=0,n.y=0,n.width=0,n.height=0,n;var i=(e=d.defaultValue(e,r)).project(h.Rectangle.southwest(t,o)),t=e.project(h.Rectangle.northeast(t,c));return h.Cartesian2.subtract(t,i,t),n.x=i.x,n.y=i.y,n.width=t.x,n.height=t.y,n},u.clone=function(t,e){if(d.defined(t))return d.defined(e)?(e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e):new u(t.x,t.y,t.width,t.height)},u.union=function(t,e,n){d.defined(n)||(n=new u);var i=Math.min(t.x,e.x),h=Math.min(t.y,e.y),r=Math.max(t.x+t.width,e.x+e.width),e=Math.max(t.y+t.height,e.y+e.height);return n.x=i,n.y=h,n.width=r-i,n.height=e-h,n},u.expand=function(t,e,n){n=u.clone(t,n);var i=e.x-n.x,t=e.y-n.y;return i>n.width?n.width=i:i<0&&(n.width-=i,n.x=e.x),t>n.height?n.height=t:t<0&&(n.height-=t,n.y=e.y),n},u.intersect=function(t,e){var n=t.x,i=t.y,h=e.x,r=e.y;return n>h+e.width||n+t.width<h||i+t.height<r||i>r+e.height?a.Intersect.OUTSIDE:a.Intersect.INTERSECTING},u.equals=function(t,e){return t===e||d.defined(t)&&d.defined(e)&&t.x===e.x&&t.y===e.y&&t.width===e.width&&t.height===e.height},u.prototype.clone=function(t){return u.clone(this,t)},u.prototype.intersect=function(t){return u.intersect(this,t)},u.prototype.equals=function(t){return u.equals(this,t)},t.BoundingRectangle=u});