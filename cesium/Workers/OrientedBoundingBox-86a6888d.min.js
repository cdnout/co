define(["exports","./Transforms-dca21951","./Matrix2-37e55508","./RuntimeError-8952249c","./defaultValue-81eec7ed","./EllipsoidTangentPlane-06e319ef","./ComponentDatatype-a15c9a19","./Plane-6ee42cab"],function(a,d,T,t,O,N,A,P){"use strict";function I(a,t){this.center=T.Cartesian3.clone(O.defaultValue(a,T.Cartesian3.ZERO)),this.halfAxes=T.Matrix3.clone(O.defaultValue(t,T.Matrix3.ZERO))}I.packedLength=T.Cartesian3.packedLength+T.Matrix3.packedLength,I.pack=function(a,t,e){return e=O.defaultValue(e,0),T.Cartesian3.pack(a.center,t,e),T.Matrix3.pack(a.halfAxes,t,e+T.Cartesian3.packedLength),t},I.unpack=function(a,t,e){return t=O.defaultValue(t,0),O.defined(e)||(e=new I),T.Cartesian3.unpack(a,t,e.center),T.Matrix3.unpack(a,t+T.Cartesian3.packedLength,e.halfAxes),e};const R=new T.Cartesian3,E=new T.Cartesian3,S=new T.Cartesian3,U=new T.Cartesian3,L=new T.Cartesian3,z=new T.Cartesian3,B=new T.Matrix3,V={unitary:new T.Matrix3,diagonal:new T.Matrix3};I.fromPoints=function(a,t){if(O.defined(t)||(t=new I),!O.defined(a)||0===a.length)return t.halfAxes=T.Matrix3.ZERO,t.center=T.Cartesian3.ZERO,t;let e;var n=a.length,r=T.Cartesian3.clone(a[0],R);for(e=1;e<n;e++)T.Cartesian3.add(r,a[e],r);var i=1/n;T.Cartesian3.multiplyByScalar(r,i,r);let s,o=0,C=0,c=0,u=0,l=0,d=0;for(e=0;e<n;e++)s=T.Cartesian3.subtract(a[e],r,E),o+=s.x*s.x,C+=s.x*s.y,c+=s.x*s.z,u+=s.y*s.y,l+=s.y*s.z,d+=s.z*s.z;o*=i,C*=i,c*=i,u*=i,l*=i,d*=i;const h=B;h[0]=o,h[1]=C,h[2]=c,h[3]=C,h[4]=u,h[5]=l,h[6]=c,h[7]=l,h[8]=d;i=T.Matrix3.computeEigenDecomposition(h,V),i=T.Matrix3.clone(i.unitary,t.halfAxes);let x=T.Matrix3.getColumn(i,0,U),m=T.Matrix3.getColumn(i,1,L),M=T.Matrix3.getColumn(i,2,z),f=-Number.MAX_VALUE,p=-Number.MAX_VALUE,w=-Number.MAX_VALUE,g=Number.MAX_VALUE,y=Number.MAX_VALUE,b=Number.MAX_VALUE;for(e=0;e<n;e++)s=a[e],f=Math.max(T.Cartesian3.dot(x,s),f),p=Math.max(T.Cartesian3.dot(m,s),p),w=Math.max(T.Cartesian3.dot(M,s),w),g=Math.min(T.Cartesian3.dot(x,s),g),y=Math.min(T.Cartesian3.dot(m,s),y),b=Math.min(T.Cartesian3.dot(M,s),b);x=T.Cartesian3.multiplyByScalar(x,.5*(g+f),x),m=T.Cartesian3.multiplyByScalar(m,.5*(y+p),m),M=T.Cartesian3.multiplyByScalar(M,.5*(b+w),M);i=T.Cartesian3.add(x,m,t.center);T.Cartesian3.add(i,M,i);const N=S;return N.x=f-g,N.y=p-y,N.z=w-b,T.Cartesian3.multiplyByScalar(N,.5,N),T.Matrix3.multiplyByScale(t.halfAxes,N,t.halfAxes),t};const f=new T.Cartesian3,x=new T.Cartesian3;function _(a,t,e,n,r,i,s,o,C,c,u){var l=(u=!O.defined(u)?new I:u).halfAxes;T.Matrix3.setColumn(l,0,t,l),T.Matrix3.setColumn(l,1,e,l),T.Matrix3.setColumn(l,2,n,l);let d=f;d.x=(r+i)/2,d.y=(s+o)/2,d.z=(C+c)/2;const h=x;h.x=(i-r)/2,h.y=(o-s)/2,h.z=(c-C)/2;C=u.center;return d=T.Matrix3.multiplyByVector(l,d,d),T.Cartesian3.add(a,d,C),T.Matrix3.multiplyByScale(l,h,l),u}const v=new T.Cartographic,k=new T.Cartesian3,W=new T.Cartographic,D=new T.Cartographic,X=new T.Cartographic,q=new T.Cartographic,j=new T.Cartographic,Z=new T.Cartesian3,Y=new T.Cartesian3,G=new T.Cartesian3,F=new T.Cartesian3,H=new T.Cartesian3,J=new T.Cartesian2,K=new T.Cartesian2,Q=new T.Cartesian2,$=new T.Cartesian2,aa=new T.Cartesian2,ta=new T.Cartesian3,ea=new T.Cartesian3,na=new T.Cartesian3,ra=new T.Cartesian3,ia=new T.Cartesian2,sa=new T.Cartesian3,oa=new T.Cartesian3,Ca=new T.Cartesian3,ca=new P.Plane(T.Cartesian3.UNIT_X,0);I.fromRectangle=function(a,t,e,n,r){let i,s,o,C,c,u,l;if(t=O.defaultValue(t,0),e=O.defaultValue(e,0),n=O.defaultValue(n,T.Ellipsoid.WGS84),a.width<=A.CesiumMath.PI){const O=T.Rectangle.center(a,v),A=n.cartographicToCartesian(O,k),x=new N.EllipsoidTangentPlane(A,n);l=x.plane;const m=O.longitude,ta=a.south<0&&0<a.north?0:O.latitude,ea=T.Cartographic.fromRadians(m,a.north,e,W),na=T.Cartographic.fromRadians(a.west,a.north,e,D),ra=T.Cartographic.fromRadians(a.west,ta,e,X),ia=T.Cartographic.fromRadians(a.west,a.south,e,q),sa=T.Cartographic.fromRadians(m,a.south,e,j),oa=n.cartographicToCartesian(ea,Z);var d=n.cartographicToCartesian(na,Y);const ca=n.cartographicToCartesian(ra,G);var h=n.cartographicToCartesian(ia,F);const f=n.cartographicToCartesian(sa,H),p=x.projectPointToNearestOnPlane(oa,J),w=x.projectPointToNearestOnPlane(d,K),g=x.projectPointToNearestOnPlane(ca,Q),y=x.projectPointToNearestOnPlane(h,$),b=x.projectPointToNearestOnPlane(f,aa);return i=Math.min(w.x,g.x,y.x),s=-i,C=Math.max(w.y,p.y),o=Math.min(y.y,b.y),na.height=ia.height=t,d=n.cartographicToCartesian(na,Y),h=n.cartographicToCartesian(ia,F),c=Math.min(P.Plane.getPointDistance(l,d),P.Plane.getPointDistance(l,h)),u=e,_(x.origin,x.xAxis,x.yAxis,x.zAxis,i,s,o,C,c,u,r)}const x=0<a.south,m=a.north<0,M=x?a.south:m?a.north:0,f=T.Rectangle.center(a,v).longitude,p=T.Cartesian3.fromRadians(f,M,e,n,ta);p.z=0;const w=Math.abs(p.x)<A.CesiumMath.EPSILON10&&Math.abs(p.y)<A.CesiumMath.EPSILON10?T.Cartesian3.UNIT_X:T.Cartesian3.normalize(p,ea),g=T.Cartesian3.UNIT_Z,y=T.Cartesian3.cross(w,g,na);l=P.Plane.fromPointNormal(p,w,ca);const b=T.Cartesian3.fromRadians(f+A.CesiumMath.PI_OVER_TWO,M,e,n,ra);s=T.Cartesian3.dot(P.Plane.projectPointOntoPlane(l,b,ia),y),i=-s,C=T.Cartesian3.fromRadians(0,a.north,m?t:e,n,sa).z,o=T.Cartesian3.fromRadians(0,a.south,x?t:e,n,oa).z;n=T.Cartesian3.fromRadians(a.east,M,e,n,Ca);return c=P.Plane.getPointDistance(l,n),u=0,_(p,y,g,w,i,s,o,C,c,u,r)},I.fromTransformation=function(a,t){return(t=!O.defined(t)?new I:t).center=T.Matrix4.getTranslation(a,t.center),t.halfAxes=T.Matrix4.getMatrix3(a,t.halfAxes),t.halfAxes=T.Matrix3.multiplyByScalar(t.halfAxes,.5,t.halfAxes),t},I.clone=function(a,t){if(O.defined(a))return O.defined(t)?(T.Cartesian3.clone(a.center,t.center),T.Matrix3.clone(a.halfAxes,t.halfAxes),t):new I(a.center,a.halfAxes)},I.intersectPlane=function(a,t){var e=a.center,n=t.normal,r=a.halfAxes,i=n.x,s=n.y,a=n.z,r=Math.abs(i*r[T.Matrix3.COLUMN0ROW0]+s*r[T.Matrix3.COLUMN0ROW1]+a*r[T.Matrix3.COLUMN0ROW2])+Math.abs(i*r[T.Matrix3.COLUMN1ROW0]+s*r[T.Matrix3.COLUMN1ROW1]+a*r[T.Matrix3.COLUMN1ROW2])+Math.abs(i*r[T.Matrix3.COLUMN2ROW0]+s*r[T.Matrix3.COLUMN2ROW1]+a*r[T.Matrix3.COLUMN2ROW2]),t=T.Cartesian3.dot(n,e)+t.distance;return t<=-r?d.Intersect.OUTSIDE:r<=t?d.Intersect.INSIDE:d.Intersect.INTERSECTING};const p=new T.Cartesian3,w=new T.Cartesian3,g=new T.Cartesian3,y=new T.Cartesian3,b=new T.Cartesian3,ua=new T.Cartesian3;I.distanceSquaredTo=function(a,t){var e=T.Cartesian3.subtract(t,a.center,f),n=a.halfAxes;let r=T.Matrix3.getColumn(n,0,p),i=T.Matrix3.getColumn(n,1,w),s=T.Matrix3.getColumn(n,2,g);var o=T.Cartesian3.magnitude(r),t=T.Cartesian3.magnitude(i),a=T.Cartesian3.magnitude(s);let C=!0,c=!0,u=!0;0<o?T.Cartesian3.divideByScalar(r,o,r):C=!1,0<t?T.Cartesian3.divideByScalar(i,t,i):c=!1,0<a?T.Cartesian3.divideByScalar(s,a,s):u=!1;n=!C+!c+!u;let l,d,h;if(1==n){let a=r;l=i,d=s,c?u||(a=s,d=r):(a=i,l=r),h=T.Cartesian3.cross(l,d,b),a===r?r=h:a===i?i=h:a===s&&(s=h)}else if(2==n){l=r,c?l=i:u&&(l=s);let a=T.Cartesian3.UNIT_Y;a.equalsEpsilon(l,A.CesiumMath.EPSILON3)&&(a=T.Cartesian3.UNIT_X),d=T.Cartesian3.cross(l,a,y),T.Cartesian3.normalize(d,d),h=T.Cartesian3.cross(l,d,b),T.Cartesian3.normalize(h,h),l===r?(i=d,s=h):l===i?(s=d,r=h):l===s&&(r=d,i=h)}else 3==n&&(r=T.Cartesian3.UNIT_X,i=T.Cartesian3.UNIT_Y,s=T.Cartesian3.UNIT_Z);const x=ua;x.x=T.Cartesian3.dot(e,r),x.y=T.Cartesian3.dot(e,i),x.z=T.Cartesian3.dot(e,s);let m,M=0;return x.x<-o?(m=x.x+o,M+=m*m):x.x>o&&(m=x.x-o,M+=m*m),x.y<-t?(m=x.y+t,M+=m*m):x.y>t&&(m=x.y-t,M+=m*m),x.z<-a?(m=x.z+a,M+=m*m):x.z>a&&(m=x.z-a,M+=m*m),M};const h=new T.Cartesian3,m=new T.Cartesian3;I.computePlaneDistances=function(a,t,e,n){O.defined(n)||(n=new d.Interval);var r=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY,s=a.center,o=a.halfAxes,C=T.Matrix3.getColumn(o,0,p),c=T.Matrix3.getColumn(o,1,w),u=T.Matrix3.getColumn(o,2,g),l=T.Cartesian3.add(C,c,h);T.Cartesian3.add(l,u,l),T.Cartesian3.add(l,s,l);a=T.Cartesian3.subtract(l,t,m),o=T.Cartesian3.dot(e,a),r=Math.min(o,r),i=Math.max(o,i);return T.Cartesian3.add(s,C,l),T.Cartesian3.add(l,c,l),T.Cartesian3.subtract(l,u,l),T.Cartesian3.subtract(l,t,a),o=T.Cartesian3.dot(e,a),r=Math.min(o,r),i=Math.max(o,i),T.Cartesian3.add(s,C,l),T.Cartesian3.subtract(l,c,l),T.Cartesian3.add(l,u,l),T.Cartesian3.subtract(l,t,a),o=T.Cartesian3.dot(e,a),r=Math.min(o,r),i=Math.max(o,i),T.Cartesian3.add(s,C,l),T.Cartesian3.subtract(l,c,l),T.Cartesian3.subtract(l,u,l),T.Cartesian3.subtract(l,t,a),o=T.Cartesian3.dot(e,a),r=Math.min(o,r),i=Math.max(o,i),T.Cartesian3.subtract(s,C,l),T.Cartesian3.add(l,c,l),T.Cartesian3.add(l,u,l),T.Cartesian3.subtract(l,t,a),o=T.Cartesian3.dot(e,a),r=Math.min(o,r),i=Math.max(o,i),T.Cartesian3.subtract(s,C,l),T.Cartesian3.add(l,c,l),T.Cartesian3.subtract(l,u,l),T.Cartesian3.subtract(l,t,a),o=T.Cartesian3.dot(e,a),r=Math.min(o,r),i=Math.max(o,i),T.Cartesian3.subtract(s,C,l),T.Cartesian3.subtract(l,c,l),T.Cartesian3.add(l,u,l),T.Cartesian3.subtract(l,t,a),o=T.Cartesian3.dot(e,a),r=Math.min(o,r),i=Math.max(o,i),T.Cartesian3.subtract(s,C,l),T.Cartesian3.subtract(l,c,l),T.Cartesian3.subtract(l,u,l),T.Cartesian3.subtract(l,t,a),o=T.Cartesian3.dot(e,a),r=Math.min(o,r),i=Math.max(o,i),n.start=r,n.stop=i,n};const i=new T.Cartesian3,s=new T.Cartesian3,o=new T.Cartesian3;I.computeCorners=function(a,t){O.defined(t)||(t=[new T.Cartesian3,new T.Cartesian3,new T.Cartesian3,new T.Cartesian3,new T.Cartesian3,new T.Cartesian3,new T.Cartesian3,new T.Cartesian3]);var e=a.center,n=a.halfAxes,r=T.Matrix3.getColumn(n,0,i),a=T.Matrix3.getColumn(n,1,s),n=T.Matrix3.getColumn(n,2,o);return T.Cartesian3.clone(e,t[0]),T.Cartesian3.subtract(t[0],r,t[0]),T.Cartesian3.subtract(t[0],a,t[0]),T.Cartesian3.subtract(t[0],n,t[0]),T.Cartesian3.clone(e,t[1]),T.Cartesian3.subtract(t[1],r,t[1]),T.Cartesian3.subtract(t[1],a,t[1]),T.Cartesian3.add(t[1],n,t[1]),T.Cartesian3.clone(e,t[2]),T.Cartesian3.subtract(t[2],r,t[2]),T.Cartesian3.add(t[2],a,t[2]),T.Cartesian3.subtract(t[2],n,t[2]),T.Cartesian3.clone(e,t[3]),T.Cartesian3.subtract(t[3],r,t[3]),T.Cartesian3.add(t[3],a,t[3]),T.Cartesian3.add(t[3],n,t[3]),T.Cartesian3.clone(e,t[4]),T.Cartesian3.add(t[4],r,t[4]),T.Cartesian3.subtract(t[4],a,t[4]),T.Cartesian3.subtract(t[4],n,t[4]),T.Cartesian3.clone(e,t[5]),T.Cartesian3.add(t[5],r,t[5]),T.Cartesian3.subtract(t[5],a,t[5]),T.Cartesian3.add(t[5],n,t[5]),T.Cartesian3.clone(e,t[6]),T.Cartesian3.add(t[6],r,t[6]),T.Cartesian3.add(t[6],a,t[6]),T.Cartesian3.subtract(t[6],n,t[6]),T.Cartesian3.clone(e,t[7]),T.Cartesian3.add(t[7],r,t[7]),T.Cartesian3.add(t[7],a,t[7]),T.Cartesian3.add(t[7],n,t[7]),t};const n=new T.Matrix3;I.computeTransformation=function(a,t){O.defined(t)||(t=new T.Matrix4);var e=a.center,a=T.Matrix3.multiplyByUniformScale(a.halfAxes,2,n);return T.Matrix4.fromRotationTranslation(a,e,t)};const e=new d.BoundingSphere;I.isOccluded=function(a,t){a=d.BoundingSphere.fromOrientedBoundingBox(a,e);return!t.isBoundingSphereVisible(a)},I.prototype.intersectPlane=function(a){return I.intersectPlane(this,a)},I.prototype.distanceSquaredTo=function(a){return I.distanceSquaredTo(this,a)},I.prototype.computePlaneDistances=function(a,t,e){return I.computePlaneDistances(this,a,t,e)},I.prototype.computeCorners=function(a){return I.computeCorners(this,a)},I.prototype.computeTransformation=function(a){return I.computeTransformation(this,a)},I.prototype.isOccluded=function(a){return I.isOccluded(this,a)},I.equals=function(a,t){return a===t||O.defined(a)&&O.defined(t)&&T.Cartesian3.equals(a.center,t.center)&&T.Matrix3.equals(a.halfAxes,t.halfAxes)},I.prototype.clone=function(a){return I.clone(this,a)},I.prototype.equals=function(a){return I.equals(this,a)},a.OrientedBoundingBox=I});