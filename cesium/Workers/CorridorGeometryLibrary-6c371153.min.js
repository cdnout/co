define(["exports","./Matrix2-37e55508","./PolylineVolumeGeometryLibrary-996c2dbb","./defaultValue-81eec7ed","./ComponentDatatype-a15c9a19","./PolylinePipeline-21ef0cd0","./Transforms-dca21951"],function(a,O,R,s,Q,U,c){"use strict";const e={},G=new O.Cartesian3,u=new O.Cartesian3,y=new O.Cartesian3,d=new O.Cartesian3,I=[new O.Cartesian3,new O.Cartesian3],q=new O.Cartesian3,j=new O.Cartesian3,k=new O.Cartesian3,F=new O.Cartesian3,H=new O.Cartesian3,J=new O.Cartesian3,K=new O.Cartesian3,W=new O.Cartesian3,X=new O.Cartesian3,Y=new O.Cartesian3,p=new c.Quaternion,m=new O.Matrix3;function Z(a,e,n,r,t){const i=O.Cartesian3.angleBetween(O.Cartesian3.subtract(e,a,G),O.Cartesian3.subtract(n,a,u)),s=r===R.CornerType.BEVELED?1:Math.ceil(i/Q.CesiumMath.toRadians(5))+1,o=3*s,l=new Array(o);var C;l[o-3]=n.x,l[o-2]=n.y,l[o-1]=n.z,C=t?O.Matrix3.fromQuaternion(c.Quaternion.fromAxisAngle(O.Cartesian3.negate(a,G),i/s,p),m):O.Matrix3.fromQuaternion(c.Quaternion.fromAxisAngle(a,i/s,p),m);let y=0;e=O.Cartesian3.clone(e,G);for(let a=0;a<s;a++)e=O.Matrix3.multiplyByVector(C,e,e),l[y++]=e.x,l[y++]=e.y,l[y++]=e.z;return l}function $(a,e,n,r){var t=G;return r||(e=O.Cartesian3.negate(e,e)),[(t=O.Cartesian3.add(a,e,t)).x,t.y,t.z,n.x,n.y,n.z]}function _(e,a,n,r){const t=new Array(e.length),i=new Array(e.length),s=O.Cartesian3.multiplyByScalar(a,n,G),o=O.Cartesian3.negate(s,u);let l=0,C=e.length-1;for(let a=0;a<e.length;a+=3){const n=O.Cartesian3.fromArray(e,a,y),r=O.Cartesian3.add(n,o,d);t[l++]=r.x,t[l++]=r.y,t[l++]=r.z;const G=O.Cartesian3.add(n,s,d);i[C--]=G.z,i[C--]=G.y,i[C--]=G.x}return r.push(t,i),r}e.addAttribute=function(a,e,n,r){var t=e.x,i=e.y,e=e.z;s.defined(n)&&(a[n]=t,a[n+1]=i,a[n+2]=e),s.defined(r)&&(a[r]=e,a[r-1]=i,a[r-2]=t)};const aa=new O.Cartesian3,ea=new O.Cartesian3;e.computePositions=function(a){const e=a.granularity,n=a.positions,r=a.ellipsoid,t=a.width/2,i=a.cornerType,s=a.saveAttributes;let o=q,l=j,C=k,y=F,c=H,u=J,d=K,p=W,m=X,g=Y,f=[];const h=s?[]:void 0,w=s?[]:void 0;let x,z=n[0],P=n[1];l=O.Cartesian3.normalize(O.Cartesian3.subtract(P,z,l),l),o=r.geodeticSurfaceNormal(z,o),y=O.Cartesian3.normalize(O.Cartesian3.cross(o,l,y),y),s&&(h.push(y.x,y.y,y.z),w.push(o.x,o.y,o.z)),d=O.Cartesian3.clone(z,d),z=P,C=O.Cartesian3.negate(l,C);const A=[];let B;var E,S,b,D,M,T,N,v=n.length;for(B=1;B<v-1;B++){o=r.geodeticSurfaceNormal(z,o),P=n[B+1],l=O.Cartesian3.normalize(O.Cartesian3.subtract(P,z,l),l),c=O.Cartesian3.normalize(O.Cartesian3.add(l,C,c),c);const V=O.Cartesian3.multiplyByScalar(o,O.Cartesian3.dot(l,o),aa);O.Cartesian3.subtract(l,V,V),O.Cartesian3.normalize(V,V);const q=O.Cartesian3.multiplyByScalar(o,O.Cartesian3.dot(C,o),ea);if(O.Cartesian3.subtract(C,q,q),O.Cartesian3.normalize(q,q),!Q.CesiumMath.equalsEpsilon(Math.abs(O.Cartesian3.dot(V,q)),1,Q.CesiumMath.EPSILON7)){c=O.Cartesian3.cross(c,o,c),c=O.Cartesian3.cross(o,c,c),c=O.Cartesian3.normalize(c,c);const V=t/Math.max(.25,O.Cartesian3.magnitude(O.Cartesian3.cross(c,C,G))),Q=R.PolylineVolumeGeometryLibrary.angleIsGreaterThanPi(l,C,z,r);c=O.Cartesian3.multiplyByScalar(c,V,c),Q?(p=O.Cartesian3.add(z,c,p),g=O.Cartesian3.add(p,O.Cartesian3.multiplyByScalar(y,t,g),g),m=O.Cartesian3.add(p,O.Cartesian3.multiplyByScalar(y,2*t,m),m),I[0]=O.Cartesian3.clone(d,I[0]),I[1]=O.Cartesian3.clone(g,I[1]),x=U.PolylinePipeline.generateArc({positions:I,granularity:e,ellipsoid:r}),f=_(x,y,t,f),s&&(h.push(y.x,y.y,y.z),w.push(o.x,o.y,o.z)),u=O.Cartesian3.clone(m,u),y=O.Cartesian3.normalize(O.Cartesian3.cross(o,l,y),y),m=O.Cartesian3.add(p,O.Cartesian3.multiplyByScalar(y,2*t,m),m),d=O.Cartesian3.add(p,O.Cartesian3.multiplyByScalar(y,t,d),d),i===R.CornerType.ROUNDED||i===R.CornerType.BEVELED?A.push({leftPositions:Z(p,u,m,i,Q)}):A.push({leftPositions:$(z,O.Cartesian3.negate(c,c),m,Q)})):(m=O.Cartesian3.add(z,c,m),g=O.Cartesian3.add(m,O.Cartesian3.negate(O.Cartesian3.multiplyByScalar(y,t,g),g),g),p=O.Cartesian3.add(m,O.Cartesian3.negate(O.Cartesian3.multiplyByScalar(y,2*t,p),p),p),I[0]=O.Cartesian3.clone(d,I[0]),I[1]=O.Cartesian3.clone(g,I[1]),x=U.PolylinePipeline.generateArc({positions:I,granularity:e,ellipsoid:r}),f=_(x,y,t,f),s&&(h.push(y.x,y.y,y.z),w.push(o.x,o.y,o.z)),u=O.Cartesian3.clone(p,u),y=O.Cartesian3.normalize(O.Cartesian3.cross(o,l,y),y),p=O.Cartesian3.add(m,O.Cartesian3.negate(O.Cartesian3.multiplyByScalar(y,2*t,p),p),p),d=O.Cartesian3.add(m,O.Cartesian3.negate(O.Cartesian3.multiplyByScalar(y,t,d),d),d),i===R.CornerType.ROUNDED||i===R.CornerType.BEVELED?A.push({rightPositions:Z(m,u,p,i,Q)}):A.push({rightPositions:$(z,c,p,Q)})),C=O.Cartesian3.negate(l,C)}z=P}let L;return o=r.geodeticSurfaceNormal(z,o),I[0]=O.Cartesian3.clone(d,I[0]),I[1]=O.Cartesian3.clone(z,I[1]),x=U.PolylinePipeline.generateArc({positions:I,granularity:e,ellipsoid:r}),f=_(x,y,t,f),s&&(h.push(y.x,y.y,y.z),w.push(o.x,o.y,o.z)),i===R.CornerType.ROUNDED&&(L=(E=f,S=q,b=j,D=k,M=E[1],b=O.Cartesian3.fromArray(E[1],M.length-3,b),D=O.Cartesian3.fromArray(E[0],0,D),T=Z(S=O.Cartesian3.midpoint(b,D,S),b,D,R.CornerType.ROUNDED,!1),N=E.length-1,a=E[N-1],M=E[N],b=O.Cartesian3.fromArray(a,a.length-3,b),D=O.Cartesian3.fromArray(M,0,D),[T,Z(S=O.Cartesian3.midpoint(b,D,S),b,D,R.CornerType.ROUNDED,!1)])),{positions:f,corners:A,lefts:h,normals:w,endPositions:L}},a.CorridorGeometryLibrary=e});