define(["./Matrix2-37e55508","./combine-3c023bda","./AttributeCompression-27507afe","./ComponentDatatype-a15c9a19","./IndexDatatype-f1dcdf35","./createTaskProcessorWorker","./RuntimeError-8952249c","./defaultValue-81eec7ed","./WebGLConstants-508b9636"],function(I,P,U,R,T,e,a,t,n){"use strict";const F=32767,N=new I.Cartographic,v=new I.Cartesian3,M=new I.Rectangle,L=new I.Ellipsoid,S=new I.Cartesian3,_={min:void 0,max:void 0},G=new I.Cartesian3,W=new I.Cartesian3,B=new I.Cartesian3,O=new I.Cartesian3,z=new I.Cartesian3;return e(function(e,r){const a=new Uint16Array(e.positions),s=new Uint16Array(e.widths),t=new Uint32Array(e.counts),n=new Uint16Array(e.batchIds);!function(e){e=new Float64Array(e);var a=0;_.min=e[a++],_.max=e[a++],I.Rectangle.unpack(e,2,M),a+=I.Rectangle.packedLength,I.Ellipsoid.unpack(e,a,L),a+=I.Ellipsoid.packedLength,I.Cartesian3.unpack(e,a,S)}(e.packedBuffer);const i=L,o=S,c=function(e,a,t,n,r){const s=e.length/3,i=e.subarray(0,s),o=e.subarray(s,2*s),c=e.subarray(2*s,3*s);U.AttributeCompression.zigZagDeltaDecode(i,o,c);var u=new Float64Array(e.length);for(let e=0;e<s;++e){const U=i[e],s=o[e],f=c[e],p=R.CesiumMath.lerp(a.west,a.east,U/F),d=R.CesiumMath.lerp(a.south,a.north,s/F),l=R.CesiumMath.lerp(t,n,f/F),C=I.Cartographic.fromRadians(p,d,l,N),b=r.cartographicToCartesian(C,v);I.Cartesian3.pack(b,u,3*e)}return u}(a,M,_.min,_.max,i),u=c.length/3,f=4*u-4,p=new Float32Array(3*f),d=new Float32Array(3*f),l=new Float32Array(3*f),C=new Float32Array(2*f),b=new Uint16Array(f);let w,y=0,h=0,k=0,m=0,A=t.length;for(w=0;w<A;++w){const P=t[w],U=s[w],R=n[w];for(let n=0;n<P;++n){let a;if(0===n){const P=I.Cartesian3.unpack(c,3*m,G),U=I.Cartesian3.unpack(c,3*(m+1),W);a=I.Cartesian3.subtract(P,U,B),I.Cartesian3.add(P,a,a)}else a=I.Cartesian3.unpack(c,3*(m+n-1),B);const r=I.Cartesian3.unpack(c,3*(m+n),O);let t;if(n===P-1){const U=I.Cartesian3.unpack(c,3*(m+P-1),G),R=I.Cartesian3.unpack(c,3*(m+P-2),W);t=I.Cartesian3.subtract(U,R,z),I.Cartesian3.add(U,t,t)}else t=I.Cartesian3.unpack(c,3*(m+n+1),z);I.Cartesian3.subtract(a,o,a),I.Cartesian3.subtract(r,o,r),I.Cartesian3.subtract(t,o,t);const s=n===P-1?2:4;for(let e=0===n?2:0;e<s;++e){I.Cartesian3.pack(r,p,y),I.Cartesian3.pack(a,d,y),I.Cartesian3.pack(t,l,y),y+=3;const T=e-2<0?-1:1;C[h++]=e%2*2-1,C[h++]=T*U,b[k++]=R}}m+=P}const g=T.IndexDatatype.createTypedArray(f,6*u-6);let x=0,D=0;for(A=u-1,w=0;w<A;++w)g[D++]=x,g[D++]=x+2,g[D++]=x+1,g[D++]=x+1,g[D++]=x+2,g[D++]=x+3,x+=4;r.push(p.buffer,d.buffer,l.buffer),r.push(C.buffer,b.buffer,g.buffer);let E={indexDatatype:2===g.BYTES_PER_ELEMENT?T.IndexDatatype.UNSIGNED_SHORT:T.IndexDatatype.UNSIGNED_INT,currentPositions:p.buffer,previousPositions:d.buffer,nextPositions:l.buffer,expandAndWidth:C.buffer,batchIds:b.buffer,indices:g.buffer};if(e.keepDecodedPositions){const I=function(a){const t=a.length,n=new Uint32Array(t+1);let r=0;for(let e=0;e<t;++e)n[e]=r,r+=a[e];return n[t]=r,n}(t);r.push(c.buffer,I.buffer),E=P.combine(E,{decodedPositions:c.buffer,decodedPositionOffsets:I.buffer})}return E})});