define(["./GeometryOffsetAttribute-8c5e10db","./Transforms-dca21951","./Matrix2-37e55508","./RuntimeError-8952249c","./ComponentDatatype-a15c9a19","./CylinderGeometryLibrary-76cda53e","./defaultValue-81eec7ed","./GeometryAttribute-cc3a5bc9","./GeometryAttributes-32b29525","./IndexDatatype-f1dcdf35","./_commonjsHelpers-3aae1032-26891ab7","./combine-3c023bda","./WebGLConstants-508b9636"],function(b,p,y,t,_,h,A,v,R,G,e,i,n){"use strict";const O=new y.Cartesian2;function u(t){var e=(t=A.defaultValue(t,A.defaultValue.EMPTY_OBJECT)).length,i=t.topRadius,n=t.bottomRadius,r=A.defaultValue(t.slices,128),a=Math.max(A.defaultValue(t.numberOfVerticalLines,16),0);this._length=e,this._topRadius=i,this._bottomRadius=n,this._slices=r,this._numberOfVerticalLines=a,this._offsetAttribute=t.offsetAttribute,this._workerName="createCylinderOutlineGeometry"}u.packedLength=6,u.pack=function(t,e,i){return i=A.defaultValue(i,0),e[i++]=t._length,e[i++]=t._topRadius,e[i++]=t._bottomRadius,e[i++]=t._slices,e[i++]=t._numberOfVerticalLines,e[i]=A.defaultValue(t._offsetAttribute,-1),e};const f={length:void 0,topRadius:void 0,bottomRadius:void 0,slices:void 0,numberOfVerticalLines:void 0,offsetAttribute:void 0};return u.unpack=function(t,e,i){e=A.defaultValue(e,0);var n=t[e++],r=t[e++],a=t[e++],o=t[e++],s=t[e++],e=t[e];return A.defined(i)?(i._length=n,i._topRadius=r,i._bottomRadius=a,i._slices=o,i._numberOfVerticalLines=s,i._offsetAttribute=-1===e?void 0:e,i):(f.length=n,f.topRadius=r,f.bottomRadius=a,f.slices=o,f.numberOfVerticalLines=s,f.offsetAttribute=-1===e?void 0:e,new u(f))},u.createGeometry=function(r){var a=r._length,o=r._topRadius,s=r._bottomRadius,u=r._slices,f=r._numberOfVerticalLines;if(!(a<=0||o<0||s<0||0===o&&0===s)){var d=2*u,c=h.CylinderGeometryLibrary.computePositions(a,o,s,u,!1);let t,e=2*u;if(0<f){const b=Math.min(f,u);t=Math.round(u/b),e+=b}const l=G.IndexDatatype.createTypedArray(d,2*e);let i,n=0;for(i=0;i<u-1;i++)l[n++]=i,l[n++]=i+1,l[n++]=i+u,l[n++]=i+1+u;if(l[n++]=u-1,l[n++]=0,l[n++]=u+u-1,l[n++]=u,0<f)for(i=0;i<u;i+=t)l[n++]=i,l[n++]=i+u;const m=new R.GeometryAttributes;m.position=new v.GeometryAttribute({componentDatatype:_.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:c}),O.x=.5*a,O.y=Math.max(s,o);o=new p.BoundingSphere(y.Cartesian3.ZERO,y.Cartesian2.magnitude(O));if(A.defined(r._offsetAttribute)){a=c.length;const p=new Uint8Array(a/3),y=r._offsetAttribute===b.GeometryOffsetAttribute.NONE?0:1;b.arrayFill(p,y),m.applyOffset=new v.GeometryAttribute({componentDatatype:_.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:p})}return new v.Geometry({attributes:m,indices:l,primitiveType:v.PrimitiveType.LINES,boundingSphere:o,offsetAttribute:r._offsetAttribute})}},function(t,e){return A.defined(e)&&(t=u.unpack(t,e)),u.createGeometry(t)}});