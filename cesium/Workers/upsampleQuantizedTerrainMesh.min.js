define(["./AttributeCompression-27507afe","./Transforms-dca21951","./Matrix2-37e55508","./defaultValue-81eec7ed","./TerrainEncoding-48ceaaca","./IndexDatatype-f1dcdf35","./RuntimeError-8952249c","./ComponentDatatype-a15c9a19","./OrientedBoundingBox-86a6888d","./createTaskProcessorWorker","./_commonjsHelpers-3aae1032-26891ab7","./combine-3c023bda","./WebGLConstants-508b9636","./EllipsoidTangentPlane-06e319ef","./AxisAlignedBoundingBox-0ddf9b79","./IntersectionTests-ee135b8e","./Plane-6ee42cab"],function(s,se,re,g,he,oe,e,ue,de,t,n,i,r,h,o,u,d){"use strict";const pe={clipTriangleAtAxisAlignedThreshold:function(e,t,n,i,s,r){let h,o,u;g.defined(r)?r.length=0:r=[],u=t?(h=n<e,o=i<e,s<e):(h=e<n,o=e<i,e<s);t=h+o+u;let d,p,a,l,f,c;return 1===t?h?(d=(e-n)/(i-n),p=(e-n)/(s-n),r.push(1),r.push(2),1!==p&&(r.push(-1),r.push(0),r.push(2),r.push(p)),1!==d&&(r.push(-1),r.push(0),r.push(1),r.push(d))):o?(a=(e-i)/(s-i),l=(e-i)/(n-i),r.push(2),r.push(0),1!==l&&(r.push(-1),r.push(1),r.push(0),r.push(l)),1!==a&&(r.push(-1),r.push(1),r.push(2),r.push(a))):u&&(f=(e-s)/(n-s),c=(e-s)/(i-s),r.push(0),r.push(1),1!==c&&(r.push(-1),r.push(2),r.push(1),r.push(c)),1!==f&&(r.push(-1),r.push(2),r.push(0),r.push(f))):2===t?h||n===e?o||i===e?u||s===e||(p=(e-n)/(s-n),a=(e-i)/(s-i),r.push(2),r.push(-1),r.push(0),r.push(2),r.push(p),r.push(-1),r.push(1),r.push(2),r.push(a)):(c=(e-s)/(i-s),d=(e-n)/(i-n),r.push(1),r.push(-1),r.push(2),r.push(1),r.push(c),r.push(-1),r.push(0),r.push(1),r.push(d)):(l=(e-i)/(n-i),f=(e-s)/(n-s),r.push(0),r.push(-1),r.push(1),r.push(0),r.push(l),r.push(-1),r.push(2),r.push(0),r.push(f)):3!==t&&(r.push(0),r.push(1),r.push(2)),r},computeBarycentricCoordinates:function(e,t,n,i,s,r,h,o,u){var d=n-h,n=h-s,s=r-o,r=i-o,i=1/(s*d+n*r),o=t-o,h=e-h,n=(s*h+n*o)*i,o=(-r*h+d*o)*i,i=1-n-o;return g.defined(u)?(u.x=n,u.y=o,u.z=i,u):new re.Cartesian3(n,o,i)},computeLineSegmentLineSegmentIntersection:function(e,t,n,i,s,r,h,o,u){var d=(o-r)*(n-e)-(h-s)*(i-t);if(0!=d){o=((h-s)*(t-r)-(o-r)*(e-s))/d,d=((n-e)*(t-r)-(i-t)*(e-s))/d;return 0<=o&&o<=1&&0<=d&&d<=1?((u=!g.defined(u)?new re.Cartesian2:u).x=e+o*(n-e),u.y=t+o*(i-t),u):void 0}}},ae=32767,le=16383,fe=[],ce=[],ge=[],me=new re.Cartographic;let xe=new re.Cartesian3;const we=[],Ce=[],Be=[],ye=[],Ie=[],ve=new re.Cartesian3,Ae=new se.BoundingSphere,be=new de.OrientedBoundingBox,Te=new re.Cartesian2,ze=new re.Cartesian3;function Ve(){this.vertexBuffer=void 0,this.index=void 0,this.first=void 0,this.second=void 0,this.ratio=void 0}Ve.prototype.clone=function(e){return(e=!g.defined(e)?new Ve:e).uBuffer=this.uBuffer,e.vBuffer=this.vBuffer,e.heightBuffer=this.heightBuffer,e.normalBuffer=this.normalBuffer,e.index=this.index,e.first=this.first,e.second=this.second,e.ratio=this.ratio,e},Ve.prototype.initializeIndexed=function(e,t,n,i,s){this.uBuffer=e,this.vBuffer=t,this.heightBuffer=n,this.normalBuffer=i,this.index=s,this.first=void 0,this.second=void 0,this.ratio=void 0},Ve.prototype.initializeFromClipResult=function(e,t,n){let i=t+1;return-1!==e[t]?n[e[t]].clone(this):(this.vertexBuffer=void 0,this.index=void 0,this.first=n[e[i]],++i,this.second=n[e[i]],++i,this.ratio=e[i],++i),i},Ve.prototype.getKey=function(){return this.isIndexed()?this.index:JSON.stringify({first:this.first.getKey(),second:this.second.getKey(),ratio:this.ratio})},Ve.prototype.isIndexed=function(){return g.defined(this.index)},Ve.prototype.getH=function(){return g.defined(this.index)?this.heightBuffer[this.index]:ue.CesiumMath.lerp(this.first.getH(),this.second.getH(),this.ratio)},Ve.prototype.getU=function(){return g.defined(this.index)?this.uBuffer[this.index]:ue.CesiumMath.lerp(this.first.getU(),this.second.getU(),this.ratio)},Ve.prototype.getV=function(){return g.defined(this.index)?this.vBuffer[this.index]:ue.CesiumMath.lerp(this.first.getV(),this.second.getV(),this.ratio)};let p=new re.Cartesian2,a=-1;const l=[new re.Cartesian3,new re.Cartesian3],f=[new re.Cartesian3,new re.Cartesian3];function c(e,t){++a;var n=l[a],i=f[a],n=s.AttributeCompression.octDecode(e.first.getNormalX(),e.first.getNormalY(),n),i=s.AttributeCompression.octDecode(e.second.getNormalX(),e.second.getNormalY(),i);return xe=re.Cartesian3.lerp(n,i,e.ratio,xe),re.Cartesian3.normalize(xe,xe),s.AttributeCompression.octEncode(xe,t),--a,t}Ve.prototype.getNormalX=function(){return g.defined(this.index)?this.normalBuffer[2*this.index]:(p=c(this,p),p.x)},Ve.prototype.getNormalY=function(){return g.defined(this.index)?this.normalBuffer[2*this.index+1]:(p=c(this,p),p.y)};const m=[];function Me(n,i,s,r,h,o,u,d,p){if(0!==u.length){let t=0,e=0;for(;e<u.length;)e=m[t++].initializeFromClipResult(u,e,d);for(let e=0;e<t;++e){const u=m[e];if(u.isIndexed())u.newIndex=o[u.index],u.uBuffer=n,u.vBuffer=i,u.heightBuffer=s,p&&(u.normalBuffer=r);else{const h=u.getKey();if(g.defined(o[h]))u.newIndex=o[h];else{const g=n.length;n.push(u.getU()),i.push(u.getV()),s.push(u.getH()),p&&(r.push(u.getNormalX()),r.push(u.getNormalY())),u.newIndex=g,o[h]=g}}}3===t?(h.push(m[0].newIndex),h.push(m[1].newIndex),h.push(m[2].newIndex)):4===t&&(h.push(m[0].newIndex),h.push(m[1].newIndex),h.push(m[2].newIndex),h.push(m[0].newIndex),h.push(m[2].newIndex),h.push(m[3].newIndex))}}return m.push(new Ve),m.push(new Ve),m.push(new Ve),m.push(new Ve),t(function(e,t){const n=e.isEastChild,i=e.isNorthChild,s=n?le:0,r=n?ae:le,h=i?le:0,o=i?ae:le,u=we,d=Ce,p=Be,a=Ie;u.length=0,d.length=0,p.length=0,a.length=0;const l=ye;l.length=0;const f={},c=e.vertices;let g=e.indices;g=g.subarray(0,e.indexCountWithoutSkirts);const m=he.TerrainEncoding.clone(e.encoding),x=m.hasVertexNormals;let w=0;const C=e.vertexCountWithoutSkirts,B=e.minimumHeight,y=e.maximumHeight,I=new Array(C),v=new Array(C),A=new Array(C),b=x?new Array(2*C):void 0;let T,z,V,M,N;for(z=0,V=0;z<C;++z,V+=2){const ie=m.decodeTextureCoordinates(c,z,Te);if(T=m.decodeHeight(c,z),M=ue.CesiumMath.clamp(ie.x*ae|0,0,ae),N=ue.CesiumMath.clamp(ie.y*ae|0,0,ae),A[z]=ue.CesiumMath.clamp((T-B)/(y-B)*ae|0,0,ae),M<20&&(M=0),N<20&&(N=0),ae-M<20&&(M=ae),ae-N<20&&(N=ae),I[z]=M,v[z]=N,x){const ie=m.getOctEncodedNormal(c,z,ze);b[V]=ie.x,b[V+1]=ie.y}(n&&M>=le||!n&&M<=le)&&(i&&N>=le||!i&&N<=le)&&(f[z]=w,u.push(M),d.push(N),p.push(A[z]),x&&(a.push(b[V]),a.push(b[V+1])),++w)}const E=[];E.push(new Ve),E.push(new Ve),E.push(new Ve);const H=[];var R,O;for(H.push(new Ve),H.push(new Ve),H.push(new Ve),z=0;z<g.length;z+=3){const ie=g[z],se=g[z+1],re=g[z+2],t=I[ie],he=I[se],oe=I[re];E[0].initializeIndexed(I,v,A,b,ie),E[1].initializeIndexed(I,v,A,b,se),E[2].initializeIndexed(I,v,A,b,re);const ue=pe.clipTriangleAtAxisAlignedThreshold(le,n,t,he,oe,fe);ue.length<=0||((R=H[0].initializeFromClipResult(ue,0,E))>=ue.length||((R=H[1].initializeFromClipResult(ue,R,E))>=ue.length||(R=H[2].initializeFromClipResult(ue,R,E),O=pe.clipTriangleAtAxisAlignedThreshold(le,i,H[0].getV(),H[1].getV(),H[2].getV(),ce),Me(u,d,p,a,l,f,O,H,x),R<ue.length&&(H[2].clone(H[1]),H[2].initializeFromClipResult(ue,R,E),O=pe.clipTriangleAtAxisAlignedThreshold(le,i,H[0].getV(),H[1].getV(),H[2].getV(),ce),Me(u,d,p,a,l,f,O,H,x)))))}const S=n?-32767:0,U=i?-32767:0,F=[],P=[],D=[],W=[];let X=Number.MAX_VALUE,k=-X;const K=ge;K.length=0;const L=re.Ellipsoid.clone(e.ellipsoid),Y=re.Rectangle.clone(e.childRectangle),_=Y.north,j=Y.south;let G=Y.east;var J=Y.west;for(G<J&&(G+=ue.CesiumMath.TWO_PI),z=0;z<u.length;++z)M=Math.round(u[z]),M=M<=s?(F.push(z),0):M>=r?(D.push(z),ae):2*M+S,u[z]=M,N=Math.round(d[z]),N=N<=h?(P.push(z),0):N>=o?(W.push(z),ae):2*N+U,d[z]=N,T=ue.CesiumMath.lerp(B,y,p[z]/ae),T<X&&(X=T),T>k&&(k=T),p[z]=T,me.longitude=ue.CesiumMath.lerp(J,G,M/ae),me.latitude=ue.CesiumMath.lerp(j,_,N/ae),me.height=T,L.cartographicToCartesian(me,xe),K.push(xe.x),K.push(xe.y),K.push(xe.z);const Z=se.BoundingSphere.fromVertices(K,re.Cartesian3.ZERO,3,Ae),q=de.OrientedBoundingBox.fromRectangle(Y,X,k,L,be),Q=new he.EllipsoidalOccluder(L).computeHorizonCullingPointFromVerticesPossiblyUnderEllipsoid(Z.center,K,3,Z.center,X,ve),$=k-X,ee=new Uint16Array(u.length+d.length+p.length);for(z=0;z<u.length;++z)ee[z]=u[z];let te=u.length;for(z=0;z<d.length;++z)ee[te+z]=d[z];for(te+=d.length,z=0;z<p.length;++z)ee[te+z]=ae*(p[z]-X)/$;e=oe.IndexDatatype.createTypedArray(u.length,l);let ne;if(x){const ie=new Uint8Array(a);t.push(ee.buffer,e.buffer,ie.buffer),ne=ie.buffer}else t.push(ee.buffer,e.buffer);return{vertices:ee.buffer,encodedNormals:ne,indices:e.buffer,minimumHeight:X,maximumHeight:k,westIndices:F,southIndices:P,eastIndices:D,northIndices:W,boundingSphere:Z,orientedBoundingBox:q,horizonOcclusionPoint:Q}})});