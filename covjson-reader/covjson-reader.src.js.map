{"version":3,"file":null,"sources":["node_modules/ndarray/node_modules/iota-array/iota.js","node_modules/ndarray/node_modules/is-buffer/index.js","node_modules/ndarray/ndarray.js","node_modules/url-template/lib/url-template.js","src/constants.js","src/util.js","src/http-common.js","src/http.js","src/Coverage.js","src/CoverageCollection.js","src/reader.js"],"sourcesContent":["\"use strict\"\n\nfunction iota(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = i\n  }\n  return result\n}\n\nmodule.exports = iota","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","var iota = require(\"iota-array\")\nvar isBuffer = require(\"is-buffer\")\n\nvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\nfunction compare1st(a, b) {\n  return a[0] - b[0]\n}\n\nfunction order() {\n  var stride = this.stride\n  var terms = new Array(stride.length)\n  var i\n  for(i=0; i<terms.length; ++i) {\n    terms[i] = [Math.abs(stride[i]), i]\n  }\n  terms.sort(compare1st)\n  var result = new Array(terms.length)\n  for(i=0; i<result.length; ++i) {\n    result[i] = terms[i][1]\n  }\n  return result\n}\n\nfunction compileConstructor(dtype, dimension) {\n  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n  if(dimension < 0) {\n    className = \"View_Nil\" + dtype\n  }\n  var useGetters = (dtype === \"generic\")\n\n  if(dimension === -1) {\n    //Special case for trivial arrays\n    var code =\n      \"function \"+className+\"(a){this.data=a;};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new \"+className+\"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n    var procedure = new Function(code)\n    return procedure()\n  } else if(dimension === 0) {\n    //Special case for 0d arrays\n    var code =\n      \"function \"+className+\"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function \"+className+\"_copy() {\\\nreturn new \"+className+\"(this.data,this.offset)\\\n};\\\nproto.pick=function \"+className+\"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function \"+className+\"_get(){\\\nreturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\"};\\\nproto.set=function \"+className+\"_set(v){\\\nreturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n};\\\nreturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n    var procedure = new Function(\"TrivialArray\", code)\n    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n  }\n\n  var code = [\"'use strict'\"]\n\n  //Create constructor for view\n  var indices = iota(dimension)\n  var args = indices.map(function(i) { return \"i\"+i })\n  var index_str = \"this.offset+\" + indices.map(function(i) {\n        return \"this.stride[\" + i + \"]*i\" + i\n      }).join(\"+\")\n  var shapeArg = indices.map(function(i) {\n      return \"b\"+i\n    }).join(\",\")\n  var strideArg = indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")\n  code.push(\n    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n      \"this.shape=[\" + shapeArg + \"]\",\n      \"this.stride=[\" + strideArg + \"]\",\n      \"this.offset=d|0}\",\n    \"var proto=\"+className+\".prototype\",\n    \"proto.dtype='\"+dtype+\"'\",\n    \"proto.dimension=\"+dimension)\n\n  //view.size:\n  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\nreturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\"}})\")\n\n  //view.order:\n  if(dimension === 1) {\n    code.push(\"proto.order=[0]\")\n  } else {\n    code.push(\"Object.defineProperty(proto,'order',{get:\")\n    if(dimension < 4) {\n      code.push(\"function \"+className+\"_order(){\")\n      if(dimension === 2) {\n        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n      } else if(dimension === 3) {\n        code.push(\n\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})\")\n      }\n    } else {\n      code.push(\"ORDER})\")\n    }\n  }\n\n  //view.set(i0, ..., v):\n  code.push(\n\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n  if(useGetters) {\n    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]=v}\")\n  }\n\n  //view.get(i0, ...):\n  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n  if(useGetters) {\n    code.push(\"return this.data.get(\"+index_str+\")}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]}\")\n  }\n\n  //view.index:\n  code.push(\n    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\n  //view.hi():\n  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"this.stride[\"+i + \"]\"\n    }).join(\",\")+\",this.offset)}\")\n\n  //view.lo():\n  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\nd=i\"+i+\"|0;\\\nb+=c\"+i+\"*d;\\\na\"+i+\"-=d}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\"+i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")+\",b)}\")\n\n  //view.step():\n  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n    indices.map(function(i) {\n      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'){\\\nd=i\"+i+\"|0;\\\nif(d<0){\\\nc+=b\"+i+\"*(a\"+i+\"-1);\\\na\"+i+\"=ceil(-a\"+i+\"/d)\\\n}else{\\\na\"+i+\"=ceil(a\"+i+\"/d)\\\n}\\\nb\"+i+\"*=d\\\n}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\" + i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\" + i\n    }).join(\",\")+\",c)}\")\n\n  //view.transpose():\n  var tShape = new Array(dimension)\n  var tStride = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    tShape[i] = \"a[i\"+i+\"]\"\n    tStride[i] = \"b[i\"+i+\"]\"\n  }\n  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\n  //view.pick():\n  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n  }\n  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\n  //Add return statement\n  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n    indices.map(function(i) {\n      return \"shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"stride[\"+i+\"]\"\n    }).join(\",\")+\",offset)}\")\n\n  //Compile procedure\n  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n}\n\nfunction arrayDType(data) {\n  if(isBuffer(data)) {\n    return \"buffer\"\n  }\n  if(hasTypedArrays) {\n    switch(Object.prototype.toString.call(data)) {\n      case \"[object Float64Array]\":\n        return \"float64\"\n      case \"[object Float32Array]\":\n        return \"float32\"\n      case \"[object Int8Array]\":\n        return \"int8\"\n      case \"[object Int16Array]\":\n        return \"int16\"\n      case \"[object Int32Array]\":\n        return \"int32\"\n      case \"[object Uint8Array]\":\n        return \"uint8\"\n      case \"[object Uint16Array]\":\n        return \"uint16\"\n      case \"[object Uint32Array]\":\n        return \"uint32\"\n      case \"[object Uint8ClampedArray]\":\n        return \"uint8_clamped\"\n    }\n  }\n  if(Array.isArray(data)) {\n    return \"array\"\n  }\n  return \"generic\"\n}\n\nvar CACHED_CONSTRUCTORS = {\n  \"float32\":[],\n  \"float64\":[],\n  \"int8\":[],\n  \"int16\":[],\n  \"int32\":[],\n  \"uint8\":[],\n  \"uint16\":[],\n  \"uint32\":[],\n  \"array\":[],\n  \"uint8_clamped\":[],\n  \"buffer\":[],\n  \"generic\":[]\n}\n\n;(function() {\n  for(var id in CACHED_CONSTRUCTORS) {\n    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n  }\n});\n\nfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n  if(data === undefined) {\n    var ctor = CACHED_CONSTRUCTORS.array[0]\n    return ctor([])\n  } else if(typeof data === \"number\") {\n    data = [data]\n  }\n  if(shape === undefined) {\n    shape = [ data.length ]\n  }\n  var d = shape.length\n  if(stride === undefined) {\n    stride = new Array(d)\n    for(var i=d-1, sz=1; i>=0; --i) {\n      stride[i] = sz\n      sz *= shape[i]\n    }\n  }\n  if(offset === undefined) {\n    offset = 0\n    for(var i=0; i<d; ++i) {\n      if(stride[i] < 0) {\n        offset -= (shape[i]-1)*stride[i]\n      }\n    }\n  }\n  var dtype = arrayDType(data)\n  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n  while(ctor_list.length <= d+1) {\n    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n  }\n  var ctor = ctor_list[d+1]\n  return ctor(data, shape, stride, offset)\n}\n\nmodule.exports = wrappedNDArrayCtor\n","(function (root, factory) {\n    if (typeof exports === 'object') {\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else {\n        root.urltemplate = factory();\n    }\n}(this, function () {\n  /**\n   * @constructor\n   */\n  function UrlTemplate() {\n  }\n\n  /**\n   * @private\n   * @param {string} str\n   * @return {string}\n   */\n  UrlTemplate.prototype.encodeReserved = function (str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n      if (!/%[0-9A-Fa-f]/.test(part)) {\n        part = encodeURI(part).replace(/%5B/g, '[').replace(/%5D/g, ']');\n      }\n      return part;\n    }).join('');\n  };\n\n  /**\n   * @private\n   * @param {string} str\n   * @return {string}\n   */\n  UrlTemplate.prototype.encodeUnreserved = function (str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n      return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n  }\n\n  /**\n   * @private\n   * @param {string} operator\n   * @param {string} value\n   * @param {string} key\n   * @return {string}\n   */\n  UrlTemplate.prototype.encodeValue = function (operator, value, key) {\n    value = (operator === '+' || operator === '#') ? this.encodeReserved(value) : this.encodeUnreserved(value);\n\n    if (key) {\n      return this.encodeUnreserved(key) + '=' + value;\n    } else {\n      return value;\n    }\n  };\n\n  /**\n   * @private\n   * @param {*} value\n   * @return {boolean}\n   */\n  UrlTemplate.prototype.isDefined = function (value) {\n    return value !== undefined && value !== null;\n  };\n\n  /**\n   * @private\n   * @param {string}\n   * @return {boolean}\n   */\n  UrlTemplate.prototype.isKeyOperator = function (operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n  };\n\n  /**\n   * @private\n   * @param {Object} context\n   * @param {string} operator\n   * @param {string} key\n   * @param {string} modifier\n   */\n  UrlTemplate.prototype.getValues = function (context, operator, key, modifier) {\n    var value = context[key],\n        result = [];\n\n    if (this.isDefined(value) && value !== '') {\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        value = value.toString();\n\n        if (modifier && modifier !== '*') {\n          value = value.substring(0, parseInt(modifier, 10));\n        }\n\n        result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n      } else {\n        if (modifier === '*') {\n          if (Array.isArray(value)) {\n            value.filter(this.isDefined).forEach(function (value) {\n              result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n            }, this);\n          } else {\n            Object.keys(value).forEach(function (k) {\n              if (this.isDefined(value[k])) {\n                result.push(this.encodeValue(operator, value[k], k));\n              }\n            }, this);\n          }\n        } else {\n          var tmp = [];\n\n          if (Array.isArray(value)) {\n            value.filter(this.isDefined).forEach(function (value) {\n              tmp.push(this.encodeValue(operator, value));\n            }, this);\n          } else {\n            Object.keys(value).forEach(function (k) {\n              if (this.isDefined(value[k])) {\n                tmp.push(this.encodeUnreserved(k));\n                tmp.push(this.encodeValue(operator, value[k].toString()));\n              }\n            }, this);\n          }\n\n          if (this.isKeyOperator(operator)) {\n            result.push(this.encodeUnreserved(key) + '=' + tmp.join(','));\n          } else if (tmp.length !== 0) {\n            result.push(tmp.join(','));\n          }\n        }\n      }\n    } else {\n      if (operator === ';') {\n        if (this.isDefined(value)) {\n          result.push(this.encodeUnreserved(key));\n        }\n      } else if (value === '' && (operator === '&' || operator === '?')) {\n        result.push(this.encodeUnreserved(key) + '=');\n      } else if (value === '') {\n        result.push('');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @param {string} template\n   * @return {function(Object):string}\n   */\n  UrlTemplate.prototype.parse = function (template) {\n    var that = this;\n    var operators = ['+', '#', '.', '/', ';', '?', '&'];\n\n    return {\n      expand: function (context) {\n        return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n          if (expression) {\n            var operator = null,\n                values = [];\n\n            if (operators.indexOf(expression.charAt(0)) !== -1) {\n              operator = expression.charAt(0);\n              expression = expression.substr(1);\n            }\n\n            expression.split(/,/g).forEach(function (variable) {\n              var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n              values.push.apply(values, that.getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n            });\n\n            if (operator && operator !== '+') {\n              var separator = ',';\n\n              if (operator === '?') {\n                separator = '&';\n              } else if (operator !== '#') {\n                separator = operator;\n              }\n              return (values.length !== 0 ? operator : '') + values.join(separator);\n            } else {\n              return values.join(',');\n            }\n          } else {\n            return that.encodeReserved(literal);\n          }\n        });\n      }\n    };\n  };\n\n  return new UrlTemplate();\n}));\n","export {DOMAIN, COVERAGE, COVERAGECOLLECTION} from 'covutils'\r\nexport const LINKRELPREFIX = 'http://www.iana.org/assignments/relation/'","export {minMax, indicesOfNearest, indexOfNearest} from 'covutils'\r\n\r\nconst PREFIX = 'https://covjson.org/def/'\r\nexport const CORE_PREFIX = PREFIX + 'core#'\r\nexport const DOMAINTYPES_PREFIX = PREFIX + 'domainTypes#'\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport function assert (condition, message) {\r\n  if (!condition) {\r\n    message = message || 'Assertion failed'\r\n    throw new Error(message)\r\n  }\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport function shallowcopy (obj) {\r\n  let copy = Object.create(Object.getPrototypeOf(obj))\r\n  for (let prop in obj) {\r\n    copy[prop] = obj[prop]\r\n  }\r\n  return copy\r\n}\r\n\r\n/**\r\n * Extracts all the directly included namespaces from the `@context` field,\r\n * not following remote JSON-LD contexts.\r\n * \r\n * @ignore\r\n * @param doc A JSON-LD document. \r\n * @returns {Map<string,string>} \r\n */\r\nexport function getNamespacePrefixes (doc) {\r\n  let context = doc['@context']\r\n  if (!context) {\r\n    return\r\n  }\r\n  if (!Array.isArray(context)) {\r\n    context = [context]\r\n  }\r\n  let prefixes = new Map()\r\n  for (let item of context) {\r\n    if (typeof item === 'string') {\r\n      continue\r\n    }\r\n    for (let key of Object.keys(item)) {\r\n      if (typeof item[key] === 'string') {\r\n        prefixes.set(key, item[key])\r\n      }\r\n    }\r\n  }\r\n  return prefixes\r\n}","export const MEDIATYPE = {\r\n  COVJSON: 'application/prs.coverage+json',\r\n  JSONLD: 'application/ld+json',\r\n  JSON: 'application/json',\r\n  TEXT: 'text/plain'\r\n}\r\n\r\nexport const EXT = {\r\n  COVJSON: '.covjson'\r\n}\r\n\r\nimport {CORE_PREFIX} from './util.js'\r\nexport const COVJSON_PROFILE_STANDALONE = CORE_PREFIX + 'standalone'\r\n\r\n/**\r\n * Returns an Accept header value for requesting CoverageJSON documents.\r\n * \r\n * @param {bool} standalone Whether to include the standalone profile of CoverageJSON or not.\r\n */\r\nexport function getAcceptHeader (standalone) {\r\n  let covjsonProfile = standalone ? '; profile=\"' + COVJSON_PROFILE_STANDALONE + '\"' : ''\r\n  let accept =\r\n    MEDIATYPE.COVJSON + covjsonProfile + '; q=1.0, ' + \r\n    MEDIATYPE.JSONLD + '; q=0.1, ' + \r\n    MEDIATYPE.JSON + '; q=0.1'\r\n  return accept\r\n}\r\n\r\n/**\r\n * Checks if a media type matches any given media types, ignoring any parameters. \r\n * \r\n * @param {string} mediaType The media type.\r\n * @param {string|Array} matchingMediaTypes The media type(s) to match against.\r\n * @return {bool} True if there is a match.\r\n */\r\nexport function matchesMediaTypes (mediaType, matchingMediaTypes) {\r\n  if (!Array.isArray(matchingMediaTypes)) {\r\n    matchingMediaTypes = [matchingMediaTypes]\r\n  }\r\n  return matchingMediaTypes.some(t => mediaType.indexOf(t) === 0)\r\n}\r\n","import {getAcceptHeader} from './http-common.js'\r\n\r\n/**\r\n * See reader.js#load for docs.\r\n * \r\n * Browser implementation.\r\n */\r\nexport function load (url, options = {}, responseType='arraybuffer') {\r\n  if (['arraybuffer', 'text'].indexOf(responseType) === -1) {\r\n    throw new Error()\r\n  }\r\n  let headers = options.headers || {}\r\n  return new Promise((resolve, reject) => {\r\n    var req = new XMLHttpRequest()\r\n    req.open('GET', url)\r\n    req.responseType = responseType\r\n    let accept = getAcceptHeader(options.eagerload)\r\n    req.setRequestHeader('Accept', accept)\r\n    if (headers) {\r\n      for (let header of Object.keys(headers)) {\r\n        req.setRequestHeader(header, headers[header])\r\n      }\r\n    }\r\n\r\n    req.addEventListener('load', () => {\r\n      try {\r\n        if (!(req.status >= 200 && req.status < 300 || req.status === 304)) { // as in jquery\r\n          reject(new Error('Resource \"' + url + '\" not found, HTTP status code: ' + req.status))\r\n          return\r\n        }\r\n        \r\n        let data\r\n        if (responseType === 'arraybuffer') {\r\n          if (window.TextDecoder) {\r\n            let t0 = new Date()\r\n            data = JSON.parse(new TextDecoder().decode(new DataView(req.response)))\r\n            console.log('JSON decoding: ' + (new Date()-t0) + 'ms')\r\n          } else {\r\n            // load again (from cache) to get correct response type\r\n            // Note we use 'text' and not 'json' as we want to throw parsing errors.\r\n            // With 'json', the response is just 'null'.\r\n            reject({responseType: 'text'})\r\n            return\r\n          }\r\n        } else {\r\n          let t0 = new Date()\r\n          data = JSON.parse(req.response)\r\n          console.log('JSON decoding (slow path): ' + (new Date()-t0) + 'ms')\r\n        }\r\n        let responseHeaders = parseResponseHeaders(req.getAllResponseHeaders())\r\n        resolve({\r\n          data,\r\n          headers: responseHeaders\r\n        })\r\n      } catch (e) {\r\n        reject(e)\r\n      }\r\n    })\r\n    req.addEventListener('error', () => {\r\n      reject(new Error('Network error loading resource at ' + url))\r\n    })\r\n\r\n    req.send()\r\n  }).catch(e => {\r\n    if (e.responseType) {\r\n      return load(url, headers, e.responseType)\r\n    } else {\r\n      throw e\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * XmlHttpRequest's getAllResponseHeaders() method returns a string of response\r\n * headers according to the format described here:\r\n * http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders-method\r\n * This method parses that string into a user-friendly key/value pair object.\r\n * Header names are lower-cased.\r\n * \r\n * https://gist.github.com/monsur/706839\r\n */\r\nfunction parseResponseHeaders (headerStr) {\r\n  var headers = {};\r\n  if (!headerStr) {\r\n    return headers;\r\n  }\r\n  var headerPairs = headerStr.split('\\u000d\\u000a');\r\n  for (var i = 0; i < headerPairs.length; i++) {\r\n    var headerPair = headerPairs[i];\r\n    // Can't use split() here because it does the wrong thing\r\n    // if the header value has the string \": \" in it.\r\n    var index = headerPair.indexOf('\\u003a\\u0020');\r\n    if (index > 0) {\r\n      var key = headerPair.substring(0, index).toLowerCase();\r\n      var val = headerPair.substring(index + 2);\r\n      headers[key] = val;\r\n    }\r\n  }\r\n  return headers;\r\n}\r\n","/**\r\n * @external {Parameter} https://github.com/Reading-eScience-Centre/coverage-jsapi/blob/master/Parameter.md\r\n * @external {Domain} https://github.com/Reading-eScience-Centre/coverage-jsapi/blob/master/Domain.md\r\n * @external {Range} https://github.com/Reading-eScience-Centre/coverage-jsapi/blob/master/Range.md\r\n */\r\n\r\nimport ndarray from 'ndarray'\r\nimport template from 'url-template'\r\n\r\nimport {minMax, subsetDomainByIndex, subsetByValue as subsetCoverageByValue, normalizeIndexSubsetConstraints} from 'covutils'\r\n\r\nimport {COVERAGE} from './constants.js'\r\nimport {shallowcopy, getNamespacePrefixes, CORE_PREFIX, DOMAINTYPES_PREFIX} from './util.js'\r\n\r\nimport {load} from './http.js'\r\n\r\n/** \r\n * Wraps a CoverageJSON Coverage object as a Coverage API object.\r\n * \r\n * @see https://github.com/Reading-eScience-Centre/coverage-jsapi\r\n */\r\nexport default class Coverage {\r\n  \r\n  /**\r\n   * Create a Coverage instance.\r\n   * \r\n   * @param {Object} covjson A CoverageJSON Coverage object.\r\n   * @param {Object} [options] \r\n   * @param {boolean} [options.cacheRanges]\r\n   *   If true, then any range that was loaded remotely is cached.\r\n   *   (The domain is always cached.)\r\n   * @param {Array} [options.referencing]\r\n   *   Referencing info to use (e.g. from containing collection).                        \r\n   */\r\n  constructor (covjson, options) {\r\n    this._covjson = covjson\r\n    \r\n    /**\r\n     * The constant \"Coverage\".\r\n     * \r\n     * @type {string}\r\n     */\r\n    this.type = COVERAGE\r\n    \r\n    /**\r\n     * JSON-LD document\r\n     * \r\n     * @type {Object}\r\n     */\r\n    this.ld = {}\r\n    \r\n    this._exposeLd(covjson)\r\n    \r\n    this.prefixes = getNamespacePrefixes(this.ld)\r\n    \r\n    /**\r\n     * The options object that was passed in to the constructor. \r\n     * \r\n     * @type {Object} \r\n     */\r\n    this.options = options ? shallowcopy(options) : {}\r\n    \r\n    /** \r\n     * ID of the coverage.\r\n     * \r\n     * @type {string|undefined} \r\n     */\r\n    this.id = covjson.id\r\n    \r\n    /**\r\n     * A Map from key to {@link Parameter} object.\r\n     * The key is a short alias of a {@link Parameter}, typically what is called a \"variable name\" or similar.\r\n     * \r\n     * @type {Map<string,Parameter>}\r\n     */\r\n    this.parameters = new Map()\r\n    for (let key of Object.keys(covjson.parameters)) {\r\n      transformParameter(covjson.parameters, key)\r\n      this.parameters.set(key, covjson.parameters[key])\r\n    }\r\n            \r\n    let domainType\r\n    if (typeof this._covjson.domain === 'string') {\r\n      domainType = this._covjson.domainType\r\n    } else {\r\n      domainType = this._covjson.domain.domainType || this._covjson.domainType\r\n    }\r\n    if (domainType && domainType.indexOf(':') === -1) {\r\n      domainType = DOMAINTYPES_PREFIX + domainType\r\n    }\r\n\r\n    /**\r\n     * If defined, then the coverage has a domain that follows the given domain type,\r\n     * either a full URI or a namespace-prefixed term. (See .prefixes)\r\n     *  \r\n     * @type {string|undefined} \r\n     */\r\n    this.domainType = domainType\r\n    \r\n    this._updateLoadStatus()\r\n  }\r\n    \r\n  _updateLoadStatus () {\r\n    let isLoaded = prop => typeof prop === 'object' \r\n    let domainLoaded = isLoaded(this._covjson.domain)\r\n    let rangesLoaded = Object.keys(this._covjson.ranges).every(key => isLoaded(this._covjson.ranges[key]))\r\n    \r\n    /**\r\n     * A boolean which indicates whether all coverage data is already loaded in memory.\r\n     * If true then this typically means that calls to .loadDomain(), .loadRange(),\r\n     * .loadRanges(), .subsetByIndex(), and .subsetByValue() will not invoke a network request.\r\n     * \r\n     * @type {boolean}\r\n     */\r\n    this.loaded = domainLoaded && rangesLoaded\r\n  }\r\n  \r\n  _exposeLd (covjson) {\r\n    if (!covjson['@context']) {\r\n      // no LD love here...\r\n      return\r\n    }\r\n    // make a deep copy since the object gets modified in-place later\r\n    // but first, remove domain and range which may be embedded\r\n    let copy = shallowcopy(covjson)\r\n    delete copy.domain\r\n    delete copy.ranges\r\n    this.ld = JSON.parse(JSON.stringify(copy))\r\n  }\r\n    \r\n  /**\r\n   * Returns a Promise succeeding with a {@link Domain} object.\r\n   * \r\n   * @return {Promise<Domain>}\r\n   */\r\n  loadDomain () {\r\n    let domainOrUrl = this._covjson.domain\r\n    if (this._domainPromise) return this._domainPromise\r\n    let promise\r\n    if (typeof domainOrUrl === 'object') {\r\n      let domain = domainOrUrl\r\n      transformDomain(domain, this.options.referencing, this.domainType)\r\n      promise = Promise.resolve(domain)\r\n    } else {\r\n      let url = domainOrUrl\r\n      promise = load(url).then(result => {\r\n        let domain = result.data\r\n        transformDomain(domain, this.options.referencing, this.domainType)\r\n        this._covjson.domain = domain\r\n        this._updateLoadStatus()\r\n        return domain\r\n      })\r\n    }\r\n    /* The promise gets cached so that the domain is not loaded twice remotely.\r\n     * This might otherwise happen when loadDomain and loadRange is used\r\n     * with Promise.all(). Remember that loadRange also invokes loadDomain.\r\n     */ \r\n    this._domainPromise = promise\r\n    return promise\r\n  }\r\n  \r\n  /**\r\n   * Returns a Promise succeeding with a {@link Range} object.\r\n   * \r\n   * Note that this method implicitly loads the domain as well. \r\n   * \r\n   * @example\r\n   * cov.loadRange('salinity').then(function (sal) {\r\n   *   // work with Range object\r\n   * }).catch(function (e) {\r\n   *   // there was an error when loading the range\r\n   *   console.log(e.message)\r\n   * }) \r\n   * @param {string} paramKey The key of the Parameter for which to load the range.\r\n   * @return {Promise<Range>} A Promise object which loads the requested range data and succeeds with a Range object.\r\n   */\r\n  loadRange (paramKey) {\r\n    return loadRangeFn(this)(paramKey)\r\n  }\r\n  \r\n  /**\r\n   * Returns the requested range data as a Promise.\r\n   * \r\n   * Note that this method implicitly loads the domain as well. \r\n   * \r\n   * @example\r\n   * cov.loadRanges(['salinity','temp']).then(function (ranges) {\r\n   *   // work with Map object\r\n   *   console.log(ranges.get('salinity').values)\r\n   * }).catch(function (e) {\r\n   *   // there was an error when loading the range data\r\n   *   console.log(e)\r\n   * }) \r\n   * @param {iterable<string>} [paramKeys] An iterable of parameter keys for which to load the range data. If not given, loads all range data.\r\n   * @return {Promise<Map<string,Range>>} A Promise object which loads the requested range data and succeeds with a Map object.\r\n   */\r\n  loadRanges (paramKeys) {\r\n    return loadRangesFn(this)(paramKeys)\r\n  }\r\n  \r\n  /**\r\n   * Returns a Promise object which provides a copy of this Coverage object\r\n   * with the domain subsetted by the given indices specification.\r\n   * \r\n   * Note that the coverage type and/or domain type of the resulting coverage\r\n   * may be different than in the original coverage.\r\n   * \r\n   * Note that the subsetted ranges are a view over the original ranges, meaning\r\n   * that no copying is done but also no memory is released if the original\r\n   * coverage is garbage collected.\r\n   * \r\n   * @example\r\n   * cov.subsetByIndex({t: 4, z: {start: 10, stop: 20} }).then(function(subsetCov) {\r\n   *   // work with subsetted coverage\r\n   * })\r\n   * @param {Object} constraints An object which describes the subsetting constraints.\r\n   *   Every property of it refers to an axis name as defined in Domain.names,\r\n   *   and its value must either be an integer\r\n   *   or an object with start, stop, and optionally step (defaults to 1) properties\r\n   *   whose values are integers.\r\n   *   Properties that have the values undefined or null are ignored. \r\n   *   All integers must be non-negative, step must not be zero.\r\n   *   An integer constrains the axis to the given index,\r\n   *   a start/stop/step object to a range of indices:\r\n   *   If step=1, this includes all indices starting at start and ending at stop (exclusive);\r\n   *   if step>1, all indices start, start + step, ..., start + (q + r - 1) step where \r\n   *   q and r are the quotient and remainder obtained by dividing stop - start by step.\r\n   * @returns {Promise<Coverage>} A Promise object with the subsetted coverage object as result.\r\n   */\r\n  subsetByIndex (constraints) {\r\n    return subsetByIndexFn(this)(constraints)\r\n  }\r\n  \r\n  /**\r\n   * Returns a Promise object which provides a copy of this Coverage object\r\n   * with the domain subsetted by the given value specification.\r\n   * \r\n   * Note that the coverage type and/or domain type of the resulting coverage\r\n   * may be different than in the original coverage.\r\n   * \r\n   * Note that the subsetted ranges are a view over the original ranges, meaning\r\n   * that no copying is done but also no memory is released if the original\r\n   * coverage is garbage collected.\r\n   * \r\n   * @example\r\n   * cov.subsetByValue({\r\n   *   t: '2015-01-01T01:00:00',\r\n   *   z: {start: -10, stop: -5} \r\n   * }).then(function(subsetCov) {\r\n   *   // work with subsetted coverage\r\n   * })\r\n   * @example\r\n   * cov.subsetByValue({z: {target: -10} }).then(function(subsetCov) {\r\n   *   // work with subsetted coverage\r\n   * }\r\n   * @param {Object} constraints An object which describes the subsetting constraints.\r\n   *  Every property of it refers to an axis name as defined in Domain.names,\r\n   *  and its value must either be a number or string, or,\r\n   *  if the axis has an ordering relation, an object with start and stop properties\r\n   *  whose values are numbers or strings, or an object with a target property\r\n   *  whose value is a number or string.\r\n   *  Properties that have the values undefined or null are ignored.\r\n   *  A number or string constrains the axis to exactly the given value,\r\n   *  a start/stop object to the values intersecting the extent,\r\n   *  and a target object to the value closest to the given value.\r\n   * @returns {Promise<Coverage>} A Promise object with the subsetted coverage object as result.\r\n   */\r\n  subsetByValue (constraints) {\r\n    return subsetCoverageByValue(this, constraints)\r\n  }\r\n}\r\n\r\nfunction getRangeAxisOrder (domain, range) {\r\n  if (!domain) {\r\n    return range._axisNames\r\n  }\r\n  // backwards-compatibility, in the future the range always has an explicit axis ordering\r\n  let needsRangeAxisOrder = [...domain.axes.values()].filter(axis => axis.values.length > 1).length > 1\r\n  \r\n  // domain is checked for backwards-compatibility\r\n  let axisOrder = domain._rangeAxisOrder || range._axisNames\r\n  if (needsRangeAxisOrder && !axisOrder) {\r\n    throw new Error('Range axis order missing')\r\n  }\r\n  axisOrder = axisOrder || [...domain.axes.keys()]\r\n  return axisOrder\r\n}\r\n\r\nfunction getRangeShapeArray (domain, range) {\r\n  if (!domain) {\r\n    return range._shape\r\n  }\r\n  // mostly backwards-compatibility, in the future this just returns range._shape\r\n  let axisOrder = getRangeAxisOrder(domain, range)\r\n  let shape = axisOrder.map(k => domain.axes.get(k).values.length)\r\n  if (range._shape) {\r\n    let matchesDomain = range._shape.length === shape.length && range._shape.every((v,i) => v === shape[i])\r\n    if (!matchesDomain) {\r\n      throw new Error('range.shape must match domain axis sizes')\r\n    }\r\n  }\r\n  return shape\r\n}\r\n\r\nfunction loadRangesFn (cov) {\r\n  return paramKeys => {\r\n    if (paramKeys === undefined) paramKeys = cov.parameters.keys()\r\n    paramKeys = Array.from(paramKeys)\r\n    return Promise.all(paramKeys.map(k => cov.loadRange(k))).then(ranges => {\r\n      let map = new Map()\r\n      for (let i=0; i < paramKeys.length; i++) {\r\n        map.set(paramKeys[i], ranges[i])\r\n      }\r\n      return map\r\n    })\r\n  }\r\n}\r\n\r\nfunction loadRangeFn (cov, globalConstraints) {\r\n  return paramKey => {\r\n    // Since the shape of the range array is derived from the domain, it has to be loaded as well.\r\n    return cov.loadDomain().then(() => {\r\n      let rangeOrUrl = cov._covjson.ranges[paramKey]\r\n      if (typeof rangeOrUrl === 'object') {\r\n        let rawRange = rangeOrUrl\r\n        // we need the original domain here, not a potentially subsetted one,\r\n        // therefore we access cov._covjson directly\r\n        // this legacy code will disappear once the old range format is not supported anymore\r\n        return doLoadRange(cov, paramKey, rawRange, cov._covjson.domain, globalConstraints)\r\n      } else {\r\n        let url = rangeOrUrl\r\n        return load(url).then(result => {\r\n          let rawRange = result.data\r\n          return doLoadRange(cov, paramKey, rawRange, cov._covjson.domain, globalConstraints)\r\n        })\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction doLoadRange (cov, paramKey, range, domain, globalConstraints={}) {\r\n  globalConstraints = normalizeIndexSubsetConstraints(domain, globalConstraints)\r\n  \r\n  if (range.type === 'NdArray' || range.type === 'Range') {\r\n    // if an NdArray, then we modify it in-place (only done the first time)\r\n    transformNdArrayRange(range, domain)\r\n    if (cov.options.cacheRanges) {\r\n      cov._covjson.ranges[paramKey] = range\r\n      cov._updateLoadStatus()\r\n    }\r\n    \r\n    let newrange = subsetNdArrayRangeByIndex(range, domain, globalConstraints)    \r\n    return Promise.resolve(newrange)\r\n    \r\n  } else if (range.type === 'TiledNdArray') {\r\n    return loadTiledNdArraySubset(range, globalConstraints)\r\n    \r\n  } else {\r\n    throw new Error('Unsupported: ' + range.type)\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * @param {object} range TiledNdArray range object\r\n * @param {object} constraints subsetting constraints\r\n * @returns {Promise<Range>}\r\n */\r\nfunction loadTiledNdArraySubset (range, constraints) {\r\n  let constraintsArr = range.axisNames.map(name => constraints[name])\r\n  \r\n  // step 1: select tileset with least network effort\r\n  let fillNulls = tileShape => tileShape.map((v,i) => v === null ? range.shape[i] : v)    \r\n  let tilesetsStats = range.tileSets.map(ts => getTilesetStats(fillNulls(ts.tileShape), constraintsArr))\r\n  let idxBestTileset = indexOfBestTileset(tilesetsStats)\r\n  let tileset = range.tileSets[idxBestTileset]\r\n  let urlTemplate = template.parse(tileset.urlTemplate)\r\n  let tileShape = fillNulls(tileset.tileShape)\r\n      \r\n  // step 2: determine the tiles to load\r\n  let subsetTilesetAxes = []\r\n  for (let ax=0; ax < tileShape.length; ax++) {\r\n    let {start,stop,step} = constraintsArr[ax]\r\n    let tileSize = tileShape[ax]\r\n    \r\n    // the indices of the first and last tile containing the subsetting constraints\r\n    let tileStart = Math.floor(start / tileSize) // inclusive\r\n    let tileStop = Math.ceil(stop / tileSize) // exclusive\r\n    \r\n    let tilesetAxis = []\r\n    for (let t=tileStart; t < tileStop; t++) {\r\n      let mid = (t + 0.5) * tileSize\r\n      // regard the subset constraint as a list of [x,y) half-closed intervals and find out where 'mid' falls into\r\n      let iv = Math.floor((mid - start) / step)\r\n      \r\n      // start and end point of the interval in range index space\r\n      let ivStart = start + iv * step\r\n      let ivStop = start + (iv + 1) * step\r\n      \r\n      // tile start and end in range index space\r\n      let tileStartR = t * tileSize\r\n      let tileStopR = (t + 1) * tileSize\r\n      \r\n      // check if the start or end point of the interval lies within the tile\r\n      if (ivStart >= tileStartR || tileStopR <= ivStop) {\r\n        tilesetAxis.push(t)\r\n      }\r\n    }\r\n    subsetTilesetAxes.push(tilesetAxis)\r\n  }\r\n  \r\n  let tiles = cartesianProduct(subsetTilesetAxes)\r\n  let subsetShape = constraintsArr.map(({start,stop,step}) => Math.floor((stop - start) / step) + (stop - start) % step)\r\n\r\n  function getTileUrl (tile) {\r\n      let tileUrlVars = {}\r\n      tile.forEach((v,i) => tileUrlVars[range.axisNames[i]] = v)\r\n      return urlTemplate.expand(tileUrlVars)\r\n  }\r\n  \r\n  // step 3a: check if only a single tile will be loaded and avoid copying data around in that case\r\n  if (tiles.length === 1 && subsetShape.every((v,i) => v === tileShape[i])) {\r\n    let url = getTileUrl(tiles[0])\r\n    return load(url).then(result => {\r\n      let tileRange = result.data\r\n      transformNdArrayRange(tileRange)\r\n      return tileRange\r\n    })\r\n  } else {\r\n    // step 3b: create an empty ndarray of the subset shape that will be filled with tile data\r\n    let subsetSize = subsetShape.reduce((l,r) => l*r)\r\n    let subsetNdArr = ndarray(new Array(subsetSize), subsetShape)\r\n    \r\n    // step 4: load tiles and fill subset ndarray\r\n    let promises = tiles.map(tile => {\r\n      let url = getTileUrl(tile)\r\n      return load(url).then(result => {\r\n        let tileRange = result.data\r\n        transformNdArrayRange(tileRange)\r\n        \r\n        // figure out which parts of the tile to copy into which part of the final ndarray\r\n        let tileOffsets = tile.map((v,i) => v * tileShape[i])\r\n        \r\n        // iterate all tile values and for each check if they are part of the subset\r\n        // TODO this code is probably quite slow, consider pre-compiling etc\r\n        //      -> use ndarray-ops#assign for fast copies\r\n        let tileAxesSubsetIndices = []\r\n        for (let ax=0; ax < tileShape.length; ax++) {\r\n          let {start,stop,step} = constraintsArr[ax]\r\n          let tileAxisSize = tileShape[ax]\r\n          let tileAxisOffset = tileOffsets[ax]\r\n          let tileAxisSubsetIndices = []\r\n          let startIdx = 0\r\n          if (tileAxisOffset < start) {\r\n            startIdx = start - tileAxisOffset\r\n          }\r\n          let stopIdx = tileAxisSize\r\n          if (tileAxisOffset + stopIdx > stop) {\r\n            stopIdx = stop - tileAxisOffset\r\n          }\r\n          \r\n          for (let i=startIdx; i < stopIdx; i++) {\r\n            let idx = tileAxisOffset + i\r\n            if ((idx - start) % step === 0) {\r\n              tileAxisSubsetIndices.push(i)\r\n            }\r\n          }\r\n          tileAxesSubsetIndices.push(tileAxisSubsetIndices)\r\n        }\r\n        let tileSubsetIndices = cartesianProduct(tileAxesSubsetIndices)\r\n        for (let tileInd of tileSubsetIndices) {\r\n          let val = tileRange._ndarr.get(...tileInd)\r\n          let subsetInd = tileInd.map((i,ax) => {\r\n            let idx = tileOffsets[ax] + i\r\n            return Math.floor((idx - constraintsArr[ax].start) / constraintsArr[ax].step)\r\n          })\r\n          subsetNdArr.set(...subsetInd, val)\r\n        }\r\n      })\r\n    })\r\n\r\n    // step 5: create and return the new range\r\n    return Promise.all(promises).then(() => {\r\n      let newrange = {\r\n        dataType: range.dataType,\r\n        get: createRangeGetFunction(subsetNdArr, range.axisNames),\r\n        _ndarr: subsetNdArr,\r\n        _axisNames: range.axisNames,\r\n        _shape: subsetShape\r\n      }\r\n      newrange.shape = new Map(range.axisNames.map((v,i) => [v, subsetNdArr.shape[i]]))\r\n      return newrange\r\n    })\r\n  } \r\n\r\n}\r\n\r\n/**\r\n * Return the cartesian product of the given arrays.\r\n * \r\n * @see http://stackoverflow.com/a/36234242\r\n */\r\nfunction cartesianProduct (arr) {\r\n  return arr.reduce((a,b) => a.map(x => b.map(y => x.concat(y))).reduce((a,b) => a.concat(b), []), [[]])\r\n}\r\n\r\n/**\r\n * Returns the number of tiles and values that have to be loaded, given a set of subsetting constraints.\r\n * \r\n * @param {Array<number>} tileShape\r\n * @param {Array<object>} constraints - start/stop/step subset constraints for each axis, stop is exclusive\r\n * @returns {number}\r\n */\r\nfunction getTilesetStats (tileShape, constraints) {\r\n  let tileCount = 1\r\n  for (let i=0; i < tileShape.length; i++) {\r\n    let {start, stop, step} = constraints[i]\r\n    let tileSize = tileShape[i]\r\n    \r\n    // the indices of the first and last tile containing the subsetting constraints\r\n    let tileStart = Math.floor(start / tileSize) // inclusive\r\n    let tileStop = Math.ceil(stop / tileSize) // exclusive\r\n    \r\n    // total number of values within the tiles containing the subsetting constraints\r\n    let nvalues = tileSize * (tileStop - tileStart)\r\n\r\n    // number of tiles that intersect with the subsetting constraints\r\n    tileCount *= Math.ceil(nvalues / (Math.max(step, tileSize)))\r\n  }\r\n  // the value count is an upper bound as it doesn't account for edge tiles that may be smaller\r\n  let valueCount = tileCount * tileShape.reduce((l,r) => l*r)\r\n  \r\n  return {tileCount, valueCount}\r\n}\r\n\r\n/**\r\n * Returns the index of the tileset with minimum network effort based on the given tileset statistics.\r\n * Effort here means a combination of number of requested tiles and values.\r\n * \r\n * @param {Array<object>} tilesetsStats\r\n * @returns {number} index of the tileset with minimum network effort\r\n */\r\nfunction indexOfBestTileset (tilesetsStats) {\r\n  // one tile request shall have an equal effort as receiving 1000 values\r\n  let tileValueRatio = 1000\r\n  let efforts = tilesetsStats.map(s => s.tileCount + s.valueCount / tileValueRatio)\r\n  let minEffortIdx = efforts.reduce((imin, x, i, arr) => x < arr[imin] ? i : imin, 0)\r\n  return minEffortIdx\r\n}\r\n\r\nfunction subsetNdArrayRangeByIndex (range, domain, constraints) {\r\n  let ndarr = range._ndarr\r\n        \r\n  // fast ndarray view\r\n  let axisNames = getRangeAxisOrder(domain, range)\r\n  let los = axisNames.map(name => constraints[name].start)\r\n  let his = axisNames.map(name => constraints[name].stop)\r\n  let steps = axisNames.map(name => constraints[name].step)\r\n  let newndarr = ndarr.hi(...his).lo(...los).step(...steps)\r\n  \r\n  let newrange = {\r\n    dataType: range.dataType,\r\n    get: createRangeGetFunction(newndarr, axisNames),\r\n    _ndarr: newndarr,\r\n    _axisNames: axisNames,\r\n    _shape: newndarr.shape\r\n  }\r\n  newrange.shape = new Map(axisNames.map((v,i) => [v, newndarr.shape[i]]))\r\n  return newrange\r\n}\r\n\r\nfunction subsetByIndexFn (cov, globalConstraints) {\r\n  return constraints => {\r\n    return cov.loadDomain().then(domain => {\r\n      constraints = normalizeIndexSubsetConstraints(domain, constraints)\r\n      let newdomain = subsetDomainByIndex(domain, constraints)\r\n      \r\n      let newGlobalConstraints = toGlobalSubsetConstraints(constraints, globalConstraints)\r\n      \r\n      // backwards-compatibility\r\n      if (domain._rangeAxisOrder) {\r\n        newdomain._rangeAxisOrder = domain._rangeAxisOrder\r\n      }\r\n      \r\n      // assemble everything to a new coverage\r\n      let newcov = {\r\n        _covjson: cov._covjson,\r\n        options: cov.options,\r\n        type: COVERAGE,\r\n        // TODO are the profiles still valid?\r\n        domainProfiles: cov.domainProfiles,\r\n        domainType: cov.domainType,\r\n        parameters: cov.parameters,\r\n        loadDomain: () => Promise.resolve(newdomain)\r\n      }\r\n      newcov.loadRange = loadRangeFn(newcov, newGlobalConstraints)\r\n      newcov.loadRanges = loadRangesFn(newcov)\r\n      newcov.subsetByIndex = subsetByIndexFn(newcov, newGlobalConstraints)\r\n      newcov.subsetByValue = subsetCoverageByValue.bind(null, newcov)\r\n      return newcov\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Currently unused, but may need in future.\r\n * This determines the best array type for categorical data which\r\n * doesn't have missing values.\r\n */\r\n/*\r\nfunction arrayType (validMin, validMax) {\r\n  let type\r\n  if (validMin !== undefined) {\r\n    if (validMin >= 0) {\r\n      if (validMax < Math.pow(2,8)) {\r\n        type = Uint8Array\r\n      } else if (validMax < Math.pow(2,16)) {\r\n        type = Uint16Array\r\n      } else if (validMax < Math.pow(2,32)) {\r\n        type = Uint32Array\r\n      } else {\r\n        type = Array\r\n      }\r\n    } else {\r\n      let max = Math.max(Math.abs(validMin), validMax)\r\n      if (max < Math.pow(2,8)) {\r\n        type = Int8Array\r\n      } else if (validMax < Math.pow(2,16)) {\r\n        type = Int16Array\r\n      } else if (validMax < Math.pow(2,32)) {\r\n        type = Int32Array\r\n      } else {\r\n        type = Array\r\n      }\r\n    }\r\n  } else {\r\n    type = Array\r\n  }\r\n  return type\r\n}\r\n*/\r\n\r\n/**\r\n * Transforms a CoverageJSON parameter to the Coverage API format, that is,\r\n * some elements are converted from objects to Maps. Transformation is made in-place.\r\n * \r\n * @param {Object} param The original parameter.\r\n * @access private\r\n */\r\nexport function transformParameter (params, key) {\r\n  if ('__transformDone' in params[key]) return\r\n  let param = params[key]\r\n  param.key = key\r\n  if (param.unit) {\r\n    if (typeof param.unit.symbol === 'string') {\r\n      param.unit.symbol = {\r\n        value: param.unit.symbol\r\n        // no type member, since the scheme is unknown\r\n      }\r\n    }\r\n  }\r\n  if (param.categoryEncoding) {\r\n    let map = new Map()\r\n    for (let category of Object.keys(param.categoryEncoding)) {\r\n      let vals = param.categoryEncoding[category]\r\n      if (!Array.isArray(vals)) {\r\n        vals = [vals]\r\n      }\r\n      map.set(category, vals)\r\n    }\r\n    param.categoryEncoding = map\r\n  }\r\n  param.__transformDone = true  \r\n}\r\n\r\n/**\r\n * Transforms a CoverageJSON NdArray range to the Coverage API format. Transformation is made in-place.\r\n * \r\n * @param {Object} range The original NdArray range.\r\n * @param {Object} [domain] The CoverageJSON domain object. \r\n * @return {Object} The transformed range.\r\n */\r\nfunction transformNdArrayRange (range, domain) {\r\n  if ('__transformDone' in range) return\r\n  \r\n  const values = range.values\r\n    \r\n  if (range.actualMin === undefined) {\r\n    let [min,max] = minMax(values)\r\n    if (min !== null) {\r\n      range.actualMin = min\r\n      range.actualMax = max\r\n    }\r\n  }\r\n  \r\n  // store the array as we will expose a Map on range.shape in the next step\r\n  if (range.shape) {\r\n    range._shape = range.shape\r\n  }\r\n  if (range.axisNames) {\r\n    // not part of public API\r\n    range._axisNames = range.axisNames\r\n    delete range.axisNames\r\n  }\r\n  \r\n  let axisNames = getRangeAxisOrder(domain, range)\r\n  let shapeArr = getRangeShapeArray(domain, range)\r\n  \r\n  let ndarr = ndarray(values, shapeArr)\r\n  range._ndarr = ndarr\r\n  range.get = createRangeGetFunction(ndarr, axisNames)\r\n  range.shape = new Map(axisNames.map((v,i) => [v, shapeArr[i]]))\r\n  \r\n  range.__transformDone = true  \r\n  return range\r\n}\r\n\r\n/**\r\n * \r\n * @param axisOrder An array of axis names.\r\n * @returns Function\r\n */\r\nfunction createRangeGetFunction (ndarr, axisOrder) {\r\n  // see below for slower reference version\r\n  let ndargs = ''\r\n  for (let i=0; i < axisOrder.length; i++) {\r\n    if (ndargs) ndargs += ','\r\n    ndargs += `'${axisOrder[i]}' in obj ? obj['${axisOrder[i]}'] : 0`\r\n  }\r\n  let fn = new Function('ndarr', `return function ndarrget (obj) { return ndarr.get(${ndargs}) }`)(ndarr)\r\n  return fn\r\n}\r\n\r\n/*\r\n * Reference version of createRangeGetFunction().\r\n * Around 50% slower (on Chrome 46) compared to precompiled version.\r\n * \r\nfunction createRangeGetFunction (ndarr, axisOrder) {\r\n  axisOrder = axisOrder.slice() // help the JIT (possibly..)\r\n  const axisCount = axisOrder.length\r\n  return obj => {\r\n    let indices = new Array(axisCount)\r\n    for (let i=0; i < axisCount; i++) {\r\n      indices[i] = axisOrder[i] in obj ? obj[axisOrder[i]] : 0\r\n    }\r\n    return ndarr.get(...indices)\r\n  }\r\n}\r\n*/\r\n\r\n/**\r\n * Transforms a CoverageJSON domain to the Coverage API format.\r\n * Transformation is made in-place.\r\n * \r\n * @param {Object} domain The original domain object.\r\n * @param {Array} [referencing] Referencing info to inject.\r\n * @return {Object} The transformed domain object.\r\n * @access private\r\n */\r\nexport function transformDomain (domain, referencing, domainType) {\r\n  if ('__transformDone' in domain) return\r\n  \r\n  domainType = domain.domainType || domainType\r\n  if (domainType && domainType.indexOf(':') === -1) {\r\n    domainType = DOMAINTYPES_PREFIX + domainType\r\n  }\r\n  domain.domainType = domainType\r\n\r\n  let axes = new Map() // axis name -> axis object\r\n  \r\n  for (let axisName of Object.keys(domain.axes)) {\r\n    axes.set(axisName, domain.axes[axisName])\r\n  }\r\n  domain.axes = axes\r\n  \r\n  // expand start/stop/num regular axes\r\n  // replace 1D numeric axis arrays with typed arrays for efficiency\r\n  for (let [key, axis] of axes) {\r\n    axis.key = key\r\n    \r\n    if (axis.dataType && axis.dataType.indexOf(':') === -1) {\r\n      axis.dataType = CORE_PREFIX + axis.dataType\r\n    }\r\n    \r\n    // TODO remove this if-block later, just here for backwards-compatibility \r\n    if (axis.components) {\r\n      axis.coordinates = axis.components\r\n    }\r\n    \r\n    if (!axis.coordinates) {\r\n      axis.coordinates = [key]\r\n    }\r\n    \r\n    // TODO remove this line later, just here for backwards-compatibility \r\n    axis.components = axis.coordinates\r\n    \r\n    \r\n    if ('start' in axis && 'stop' in axis && 'num' in axis) {\r\n      let arr = new Float64Array(axis.num)\r\n      let step\r\n      if (axis.num === 1) {\r\n        if (axis.start !== axis.stop) {\r\n          throw new Error('regular axis of length 1 must have equal start/stop values')\r\n        }\r\n        step = 0\r\n      } else {\r\n        step = (axis.stop - axis.start) / (axis.num - 1)\r\n      }\r\n      for (let i=0; i < axis.num; i++) {\r\n        arr[i] = axis.start + i * step\r\n      }\r\n      \r\n      axis.values = arr\r\n      delete axis.start\r\n      delete axis.stop\r\n      delete axis.num\r\n    }\r\n    \r\n    if (Array.isArray(axis.values) && typeof axis.values[0] === 'number') {\r\n      let arr = new Float64Array(axis.values.length)\r\n      for (let i=0; i < axis.values.length; i++) {\r\n        arr[i] = axis.values[i]\r\n      }\r\n      axis.values = arr\r\n    }\r\n    \r\n    axis.bounds = wrapBounds(axis)\r\n  }\r\n  \r\n  if (referencing) {\r\n    domain.referencing = referencing\r\n  }\r\n  \r\n  // TODO remove this later, just here for backwards-compatibility \r\n  for (let obj of domain.referencing) {\r\n    if (obj.components) {\r\n      obj.coordinates = obj.components\r\n    }\r\n  }\r\n  \r\n  if (domain.rangeAxisOrder) {\r\n    domain._rangeAxisOrder = domain.rangeAxisOrder\r\n    delete domain.rangeAxisOrder\r\n  }\r\n  \r\n  domain.__transformDone = true\r\n  \r\n  return domain\r\n}\r\n\r\n/**\r\n * Applies the local index subset constraints to the existing global constraints.\r\n * Both constraint objects must be normalized, that is, must contain the same axes\r\n * as start/stop/step objects.\r\n * \r\n * @example\r\n * var local = {x: {start: 0, stop: 50, step: 2}}\r\n * var global = {x: {start: 500, stop: 1000}}\r\n * var newGlobal = toGlobalSubsetConstraints(local, global)\r\n * // newGlobal == {x: {start: 500, stop: 550, step: 2}}\r\n * \r\n * @example\r\n * var local = {x: {start: 5, stop: 10, step: 2}} // 5, 7, 9\r\n * var global = {x: {start: 500, stop: 1000, step: 10}} // 500, 510, 520,...\r\n * var newGlobal = toGlobalSubsetConstraints(local, global) \r\n * // newGlobal == {x: {start: 550, stop: 600, step: 20}} // 550, 570, 590\r\n */\r\nfunction toGlobalSubsetConstraints (localConstraints, globalConstraints={}) {\r\n  let res = {}\r\n  for (let axis of Object.keys(localConstraints)) {\r\n    let local = localConstraints[axis]\r\n    let {start: globalStart=0, step: globalStep=1} = globalConstraints[axis] || {}\r\n    res[axis] = {\r\n      start: globalStart + globalStep*local.start,\r\n      stop: globalStart + globalStep*local.stop,\r\n      step: globalStep * local.step\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nfunction wrapBounds (axis) {\r\n  if (axis.bounds) {\r\n    let bounds = axis.bounds\r\n    return {\r\n      get: i => [bounds[2*i], bounds[2*i + 1]]\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @external {CollectionQuery} https://github.com/Reading-eScience-Centre/coverage-jsapi/blob/master/CoverageCollectionQuery.md\r\n */\r\n\r\nimport {COVERAGECOLLECTION} from './constants.js'\r\nimport {default as Coverage, transformDomain, transformParameter} from './Coverage.js'\r\nimport {shallowcopy, getNamespacePrefixes, DOMAINTYPES_PREFIX} from './util.js'\r\nimport {CollectionQuery} from 'covutils'\r\n\r\n/** \r\n * Wraps a CoverageJSON Collection object as a CoverageCollection API object.\r\n * \r\n * @see https://github.com/Reading-eScience-Centre/coverage-jsapi\r\n * \r\n */\r\nexport default class CoverageCollection {\r\n  /**\r\n   * @param {Object} covjson The CoverageJSON Collection document.\r\n   */\r\n  constructor(covjson) {\r\n    /**\r\n     * The constant \"CoverageCollection\".\r\n     * \r\n     * @type {string}\r\n     */\r\n    this.type = COVERAGECOLLECTION\r\n    \r\n    /**\r\n     * JSON-LD document\r\n     * \r\n     * @type {Object}\r\n     */\r\n    this.ld = {}\r\n    \r\n    this._exposeLd(covjson)\r\n    \r\n    this.prefixes = getNamespacePrefixes(this.ld)\r\n    \r\n    /** \r\n     * ID of the coverage collection.\r\n     * \r\n     * @type {string|undefined} \r\n     */\r\n    this.id = covjson.id\r\n    \r\n    \r\n    let domainType = covjson.domainType\r\n    if (domainType && domainType.indexOf(':') === -1) {\r\n      domainType = DOMAINTYPES_PREFIX + domainType\r\n    }\r\n\r\n    /**\r\n     * If defined, every coverage in the collection has the given domain type, typically a URI.\r\n     * \r\n     * @type {string|undefined}\r\n     */\r\n    this.domainType = domainType\r\n    \r\n    \r\n    let covs = []\r\n    let rootParams = covjson.parameters ? covjson.parameters : {}\r\n    // generate local parameter IDs if not existing\r\n    // this is to keep track of same parameters when copied into the coverages\r\n    // (e.g. to synchronize legends etc.)\r\n    for (let key of Object.keys(rootParams)) {\r\n      let param = rootParams[key]\r\n      if (!param.id) {\r\n        param.id = Math.round(new Date().getTime() * Math.random()).toString()\r\n      }\r\n    }\r\n    \r\n    let covOptions = {}\r\n    if (covjson.referencing) {\r\n      covOptions.referencing = covjson.referencing\r\n    }\r\n    for (let coverage of covjson.coverages) {\r\n      if (!coverage.domainType) {\r\n        coverage.domainType = domainType\r\n      }\r\n      if (!coverage.parameters) {\r\n        coverage.parameters = {}\r\n      }\r\n      for (let key of Object.keys(rootParams)) {\r\n        if (key in coverage.ranges) {\r\n          coverage.parameters[key] = rootParams[key]\r\n        }\r\n      }\r\n      if (covjson['@context']) {\r\n        coverage['@context'] = covjson['@context']\r\n      }\r\n      covs.push(new Coverage(coverage, covOptions))\r\n    }\r\n    \r\n    /** \r\n     * The Coverages of this collection.\r\n     * \r\n     * @type {Array<Coverage>} \r\n     */\r\n    this.coverages = covs\r\n    if (covjson.parameters) {\r\n      /**\r\n       * A Map from key to {@link Parameter} object.\r\n       * The key is a short alias of a {@link Parameter}, typically what is called a \"variable name\" or similar.\r\n       * \r\n       * @type {Map<string,Parameter>}\r\n       */\r\n      this.parameters = new Map()\r\n      for (let key of Object.keys(covjson.parameters)) {\r\n        transformParameter(covjson.parameters, key)\r\n        this.parameters.set(key, covjson.parameters[key])\r\n      }\r\n    }\r\n    if (covjson.domainTemplate) {\r\n      transformDomain(covjson.domainTemplate)\r\n      /**\r\n       * @ignore\r\n       */\r\n      this.domainTemplate = covjson.domainTemplate\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * \r\n   * @return {CollectionQuery}\r\n   */\r\n  query () {\r\n    return new CollectionQuery(this)\r\n  }\r\n  \r\n  _exposeLd (covjson) {\r\n    if (!covjson['@context']) {\r\n      // no LD love here...\r\n      return\r\n    }\r\n    // make a deep copy since the object gets modified in-place later\r\n    // but first, remove the coverages (those have their own .ld property)\r\n    let copy = shallowcopy(covjson)\r\n    delete copy.coverages\r\n    this.ld = JSON.parse(JSON.stringify(copy))\r\n  }\r\n}\r\n","import Coverage from './Coverage.js'\r\nimport {transformDomain} from './Coverage.js'\r\nimport CoverageCollection from './CoverageCollection.js'\r\nimport {assert} from './util.js'\r\nimport {COVERAGE, COVERAGECOLLECTION, DOMAIN, LINKRELPREFIX} from './constants.js'\r\n\r\n// NO FILE EXTENSION, to work around JSPM bug in handling package.json's \"browser\" field\r\n// see https://github.com/jspm/jspm-cli/issues/1062#issuecomment-170342414\r\nimport * as http from './http'\r\n\r\n/**\r\n * Loads a CoverageJSON document from a given URL and returns a {@link Promise} object\r\n * that succeeds with the unmodified CoverageJSON object.\r\n * \r\n * @param {string} url The URL to load the CoverageJSON document from.\r\n * @param {Object} [options] An options object. \r\n * @param {Object} [options.headers] Additional HTTP headers to send if input is a URL.\r\n * @param {Object} [options.eagerload]\r\n *   Request a stand-alone CoverageJSON document (with domain and ranges embedded) if input is a URL.\r\n *   Note that the server may ignore that preference.\r\n * @return {Promise}\r\n *   A Promise succeeding with an object <code>{data, headers}</code> where data is the CoverageJSON object\r\n *   and headers are the HTTP response headers with lower-cased header names as object keys.\r\n *   The promise fails if the resource at the given URL is not a valid JSON or CBOR document. \r\n */\r\nexport function load (url, options) {\r\n  return http.load(url, options)\r\n}\r\n\r\n/**\r\n * Reads a CoverageJSON document and returns a {@link Promise} that succeeds with\r\n * a Domain, {@link Coverage}, or {@link CoverageCollection} object.\r\n * \r\n * Note that if the document references external domain or range documents,\r\n * then these are not loaded immediately. \r\n * \r\n * \r\n * @example\r\n * CovJSON.read('http://example.com/coverage.covjson').then(function (cov) {\r\n *   // work with Coverage data object\r\n * }).catch(function (e) {\r\n *   // there was an error when loading the coverage data\r\n *   console.log(e)\r\n * })\r\n * @param {Object|string} input \r\n *    A CoverageJSON Domain, Coverage, or Coverage Collection document, as URL or object.\r\n * @param {Object} [options]\r\n *   An options object. \r\n * @param {Object} [options.headers]\r\n *   Additional HTTP headers to send if input is a URL.\r\n * @param {Object} [options.eagerload]\r\n *   Request a stand-alone CoverageJSON document (with domain and ranges embedded) if input is a URL.\r\n *   Note that the server may ignore that preference. \r\n * @return {Promise} \r\n *    A promise object succeeding with a Domain, {@link Coverage}, or {@link CoverageCollection} object,\r\n *    and failing with an {@link Error} object.\r\n */\r\nexport function read (input, options = {}) {\r\n  if (typeof input === 'object') {\r\n    return Promise.resolve().then(() => transformCovJSON(input))\r\n  } else {\r\n    return load(input, options).then(({data,headers}) => transformCovJSON(data, headers))\r\n  }\r\n}\r\n\r\n/**\r\n * Transforms a CoverageJSON object into one or more Coverage objects.\r\n *  \r\n * @param {object} obj A CoverageJSON object of type Coverage or CoverageCollection.\r\n * @param {array} headers An optional array of HTTP headers. Keys are lower-cased header names.\r\n * @return {Coverage|Array of Coverage}\r\n */\r\nfunction transformCovJSON (obj, headers) {\r\n  checkValidCovJSON(obj)\r\n  if ([COVERAGE, COVERAGECOLLECTION, DOMAIN].indexOf(obj.type) === -1) {\r\n    throw new Error('CoverageJSON document must be of Coverage, CoverageCollection, or Domain type')\r\n  }\r\n  \r\n  let result\r\n  if (obj.type === DOMAIN) {\r\n    transformDomain(obj)\r\n    result = obj\r\n  } else  if (obj.type === COVERAGE) {\r\n    result = new Coverage(obj)\r\n  } else {\r\n    result = new CoverageCollection(obj)\r\n  }\r\n  \r\n  if (obj.type === COVERAGE || obj.type === COVERAGECOLLECTION) {\r\n    addLinkRelations(result, headers)\r\n  }\r\n    \r\n  return result\r\n}\r\n\r\n/**\r\n * Scans the supplied HTTP headers for Link relations and adds them\r\n * to the .ld property of the Coverage/CoverageCollection.\r\n */    \r\nfunction addLinkRelations (cov, headers) {  \r\n  if (!headers || !headers['link']) {\r\n    return\r\n  }\r\n  \r\n  let ld = cov.ld\r\n  \r\n  for (let link of headers['link'].split(',')) {\r\n    link = link.trim()\r\n    // FIXME this will fail if the URL contains a \";\" which is valid (see RFC5988)\r\n    let parts = link.split(';')\r\n    let url = parts[0].substr(1, parts[0].length-2)\r\n    for (let param of parts.slice(1)) {\r\n      let relStart = param.indexOf('rel=')\r\n      if (relStart === -1) {\r\n        continue\r\n      }\r\n      let rel = param.substring(relStart+5, param.length-1)\r\n      if (rel.indexOf('http://') !== 0 && rel.indexOf('https://') !== 0) {\r\n        rel = LINKRELPREFIX + rel\r\n      }\r\n      if (ld[rel]) {\r\n        if (Array.isArray(ld[rel])) {\r\n          ld[rel].push(url)\r\n        } else {\r\n          ld[rel] = [ld[rel], url]\r\n        }\r\n      } else {\r\n        ld[rel] = url\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Performs basic structural checks to validate whether a given object is a CoverageJSON object.\r\n * \r\n * Note that this method is not comprehensive and should not be used for checking\r\n * whether an object fully conforms to the CoverageJSON specification.\r\n * \r\n * @param obj\r\n * @throws {Error} when obj is not a valid CoverageJSON document \r\n */\r\nfunction checkValidCovJSON (obj) {\r\n  assert('type' in obj, '\"type\" missing')\r\n  if (obj.type === COVERAGE) {\r\n    assert('parameters' in obj, '\"parameters\" missing')\r\n    assert('domain' in obj, '\"domain\" missing')\r\n    assert('ranges' in obj, '\"ranges\" missing')\r\n  } else if (obj.type === COVERAGECOLLECTION) {\r\n    assert(Array.isArray(obj.coverages), '\"coverages\" must be an array')\r\n  }\r\n}\r\n"],"names":["iota","isBuffer","require$$1","require$$0","this","LINKRELPREFIX","PREFIX","CORE_PREFIX","DOMAINTYPES_PREFIX","assert","condition","message","Error","shallowcopy","obj","copy","Object","create","getPrototypeOf","prop","getNamespacePrefixes","doc","context","Array","isArray","prefixes","Map","item","keys","key","set","MEDIATYPE","COVJSON_PROFILE_STANDALONE","getAcceptHeader","standalone","covjsonProfile","accept","COVJSON","JSONLD","JSON","load","url","options","responseType","indexOf","headers","Promise","resolve","reject","req","XMLHttpRequest","open","eagerload","setRequestHeader","header","addEventListener","status","data","window","TextDecoder","t0","Date","parse","decode","DataView","response","log","responseHeaders","parseResponseHeaders","getAllResponseHeaders","e","send","catch","headerStr","headerPairs","split","i","length","headerPair","index","substring","toLowerCase","val","Coverage","covjson","_covjson","type","COVERAGE","ld","_exposeLd","id","parameters","domainType","domain","_updateLoadStatus","isLoaded","domainLoaded","rangesLoaded","ranges","every","loaded","stringify","domainOrUrl","_domainPromise","promise","referencing","then","result","paramKey","loadRangeFn","paramKeys","loadRangesFn","constraints","subsetByIndexFn","subsetCoverageByValue","getRangeAxisOrder","range","_axisNames","needsRangeAxisOrder","axes","values","filter","axis","axisOrder","_rangeAxisOrder","getRangeShapeArray","_shape","shape","map","get","k","matchesDomain","v","cov","undefined","from","all","loadRange","globalConstraints","loadDomain","rangeOrUrl","rawRange","doLoadRange","normalizeIndexSubsetConstraints","cacheRanges","newrange","subsetNdArrayRangeByIndex","loadTiledNdArraySubset","constraintsArr","axisNames","name","fillNulls","tileShape","tilesetsStats","tileSets","getTilesetStats","ts","idxBestTileset","indexOfBestTileset","tileset","urlTemplate","template","subsetTilesetAxes","ax","start","stop","step","tileSize","tileStart","Math","floor","tileStop","ceil","tilesetAxis","t","mid","iv","ivStart","ivStop","tileStartR","tileStopR","push","tiles","cartesianProduct","subsetShape","getTileUrl","tile","tileUrlVars","forEach","expand","tileRange","subsetSize","reduce","l","r","subsetNdArr","ndarray","promises","tileOffsets","tileAxesSubsetIndices","tileAxisSize","tileAxisOffset","tileAxisSubsetIndices","startIdx","stopIdx","idx","tileSubsetIndices","tileInd","_ndarr","subsetInd","dataType","createRangeGetFunction","arr","a","b","x","concat","y","tileCount","nvalues","max","valueCount","tileValueRatio","efforts","s","minEffortIdx","imin","ndarr","los","his","steps","newndarr","hi","lo","newdomain","subsetDomainByIndex","newGlobalConstraints","toGlobalSubsetConstraints","newcov","domainProfiles","loadRanges","subsetByIndex","subsetByValue","bind","transformParameter","params","param","unit","symbol","categoryEncoding","category","vals","__transformDone","transformNdArrayRange","actualMin","minMax","min","actualMax","shapeArr","ndargs","fn","Function","transformDomain","axisName","components","coordinates","Float64Array","num","bounds","wrapBounds","rangeAxisOrder","localConstraints","res","local","globalStart","globalStep","CoverageCollection","COVERAGECOLLECTION","covs","rootParams","round","getTime","random","toString","covOptions","coverages","coverage","domainTemplate","CollectionQuery","http","read","input","transformCovJSON","DOMAIN","addLinkRelations","link","trim","parts","substr","slice","relStart","rel","checkValidCovJSON"],"mappings":"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"}