"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const d3_shape_1=require("d3-shape"),d3_selection_1=require("d3-selection"),clamp_1=__importDefault(require("clamp")),utils_1=__importDefault(require("./utils")),globals_1=__importDefault(require("./globals")),eval_1=require("./helpers/eval");function mouseTip(e){e=Object.assign({xLine:!1,yLine:!1,renderer:function(e,t){return"("+e.toFixed(3)+", "+t.toFixed(3)+")"},owner:null},e);const t=20,n=d3_shape_1.line().x(function(e){return e[0]}).y(function(e){return e[1]});function l(e,t){return e.append("path").datum(t).attr("stroke","grey").attr("stroke-dasharray","5,5").attr("opacity",.5).attr("d",n)}let r,i;function a(n){const a=n.selectAll("g.tip").data(function(e){return[e]}),s=a.enter().append("g").attr("class","tip").attr("clip-path","url(#function-plot-clip-"+e.owner.id+")");r=a.merge(s).selectAll("g.inner-tip").data(function(e){return[e]}),i=r.enter().append("g").attr("class","inner-tip").style("display","none").each(function(){const n=d3_selection_1.select(this);l(n,[[0,-e.owner.meta.height-t],[0,e.owner.meta.height+t]]).attr("class","tip-x-line").style("display","none"),l(n,[[-e.owner.meta.width-t,0],[e.owner.meta.width+t,0]]).attr("class","tip-y-line").style("display","none"),n.append("circle").attr("r",3),n.append("text").attr("transform","translate(5,-5)")}),r.merge(i).selectAll(".tip-x-line").style("display",e.xLine?null:"none"),r.merge(i).selectAll(".tip-y-line").style("display",e.yLine?null:"none")}return a.move=function(n){let l,s,o,u=1/0,c=-1;const p=r.merge(i),d=e.owner.meta,f=p.datum().data,_=d.xScale,m=d.yScale,h=d.width,y=d.height,g=n.x,x=n.y;for(l=0;l<f.length;l+=1){if(f[l].skipTip||"linear"!==f[l].fnType)continue;const e=f[l].range||[-1e8,1e8];let t;if(g>e[0]-globals_1.default.TIP_X_EPS&&g<e[1]+globals_1.default.TIP_X_EPS){try{t=eval_1.builtIn(f[l],"fn",{x:g})}catch(e){}if(utils_1.default.isValidNumber(t)){const e=Math.abs(t-x);e<u&&(u=e,c=l)}}}if(-1!==c){s=g,f[c].range&&(s=Math.max(s,f[c].range[0]),s=Math.min(s,f[c].range[1])),o=eval_1.builtIn(f[c],"fn",{x:s}),a.show(),e.owner.emit("tip:update",{x:s,y:o,index:c});const n=clamp_1.default(s,_.invert(-t),_.invert(h+t)),l=clamp_1.default(o,m.invert(y+t),m.invert(-t)),r=utils_1.default.color(f[c],c);p.style("color","red"),p.attr("transform","translate("+_(n)+","+m(l)+")"),p.select("circle").attr("fill",r),p.select("text").attr("fill",r).text(e.renderer(s,o,c))}else a.hide()},a.show=function(){r.merge(i).style("display",null)},a.hide=function(){r.merge(i).style("display","none")},Object.keys(e).forEach(function(t){utils_1.default.getterSetter.call(a,e,t)}),a}exports.default=mouseTip;