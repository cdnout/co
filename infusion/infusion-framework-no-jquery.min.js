var fluid_2_0_0=fluid_2_0_0||{};var fluid=fluid||fluid_2_0_0;(function($,fluid){"use strict";fluid.version="Infusion 2.0.0";fluid.Error=Error;fluid.environment={fluid:fluid};fluid.global=fluid.global||typeof window!=="undefined"?window:typeof self!=="undefined"?self:{};fluid.invokeLater=function(func){return setTimeout(func,1)};fluid.defeatLogging=true;fluid.activityTracing=false;fluid.activityTrace=[];var activityParser=/(%\w+)/g;fluid.renderOneActivity=function(activity,nowhile){var togo=nowhile===true?[]:["    while "];var message=activity.message;var index=activityParser.lastIndex=0;while(true){var match=activityParser.exec(message);if(match){var key=match[1].substring(1);togo.push(message.substring(index,match.index));togo.push(activity.args[key]);index=activityParser.lastIndex}else{break}}if(index<message.length){togo.push(message.substring(index))}return togo};fluid.renderActivity=function(activityStack,renderer){renderer=renderer||fluid.renderOneActivity;return fluid.transform(activityStack,renderer)};fluid.singleThreadLocal=function(initFunc){var value=initFunc();return function(newValue){return newValue===undefined?value:value=newValue}};fluid.threadLocal=fluid.singleThreadLocal;fluid.globalThreadLocal=fluid.threadLocal(function(){return{}});fluid.getActivityStack=function(){var root=fluid.globalThreadLocal();if(!root.activityStack){root.activityStack=[]}return root.activityStack};fluid.describeActivity=fluid.getActivityStack;fluid.logActivity=function(activity){activity=activity||fluid.describeActivity();var rendered=fluid.renderActivity(activity).reverse();fluid.log("Current activity: ");fluid.each(rendered,function(args){fluid.doLog(args)})};fluid.pushActivity=function(type,message,args){var record={type:type,message:message,args:args,time:(new Date).getTime()};if(fluid.activityTracing){fluid.activityTrace.push(record)}if(fluid.passLogLevel(fluid.logLevel.TRACE)){fluid.doLog(fluid.renderOneActivity(record,true))}var activityStack=fluid.getActivityStack();activityStack.push(record)};fluid.popActivity=function(popframes){popframes=popframes||1;if(fluid.activityTracing){fluid.activityTrace.push({pop:popframes})}var activityStack=fluid.getActivityStack();var popped=activityStack.length-popframes;activityStack.length=popped<0?0:popped};fluid.FluidError=function(){var togo=Error.apply(this,arguments);this.message=togo.message;try{throw togo}catch(togo){this.stack=togo.stack}return this};fluid.FluidError.prototype=Object.create(Error.prototype);fluid.logFailure=function(args,activity){fluid.log.apply(null,[fluid.logLevel.FAIL,"ASSERTION FAILED: "].concat(args));fluid.logActivity(activity)};fluid.renderLoggingArg=function(arg){return fluid.isPrimitive(arg)||!fluid.isPlainObject(arg)?arg:JSON.stringify(arg)};fluid.builtinFail=function(args){var message=fluid.transform(args,fluid.renderLoggingArg).join("");throw new fluid.FluidError("Assertion failure - check console for more details: "+message)};fluid.fail=function(){var args=fluid.makeArray(arguments);var activity=fluid.makeArray(fluid.describeActivity());fluid.popActivity(activity.length);if(fluid.failureEvent){fluid.failureEvent.fire(args,activity)}else{fluid.logFailure(args,activity);fluid.builtinFail(args,activity)}};fluid.expect=function(name,target,members){fluid.transform(fluid.makeArray(members),function(key){if(typeof target[key]==="undefined"){fluid.fail(name+" missing required parameter "+key)}})};fluid.isLogging=function(){return logLevelStack[0].priority>fluid.logLevel.IMPORTANT.priority};fluid.isLogLevel=function(arg){return fluid.isMarker(arg)&&arg.priority!==undefined};fluid.passLogLevel=function(testLogLevel){return testLogLevel.priority<=logLevelStack[0].priority};fluid.setLogging=function(enabled){var logLevel;if(typeof enabled==="boolean"){logLevel=fluid.logLevel[enabled?"INFO":"IMPORTANT"]}else if(fluid.isLogLevel(enabled)){logLevel=enabled}else{fluid.fail("Unrecognised fluid logging level ",enabled)}logLevelStack.unshift(logLevel);fluid.defeatLogging=!fluid.isLogging()};fluid.setLogLevel=fluid.setLogging;fluid.popLogging=function(){var togo=logLevelStack.length===1?logLevelStack[0]:logLevelStack.shift();fluid.defeatLogging=!fluid.isLogging();return togo};fluid.doLog=function(args){if(typeof console!=="undefined"){if(console.debug){console.debug.apply(console,args)}else if(typeof console.log==="function"){console.log.apply(console,args)}}};fluid.log=function(){var directArgs=fluid.makeArray(arguments);var userLogLevel=fluid.logLevel.INFO;if(fluid.isLogLevel(directArgs[0])){userLogLevel=directArgs.shift()}if(fluid.passLogLevel(userLogLevel)){var arg0=fluid.renderTimestamp(new Date)+":  ";var args=[arg0].concat(directArgs);fluid.doLog(args)}};fluid.isValue=function(value){return value!==undefined&&value!==null};fluid.isPrimitive=function(value){var valueType=typeof value;return!value||valueType==="string"||valueType==="boolean"||valueType==="number"||valueType==="function"};fluid.isArrayable=function(totest){return totest&&(totest.jquery||Object.prototype.toString.call(totest)==="[object Array]")};fluid.isPlainObject=function(totest,strict){var string=Object.prototype.toString.call(totest);if(string==="[object Array]"){return!strict}else if(string!=="[object Object]"){return false}return!totest.constructor||!totest.constructor.prototype||Object.prototype.hasOwnProperty.call(totest.constructor.prototype,"isPrototypeOf")};fluid.typeCode=function(totest){return fluid.isPrimitive(totest)||!fluid.isPlainObject(totest)?"primitive":fluid.isArrayable(totest)?"array":"object"};fluid.isIoCReference=function(ref){return typeof ref==="string"&&ref.charAt(0)==="{"&&ref.indexOf("}")>0};fluid.isDOMNode=function(obj){return obj&&typeof obj.nodeType==="number"};fluid.isComponent=function(obj){return obj&&obj.constructor===fluid.componentConstructor};fluid.isUncopyable=function(totest){return fluid.isPrimitive(totest)||!fluid.isPlainObject(totest)};fluid.isApplicable=function(totest){return totest.apply&&typeof totest.apply==="function"};fluid.identity=function(arg){return arg};fluid.notImplemented=function(){fluid.fail("This operation is not implemented")};fluid.firstDefined=function(a,b){return a===undefined?b:a};fluid.freshContainer=function(tocopy){return fluid.isArrayable(tocopy)?[]:{}};fluid.copyRecurse=function(tocopy,segs){if(segs.length>fluid.strategyRecursionBailout){fluid.fail("Runaway recursion encountered in fluid.copy - reached path depth of "+fluid.strategyRecursionBailout+" via path of "+segs.join(".")+"this object is probably circularly connected. Either adjust your object structure to remove the circularity or increase fluid.strategyRecursionBailout")}if(fluid.isUncopyable(tocopy)){return tocopy}else{return fluid.transform(tocopy,function(value,key){segs.push(key);var togo=fluid.copyRecurse(value,segs);segs.pop();return togo})}};fluid.copy=function(tocopy){return fluid.copyRecurse(tocopy,[])};fluid.extend=$.extend;fluid.makeArray=function(arg){var togo=[];if(arg!==null&&arg!==undefined){if(fluid.isPrimitive(arg)||typeof arg.length!=="number"){togo.push(arg)}else{for(var i=0;i<arg.length;++i){togo[i]=arg[i]}}}return togo};fluid.pushArray=function(holder,member,topush){var array=holder[member]?holder[member]:holder[member]=[];if(fluid.isArrayable(topush)){array.push.apply(array,topush)}else{array.push(topush)}};function transformInternal(source,togo,key,args){var transit=source[key];for(var j=0;j<args.length-1;++j){transit=args[j+1](transit,key)}togo[key]=transit}fluid.transform=function(source){if(fluid.isPrimitive(source)){return source}var togo=fluid.freshContainer(source);if(fluid.isArrayable(source)){for(var i=0;i<source.length;++i){transformInternal(source,togo,i,arguments)}}else{for(var key in source){transformInternal(source,togo,key,arguments)}}return togo};fluid.each=function(source,func){if(fluid.isArrayable(source)){for(var i=0;i<source.length;++i){func(source[i],i)}}else{for(var key in source){func(source[key],key)}}};fluid.make_find=function(find_if){var target=find_if?false:undefined;return function(source,func,deffolt){var disp;if(fluid.isArrayable(source)){for(var i=0;i<source.length;++i){disp=func(source[i],i);if(disp!==target){return find_if?source[i]:disp}}}else{for(var key in source){disp=func(source[key],key);if(disp!==target){return find_if?source[key]:disp}}}return deffolt}};fluid.find=fluid.make_find(false);fluid.find_if=fluid.make_find(true);fluid.accumulate=function(list,fn,arg){for(var i=0;i<list.length;++i){arg=fn(list[i],arg,i)}return arg};fluid.add=function(a,b){return a+b};fluid.remove_if=function(source,fn,target){if(fluid.isArrayable(source)){for(var i=source.length-1;i>=0;--i){if(fn(source[i],i)){if(target){target.unshift(source[i])}source.splice(i,1)}}}else{for(var key in source){if(fn(source[key],key)){if(target){target[key]=source[key]}delete source[key]}}}return target||source};fluid.generate=function(n,generator,applyFunc){var togo=[];for(var i=0;i<n;++i){togo[i]=applyFunc?generator(i):generator}return togo};fluid.iota=function(count,first){first=first||0;var togo=[];for(var i=0;i<count;++i){togo[togo.length]=first++}return togo};fluid.getMembers=function(holder,name){return fluid.transform(holder,function(member){return fluid.get(member,name)})};fluid.filterKeys=function(toFilter,keys,exclude){return fluid.remove_if($.extend({},toFilter),function(value,key){return exclude^keys.indexOf(key)===-1})};fluid.censorKeys=function(toCensor,keys){return fluid.filterKeys(toCensor,keys,true)};fluid.makeFlatten=function(index){return function(obj){var togo=[];fluid.each(obj,function(){togo.push(arguments[index])});return togo}};fluid.keys=fluid.makeFlatten(1);fluid.values=fluid.makeFlatten(0);fluid.contains=function(obj,value){return obj?fluid.isArrayable(obj)?obj.indexOf(value)!==-1:fluid.find(obj,function(thisValue){if(value===thisValue){return true}}):undefined};fluid.keyForValue=function(obj,value){return fluid.find(obj,function(thisValue,key){if(value===thisValue){return key}})};fluid.arrayToHash=function(array){var togo={};fluid.each(array,function(el){togo[el]=true});return togo};fluid.stableSort=function(array,func){for(var i=0;i<array.length;i++){var j,k=array[i];for(j=i;j>0&&func(k,array[j-1])<0;j--){array[j]=array[j-1]}array[j]=k}};fluid.hashToArray=function(hash,keyName,func){var togo=[];fluid.each(hash,function(el,key){var newEl={};newEl[keyName]=key;if(func){newEl=func(newEl,el,key)||newEl}else{$.extend(true,newEl,el)}togo.push(newEl)});return togo};fluid.flatten=function(array){var togo=[];fluid.each(array,function(element){if(fluid.isArrayable(element)){togo=togo.concat(element)}else{togo.push(element)}});return togo};fluid.clear=function(target){if(fluid.isArrayable(target)){target.length=0}else{for(var i in target){delete target[i]}}};fluid.compareStringLength=function(ascending){return ascending?function(a,b){return a.length-b.length}:function(a,b){return b.length-a.length}};fluid.parseInteger=function(string){return isFinite(string)&&string%1===0?Number(string):NaN};fluid.freezeRecursive=function(tofreeze){if(fluid.isPlainObject(tofreeze)){fluid.each(tofreeze,function(value){fluid.freezeRecursive(value)});return Object.freeze(tofreeze)}else{return tofreeze}};fluid.marker=function(){};fluid.makeMarker=function(value,extra){var togo=Object.create(fluid.marker.prototype);togo.value=value;$.extend(togo,extra);return Object.freeze(togo)};fluid.VALUE=fluid.makeMarker("VALUE");fluid.NO_VALUE=fluid.makeMarker("NO_VALUE");fluid.EXPAND=fluid.makeMarker("EXPAND");fluid.isMarker=function(totest,type){if(!(totest instanceof fluid.marker)){return false}if(!type){return true}return totest.value===type.value};fluid.logLevelsSpec={FATAL:0,FAIL:5,WARN:10,IMPORTANT:12,INFO:15,TRACE:20};fluid.logLevel=fluid.transform(fluid.logLevelsSpec,function(value,key){return fluid.makeMarker(key,{priority:value})});var logLevelStack=[fluid.logLevel.IMPORTANT];fluid.model={};fluid.model.copyModel=function(target,source){fluid.clear(target);$.extend(true,target,source)};fluid.model.parseEL=function(EL){return EL===""?[]:String(EL).split(".")};fluid.model.composePath=function(prefix,suffix){return prefix===""?suffix:suffix===""?prefix:prefix+"."+suffix};fluid.model.composeSegments=function(){return fluid.makeArray(arguments).join(".")};fluid.lastDotIndex=function(path){return path.lastIndexOf(".")};fluid.model.getToTailPath=function(path){var lastdot=fluid.lastDotIndex(path);return lastdot===-1?"":path.substring(0,lastdot)};fluid.model.getTailPath=function(path){var lastdot=fluid.lastDotIndex(path);return path.substring(lastdot+1)};fluid.path=fluid.model.composeSegments;fluid.composePath=fluid.model.composePath;fluid.requireDataBinding=function(){fluid.fail("Please include DataBinding.js in order to operate complex model accessor configuration")};fluid.model.setWithStrategy=fluid.model.getWithStrategy=fluid.requireDataBinding;fluid.model.resolvePathSegment=function(root,segment,create,origEnv){if(!origEnv&&root.resolvePathSegment){return root.resolvePathSegment(segment)}if(create&&root[segment]===undefined){return root[segment]={}}return root[segment]};fluid.model.parseToSegments=function(EL,parseEL,copy){return typeof EL==="number"||typeof EL==="string"?parseEL(EL):copy?fluid.makeArray(EL):EL};fluid.model.pathToSegments=function(EL,config){var parser=config&&config.parser?config.parser.parse:fluid.model.parseEL;return fluid.model.parseToSegments(EL,parser)};fluid.model.accessImpl=function(root,EL,newValue,config,initSegs,returnSegs,traverser){var segs=fluid.model.pathToSegments(EL,config);var initPos=0;if(initSegs){initPos=initSegs.length;segs=initSegs.concat(segs)}var uncess=newValue===fluid.NO_VALUE?0:1;root=traverser(root,segs,initPos,config,uncess);if(newValue===fluid.NO_VALUE||newValue===fluid.VALUE){return returnSegs?{root:root,segs:segs}:root}else{root[segs[segs.length-1]]=newValue}};fluid.model.accessSimple=function(root,EL,newValue,environment,initSegs,returnSegs){return fluid.model.accessImpl(root,EL,newValue,environment,initSegs,returnSegs,fluid.model.traverseSimple)};fluid.model.traverseSimple=function(root,segs,initPos,environment,uncess){var origEnv=environment;var limit=segs.length-uncess;for(var i=0;i<limit;++i){if(!root){return root}var segment=segs[i];if(environment&&environment[segment]){root=environment[segment]}else{root=fluid.model.resolvePathSegment(root,segment,uncess===1,origEnv)}environment=null}return root};fluid.model.setSimple=function(root,EL,newValue,environment,initSegs){fluid.model.accessSimple(root,EL,newValue,environment,initSegs,false)};fluid.model.getSimple=function(root,EL,environment,initSegs){if(EL===null||EL===undefined||EL.length===0){return root}return fluid.model.accessSimple(root,EL,fluid.NO_VALUE,environment,initSegs,false)};fluid.getImmediate=function(root,segs,i){var limit=i===undefined?segs.length:i+1;for(var j=0;j<limit;++j){root=root?root[segs[j]]:undefined}return root};fluid.decodeAccessorArg=function(arg3){return!arg3||arg3===fluid.model.defaultGetConfig||arg3===fluid.model.defaultSetConfig?null:arg3.type==="environment"?arg3.value:undefined};fluid.set=function(root,EL,newValue,config,initSegs){var env=fluid.decodeAccessorArg(config);if(env===undefined){fluid.model.setWithStrategy(root,EL,newValue,config,initSegs)}else{fluid.model.setSimple(root,EL,newValue,env,initSegs)}};fluid.get=function(root,EL,config,initSegs){var env=fluid.decodeAccessorArg(config);return env===undefined?fluid.model.getWithStrategy(root,EL,config,initSegs):fluid.model.accessImpl(root,EL,fluid.NO_VALUE,env,null,false,fluid.model.traverseSimple)};fluid.getGlobalValue=function(path,env){if(path){env=env||fluid.environment;return fluid.get(fluid.global,path,{type:"environment",value:env})}};fluid.bind=function(obj,fnName,args){return obj[fnName].apply(obj,fluid.makeArray(args))};fluid.invokeGlobalFunction=function(functionPath,args,environment){var func=fluid.getGlobalValue(functionPath,environment);if(!func){fluid.fail("Error invoking global function: "+functionPath+" could not be located")}else{return func.apply(null,fluid.isArrayable(args)?args:fluid.makeArray(args))}};fluid.registerGlobalFunction=function(functionPath,func,env){env=env||fluid.environment;fluid.set(fluid.global,functionPath,func,{type:"environment",value:env})};fluid.setGlobalValue=fluid.registerGlobalFunction;fluid.registerNamespace=function(naimspace,env){env=env||fluid.environment;var existing=fluid.getGlobalValue(naimspace,env);if(!existing){existing={};fluid.setGlobalValue(naimspace,existing,env)}return existing};fluid.dumpEl=fluid.identity;fluid.renderTimestamp=fluid.identity;fluid.generateUniquePrefix=function(){return Math.floor(Math.random()*1e12).toString(36)+"-"};var fluid_prefix=fluid.generateUniquePrefix();fluid.fluidInstance=fluid_prefix;var fluid_guid=1;fluid.allocateGuid=function(){return fluid_prefix+fluid_guid++};fluid.registerNamespace("fluid.event");fluid.extremePriority=4e9;fluid.priorityTypes={first:-1,last:1,before:0,after:0};fluid.extremalPriorities={none:0,testing:10,authoring:20};fluid.parsePriorityConstraint=function(constraint,fixedOnly,site){var segs=constraint.split(":");var type=segs[0];var lookup=fluid.priorityTypes[type];if(lookup===undefined){fluid.fail("Invalid constraint type in priority field "+constraint+": the only supported values are "+fluid.keys(fluid.priorityTypes).join(", ")+" or numeric")}if(fixedOnly&&lookup===0){fluid.fail("Constraint type in priority field "+constraint+" is not supported in a "+site+" record - you must use either a numeric value or first, last")}return{type:segs[0],target:segs[1]}};fluid.parsePriority=function(priority,count,fixedOnly,site){priority=priority||0;var togo={count:count||0,fixed:null,constraint:null,site:site};if(typeof priority==="number"){togo.fixed=-priority}else{togo.constraint=fluid.parsePriorityConstraint(priority,fixedOnly,site)}var multiplier=togo.constraint?fluid.priorityTypes[togo.constraint.type]:0;if(multiplier!==0){var target=togo.constraint.target||"none";var extremal=fluid.extremalPriorities[target];if(extremal===undefined){fluid.fail("Unrecognised extremal priority target "+target+": the currently supported values are "+fluid.keys(fluid.extremalPriorities).join(", ")+": register your value in fluid.extremalPriorities")}togo.fixed=multiplier*(fluid.extremePriority+extremal)}if(togo.fixed!==null){togo.fixed+=togo.count/1024}return togo};fluid.renderPriority=function(parsed){return parsed.constraint?parsed.constraint.target?parsed.constraint.type+":"+parsed.constraint.target:parsed.constraint.type:Math.floor(parsed.fixed)};fluid.compareByPriority=function(recA,recB){if(recA.priority.fixed!==null&&recB.priority.fixed!==null){return recA.priority.fixed-recB.priority.fixed}else{return(recA.priority.fixed===null)-(recB.priority.fixed===null)}};fluid.honourConstraint=function(array,firstConstraint,c){var constraint=array[c].priority.constraint;var matchIndex=fluid.find(array,function(element,index){return element.namespace===constraint.target?index:undefined},-1);if(matchIndex===-1){return true}else if(matchIndex>=firstConstraint){return false}else{var offset=constraint.type==="after"?1:0;var target=matchIndex+offset;var temp=array[c];for(var shift=c;shift>=target;--shift){array[shift]=array[shift-1]}array[target]=temp;return true}};fluid.sortByPriority=function(array){fluid.stableSort(array,fluid.compareByPriority);var firstConstraint=fluid.find(array,function(element,index){return element.priority.constraint&&fluid.priorityTypes[element.priority.constraint.type]===0?index:undefined},array.length);while(true){if(firstConstraint===array.length){return array}var oldFirstConstraint=firstConstraint;for(var c=firstConstraint;c<array.length;++c){var applied=fluid.honourConstraint(array,firstConstraint,c);if(applied){++firstConstraint}}if(firstConstraint===oldFirstConstraint){var holders=array.slice(firstConstraint);fluid.fail("Could not find targets for any constraints in "+holders[0].priority.site+" ",holders,": none of the targets ("+fluid.getMembers(holders,"priority.constraint.target").join(", ")+") matched any namespaces of the elements in (",array.slice(0,firstConstraint),") - this is caused by either an invalid or circular reference")}}};fluid.parsePriorityRecords=function(records,name){var array=fluid.hashToArray(records,"namespace",function(newElement,oldElement,index){$.extend(newElement,oldElement);newElement.priority=fluid.parsePriority(oldElement.priority,index,false,name)});fluid.sortByPriority(array);return array};fluid.event.identifyListener=function(listener,soft){if(typeof listener!=="string"&&!listener.$$fluid_guid&&!soft){listener.$$fluid_guid=fluid.allocateGuid()}return listener.$$fluid_guid};fluid.event.impersonateListener=function(origListener,newListener){fluid.event.identifyListener(origListener);newListener.$$fluid_guid=origListener.$$fluid_guid};fluid.event.sortListeners=function(listeners){var togo=[];fluid.each(listeners,function(oneNamespace){var headHard;for(var i=0;i<oneNamespace.length;++i){var thisListener=oneNamespace[i];if(!thisListener.softNamespace&&!headHard){headHard=thisListener}}if(headHard){togo.push(headHard)}else{togo=togo.concat(oneNamespace)}});return fluid.sortByPriority(togo)};fluid.event.resolveListener=function(listener){var listenerName=listener.globalName||(typeof listener==="string"?listener:null);if(listenerName){var listenerFunc=fluid.getGlobalValue(listenerName);if(!listenerFunc){fluid.fail("Unable to look up name "+listenerName+" as a global function")}else{listener=listenerFunc}}return listener};fluid.nameComponent=function(that){return that?"component with typename "+that.typeName+" and id "+that.id:"[unknown component]"};fluid.event.nameEvent=function(that,eventName){return eventName+" of "+fluid.nameComponent(that)};fluid.makeEventFirer=function(options){options=options||{};var name=options.name||"<anonymous>";var that;var lazyInit=function(){that.listeners={};that.byId={};that.sortedListeners=[];that.addListener=function(listener,namespace,priority,softNamespace,listenerId){var record;if(that.destroyed){fluid.fail("Cannot add listener to destroyed event firer "+that.name)}if(!listener){return}if(fluid.isPlainObject(listener,true)&&!fluid.isApplicable(listener)){record=listener;listener=record.listener;namespace=record.namespace;priority=record.priority;softNamespace=record.softNamespace;listenerId=record.listenerId}if(typeof listener==="string"){listener={globalName:listener}}var id=listenerId||fluid.event.identifyListener(listener);namespace=namespace||id;record=$.extend(record||{},{namespace:namespace,listener:listener,softNamespace:softNamespace,listenerId:listenerId,priority:fluid.parsePriority(priority,that.sortedListeners.length,false,"listeners")});that.byId[id]=record;var thisListeners=that.listeners[namespace]=fluid.makeArray(that.listeners[namespace]);thisListeners[softNamespace?"push":"unshift"](record);that.sortedListeners=fluid.event.sortListeners(that.listeners)};that.addListener.apply(null,arguments)};that={eventId:fluid.allocateGuid(),name:name,ownerId:options.ownerId,typeName:"fluid.event.firer",destroy:function(){that.destroyed=true},addListener:function(){lazyInit.apply(null,arguments)},removeListener:function(listener){if(!that.listeners){return}var namespace,id,record;if(typeof listener==="string"){namespace=listener;record=that.listeners[namespace];if(!record){id=namespace;namespace=null}}else if(typeof listener==="function"){id=fluid.event.identifyListener(listener,true);if(!id){fluid.fail("Cannot remove unregistered listener function ",listener," from event "+that.name)}}var rec=that.byId[id];var softNamespace=rec&&rec.softNamespace;namespace=namespace||rec&&rec.namespace||id;delete that.byId[id];record=that.listeners[namespace];if(record){if(softNamespace){fluid.remove_if(record,function(thisLis){return thisLis.listener.$$fluid_guid===id||thisLis.listenerId===id})}else{record.shift()}if(record.length===0){delete that.listeners[namespace]}}that.sortedListeners=fluid.event.sortListeners(that.listeners)},fire:function(){var listeners=that.sortedListeners;if(!listeners||that.destroyed){return}fluid.log(fluid.logLevel.TRACE,"Firing event "+name+" to list of "+listeners.length+" listeners");for(var i=0;i<listeners.length;++i){var lisrec=listeners[i];lisrec.listener=fluid.event.resolveListener(lisrec.listener);var listener=lisrec.listener;var ret=listener.apply(null,arguments);var value;if(options.preventable&&ret===false||that.destroyed){value=false}if(value!==undefined){return value}}}};return that};fluid.fireEvent=function(component,eventName,args){var firer=component.events[eventName];if(firer){firer.fire.apply(null,fluid.makeArray(args))}};fluid.event.addListenerToFirer=function(firer,value,namespace,wrapper){wrapper=wrapper||fluid.identity;if(fluid.isArrayable(value)){for(var i=0;i<value.length;++i){fluid.event.addListenerToFirer(firer,value[i],namespace,wrapper)}}else if(typeof value==="function"||typeof value==="string"){wrapper(firer).addListener(value,namespace)}else if(value&&typeof value==="object"){wrapper(firer).addListener(value.listener,namespace||value.namespace,value.priority,value.softNamespace,value.listenerId)}};fluid.event.resolveListenerRecord=function(records){return{records:records}};fluid.expandImmediate=function(material){fluid.fail("fluid.expandImmediate could not be loaded - please include FluidIoC.js in order to operate IoC-driven event with descriptor "+material)};fluid.mergeListeners=function(that,events,listeners){fluid.each(listeners,function(value,key){var firer,namespace;if(fluid.isIoCReference(key)){firer=fluid.expandImmediate(key,that);if(!firer){fluid.fail("Error in listener record: key "+key+' could not be looked up to an event firer - did you miss out "events." when referring to an event firer?')}}else{var keydot=key.indexOf(".");if(keydot!==-1){namespace=key.substring(keydot+1);key=key.substring(0,keydot)}if(!events[key]){fluid.fail("Listener registered for event "+key+" which is not defined for this component")}firer=events[key]}var record=fluid.event.resolveListenerRecord(value,that,key,namespace,true);fluid.event.addListenerToFirer(firer,record.records,namespace,record.adderWrapper)})};fluid.eventFromRecord=function(eventSpec,eventKey,that){var isIoCEvent=eventSpec&&(typeof eventSpec!=="string"||fluid.isIoCReference(eventSpec));var event;if(isIoCEvent){if(!fluid.event.resolveEvent){fluid.fail("fluid.event.resolveEvent could not be loaded - please include FluidIoC.js in order to operate IoC-driven event with descriptor ",eventSpec)}else{event=fluid.event.resolveEvent(that,eventKey,eventSpec)}}else{event=fluid.makeEventFirer({name:fluid.event.nameEvent(that,eventKey),preventable:eventSpec==="preventable",ownerId:that.id})}return event};fluid.instantiateFirers=function(that,options){fluid.each(options.events,function(eventSpec,eventKey){that.events[eventKey]=fluid.eventFromRecord(eventSpec,eventKey,that)})};fluid.mergeListenerPolicy=function(target,source,key){if(typeof key!=="string"){fluid.fail("Error in listeners declaration - the keys in this structure must resolve to event names - got "+key+" from ",source)}var hasNamespace=!fluid.isIoCReference(key)&&key.indexOf(".")!==-1;return hasNamespace?source||target:fluid.arrayConcatPolicy(target,source)};fluid.makeMergeListenersPolicy=function(merger,modelRelay){return function(target,source){target=target||{};if(modelRelay&&(fluid.isArrayable(source)||typeof source.target==="string")){target[""]=merger(target[""],source,"")}else{fluid.each(source,function(listeners,key){target[key]=merger(target[key],listeners,key)})}return target}};fluid.validateListenersImplemented=function(that){var errors=[];fluid.each(that.events,function(event,name){fluid.each(event.sortedListeners,function(lisrec){if(lisrec.listener===fluid.notImplemented||lisrec.listener.globalName==="fluid.notImplemented"){errors.push({name:name,namespace:lisrec.namespace,componentSource:fluid.model.getSimple(that.options.listeners,[name+"."+lisrec.namespace,0,"componentSource"])})}})});return errors};fluid.unique=function(array){return fluid.remove_if(array,function(element,i){return!element||i>0&&element===array[i-1]})};fluid.arrayConcatPolicy=function(target,source){return fluid.makeArray(target).concat(fluid.makeArray(source))};fluid.failureEvent=fluid.makeEventFirer({name:"failure event"});fluid.failureEvent.addListener(fluid.builtinFail,"fail");fluid.failureEvent.addListener(fluid.logFailure,"log","before:fail");fluid.pushSoftFailure=function(condition){if(typeof condition==="function"){fluid.failureEvent.addListener(condition,"fail")}else if(condition===-1){fluid.failureEvent.removeListener("fail")}else if(typeof condition==="boolean"){fluid.fail("pushSoftFailure with boolean value is no longer supported")}};fluid.componentConstructor=function(){};fluid.typeTag=function(name){var that=Object.create(fluid.componentConstructor.prototype);that.typeName=name;that.id=fluid.allocateGuid();return that};var gradeTick=1;var gradeTickStore={};fluid.defaultsStore={};fluid.resolveGradesImpl=function(gs,gradeNames){gradeNames=fluid.makeArray(gradeNames);for(var i=gradeNames.length-1;i>=0;--i){var gradeName=gradeNames[i];if(gradeName&&!gs.gradeHash[gradeName]){var isDynamic=fluid.isIoCReference(gradeName);var options=(isDynamic?null:fluid.rawDefaults(gradeName))||{};var thisTick=gradeTickStore[gradeName]||gradeTick-1;gs.lastTick=Math.max(gs.lastTick,thisTick);gs.gradeHash[gradeName]=true;gs.gradeChain.push(gradeName);var oGradeNames=fluid.makeArray(options.gradeNames);for(var j=oGradeNames.length-1;j>=0;--j){fluid.resolveGradesImpl(gs,oGradeNames[j])}}}return gs};fluid.resolveGradeStructure=function(defaultName,gradeNames){var gradeStruct={lastTick:0,gradeChain:[],gradeHash:{}};fluid.resolveGradesImpl(gradeStruct,[defaultName].concat(fluid.makeArray(gradeNames)));gradeStruct.gradeChain.reverse();return gradeStruct};fluid.hasGrade=function(options,gradeName){return!options||!options.gradeNames?false:fluid.contains(options.gradeNames,gradeName)};fluid.resolveGrade=function(defaults,defaultName,gradeNames){var gradeStruct=fluid.resolveGradeStructure(defaultName,gradeNames);var mergeArgs=fluid.transform(gradeStruct.gradeChain,fluid.rawDefaults,fluid.copy);fluid.remove_if(mergeArgs,function(options){return!options});var mergePolicy={};for(var i=0;i<mergeArgs.length;++i){if(mergeArgs[i]&&mergeArgs[i].mergePolicy){mergePolicy=$.extend(true,mergePolicy,mergeArgs[i].mergePolicy)}}mergeArgs=[mergePolicy,{}].concat(mergeArgs);var mergedDefaults=fluid.merge.apply(null,mergeArgs);mergedDefaults.gradeNames=gradeStruct.gradeChain;fluid.freezeRecursive(mergedDefaults);return{defaults:mergedDefaults,lastTick:gradeStruct.lastTick}};fluid.mergedDefaultsCache={};fluid.gradeNamesToKey=function(defaultName,gradeNames){return defaultName+"|"+gradeNames.join("|")};fluid.getMergedDefaults=function(defaultName,gradeNames){gradeNames=fluid.makeArray(gradeNames);var key=fluid.gradeNamesToKey(defaultName,gradeNames);var mergedDefaults=fluid.mergedDefaultsCache[key];if(mergedDefaults){var lastTick=0;var searchGrades=mergedDefaults.defaults.gradeNames||[];for(var i=0;i<searchGrades.length;++i){lastTick=Math.max(lastTick,gradeTickStore[searchGrades[i]]||0)}if(lastTick>mergedDefaults.lastTick){fluid.log(fluid.logLevel.TRACE,"Clearing cache for component "+defaultName+" with gradeNames ",searchGrades);mergedDefaults=null}}if(!mergedDefaults){var defaults=fluid.rawDefaults(defaultName);if(!defaults){return defaults}mergedDefaults=fluid.mergedDefaultsCache[key]=fluid.resolveGrade(defaults,defaultName,gradeNames)}return mergedDefaults.defaults};fluid.upgradePrimitiveFunc=function(rec,key){if(rec&&fluid.isPrimitive(rec)){var togo={};togo[key||(typeof rec==="string"&&rec.charAt(0)!=="{"?"funcName":"func")]=rec;togo.args=fluid.NO_VALUE;return togo}else{return rec}};fluid.annotateListeners=function(componentName,options){options.listeners=fluid.transform(options.listeners,function(record){var togo=fluid.makeArray(record);return fluid.transform(togo,function(onerec){
onerec=fluid.upgradePrimitiveFunc(onerec,"listener");onerec.componentSource=componentName;return onerec})});options.invokers=fluid.transform(options.invokers,function(record){record=fluid.upgradePrimitiveFunc(record);if(record){record.componentSource=componentName}return record})};fluid.rawDefaults=function(componentName){var entry=fluid.defaultsStore[componentName];return entry&&entry.options};fluid.registerRawDefaults=function(componentName,options){fluid.pushActivity("registerRawDefaults","registering defaults for grade %componentName with options %options",{componentName:componentName,options:options});var optionsCopy=fluid.expandCompact?fluid.expandCompact(options):fluid.copy(options);fluid.annotateListeners(componentName,optionsCopy);var callerInfo=fluid.getCallerInfo&&fluid.getCallerInfo(6);fluid.defaultsStore[componentName]={options:optionsCopy,callerInfo:callerInfo};gradeTickStore[componentName]=gradeTick++;fluid.popActivity()};fluid.doIndexDefaults=function(defaultName,defaults,index,indexSpec){var requiredGrades=fluid.makeArray(indexSpec.gradeNames);for(var i=0;i<requiredGrades.length;++i){if(!fluid.hasGrade(defaults,requiredGrades[i])){return}}var indexFunc=typeof indexSpec.indexFunc==="function"?indexSpec.indexFunc:fluid.getGlobalValue(indexSpec.indexFunc);var keys=indexFunc(defaults)||[];for(var j=0;j<keys.length;++j){fluid.pushArray(index,keys[j],defaultName)}};fluid.indexDefaults=function(indexName,indexSpec){var index={};for(var defaultName in fluid.defaultsStore){var defaults=fluid.getMergedDefaults(defaultName);fluid.doIndexDefaults(defaultName,defaults,index,indexSpec)}return index};fluid.defaults=function(componentName,options){if(options===undefined){return fluid.getMergedDefaults(componentName)}else{if(options&&options.options){fluid.fail("Probable error in options structure for "+componentName+' with option named "options" - perhaps you meant to write these options at top level in fluid.defaults? - ',options)}fluid.registerRawDefaults(componentName,options);var gradedDefaults=fluid.getMergedDefaults(componentName);if(!fluid.hasGrade(gradedDefaults,"fluid.function")){fluid.makeComponentCreator(componentName)}}};fluid.makeComponentCreator=function(componentName){var creator=function(){var defaults=fluid.getMergedDefaults(componentName);if(!defaults.gradeNames||defaults.gradeNames.length===0){fluid.fail("Cannot make component creator for type "+componentName+" which does not have any gradeNames defined")}else if(!defaults.initFunction){var blankGrades=[];for(var i=0;i<defaults.gradeNames.length;++i){var gradeName=defaults.gradeNames[i];var rawDefaults=fluid.rawDefaults(gradeName);if(!rawDefaults){blankGrades.push(gradeName)}}if(blankGrades.length===0){fluid.fail("Cannot make component creator for type "+componentName+" which does not have an initFunction defined")}else{fluid.fail("The grade hierarchy of component with type "+componentName+" is incomplete - it inherits from the following grade(s): "+blankGrades.join(", ")+" for which the grade definitions are corrupt or missing. Please check the files which might include these "+"grades and ensure they are readable and have been loaded by this instance of Infusion")}}else{return fluid.initComponent(componentName,arguments)}};var existing=fluid.getGlobalValue(componentName);if(existing){$.extend(creator,existing)}fluid.setGlobalValue(componentName,creator)};fluid.emptyPolicy=fluid.freezeRecursive({});fluid.derefMergePolicy=function(policy){return(policy?policy["*"]:fluid.emptyPolicy)||fluid.emptyPolicy};fluid.compileMergePolicy=function(mergePolicy){var builtins={},defaultValues={};var togo={builtins:builtins,defaultValues:defaultValues};if(!mergePolicy){return togo}fluid.each(mergePolicy,function(value,key){var parsed={},builtin=true;if(typeof value==="function"){parsed.func=value}else if(typeof value==="object"){parsed=value}else if(!fluid.isDefaultValueMergePolicy(value)){var split=value.split(/\s*,\s*/);for(var i=0;i<split.length;++i){parsed[split[i]]=true}}else{fluid.set(defaultValues,key,"{that}.options."+value);togo.hasDefaults=true;builtin=false}if(builtin){fluid.set(builtins,fluid.composePath(key,"*"),parsed)}});return togo};fluid.isDefaultValueMergePolicy=function(policy){return typeof policy==="string"&&(policy.indexOf(",")===-1&&!/replace|nomerge|noexpand/.test(policy))};fluid.mergeOneImpl=function(thisTarget,thisSource,j,sources,newPolicy,i,segs){var togo=thisTarget;var primitiveTarget=fluid.isPrimitive(thisTarget);if(thisSource!==undefined){if(!newPolicy.func&&thisSource!==null&&fluid.isPlainObject(thisSource)&&!newPolicy.nomerge){if(primitiveTarget){togo=thisTarget=fluid.freshContainer(thisSource)}}else{sources[j]=undefined;if(newPolicy.func){togo=newPolicy.func.call(null,thisTarget,thisSource,segs[i-1],segs,i)}else{togo=thisSource}}}return togo};function regenerateCursor(source,segs,limit,sourceStrategy){for(var i=0;i<limit;++i){source=sourceStrategy(source,segs[i],i,fluid.makeArray(segs))}return source}function regenerateSources(sources,segs,limit,sourceStrategies){var togo=[];for(var i=0;i<sources.length;++i){var thisSource=regenerateCursor(sources[i],segs,limit,sourceStrategies[i]);if(thisSource!==undefined){togo.push(thisSource)}}return togo}fluid.fetchMergeChildren=function(target,i,segs,sources,mergePolicy,options){var thisPolicy=fluid.derefMergePolicy(mergePolicy);for(var j=sources.length-1;j>=0;--j){var source=sources[j];if(source!==undefined){fluid.each(source,function(newSource,name){var childPolicy=fluid.concreteTrundler(mergePolicy,name);if(!(name in target)||options.evaluateFully&&childPolicy===undefined&&!fluid.isPrimitive(target[name])){segs[i]=name;options.strategy(target,name,i+1,segs,sources,mergePolicy)}});if(thisPolicy.replace){break}}}return target};fluid.inEvaluationMarker=Object.freeze({__CURRENTLY_IN_EVALUATION__:true});fluid.strategyRecursionBailout=50;fluid.makeMergeStrategy=function(options){var strategy=function(target,name,i,segs,sources,policy){if(i>fluid.strategyRecursionBailout){fluid.fail("Overflow/circularity in options merging, current path is ",segs," at depth ",i,' - please protect components from merging using the "nomerge" merge policy')}if(fluid.isPrimitive(target)){return undefined}if(fluid.isTracing){fluid.tracing.pathCount.push(fluid.path(segs.slice(0,i)))}var oldTarget;if(name in target){oldTarget=target[name];if(!options.evaluateFully){return oldTarget}}else{if(target!==fluid.inEvaluationMarker){target[name]=fluid.inEvaluationMarker}}if(sources===undefined){segs=fluid.makeArray(segs);sources=regenerateSources(options.sources,segs,i-1,options.sourceStrategies);policy=regenerateCursor(options.mergePolicy,segs,i-1,fluid.concreteTrundler)}var newPolicyHolder=fluid.concreteTrundler(policy,name);var newPolicy=fluid.derefMergePolicy(newPolicyHolder);var start,limit,mul;if(newPolicy.replace){start=1-sources.length;limit=0;mul=-1}else{start=0;limit=sources.length-1;mul=+1}var newSources=[];var thisTarget;for(var j=start;j<=limit;++j){var k=mul*j;var thisSource=options.sourceStrategies[k](sources[k],name,i,segs);if(thisSource!==undefined){if(!fluid.isPrimitive(thisSource)){newSources[k]=thisSource}if(oldTarget===undefined){if(mul===-1){thisTarget=target[name]=thisSource;break}else{thisTarget=fluid.mergeOneImpl(thisTarget,thisSource,j,newSources,newPolicy,i,segs,options);if(target!==fluid.inEvaluationMarker){target[name]=thisTarget}}}}}if(oldTarget!==undefined){thisTarget=oldTarget}if(newSources.length>0){if(fluid.isPlainObject(thisTarget)){fluid.fetchMergeChildren(thisTarget,i,segs,newSources,newPolicyHolder,options)}}if(oldTarget===undefined&&newSources.length===0){delete target[name]}return thisTarget};options.strategy=strategy;return strategy};fluid.driveStrategy=function(root,pathSegs,strategy){pathSegs=fluid.makeArray(pathSegs);for(var i=0;i<pathSegs.length;++i){if(!root){return undefined}root=strategy(root,pathSegs[i],i+1,pathSegs)}return root};fluid.concreteTrundler=function(source,seg){return!source?undefined:source[seg]};fluid.merge=function(policy){var sources=Array.prototype.slice.call(arguments,1);var compiled=fluid.compileMergePolicy(policy).builtins;var options=fluid.makeMergeOptions(compiled,sources,{});options.initter();return options.target};fluid.simpleGingerBlock=function(source,recordType){var block={target:source,simple:true,strategy:fluid.concreteTrundler,initter:fluid.identity,recordType:recordType,priority:fluid.mergeRecordTypes[recordType]};return block};fluid.makeMergeOptions=function(policy,sources,userOptions){var options={mergePolicy:policy,sources:sources};options=$.extend(options,userOptions);options.target=options.target||fluid.freshContainer(options.sources[0]);options.sourceStrategies=options.sourceStrategies||fluid.generate(options.sources.length,fluid.concreteTrundler);options.initter=function(){options.evaluateFully=true;fluid.fetchMergeChildren(options.target,0,[],options.sources,options.mergePolicy,options)};fluid.makeMergeStrategy(options);return options};fluid.transformOptions=function(options,transRec){fluid.expect("Options transformation record",transRec,["transformer","config"]);var transFunc=fluid.getGlobalValue(transRec.transformer);return transFunc.call(null,options,transRec.config)};fluid.findMergeBlocks=function(mergeBlocks,recordType){return fluid.remove_if(fluid.makeArray(mergeBlocks),function(block){return block.recordType!==recordType})};fluid.transformOptionsBlocks=function(mergeBlocks,transformOptions,recordTypes){fluid.each(recordTypes,function(recordType){var blocks=fluid.findMergeBlocks(mergeBlocks,recordType);fluid.each(blocks,function(block){var source=block.source?"source":"target";block[block.simple||source==="target"?"target":"source"]=fluid.transformOptions(block[source],transformOptions)})})};fluid.dedupeDistributionNamespaces=function(mergeBlocks){var byNamespace={};fluid.remove_if(mergeBlocks,function(mergeBlock){var ns=mergeBlock.namespace;if(ns){if(byNamespace[ns]&&byNamespace[ns]!==mergeBlock.contextThat.id){return true}else{byNamespace[ns]=mergeBlock.contextThat.id}}})};fluid.deliverOptionsStrategy=fluid.identity;fluid.computeComponentAccessor=fluid.identity;fluid.computeDynamicComponents=fluid.identity;fluid.mergeRecordTypes={defaults:1e3,defaultValueMerge:900,subcomponentRecord:800,user:700,distribution:100};fluid.model.applyChangeRequest=function(model,request){var segs=request.segs;if(segs.length===0){if(request.type==="ADD"){$.extend(true,model,request.value)}else{fluid.clear(model)}}else if(request.type==="ADD"){fluid.model.setSimple(model,request.segs,request.value)}else{for(var i=0;i<segs.length-1;++i){model=model[segs[i]];if(!model){return}}var last=segs[segs.length-1];delete model[last]}};fluid.destroyValue=function(target,segs){if(target){fluid.model.applyChangeRequest(target,{type:"DELETE",segs:segs})}};fluid.mergeComponentOptions=function(that,componentName,userOptions,localOptions){var rawDefaults=fluid.rawDefaults(componentName);var defaults=fluid.getMergedDefaults(componentName,rawDefaults&&rawDefaults.gradeNames?null:localOptions.gradeNames);var sharedMergePolicy={};var mergeBlocks=[];if(fluid.expandComponentOptions){mergeBlocks=mergeBlocks.concat(fluid.expandComponentOptions(sharedMergePolicy,defaults,userOptions,that))}else{mergeBlocks=mergeBlocks.concat([fluid.simpleGingerBlock(defaults,"defaults"),fluid.simpleGingerBlock(userOptions,"user")])}var options={};var sourceStrategies=[],sources=[];var baseMergeOptions={target:options,sourceStrategies:sourceStrategies};var updateBlocks=function(){fluid.each(mergeBlocks,function(block){if(fluid.isPrimitive(block.priority)){block.priority=fluid.parsePriority(block.priority,0,false,"options distribution")}});fluid.sortByPriority(mergeBlocks);fluid.dedupeDistributionNamespaces(mergeBlocks);sourceStrategies.length=0;sources.length=0;fluid.each(mergeBlocks,function(block){sourceStrategies.push(block.strategy);sources.push(block.target)})};updateBlocks();var mergeOptions=fluid.makeMergeOptions(sharedMergePolicy,sources,baseMergeOptions);mergeOptions.mergeBlocks=mergeBlocks;mergeOptions.updateBlocks=updateBlocks;mergeOptions.destroyValue=function(segs){for(var i=0;i<mergeBlocks.length;++i){fluid.destroyValue(mergeBlocks[i].target,segs)}fluid.destroyValue(baseMergeOptions.target,segs)};var compiledPolicy;var mergePolicy;function computeMergePolicy(){mergePolicy=fluid.driveStrategy(options,"mergePolicy",mergeOptions.strategy);mergePolicy=$.extend({},fluid.rootMergePolicy,mergePolicy);compiledPolicy=fluid.compileMergePolicy(mergePolicy);$.extend(true,sharedMergePolicy,compiledPolicy.builtins)}computeMergePolicy();mergeOptions.computeMergePolicy=computeMergePolicy;if(compiledPolicy.hasDefaults){if(fluid.generateExpandBlock){mergeBlocks.push(fluid.generateExpandBlock({options:compiledPolicy.defaultValues,recordType:"defaultValueMerge",priority:fluid.mergeRecordTypes.defaultValueMerge},that,{}));updateBlocks()}else{fluid.fail("Cannot operate mergePolicy ",mergePolicy," for component ",that," without including FluidIoC.js")}}that.options=options;fluid.driveStrategy(options,"gradeNames",mergeOptions.strategy);fluid.deliverOptionsStrategy(that,options,mergeOptions);fluid.computeComponentAccessor(that,userOptions&&userOptions.localRecord);var transformOptions=fluid.driveStrategy(options,"transformOptions",mergeOptions.strategy);if(transformOptions){fluid.transformOptionsBlocks(mergeBlocks,transformOptions,["user","subcomponentRecord"]);updateBlocks()}if(!baseMergeOptions.target.mergePolicy){computeMergePolicy()}return mergeOptions};fluid.defaults("fluid.function",{});fluid.invokeGradedFunction=function(name,spec){var defaults=fluid.defaults(name);if(!defaults||!defaults.argumentMap||!fluid.hasGrade(defaults,"fluid.function")){fluid.fail("Cannot look up name "+name+" to a function with registered argumentMap - got defaults ",defaults)}var args=[];fluid.each(defaults.argumentMap,function(value,key){args[value]=spec[key]});return fluid.invokeGlobalFunction(name,args)};fluid.noNamespaceDistributionPrefix="no-namespace-distribution-";fluid.mergeOneDistribution=function(target,source,key){var namespace=source.namespace||key||fluid.noNamespaceDistributionPrefix+fluid.allocateGuid();source.namespace=namespace;target[namespace]=$.extend(true,{},target[namespace],source)};fluid.distributeOptionsPolicy=function(target,source){target=target||{};if(fluid.isArrayable(source)){for(var i=0;i<source.length;++i){fluid.mergeOneDistribution(target,source[i])}}else if(typeof source.target==="string"){fluid.mergeOneDistribution(target,source)}else{fluid.each(source,function(oneSource,key){fluid.mergeOneDistribution(target,oneSource,key)})}return target};fluid.mergingArray=function(){};fluid.mergingArray.prototype=[];fluid.membersMergePolicy=function(target,source){target=target||{};fluid.each(source,function(oneSource,key){if(!target[key]){target[key]=new fluid.mergingArray}if(oneSource instanceof fluid.mergingArray){target[key].push.apply(target[key],oneSource)}else if(oneSource!==undefined){target[key].push(oneSource)}});return target};fluid.invokerStrategies=fluid.arrayToHash(["func","funcName","listener","this","method"]);fluid.invokersMergePolicy=function(target,source){target=target||{};fluid.each(source,function(oneInvoker,name){if(!oneInvoker){target[name]=oneInvoker;return}else{oneInvoker=fluid.upgradePrimitiveFunc(oneInvoker)}var oneT=target[name];if(!oneT){oneT=target[name]={}}for(var key in fluid.invokerStrategies){if(key in oneInvoker){for(var key2 in fluid.invokerStrategies){oneT[key2]=undefined}}}$.extend(oneT,oneInvoker)});return target};fluid.rootMergePolicy={gradeNames:fluid.arrayConcatPolicy,distributeOptions:fluid.distributeOptionsPolicy,members:{noexpand:true,func:fluid.membersMergePolicy},invokers:{noexpand:true,func:fluid.invokersMergePolicy},transformOptions:"replace",listeners:fluid.makeMergeListenersPolicy(fluid.mergeListenerPolicy)};fluid.defaults("fluid.component",{initFunction:"fluid.initLittleComponent",mergePolicy:fluid.rootMergePolicy,argumentMap:{options:0},events:{onCreate:null,onDestroy:null,afterDestroy:null}});fluid.defaults("fluid.emptySubcomponent",{gradeNames:["fluid.component"]});fluid.computeNickName=function(typeName){var segs=fluid.model.parseEL(typeName);return segs[segs.length-1]};fluid.defaults("fluid.typeFount",{gradeNames:["fluid.component"]});fluid.initLittleComponent=function(name,userOptions,localOptions,receiver){var that=fluid.typeTag(name);that.lifecycleStatus="constructing";localOptions=localOptions||{gradeNames:"fluid.component"};that.destroy=fluid.makeRootDestroy(that);var mergeOptions=fluid.mergeComponentOptions(that,name,userOptions,localOptions);mergeOptions.exceptions={members:{model:true,modelRelay:true}};var options=that.options;that.events={};(receiver||fluid.identity)(that,options,mergeOptions.strategy);fluid.computeDynamicComponents(that,mergeOptions);for(var i=0;i<mergeOptions.mergeBlocks.length;++i){mergeOptions.mergeBlocks[i].initter()}mergeOptions.initter();delete options.mergePolicy;fluid.instantiateFirers(that,options);fluid.mergeListeners(that,that.events,options.listeners);return that};fluid.diagnoseFailedView=fluid.identity;fluid.makeRootDestroy=function(that){return function(){fluid.doDestroy(that);fluid.fireEvent(that,"afterDestroy",[that,"",null])}};fluid.isDestroyed=function(that){return that.lifecycleStatus==="destroyed"};fluid.doDestroy=function(that,name,parent){fluid.fireEvent(that,"onDestroy",[that,name||"",parent]);that.lifecycleStatus="destroyed";for(var key in that.events){if(key!=="afterDestroy"&&typeof that.events[key].destroy==="function"){that.events[key].destroy()}}if(that.applier){that.applier.destroy()}};fluid.initComponent=function(componentName,initArgs){var options=fluid.defaults(componentName);if(!options.gradeNames){fluid.fail("Cannot initialise component "+componentName+" which has no gradeName registered")}var args=[componentName].concat(fluid.makeArray(initArgs));var that;fluid.pushActivity("initComponent","constructing component of type %componentName with arguments %initArgs",{componentName:componentName,initArgs:initArgs});that=fluid.invokeGlobalFunction(options.initFunction,args);fluid.diagnoseFailedView(componentName,that,options,args);if(fluid.initDependents){fluid.initDependents(that)}var errors=fluid.validateListenersImplemented(that);if(errors.length>0){fluid.fail(fluid.transform(errors,function(error){return["Error constructing component ",that," - the listener for event "+error.name+" with namespace "+error.namespace+((error.componentSource?" which was defined in grade "+error.componentSource:"")+" needs to be overridden with a concrete implementation")]})).join("\n")}if(that.lifecycleStatus==="constructing"){that.lifecycleStatus="constructed"}that.events.onCreate.fire(that);fluid.popActivity();return that};fluid.initSubcomponentImpl=function(that,entry,args){var togo;if(typeof entry!=="function"){var entryType=typeof entry==="string"?entry:entry.type;togo=entryType==="fluid.emptySubcomponent"?null:fluid.invokeGlobalFunction(entryType,args)}else{togo=entry.apply(null,args)}return togo};var charStart="(?:[\\w\\u00c0-\\uFFFF*_-";fluid.simpleCSSMatcher={regexp:new RegExp("([#.]?)("+charStart+"]|\\\\.)+)","g"),charToTag:{"":"tag","#":"id",".":"clazz"}};fluid.IoCSSMatcher={regexp:new RegExp("([&#]?)("+charStart+"]|\\.|\\/)+)","g"),charToTag:{"":"context","&":"context","#":"id"}};var childSeg=new RegExp("\\s*(>)?\\s*","g");fluid.parseSelector=function(selstring,strategy){var togo=[];selstring=selstring.trim();var regexp=strategy.regexp;regexp.lastIndex=0;var lastIndex=0;while(true){var atNode=[];var first=true;while(true){var segMatch=regexp.exec(selstring);if(!segMatch){break}if(segMatch.index!==lastIndex){if(first){fluid.fail("Error in selector string - cannot match child selector expression starting at "+selstring.substring(lastIndex))}else{break}}var thisNode={};var text=segMatch[2];var targetTag=strategy.charToTag[segMatch[1]];if(targetTag){thisNode[targetTag]=text}atNode[atNode.length]=thisNode;lastIndex=regexp.lastIndex;first=false}childSeg.lastIndex=lastIndex;var fullAtNode={predList:atNode};var childMatch=childSeg.exec(selstring);if(!childMatch||childMatch.index!==lastIndex){fluid.fail("Error in selector string - can not match child selector expression at "+selstring.substring(lastIndex))}if(childMatch[1]===">"){fullAtNode.child=true}togo[togo.length]=fullAtNode;if(childSeg.lastIndex>=selstring.length){break}lastIndex=childSeg.lastIndex;regexp.lastIndex=childSeg.lastIndex}return togo};fluid.stringToRegExp=function(str,flags){return new RegExp(str.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"),flags)};fluid.stringTemplate=function(template,values){var keys=fluid.keys(values);keys=keys.sort(fluid.compareStringLength());for(var i=0;i<keys.length;++i){var key=keys[i];var re=fluid.stringToRegExp("%"+key,"g");template=template.replace(re,values[key])}return template}})(jQuery,fluid_2_0_0);var fluid_2_0_0=fluid_2_0_0||{};(function($,fluid){"use strict";fluid.promise=function(){var that={onResolve:[],onReject:[]};that.then=function(onResolve,onReject){if(onResolve){if(that.disposition==="resolve"){onResolve(that.value)}else{that.onResolve.push(onResolve)}}if(onReject){if(that.disposition==="reject"){onReject(that.value)}else{that.onReject.push(onReject)}}return that};that.resolve=function(value){if(that.disposition){fluid.fail("Error: resolving promise ",that,' which has already received "'+that.disposition+'"')}else{that.complete("resolve",that.onResolve,value)}return that};that.reject=function(reason){if(that.disposition){fluid.fail("Error: rejecting promise ",that,'which has already received "'+that.disposition+'"')}else{that.complete("reject",that.onReject,reason)}return that};that.complete=function(which,queue,arg){that.disposition=which;that.value=arg;for(var i=0;i<queue.length;++i){queue[i](arg)}};return that};fluid.isPromise=function(totest){return totest&&typeof totest.then==="function"};fluid.toPromise=function(promiseOrValue){if(fluid.isPromise(promiseOrValue)){return promiseOrValue}else{var togo=fluid.promise();togo.resolve(promiseOrValue);return togo}};fluid.promise.follow=function(source,target){source.then(target.resolve,target.reject)};fluid.promise.map=function(source,func){var promise=fluid.toPromise(source);var togo=fluid.promise();promise.then(function(value){var mapped=func(value);if(fluid.isPromise(mapped)){fluid.promise.follow(mapped,togo)}else{togo.resolve(mapped)}},function(error){togo.reject(error)});return togo};fluid.promise.makeSequencer=function(sources,options,strategy){if(!fluid.isArrayable(sources)){fluid.fail("fluid.promise sequence algorithms must be supplied an array as source")}return{sources:sources,resolvedSources:[],index:0,strategy:strategy,options:options,returns:[],promise:fluid.promise()}};fluid.promise.progressSequence=function(that,retValue){that.returns.push(retValue);that.index++;fluid.promise.resumeSequence(that)};fluid.promise.processSequenceReject=function(that,error){for(var i=that.index-1;i>=0;--i){var resolved=that.resolvedSources[i];var accumulator=fluid.isPromise(resolved)&&typeof resolved.accumulateRejectionReason==="function"?resolved.accumulateRejectionReason:fluid.identity;error=accumulator(error)}that.promise.reject(error)};fluid.promise.resumeSequence=function(that){if(that.index===that.sources.length){that.promise.resolve(that.strategy.resolveResult(that))}else{var value=that.strategy.invokeNext(that);that.resolvedSources[that.index]=value;if(fluid.isPromise(value)){value.then(function(retValue){fluid.promise.progressSequence(that,retValue)},function(error){fluid.promise.processSequenceReject(that,error)})}else{fluid.promise.progressSequence(that,value)}}};fluid.promise.makeSequenceStrategy=function(){return{invokeNext:function(that){var source=that.sources[that.index];return typeof source==="function"?source(that.options):source},resolveResult:function(that){return that.returns}}};fluid.promise.sequence=function(sources,options){var sequencer=fluid.promise.makeSequencer(sources,options,fluid.promise.makeSequenceStrategy());fluid.promise.resumeSequence(sequencer);return sequencer.promise};fluid.promise.makeTransformerStrategy=function(){return{invokeNext:function(that){var lisrec=that.sources[that.index];lisrec.listener=fluid.event.resolveListener(lisrec.listener);var value=lisrec.listener(that.returns[that.index],that.options);return value},resolveResult:function(that){return that.returns[that.index]}}};fluid.promise.makeTransformer=function(listeners,payload,options){listeners.unshift({listener:function(){return payload}});var sequencer=fluid.promise.makeSequencer(listeners,options,fluid.promise.makeTransformerStrategy());sequencer.returns.push(null);fluid.promise.resumeSequence(sequencer);return sequencer};fluid.promise.filterNamespaces=function(listeners,namespaces){if(!namespaces){return listeners}return fluid.remove_if(fluid.makeArray(listeners),function(element){return element.namespace&&!element.softNamespace&&!fluid.contains(namespaces,element.namespace)})};fluid.promise.fireTransformEvent=function(event,payload,options){options=options||{};var listeners=options.reverse?fluid.makeArray(event.sortedListeners).reverse():fluid.makeArray(event.sortedListeners);listeners=fluid.promise.filterNamespaces(listeners,options.filterNamespaces);var transformer=fluid.promise.makeTransformer(listeners,payload,options);return transformer.promise}})(jQuery,fluid_2_0_0);var fluid_2_0_0=fluid_2_0_0||{};(function($,fluid){"use strict";fluid.uaMatch=function(ua){ua=ua.toLowerCase();var match=/(chrome)[ \/]([\w.]+)/.exec(ua)||/(webkit)[ \/]([\w.]+)/.exec(ua)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua)||/(msie) ([\w.]+)/.exec(ua)||ua.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua)||[];return{browser:match[1]||"",version:match[2]||"0"}};var matched,browser;if(!$.browser){if(!!navigator.userAgent.match(/Trident\/7\./)){browser={msie:true,version:11}}else{matched=fluid.uaMatch(navigator.userAgent);browser={};if(matched.browser){browser[matched.browser]=true;browser.version=matched.version}if(browser.chrome){browser.webkit=true}else if(browser.webkit){browser.safari=true}}$.browser=browser}var NAMESPACE_KEY="fluid-scoped-data";fluid.getScopedData=function(target,key){var data=$(target).data(NAMESPACE_KEY);return data?data[key]:undefined};fluid.setScopedData=function(target,key,value){$(target).each(function(){var data=$.data(this,NAMESPACE_KEY)||{};data[key]=value;$.data(this,NAMESPACE_KEY,data)})};var lastFocusedElement=null;$(document).on("focusin",function(event){lastFocusedElement=event.target});fluid.getLastFocusedElement=function(){return lastFocusedElement};var ENABLEMENT_KEY="enablement";fluid.enabled=function(target,state){target=$(target);if(state===undefined){return fluid.getScopedData(target,ENABLEMENT_KEY)!==false}else{$("*",target).add(target).each(function(){if(fluid.getScopedData(this,ENABLEMENT_KEY)!==undefined){fluid.setScopedData(this,ENABLEMENT_KEY,state)}else if(/select|textarea|input/i.test(this.nodeName)){$(this).prop("disabled",!state)}});fluid.setScopedData(target,ENABLEMENT_KEY,state)}};fluid.initEnablement=function(target){fluid.setScopedData(target,ENABLEMENT_KEY,true)};fluid.resolveEventTarget=function(event){while(event.originalEvent&&event.originalEvent.target){event=event.originalEvent}return event.target};function applyOp(node,func){node=$(node);node.trigger("fluid-"+func);node.triggerHandler(func);node[func]();return node}$.each(["focus","blur"],function(i,name){fluid[name]=function(elem){return applyOp(elem,name)}});fluid.changeElementValue=function(node,value){node=$(node);node.val(value).change()}})(jQuery,fluid_2_0_0);var fluid_2_0_0=fluid_2_0_0||{};(function($,fluid){"use strict";fluid.dom=fluid.dom||{};var getNextNode=function(iterator){if(iterator.node.firstChild){iterator.node=iterator.node.firstChild;iterator.depth+=1;return iterator}while(iterator.node){if(iterator.node.nextSibling){iterator.node=iterator.node.nextSibling;return iterator}iterator.node=iterator.node.parentNode;iterator.depth-=1}return iterator};fluid.dom.iterateDom=function(node,acceptor,allNodes){var currentNode={node:node,depth:0};var prevNode=node;var condition;while(currentNode.node!==null&&currentNode.depth>=0&&currentNode.depth<fluid.dom.iterateDom.DOM_BAIL_DEPTH){condition=null;if(currentNode.node.nodeType===1||allNodes){condition=acceptor(currentNode.node,currentNode.depth)}if(condition){if(condition==="delete"){currentNode.node.parentNode.removeChild(currentNode.node);currentNode.node=prevNode}else if(condition==="stop"){return currentNode.node}}prevNode=currentNode.node;currentNode=getNextNode(currentNode)}};fluid.dom.iterateDom.DOM_BAIL_DEPTH=256;fluid.dom.isContainer=function(container,containee){for(;containee;containee=containee.parentNode){if(container===containee){return true}}return false};fluid.dom.getElementText=function(element){var nodes=element.childNodes;var text="";for(var i=0;i<nodes.length;++i){var child=nodes[i];if(child.nodeType===3){text=text+child.nodeValue}}return text}})(jQuery,fluid_2_0_0);fluid_2_0_0=fluid_2_0_0||{};(function($,fluid){"use strict";var unUnicode=/(\\u[\dabcdef]{4}|\\x[\dabcdef]{2})/g;fluid.unescapeProperties=function(string){string=string.replace(unUnicode,function(match){var code=match.substring(2);var parsed=parseInt(code,16);return String.fromCharCode(parsed)});var pos=0;while(true){var backpos=string.indexOf("\\",pos);if(backpos===-1){break}if(backpos===string.length-1){return[string.substring(0,string.length-1),true]}var replace=string.charAt(backpos+1);if(replace==="n"){replace="\n"}if(replace==="r"){replace="\r"}if(replace==="t"){replace="\t"}string=string.substring(0,backpos)+replace+string.substring(backpos+2);pos=backpos+1}return[string,false]};var breakPos=/[^\\][\s:=]/;fluid.parseJavaProperties=function(text){var togo={};text=text.replace(/\r\n/g,"\n");text=text.replace(/\r/g,"\n");var lines=text.split("\n");var contin,key,valueComp,valueRaw,valueEsc;for(var i=0;i<lines.length;++i){var line=$.trim(lines[i]);if(!line||line.charAt(0)==="#"||line.charAt(0)==="!"){continue}if(!contin){valueComp="";var breakpos=line.search(breakPos);if(breakpos===-1){key=line;valueRaw=""}else{key=$.trim(line.substring(0,breakpos+1));valueRaw=$.trim(line.substring(breakpos+2));if(valueRaw.charAt(0)===":"||valueRaw.charAt(0)==="="){valueRaw=$.trim(valueRaw.substring(1))}}key=fluid.unescapeProperties(key)[0];valueEsc=fluid.unescapeProperties(valueRaw)}else{valueEsc=fluid.unescapeProperties(line)}contin=valueEsc[1];if(!valueEsc[1]){togo[key]=valueComp+valueEsc[0]}else{valueComp+=valueEsc[0]}}return togo};fluid.formatMessage=function(messageString,args){if(!args){return messageString}if(typeof args==="string"){args=[args]}for(var i=0;i<args.length;++i){messageString=messageString.replace("{"+i+"}",args[i])}return messageString}})(jQuery,fluid_2_0_0);var fluid_2_0_0=fluid_2_0_0||{};var fluid=fluid||fluid_2_0_0;(function($,fluid){"use strict";fluid.renderTimestamp=function(date){var zeropad=function(num,width){if(!width){width=2}var numstr=num===undefined?"":num.toString();return"00000".substring(5-width+numstr.length)+numstr};return zeropad(date.getHours())+":"+zeropad(date.getMinutes())+":"+zeropad(date.getSeconds())+"."+zeropad(date.getMilliseconds(),3)};fluid.isTracing=false;fluid.registerNamespace("fluid.tracing");fluid.tracing.pathCount=[];fluid.tracing.summarisePathCount=function(pathCount){pathCount=pathCount||fluid.tracing.pathCount;var togo={};for(var i=0;i<pathCount.length;++i){var path=pathCount[i];if(!togo[path]){togo[path]=1}else{++togo[path]}}var toReallyGo=[];fluid.each(togo,function(el,path){toReallyGo.push({path:path,count:el})});toReallyGo.sort(function(a,b){return b.count-a.count});return toReallyGo};fluid.tracing.condensePathCount=function(prefixes,pathCount){prefixes=fluid.makeArray(prefixes);var prefixCount={};fluid.each(prefixes,function(prefix){prefixCount[prefix]=0});var togo=[];fluid.each(pathCount,function(el){var path=el.path;
if(!fluid.find(prefixes,function(prefix){if(path.indexOf(prefix)===0){prefixCount[prefix]+=el.count;return true}})){togo.push(el)}});fluid.each(prefixCount,function(count,path){togo.unshift({path:path,count:count})});return togo};fluid.detectStackStyle=function(e){var style="other";var stackStyle={offset:0};if(e.arguments){style="chrome"}else if(typeof window!=="undefined"&&window.opera&&e.stacktrace){style="opera10"}else if(e.stack){style="firefox";stackStyle.offset=e.stack.indexOf("Trace exception")===-1?1:0}else if(typeof window!=="undefined"&&window.opera&&!("stacktrace"in e)){style="opera"}stackStyle.style=style;return stackStyle};fluid.obtainException=function(){try{throw new Error("Trace exception")}catch(e){return e}};var stackStyle=fluid.detectStackStyle(fluid.obtainException());fluid.registerNamespace("fluid.exceptionDecoders");fluid.decodeStack=function(){if(stackStyle.style!=="firefox"){return null}var e=fluid.obtainException();return fluid.exceptionDecoders[stackStyle.style](e)};fluid.exceptionDecoders.firefox=function(e){var delimiter="at ";var lines=e.stack.replace(/(?:\n@:0)?\s+$/m,"").replace(/^\(/gm,"{anonymous}(").split("\n");return fluid.transform(lines,function(line){line=line.replace(/\)/g,"");var atind=line.indexOf(delimiter);return atind===-1?[line]:[line.substring(atind+delimiter.length),line.substring(0,atind)]})};fluid.getCallerInfo=function(atDepth){atDepth=(atDepth||3)-stackStyle.offset;var stack=fluid.decodeStack();var element=stack&&stack[atDepth][0];if(element){var lastslash=element.lastIndexOf("/");if(lastslash===-1){lastslash=0}var nextColon=element.indexOf(":",lastslash);return{path:element.substring(0,lastslash),filename:element.substring(lastslash+1,nextColon),index:element.substring(nextColon+1)}}else{return null}};fluid.generatePadding=function(c,count){var togo="";for(var i=0;i<count;++i){togo+=c}return togo};fluid.SYNTHETIC_PROPERTY={};fluid.getSafeProperty=function(obj,key){var desc=Object.getOwnPropertyDescriptor(obj,key);return desc&&!desc.get?obj[key]:fluid.SYNTHETIC_PROPERTY};function printImpl(obj,small,options){function out(str){options.output+=str}var big=small+options.indentChars,isFunction=typeof obj==="function";if(options.maxRenderChars!==undefined&&options.output.length>options.maxRenderChars){return true}if(obj===null){out("null")}else if(obj===undefined){out("undefined")}else if(obj===fluid.SYNTHETIC_PROPERTY){out("[Synthetic property]")}else if(fluid.isPrimitive(obj)&&!isFunction){out(JSON.stringify(obj))}else{if(options.stack.indexOf(obj)!==-1){out("(CIRCULAR)");return}options.stack.push(obj);var i;if(fluid.isArrayable(obj)){if(obj.length===0){out("[]")}else{out("[\n"+big);for(i=0;i<obj.length;++i){if(printImpl(obj[i],big,options)){return true}if(i!==obj.length-1){out(",\n"+big)}}out("\n"+small+"]")}}else{out("{"+(isFunction?" Function":"")+"\n"+big);var keys=fluid.keys(obj);for(i=0;i<keys.length;++i){var key=keys[i];var value=fluid.getSafeProperty(obj,key);out(JSON.stringify(key)+": ");if(printImpl(value,big,options)){return true}if(i!==keys.length-1){out(",\n"+big)}}out("\n"+small+"}")}options.stack.pop()}return}fluid.prettyPrintJSON=function(obj,options){options=$.extend({indent:4,stack:[],output:""},options);options.indentChars=fluid.generatePadding(" ",options.indent);printImpl(obj,"",options);return options.output};fluid.dumpEl=function(element){var togo;if(!element){return"null"}if(element.nodeType===3||element.nodeType===8){return"[data: "+element.data+"]"}if(element.nodeType===9){return"[document: location "+element.location+"]"}if(!element.nodeType&&fluid.isArrayable(element)){togo="[";for(var i=0;i<element.length;++i){togo+=fluid.dumpEl(element[i]);if(i<element.length-1){togo+=", "}}return togo+"]"}element=$(element);togo=element.get(0).tagName;if(element.id){togo+="#"+element.id}if(element.attr("class")){togo+="."+element.attr("class")}return togo}})(jQuery,fluid_2_0_0);var fluid_2_0_0=fluid_2_0_0||{};(function($,fluid){"use strict";fluid.visitComponentChildren=function(that,visitor,options,segs){segs=segs||[];for(var name in that){var component=that[name];if(!fluid.isComponent(component)||options.visited&&options.visited[component.id]){continue}segs.push(name);if(options.visited){options.visited[component.id]=true}if(visitor(component,name,segs,segs.length-1)){return true}if(!options.flat){fluid.visitComponentChildren(component,visitor,options,segs)}segs.pop()}};fluid.getContextHash=function(instantiator,that){var shadow=instantiator.idToShadow[that.id];return shadow&&shadow.contextHash};fluid.componentHasGrade=function(that,gradeName){var contextHash=fluid.getContextHash(fluid.globalInstantiator,that);return!!(contextHash&&contextHash[gradeName])};fluid.visitComponentsForMatching=function(that,options,visitor){var instantiator=fluid.getInstantiator(that);options=$.extend({visited:{},instantiator:instantiator},options);var thatStack=[that];var contextHashes=[fluid.getContextHash(instantiator,that)];var visitorWrapper=function(component,name,segs){thatStack.length=1;contextHashes.length=1;for(var i=0;i<segs.length;++i){var child=thatStack[i][segs[i]];thatStack[i+1]=child;contextHashes[i+1]=fluid.getContextHash(instantiator,child)||{}}return visitor(component,thatStack,contextHashes,segs,segs.length)};fluid.visitComponentChildren(that,visitorWrapper,options,[])};fluid.getMemberNames=function(instantiator,thatStack){var path=instantiator.idToPath(thatStack[thatStack.length-1].id);var segs=instantiator.parseEL(path);segs.unshift.apply(segs,fluid.generate(thatStack.length-segs.length,""));return segs};fluid.visitComponentsForVisibility=function(instantiator,thatStack,visitor,options){options=options||{visited:{},flat:true,instantiator:instantiator};var memberNames=fluid.getMemberNames(instantiator,thatStack);for(var i=thatStack.length-1;i>=0;--i){var that=thatStack[i];options.visited[that.id]=true;if(visitor(that,memberNames[i],memberNames,i)){return}if(fluid.visitComponentChildren(that,visitor,options,memberNames)){return}memberNames.pop()}};fluid.mountStrategy=function(prefix,root,toMount){var offset=prefix.length;return function(target,name,i,segs){if(i<=prefix.length){return}for(var j=0;j<prefix.length;++j){if(segs[j]!==prefix[j]){return}}return toMount(target,name,i-prefix.length,segs.slice(offset))}};fluid.invokerFromRecord=function(invokerec,name,that){fluid.pushActivity("makeInvoker","beginning instantiation of invoker with name %name and record %record as child of %that",{name:name,record:invokerec,that:that});var invoker=invokerec?fluid.makeInvoker(that,invokerec,name):undefined;fluid.popActivity();return invoker};fluid.memberFromRecord=function(memberrecs,name,that){var togo;for(var i=0;i<memberrecs.length;++i){var expanded=fluid.expandImmediate(memberrecs[i],that);if(!fluid.isPlainObject(togo)){togo=expanded}else{togo=$.extend(true,togo,expanded)}}return togo};fluid.recordStrategy=function(that,options,optionsStrategy,recordPath,recordMaker,prefix,exceptions){prefix=prefix||[];return{strategy:function(target,name,i){if(i!==1){return}var record=fluid.driveStrategy(options,[recordPath,name],optionsStrategy);if(record===undefined){return}fluid.set(target,[name],fluid.inEvaluationMarker);var member=recordMaker(record,name,that);fluid.set(target,[name],member);return member},initter:function(){var records=fluid.driveStrategy(options,recordPath,optionsStrategy)||{};for(var name in records){if(!exceptions||!exceptions[name]){fluid.getForComponent(that,prefix.concat([name]))}}}}};fluid.instantiateFirers=function(that){var shadow=fluid.shadowForComponent(that);var initter=fluid.get(shadow,["eventStrategyBlock","initter"])||fluid.identity;initter()};fluid.makeDistributionRecord=function(contextThat,sourceRecord,sourcePath,targetSegs,exclusions,sourceType){sourceType=sourceType||"distribution";fluid.pushActivity("makeDistributionRecord","Making distribution record from source record %sourceRecord path %sourcePath to target path %targetSegs",{sourceRecord:sourceRecord,sourcePath:sourcePath,targetSegs:targetSegs});var source=fluid.copy(fluid.get(sourceRecord,sourcePath));fluid.each(exclusions,function(exclusion){fluid.model.applyChangeRequest(source,{segs:exclusion,type:"DELETE"})});var record={options:{}};fluid.model.applyChangeRequest(record,{segs:targetSegs,type:"ADD",value:source});fluid.checkComponentRecord(record);fluid.popActivity();return $.extend(record,{contextThat:contextThat,recordType:sourceType})};fluid.filterBlocks=function(contextThat,sourceBlocks,sourceSegs,targetSegs,exclusions,removeSource){var togo=[];fluid.each(sourceBlocks,function(block){var source=fluid.get(block.source,sourceSegs);if(source){togo.push(fluid.makeDistributionRecord(contextThat,block.source,sourceSegs,targetSegs,exclusions,block.recordType));var rescued=$.extend({},source);if(removeSource){fluid.model.applyChangeRequest(block.source,{segs:sourceSegs,type:"DELETE"})}fluid.each(exclusions,function(exclusion){var orig=fluid.get(rescued,exclusion);fluid.set(block.source,sourceSegs.concat(exclusion),orig)})}});return togo};fluid.noteCollectedDistribution=function(parentShadow,memberName,distribution){fluid.model.setSimple(parentShadow,["collectedDistributions",memberName,distribution.id],true)};fluid.isCollectedDistribution=function(parentShadow,memberName,distribution){return fluid.model.getSimple(parentShadow,["collectedDistributions",memberName,distribution.id])};fluid.clearCollectedDistributions=function(parentShadow,memberName){fluid.model.applyChangeRequest(parentShadow,{segs:["collectedDistributions",memberName],type:"DELETE"})};fluid.collectDistributions=function(distributedBlocks,parentShadow,distribution,thatStack,contextHashes,memberNames,i){var lastMember=memberNames[memberNames.length-1];if(!fluid.isCollectedDistribution(parentShadow,lastMember,distribution)&&fluid.matchIoCSelector(distribution.selector,thatStack,contextHashes,memberNames,i)){distributedBlocks.push.apply(distributedBlocks,distribution.blocks);fluid.noteCollectedDistribution(parentShadow,lastMember,distribution)}};fluid.registerCollectedClearer=function(shadow,parentShadow,memberName){if(!shadow.collectedClearer&&parentShadow){shadow.collectedClearer=function(){fluid.clearCollectedDistributions(parentShadow,memberName)}}};fluid.receiveDistributions=function(parentThat,gradeNames,memberName,that){var instantiator=fluid.getInstantiator(parentThat||that);var thatStack=instantiator.getThatStack(parentThat||that);thatStack.unshift(fluid.rootComponent);var memberNames=fluid.getMemberNames(instantiator,thatStack);var shadows=fluid.transform(thatStack,function(thisThat){return instantiator.idToShadow[thisThat.id]});var parentShadow=shadows[shadows.length-(parentThat?1:2)];var contextHashes=fluid.getMembers(shadows,"contextHash");if(parentThat){memberNames.push(memberName);contextHashes.push(fluid.gradeNamesToHash(gradeNames));thatStack.push(that)}else{fluid.registerCollectedClearer(shadows[shadows.length-1],parentShadow,memberNames[memberNames.length-1])}var distributedBlocks=[];for(var i=0;i<thatStack.length-1;++i){fluid.each(shadows[i].distributions,function(distribution){fluid.collectDistributions(distributedBlocks,parentShadow,distribution,thatStack,contextHashes,memberNames,i)})}return distributedBlocks};fluid.computeTreeDistance=function(path1,path2){var i=0;while(i<path1.length&&i<path2.length&&path1[i]===path2[i]){++i}return path1.length+path2.length-2*i};fluid.computeDistributionPriority=function(targetThat,distributedBlock){if(!distributedBlock.priority){var instantiator=fluid.getInstantiator(targetThat);var targetStack=instantiator.getThatStack(targetThat);var targetPath=fluid.getMemberNames(instantiator,targetStack);var sourceStack=instantiator.getThatStack(distributedBlock.contextThat);var sourcePath=fluid.getMemberNames(instantiator,sourceStack);var distance=fluid.computeTreeDistance(targetPath,sourcePath);distributedBlock.priority=fluid.mergeRecordTypes.distribution-distance}return distributedBlock};fluid.applyDistributions=function(that,preBlocks,targetShadow){var distributedBlocks=fluid.transform(preBlocks,function(preBlock){return fluid.generateExpandBlock(preBlock,that,targetShadow.mergePolicy)},function(distributedBlock){return fluid.computeDistributionPriority(that,distributedBlock)});var mergeOptions=targetShadow.mergeOptions;mergeOptions.mergeBlocks.push.apply(mergeOptions.mergeBlocks,distributedBlocks);mergeOptions.updateBlocks();return distributedBlocks};fluid.matchIoCSelector=function(selector,thatStack,contextHashes,memberNames,i){var thatpos=thatStack.length-1;var selpos=selector.length-1;while(true){var mustMatchHere=thatpos===thatStack.length-1||selector[selpos].child;var that=thatStack[thatpos];var selel=selector[selpos];var match=true;for(var j=0;j<selel.predList.length;++j){var pred=selel.predList[j];if(pred.context&&!(contextHashes[thatpos][pred.context]||memberNames[thatpos]===pred.context)){match=false;break}if(pred.id&&that.id!==pred.id){match=false;break}}if(selpos===0&&thatpos>i&&mustMatchHere){match=false}if(match){if(selpos===0){return true}--thatpos;--selpos}else{if(mustMatchHere){return false}else{--thatpos}}if(thatpos<i){return false}}};fluid.queryIoCSelector=function(root,selector,flat){var parsed=fluid.parseSelector(selector,fluid.IoCSSMatcher);var togo=[];fluid.visitComponentsForMatching(root,{flat:flat},function(that,thatStack,contextHashes,memberNames,i){if(fluid.matchIoCSelector(parsed,thatStack,contextHashes,memberNames,i)){togo.push(that)}});return togo};fluid.isIoCSSSelector=function(context){return context.indexOf(" ")!==-1};fluid.pushDistributions=function(targetHead,selector,target,blocks){var targetShadow=fluid.shadowForComponent(targetHead);var id=fluid.allocateGuid();var distribution={id:id,target:target,selector:selector,blocks:blocks};Object.freeze(distribution);Object.freeze(distribution.blocks);fluid.pushArray(targetShadow,"distributions",distribution);return id};fluid.clearDistribution=function(targetHead,id){var targetShadow=fluid.shadowForComponent(targetHead);fluid.remove_if(targetShadow.distributions,function(distribution){return distribution.id===id})};fluid.clearDistributions=function(shadow){fluid.each(shadow.outDistributions,function(outDist){fluid.clearDistribution(outDist.targetComponent,outDist.distributionId)})};fluid.extractSelectorHead=function(parsedSelector){var predList=parsedSelector[0].predList;var context=predList[0].context;predList.length=0;return context};fluid.parseExpectedOptionsPath=function(path,role){var segs=fluid.model.parseEL(path);if(segs[0]!=="options"){fluid.fail("Error in options distribution path ",path," - only "+role+' paths beginning with "options" are supported')}return segs.slice(1)};fluid.replicateProperty=function(source,property,targets){if(source[property]!==undefined){fluid.each(targets,function(target){target[property]=source[property]})}};fluid.undistributableOptions=["gradeNames","distributeOptions","argumentMap","initFunction","mergePolicy","progressiveCheckerOptions"];fluid.distributeOptions=function(that,optionsStrategy){var thatShadow=fluid.shadowForComponent(that);var records=fluid.driveStrategy(that.options,"distributeOptions",optionsStrategy);fluid.each(records,function distributeOptionsOne(record){fluid.pushActivity("distributeOptions","parsing distributeOptions block %record %that ",{that:that,record:record});if(typeof record.target!=="string"){fluid.fail("Error in options distribution record ",record,' a member named "target" must be supplied holding an IoC reference')}if(typeof record.source==="string"^record.record===undefined){fluid.fail("Error in options distribution record ",record,': must supply either a member "source" holding an IoC reference or a member "record" holding a literal record')}var targetRef=fluid.parseContextReference(record.target);var targetComp,selector,context;if(fluid.isIoCSSSelector(targetRef.context)){selector=fluid.parseSelector(targetRef.context,fluid.IoCSSMatcher);var headContext=fluid.extractSelectorHead(selector);if(headContext==="/"){targetComp=fluid.rootComponent}else{context=headContext}}else{context=targetRef.context}targetComp=targetComp||fluid.resolveContext(context,that);if(!targetComp){fluid.fail("Error in options distribution record ",record," - could not resolve context {"+context+"} to a root component")}var targetSegs=fluid.model.parseEL(targetRef.path);var preBlocks;if(record.record!==undefined){preBlocks=[fluid.makeDistributionRecord(that,record.record,[],targetSegs,[])]}else{var source=fluid.parseContextReference(record.source);if(source.context!=="that"){fluid.fail("Error in options distribution record ",record," only a context of {that} is supported")}var sourceSegs=fluid.parseExpectedOptionsPath(source.path,"source");var fullExclusions=fluid.makeArray(record.exclusions).concat(sourceSegs.length===0?fluid.undistributableOptions:[]);var exclusions=fluid.transform(fullExclusions,function(exclusion){return fluid.model.parseEL(exclusion)});preBlocks=fluid.filterBlocks(that,thatShadow.mergeOptions.mergeBlocks,sourceSegs,targetSegs,exclusions,record.removeSource);thatShadow.mergeOptions.updateBlocks()}fluid.replicateProperty(record,"priority",preBlocks);fluid.replicateProperty(record,"namespace",preBlocks);if(selector){var distributionId=fluid.pushDistributions(targetComp,selector,record.target,preBlocks);thatShadow.outDistributions=thatShadow.outDistributions||[];thatShadow.outDistributions.push({targetComponent:targetComp,distributionId:distributionId})}else{var targetShadow=fluid.shadowForComponent(targetComp);fluid.applyDistributions(that,preBlocks,targetShadow)}fluid.popActivity()})};fluid.gradeNamesToHash=function(gradeNames){var contextHash={};fluid.each(gradeNames,function(gradeName){contextHash[gradeName]=true;contextHash[fluid.computeNickName(gradeName)]=true});return contextHash};fluid.cacheShadowGrades=function(that,shadow){var contextHash=fluid.gradeNamesToHash(that.options.gradeNames);if(!contextHash[shadow.memberName]){contextHash[shadow.memberName]="memberName"}shadow.contextHash=contextHash;fluid.each(contextHash,function(troo,context){shadow.ownScope[context]=that;if(shadow.parentShadow&&shadow.parentShadow.that.type!=="fluid.rootComponent"){shadow.parentShadow.childrenScope[context]=that}})};fluid.deliverOptionsStrategy=function(that,target,mergeOptions){var shadow=fluid.shadowForComponent(that,shadow);fluid.cacheShadowGrades(that,shadow);shadow.mergeOptions=mergeOptions};fluid.collectDistributedGrades=function(rec){var distributedBlocks=fluid.receiveDistributions(null,null,null,rec.that);if(distributedBlocks.length>0){var readyBlocks=fluid.applyDistributions(rec.that,distributedBlocks,rec.shadow);var gradeNamesList=fluid.transform(fluid.getMembers(readyBlocks,["source","gradeNames"]),fluid.makeArray);fluid.accumulateDynamicGrades(rec,fluid.flatten(gradeNamesList))}};fluid.applyDynamicGrades=function(rec){rec.oldGradeNames=fluid.makeArray(rec.gradeNames);var newDefaults=fluid.copy(fluid.getMergedDefaults(rec.that.typeName,rec.gradeNames));rec.gradeNames.length=0;rec.gradeNames.push.apply(rec.gradeNames,newDefaults.gradeNames);fluid.each(rec.gradeNames,function(gradeName){if(!fluid.isIoCReference(gradeName)){rec.seenGrades[gradeName]=true}});var shadow=rec.shadow;fluid.cacheShadowGrades(rec.that,shadow);shadow.mergeOptions.destroyValue(["mergePolicy"]);shadow.mergeOptions.destroyValue(["components"]);shadow.mergeOptions.destroyValue(["invokers"]);rec.defaultsBlock.source=newDefaults;shadow.mergeOptions.updateBlocks();shadow.mergeOptions.computeMergePolicy();fluid.accumulateDynamicGrades(rec,newDefaults.gradeNames)};fluid.accumulateDynamicGrades=function(rec,newGradeNames){fluid.each(newGradeNames,function(gradeName){if(!rec.seenGrades[gradeName]){if(fluid.isIoCReference(gradeName)){rec.rawDynamic.push(gradeName);rec.seenGrades[gradeName]=true}else if(!fluid.contains(rec.oldGradeNames,gradeName)){rec.plainDynamic.push(gradeName)}}})};fluid.computeDynamicGrades=function(that,shadow,strategy){delete that.options.gradeNames;var gradeNames=fluid.driveStrategy(that.options,"gradeNames",strategy);gradeNames.length=0;var defaultsBlock=fluid.findMergeBlocks(shadow.mergeOptions.mergeBlocks,"defaults")[0];var rec={that:that,shadow:shadow,defaultsBlock:defaultsBlock,gradeNames:gradeNames,seenGrades:{},plainDynamic:[],rawDynamic:[]};fluid.each(shadow.mergeOptions.mergeBlocks,function(block){gradeNames.push.apply(gradeNames,fluid.makeArray(block.target&&block.target.gradeNames));fluid.applyDynamicGrades(rec)});fluid.collectDistributedGrades(rec);while(true){while(rec.plainDynamic.length>0){gradeNames.push.apply(gradeNames,rec.plainDynamic);rec.plainDynamic.length=0;fluid.applyDynamicGrades(rec);fluid.collectDistributedGrades(rec)}if(rec.rawDynamic.length>0){var expanded=fluid.expandImmediate(rec.rawDynamic.shift(),that,shadow.localDynamic);if(typeof expanded==="function"){expanded=expanded()}if(expanded){rec.plainDynamic=rec.plainDynamic.concat(expanded)}}else{break}}if(shadow.collectedClearer){shadow.collectedClearer();delete shadow.collectedClearer}};fluid.computeDynamicComponentKey=function(recordKey,sourceKey){return recordKey+(sourceKey===0?"":"-"+sourceKey)};fluid.registerDynamicRecord=function(that,recordKey,sourceKey,record,toCensor){var key=fluid.computeDynamicComponentKey(recordKey,sourceKey);var cRecord=fluid.copy(record);delete cRecord[toCensor];fluid.set(that.options,["components",key],cRecord);return key};fluid.computeDynamicComponents=function(that,mergeOptions){var shadow=fluid.shadowForComponent(that);var localSub=shadow.subcomponentLocal={};var records=fluid.driveStrategy(that.options,"dynamicComponents",mergeOptions.strategy);fluid.each(records,function(record,recordKey){if(!record.sources&&!record.createOnEvent){fluid.fail("Cannot process dynamicComponents record ",record,' without a "sources" or "createOnEvent" entry')}if(record.sources){var sources=fluid.expandOptions(record.sources,that);fluid.each(sources,function(source,sourceKey){var key=fluid.registerDynamicRecord(that,recordKey,sourceKey,record,"sources");localSub[key]={source:source,sourcePath:sourceKey}})}else if(record.createOnEvent){var event=fluid.event.expandOneEvent(that,record.createOnEvent);fluid.set(shadow,["dynamicComponentCount",recordKey],0);var listener=function(){var key=fluid.registerDynamicRecord(that,recordKey,shadow.dynamicComponentCount[recordKey]++,record,"createOnEvent");var localRecord={arguments:fluid.makeArray(arguments)};fluid.initDependent(that,key,localRecord)};event.addListener(listener);fluid.recordListener(event,listener,shadow)}})};fluid.computeComponentAccessor=function(that,localRecord){var instantiator=fluid.globalInstantiator;var shadow=fluid.shadowForComponent(that);shadow.localDynamic=localRecord;var options=that.options;var strategy=shadow.mergeOptions.strategy;var optionsStrategy=fluid.mountStrategy(["options"],options,strategy);shadow.invokerStrategy=fluid.recordStrategy(that,options,strategy,"invokers",fluid.invokerFromRecord);shadow.eventStrategyBlock=fluid.recordStrategy(that,options,strategy,"events",fluid.eventFromRecord,["events"]);var eventStrategy=fluid.mountStrategy(["events"],that,shadow.eventStrategyBlock.strategy,["events"]);shadow.memberStrategy=fluid.recordStrategy(that,options,strategy,"members",fluid.memberFromRecord,null,{model:true,modelRelay:true});shadow.getConfig={strategies:[fluid.model.funcResolverStrategy,fluid.makeGingerStrategy(that),optionsStrategy,shadow.invokerStrategy.strategy,shadow.memberStrategy.strategy,eventStrategy]};fluid.computeDynamicGrades(that,shadow,strategy,shadow.mergeOptions.mergeBlocks);fluid.distributeOptions(that,strategy);if(shadow.contextHash["fluid.resolveRoot"]){var memberName;if(shadow.contextHash["fluid.resolveRootSingle"]){var singleRootType=fluid.getForComponent(that,["options","singleRootType"]);if(!singleRootType){fluid.fail("Cannot register object with grades "+Object.keys(shadow.contextHash).join(", ")+" as fluid.resolveRootSingle since it has not defined option singleRootType")}memberName=fluid.typeNameToMemberName(singleRootType)}else{memberName=fluid.computeGlobalMemberName(that)}var parent=fluid.resolveRootComponent;if(parent[memberName]){instantiator.clearComponent(parent,memberName)}instantiator.recordKnownComponent(parent,that,memberName,false)}return shadow.getConfig};fluid.shadowForComponent=function(component){var instantiator=fluid.getInstantiator(component);return instantiator&&component?instantiator.idToShadow[component.id]:null};fluid.getForComponent=function(component,path){var shadow=fluid.shadowForComponent(component);var getConfig=shadow?shadow.getConfig:undefined;return fluid.get(component,path,getConfig)};fluid.makeGingerStrategy=function(that){var instantiator=fluid.getInstantiator(that);return function(component,thisSeg,index,segs){var atval=component[thisSeg];if(atval===fluid.inEvaluationMarker&&index===segs.length){fluid.fail('Error in component configuration - a circular reference was found during evaluation of path segment "'+thisSeg+'": for more details, see the activity records following this message in the console, or issue fluid.setLogging(fluid.logLevel.TRACE) when running your application')}if(index>1){return atval}if(atval===undefined&&component.hasOwnProperty(thisSeg)){return fluid.NO_VALUE}if(atval===undefined){var parentPath=instantiator.idToShadow[component.id].path;var childPath=instantiator.composePath(parentPath,thisSeg);atval=instantiator.pathToComponent[childPath]}if(atval===undefined){var subRecord=fluid.getForComponent(component,["options","components",thisSeg]);if(subRecord){if(subRecord.createOnEvent){fluid.fail('Error resolving path segment "'+thisSeg+'" of path '+segs.join(".")+" since component with record ",subRecord,' has annotation "createOnEvent" - this very likely represents an implementation error. Either alter the reference so it does not '+" match this component, or alter your workflow to ensure that the component is instantiated by the time this reference resolves")}fluid.initDependent(component,thisSeg);atval=component[thisSeg]}}return atval}};fluid.frameworkGrades=["fluid.component","fluid.modelComponent","fluid.viewComponent","fluid.rendererComponent"];fluid.filterBuiltinGrades=function(gradeNames){return fluid.remove_if(fluid.makeArray(gradeNames),function(gradeName){return fluid.frameworkGrades.indexOf(gradeName)!==-1})};fluid.dumpGradeNames=function(that){return that.options&&that.options.gradeNames?" gradeNames: "+JSON.stringify(fluid.filterBuiltinGrades(that.options.gradeNames)):""};fluid.dumpThat=function(that){return'{ typeName: "'+that.typeName+'"'+fluid.dumpGradeNames(that)+" id: "+that.id+"}"};fluid.dumpThatStack=function(thatStack,instantiator){var togo=fluid.transform(thatStack,function(that){var path=instantiator.idToPath(that.id);return fluid.dumpThat(that)+(path?" - path: "+path:"")});return togo.join("\n")};fluid.dumpComponentPath=function(that){var path=fluid.pathForComponent(that);return path?fluid.pathUtil.composeSegments(path):"** no path registered for component **"};fluid.resolveContext=function(context,that,fast){if(context==="that"){return that}if(typeof context==="object"){var innerContext=fluid.resolveContext(context.context,that,fast);if(!fluid.isComponent(innerContext)){fluid.triggerMismatchedPathError(context.context,that)}var rawValue=fluid.getForComponent(innerContext,context.path);var expanded=fluid.expandOptions(rawValue,that);if(!fluid.isComponent(expanded)){fluid.fail("Unable to resolve recursive context expression "+fluid.renderContextReference(context)+": the directly resolved value of "+rawValue+" did not resolve to a component in the scope of component ",that,": got ",expanded)}return expanded}else{var foundComponent;var instantiator=fluid.globalInstantiator;if(fast){var shadow=instantiator.idToShadow[that.id];return shadow.ownScope[context]}else{var thatStack=instantiator.getFullStack(that);fluid.visitComponentsForVisibility(instantiator,thatStack,function(component,name){var shadow=fluid.shadowForComponent(component);if(context===name||shadow&&shadow.contextHash&&shadow.contextHash[context]||context===component.typeName){foundComponent=component;return true}if(fluid.getForComponent(component,["options","components",context])&&!component[context]){foundComponent=fluid.getForComponent(component,context);return true}});return foundComponent}}};fluid.triggerMismatchedPathError=function(parsed,parentThat){var ref=fluid.renderContextReference(parsed);fluid.fail("Failed to resolve reference "+ref+" - could not match context with name "+parsed.context+" from component "+fluid.dumpThat(parentThat)+" at path "+fluid.dumpComponentPath(parentThat)+" component: ",parentThat)};fluid.makeStackFetcher=function(parentThat,localRecord,fast){var fetcher=function(parsed){if(parentThat&&parentThat.lifecycleStatus==="destroyed"){fluid.fail("Cannot resolve reference "+fluid.renderContextReference(parsed)+" from component "+fluid.dumpThat(parentThat)+" which has been destroyed")}var context=parsed.context;if(localRecord&&context in localRecord){return fluid.get(localRecord[context],parsed.path)}var foundComponent=fluid.resolveContext(context,parentThat,fast);if(!foundComponent&&parsed.path!==""){fluid.triggerMismatchedPathError(parsed,parentThat)}return fluid.getForComponent(foundComponent,parsed.path)};return fetcher};fluid.makeStackResolverOptions=function(parentThat,localRecord,fast){return $.extend(fluid.copy(fluid.rawDefaults("fluid.makeExpandOptions")),{localRecord:localRecord||{},fetcher:fluid.makeStackFetcher(parentThat,localRecord,fast),contextThat:parentThat,exceptions:{members:{model:true,modelRelay:true}}})};fluid.clearListeners=function(shadow){fluid.each(shadow.listeners,function(rec){rec.event.removeListener(rec.listenerId||rec.listener)});delete shadow.listeners};fluid.recordListener=function(event,listener,shadow,listenerId){if(event.ownerId!==shadow.that.id){fluid.pushArray(shadow,"listeners",{event:event,listener:listener,listenerId:listenerId})}};fluid.constructScopeObjects=function(instantiator,parent,child,childShadow){var parentShadow=parent?instantiator.idToShadow[parent.id]:null;childShadow.childrenScope=parentShadow?Object.create(parentShadow.ownScope):{};childShadow.ownScope=Object.create(childShadow.childrenScope);childShadow.parentShadow=parentShadow};fluid.clearChildrenScope=function(instantiator,parentShadow,child,childShadow){fluid.each(childShadow.contextHash,function(troo,context){if(parentShadow.childrenScope[context]===child){delete parentShadow.childrenScope[context]}})};fluid.instantiator=function(){var that=fluid.typeTag("instantiator");$.extend(that,{lifecycleStatus:"constructed",pathToComponent:{},idToShadow:{},modelTransactions:{init:{}},composePath:fluid.model.composePath,composeSegments:fluid.model.composeSegments,parseEL:fluid.model.parseEL,events:{onComponentAttach:fluid.makeEventFirer({name:"instantiator's onComponentAttach event"}),onComponentClear:fluid.makeEventFirer({name:"instantiator's onComponentClear event"})}});that.idToPath=function(id){var shadow=that.idToShadow[id];return shadow?shadow.path:""};that.getThatStack=function(component){var shadow=that.idToShadow[component.id];if(shadow){var path=shadow.path;var parsed=that.parseEL(path);var root=that.pathToComponent[""],togo=[];for(var i=0;i<parsed.length;++i){root=root[parsed[i]];togo.push(root)}return togo}else{return[]}};that.getFullStack=function(component){var thatStack=component?that.getThatStack(component):[];thatStack.unshift(fluid.resolveRootComponent);return thatStack};function recordComponent(parent,component,path,name,created){var shadow;if(created){shadow=that.idToShadow[component.id]={};shadow.that=component;shadow.path=path;shadow.memberName=name;fluid.constructScopeObjects(that,parent,component,shadow)}else{shadow=that.idToShadow[component.id];shadow.injectedPaths=shadow.injectedPaths||{};shadow.injectedPaths[path]=true;var parentShadow=that.idToShadow[parent.id];var keys=fluid.keys(shadow.contextHash);fluid.remove_if(keys,function(key){
return shadow.contextHash&&shadow.contextHash[key]==="memberName"});keys.push(name);fluid.each(keys,function(context){if(!parentShadow.childrenScope[context]){parentShadow.childrenScope[context]=component}})}if(that.pathToComponent[path]){fluid.fail("Error during instantiation - path "+path+" which has just created component "+fluid.dumpThat(component)+" has already been used for component "+fluid.dumpThat(that.pathToComponent[path])+" - this is a circular instantiation or other oversight."+" Please clear the component using instantiator.clearComponent() before reusing the path.")}that.pathToComponent[path]=component}that.recordRoot=function(component){recordComponent(null,component,"","",true)};that.recordKnownComponent=function(parent,component,name,created){parent[name]=component;if(fluid.isComponent(component)||component.type==="instantiator"){var parentPath=that.idToShadow[parent.id].path;var path=that.composePath(parentPath,name);recordComponent(parent,component,path,name,created);that.events.onComponentAttach.fire(component,path,that,created)}else{fluid.fail("Cannot record non-component with value ",component,' at path "'+name+'" of parent ',parent)}};that.clearConcreteComponent=function(record){fluid.each(record.childShadow.injectedPaths,function(troo,injectedPath){var parentPath=fluid.model.getToTailPath(injectedPath);var otherParent=that.pathToComponent[parentPath];that.clearComponent(otherParent,fluid.model.getTailPath(injectedPath),record.child)});fluid.clearDistributions(record.childShadow);fluid.clearListeners(record.childShadow);fluid.fireEvent(record.child,"afterDestroy",[record.child,record.name,record.component]);delete that.idToShadow[record.child.id]};that.clearComponent=function(component,name,child,options,nested,path){var shadow=that.idToShadow[component.id];options=options||{flat:true,instantiator:that,destroyRecs:[]};child=child||component[name];path=path||shadow.path;if(path===undefined){fluid.fail("Cannot clear component "+name+" from component ",component," which was not created by this instantiator")}var childPath=that.composePath(path,name);var childShadow=that.idToShadow[child.id];if(!childShadow){return}var created=childShadow.path===childPath;that.events.onComponentClear.fire(child,childPath,component,created);if(created){fluid.visitComponentChildren(child,function(gchild,gchildname,segs,i){var parentPath=that.composeSegments.apply(null,segs.slice(0,i));that.clearComponent(child,gchildname,null,options,true,parentPath)},options,that.parseEL(childPath));fluid.doDestroy(child,name,component);options.destroyRecs.push({child:child,childShadow:childShadow,name:name,component:component})}else{fluid.remove_if(childShadow.injectedPaths,function(troo,path){return path===childPath})}fluid.clearChildrenScope(that,shadow,child,childShadow);delete that.pathToComponent[childPath];if(!nested){delete component[name];fluid.each(options.destroyRecs,that.clearConcreteComponent)}};return that};fluid.globalInstantiator=fluid.instantiator();fluid.getInstantiator=function(component){var instantiator=fluid.globalInstantiator;return component&&instantiator.idToShadow[component.id]?instantiator:null};fluid.defaults("fluid.resolveRoot");fluid.defaults("fluid.resolveRootSingle",{gradeNames:"fluid.resolveRoot"});fluid.constructRootComponents=function(instantiator){fluid.rootComponent=instantiator.rootComponent=fluid.typeTag("fluid.rootComponent");instantiator.recordRoot(fluid.rootComponent);fluid.resolveRootComponent=instantiator.resolveRootComponent=fluid.typeTag("fluid.resolveRootComponent");instantiator.recordKnownComponent(fluid.rootComponent,fluid.resolveRootComponent,"resolveRootComponent",true);var rootShadow=instantiator.idToShadow[fluid.rootComponent.id];var resolveRootShadow=instantiator.idToShadow[fluid.resolveRootComponent.id];resolveRootShadow.ownScope=rootShadow.ownScope;resolveRootShadow.childrenScope=rootShadow.childrenScope;instantiator.recordKnownComponent(fluid.resolveRootComponent,instantiator,"instantiator",true);resolveRootShadow.childrenScope.instantiator=instantiator};fluid.constructRootComponents(fluid.globalInstantiator);fluid.expandOptions=function(args,that,mergePolicy,localRecord,outerExpandOptions){if(!args){return args}fluid.pushActivity("expandOptions","expanding options %args for component %that ",{that:that,args:args});var expandOptions=fluid.makeStackResolverOptions(that,localRecord);expandOptions.mergePolicy=mergePolicy;var expanded=outerExpandOptions&&outerExpandOptions.defer?fluid.makeExpandOptions(args,expandOptions):fluid.expand(args,expandOptions);fluid.popActivity();return expanded};fluid.localRecordExpected=fluid.arrayToHash(["type","options","container","createOnEvent","priority","recordType"]);fluid.checkComponentRecord=function(localRecord){fluid.each(localRecord,function(value,key){if(!fluid.localRecordExpected[key]){fluid.fail("Probable error in subcomponent record ",localRecord,' - key "'+key+'" found, where the only legal options are '+fluid.keys(fluid.localRecordExpected).join(", "))}})};fluid.mergeRecordsToList=function(that,mergeRecords){var list=[];fluid.each(mergeRecords,function(value,key){value.recordType=key;if(key==="distributions"){list.push.apply(list,fluid.transform(value,function(distributedBlock){return fluid.computeDistributionPriority(that,distributedBlock)}))}else{if(!value.options){return}value.priority=fluid.mergeRecordTypes[key];if(value.priority===undefined){fluid.fail("Merge record with unrecognised type "+key+": ",value)}list.push(value)}});return list};var addPolicyBuiltins=function(policy){fluid.each(["gradeNames","mergePolicy","argumentMap","components","dynamicComponents","events","listeners","modelListeners","modelRelay","distributeOptions","transformOptions"],function(key){fluid.set(policy,[key,"*","noexpand"],true)});return policy};fluid.generateExpandBlock=function(record,that,mergePolicy,localRecord){var expanded=fluid.expandOptions(record.options,record.contextThat||that,mergePolicy,localRecord,{defer:true});expanded.priority=record.priority;expanded.namespace=record.namespace;expanded.recordType=record.recordType;return expanded};var expandComponentOptionsImpl=function(mergePolicy,defaults,initRecord,that){var defaultCopy=fluid.copy(defaults);addPolicyBuiltins(mergePolicy);var shadow=fluid.shadowForComponent(that);shadow.mergePolicy=mergePolicy;var mergeRecords={defaults:{options:defaultCopy}};$.extend(mergeRecords,initRecord.mergeRecords);if(mergeRecords.subcomponentRecord){fluid.checkComponentRecord(mergeRecords.subcomponentRecord)}var expandList=fluid.mergeRecordsToList(that,mergeRecords);var togo=fluid.transform(expandList,function(value){return fluid.generateExpandBlock(value,that,mergePolicy,initRecord.localRecord)});return togo};fluid.fabricateDestroyMethod=function(that,name,instantiator,child){return function(){instantiator.clearComponent(that,name,child)}};fluid.computeGlobalMemberName=function(that){var nickName=fluid.computeNickName(that.typeName);return nickName+"-"+that.id};fluid.typeNameToMemberName=function(typeName){return typeName.replace(/\./g,"_")};fluid.expandComponentOptions=function(mergePolicy,defaults,userOptions,that){var initRecord=userOptions;var instantiator=userOptions&&userOptions.marker===fluid.EXPAND?userOptions.instantiator:null;fluid.pushActivity("expandComponentOptions","expanding component options %options with record %record for component %that",{options:instantiator?userOptions.mergeRecords.user:userOptions,record:initRecord,that:that});if(!instantiator){instantiator=fluid.globalInstantiator;initRecord={mergeRecords:{user:{options:fluid.expandCompact(userOptions,true)}},memberName:fluid.computeGlobalMemberName(that),instantiator:instantiator,parentThat:fluid.rootComponent}}that.destroy=fluid.fabricateDestroyMethod(initRecord.parentThat,initRecord.memberName,instantiator,that);instantiator.recordKnownComponent(initRecord.parentThat,that,initRecord.memberName,true);var togo=expandComponentOptionsImpl(mergePolicy,defaults,initRecord,that);fluid.popActivity();return togo};fluid.assembleCreatorArguments=function(parentThat,typeName,options){var upDefaults=fluid.defaults(typeName);if(!upDefaults||!upDefaults.argumentMap){fluid.fail("Error in assembleCreatorArguments: cannot look up component type name "+typeName+" to a component creator grade with an argumentMap")}var fakeThat={};var distributions=parentThat?fluid.receiveDistributions(parentThat,upDefaults.gradeNames,options.memberName,fakeThat):[];fluid.each(distributions,function(distribution){fluid.computeDistributionPriority(parentThat,distribution);if(fluid.isPrimitive(distribution.priority)){distribution.priority=fluid.parsePriority(distribution.priority,0,false,"options distribution")}});fluid.sortByPriority(distributions);var localDynamic=options.localDynamic;var localRecord=$.extend({},fluid.censorKeys(options.componentRecord,["type"]),localDynamic);var argMap=upDefaults.argumentMap;var findKeys=Object.keys(argMap).concat(["type"]);fluid.each(findKeys,function(name){for(var i=0;i<distributions.length;++i){if(distributions[i][name]!==undefined){localRecord[name]=distributions[i][name]}}});typeName=localRecord.type||typeName;delete localRecord.type;delete localRecord.options;var mergeRecords={distributions:distributions};if(options.componentRecord!==undefined){mergeRecords.subcomponentRecord=$.extend({},options.componentRecord)}var args=[];fluid.each(argMap,function(index,name){var arg;if(name==="options"){arg={marker:fluid.EXPAND,localRecord:localDynamic,mergeRecords:mergeRecords,instantiator:fluid.getInstantiator(parentThat),parentThat:parentThat,memberName:options.memberName}}else{var value=localRecord[name];arg=fluid.expandImmediate(value,parentThat,localRecord)}args[index]=arg});var togo={args:args,funcName:typeName};return togo};fluid.initDependent=function(that,name,localRecord){if(that[name]){return}var component=that.options.components[name];var instance;var instantiator=fluid.globalInstantiator;var shadow=instantiator.idToShadow[that.id];var localDynamic=localRecord||shadow.subcomponentLocal&&shadow.subcomponentLocal[name];fluid.pushActivity("initDependent",'instantiating dependent component at path "%path" with record %record as child of %parent',{path:shadow.path+"."+name,record:component,parent:that});if(typeof component==="string"||component.expander){that[name]=fluid.inEvaluationMarker;instance=fluid.expandImmediate(component,that);if(instance){instantiator.recordKnownComponent(that,instance,name,false)}else{delete that[name]}}else if(component.type){var type=fluid.expandImmediate(component.type,that,localDynamic);if(!type){fluid.fail("Error in subcomponent record: ",component.type," could not be resolved to a type for component ",name," of parent ",that)}var invokeSpec=fluid.assembleCreatorArguments(that,type,{componentRecord:component,memberName:name,localDynamic:localDynamic});instance=fluid.initSubcomponentImpl(that,{type:invokeSpec.funcName},invokeSpec.args)}else{fluid.fail("Unrecognised material in place of subcomponent "+name+' - no "type" field found')}fluid.popActivity();return instance};fluid.bindDeferredComponent=function(that,componentName,component){var events=fluid.makeArray(component.createOnEvent);fluid.each(events,function(eventName){var event=fluid.isIoCReference(eventName)?fluid.expandOptions(eventName,that):that.events[eventName];if(!event||!event.addListener){fluid.fail("Error instantiating createOnEvent component with name "+componentName+" of parent ",that," since event specification "+eventName+" could not be expanded to an event - got ",event)}event.addListener(function(){fluid.pushActivity("initDeferred","instantiating deferred component %componentName of parent %that due to event %eventName",{componentName:componentName,that:that,eventName:eventName});if(that[componentName]){fluid.globalInstantiator.clearComponent(that,componentName)}var localRecord={arguments:fluid.makeArray(arguments)};fluid.initDependent(that,componentName,localRecord);fluid.popActivity()},null,component.priority)})};fluid.priorityForComponent=function(component){return component.priority?component.priority:component.type==="fluid.typeFount"||fluid.hasGrade(fluid.defaults(component.type),"fluid.typeFount")?"first":undefined};fluid.initDependents=function(that){fluid.pushActivity("initDependents","instantiating dependent components for component %that",{that:that});var shadow=fluid.shadowForComponent(that);shadow.memberStrategy.initter();shadow.invokerStrategy.initter();fluid.getForComponent(that,"modelRelay");fluid.getForComponent(that,"model");if(fluid.isDestroyed(that)){return}var options=that.options;var components=options.components||{};var componentSort=[];fluid.each(components,function(component,name){if(!component.createOnEvent){var priority=fluid.priorityForComponent(component);componentSort.push({namespace:name,priority:fluid.parsePriority(priority)})}else{fluid.bindDeferredComponent(that,name,component)}});fluid.sortByPriority(componentSort);fluid.each(componentSort,function(entry){fluid.initDependent(that,entry.namespace)});if(shadow.subcomponentLocal){fluid.clear(shadow.subcomponentLocal)}that.lifecycleStatus="constructed";fluid.assessTreeConstruction(that,shadow);fluid.popActivity()};fluid.assessTreeConstruction=function(that,shadow){var instantiator=fluid.globalInstantiator;var thatStack=instantiator.getThatStack(that);var unstableUp=fluid.find_if(thatStack,function(that){return that.lifecycleStatus==="constructing"});if(unstableUp){that.lifecycleStatus="constructed"}else{fluid.markSubtree(instantiator,that,shadow.path,"treeConstructed")}};fluid.markSubtree=function(instantiator,that,path,state){that.lifecycleStatus=state;fluid.visitComponentChildren(that,function(child,name){var childPath=instantiator.composePath(path,name);var childShadow=instantiator.idToShadow[child.id];var created=childShadow&&childShadow.path===childPath;if(created){fluid.markSubtree(instantiator,child,childPath,state)}},{flat:true})};fluid.pathForComponent=function(component,instantiator){instantiator=instantiator||fluid.getInstantiator(component)||fluid.globalInstantiator;var shadow=instantiator.idToShadow[component.id];if(!shadow){return null}return instantiator.parseEL(shadow.path)};fluid.construct=function(path,options,instantiator){var record=fluid.destroy(path,instantiator);fluid.set(record.parent,["options","components",record.memberName],{type:options.type,options:options});return fluid.initDependent(record.parent,record.memberName)};fluid.destroy=function(path,instantiator){instantiator=instantiator||fluid.globalInstantiator;var segs=fluid.model.parseToSegments(path,instantiator.parseEL,true);if(segs.length===0){fluid.fail("Cannot destroy the root component")}var memberName=segs.pop(),parentPath=instantiator.composeSegments.apply(null,segs);var parent=instantiator.pathToComponent[parentPath];if(!parent){fluid.fail("Cannot modify component with nonexistent parent at path ",path)}if(parent[memberName]){parent[memberName].destroy()}return{parent:parent,memberName:memberName}};fluid.constructSingle=function(parentPath,options,instantiator){instantiator=instantiator||fluid.globalInstantiator;parentPath=parentPath||"";var segs=fluid.model.parseToSegments(parentPath,instantiator.parseEL,true);if(typeof options==="string"){options={type:options}}var type=options.type;if(!type){fluid.fail("Cannot construct singleton object without a type entry")}options=$.extend({},options);var gradeNames=options.gradeNames=fluid.makeArray(options.gradeNames);gradeNames.unshift(type);options.type="fluid.component";var root=segs.length===0;if(root){gradeNames.push("fluid.resolveRoot")}var memberName=fluid.typeNameToMemberName(options.singleRootType||type);segs.push(memberName);fluid.construct(segs,options,instantiator)};fluid.destroySingle=function(parentPath,typeName,instantiator){instantiator=instantiator||fluid.globalInstantiator;var segs=fluid.model.parseToSegments(parentPath,instantiator.parseEL,true);var memberName=fluid.typeNameToMemberName(typeName);segs.push(memberName);fluid.destroy(segs,instantiator)};fluid.makeGradeLinkage=function(linkageName,inputNames,outputNames){fluid.defaults(linkageName,{gradeNames:"fluid.component",distributeOptions:{record:outputNames,target:"{/ "+inputNames.join("&")+"}.options.gradeNames"}});fluid.constructSingle([],linkageName)};fluid.componentForPath=function(path){return fluid.globalInstantiator.pathToComponent[fluid.isArrayable(path)?path.join("."):path]};fluid["debugger"]=function(){debugger};fluid.defaults("fluid.debuggingProbe",{gradeNames:["fluid.component"]});fluid.probeToDistribution=function(probe){var instantiator=fluid.globalInstantiator;var parsed=fluid.parseContextReference(probe.target);var segs=fluid.model.parseToSegments(parsed.path,instantiator.parseEL,true);if(segs[0]!=="options"){segs.unshift("options")}var parsedPriority=fluid.parsePriority(probe.priority);if(parsedPriority.constraint&&!parsedPriority.constraint.target){parsedPriority.constraint.target="authoring"}return{target:"{/ "+parsed.context+"}."+instantiator.composeSegments.apply(null,segs),record:{func:probe.func,funcName:probe.funcName,args:probe.args,priority:fluid.renderPriority(parsedPriority)}}};fluid.registerProbes=function(probes){var probeDistribution=fluid.transform(probes,fluid.probeToDistribution);var memberName="fluid_debuggingProbe_"+fluid.allocateGuid();fluid.construct([memberName],{type:"fluid.debuggingProbe",distributeOptions:probeDistribution});return memberName};fluid.deregisterProbes=function(probeName){fluid.destroy([probeName])};fluid.thisistToApplicable=function(record,recthis,that){return{apply:function(noThis,args){var resolvedThis=fluid.expandOptions(recthis,that);if(typeof resolvedThis==="string"){resolvedThis=fluid.getGlobalValue(resolvedThis)}if(!resolvedThis){fluid.fail("Could not resolve reference "+recthis+" to a value")}var resolvedFunc=resolvedThis[record.method];if(typeof resolvedFunc!=="function"){fluid.fail("Object ",resolvedThis," at reference "+recthis+" has no member named "+record.method+" which is a function ")}fluid.log("Applying arguments ",args," to method "+record.method+" of instance ",resolvedThis);return resolvedFunc.apply(resolvedThis,args)}}};fluid.changeToApplicable=function(record,that){return{apply:function(noThis,args,localRecord,mergeRecord){var parsed=fluid.parseValidModelReference(that,"changePath listener record",record.changePath);var value=fluid.expandOptions(record.value,that,{},fluid.extend(localRecord,{arguments:args}));var sources=mergeRecord&&mergeRecord.source&&mergeRecord.source.length?fluid.makeArray(record.source).concat(mergeRecord.source):record.source;parsed.applier.change(parsed.modelSegs,value,record.type,sources)}}};fluid.recordToApplicable=function(record,that,standard){if(record.changePath!==undefined){return fluid.changeToApplicable(record,that,standard)}var recthis=record["this"];if(record.method^recthis){fluid.fail("Record ",that,' must contain both entries "method" and "this" if it contains either')}return record.method?fluid.thisistToApplicable(record,recthis,that):null};fluid.getGlobalValueNonComponent=function(funcName,context){var defaults=fluid.defaults(funcName);if(defaults&&fluid.hasGrade(defaults,"fluid.component")){fluid.fail("Error in function specification - cannot invoke function "+funcName+" in the context of "+context+": component creator functions can only be used as subcomponents")}return fluid.getGlobalValue(funcName)};fluid.makeInvoker=function(that,invokerec,name){invokerec=fluid.upgradePrimitiveFunc(invokerec);if(invokerec.args!==undefined&&invokerec.args!==fluid.NO_VALUE&&!fluid.isArrayable(invokerec.args)){invokerec.args=fluid.makeArray(invokerec.args)}var func=fluid.recordToApplicable(invokerec,that);var invokePre=fluid.preExpand(invokerec.args);var localRecord={};var expandOptions=fluid.makeStackResolverOptions(that,localRecord,true);func=func||(invokerec.funcName?fluid.getGlobalValueNonComponent(invokerec.funcName,"an invoker"):fluid.expandImmediate(invokerec.func,that));if(!func||!func.apply){fluid.fail("Error in invoker record: could not resolve members func, funcName or method to a function implementation - got "+func+" from ",invokerec)}else if(func===fluid.notImplemented){fluid.fail("Error constructing component ",that," - the invoker named "+name+" which was defined in grade "+invokerec.componentSource+" needs to be overridden with a concrete implementation")}return function invokeInvoker(){if(fluid.defeatLogging===false){fluid.pushActivity("invokeInvoker","invoking invoker with name %name and record %record from path %path holding component %that",{name:name,record:invokerec,path:fluid.dumpComponentPath(that),that:that})}var togo,finalArgs;if(that.lifecycleStatus==="destroyed"){fluid.log(fluid.logLevel.WARN,"Ignoring call to invoker "+name+" of component ",that," which has been destroyed")}else{localRecord.arguments=arguments;if(invokerec.args===undefined||invokerec.args===fluid.NO_VALUE){finalArgs=arguments}else{fluid.expandImmediateImpl(invokePre,expandOptions);finalArgs=invokePre.source}togo=func.apply(null,finalArgs)}if(fluid.defeatLogging===false){fluid.popActivity()}return togo}};fluid.event.makeTrackedListenerAdder=function(source){var shadow=fluid.shadowForComponent(source);return function(event){return{addListener:function(listener,namespace,priority,softNamespace,listenerId){fluid.recordListener(event,listener,shadow,listenerId);event.addListener.apply(null,arguments)}}}};fluid.event.listenerEngine=function(eventSpec,callback,adder){var argstruc={};function checkFire(){var notall=fluid.find(eventSpec,function(value,key){if(argstruc[key]===undefined){return true}});if(!notall){var oldstruc=argstruc;argstruc={};callback(oldstruc)}}fluid.each(eventSpec,function(event,eventName){adder(event).addListener(function(){argstruc[eventName]=fluid.makeArray(arguments);checkFire()})})};fluid.event.dispatchListener=function(that,listener,eventName,eventSpec,indirectArgs){if(eventSpec.args!==undefined&&eventSpec.args!==fluid.NO_VALUE&&!fluid.isArrayable(eventSpec.args)){eventSpec.args=fluid.makeArray(eventSpec.args)}listener=fluid.event.resolveListener(listener);var dispatchPre=fluid.preExpand(eventSpec.args);var localRecord={};var expandOptions=fluid.makeStackResolverOptions(that,localRecord,true);var togo=function(){if(fluid.defeatLogging===false){fluid.pushActivity("dispatchListener","firing to listener to event named %eventName of component %that",{eventName:eventName,that:that})}var args=indirectArgs?arguments[0]:arguments,finalArgs;localRecord.arguments=args;if(eventSpec.args!==undefined&&eventSpec.args!==fluid.NO_VALUE){fluid.expandImmediateImpl(dispatchPre,expandOptions);finalArgs=dispatchPre.source}else{finalArgs=args}var togo=listener.apply(null,finalArgs);if(fluid.defeatLogging===false){fluid.popActivity()}return togo};fluid.event.impersonateListener(listener,togo);return togo};fluid.event.resolveSoftNamespace=function(key){if(typeof key!=="string"){return null}else{var lastpos=Math.max(key.lastIndexOf("."),key.lastIndexOf("}"));return key.substring(lastpos+1)}};fluid.event.resolveListenerRecord=function(lisrec,that,eventName,namespace,standard){var badRec=function(record,extra){fluid.fail("Error in listener record - could not resolve reference ",record," to a listener or firer. "+'Did you miss out "events." when referring to an event firer?'+extra)};fluid.pushActivity("resolveListenerRecord","resolving listener record for event named %eventName for component %that",{eventName:eventName,that:that});var records=fluid.makeArray(lisrec);var transRecs=fluid.transform(records,function(record){var expanded=fluid.isPrimitive(record)||record.expander?{listener:record}:fluid.copy(record);var methodist=fluid.recordToApplicable(record,that,standard);if(methodist){expanded.listener=methodist}else{expanded.listener=expanded.listener||expanded.func||expanded.funcName}if(!expanded.listener){badRec(record,' Listener record must contain a member named "listener", "func", "funcName" or "method"')}var softNamespace=record.method?fluid.event.resolveSoftNamespace(record["this"])+"."+record.method:fluid.event.resolveSoftNamespace(expanded.listener);if(!expanded.namespace&&!namespace&&softNamespace){expanded.softNamespace=true;expanded.namespace=(record.componentSource?record.componentSource:that.typeName)+"."+softNamespace}var listener=expanded.listener=fluid.expandOptions(expanded.listener,that);if(!listener){badRec(record,"")}var firer=false;if(listener.typeName==="fluid.event.firer"){listener=listener.fire;firer=true}expanded.listener=standard&&(expanded.args&&listener!=="fluid.notImplemented"||firer)?fluid.event.dispatchListener(that,listener,eventName,expanded):listener;expanded.listenerId=fluid.allocateGuid();return expanded});var togo={records:transRecs,adderWrapper:standard?fluid.event.makeTrackedListenerAdder(that):null};fluid.popActivity();return togo};fluid.event.expandOneEvent=function(that,event){var origin;if(typeof event==="string"&&event.charAt(0)!=="{"){origin=fluid.getForComponent(that,["events",event])}else{origin=fluid.expandOptions(event,that)}if(!origin||origin.typeName!=="fluid.event.firer"){fluid.fail("Error in event specification - could not resolve base event reference ",event," to an event firer: got ",origin)}return origin};fluid.event.expandEvents=function(that,event){return typeof event==="string"?fluid.event.expandOneEvent(that,event):fluid.transform(event,function(oneEvent){return fluid.event.expandOneEvent(that,oneEvent)})};fluid.event.resolveEvent=function(that,eventName,eventSpec){fluid.pushActivity("resolveEvent","resolving event with name %eventName attached to component %that",{eventName:eventName,that:that});var adder=fluid.event.makeTrackedListenerAdder(that);if(typeof eventSpec==="string"){eventSpec={event:eventSpec}}var event=eventSpec.typeName==="fluid.event.firer"?eventSpec:eventSpec.event||eventSpec.events;if(!event){fluid.fail("Event specification for event with name "+eventName+" does not include a base event specification: ",eventSpec)}var origin=event.typeName==="fluid.event.firer"?event:fluid.event.expandEvents(that,event);var isMultiple=origin.typeName!=="fluid.event.firer";var isComposite=eventSpec.args||isMultiple;var firer;if(isComposite){firer=fluid.makeEventFirer({name:" [composite] "+fluid.event.nameEvent(that,eventName)});var dispatcher=fluid.event.dispatchListener(that,firer.fire,eventName,eventSpec,isMultiple);if(isMultiple){fluid.event.listenerEngine(origin,dispatcher,adder)}else{adder(origin).addListener(dispatcher)}}else{firer={typeName:"fluid.event.firer"};firer.fire=function(){var outerArgs=fluid.makeArray(arguments);fluid.pushActivity("fireSynthetic","firing synthetic event %eventName ",{eventName:eventName});var togo=origin.fire.apply(null,outerArgs);fluid.popActivity();return togo};firer.addListener=function(listener,namespace,priority,softNamespace,listenerId){var dispatcher=fluid.event.dispatchListener(that,listener,eventName,eventSpec);adder(origin).addListener(dispatcher,namespace,priority,softNamespace,listenerId)};firer.removeListener=function(listener){origin.removeListener(listener)}}fluid.popActivity();return firer};fluid.withEnvironment=function(envAdd,func,root){var key;root=root||fluid.globalThreadLocal();try{for(key in envAdd){root[key]=envAdd[key]}$.extend(root,envAdd);return func()}finally{for(key in envAdd){delete root[key]}}};fluid.fetchContextReference=function(parsed,directModel,env,elResolver,externalFetcher){if(elResolver){parsed=elResolver(parsed,env)}var base=parsed.context?env[parsed.context]:directModel;if(!base){var resolveExternal=externalFetcher&&externalFetcher(parsed);return resolveExternal||base}return parsed.noDereference?parsed.path:fluid.get(base,parsed.path)};fluid.makeEnvironmentFetcher=function(directModel,elResolver,envGetter,externalFetcher){envGetter=envGetter||fluid.globalThreadLocal;return function(parsed){var env=envGetter();return fluid.fetchContextReference(parsed,directModel,env,elResolver,externalFetcher)}};fluid.coerceToPrimitive=function(string){return string==="false"?false:string==="true"?true:isFinite(string)?Number(string):string};fluid.compactStringToRec=function(string,type){var openPos=string.indexOf("(");var closePos=string.indexOf(")");if(openPos===-1^closePos===-1||openPos>closePos){fluid.fail("Badly-formed compact "+type+" record without matching parentheses: "+string)}if(openPos!==-1&&closePos!==-1){var trail=string.substring(closePos+1);if($.trim(trail)!==""){fluid.fail("Badly-formed compact "+type+" record "+string+" - unexpected material following close parenthesis: "+trail)}var prefix=string.substring(0,openPos);var body=string.substring(openPos+1,closePos);var args=fluid.transform(body.split(","),$.trim,fluid.coerceToPrimitive);var togo=fluid.upgradePrimitiveFunc(prefix,null);togo.args=args;return togo}else if(type==="expander"){fluid.fail("Badly-formed compact expander record without parentheses: "+string)}return string};fluid.expandPrefix="@expand:";fluid.expandCompactString=function(string,active){var rec=string;if(string.indexOf(fluid.expandPrefix)===0){var rem=string.substring(fluid.expandPrefix.length);rec={expander:fluid.compactStringToRec(rem,"expander")}}else if(active){rec=fluid.compactStringToRec(string,active)}return rec};var singularPenRecord={listeners:"listener",modelListeners:"modelListener"};var singularRecord=$.extend({invokers:"invoker"},singularPenRecord);fluid.expandCompactRec=function(segs,target,source){fluid.guardCircularExpansion(segs,segs.length);var pen=segs.length>0?segs[segs.length-1]:"";var active=singularRecord[pen];if(!active&&segs.length>1){active=singularPenRecord[segs[segs.length-2]]}fluid.each(source,function(value,key){if(fluid.isPlainObject(value)){target[key]=fluid.freshContainer(value);segs.push(key);fluid.expandCompactRec(segs,target[key],value);segs.pop();return}else if(typeof value==="string"){value=fluid.expandCompactString(value,active)}target[key]=value})};fluid.expandCompact=function(options){var togo={};fluid.expandCompactRec([],togo,options);return togo};fluid.extractEL=function(string,options){if(options.ELstyle==="ALL"){return string}else if(options.ELstyle.length===1){if(string.charAt(0)===options.ELstyle){return string.substring(1)}}else if(options.ELstyle==="${}"){var i1=string.indexOf("${");var i2=string.lastIndexOf("}");if(i1===0&&i2!==-1){return string.substring(2,i2)}}};fluid.extractELWithContext=function(string,options){var EL=fluid.extractEL(string,options);if(fluid.isIoCReference(EL)){return fluid.parseContextReference(EL)}return EL?{path:EL}:EL};fluid.parseContextReference=function(reference,index,delimiter){index=index||0;var isNested=reference.charAt(index+1)==="{",endcpos,context,nested;if(isNested){nested=fluid.parseContextReference(reference,index+1,"}");endcpos=nested.endpos}else{endcpos=reference.indexOf("}",index+1)}if(endcpos===-1){fluid.fail('Cannot parse context reference "'+reference+'": Malformed context reference without }')}if(isNested){context=nested}else{context=reference.substring(index+1,endcpos)}var endpos=delimiter?reference.indexOf(delimiter,endcpos+1):reference.length;var path=reference.substring(endcpos+1,endpos);if(path.charAt(0)==="."){path=path.substring(1)}return{context:context,path:path,endpos:endpos}};fluid.renderContextReference=function(parsed){var context=parsed.context;return"{"+(typeof context==="string"?context:fluid.renderContextReference(context))+"}"+(parsed.path?"."+parsed.path:"")};fluid.resolveContextValue=function(string,options){function fetch(parsed){fluid.pushActivity("resolveContextValue","resolving context value %parsed",{parsed:parsed});var togo=options.fetcher(parsed);fluid.pushActivity("resolvedContextValue","resolved value %parsed to value %value",{parsed:parsed,value:togo});fluid.popActivity(2);return togo}var parsed;if(options.bareContextRefs&&fluid.isIoCReference(string)){parsed=fluid.parseContextReference(string);return fetch(parsed)}else if(options.ELstyle&&options.ELstyle!=="${}"){
parsed=fluid.extractELWithContext(string,options);if(parsed){return fetch(parsed)}}while(typeof string==="string"){var i1=string.indexOf("${");var i2=string.indexOf("}",i1+2);if(i1!==-1&&i2!==-1){if(string.charAt(i1+2)==="{"){parsed=fluid.parseContextReference(string,i1+2,"}");i2=parsed.endpos}else{parsed={path:string.substring(i1+2,i2)}}var subs=fetch(parsed);var all=i1===0&&i2===string.length-1;if(subs===undefined||subs===null){return subs}string=all?subs:string.substring(0,i1)+subs+string.substring(i2+1)}else{break}}return string};fluid.fetchExpandChildren=function(target,i,segs,source,mergePolicy,options){if(source.expander){var expanded=fluid.expandExpander(target,source,options);if(fluid.isPrimitive(expanded)||!fluid.isPlainObject(expanded)||fluid.isArrayable(expanded)^fluid.isArrayable(target)){return expanded}else{$.extend(true,target,expanded)}}fluid.each(source,function(newSource,key){if(newSource===undefined){target[key]=undefined}else if(key!=="expander"){segs[i]=key;if(fluid.getImmediate(options.exceptions,segs,i)!==true){options.strategy(target,key,i+1,segs,source,mergePolicy)}}});return target};function regenerateCursor(source,segs,limit,sourceStrategy){for(var i=0;i<limit;++i){source=sourceStrategy(source,segs[i],i,fluid.makeArray(segs))}return source}fluid.isUnexpandable=function(source){return fluid.isPrimitive(source)||!fluid.isPlainObject(source)};fluid.expandSource=function(options,target,i,segs,deliverer,source,policy,recurse){var expanded,isTrunk;var thisPolicy=fluid.derefMergePolicy(policy);if(typeof source==="string"&&!thisPolicy.noexpand){if(!options.defaultEL||source.charAt(0)==="{"){fluid.pushActivity("expandContextValue","expanding context value %source held at path %path",{source:source,path:fluid.path.apply(null,segs.slice(0,i))});expanded=fluid.resolveContextValue(source,options);fluid.popActivity(1)}else{expanded=source}}else if(thisPolicy.noexpand||fluid.isUnexpandable(source)){expanded=source}else if(source.expander){expanded=fluid.expandExpander(deliverer,source,options)}else{expanded=fluid.freshContainer(source);isTrunk=true}if(expanded!==fluid.NO_VALUE){deliverer(expanded)}if(isTrunk){recurse(expanded,source,i,segs,policy)}return expanded};fluid.guardCircularExpansion=function(segs,i){if(i>fluid.strategyRecursionBailout){fluid.fail("Overflow/circularity in options expansion, current path is ",segs," at depth ",i,' - please ensure options are not circularly connected, or protect from expansion using the "noexpand" policy or expander')}};fluid.makeExpandStrategy=function(options){var recurse=function(target,source,i,segs,policy){return fluid.fetchExpandChildren(target,i||0,segs||[],source,policy,options)};var strategy=function(target,name,i,segs,source,policy){fluid.guardCircularExpansion(segs,i);if(!target){return}if(target.hasOwnProperty(name)){return target[name]}if(source===undefined){source=regenerateCursor(options.source,segs,i-1,options.sourceStrategy);policy=regenerateCursor(options.mergePolicy,segs,i-1,fluid.concreteTrundler)}var thisSource=options.sourceStrategy(source,name,i,segs);var thisPolicy=fluid.concreteTrundler(policy,name);function deliverer(value){target[name]=value}return fluid.expandSource(options,target,i,segs,deliverer,thisSource,thisPolicy,recurse)};options.recurse=recurse;options.strategy=strategy;return strategy};fluid.defaults("fluid.makeExpandOptions",{ELstyle:"${}",bareContextRefs:true,target:fluid.inCreationMarker});fluid.makeExpandOptions=function(source,options){options=$.extend({},fluid.rawDefaults("fluid.makeExpandOptions"),options);options.defaultEL=options.ELStyle==="${}"&&options.bareContextRefs;options.expandSource=function(source){return fluid.expandSource(options,null,0,[],fluid.identity,source,options.mergePolicy,false)};if(!fluid.isUnexpandable(source)){options.source=source;options.target=fluid.freshContainer(source);options.sourceStrategy=options.sourceStrategy||fluid.concreteTrundler;fluid.makeExpandStrategy(options);options.initter=function(){options.target=fluid.fetchExpandChildren(options.target,0,[],options.source,options.mergePolicy,options)}}else{options.strategy=fluid.concreteTrundler;options.initter=fluid.identity;if(typeof source==="string"){options.target=options.expandSource(source)}else{options.target=source}}return options};fluid.expand=function(source,options){var expandOptions=fluid.makeExpandOptions(source,options);expandOptions.initter();return expandOptions.target};fluid.preExpandRecurse=function(root,source,holder,member,rootSegs){fluid.guardCircularExpansion(rootSegs,rootSegs.length);function pushExpander(expander){root.expanders.push({expander:expander,holder:holder,member:member});delete holder[member]}if(fluid.isIoCReference(source)){var parsed=fluid.parseContextReference(source);var segs=fluid.model.parseEL(parsed.path);pushExpander({typeFunc:fluid.expander.fetch,context:parsed.context,segs:segs})}else if(fluid.isPlainObject(source)){if(source.expander){source.expander.typeFunc=fluid.getGlobalValue(source.expander.type||"fluid.invokeFunc");pushExpander(source.expander)}else{fluid.each(source,function(value,key){rootSegs.push(key);fluid.preExpandRecurse(root,value,source,key,rootSegs);rootSegs.pop()})}}};fluid.preExpand=function(source){var root={expanders:[],source:fluid.isUnexpandable(source)?source:fluid.copy(source)};fluid.preExpandRecurse(root,root.source,root,"source",[]);return root};fluid.expandImmediate=function(source,that,localRecord){var options=fluid.makeStackResolverOptions(that,localRecord,true);var root=fluid.preExpand(source);fluid.expandImmediateImpl(root,options);return root.source};fluid.expandImmediateImpl=function(root,options){var expanders=root.expanders;for(var i=0;i<expanders.length;++i){var expander=expanders[i];expander.holder[expander.member]=expander.expander.typeFunc(null,expander,options)}};fluid.expandExpander=function(deliverer,source,options){var expander=fluid.getGlobalValue(source.expander.type||"fluid.invokeFunc");if(!expander){fluid.fail("Unknown expander with type "+source.expander.type)}return expander(deliverer,source,options)};fluid.registerNamespace("fluid.expander");fluid.expander.fetch=function(deliverer,source,options){var localRecord=options.localRecord,context=source.expander.context,segs=source.expander.segs;var inLocal=localRecord[context]!==undefined;var contextStatus=options.contextThat.lifecycleStatus;var fast=contextStatus==="treeConstructed"||contextStatus==="destroyed";var component=inLocal?localRecord[context]:fluid.resolveContext(context,options.contextThat,fast);if(component){var root=component;if(inLocal||component.lifecycleStatus!=="constructing"){for(var i=0;i<segs.length;++i){root=root?root[segs[i]]:undefined}}else{root=fluid.getForComponent(component,segs)}if(root===undefined&&!inLocal){root=fluid.getForComponent(component,segs)}return root}else if(segs.length>0){fluid.triggerMismatchedPathError(source.expander,options.contextThat)}};fluid.invokeFunc=function(deliverer,source,options){var expander=source.expander;var args=fluid.makeArray(expander.args);expander.args=args;if(options.recurse){args=options.recurse([],args)}else{expander=fluid.expandImmediate(expander,options.contextThat,options.localRecord);args=expander.args}var funcEntry=expander.func||expander.funcName;var func=(options.expandSource?options.expandSource(funcEntry):funcEntry)||fluid.recordToApplicable(expander,options.contextThat);if(typeof func==="string"){func=fluid.getGlobalValue(func)}if(!func){fluid.fail("Error in expander record ",expander,": "+funcEntry+" could not be resolved to a function for component ",options.contextThat)}return func.apply(null,args)};fluid.noexpand=function(deliverer,source){return source.expander.value?source.expander.value:source.expander.tree}})(jQuery,fluid_2_0_0);var fluid_2_0_0=fluid_2_0_0||{};(function($,fluid){"use strict";fluid.model.makeEnvironmentStrategy=function(environment){return function(root,segment,index){return index===0&&environment[segment]?environment[segment]:undefined}};fluid.model.defaultCreatorStrategy=function(root,segment){if(root[segment]===undefined){root[segment]={};return root[segment]}};fluid.model.defaultFetchStrategy=function(root,segment){return root[segment]};fluid.model.funcResolverStrategy=function(root,segment){if(root.resolvePathSegment){return root.resolvePathSegment(segment)}};fluid.model.traverseWithStrategy=function(root,segs,initPos,config,uncess){var strategies=config.strategies;var limit=segs.length-uncess;for(var i=initPos;i<limit;++i){if(!root){return root}var accepted;for(var j=0;j<strategies.length;++j){accepted=strategies[j](root,segs[i],i+1,segs);if(accepted!==undefined){break}}if(accepted===fluid.NO_VALUE){accepted=undefined}root=accepted}return root};fluid.model.getValueAndSegments=function(root,EL,config,initSegs){return fluid.model.accessWithStrategy(root,EL,fluid.NO_VALUE,config,initSegs,true)};fluid.model.makeTrundler=function(config){return function(valueSeg,EL){return fluid.model.getValueAndSegments(valueSeg.root,EL,config,valueSeg.segs)}};fluid.model.getWithStrategy=function(root,EL,config,initSegs){return fluid.model.accessWithStrategy(root,EL,fluid.NO_VALUE,config,initSegs)};fluid.model.setWithStrategy=function(root,EL,newValue,config,initSegs){fluid.model.accessWithStrategy(root,EL,newValue,config,initSegs)};fluid.model.accessWithStrategy=function(root,EL,newValue,config,initSegs,returnSegs){if(!fluid.isPrimitive(EL)&&!fluid.isArrayable(EL)){var key=EL.type||"default";var resolver=config.resolvers[key];if(!resolver){fluid.fail("Unable to find resolver of type "+key)}var trundler=fluid.model.makeTrundler(config);var valueSeg={root:root,segs:initSegs};valueSeg=resolver(valueSeg,EL,trundler);if(EL.path&&valueSeg){valueSeg=trundler(valueSeg,EL.path)}return returnSegs?valueSeg:valueSeg?valueSeg.root:undefined}else{return fluid.model.accessImpl(root,EL,newValue,config,initSegs,returnSegs,fluid.model.traverseWithStrategy)}};fluid.registerNamespace("fluid.pathUtil");fluid.pathUtil.getPathSegmentImpl=function(accept,path,i){var segment=null;if(accept){segment=""}var escaped=false;var limit=path.length;for(;i<limit;++i){var c=path.charAt(i);if(!escaped){if(c==="."){break}else if(c==="\\"){escaped=true}else if(segment!==null){segment+=c}}else{escaped=false;if(segment!==null){segment+=c}}}if(segment!==null){accept[0]=segment}return i};var globalAccept=[];fluid.pathUtil.parseEL=function(path){var togo=[];var index=0;var limit=path.length;while(index<limit){var firstdot=fluid.pathUtil.getPathSegmentImpl(globalAccept,path,index);togo.push(globalAccept[0]);index=firstdot+1}return togo};fluid.pathUtil.composeSegment=function(prefix,toappend){toappend=toappend.toString();for(var i=0;i<toappend.length;++i){var c=toappend.charAt(i);if(c==="."||c==="\\"||c==="}"){prefix+="\\"}prefix+=c}return prefix};fluid.pathUtil.escapeSegment=function(segment){return fluid.pathUtil.composeSegment("",segment)};fluid.pathUtil.composePath=function(prefix,suffix){if(prefix.length!==0){prefix+="."}return fluid.pathUtil.composeSegment(prefix,suffix)};fluid.pathUtil.composeSegments=function(){var path="";for(var i=0;i<arguments.length;++i){path=fluid.pathUtil.composePath(path,arguments[i])}return path};fluid.pathUtil.matchSegments=function(toMatch,segs,start,end){if(end-start!==toMatch.length){return false}for(var i=start;i<end;++i){if(segs[i]!==toMatch[i-start]){return false}}return true};fluid.model.unescapedParser={parse:fluid.model.parseEL,compose:fluid.model.composeSegments};fluid.model.defaultGetConfig={parser:fluid.model.unescapedParser,strategies:[fluid.model.funcResolverStrategy,fluid.model.defaultFetchStrategy]};fluid.model.defaultSetConfig={parser:fluid.model.unescapedParser,strategies:[fluid.model.funcResolverStrategy,fluid.model.defaultFetchStrategy,fluid.model.defaultCreatorStrategy]};fluid.model.escapedParser={parse:fluid.pathUtil.parseEL,compose:fluid.pathUtil.composeSegments};fluid.model.escapedGetConfig={parser:fluid.model.escapedParser,strategies:[fluid.model.defaultFetchStrategy]};fluid.model.escapedSetConfig={parser:fluid.model.escapedParser,strategies:[fluid.model.defaultFetchStrategy,fluid.model.defaultCreatorStrategy]};fluid.initRelayModel=function(that){fluid.deenlistModelComponent(that);return that.model};fluid.isModelComplete=function(that){return"model"in that&&that.model!==fluid.inEvaluationMarker};fluid.enlistModelComponent=function(that){var instantiator=fluid.getInstantiator(that);var enlist=instantiator.modelTransactions.init[that.id];if(!enlist){enlist={that:that,applier:fluid.getForComponent(that,"applier"),complete:fluid.isModelComplete(that)};instantiator.modelTransactions.init[that.id]=enlist}return enlist};fluid.clearTransactions=function(){var instantiator=fluid.globalInstantiator;fluid.clear(instantiator.modelTransactions);instantiator.modelTransactions.init={}};fluid.failureEvent.addListener(fluid.clearTransactions,"clearTransactions","before:fail");fluid.clearLinkCounts=function(transRec,relaysAlso){fluid.each(transRec,function(value,key){if(typeof value==="number"){transRec[key]=0}else if(relaysAlso&&value.options&&typeof value.relayCount==="number"){value.relayCount=0}})};fluid.sortCompleteLast=function(reca,recb){return(reca.completeOnInit?1:0)-(recb.completeOnInit?1:0)};fluid.operateInitialTransaction=function(that,mrec){var transId=fluid.allocateGuid();var transRec=fluid.getModelTransactionRec(that,transId);var transac;var transacs=fluid.transform(mrec,function(recel){transac=recel.that.applier.initiate(null,"init",transId);transRec[recel.that.applier.applierId]={transaction:transac};return transac});var recs=fluid.values(mrec).sort(fluid.sortCompleteLast);fluid.each(recs,function(recel){var that=recel.that;var transac=transacs[that.id];if(recel.completeOnInit){fluid.initModelEvent(that,that.applier,transac,that.applier.listeners.sortedListeners)}else{fluid.each(recel.initModels,function(initModel){transac.fireChangeRequest({type:"ADD",segs:[],value:initModel});fluid.clearLinkCounts(transRec,true)})}var shadow=fluid.shadowForComponent(that);if(shadow){shadow.modelComplete=true}});transac.commit()};fluid.deenlistModelComponent=function(that){var instantiator=fluid.getInstantiator(that);var mrec=instantiator.modelTransactions.init;if(!mrec[that.id]){return}that.model=undefined;mrec[that.id].complete=true;var incomplete=fluid.find_if(mrec,function(recel){return recel.complete!==true});if(!incomplete){fluid.operateInitialTransaction(that,mrec);instantiator.modelTransactions.init={}}};fluid.parseModelReference=function(that,ref){var parsed=fluid.parseContextReference(ref);parsed.segs=that.applier.parseEL(parsed.path);return parsed};fluid.parseValidModelReference=function(that,name,ref,implicitRelay){var reject=function(message){fluid.fail("Error in "+name+": ",ref,message)};var parsed;if(typeof ref==="string"){if(fluid.isIoCReference(ref)){parsed=fluid.parseModelReference(that,ref);var modelPoint=parsed.segs.indexOf("model");if(modelPoint===-1){if(implicitRelay){parsed.nonModel=true}else{reject(' must be a reference into a component model via a path including the segment "model"')}}else{parsed.modelSegs=parsed.segs.slice(modelPoint+1);parsed.contextSegs=parsed.segs.slice(0,modelPoint);delete parsed.path}}else{parsed={path:ref,modelSegs:that.applier.parseEL(ref)}}}else{if(!fluid.isArrayable(ref.segs)){reject(' must contain an entry "segs" holding path segments referring a model path within a component')}parsed={context:ref.context,modelSegs:fluid.expandOptions(ref.segs,that)}}var target;if(parsed.context){target=fluid.resolveContext(parsed.context,that);if(!target){reject(" must be a reference to an existing component")}if(parsed.contextSegs){target=fluid.getForComponent(target,parsed.contextSegs)}}else{target=that}if(!parsed.nonModel){if(!target.applier){fluid.getForComponent(target,["applier"])}if(!target.applier){reject(" must be a reference to a component with a ChangeApplier (descended from fluid.modelComponent)")}}parsed.that=target;parsed.applier=target.applier;if(!parsed.path){parsed.path=target.applier.composeSegments.apply(null,parsed.modelSegs)}return parsed};fluid.getModelTransactionRec=function(that,transId){var instantiator=fluid.getInstantiator(that);if(!transId){fluid.fail("Cannot get transaction record without transaction id")}if(!instantiator){return null}var transRec=instantiator.modelTransactions[transId];if(!transRec){transRec=instantiator.modelTransactions[transId]={relays:[],sources:{},externalChanges:{}}}return transRec};fluid.recordChangeListener=function(component,applier,sourceListener,listenerId){var shadow=fluid.shadowForComponent(component);fluid.recordListener(applier.modelChanged,sourceListener,shadow,listenerId)};fluid.registerRelayTransaction=function(transRec,targetApplier,transId,options,npOptions){var newTrans=targetApplier.initiate("relay",null,transId);var transEl=transRec[targetApplier.applierId]={transaction:newTrans,relayCount:0,namespace:npOptions.namespace,priority:npOptions.priority,options:options};transEl.priority=fluid.parsePriority(transEl.priority,transRec.relays.length,false,"model relay");transRec.relays.push(transEl);return transEl};fluid.relayRecursionBailout=100;fluid.registerDirectChangeRelay=function(target,targetSegs,source,sourceSegs,linkId,transducer,options,npOptions){var targetApplier=options.targetApplier||target.applier;var sourceApplier=options.sourceApplier||source.applier;var applierId=targetApplier.applierId;targetSegs=fluid.makeArray(targetSegs);sourceSegs=sourceSegs?fluid.makeArray(sourceSegs):sourceSegs;var sourceListener=function(newValue,oldValue,path,changeRequest,trans,applier){var transId=trans.id;var transRec=fluid.getModelTransactionRec(target,transId);if(applier&&trans&&!transRec[applier.applierId]){transRec[applier.applierId]={transaction:trans}}var existing=transRec[applierId];transRec[linkId]=transRec[linkId]||0;var relay=true;if(relay){++transRec[linkId];if(transRec[linkId]>fluid.relayRecursionBailout){fluid.fail("Error in model relay specification at component ",target," - operated more than "+fluid.relayRecursionBailout+" relays without model value settling - current model contents are ",trans.newHolder.model)}if(!existing){existing=fluid.registerRelayTransaction(transRec,targetApplier,transId,options,npOptions)}if(transducer&&!options.targetApplier){transducer(existing.transaction,options.sourceApplier?undefined:newValue,sourceSegs,targetSegs)}else if(newValue!==undefined){existing.transaction.fireChangeRequest({type:"ADD",segs:targetSegs,value:newValue})}}};var spec;if(sourceSegs){spec=sourceApplier.modelChanged.addListener({isRelay:true,segs:sourceSegs,transactional:options.transactional},sourceListener);fluid.log(fluid.logLevel.TRACE,"Adding relay listener with listenerId "+spec.listenerId+" to source applier with id "+sourceApplier.applierId+" from target applier with id "+applierId+" for target component with id "+target.id)}if(source){fluid.recordChangeListener(source,sourceApplier,sourceListener,spec.listenerId);if(target!==source){fluid.recordChangeListener(target,sourceApplier,sourceListener,spec.listenerId)}}};fluid.connectModelRelay=function(source,sourceSegs,target,targetSegs,options){var linkId=fluid.allocateGuid();function enlistComponent(component){var enlist=fluid.enlistModelComponent(component);if(enlist.complete){var shadow=fluid.shadowForComponent(component);if(shadow.modelComplete){enlist.completeOnInit=true}}}enlistComponent(target);enlistComponent(source);var npOptions=fluid.filterKeys(options,["namespace","priority"]);if(options.update){if(options.targetApplier){fluid.registerDirectChangeRelay(source,sourceSegs,target,targetSegs,linkId,null,{transactional:false,targetApplier:options.targetApplier,update:options.update},npOptions)}else{fluid.registerDirectChangeRelay(target,targetSegs,source,[],linkId+"-transform",options.forwardAdapter,{transactional:true,sourceApplier:options.forwardApplier},npOptions)}}else{fluid.registerDirectChangeRelay(target,targetSegs,source,sourceSegs,linkId,options.forwardAdapter,{transactional:false},npOptions);if(sourceSegs){fluid.registerDirectChangeRelay(source,sourceSegs,target,targetSegs,linkId,options.backwardAdapter,{transactional:false},npOptions)}}};fluid.parseSourceExclusionSpec=function(targetSpec,sourceSpec){targetSpec.excludeSource=fluid.arrayToHash(fluid.makeArray(sourceSpec.excludeSource||(sourceSpec.includeSource?"*":undefined)));targetSpec.includeSource=fluid.arrayToHash(fluid.makeArray(sourceSpec.includeSource));return targetSpec};fluid.isExcludedChangeSource=function(transaction,spec){if(!spec||!spec.excludeSource){return false}var excluded=spec.excludeSource["*"];for(var source in transaction.fullSources){if(spec.excludeSource[source]){excluded=true}if(spec.includeSource[source]){excluded=false}}return excluded};fluid.model.guardedAdapter=function(transaction,cond,func,args){if(!fluid.isExcludedChangeSource(transaction,cond)){func.apply(null,args)}};fluid.transformToAdapter=function(transform,targetPath){var basedTransform={};basedTransform[targetPath]=transform;return function(trans,newValue){fluid.model.transformWithRules(newValue,basedTransform,{finalApplier:trans})}};fluid.makeTransformPackage=function(componentThat,transform,sourcePath,targetPath,forwardCond,backwardCond,namespace,priority){var that={forwardHolder:{model:transform},backwardHolder:{model:null}};that.generateAdapters=function(trans){that.forwardAdapterImpl=fluid.transformToAdapter(trans?trans.newHolder.model:that.forwardHolder.model,targetPath);if(sourcePath!==null){that.backwardHolder.model=fluid.model.transform.invertConfiguration(transform);that.backwardAdapterImpl=fluid.transformToAdapter(that.backwardHolder.model,sourcePath)}};that.forwardAdapter=function(transaction,newValue){if(newValue===undefined){that.generateAdapters()}fluid.model.guardedAdapter(transaction,forwardCond,that.forwardAdapterImpl,arguments)};that.runTransform=function(trans){trans.commit();trans.reset()};that.forwardApplier=fluid.makeHolderChangeApplier(that.forwardHolder);that.forwardApplier.isRelayApplier=true;that.invalidator=fluid.makeEventFirer({name:"Invalidator for model relay with applier "+that.forwardApplier.applierId});if(sourcePath!==null){that.backwardApplier=fluid.makeHolderChangeApplier(that.backwardHolder);that.backwardAdapter=function(transaction){fluid.model.guardedAdapter(transaction,backwardCond,that.backwardAdapterImpl,arguments)}}that.update=that.invalidator.fire;var implicitOptions={targetApplier:that.forwardApplier,update:that.update,namespace:namespace,priority:priority,refCount:0};that.forwardHolder.model=fluid.parseImplicitRelay(componentThat,transform,[],implicitOptions);that.refCount=implicitOptions.refCount;that.namespace=namespace;that.priority=priority;that.generateAdapters();that.invalidator.addListener(that.generateAdapters);that.invalidator.addListener(that.runTransform);return that};fluid.singleTransformToFull=function(singleTransform){var withPath=$.extend(true,{inputPath:""},singleTransform);return{"":{transform:withPath}}};fluid.model.relayConditions={initOnly:{includeSource:"init"},liveOnly:{excludeSource:"init"},never:{includeSource:[]},always:{}};fluid.model.parseRelayCondition=function(condition){if(condition==="initOnly"){fluid.log(fluid.logLevel.WARN,'The relay condition "initOnly" is deprecated: Please use the form \'includeSource: "init"\' instead')}else if(condition==="liveOnly"){fluid.log(fluid.logLevel.WARN,'The relay condition "initOnly" is deprecated: Please use the form \'excludeSource: "init"\' instead')}var exclusionRec;if(!condition){exclusionRec={}}else if(typeof condition==="string"){exclusionRec=fluid.model.relayConditions[condition];if(!exclusionRec){fluid.fail('Unrecognised model relay condition string "'+condition+'": the supported values are "never" or a record with members "includeSource" and/or "excludeSource"')}}else{exclusionRec=condition}return fluid.parseSourceExclusionSpec({},exclusionRec)};fluid.parseModelRelay=function(that,mrrec,key){var parsedSource=mrrec.source?fluid.parseValidModelReference(that,'modelRelay record member "source"',mrrec.source):{path:null,modelSegs:null};var parsedTarget=fluid.parseValidModelReference(that,'modelRelay record member "target"',mrrec.target);var namespace=mrrec.namespace||key;var transform=mrrec.singleTransform?fluid.singleTransformToFull(mrrec.singleTransform):mrrec.transform;if(!transform){fluid.fail('Cannot parse modelRelay record without element "singleTransform" or "transform":',mrrec)}var forwardCond=fluid.model.parseRelayCondition(mrrec.forward),backwardCond=fluid.model.parseRelayCondition(mrrec.backward);var transformPackage=fluid.makeTransformPackage(that,transform,parsedSource.path,parsedTarget.path,forwardCond,backwardCond,namespace,mrrec.priority);if(transformPackage.refCount===0){fluid.connectModelRelay(parsedSource.that||that,parsedSource.modelSegs,parsedTarget.that,parsedTarget.modelSegs,fluid.filterKeys(transformPackage,["forwardAdapter","backwardAdapter","namespace","priority"]))}else{if(parsedSource.modelSegs){fluid.fail('Error in model relay definition: If a relay transform has a model dependency, you can not specify a "source" entry - please instead enter this as "input" in the transform specification. Definition was ',mrrec," for component ",that)}fluid.connectModelRelay(parsedSource.that||that,parsedSource.modelSegs,parsedTarget.that,parsedTarget.modelSegs,transformPackage)}};fluid.parseImplicitRelay=function(that,modelRec,segs,options){var value;if(fluid.isIoCReference(modelRec)){var parsed=fluid.parseValidModelReference(that,"model reference from model (implicit relay)",modelRec,true);if(parsed.nonModel){value=fluid.getForComponent(parsed.that,parsed.segs)}else{++options.refCount;fluid.connectModelRelay(that,segs,parsed.that,parsed.modelSegs,options)}}else if(fluid.isPrimitive(modelRec)||!fluid.isPlainObject(modelRec)){value=modelRec}else if(modelRec.expander&&fluid.isPlainObject(modelRec.expander)){value=fluid.expandOptions(modelRec,that)}else{value=fluid.freshContainer(modelRec);fluid.each(modelRec,function(innerValue,key){segs.push(key);var innerTrans=fluid.parseImplicitRelay(that,innerValue,segs,options);if(innerTrans!==undefined){value[key]=innerTrans}segs.pop()})}return value};fluid.model.notifyExternal=function(transRec){var allChanges=transRec?fluid.values(transRec.externalChanges):[];fluid.sortByPriority(allChanges);for(var i=0;i<allChanges.length;++i){var change=allChanges[i];var targetApplier=change.args[5];if(!targetApplier.destroyed){change.listener.apply(null,change.args)}}fluid.clearLinkCounts(transRec,true)};fluid.model.commitRelays=function(instantiator,transactionId){var transRec=instantiator.modelTransactions[transactionId];fluid.each(transRec,function(transEl){if(transEl.transaction){transEl.transaction.commit("relay");transEl.transaction.reset()}})};fluid.model.updateRelays=function(instantiator,transactionId){var transRec=instantiator.modelTransactions[transactionId];var updates=0;fluid.sortByPriority(transRec.relays);fluid.each(transRec.relays,function(transEl){if(transEl.transaction.changeRecord.changes>0&&transEl.relayCount<2&&transEl.options.update){transEl.relayCount++;fluid.clearLinkCounts(transRec);transEl.options.update(transEl.transaction,transRec);++updates}});return updates};fluid.establishModelRelay=function(that,optionsModel,optionsML,optionsMR,applier){var shadow=fluid.shadowForComponent(that);if(!shadow.modelRelayEstablished){shadow.modelRelayEstablished=true}else{fluid.fail("FLUID-5887 failure: Model relay initialised twice on component",that)}fluid.mergeModelListeners(that,optionsML);var enlist=fluid.enlistModelComponent(that);fluid.each(optionsMR,function(mrrec,key){for(var i=0;i<mrrec.length;++i){fluid.parseModelRelay(that,mrrec[i],key)}});var initModels=fluid.transform(optionsModel,function(modelRec){return fluid.parseImplicitRelay(that,modelRec,[],{refCount:0,priority:"first"})});enlist.initModels=initModels;var instantiator=fluid.getInstantiator(that);function updateRelays(transaction){while(fluid.model.updateRelays(instantiator,transaction.id)>0){}}function commitRelays(transaction,applier,code){if(code!=="relay"){fluid.model.commitRelays(instantiator,transaction.id)}}function concludeTransaction(transaction,applier,code){if(code!=="relay"){fluid.model.notifyExternal(instantiator.modelTransactions[transaction.id]);delete instantiator.modelTransactions[transaction.id]}}applier.preCommit.addListener(updateRelays);applier.preCommit.addListener(commitRelays);applier.postCommit.addListener(concludeTransaction);return null};fluid.defaults("fluid.modelComponent",{gradeNames:["fluid.component"],changeApplierOptions:{relayStyle:true,cullUnchanged:true},members:{model:"@expand:fluid.initRelayModel({that}, {that}.modelRelay)",applier:"@expand:fluid.makeHolderChangeApplier({that}, {that}.options.changeApplierOptions)",modelRelay:"@expand:fluid.establishModelRelay({that}, {that}.options.model, {that}.options.modelListeners, {that}.options.modelRelay, {that}.applier)"},mergePolicy:{model:{noexpand:true,func:fluid.arrayConcatPolicy},modelListeners:fluid.makeMergeListenersPolicy(fluid.arrayConcatPolicy),modelRelay:fluid.makeMergeListenersPolicy(fluid.arrayConcatPolicy,true)}});fluid.modelChangedToChange=function(args){return{value:args[0],oldValue:args[1],path:args[2],transaction:args[4]}};fluid.event.invokeListener=function(listener,args,localRecord,mergeRecord){if(typeof listener==="string"){listener=fluid.event.resolveListener(listener)}return listener.apply(null,args,localRecord,mergeRecord)};fluid.resolveModelListener=function(that,record){var togo=function(){if(fluid.isDestroyed(that)){return}var change=fluid.modelChangedToChange(arguments);var args=arguments;var localRecord={change:change,arguments:args};var mergeRecord={source:Object.keys(change.transaction.sources)};if(record.args){args=fluid.expandOptions(record.args,that,{},localRecord)}fluid.event.invokeListener(record.listener,fluid.makeArray(args),localRecord,mergeRecord)};fluid.event.impersonateListener(record.listener,togo);return togo};fluid.registerModelListeners=function(that,record,paths,namespace){var func=fluid.resolveModelListener(that,record);fluid.each(record.byTarget,function(parsedArray){var parsed=parsedArray[0];var spec={listener:func,listenerId:fluid.allocateGuid(),segsArray:fluid.getMembers(parsedArray,"modelSegs"),pathArray:fluid.getMembers(parsedArray,"path"),includeSource:record.includeSource,excludeSource:record.excludeSource,priority:fluid.expandOptions(record.priority,that),transactional:true};spec=parsed.applier.modelChanged.addListener(spec,func,namespace,record.softNamespace);fluid.recordChangeListener(that,parsed.applier,func,spec.listenerId);function initModelEvent(){if(fluid.isModelComplete(parsed.that)){var trans=parsed.applier.initiate(null,"init");fluid.initModelEvent(that,parsed.applier,trans,[spec]);trans.commit()}}if(that!==parsed.that&&!fluid.isModelComplete(that)){var onCreate=fluid.getForComponent(that,["events","onCreate"]);onCreate.addListener(initModelEvent)}})};fluid.mergeModelListeners=function(that,listeners){fluid.each(listeners,function(value,key){if(typeof value==="string"){value={funcName:value}}var records=fluid.event.resolveListenerRecord(value,that,"modelListeners",null,false).records;fluid.each(records,function(record){record.byTarget={};var paths=fluid.makeArray(record.path===undefined?key:record.path);fluid.each(paths,function(path){var parsed=fluid.parseValidModelReference(that,"modelListeners entry",path);fluid.pushArray(record.byTarget,parsed.that.id,parsed)});var namespace=(record.namespace&&!record.softNamespace?record.namespace:null)||(record.path!==undefined?key:null);fluid.registerModelListeners(that,record,paths,namespace)})})};fluid.fireChanges=function(applier,changes){for(var i=0;i<changes.length;++i){applier.fireChangeRequest(changes[i])}};fluid.model.isChangedPath=function(changeMap,segs){for(var i=0;i<=segs.length;++i){if(typeof changeMap==="string"){return true}if(i<segs.length&&changeMap){
changeMap=changeMap[segs[i]]}}return false};fluid.model.setChangedPath=function(options,segs,value){var notePath=function(record){segs.unshift(record);fluid.model.setSimple(options,segs,value);segs.shift()};if(!fluid.model.isChangedPath(options.changeMap,segs)){++options.changes;notePath("changeMap")}if(!fluid.model.isChangedPath(options.deltaMap,segs)){++options.deltas;notePath("deltaMap")}};fluid.model.fetchChangeChildren=function(target,i,segs,source,options){fluid.each(source,function(value,key){segs[i]=key;fluid.model.applyChangeStrategy(target,key,i,segs,value,options);segs.length=i})};fluid.model.isSameValue=function(a,b){if(typeof a!=="number"||typeof b!=="number"){return a===b}else{if(a===b||a!==a&&b!==b){return true}else{var relError=Math.abs((a-b)/b);return relError<1e-12}}};fluid.model.applyChangeStrategy=function(target,name,i,segs,source,options){var targetSlot=target[name];var sourceCode=fluid.typeCode(source);var targetCode=fluid.typeCode(targetSlot);var changedValue=fluid.NO_VALUE;if(sourceCode==="primitive"){if(!fluid.model.isSameValue(targetSlot,source)){changedValue=source;++options.unchanged}}else if(targetCode!==sourceCode||sourceCode==="array"&&source.length!==targetSlot.length){changedValue=fluid.freshContainer(source)}if(changedValue!==fluid.NO_VALUE){target[name]=changedValue;if(options.changeMap){fluid.model.setChangedPath(options,segs,options.inverse?"DELETE":"ADD")}}if(sourceCode!=="primitive"){fluid.model.fetchChangeChildren(target[name],i+1,segs,source,options)}};fluid.model.stepTargetAccess=function(target,type,segs,startpos,endpos,options){for(var i=startpos;i<endpos;++i){if(!target){continue}var oldTrunk=target[segs[i]];target=fluid.model.traverseWithStrategy(target,segs,i,options[type==="ADD"?"resolverSetConfig":"resolverGetConfig"],segs.length-i-1);if(oldTrunk!==target&&options.changeMap){fluid.model.setChangedPath(options,segs.slice(0,i+1),"ADD")}}return{root:target,last:segs[endpos]}};fluid.model.defaultAccessorConfig=function(options){options=options||{};options.resolverSetConfig=options.resolverSetConfig||fluid.model.escapedSetConfig;options.resolverGetConfig=options.resolverGetConfig||fluid.model.escapedGetConfig;return options};fluid.model.applyHolderChangeRequest=function(holder,request,options){options=fluid.model.defaultAccessorConfig(options);options.deltaMap=options.changeMap?{}:null;options.deltas=0;var length=request.segs.length;var pen,atRoot=length===0;if(atRoot){pen={root:holder,last:"model"}}else{if(!holder.model){holder.model={};fluid.model.setChangedPath(options,[],options.inverse?"DELETE":"ADD")}pen=fluid.model.stepTargetAccess(holder.model,request.type,request.segs,0,length-1,options)}if(request.type==="ADD"){var value=request.value;var segs=fluid.makeArray(request.segs);fluid.model.applyChangeStrategy(pen.root,pen.last,length-1,segs,value,options,atRoot)}else if(request.type==="DELETE"){if(pen.root&&pen.root[pen.last]!==undefined){delete pen.root[pen.last];if(options.changeMap){fluid.model.setChangedPath(options,request.segs,"DELETE")}}}else{fluid.fail("Unrecognised change type of "+request.type)}return options.deltas?options.deltaMap:null};fluid.model.diff=function(modela,modelb,options){options=options||{changes:0,unchanged:0,changeMap:{}};var typea=fluid.typeCode(modela);var typeb=fluid.typeCode(modelb);var togo;if(typea==="primitive"&&typeb==="primitive"){togo=fluid.model.isSameValue(modela,modelb)}else if(typea==="primitive"^typeb==="primitive"){togo=false}else{var holdera={model:fluid.copy(modela)};fluid.model.applyHolderChangeRequest(holdera,{value:modelb,segs:[],type:"ADD"},options);var holderb={model:fluid.copy(modelb)};options.inverse=true;fluid.model.applyHolderChangeRequest(holderb,{value:modela,segs:[],type:"ADD"},options);togo=options.changes===0}if(togo===false&&options.changes===0){options.changes=1;options.changeMap=modelb===undefined?"DELETE":"ADD"}else if(togo===true&&options.unchanged===0){options.unchanged=1}return togo};fluid.matchChanges=function(changeMap,specSegs,newHolder){var root=newHolder.model;var map=changeMap;var outSegs=["model"];var wildcard=false;var togo=[];for(var i=0;i<specSegs.length;++i){var seg=specSegs[i];if(seg==="*"){if(i===specSegs.length-1){wildcard=true}else{fluid.fail("Wildcard specification in modelChanged listener is only supported for the final path segment: "+specSegs.join("."))}}else{outSegs.push(seg);map=fluid.isPrimitive(map)?map:map[seg];root=root?root[seg]:undefined}}if(map){if(wildcard){fluid.each(root,function(value,key){togo.push(outSegs.concat(key))})}else{togo.push(outSegs)}}return togo};fluid.storeExternalChange=function(transRec,applier,invalidPath,spec,args){var pathString=applier.composeSegments.apply(null,invalidPath);var keySegs=[applier.holder.id,spec.listenerId,spec.wildcard?pathString:""];var keyString=keySegs.join("|");transRec.externalChanges[keyString]={listener:spec.listener,namespace:spec.namespace,priority:spec.priority,args:args}};fluid.notifyModelChanges=function(listeners,changeMap,newHolder,oldHolder,changeRequest,transaction,applier,that){if(!listeners){return}var transRec=transaction&&fluid.getModelTransactionRec(that,transaction.id);for(var i=0;i<listeners.length;++i){var spec=listeners[i];var multiplePaths=spec.segsArray.length>1;for(var j=0;j<spec.segsArray.length;++j){var invalidPaths=fluid.matchChanges(changeMap,spec.segsArray[j],newHolder);for(var k=0;k<invalidPaths.length;++k){if(applier.destroyed){return}var invalidPath=invalidPaths[k];spec.listener=fluid.event.resolveListener(spec.listener);var args=[multiplePaths?newHolder.model:fluid.model.getSimple(newHolder,invalidPath),multiplePaths?oldHolder.model:fluid.model.getSimple(oldHolder,invalidPath),multiplePaths?[]:invalidPath.slice(1),changeRequest,transaction,applier];if(!spec.isRelay){var isNull=fluid.model.diff(args[0],args[1]);if(isNull){continue}var sourceExcluded=fluid.isExcludedChangeSource(transaction,spec);if(sourceExcluded){continue}}if(transRec&&!spec.isRelay&&spec.transactional){fluid.storeExternalChange(transRec,applier,invalidPath,spec,args)}else{spec.listener.apply(null,args)}}}}};fluid.bindELMethods=function(applier){applier.parseEL=function(EL){return fluid.model.pathToSegments(EL,applier.options.resolverSetConfig)};applier.composeSegments=function(){return applier.options.resolverSetConfig.parser.compose.apply(null,arguments)}};fluid.initModelEvent=function(that,applier,trans,listeners){fluid.notifyModelChanges(listeners,"ADD",trans.oldHolder,fluid.emptyHolder,null,trans,applier,that)};fluid.emptyHolder=fluid.freezeRecursive({model:undefined});fluid.preFireChangeRequest=function(applier,changeRequest){if(!changeRequest.type){changeRequest.type="ADD"}changeRequest.segs=changeRequest.segs||applier.parseEL(changeRequest.path)};fluid.bindRequestChange=function(that){that.change=function(path,value,type,source){var changeRequest={path:path,value:value,type:type,source:source};that.fireChangeRequest(changeRequest)}};fluid.isObjectSimple=function(totest){return Object.prototype.toString.call(totest)==="[object Object]"};fluid.mergeChangeSources=function(target,globalSources){if(fluid.isObjectSimple(globalSources)){fluid.extend(target,globalSources)}else{fluid.each(fluid.makeArray(globalSources),function(globalSource){target[globalSource]=true})}};fluid.ChangeApplier=function(){};fluid.makeHolderChangeApplier=function(holder,options){options=fluid.model.defaultAccessorConfig(options);var applierId=fluid.allocateGuid();var that=new fluid.ChangeApplier;var name=fluid.isComponent(holder)?"ChangeApplier for component "+fluid.dumpThat(holder):"ChangeApplier with id "+applierId;$.extend(that,{applierId:applierId,holder:holder,listeners:fluid.makeEventFirer({name:"Internal change listeners for "+name}),transListeners:fluid.makeEventFirer({name:"External change listeners for "+name}),options:options,modelChanged:{},preCommit:fluid.makeEventFirer({name:"preCommit event for "+name}),postCommit:fluid.makeEventFirer({name:"postCommit event for "+name})});that.destroy=function(){that.preCommit.destroy();that.postCommit.destroy();that.destroyed=true};that.modelChanged.addListener=function(spec,listener,namespace,softNamespace){if(typeof spec==="string"){spec={path:spec}}else{spec=fluid.copy(spec)}spec.listenerId=spec.listenerId||fluid.allocateGuid();spec.namespace=namespace;spec.softNamespace=softNamespace;if(typeof listener==="string"){listener={globalName:listener}}spec.listener=listener;if(spec.transactional!==false){spec.transactional=true}if(!spec.segsArray){if(spec.path!==undefined){spec.segs=spec.segs||that.parseEL(spec.path)}if(!spec.segsArray){spec.segsArray=[spec.segs]}}fluid.parseSourceExclusionSpec(spec,spec);spec.wildcard=fluid.accumulate(fluid.transform(spec.segsArray,function(segs){return fluid.contains(segs,"*")}),fluid.add,0);if(spec.wildcard&&spec.segsArray.length>1){fluid.fail("Error in model listener specification ",spec," - you may not supply a wildcard pattern as one of a set of multiple paths to be matched")}var firer=that[spec.transactional?"transListeners":"listeners"];firer.addListener(spec);return spec};that.modelChanged.removeListener=function(listener){that.listeners.removeListener(listener);that.transListeners.removeListener(listener)};that.fireChangeRequest=function(changeRequest){var ation=that.initiate("local",changeRequest.source);ation.fireChangeRequest(changeRequest);ation.commit()};that.initiate=function(localSource,globalSources,transactionId){localSource=globalSources==="init"?null:localSource||"local";var defeatPost=localSource==="relay";var trans={instanceId:fluid.allocateGuid(),id:transactionId||fluid.allocateGuid(),changeRecord:{resolverSetConfig:options.resolverSetConfig,resolverGetConfig:options.resolverGetConfig},reset:function(){trans.oldHolder=holder;trans.newHolder={model:fluid.copy(holder.model)};trans.changeRecord.changes=0;trans.changeRecord.unchanged=0;trans.changeRecord.changeMap={}},commit:function(code){that.preCommit.fire(trans,that,code);if(trans.changeRecord.changes>0){var oldHolder={model:holder.model};holder.model=trans.newHolder.model;fluid.notifyModelChanges(that.transListeners.sortedListeners,trans.changeRecord.changeMap,holder,oldHolder,null,trans,that,holder)}if(!defeatPost){that.postCommit.fire(trans,that,code)}},fireChangeRequest:function(changeRequest){fluid.preFireChangeRequest(that,changeRequest);changeRequest.transactionId=trans.id;var deltaMap=fluid.model.applyHolderChangeRequest(trans.newHolder,changeRequest,trans.changeRecord);fluid.notifyModelChanges(that.listeners.sortedListeners,deltaMap,trans.newHolder,holder,changeRequest,trans,that,holder)},hasChangeSource:function(source){return trans.fullSources[source]}};var transRec=fluid.getModelTransactionRec(holder,trans.id);if(transRec){fluid.mergeChangeSources(transRec.sources,globalSources);trans.sources=transRec.sources;trans.fullSources=Object.create(transRec.sources);trans.fullSources[localSource]=true}trans.reset();fluid.bindRequestChange(trans);return trans};fluid.bindRequestChange(that);fluid.bindELMethods(that);return that}})(jQuery,fluid_2_0_0);var fluid_2_0_0=fluid_2_0_0||{};var fluid=fluid||fluid_2_0_0;(function($,fluid){"use strict";fluid.registerNamespace("fluid.model.transform");fluid.defaults("fluid.transformFunction",{gradeNames:"fluid.function"});fluid.defaults("fluid.standardInputTransformFunction",{gradeNames:"fluid.transformFunction"});fluid.defaults("fluid.standardOutputTransformFunction",{gradeNames:"fluid.transformFunction"});fluid.defaults("fluid.multiInputTransformFunction",{gradeNames:"fluid.transformFunction"});fluid.defaults("fluid.standardTransformFunction",{gradeNames:["fluid.standardInputTransformFunction","fluid.standardOutputTransformFunction"]});fluid.defaults("fluid.lens",{gradeNames:"fluid.transformFunction",invertConfiguration:null});fluid.model.transform.pathToRule=function(inputPath){return{transform:{type:"fluid.transforms.value",inputPath:inputPath}}};fluid.model.transform.literalValueToRule=function(input){return{transform:{type:"fluid.transforms.literalValue",input:input}}};fluid.model.composePaths=function(prefix,suffix){prefix=prefix===0?"0":prefix||"";suffix=suffix===0?"0":suffix||"";return!prefix?suffix:!suffix?prefix:prefix+"."+suffix};fluid.model.transform.accumulateInputPath=function(inputPath,transformer,paths){if(inputPath!==undefined){paths.push(fluid.model.composePaths(transformer.inputPrefix,inputPath))}};fluid.model.transform.accumulateStandardInputPath=function(input,transformSpec,transformer,paths){fluid.model.transform.getValue(undefined,transformSpec[input],transformer);fluid.model.transform.accumulateInputPath(transformSpec[input+"Path"],transformer,paths)};fluid.model.transform.accumulateMultiInputPaths=function(inputVariables,transformSpec,transformer,paths){fluid.each(inputVariables,function(v,k){fluid.model.transform.accumulateStandardInputPath(k,transformSpec,transformer,paths)})};fluid.model.transform.getValue=function(inputPath,value,transformer){var togo;if(inputPath!==undefined){togo=fluid.get(transformer.source,fluid.model.composePaths(transformer.inputPrefix,inputPath),transformer.resolverGetConfig)}if(togo===undefined){togo=fluid.isPrimitive(value)?value:"literalValue"in value?value.literalValue:value.transform===undefined?value:transformer.expand(value)}return togo};fluid.model.transform.NONDEFAULT_OUTPUT_PATH_RETURN={};fluid.model.transform.setValue=function(userOutputPath,value,transformer){var toset=fluid.copy(value);var outputPath=fluid.model.composePaths(transformer.outputPrefix,userOutputPath);if(toset!==undefined){transformer.applier.change(outputPath,toset)}return userOutputPath?fluid.model.transform.NONDEFAULT_OUTPUT_PATH_RETURN:toset};fluid.model.transform.resolveParam=function(transformSpec,transformer,key,def){var val=fluid.model.transform.getValue(transformSpec[key+"Path"],transformSpec[key],transformer);return val!==undefined?val:def};fluid.model.transform.matchValue=function(expected,actual,partialMatches){var stats={changes:0,unchanged:0,changeMap:{}};fluid.model.diff(expected,actual,stats);return stats.unchanged===0?0:partialMatches?0xffffff000000-16777216*stats.changes+stats.unchanged:stats.changes?0:0xffffff000000+stats.unchanged};fluid.model.transform.invertPaths=function(transformSpec,transformer){var oldOutput=fluid.model.composePaths(transformer.outputPrefix,transformSpec.outputPath);transformSpec.outputPath=fluid.model.composePaths(transformer.inputPrefix,transformSpec.inputPath);transformSpec.inputPath=oldOutput;return transformSpec};fluid.model.transform.prefixApplier=function(transformSpec,transformer){if(transformSpec.inputPrefix){transformer.inputPrefixOp.push(transformSpec.inputPrefix)}if(transformSpec.outputPrefix){transformer.outputPrefixOp.push(transformSpec.outputPrefix)}transformer.expand(transformSpec.input);if(transformSpec.inputPrefix){transformer.inputPrefixOp.pop()}if(transformSpec.outputPrefix){transformer.outputPrefixOp.pop()}};fluid.defaults("fluid.model.transform.prefixApplier",{gradeNames:["fluid.transformFunction"]});fluid.model.makePathStack=function(transform,prefixName){var stack=transform[prefixName+"Stack"]=[];transform[prefixName]="";return{push:function(prefix){var newPath=fluid.model.composePaths(transform[prefixName],prefix);stack.push(transform[prefixName]);transform[prefixName]=newPath},pop:function(){transform[prefixName]=stack.pop()}}};fluid.model.transform.doTransform=function(transformSpec,transformer,transformOpts){var expdef=transformOpts.defaults;var transformFn=fluid.getGlobalValue(transformOpts.typeName);if(typeof transformFn!=="function"){fluid.fail("Transformation record specifies transformation function with name "+transformSpec.type+" which is not a function - ",transformFn)}if(!fluid.hasGrade(expdef,"fluid.transformFunction")){expdef=fluid.defaults("fluid.standardTransformFunction")}var transformArgs=[transformSpec,transformer];if(fluid.hasGrade(expdef,"fluid.multiInputTransformFunction")){var inputs={};fluid.each(expdef.inputVariables,function(v,k){inputs[k]=function(){var input=fluid.model.transform.getValue(transformSpec[k+"Path"],transformSpec[k],transformer);input=input===undefined&&v!==null?v:input;return input}});transformArgs.unshift(inputs)}if(fluid.hasGrade(expdef,"fluid.standardInputTransformFunction")){if(!("input"in transformSpec)&&!("inputPath"in transformSpec)){fluid.fail('Error in transform specification. Either "input" or "inputPath" must be specified for a standardInputTransformFunction: received ',transformSpec)}var expanded=fluid.model.transform.getValue(transformSpec.inputPath,transformSpec.input,transformer);transformArgs.unshift(expanded);if(expanded===undefined){return undefined}}var transformed=transformFn.apply(null,transformArgs);if(fluid.hasGrade(expdef,"fluid.standardOutputTransformFunction")){var outputPath=transformSpec.outputPath!==undefined?transformSpec.outputPath:transformOpts.doOutput?"":undefined;if(outputPath!==undefined&&transformed!==undefined){fluid.model.transform.setValue(transformSpec.outputPath,transformed,transformer);transformed=undefined}}return transformed};var globalAccept=[];fluid.registerNamespace("fluid.pathUtil");fluid.pathUtil.getPathSegment=function(path,i){fluid.pathUtil.getPathSegmentImpl(globalAccept,path,i);return globalAccept[0]};fluid.pathUtil.getHeadPath=function(path){return fluid.pathUtil.getPathSegment(path,0)};fluid.pathUtil.getFromHeadPath=function(path){var firstdot=fluid.pathUtil.getPathSegmentImpl(null,path,0);return firstdot===path.length?"":path.substring(firstdot+1)};fluid.pathUtil.matchPath=function(spec,path,exact){var togo=[];while(true){if(path===""^spec===""&&exact){return null}if(!spec||!path){break}var spechead=fluid.pathUtil.getHeadPath(spec);var pathhead=fluid.pathUtil.getHeadPath(path);if(spechead!=="*"&&spechead!==pathhead){return null}togo.push(pathhead);spec=fluid.pathUtil.getFromHeadPath(spec);path=fluid.pathUtil.getFromHeadPath(path)}return togo};fluid.model.transform.expandWildcards=function(transformer,source){fluid.each(source,function(value,key){var q=transformer.queuedTransforms;transformer.pathOp.push(fluid.pathUtil.escapeSegment(key.toString()));for(var i=0;i<q.length;++i){if(fluid.pathUtil.matchPath(q[i].matchPath,transformer.path,true)){var esCopy=fluid.copy(q[i].transformSpec);if(esCopy.inputPath===undefined||fluid.model.transform.hasWildcard(esCopy.inputPath)){esCopy.inputPath=""}transformer.inputPrefixOp.push(transformer.path);transformer.outputPrefixOp.push(transformer.path);var transformOpts=fluid.model.transform.lookupType(esCopy.type);var result=fluid.model.transform.doTransform(esCopy,transformer,transformOpts);if(result!==undefined){fluid.model.transform.setValue(null,result,transformer)}transformer.outputPrefixOp.pop();transformer.inputPrefixOp.pop()}}if(!fluid.isPrimitive(value)){fluid.model.transform.expandWildcards(transformer,value)}transformer.pathOp.pop()})};fluid.model.transform.hasWildcard=function(path){return typeof path==="string"&&path.indexOf("*")!==-1};fluid.model.transform.maybePushWildcard=function(transformSpec,transformer){var hw=fluid.model.transform.hasWildcard;var matchPath;if(hw(transformSpec.inputPath)){matchPath=fluid.model.composePaths(transformer.inputPrefix,transformSpec.inputPath)}else if(hw(transformer.outputPrefix)||hw(transformSpec.outputPath)){matchPath=fluid.model.composePaths(transformer.outputPrefix,transformSpec.outputPath)}if(matchPath){transformer.queuedTransforms.push({transformSpec:transformSpec,outputPrefix:transformer.outputPrefix,inputPrefix:transformer.inputPrefix,matchPath:matchPath});return true}return false};fluid.model.sortByKeyLength=function(inObject){var keys=fluid.keys(inObject);return keys.sort(fluid.compareStringLength(true))};fluid.model.transform.handleTransformStrategy=function(transformSpec,transformer,transformOpts){if(fluid.model.transform.maybePushWildcard(transformSpec,transformer)){return}else{return fluid.model.transform.doTransform(transformSpec,transformer,transformOpts)}};fluid.model.transform.handleInvertStrategy=function(transformSpec,transformer,transformOpts){transformSpec=fluid.copy(transformSpec);if(fluid.hasGrade(transformOpts.defaults,"fluid.standardTransformFunction")){transformSpec=fluid.model.transform.invertPaths(transformSpec,transformer)}var invertor=transformOpts.defaults&&transformOpts.defaults.invertConfiguration;if(invertor){var inverted=fluid.invokeGlobalFunction(invertor,[transformSpec,transformer]);transformer.inverted.push(inverted)}};fluid.model.transform.handleCollectStrategy=function(transformSpec,transformer,transformOpts){var defaults=transformOpts.defaults;var standardInput=fluid.hasGrade(defaults,"fluid.standardInputTransformFunction");var multiInput=fluid.hasGrade(defaults,"fluid.multiInputTransformFunction");if(standardInput){fluid.model.transform.accumulateStandardInputPath("input",transformSpec,transformer,transformer.inputPaths)}if(multiInput){fluid.model.transform.accumulateMultiInputPaths(defaults.inputVariables,transformSpec,transformer,transformer.inputPaths)}if(!multiInput&&!standardInput){var collector=defaults.collectInputPaths;if(collector){var collected=fluid.makeArray(fluid.invokeGlobalFunction(collector,[transformSpec,transformer]));transformer.inputPaths=transformer.inputPaths.concat(collected)}}};fluid.model.transform.lookupType=function(typeName,transformSpec){if(!typeName){fluid.fail("Transformation record is missing a type name: ",transformSpec)}if(typeName.indexOf(".")===-1){typeName="fluid.transforms."+typeName}var defaults=fluid.defaults(typeName);return{defaults:defaults,typeName:typeName}};fluid.model.transform.processRule=function(rule,transformer){if(typeof rule==="string"){rule=fluid.model.transform.pathToRule(rule)}else if(rule.literalValue!==undefined){rule=fluid.model.transform.literalValueToRule(rule.literalValue)}var togo;if(rule.transform){var transformSpec,transformOpts;if(fluid.isArrayable(rule.transform)){var transforms=rule.transform;togo=undefined;for(var i=0;i<transforms.length;++i){transformSpec=transforms[i];transformOpts=fluid.model.transform.lookupType(transformSpec.type);transformer.transformHandler(transformSpec,transformer,transformOpts)}}else{transformSpec=rule.transform;transformOpts=fluid.model.transform.lookupType(transformSpec.type);togo=transformer.transformHandler(transformSpec,transformer,transformOpts)}}if(fluid.isArrayable(rule)){transformer.collectedFlatSchemaOpts=transformer.collectedFlatSchemaOpts||{};transformer.collectedFlatSchemaOpts[transformer.outputPrefix]="array"}fluid.each(rule,function(value,key){if(key!=="transform"){transformer.outputPrefixOp.push(key);var togo=transformer.expand(value,transformer);if(togo!==undefined){fluid.model.transform.setValue(null,togo,transformer);togo=undefined}transformer.outputPrefixOp.pop()}});return togo};fluid.model.transform.makeStrategy=function(transformer,handleFn,transformFn){transformFn=transformFn||fluid.model.transform.processRule;transformer.expand=function(rules){return transformFn(rules,transformer)};transformer.outputPrefixOp=fluid.model.makePathStack(transformer,"outputPrefix");transformer.inputPrefixOp=fluid.model.makePathStack(transformer,"inputPrefix");transformer.transformHandler=handleFn};fluid.model.transform.invertConfiguration=function(rules){var transformer={inverted:[]};fluid.model.transform.makeStrategy(transformer,fluid.model.transform.handleInvertStrategy);transformer.expand(rules);return{transform:transformer.inverted}};fluid.model.transform.collectInputPaths=function(rules){var transformer={inputPaths:[]};fluid.model.transform.makeStrategy(transformer,fluid.model.transform.handleCollectStrategy);transformer.expand(rules);return transformer.inputPaths};fluid.model.transform.flatSchemaStrategy=function(flatSchema,getConfig){var keys=fluid.model.sortByKeyLength(flatSchema);return function(root,segment,index,segs){var path=getConfig.parser.compose.apply(null,segs.slice(0,index));for(var i=0;i<keys.length;++i){var key=keys[i];if(fluid.pathUtil.matchPath(key,path,true)!==null){return flatSchema[key]}}}};fluid.model.transform.defaultSchemaValue=function(schemaValue){var type=fluid.isPrimitive(schemaValue)?schemaValue:schemaValue.type;return type==="array"?[]:{}};fluid.model.transform.isomorphicSchemaStrategy=function(source,getConfig){return function(root,segment,index,segs){var existing=fluid.get(source,segs.slice(0,index),getConfig);return fluid.isArrayable(existing)?"array":"object"}};fluid.model.transform.decodeStrategy=function(source,options,getConfig){if(options.isomorphic){return fluid.model.transform.isomorphicSchemaStrategy(source,getConfig)}else if(options.flatSchema){return fluid.model.transform.flatSchemaStrategy(options.flatSchema,getConfig)}};fluid.model.transform.schemaToCreatorStrategy=function(strategy){return function(root,segment,index,segs){if(root[segment]===undefined){var schemaValue=strategy(root,segment,index,segs);root[segment]=fluid.model.transform.defaultSchemaValue(schemaValue);return root[segment]}}};fluid.model.transform.sequence=function(source,rules,options){for(var i=0;i<rules.length;++i){source=fluid.model.transform(source,rules[i],options)}return source};fluid.model.compareByPathLength=function(changea,changeb){var pdiff=changea.path.length-changeb.path.length;return pdiff===0?changea.sequence-changeb.sequence:pdiff};fluid.model.fireSortedChanges=function(changes,applier){changes.sort(fluid.model.compareByPathLength);fluid.fireChanges(applier,changes)};fluid.model.transformWithRules=function(source,rules,options){options=options||{};var getConfig=fluid.model.escapedGetConfig;var setConfig=fluid.model.escapedSetConfig;var schemaStrategy=fluid.model.transform.decodeStrategy(source,options,getConfig);var transformer={source:source,target:{model:schemaStrategy?fluid.model.transform.defaultSchemaValue(schemaStrategy(null,"",0,[""])):{}},resolverGetConfig:getConfig,resolverSetConfig:setConfig,collectedFlatSchemaOpts:undefined,queuedChanges:[],queuedTransforms:[]};fluid.model.transform.makeStrategy(transformer,fluid.model.transform.handleTransformStrategy);transformer.applier={fireChangeRequest:function(changeRequest){changeRequest.sequence=transformer.queuedChanges.length;transformer.queuedChanges.push(changeRequest)}};fluid.bindRequestChange(transformer.applier);transformer.expand(rules);var rootSetConfig=fluid.copy(setConfig);if(transformer.collectedFlatSchemaOpts!==undefined){$.extend(transformer.collectedFlatSchemaOpts,options.flatSchema);schemaStrategy=fluid.model.transform.flatSchemaStrategy(transformer.collectedFlatSchemaOpts,getConfig)}rootSetConfig.strategies=[fluid.model.defaultFetchStrategy,schemaStrategy?fluid.model.transform.schemaToCreatorStrategy(schemaStrategy):fluid.model.defaultCreatorStrategy];transformer.finalApplier=options.finalApplier||fluid.makeHolderChangeApplier(transformer.target,{resolverSetConfig:rootSetConfig});if(transformer.queuedTransforms.length>0){transformer.typeStack=[];transformer.pathOp=fluid.model.makePathStack(transformer,"path");fluid.model.transform.expandWildcards(transformer,source)}fluid.model.fireSortedChanges(transformer.queuedChanges,transformer.finalApplier);return transformer.target.model};$.extend(fluid.model.transformWithRules,fluid.model.transform);fluid.model.transform=fluid.model.transformWithRules;fluid.transformOne=function(rules){return{transformOptions:{transformer:"fluid.model.transformWithRules",config:rules}}};fluid.transformMany=function(rules){return{transformOptions:{transformer:"fluid.model.transform.sequence",config:rules}}}})(jQuery,fluid_2_0_0);var fluid_2_0_0=fluid_2_0_0||{};var fluid=fluid||fluid_2_0_0;(function($,fluid){"use strict";fluid.registerNamespace("fluid.model.transform");fluid.registerNamespace("fluid.transforms");fluid.defaults("fluid.transforms.value",{gradeNames:"fluid.standardTransformFunction",invertConfiguration:"fluid.identity"});fluid.transforms.value=fluid.identity;fluid.transforms.identity=fluid.transforms.value;fluid.defaults("fluid.transforms.identity",{gradeNames:"fluid.transforms.value"});fluid.transforms.invertToIdentity=function(transformSpec){transformSpec.type="fluid.transforms.identity";return transformSpec};fluid.defaults("fluid.transforms.literalValue",{gradeNames:"fluid.standardOutputTransformFunction"});fluid.transforms.literalValue=function(transformSpec){return transformSpec.input};fluid.defaults("fluid.transforms.stringToNumber",{gradeNames:["fluid.standardTransformFunction","fluid.lens"],invertConfiguration:"fluid.transforms.stringToNumber.invert"});fluid.transforms.stringToNumber=function(value){var newValue=Number(value);return isNaN(newValue)?undefined:newValue};fluid.transforms.stringToNumber.invert=function(transformSpec){transformSpec.type="fluid.transforms.numberToString";return transformSpec};fluid.defaults("fluid.transforms.numberToString",{gradeNames:["fluid.standardTransformFunction","fluid.lens"],invertConfiguration:"fluid.transforms.numberToString.invert"});fluid.transforms.numberToString=function(value){return typeof value!=="number"?undefined:""+value};fluid.transforms.numberToString.invert=function(transformSpec){transformSpec.type="fluid.transforms.stringToNumber";return transformSpec};fluid.defaults("fluid.transforms.count",{gradeNames:"fluid.standardTransformFunction"});fluid.transforms.count=function(value){return fluid.makeArray(value).length};fluid.defaults("fluid.transforms.round",{gradeNames:["fluid.standardTransformFunction","fluid.lens"],invertConfiguration:"fluid.transforms.invertToIdentity"});fluid.transforms.round=function(value){return Math.round(value)};fluid.defaults("fluid.transforms.delete",{gradeNames:"fluid.transformFunction"});fluid.transforms["delete"]=function(transformSpec,transformer){var outputPath=fluid.model.composePaths(transformer.outputPrefix,transformSpec.outputPath);transformer.applier.change(outputPath,null,"DELETE")};fluid.defaults("fluid.transforms.firstValue",{gradeNames:"fluid.standardOutputTransformFunction"});fluid.transforms.firstValue=function(transformSpec,transformer){if(!transformSpec.values||!transformSpec.values.length){fluid.fail('firstValue transformer requires an array of values at path named "values", supplied',transformSpec)}for(var i=0;i<transformSpec.values.length;i++){var value=transformSpec.values[i];var expanded=transformer.expand(value);if(expanded!==undefined){return expanded}}};fluid.defaults("fluid.transforms.linearScale",{gradeNames:["fluid.multiInputTransformFunction","fluid.standardTransformFunction","fluid.lens"],invertConfiguration:"fluid.transforms.linearScale.invert",inputVariables:{factor:1,offset:0}});fluid.transforms.linearScale=function(input,extraInputs){var factor=extraInputs.factor();var offset=extraInputs.offset();if(typeof input!=="number"||typeof factor!=="number"||typeof offset!=="number"){return undefined}return input*factor+offset};fluid.transforms.linearScale.invert=function(transformSpec){delete transformSpec.factorPath;delete transformSpec.offsetPath;if(transformSpec.factor!==undefined){transformSpec.factor=transformSpec.factor===0?0:1/transformSpec.factor}if(transformSpec.offset!==undefined){transformSpec.offset=-transformSpec.offset*(transformSpec.factor!==undefined?transformSpec.factor:1)}return transformSpec};fluid.defaults("fluid.transforms.binaryOp",{gradeNames:["fluid.multiInputTransformFunction","fluid.standardOutputTransformFunction"],inputVariables:{left:null,right:null}});fluid.transforms.binaryLookup={"===":function(a,b){return fluid.model.isSameValue(a,b)},"!==":function(a,b){return!fluid.model.isSameValue(a,b)},"<=":function(a,b){return a<=b},"<":function(a,b){return a<b},">=":function(a,b){return a>=b},">":function(a,b){return a>b},"+":function(a,b){return a+b},"-":function(a,b){return a-b},"*":function(a,b){return a*b},"/":function(a,b){return a/b},"%":function(a,b){return a%b},"&&":function(a,b){return a&&b},"||":function(a,b){return a||b}};fluid.transforms.binaryOp=function(inputs,transformSpec,transformer){var left=inputs.left();var right=inputs.right();
var operator=fluid.model.transform.getValue(undefined,transformSpec.operator,transformer);var fun=fluid.transforms.binaryLookup[operator];return fun===undefined||left===undefined||right===undefined?undefined:fun(left,right)};fluid.defaults("fluid.transforms.condition",{gradeNames:["fluid.multiInputTransformFunction","fluid.standardOutputTransformFunction"],inputVariables:{true:null,false:null,condition:null}});fluid.transforms.condition=function(inputs){var condition=inputs.condition();if(condition===null){return undefined}return inputs[condition?"true":"false"]()};fluid.defaults("fluid.transforms.valueMapper",{gradeNames:["fluid.transformFunction","fluid.lens"],invertConfiguration:"fluid.transforms.valueMapper.invert",collectInputPaths:"fluid.transforms.valueMapper.collect"});fluid.model.transform.compareMatches=function(speca,specb){var matchDiff=specb.matchValue-speca.matchValue;return matchDiff===0?speca.index-specb.index:matchDiff};fluid.transforms.valueMapper=function(transformSpec,transformer){if(!transformSpec.match){fluid.fail('valueMapper requires an array or hash of matches at path named "match", supplied ',transformSpec)}var value=fluid.model.transform.getValue(transformSpec.defaultInputPath,undefined,transformer);var matchedEntry=fluid.isArrayable(transformSpec.match)?fluid.transforms.valueMapper.longFormMatch(value,transformSpec,transformer):transformSpec.match[value];if(matchedEntry===undefined){matchedEntry=transformSpec.noMatch}if(matchedEntry===undefined){return}var outputPath=matchedEntry.outputPath===undefined?transformSpec.defaultOutputPath:matchedEntry.outputPath;transformer.outputPrefixOp.push(outputPath);var outputValue;if(fluid.isPrimitive(matchedEntry)){outputValue=matchedEntry}else if(matchedEntry.outputUndefinedValue){outputValue=undefined}else{outputValue=fluid.model.transform.resolveParam(matchedEntry,transformer,"outputValue",undefined);outputValue=outputValue===undefined?transformSpec.defaultOutputValue:outputValue}if(typeof outputPath==="string"&&outputValue!==undefined){fluid.model.transform.setValue(undefined,outputValue,transformer,transformSpec.merge);outputValue=undefined}transformer.outputPrefixOp.pop();return outputValue};fluid.transforms.valueMapper.longFormMatch=function(valueFromDefaultPath,transformSpec,transformer){var o=transformSpec.match;if(o.length===0){fluid.fail("valueMapper supplied empty list of matches: ",transformSpec)}var matchPower=[];for(var i=0;i<o.length;++i){var option=o[i];var value=option.inputPath?fluid.model.transform.getValue(option.inputPath,undefined,transformer):valueFromDefaultPath;var matchValue=fluid.model.transform.matchValue(option.inputValue,value,option.partialMatches);matchPower[i]={index:i,matchValue:matchValue}}matchPower.sort(fluid.model.transform.compareMatches);return matchPower[0].matchValue<=0?undefined:o[matchPower[0].index]};fluid.transforms.valueMapper.invert=function(transformSpec,transformer){var match=[];var togo={type:"fluid.transforms.valueMapper",match:match};var isArray=fluid.isArrayable(transformSpec.match);togo.defaultInputPath=fluid.model.composePaths(transformer.outputPrefix,transformSpec.defaultOutputPath);togo.defaultOutputPath=fluid.model.composePaths(transformer.inputPrefix,transformSpec.defaultInputPath);var def=fluid.firstDefined;fluid.each(transformSpec.match,function(option,key){if(option.outputUndefinedValue===true){return}var outOption={};var origInputValue=def(isArray?option.inputValue:key,transformSpec.defaultInputValue);if(origInputValue===undefined){fluid.fail("Failure inverting configuration for valueMapper - inputValue could not be resolved for record "+key+": ",transformSpec)}outOption.outputValue=origInputValue;outOption.inputValue=!isArray&&fluid.isPrimitive(option)?option:def(option.outputValue,transformSpec.defaultOutputValue);if(option.outputPath){outOption.inputPath=fluid.model.composePaths(transformer.outputPrefix,def(option.outputPath,transformSpec.outputPath))}if(option.inputPath){outOption.outputPath=fluid.model.composePaths(transformer.inputPrefix,def(option.inputPath,transformSpec.inputPath))}match.push(outOption)});return togo};fluid.transforms.valueMapper.collect=function(transformSpec,transformer){var togo=[];fluid.model.transform.accumulateInputPath(transformSpec.defaultInputPath,transformer,togo);fluid.each(transformSpec.match,function(option){fluid.model.transform.accumulateInputPath(option.inputPath,transformer,togo)});return togo};fluid.defaults("fluid.transforms.arrayToSetMembership",{gradeNames:["fluid.standardTransformFunction","fluid.lens"],invertConfiguration:"fluid.transforms.arrayToSetMembership.invert"});fluid.transforms.arrayToSetMembership=function(value,transformSpec,transformer){var output={};var options=transformSpec.options;if(!value||!fluid.isArrayable(value)){fluid.fail("arrayToSetMembership didn't find array at inputPath nor passed as value.",transformSpec)}if(!options){fluid.fail("arrayToSetMembership requires an options block set")}if(transformSpec.presentValue===undefined){transformSpec.presentValue=true}if(transformSpec.missingValue===undefined){transformSpec.missingValue=false}fluid.each(options,function(outPath,key){var outVal=value.indexOf(key)!==-1?transformSpec.presentValue:transformSpec.missingValue;fluid.set(output,outPath,outVal,transformer.resolverSetConfig)});return output};fluid.transforms.arrayToSetMembership.invertWithType=function(transformSpec,transformer,newType){transformSpec.type=newType;var newOptions={};fluid.each(transformSpec.options,function(path,oldKey){newOptions[path]=oldKey});transformSpec.options=newOptions;return transformSpec};fluid.transforms.arrayToSetMembership.invert=function(transformSpec,transformer){return fluid.transforms.arrayToSetMembership.invertWithType(transformSpec,transformer,"fluid.transforms.setMembershipToArray")};fluid.defaults("fluid.transforms.setMembershipToArray",{gradeNames:["fluid.standardTransformFunction","fluid.lens"],invertConfiguration:"fluid.transforms.setMembershipToArray.invert"});fluid.transforms.setMembershipToArray=function(input,transformSpec,transformer){var options=transformSpec.options;if(!options){fluid.fail("setMembershipToArray requires an options block specified")}if(transformSpec.presentValue===undefined){transformSpec.presentValue=true}if(transformSpec.missingValue===undefined){transformSpec.missingValue=false}var outputArr=[];fluid.each(options,function(outputVal,key){var value=fluid.get(input,key,transformer.resolverGetConfig);if(value===transformSpec.presentValue){outputArr.push(outputVal)}});return outputArr};fluid.transforms.setMembershipToArray.invert=function(transformSpec,transformer){return fluid.transforms.arrayToSetMembership.invertWithType(transformSpec,transformer,"fluid.transforms.arrayToSetMembership")};fluid.model.transform.applyPaths=function(operation,pathOp,paths){for(var i=0;i<paths.length;++i){if(operation==="push"){pathOp.push(paths[i])}else{pathOp.pop()}}};fluid.model.transform.expandInnerValues=function(inputPath,outputPath,transformer,innerValues){var inputPrefixOp=transformer.inputPrefixOp;var outputPrefixOp=transformer.outputPrefixOp;var apply=fluid.model.transform.applyPaths;apply("push",inputPrefixOp,inputPath);apply("push",outputPrefixOp,outputPath);var expanded={};fluid.each(innerValues,function(innerValue){var expandedInner=transformer.expand(innerValue);if(!fluid.isPrimitive(expandedInner)){$.extend(true,expanded,expandedInner)}else{expanded=expandedInner}});apply("pop",outputPrefixOp,outputPath);apply("pop",inputPrefixOp,inputPath);return expanded};fluid.defaults("fluid.transforms.indexArrayByKey",{gradeNames:["fluid.standardTransformFunction","fluid.lens"],invertConfiguration:"fluid.transforms.indexArrayByKey.invert"});fluid.transforms.indexArrayByKey=function(arr,transformSpec,transformer){if(transformSpec.key===undefined){fluid.fail("indexArrayByKey requires a 'key' option.",transformSpec)}if(!fluid.isArrayable(arr)){fluid.fail("indexArrayByKey didn't find array at inputPath.",transformSpec)}var newHash={};var pivot=transformSpec.key;fluid.each(arr,function(v,k){var newKey=v[pivot];var keyType=typeof newKey;if(keyType!=="string"&&keyType!=="boolean"&&keyType!=="number"){fluid.fail("indexArrayByKey encountered untransformable array due to missing or invalid key",v)}var content=fluid.copy(v);delete content[pivot];if(transformSpec.innerValue){content=fluid.model.transform.expandInnerValues([transformer.inputPrefix,transformSpec.inputPath,k.toString()],[transformSpec.outputPath,newKey],transformer,transformSpec.innerValue)}newHash[newKey]=content});return newHash};fluid.transforms.indexArrayByKey.invert=function(transformSpec){transformSpec.type="fluid.transforms.deindexIntoArrayByKey";if(transformSpec.innerValue){var innerValue=transformSpec.innerValue;for(var i=0;i<innerValue.length;++i){innerValue[i]=fluid.model.transform.invertConfiguration(innerValue[i])}}return transformSpec};fluid.defaults("fluid.transforms.deindexIntoArrayByKey",{gradeNames:["fluid.standardTransformFunction","fluid.lens"],invertConfiguration:"fluid.transforms.deindexIntoArrayByKey.invert"});fluid.transforms.deindexIntoArrayByKey=function(hash,transformSpec,transformer){if(transformSpec.key===undefined){fluid.fail('deindexIntoArrayByKey requires a "key" option.',transformSpec)}var newArray=[];var pivot=transformSpec.key;fluid.each(hash,function(v,k){var content={};content[pivot]=k;if(transformSpec.innerValue){v=fluid.model.transform.expandInnerValues([transformSpec.inputPath,k],[transformSpec.outputPath,newArray.length.toString()],transformer,transformSpec.innerValue)}$.extend(true,content,v);newArray.push(content)});return newArray};fluid.transforms.deindexIntoArrayByKey.invert=function(transformSpec){transformSpec.type="fluid.transforms.indexArrayByKey";if(transformSpec.innerValue){var innerValue=transformSpec.innerValue;for(var i=0;i<innerValue.length;++i){innerValue[i]=fluid.model.transform.invertConfiguration(innerValue[i])}}return transformSpec};fluid.defaults("fluid.transforms.limitRange",{gradeNames:"fluid.standardTransformFunction"});fluid.transforms.limitRange=function(value,transformSpec){var min=transformSpec.min;if(min!==undefined){var excludeMin=transformSpec.excludeMin||0;min+=excludeMin;if(value<min){value=min}}var max=transformSpec.max;if(max!==undefined){var excludeMax=transformSpec.excludeMax||0;max-=excludeMax;if(value>max){value=max}}return value};fluid.defaults("fluid.transforms.indexOf",{gradeNames:["fluid.standardTransformFunction","fluid.lens"],invertConfiguration:"fluid.transforms.indexOf.invert"});fluid.transforms.indexOf=function(value,transformSpec){if(typeof transformSpec.notFound==="number"&&transformSpec.notFound>=0){fluid.fail("A positive number is not allowed as 'notFound' value for indexOf")}var offset=fluid.transforms.parseIndexationOffset(transformSpec.offset,"indexOf");var array=fluid.makeArray(transformSpec.array);var originalIndex=array.indexOf(value);return originalIndex===-1&&transformSpec.notFound?transformSpec.notFound:originalIndex+offset};fluid.transforms.indexOf.invert=function(transformSpec,transformer){var togo=fluid.transforms.invertArrayIndexation(transformSpec,transformer);togo.type="fluid.transforms.dereference";return togo};fluid.defaults("fluid.transforms.dereference",{gradeNames:["fluid.standardTransformFunction","fluid.lens"],invertConfiguration:"fluid.transforms.dereference.invert"});fluid.transforms.dereference=function(value,transformSpec){if(typeof value!=="number"){return undefined}var offset=fluid.transforms.parseIndexationOffset(transformSpec.offset,"dereference");var array=fluid.makeArray(transformSpec.array);var index=value+offset;return array[index]};fluid.transforms.dereference.invert=function(transformSpec,transformer){var togo=fluid.transforms.invertArrayIndexation(transformSpec,transformer);togo.type="fluid.transforms.indexOf";return togo};fluid.transforms.parseIndexationOffset=function(offset,transformName){var parsedOffset=0;if(offset!==undefined){parsedOffset=fluid.parseInteger(offset);if(isNaN(parsedOffset)){fluid.fail(transformName+' requires the value of "offset" to be an integer or a string that can be converted to an integer. '+offset+" is invalid.")}}return parsedOffset};fluid.transforms.invertArrayIndexation=function(transformSpec){if(!isNaN(Number(transformSpec.offset))){transformSpec.offset=Number(transformSpec.offset)*-1}return transformSpec};fluid.defaults("fluid.transforms.stringTemplate",{gradeNames:"fluid.standardOutputTransformFunction"});fluid.transforms.stringTemplate=function(transformSpec){return fluid.stringTemplate(transformSpec.template,transformSpec.terms)};fluid.defaults("fluid.transforms.free",{gradeNames:"fluid.transformFunction"});fluid.transforms.free=function(transformSpec){var args=fluid.makeArray(transformSpec.args);return fluid.invokeGlobalFunction(transformSpec.func,args)};fluid.defaults("fluid.transforms.quantize",{gradeNames:"fluid.standardTransformFunction"});fluid.transforms.quantize=function(value,transformSpec,transform){if(!transformSpec.ranges||!transformSpec.ranges.length){fluid.fail("fluid.transforms.quantize should have a key called ranges containing an array defining ranges to quantize")}for(var i=0;i<transformSpec.ranges.length;i++){var rangeSpec=transformSpec.ranges[i];if(value<=rangeSpec.upperBound||rangeSpec.upperBound===undefined&&value>=Number.NEGATIVE_INFINITY){return fluid.isPrimitive(rangeSpec.output)?rangeSpec.output:transform.expand(rangeSpec.output)}}};fluid.defaults("fluid.transforms.inRange",{gradeNames:"fluid.standardTransformFunction"});fluid.transforms.inRange=function(value,transformSpec){return(transformSpec.min===undefined||transformSpec.min<=value)&&(transformSpec.max===undefined||transformSpec.max>=value)?true:false}})(jQuery,fluid_2_0_0);var fluid_2_0_0=fluid_2_0_0||{};var fluid=fluid||fluid_2_0_0;(function($,fluid){"use strict";fluid.thatistBridge=function(name,peer){var togo=function(funcname){var segs=funcname.split(".");var move=peer;for(var i=0;i<segs.length;++i){move=move[segs[i]]}var args=[this];if(arguments.length===2){args=args.concat($.makeArray(arguments[1]))}var ret=move.apply(null,args);this.that=function(){return ret};var type=typeof ret;return!ret||type==="string"||type==="number"||type==="boolean"||ret&&ret.length!==undefined?ret:this};$.fn[name]=togo;return togo};fluid.thatistBridge("fluid",fluid);fluid.thatistBridge("fluid_2_0_0",fluid_2_0_0);var normalizeTabindexName=function(){return $.browser.msie?"tabIndex":"tabindex"};var canHaveDefaultTabindex=function(elements){if(elements.length<=0){return false}return $(elements[0]).is("a, input, button, select, area, textarea, object")};var getValue=function(elements){if(elements.length<=0){return undefined}if(!fluid.tabindex.hasAttr(elements)){return canHaveDefaultTabindex(elements)?Number(0):undefined}var value=elements.attr(normalizeTabindexName());return Number(value)};var setValue=function(elements,toIndex){return elements.each(function(i,item){$(item).attr(normalizeTabindexName(),toIndex)})};fluid.tabindex=function(target,toIndex){target=$(target);if(toIndex!==null&&toIndex!==undefined){return setValue(target,toIndex)}else{return getValue(target)}};fluid.tabindex.remove=function(target){target=$(target);return target.each(function(i,item){$(item).removeAttr(normalizeTabindexName())})};fluid.tabindex.hasAttr=function(target){target=$(target);if(target.length<=0){return false}var togo=target.map(function(){var attributeNode=this.getAttributeNode(normalizeTabindexName());return attributeNode?attributeNode.specified:false});return togo.length===1?togo[0]:togo};fluid.tabindex.has=function(target){target=$(target);return fluid.tabindex.hasAttr(target)||canHaveDefaultTabindex(target)};fluid.a11y=$.a11y||{};fluid.a11y.orientation={HORIZONTAL:0,VERTICAL:1,BOTH:2};var UP_DOWN_KEYMAP={next:$.ui.keyCode.DOWN,previous:$.ui.keyCode.UP};var LEFT_RIGHT_KEYMAP={next:$.ui.keyCode.RIGHT,previous:$.ui.keyCode.LEFT};var unwrap=function(element){return element.jquery?element[0]:element};var makeElementsTabFocussable=function(elements){elements.each(function(idx,item){item=$(item);if(!item.fluid("tabindex.has")||item.fluid("tabindex")<0){item.fluid("tabindex",0)}})};fluid.tabbable=function(target){target=$(target);makeElementsTabFocussable(target)};var CONTEXT_KEY="selectionContext";var NO_SELECTION=-32768;var cleanUpWhenLeavingContainer=function(selectionContext){if(selectionContext.activeItemIndex!==NO_SELECTION){if(selectionContext.options.onLeaveContainer){selectionContext.options.onLeaveContainer(selectionContext.selectables[selectionContext.activeItemIndex])}else if(selectionContext.options.onUnselect){selectionContext.options.onUnselect(selectionContext.selectables[selectionContext.activeItemIndex])}}if(!selectionContext.options.rememberSelectionState){selectionContext.activeItemIndex=NO_SELECTION}};var drawSelection=function(elementToSelect,handler){if(handler){handler(elementToSelect)}};var eraseSelection=function(selectedElement,handler){if(handler&&selectedElement){handler(selectedElement)}};var unselectElement=function(selectedElement,selectionContext){eraseSelection(selectedElement,selectionContext.options.onUnselect)};var selectElement=function(elementToSelect,selectionContext){unselectElement(selectionContext.selectedElement(),selectionContext);elementToSelect=unwrap(elementToSelect);var newIndex=selectionContext.selectables.index(elementToSelect);if(newIndex===-1){return}selectionContext.activeItemIndex=newIndex;drawSelection(elementToSelect,selectionContext.options.onSelect)};var selectableFocusHandler=function(selectionContext){return function(evt){$(evt.target).fluid("tabindex",0);selectElement(evt.target,selectionContext);return evt.stopPropagation()}};var selectableBlurHandler=function(selectionContext){return function(evt){$(evt.target).fluid("tabindex",selectionContext.options.selectablesTabindex);unselectElement(evt.target,selectionContext);return evt.stopPropagation()}};var reifyIndex=function(sc_that){var elements=sc_that.selectables;if(sc_that.activeItemIndex>=elements.length){sc_that.activeItemIndex=sc_that.options.noWrap?elements.length-1:0}if(sc_that.activeItemIndex<0&&sc_that.activeItemIndex!==NO_SELECTION){sc_that.activeItemIndex=sc_that.options.noWrap?0:elements.length-1}if(sc_that.activeItemIndex>=0){fluid.focus(elements[sc_that.activeItemIndex])}};var prepareShift=function(selectionContext){var selElm=selectionContext.selectedElement();if(selElm){fluid.blur(selElm)}unselectElement(selectionContext.selectedElement(),selectionContext);if(selectionContext.activeItemIndex===NO_SELECTION){selectionContext.activeItemIndex=-1}};var focusNextElement=function(selectionContext){prepareShift(selectionContext);++selectionContext.activeItemIndex;reifyIndex(selectionContext)};var focusPreviousElement=function(selectionContext){prepareShift(selectionContext);--selectionContext.activeItemIndex;reifyIndex(selectionContext)};var arrowKeyHandler=function(selectionContext,keyMap){return function(evt){if(evt.which===keyMap.next){focusNextElement(selectionContext);evt.preventDefault()}else if(evt.which===keyMap.previous){focusPreviousElement(selectionContext);evt.preventDefault()}}};var getKeyMapForDirection=function(direction){var keyMap;if(direction===fluid.a11y.orientation.HORIZONTAL){keyMap=LEFT_RIGHT_KEYMAP}else if(direction===fluid.a11y.orientation.VERTICAL){keyMap=UP_DOWN_KEYMAP}return keyMap};var tabKeyHandler=function(selectionContext){return function(evt){if(evt.which!==$.ui.keyCode.TAB){return}cleanUpWhenLeavingContainer(selectionContext);if(evt.shiftKey){selectionContext.focusIsLeavingContainer=true}}};var containerFocusHandler=function(selectionContext){return function(evt){var shouldOrig=selectionContext.options.autoSelectFirstItem;var shouldSelect=typeof shouldOrig==="function"?shouldOrig():shouldOrig;if(selectionContext.focusIsLeavingContainer){shouldSelect=false}if(shouldSelect&&evt.target===selectionContext.container.get(0)){if(selectionContext.activeItemIndex===NO_SELECTION){selectionContext.activeItemIndex=0}fluid.focus(selectionContext.selectables[selectionContext.activeItemIndex])}return evt.stopPropagation()}};var containerBlurHandler=function(selectionContext){return function(evt){selectionContext.focusIsLeavingContainer=false;return evt.stopPropagation()}};var makeElementsSelectable=function(container,defaults,userOptions){var options=$.extend(true,{},defaults,userOptions);var keyMap=getKeyMapForDirection(options.direction);var selectableElements=options.selectableElements?options.selectableElements:container.find(options.selectableSelector);var that={container:container,activeItemIndex:NO_SELECTION,selectables:selectableElements,focusIsLeavingContainer:false,options:options};that.selectablesUpdated=function(focusedItem){if(typeof that.options.selectablesTabindex==="number"){that.selectables.fluid("tabindex",that.options.selectablesTabindex)}that.selectables.off("focus."+CONTEXT_KEY);that.selectables.off("blur."+CONTEXT_KEY);that.selectables.on("focus."+CONTEXT_KEY,selectableFocusHandler(that));that.selectables.on("blur."+CONTEXT_KEY,selectableBlurHandler(that));if(keyMap&&that.options.noBubbleListeners){that.selectables.off("keydown."+CONTEXT_KEY);that.selectables.on("keydown."+CONTEXT_KEY,arrowKeyHandler(that,keyMap))}if(focusedItem){selectElement(focusedItem,that)}else{reifyIndex(that)}};that.refresh=function(){if(!that.options.selectableSelector){fluid.fail("Cannot refresh selectable context which was not initialised by a selector")}that.selectables=container.find(options.selectableSelector);that.selectablesUpdated()};that.selectedElement=function(){return that.activeItemIndex<0?null:that.selectables[that.activeItemIndex]};if(keyMap&&!that.options.noBubbleListeners){container.keydown(arrowKeyHandler(that,keyMap))}container.keydown(tabKeyHandler(that));container.focus(containerFocusHandler(that));container.blur(containerBlurHandler(that));that.selectablesUpdated();return that};fluid.selectable=function(target,options){target=$(target);var that=makeElementsSelectable(target,fluid.selectable.defaults,options);fluid.setScopedData(target,CONTEXT_KEY,that);return that};fluid.selectable.select=function(target,toSelect){fluid.focus(toSelect)};fluid.selectable.selectNext=function(target){target=$(target);focusNextElement(fluid.getScopedData(target,CONTEXT_KEY))};fluid.selectable.selectPrevious=function(target){target=$(target);focusPreviousElement(fluid.getScopedData(target,CONTEXT_KEY))};fluid.selectable.currentSelection=function(target){target=$(target);var that=fluid.getScopedData(target,CONTEXT_KEY);return $(that.selectedElement())};fluid.selectable.defaults={direction:fluid.a11y.orientation.VERTICAL,selectablesTabindex:-1,autoSelectFirstItem:true,rememberSelectionState:true,selectableSelector:".selectable",selectableElements:null,onSelect:null,onUnselect:null,onLeaveContainer:null,noWrap:false};var checkForModifier=function(binding,evt){if(!binding.modifier){return true}var modifierKey=binding.modifier;var isCtrlKeyPresent=modifierKey&&evt.ctrlKey;var isAltKeyPresent=modifierKey&&evt.altKey;var isShiftKeyPresent=modifierKey&&evt.shiftKey;return isCtrlKeyPresent||isAltKeyPresent||isShiftKeyPresent};var makeActivationHandler=function(binding){return function(evt){var target=evt.target;if(!fluid.enabled(target)){return}var code=evt.which?evt.which:evt.keyCode;if(code===binding.key&&binding.activateHandler&&checkForModifier(binding,evt)){var event=$.Event("fluid-activate");$(target).trigger(event,[binding.activateHandler]);if(event.isDefaultPrevented()){evt.preventDefault()}}}};var makeElementsActivatable=function(elements,onActivateHandler,defaultKeys,options){var bindings=[];$(defaultKeys).each(function(index,key){bindings.push({modifier:null,key:key,activateHandler:onActivateHandler})});if(options&&options.additionalBindings){bindings=bindings.concat(options.additionalBindings)}fluid.initEnablement(elements);for(var i=0;i<bindings.length;++i){var binding=bindings[i];elements.keydown(makeActivationHandler(binding))}elements.on("fluid-activate",function(evt,handler){handler=handler||onActivateHandler;return handler?handler(evt):null})};fluid.activatable=function(target,fn,options){target=$(target);makeElementsActivatable(target,fn,fluid.activatable.defaults.keys,options)};fluid.activate=function(target){$(target).trigger("fluid-activate")};fluid.activatable.defaults={keys:[$.ui.keyCode.ENTER,$.ui.keyCode.SPACE]}})(jQuery,fluid_2_0_0);var fluid_2_0_0=fluid_2_0_0||{};(function($,fluid){"use strict";fluid.defaults("fluid.viewComponent",{gradeNames:["fluid.modelComponent"],initFunction:"fluid.initView",argumentMap:{container:0,options:1},members:{dom:"@expand:fluid.initDomBinder({that}, {that}.options.selectors)"}});fluid.dumpSelector=function(selectable){return typeof selectable==="string"?selectable:selectable.selector?selectable.selector:""};fluid.diagnoseFailedView=function(componentName,that,options,args){if(!that&&fluid.hasGrade(options,"fluid.viewComponent")){var container=fluid.wrap(args[1]);var message1="Instantiation of view component with type "+componentName+" failed, since ";if(!container){fluid.fail(message1+" container argument is empty")}else if(container.length===0){fluid.fail(message1+'selector "',fluid.dumpSelector(args[1]),'" did not match any markup in the document')}else{fluid.fail(message1+" component creator function did not return a value")}}};fluid.checkTryCatchParameter=function(){var location=window.location||{search:"",protocol:"file:"};var GETparams=location.search.slice(1).split("&");return fluid.find(GETparams,function(param){if(param.indexOf("notrycatch")===0){return true}})===true};fluid.notrycatch=fluid.checkTryCatchParameter();fluid.wrap=function(obj,userJQuery){userJQuery=userJQuery||$;return!obj||obj.jquery?obj:userJQuery(obj)};fluid.unwrap=function(obj){return obj&&obj.jquery?obj[0]:obj};fluid.container=function(containerSpec,fallible,userJQuery){var selector=containerSpec.selector||containerSpec;if(userJQuery){containerSpec=fluid.unwrap(containerSpec)}var container=fluid.wrap(containerSpec,userJQuery);if(fallible&&(!container||container.length===0)){return null}if(!container||!container.jquery||container.length!==1){if(typeof containerSpec!=="string"){containerSpec=container.selector}var count=container.length!==undefined?container.length:0;fluid.fail((count>1?"More than one ("+count+") container elements were":"No container element was")+" found for selector "+containerSpec)}if(!fluid.isDOMNode(container[0])){fluid.fail("fluid.container was supplied a non-jQueryable element")}container.selector=selector;container.context=container.context||containerSpec.ownerDocument||document;return container};fluid.createDomBinder=function(container,selectors){var that={id:fluid.allocateGuid(),cache:{}};var userJQuery=container.constructor;function cacheKey(name,thisContainer){return fluid.allocateSimpleId(thisContainer)+"-"+name}function record(name,thisContainer,result){that.cache[cacheKey(name,thisContainer)]=result}that.locate=function(name,localContainer){var selector,thisContainer,togo;selector=selectors[name];thisContainer=localContainer?$(localContainer):container;if(!thisContainer){fluid.fail("DOM binder invoked for selector "+name+" without container")}if(selector===""){togo=thisContainer}else if(!selector){togo=userJQuery()}else{if(typeof selector==="function"){togo=userJQuery(selector.call(null,fluid.unwrap(thisContainer)))}else{togo=userJQuery(selector,thisContainer)}}if(!togo.selector){togo.selector=selector;togo.context=thisContainer}togo.selectorName=name;record(name,thisContainer,togo);return togo};that.fastLocate=function(name,localContainer){var thisContainer=localContainer?localContainer:container;var key=cacheKey(name,thisContainer);var togo=that.cache[key];return togo?togo:that.locate(name,localContainer)};that.clear=function(){that.cache={}};that.refresh=function(names,localContainer){var thisContainer=localContainer?localContainer:container;if(typeof names==="string"){names=[names]}if(thisContainer.length===undefined){thisContainer=[thisContainer]}for(var i=0;i<names.length;++i){for(var j=0;j<thisContainer.length;++j){that.locate(names[i],thisContainer[j])}}};that.resolvePathSegment=that.locate;return that};fluid.expectFilledSelector=function(result,message){if(result&&result.length===0&&result.jquery){fluid.fail(message+': selector "'+result.selector+'" with name '+result.selectorName+" returned no results in context "+fluid.dumpEl(result.context))}};fluid.initView=function(componentName,containerSpec,userOptions,localOptions){var container=fluid.container(containerSpec,true);fluid.expectFilledSelector(container,'Error instantiating component with name "'+componentName);if(!container){return null}var receiver=function(that){that.container=container};var that=fluid.initLittleComponent(componentName,userOptions,localOptions||{gradeNames:["fluid.viewComponent"]},receiver);if(!that.dom){fluid.initDomBinder(that)}var userJQuery=that.options.jQuery;fluid.log("Constructing view component "+componentName+" with container "+container.constructor.expando+(userJQuery?" user jQuery "+userJQuery.expando:"")+" env: "+$.expando);return that};fluid.initDomBinder=function(that,selectors){if(!that.container){fluid.fail("fluid.initDomBinder called for component with typeName "+that.typeName+' without an initialised container - this has probably resulted from placing "fluid.viewComponent" in incorrect position in grade merging order. '+" Make sure to place it to the right of any non-view grades in the gradeNames list to ensure that it overrides properly: resolved gradeNames is ",that.options.gradeNames," for component ",that)}that.dom=fluid.createDomBinder(that.container,selectors||that.options.selectors||{});that.locate=that.dom.locate;return that.dom};fluid.findAncestor=function(element,test){element=fluid.unwrap(element);while(element){if(test(element)){return element}element=element.parentNode}};fluid.findForm=function(node){return fluid.findAncestor(node,function(element){return element.nodeName.toLowerCase()==="form"})};fluid.each(["text","html"],function(method){fluid[method]=function(node,newValue){node=$(node);return newValue===undefined?node[method]():node[method](newValue)}});fluid.value=function(nodeIn,newValue){var node=fluid.unwrap(nodeIn);var multiple=false;if(node.nodeType===undefined&&node.length>1){node=node[0];multiple=true}if("input"!==node.nodeName.toLowerCase()||!/radio|checkbox/.test(node.type)){return newValue===undefined?$(node).val():$(node).val(newValue)}var name=node.name;if(name===undefined){fluid.fail("Cannot acquire value from node "+fluid.dumpEl(node)+" which does not have name attribute set")}var elements;if(multiple){elements=nodeIn}else{elements=node.ownerDocument.getElementsByName(name);var scope=fluid.findForm(node);elements=$.grep(elements,function(element){if(element.name!==name){return false}return!scope||fluid.dom.isContainer(scope,element)})}if(newValue!==undefined){if(typeof newValue==="boolean"){newValue=newValue?"true":"false"}$.each(elements,function(){this.checked=newValue instanceof Array?newValue.indexOf(this.value)!==-1:newValue===this.value})}else{var checked=$.map(elements,function(element){return element.checked?element.value:null});return node.type==="radio"?checked[0]:checked}};fluid.BINDING_ROOT_KEY="fluid-binding-root";fluid.findData=function(elem,name){while(elem){var data=$.data(elem,name);if(data){return data}elem=elem.parentNode}};fluid.bindFossils=function(node,data,fossils){$.data(node,fluid.BINDING_ROOT_KEY,{data:data,fossils:fossils})};fluid.boundPathForNode=function(node,fossils){node=fluid.unwrap(node);var key=node.name||node.id;var record=fossils[key];return record?record.EL:null};fluid.applyBoundChange=function(node,newValue,applier){node=fluid.unwrap(node);if(newValue===undefined){newValue=fluid.value(node)}if(node.nodeType===undefined&&node.length>0){node=node[0]}var root=fluid.findData(node,fluid.BINDING_ROOT_KEY);if(!root){fluid.fail("Bound data could not be discovered in any node above "+fluid.dumpEl(node));
}var name=node.name;var fossil=root.fossils[name];if(!fossil){fluid.fail("No fossil discovered for name "+name+" in fossil record above "+fluid.dumpEl(node))}if(typeof fossil.oldvalue==="boolean"){newValue=newValue[0]?true:false}var EL=root.fossils[name].EL;if(applier){applier.fireChangeRequest({path:EL,value:newValue,source:"DOM:"+node.id})}else{fluid.set(root.data,EL,newValue)}};fluid.jById=function(id,dokkument){dokkument=dokkument&&dokkument.nodeType===9?dokkument:document;var element=fluid.byId(id,dokkument);var togo=element?$(element):[];togo.selector="#"+id;togo.context=dokkument;return togo};fluid.byId=function(id,dokkument){dokkument=dokkument&&dokkument.nodeType===9?dokkument:document;var el=dokkument.getElementById(id);if(el){if(el.id!==id){fluid.fail("Problem in document structure - picked up element "+fluid.dumpEl(el)+" for id "+id+" without this id - most likely the element has a name which conflicts with this id")}return el}else{return null}};fluid.getId=function(element){return fluid.unwrap(element).id};fluid.allocateSimpleId=function(element){element=fluid.unwrap(element);if(!element||fluid.isPrimitive(element)){return null}if(!element.id){var simpleId="fluid-id-"+fluid.allocateGuid();element.id=simpleId}return element.id};fluid.getDocument=function(element){var node=fluid.unwrap(element);return node.nodeType===9?node:node.ownerDocument};fluid.defaults("fluid.ariaLabeller",{gradeNames:["fluid.viewComponent"],labelAttribute:"aria-label",liveRegionMarkup:'<div class="liveRegion fl-hidden-accessible" aria-live="polite"></div>',liveRegionId:"fluid-ariaLabeller-liveRegion",invokers:{generateLiveElement:{funcName:"fluid.ariaLabeller.generateLiveElement",args:"{that}"},update:{funcName:"fluid.ariaLabeller.update",args:["{that}","{arguments}.0"]}},listeners:{onCreate:{func:"{that}.update",args:[null]}}});fluid.ariaLabeller.update=function(that,newOptions){newOptions=newOptions||that.options;that.container.attr(that.options.labelAttribute,newOptions.text);if(newOptions.dynamicLabel){var live=fluid.jById(that.options.liveRegionId);if(live.length===0){live=that.generateLiveElement()}live.text(newOptions.text)}};fluid.ariaLabeller.generateLiveElement=function(that){var liveEl=$(that.options.liveRegionMarkup);liveEl.prop("id",that.options.liveRegionId);$("body").append(liveEl);return liveEl};var LABEL_KEY="aria-labelling";fluid.getAriaLabeller=function(element){element=$(element);var that=fluid.getScopedData(element,LABEL_KEY);return that};fluid.updateAriaLabel=function(element,text,options){options=$.extend({},options||{},{text:text});var that=fluid.getAriaLabeller(element);if(!that){that=fluid.ariaLabeller(element,options);fluid.setScopedData(element,LABEL_KEY,that)}else{that.update(options)}return that};var dismissList={};$(document).click(function(event){var target=fluid.resolveEventTarget(event);while(target){if(dismissList[target.id]){return}target=target.parentNode}fluid.each(dismissList,function(dismissFunc,key){dismissFunc(event);delete dismissList[key]})});fluid.globalDismissal=function(nodes,dismissFunc){fluid.each(nodes,function(node){var id=fluid.unwrap(node).ownerDocument===document?fluid.allocateSimpleId(node):fluid.allocateGuid();if(dismissFunc){dismissList[id]=dismissFunc}else{delete dismissList[id]}})};fluid.now=function(){return Date.now?Date.now():(new Date).getTime()};fluid.deadMansBlur=function(control,options){var that={options:$.extend(true,{},fluid.defaults("fluid.deadMansBlur"),options)};that.blurPending=false;that.lastCancel=0;that.canceller=function(event){fluid.log("Cancellation through "+event.type+" on "+fluid.dumpEl(event.target));that.lastCancel=fluid.now();that.blurPending=false};that.noteProceeded=function(){fluid.globalDismissal(that.options.exclusions)};that.reArm=function(){fluid.globalDismissal(that.options.exclusions,that.proceed)};that.addExclusion=function(exclusions){fluid.globalDismissal(exclusions,that.proceed)};that.proceed=function(event){fluid.log("Direct proceed through "+event.type+" on "+fluid.dumpEl(event.target));that.blurPending=false;that.options.handler(control)};fluid.each(that.options.exclusions,function(exclusion){exclusion=$(exclusion);fluid.each(exclusion,function(excludeEl){$(excludeEl).on("focusin",that.canceller).on("fluid-focus",that.canceller).click(that.canceller).mousedown(that.canceller)})});if(!that.options.cancelByDefault){$(control).on("focusout",function(event){fluid.log("Starting blur timer for element "+fluid.dumpEl(event.target));var now=fluid.now();fluid.log("back delay: "+(now-that.lastCancel));if(now-that.lastCancel>that.options.backDelay){that.blurPending=true}setTimeout(function(){if(that.blurPending){that.options.handler(control)}},that.options.delay)})}else{that.reArm()}return that};fluid.defaults("fluid.deadMansBlur",{gradeNames:"fluid.function",delay:150,backDelay:100})})(jQuery,fluid_2_0_0);var fluid_2_0_0=fluid_2_0_0||{};(function($,fluid){"use strict";fluid.explodeLocalisedName=function(fileName,locale,defaultLocale){var lastDot=fileName.lastIndexOf(".");if(lastDot===-1||lastDot===0){lastDot=fileName.length}var baseName=fileName.substring(0,lastDot);var extension=fileName.substring(lastDot);var segs=locale.split("_");var exploded=fluid.transform(segs,function(seg,index){var shortSegs=segs.slice(0,index+1);return baseName+"_"+shortSegs.join("_")+extension});if(defaultLocale){exploded.unshift(baseName+"_"+defaultLocale+extension)}return exploded};var resourceCache={};var pendingClass={};fluid.fetchResources=function(resourceSpecs,callback,options){var that={options:fluid.copy(options||{})};that.resourceSpecs=resourceSpecs;that.callback=callback;that.operate=function(){fluid.fetchResources.fetchResourcesImpl(that)};fluid.each(resourceSpecs,function(resourceSpec,key){resourceSpec.recurseFirer=fluid.makeEventFirer({name:'I/O completion for resource "'+key+'"'});resourceSpec.recurseFirer.addListener(that.operate);if(resourceSpec.url&&!resourceSpec.href){resourceSpec.href=resourceSpec.url}if(that.options.defaultLocale){resourceSpec.defaultLocale=that.options.defaultLocale;if(resourceSpec.locale===undefined){resourceSpec.locale=that.options.defaultLocale}}});if(that.options.amalgamateClasses){fluid.fetchResources.amalgamateClasses(resourceSpecs,that.options.amalgamateClasses,that.operate)}fluid.fetchResources.explodeForLocales(resourceSpecs);that.operate();return that};fluid.fetchResources.explodeForLocales=function(resourceSpecs){fluid.each(resourceSpecs,function(resourceSpec,key){if(resourceSpec.locale){var exploded=fluid.explodeLocalisedName(resourceSpec.href,resourceSpec.locale,resourceSpec.defaultLocale);for(var i=0;i<exploded.length;++i){var newKey=key+"$localised-"+i;var newRecord=$.extend(true,{},resourceSpec,{href:exploded[i],localeExploded:true});resourceSpecs[newKey]=newRecord}resourceSpec.localeExploded=exploded.length}});return resourceSpecs};fluid.fetchResources.condenseOneResource=function(resourceSpecs,resourceSpec,key,localeCount){var localeSpecs=[resourceSpec];for(var i=0;i<localeCount;++i){var localKey=key+"$localised-"+i;localeSpecs.unshift(resourceSpecs[localKey]);delete resourceSpecs[localKey]}var lastNonError=fluid.find_if(localeSpecs,function(spec){return!spec.fetchError});if(lastNonError){resourceSpecs[key]=lastNonError}};fluid.fetchResources.condenseForLocales=function(resourceSpecs){fluid.each(resourceSpecs,function(resourceSpec,key){if(typeof resourceSpec.localeExploded==="number"){fluid.fetchResources.condenseOneResource(resourceSpecs,resourceSpec,key,resourceSpec.localeExploded)}})};fluid.fetchResources.notifyResources=function(that,resourceSpecs,callback){fluid.fetchResources.condenseForLocales(resourceSpecs);callback(resourceSpecs)};fluid.fetchResources.amalgamateClasses=function(specs,classes,operator){fluid.each(classes,function(clazz){var pending=pendingClass[clazz];fluid.each(pending,function(pendingrec,canon){specs[clazz+"!"+canon]=pendingrec;pendingrec.recurseFirer.addListener(operator)})})};fluid.fetchResources.timeSuccessCallback=function(resourceSpec){if(resourceSpec.timeSuccess&&resourceSpec.options&&resourceSpec.options.success){var success=resourceSpec.options.success;resourceSpec.options.success=function(){var startTime=new Date;var ret=success.apply(null,arguments);fluid.log("External callback for URL "+resourceSpec.href+" completed - callback time: "+((new Date).getTime()-startTime.getTime())+"ms");return ret}}};function canonUrl(url){return url}fluid.fetchResources.clearResourceCache=function(url){if(url){delete resourceCache[canonUrl(url)]}else{fluid.clear(resourceCache)}};fluid.fetchResources.handleCachedRequest=function(resourceSpec,response,fetchError){var canon=canonUrl(resourceSpec.href);var cached=resourceCache[canon];if(cached.$$firer$$){fluid.log("Handling request for "+canon+" from cache");var fetchClass=resourceSpec.fetchClass;if(fetchClass&&pendingClass[fetchClass]){fluid.log("Clearing pendingClass entry for class "+fetchClass);delete pendingClass[fetchClass][canon]}var result={response:response,fetchError:fetchError};resourceCache[canon]=result;cached.fire(response,fetchError)}};fluid.fetchResources.completeRequest=function(thisSpec){thisSpec.queued=false;thisSpec.completeTime=new Date;fluid.log("Request to URL "+thisSpec.href+" completed - total elapsed time: "+(thisSpec.completeTime.getTime()-thisSpec.initTime.getTime())+"ms");thisSpec.recurseFirer.fire()};fluid.fetchResources.makeResourceCallback=function(thisSpec){return{success:function(response){thisSpec.resourceText=response;thisSpec.resourceKey=thisSpec.href;if(thisSpec.forceCache){fluid.fetchResources.handleCachedRequest(thisSpec,response)}fluid.fetchResources.completeRequest(thisSpec)},error:function(response,textStatus,errorThrown){thisSpec.fetchError={status:response.status,textStatus:response.textStatus,errorThrown:errorThrown};if(thisSpec.forceCache){fluid.fetchResources.handleCachedRequest(thisSpec,null,thisSpec.fetchError)}fluid.fetchResources.completeRequest(thisSpec)}}};fluid.fetchResources.issueCachedRequest=function(resourceSpec,options){var canon=canonUrl(resourceSpec.href);var cached=resourceCache[canon];if(!cached){fluid.log("First request for cached resource with url "+canon);cached=fluid.makeEventFirer({name:"cache notifier for resource URL "+canon});cached.$$firer$$=true;resourceCache[canon]=cached;var fetchClass=resourceSpec.fetchClass;if(fetchClass){if(!pendingClass[fetchClass]){pendingClass[fetchClass]={}}pendingClass[fetchClass][canon]=resourceSpec}options.cache=false;$.ajax(options)}else{if(!cached.$$firer$$){if(cached.response){options.success(cached.response)}else{options.error(cached.fetchError)}}else{fluid.log("Request for cached resource which is in flight: url "+canon);cached.addListener(function(response,fetchError){if(response){options.success(response)}else{options.error(fetchError)}})}}};fluid.fetchResources.composeCallbacks=function(internal,external){return external?internal?function(){try{external.apply(null,arguments)}catch(e){fluid.log("Exception applying external fetchResources callback: "+e)}internal.apply(null,arguments)}:external:internal};fluid.fetchResources.composePolicy=function(target,source){return fluid.fetchResources.composeCallbacks(target,source)};fluid.defaults("fluid.fetchResources.issueRequest",{mergePolicy:{success:fluid.fetchResources.composePolicy,error:fluid.fetchResources.composePolicy,url:"reverse"}});fluid.fetchResources.issueRequest=function(resourceSpec,key){var thisCallback=fluid.fetchResources.makeResourceCallback(resourceSpec);var options={url:resourceSpec.href,success:thisCallback.success,error:thisCallback.error,dataType:resourceSpec.dataType||"text"};fluid.fetchResources.timeSuccessCallback(resourceSpec);options=fluid.merge(fluid.defaults("fluid.fetchResources.issueRequest").mergePolicy,options,resourceSpec.options);resourceSpec.queued=true;resourceSpec.initTime=new Date;fluid.log("Request with key "+key+" queued for "+resourceSpec.href);if(resourceSpec.forceCache){fluid.fetchResources.issueCachedRequest(resourceSpec,options)}else{$.ajax(options)}};fluid.fetchResources.fetchResourcesImpl=function(that){var complete=true;var allSync=true;var resourceSpecs=that.resourceSpecs;for(var key in resourceSpecs){var resourceSpec=resourceSpecs[key];if(!resourceSpec.options||resourceSpec.options.async){allSync=false}if(resourceSpec.href&&!resourceSpec.completeTime){if(!resourceSpec.queued){fluid.fetchResources.issueRequest(resourceSpec,key)}if(resourceSpec.queued){complete=false}}else if(resourceSpec.nodeId&&!resourceSpec.resourceText){var node=document.getElementById(resourceSpec.nodeId);resourceSpec.resourceText=fluid.dom.getElementText(node);resourceSpec.resourceKey=resourceSpec.nodeId}}if(complete&&that.callback&&!that.callbackCalled){that.callbackCalled=true;if($.browser.mozilla&&!allSync){setTimeout(function(){fluid.fetchResources.notifyResources(that,resourceSpecs,that.callback)},1)}else{fluid.fetchResources.notifyResources(that,resourceSpecs,that.callback)}}};fluid.fetchResources.primeCacheFromResources=function(componentName){var resources=fluid.defaults(componentName).resources;var expanded=(fluid.expandOptions?fluid.expandOptions:fluid.identity)(fluid.copy(resources));fluid.fetchResources(expanded)};fluid.registerNamespace("fluid.expander");fluid.expander.makeDefaultFetchOptions=function(successdisposer,failid,options){return $.extend(true,{dataType:"text"},options,{success:function(response,environmentdisposer){var json=JSON.parse(response);environmentdisposer(successdisposer(json))},error:function(response,textStatus){fluid.log("Error fetching "+failid+": "+textStatus)}})};fluid.expander.makeFetchExpander=function(options){return{expander:{type:"fluid.expander.deferredFetcher",href:options.url,options:fluid.expander.makeDefaultFetchOptions(options.disposer,options.url,options.options),resourceSpecCollector:"{resourceSpecCollector}",fetchKey:options.fetchKey}}};fluid.expander.deferredFetcher=function(deliverer,source,expandOptions){var expander=source.expander;var spec=fluid.copy(expander);var collector=fluid.expand(expander.resourceSpecCollector,expandOptions);delete spec.type;delete spec.resourceSpecCollector;delete spec.fetchKey;var environmentdisposer=function(disposed){deliverer(disposed)};spec.options.success=function(response){expander.options.success(response,environmentdisposer)};var key=expander.fetchKey||fluid.allocateGuid();collector[key]=spec;return fluid.NO_VALUE}})(jQuery,fluid_2_0_0);var fluid_2_0_0=fluid_2_0_0||{};(function($,fluid){"use strict";fluid.defaults("fluid.resourceLoader",{gradeNames:["fluid.component"],listeners:{"onCreate.loadResources":{listener:"fluid.resourceLoader.loadResources",args:["{that}",{expander:{func:"{that}.resolveResources"}}]}},defaultLocale:null,locale:null,terms:{},resources:{},resourceOptions:{},invokers:{transformURL:{funcName:"fluid.stringTemplate",args:["{arguments}.0","{that}.options.terms"]},resolveResources:{funcName:"fluid.resourceLoader.resolveResources",args:"{that}"}},events:{onResourcesLoaded:null}});fluid.resourceLoader.resolveResources=function(that){var mapped=fluid.transform(that.options.resources,that.transformURL);return fluid.transform(mapped,function(url){var resourceSpec={url:url,forceCache:true,options:that.options.resourceOptions};return $.extend(resourceSpec,fluid.filterKeys(that.options,["defaultLocale","locale"]))})};fluid.resourceLoader.loadResources=function(that,resources){fluid.fetchResources(resources,function(){that.resources=resources;that.events.onResourcesLoaded.fire(resources)})}})(jQuery,fluid_2_0_0);
