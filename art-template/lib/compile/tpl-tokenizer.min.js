"use strict";var TYPE_STRING="string",TYPE_EXPRESSION="expression",TYPE_RAW="raw",TYPE_ESCAPE="escape";function wrapString(e){var t=new String(e.value);return t.line=e.line,t.start=e.start,t.end=e.end,t}function Token(e,t,n){this.type=e,this.value=t,this.script=null,n?(this.line=n.line+n.value.split(/\n/).length-1,this.line===n.line?this.start=n.end:this.start=n.value.length-n.value.lastIndexOf("\n")-1):(this.line=0,this.start=0),this.end=this.start+this.value.length}var tplTokenizer=function(e,t,n){for(var i=2<arguments.length&&void 0!==n?n:{},l=[new Token(TYPE_STRING,e)],r=0;r<t.length;r++)for(var s=t[r],T=s.test.ignoreCase?"ig":"g",E=new RegExp(s.test.source,T),a=0;a<l.length;a++){var o=l[a],p=l[a-1];if(o.type===TYPE_STRING){for(var h=void 0,P=0,u=[],S=o.value;null!==(h=E.exec(S));)h.index>P&&(p=new Token(TYPE_STRING,S.slice(P,h.index),p),u.push(p)),p=new Token(TYPE_EXPRESSION,h[0],p),h[0]=wrapString(p),p.script=s.use.apply(i,h),u.push(p),P=h.index+h[0].length;P<S.length&&(p=new Token(TYPE_STRING,S.slice(P),p),u.push(p)),l.splice.apply(l,[a,1].concat(u)),a+=u.length-1}}return l};tplTokenizer.TYPE_STRING=TYPE_STRING,tplTokenizer.TYPE_EXPRESSION=TYPE_EXPRESSION,tplTokenizer.TYPE_RAW=TYPE_RAW,tplTokenizer.TYPE_ESCAPE=TYPE_ESCAPE,module.exports=tplTokenizer;