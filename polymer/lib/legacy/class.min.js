import{LegacyElementMixin}from"./legacy-element-mixin.js";import{legacyOptimizations}from"../utils/settings.js";const lifecycleProps={attached:!0,detached:!0,ready:!0,created:!0,beforeRegister:!0,registered:!0,attributeChanged:!0,listeners:!0,hostAttributes:!0},excludeOnInfo={attached:!0,detached:!0,ready:!0,created:!0,beforeRegister:!0,registered:!0,attributeChanged:!0,behaviors:!0,_noAccessors:!0},excludeOnBehaviors=Object.assign({listeners:!0,hostAttributes:!0,properties:!0,observers:!0},excludeOnInfo);function copyProperties(e,t,r){const s=e._noAccessors,i=Object.getOwnPropertyNames(e);for(let o=0;o<i.length;o++){let n=i[o];if(!(n in r))if(s)t[n]=e[n];else{let r=Object.getOwnPropertyDescriptor(e,n);r&&(r.configurable=!0,Object.defineProperty(t,n,r))}}}export function mixinBehaviors(e,t){return GenerateClassFromInfo({},LegacyElementMixin(t),e)};function applyBehaviors(e,t,r){for(let s=0;s<t.length;s++)applyInfo(e,t[s],r,excludeOnBehaviors)}function applyInfo(e,t,r,s){copyProperties(t,e,s);for(let e in lifecycleProps)t[e]&&(r[e]=r[e]||[],r[e].push(t[e]))}function flattenBehaviors(e,t,r){t=t||[];for(let s=e.length-1;s>=0;s--){let i=e[s];i?Array.isArray(i)?flattenBehaviors(i,t):t.indexOf(i)<0&&(!r||r.indexOf(i)<0)&&t.unshift(i):console.warn("behavior is null, check for missing or 404 import")}return t}function mergeProperties(e,t){for(const r in t){const s=e[r],i=t[r];e[r]=!("value"in i)&&s&&"value"in s?Object.assign({value:s.value},i):i}}const LegacyElement=LegacyElementMixin(HTMLElement);function GenerateClassFromInfo(e,t,r){let s;const i={};class o extends t{static _finalizeClass(){if(this.hasOwnProperty(JSCompiler_renameProperty("generatedFrom",this))){if(s)for(let e,t=0;t<s.length;t++)(e=s[t]).properties&&this.createProperties(e.properties),e.observers&&this.createObservers(e.observers,e.properties);e.properties&&this.createProperties(e.properties),e.observers&&this.createObservers(e.observers,e.properties),this._prepareTemplate()}else t._finalizeClass.call(this)}static get properties(){const t={};if(s)for(let e=0;e<s.length;e++)mergeProperties(t,s[e].properties);return mergeProperties(t,e.properties),t}static get observers(){let t=[];if(s)for(let e,r=0;r<s.length;r++)(e=s[r]).observers&&(t=t.concat(e.observers));return e.observers&&(t=t.concat(e.observers)),t}created(){super.created();const e=i.created;if(e)for(let t=0;t<e.length;t++)e[t].call(this)}_registered(){const e=o.prototype;if(!e.hasOwnProperty(JSCompiler_renameProperty("__hasRegisterFinished",e))){e.__hasRegisterFinished=!0,super._registered(),legacyOptimizations&&n(e);const t=Object.getPrototypeOf(this);let r=i.beforeRegister;if(r)for(let e=0;e<r.length;e++)r[e].call(t);if(r=i.registered)for(let e=0;e<r.length;e++)r[e].call(t)}}_applyListeners(){super._applyListeners();const e=i.listeners;if(e)for(let t=0;t<e.length;t++){const r=e[t];if(r)for(let e in r)this._addMethodEventListenerToNode(this,e,r[e])}}_ensureAttributes(){const e=i.hostAttributes;if(e)for(let t=e.length-1;t>=0;t--){const r=e[t];for(let e in r)this._ensureAttribute(e,r[e])}super._ensureAttributes()}ready(){super.ready();let e=i.ready;if(e)for(let t=0;t<e.length;t++)e[t].call(this)}attached(){super.attached();let e=i.attached;if(e)for(let t=0;t<e.length;t++)e[t].call(this)}detached(){super.detached();let e=i.detached;if(e)for(let t=0;t<e.length;t++)e[t].call(this)}attributeChanged(e,t,r){super.attributeChanged();let s=i.attributeChanged;if(s)for(let i=0;i<s.length;i++)s[i].call(this,e,t,r)}}if(r){Array.isArray(r)||(r=[r]);let e=t.prototype.behaviors;s=flattenBehaviors(r,null,e),o.prototype.behaviors=e?e.concat(r):s}const n=t=>{s&&applyBehaviors(t,s,i),applyInfo(t,e,i,excludeOnInfo)};return legacyOptimizations||n(o.prototype),o.generatedFrom=e,o}export const Class=function(e,t){e||console.warn("Polymer.Class requires `info` argument");let r=t?t(LegacyElement):LegacyElement;return(r=GenerateClassFromInfo(e,r,e.behaviors)).is=r.prototype.is=e.is,r};