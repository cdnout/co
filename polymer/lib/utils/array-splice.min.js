import"./boot.js";function newSplice(e,t,n){return{index:e,removed:t,addedCount:n}}const EDIT_LEAVE=0,EDIT_UPDATE=1,EDIT_ADD=2,EDIT_DELETE=3;function calcEditDistances(e,t,n,r,i,l){let s=l-i+1,u=n-t+1,c=new Array(s);for(let e=0;e<s;e++)c[e]=new Array(u),c[e][0]=e;for(let e=0;e<u;e++)c[0][e]=e;for(let n=1;n<s;n++)for(let l=1;l<u;l++)if(equals(e[t+l-1],r[i+n-1]))c[n][l]=c[n-1][l-1];else{let e=c[n-1][l]+1,t=c[n][l-1]+1;c[n][l]=e<t?e:t}return c}function spliceOperationsFromEditDistances(e){let t=e.length-1,n=e[0].length-1,r=e[t][n],i=[];for(;t>0||n>0;){if(0==t){i.push(EDIT_ADD),n--;continue}if(0==n){i.push(EDIT_DELETE),t--;continue}let l,s=e[t-1][n-1],u=e[t-1][n],c=e[t][n-1];(l=u<c?u<s?u:s:c<s?c:s)==s?(s==r?i.push(EDIT_LEAVE):(i.push(EDIT_UPDATE),r=s),t--,n--):l==u?(i.push(EDIT_DELETE),t--,r=u):(i.push(EDIT_ADD),n--,r=c)}return i.reverse(),i}function calcSplices(e,t,n,r,i,l){let s,u=0,c=0,E=Math.min(n-t,l-i);if(0==t&&0==i&&(u=sharedPrefix(e,r,E)),n==e.length&&l==r.length&&(c=sharedSuffix(e,r,E-u)),i+=u,l-=c,(n-=c)-(t+=u)==0&&l-i==0)return[];if(t==n){for(s=newSplice(t,[],0);i<l;)s.removed.push(r[i++]);return[s]}if(i==l)return[newSplice(t,[],n-t)];let o=spliceOperationsFromEditDistances(calcEditDistances(e,t,n,r,i,l));s=void 0;let a=[],D=t,f=i;for(let e=0;e<o.length;e++)switch(o[e]){case EDIT_LEAVE:s&&(a.push(s),s=void 0),D++,f++;break;case EDIT_UPDATE:s||(s=newSplice(D,[],0)),s.addedCount++,D++,s.removed.push(r[f]),f++;break;case EDIT_ADD:s||(s=newSplice(D,[],0)),s.addedCount++,D++;break;case EDIT_DELETE:s||(s=newSplice(D,[],0)),s.removed.push(r[f]),f++}return s&&a.push(s),a}function sharedPrefix(e,t,n){for(let r=0;r<n;r++)if(!equals(e[r],t[r]))return r;return n}function sharedSuffix(e,t,n){let r=e.length,i=t.length,l=0;for(;l<n&&equals(e[--r],t[--i]);)l++;return l}export function calculateSplices(e,t){return calcSplices(e,0,e.length,t,0,t.length)};function equals(e,t){return e===t}