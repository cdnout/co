import"./boot.js";import"./mixin.js";import"./async.js";export class Debouncer{constructor(){this._asyncModule=null,this._callback=null,this._timer=null}setConfig(e,t){this._asyncModule=e,this._callback=t,this._timer=this._asyncModule.run(()=>{this._timer=null,debouncerQueue.delete(this),this._callback()})}cancel(){this.isActive()&&(this._cancelAsync(),debouncerQueue.delete(this))}_cancelAsync(){this.isActive()&&(this._asyncModule.cancel(this._timer),this._timer=null)}flush(){this.isActive()&&(this.cancel(),this._callback())}isActive(){return null!=this._timer}static debounce(e,t,c){return e instanceof Debouncer?e._cancelAsync():e=new Debouncer,e.setConfig(t,c),e}};let debouncerQueue=new Set;export const enqueueDebouncer=function(e){debouncerQueue.add(e)};export const flushDebouncers=function(){const e=Boolean(debouncerQueue.size);return debouncerQueue.forEach(e=>{try{e.flush()}catch(e){setTimeout(()=>{throw e})}}),e};