!function(t){"object"==typeof exports&&"object"==typeof module?t(require("../../lib/codemirror"),require("../fold/xml-fold")):"function"==typeof define&&define.amd?define(["../../lib/codemirror","../fold/xml-fold"],t):t(CodeMirror)}(function(a){"use strict";function i(t){t.state.tagHit&&t.state.tagHit.clear(),t.state.tagOther&&t.state.tagOther.clear(),t.state.tagHit=t.state.tagOther=null}function n(o){o.state.failedTagMatch=!1,o.operation(function(){var t,e;i(o),o.somethingSelected()||(e=o.getCursor(),(t=o.getViewport()).from=Math.min(t.from,e.line),t.to=Math.max(e.line+1,t.to),(e=a.findMatchingTag(o,e,t))&&(!o.state.matchBothTags||(t="open"==e.at?e.open:e.close)&&(o.state.tagHit=o.markText(t.from,t.to,{className:"CodeMirror-matchingtag"})),(e="close"==e.at?e.open:e.close)?o.state.tagOther=o.markText(e.from,e.to,{className:"CodeMirror-matchingtag"}):o.state.failedTagMatch=!0))})}function r(t){t.state.failedTagMatch&&n(t)}a.defineOption("matchTags",!1,function(t,e,o){o&&o!=a.Init&&(t.off("cursorActivity",n),t.off("viewportChange",r),i(t)),e&&(t.state.matchBothTags="object"==typeof e&&e.bothTags,t.on("cursorActivity",n),t.on("viewportChange",r),n(t))}),a.commands.toMatchingTag=function(t){var e=a.findMatchingTag(t,t.getCursor());!e||(e="close"==e.at?e.open:e.close)&&t.extendSelection(e.to,e.from)}});