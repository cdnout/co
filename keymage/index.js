/// keymage.js - Javascript keyboard bindings handling
/// http://github.com/piranha/keymage
///
/// (c) 2012-2016 Alexander Solovyov under terms of ISC License
!function(define,undefined){define(function(){function parseKeyString(keystring){var bits=keystring.split(/-(?!$)/),button=bits[bits.length-1],key={code:KEYS[button]};if(!key.code)throw'Unknown key "'+button+'" in keystring "'+keystring+'"';for(var mod,i=0;i<bits.length-1;i++){if(button=bits[i],mod=MODS[button],!mod)throw'Unknown modifier "'+button+'" in keystring "'+keystring+'"';key[mod]=!0}return key}function stringifyKey(key){for(var s="",i=0;i<MODORDER.length;i++)key[MODORDER[i]]&&(s+=MODORDER[i]+"-");return s+=KEYREV[key.code]}function normalizeKeyChain(keychainString){for(var keychain=[],keys=keychainString.split(" "),i=0;i<keys.length;i++){var key=parseKeyString(keys[i]);key=stringifyKey(key),keychain.push(key)}return keychain.original=keychainString,keychain}function eventKeyString(e){for(var key={code:e.keyCode},i=0;i<MODPROPS.length;i++){var mod=MODPROPS[i];e[mod]&&(key[mod.slice(0,mod.length-3)]=!0)}return stringifyKey(key)}function getNestedChains(chains,scope){for(var i=0;i<scope.length;i++){var bit=scope[i];if(bit&&(chains=chains[bit]),!chains)break}return chains}function dispatch(e){if(!~MODNUMS.indexOf(e.keyCode)){var seq=sequence.slice();seq.push(eventKeyString(e));for(var matched,chains,key,scope=currentScope.split("."),i=scope.length;i>=0;i--)if(chains=getNestedChains(allChains,scope.slice(0,i))){matched=!0;for(var j=0;j<seq.length;j++){if(key=seq[j],!chains[key]){matched=!1;break}chains=chains[key]}if(matched)break}var definitionScope=scope.slice(0,i).join("."),preventDefault=chains.preventDefault;if(matched&&!chains.handlers)return sequence=seq,void(preventDefault&&e.preventDefault());if(matched)for(i=0;i<chains.handlers.length;i++){var handler=chains.handlers[i],options=handler._keymage,res=handler.call(options.context,e,{shortcut:options.original,scope:currentScope,definitionScope:definitionScope});(res===!1||preventDefault)&&e.preventDefault()}sequence=[]}}function getHandlers(scope,keychain,fn){var bits=scope.split("."),chains=allChains;bits=bits.concat(keychain);for(var i=0,l=bits.length;l>i;i++){var bit=bits[i];if(bit&&(chains=chains[bit]||(chains[bit]={}),fn&&fn._keymage.preventDefault&&(chains.preventDefault=!0),i===l-1)){var handlers=chains.handlers||(chains.handlers=[]);return handlers}}}function assignKey(scope,keychain,fn){var handlers=getHandlers(scope,keychain,fn);handlers.push(fn)}function unassignKey(scope,keychain,fn){var handlers=getHandlers(scope,keychain),idx=handlers.indexOf(fn);~idx&&handlers.splice(idx,1)}function parsed(scope,keychain,fn,options){if(keychain===undefined&&fn===undefined)return function(keychain,fn){return keymage(scope,keychain,fn)};"function"==typeof keychain&&(options=fn,fn=keychain,keychain=scope,scope="");var normalized=normalizeKeyChain(keychain);return[scope,normalized,fn,options]}function keymage(scope,keychain,fn,options){var args=parsed(scope,keychain,fn,options);return fn=args[2],options=args[3],fn._keymage=options||{},fn._keymage.original=keychain,assignKey.apply(null,args),function(){unassignKey.apply(null,args)}}var i,VERSION="1.1.3",isOsx="undefined"!=typeof navigator&&~navigator.userAgent.indexOf("Mac OS X"),MODPROPS=["shiftKey","ctrlKey","altKey","metaKey"],MODS={shift:"shift",ctrl:"ctrl",control:"ctrl",alt:"alt",option:"alt",win:"meta",cmd:"meta","super":"meta",meta:"meta",defmod:isOsx?"meta":"ctrl"},MODORDER=["shift","ctrl","alt","meta"],MODNUMS=[16,17,18,91],KEYS={backspace:8,tab:9,enter:13,"return":13,pause:19,caps:20,capslock:20,escape:27,esc:27,space:32,pgup:33,pageup:33,pgdown:34,pagedown:34,end:35,home:36,ins:45,insert:45,del:46,"delete":46,left:37,up:38,right:39,down:40,"*":106,"+":107,plus:107,minus:109,";":186,"=":187,",":188,"-":189,".":190,"/":191,"`":192,"[":219,"\\":220,"]":221,"'":222};for(i=0;10>i;i++)KEYS["num-"+i]=i+95;for(i=0;10>i;i++)KEYS[i.toString()]=i+48;for(i=1;25>i;i++)KEYS["f"+i]=i+111;for(i=65;91>i;i++)KEYS[String.fromCharCode(i).toLowerCase()]=i;var KEYREV={};for(var k in KEYS){var val=KEYS[k];(!KEYREV[val]||KEYREV[val].length<k.length)&&(KEYREV[val]=k)}var currentScope="",allChains={},sequence=[];return keymage.unbind=function(scope,keychain,fn){var args=parsed(scope,keychain,fn);unassignKey.apply(null,args)},keymage.parse=parseKeyString,keymage.stringify=stringifyKey,keymage.bindings=allChains,keymage.setScope=function(scope){currentScope=scope?scope:""},keymage.getScope=function(){return currentScope},keymage.pushScope=function(scope){return currentScope=(currentScope?currentScope+".":"")+scope},keymage.popScope=function(scope){var i;return scope?(currentScope=currentScope.replace(new RegExp("(^|\\.)"+scope+"(\\.|$).*"),""),scope):(i=currentScope.lastIndexOf("."),scope=currentScope.slice(i+1),currentScope=-1==i?"":currentScope.slice(0,i),scope)},keymage.version=VERSION,window.addEventListener("keydown",dispatch,!1),keymage})}("undefined"!=typeof define?define:function(factory){"undefined"!=typeof module?module.exports=factory():window.keymage=factory()});