(function(c){var d=c.define;var b=c.require;var a=c.Ember;if(typeof a==="undefined"&&typeof b!=="undefined"){a=b("ember")}a.libraries.register("Ember Simple Auth","0.8.0");d("simple-auth/authenticators/base",["exports"],function(e){e["default"]=a.Object.extend(a.Evented,{restore:function(f){return a.RSVP.reject()},authenticate:function(f){return a.RSVP.reject()},invalidate:function(f){return a.RSVP.resolve()}})});d("simple-auth/authorizers/base",["exports"],function(e){e["default"]=a.Object.extend({session:null,authorize:function(g,f){}})});d("simple-auth/configuration",["simple-auth/utils/load-config","exports"],function(h,f){var e=h["default"];var g={authenticationRoute:"login",routeAfterAuthentication:"index",routeIfAlreadyAuthenticated:"index",sessionPropertyName:"session",authorizer:null,session:"simple-auth-session:main",store:"simple-auth-session-store:local-storage",localStorageKey:"ember_simple_auth:session",crossOriginWhitelist:[],applicationRootUrl:null};f["default"]={authenticationRoute:g.authenticationRoute,routeAfterAuthentication:g.routeAfterAuthentication,routeIfAlreadyAuthenticated:g.routeIfAlreadyAuthenticated,sessionPropertyName:g.sessionPropertyName,authorizer:g.authorizer,session:g.session,store:g.store,localStorageKey:g.localStorageKey,crossOriginWhitelist:g.crossOriginWhitelist,applicationRootUrl:g.applicationRootUrl,load:e(g,function(i,j){this.applicationRootUrl=i.lookup("router:main").get("rootURL")||"/"})}});d("simple-auth/ember",["./initializer"],function(f){var e=f["default"];a.onLoad("Ember.Application",function(g){g.initializer(e)})});d("simple-auth/initializer",["./configuration","./utils/get-global-config","./setup","exports"],function(j,h,f,i){var g=j["default"];var k=h["default"];var e=f["default"];i["default"]={name:"simple-auth",initialize:function(l,n){var m=k("simple-auth");g.load(l,m);e(l,n)}}});d("simple-auth/mixins/application-route-mixin",["./../configuration","exports"],function(g,f){var e=g["default"];f["default"]=a.Mixin.create({activate:function(){this.set("_authRouteEntryComplete",true);this._super()},beforeModel:function(h){this._super(h);if(!this.get("_authEventListenersAssigned")){this.set("_authEventListenersAssigned",true);var i=this;a.A(["sessionAuthenticationSucceeded","sessionAuthenticationFailed","sessionInvalidationSucceeded","sessionInvalidationFailed","authorizationFailed"]).forEach(function(j){i.get(e.sessionPropertyName).on(j,function(k){Array.prototype.unshift.call(arguments,j);var l=i.get("_authRouteEntryComplete")?i:h;l.send.apply(l,arguments)})})}},actions:{sessionRequiresAuthentication:function(){this.transitionTo(e.authenticationRoute)},authenticateSession:function(){a.deprecate("The authenticateSession action is deprecated. Use sessionRequiresAuthentication instead.");this.send("sessionRequiresAuthentication")},sessionAuthenticationSucceeded:function(){var h=this.get(e.sessionPropertyName).get("attemptedTransition");if(h){h.retry();this.get(e.sessionPropertyName).set("attemptedTransition",null)}else{this.transitionTo(e.routeAfterAuthentication)}},sessionAuthenticationFailed:function(h){},invalidateSession:function(){a.deprecate("The invalidateSession action is deprecated. Use the session's invalidate method directly instead.");this.get(e.sessionPropertyName).invalidate()},sessionInvalidationSucceeded:function(){if(!a.testing){window.location.replace(e.applicationRootUrl)}},sessionInvalidationFailed:function(h){},authorizationFailed:function(){if(this.get(e.sessionPropertyName).get("isAuthenticated")){this.get(e.sessionPropertyName).invalidate()}}}})});d("simple-auth/mixins/authenticated-route-mixin",["./../configuration","exports"],function(g,f){var e=g["default"];f["default"]=a.Mixin.create({beforeModel:function(i){var h=this._super(i);if(!this.get(e.sessionPropertyName).get("isAuthenticated")){i.abort();this.get(e.sessionPropertyName).set("attemptedTransition",i);a.assert("The route configured as Configuration.authenticationRoute cannot implement the AuthenticatedRouteMixin mixin as that leads to an infinite transitioning loop!",this.get("routeName")!==e.authenticationRoute);i.send("sessionRequiresAuthentication")}return h}})});d("simple-auth/mixins/authentication-controller-mixin",["./../configuration","exports"],function(g,f){var e=g["default"];f["default"]=a.Mixin.create({authenticator:null,actions:{authenticate:function(h){a.deprecate("The AuthenticationControllerMixin is deprecated. Use the session's authenticate method directly instead.");var i=this.get("authenticator");a.assert("AuthenticationControllerMixin/LoginControllerMixin require the authenticator property to be set on the controller!",!a.isEmpty(i));return this.get(e.sessionPropertyName).authenticate(i,h)}}})});d("simple-auth/mixins/login-controller-mixin",["./../configuration","./authentication-controller-mixin","exports"],function(i,g,h){var f=i["default"];var e=g["default"];h["default"]=a.Mixin.create(e,{actions:{authenticate:function(){a.deprecate("The LoginControllerMixin is deprecated. Use the session's authenticate method directly instead.");var j=this.getProperties("identification","password");this.set("password",null);return this._super(j)}}})});d("simple-auth/mixins/unauthenticated-route-mixin",["./../configuration","exports"],function(g,f){var e=g["default"];f["default"]=a.Mixin.create({beforeModel:function(h){if(this.get(e.sessionPropertyName).get("isAuthenticated")){h.abort();a.assert("The route configured as Configuration.routeIfAlreadyAuthenticated cannot implement the UnauthenticatedRouteMixin mixin as that leads to an infinite transitioning loop!",this.get("routeName")!==e.routeIfAlreadyAuthenticated);this.transitionTo(e.routeIfAlreadyAuthenticated)}}})});d("simple-auth/session",["exports"],function(e){e["default"]=a.ObjectProxy.extend(a.Evented,{authenticator:null,store:null,container:null,isAuthenticated:false,attemptedTransition:null,content:null,initializeContent:a.on("init",function(){this.set("content",{secure:{}})}),authenticate:function(){var f=Array.prototype.slice.call(arguments);var g=f.shift();a.assert('Session#authenticate requires the authenticator factory to be specified, was "'+g+'"!',!a.isEmpty(g));var i=this;var h=this.container.lookup(g);a.assert('No authenticator for factory "'+g+'" could be found!',!a.isNone(h));return new a.RSVP.Promise(function(k,j){h.authenticate.apply(h,f).then(function(l){i.setup(g,l,true);k()},function(l){i.clear();i.trigger("sessionAuthenticationFailed",l);j(l)})})},invalidate:function(){a.assert("Session#invalidate requires the session to be authenticated!",this.get("isAuthenticated"));var f=this;return new a.RSVP.Promise(function(i,h){var g=f.container.lookup(f.authenticator);g.invalidate(f.content.secure).then(function(){g.off("sessionDataUpdated");f.clear(true);i()},function(j){f.trigger("sessionInvalidationFailed",j);h(j)})})},restore:function(){var f=this;return new a.RSVP.Promise(function(i,h){var j=f.store.restore();var g=(j.secure||{}).authenticator;if(!!g){delete j.secure.authenticator;f.container.lookup(g).restore(j.secure).then(function(k){f.set("content",j);f.setup(g,k);i()},function(){f.clear();h()})}else{f.clear();h()}})},setup:function(g,h,f){f=!!f&&!this.get("isAuthenticated");this.beginPropertyChanges();this.setProperties({isAuthenticated:true,authenticator:g});a.set(this.content,"secure",h);this.bindToAuthenticatorEvents();this.updateStore();this.endPropertyChanges();if(f){this.trigger("sessionAuthenticationSucceeded")}},clear:function(f){f=!!f&&this.get("isAuthenticated");this.beginPropertyChanges();this.setProperties({isAuthenticated:false,authenticator:null});a.set(this.content,"secure",{});this.updateStore();this.endPropertyChanges();if(f){this.trigger("sessionInvalidationSucceeded")}},setUnknownProperty:function(g,h){a.assert('"secure" is a reserved key used by Ember Simple Auth!',g!=="secure");var f=this._super(g,h);this.updateStore();return f},updateStore:function(){var f=this.content;if(!a.isEmpty(this.authenticator)){a.set(f,"secure",a.merge({authenticator:this.authenticator},f.secure||{}))}this.store.persist(f)},bindToAuthenticatorEvents:function(){var g=this;var f=this.container.lookup(this.authenticator);f.off("sessionDataUpdated");f.off("sessionDataInvalidated");f.on("sessionDataUpdated",function(h){g.setup(g.authenticator,h)});f.on("sessionDataInvalidated",function(h){g.clear(true)})},bindToStoreEvents:a.observer("store",function(){var f=this;this.store.on("sessionDataUpdated",function(h){var g=(h.secure||{}).authenticator;if(!!g){delete h.secure.authenticator;f.container.lookup(g).restore(h.secure).then(function(i){f.set("content",h);f.setup(g,i,true)},function(){f.set("content",h);f.clear(true)})}else{f.set("content",h);f.clear(true)}})})})});d("simple-auth/setup",["./configuration","./session","./stores/local-storage","./stores/ephemeral","exports"],function(m,f,q,i,h){var j=m["default"];var r=f["default"];var n=q["default"];var k=i["default"];var l="_wildcard_token_";function g(x){if(x==="*"){return x}x=x.replace("*",l);if(a.typeOf(x)==="string"){var z=document.createElement("a");z.href=x;z.href=z.href;x=z}var y=x.port;if(a.isEmpty(y)){y=x.protocol==="http:"?"80":(x.protocol==="https:"?"443":"")}return x.protocol+"//"+x.hostname+(y!==""?":"+y:"")}function o(x){return function(y){if(y.indexOf(l)>-1){var z=new RegExp(y.replace(l,".+"));return x.match(z)}return y.indexOf(x)>-1}}var s={};var w;function v(x){if(x.crossDomain===false||w.indexOf("*")>-1){return true}var y=s[x.url]=s[x.url]||g(x.url);return a.A(w).any(o(y))}function u(x){x.register("simple-auth-session-store:local-storage",n);x.register("simple-auth-session-store:ephemeral",k);x.register("simple-auth-session:main",r)}function p(x,z,y){if(v(x)){y.__simple_auth_authorized__=true;p.authorizer.authorize(y,x)}}function e(A,z,y,x){if(!!z.__simple_auth_authorized__&&z.status===401){e.session.trigger("authorizationFailed")}}var t=false;h["default"]=function(x,z){z.deferReadiness();u(z);var y=x.lookup(j.store);var B=x.lookup(j.session);B.set("store",y);a.A(["controller","route","component"]).forEach(function(D){z.inject(D,j.sessionPropertyName,j.session)});w=a.A(j.crossOriginWhitelist).map(function(D){return g(D)});if(!a.isEmpty(j.authorizer)){var C=x.lookup(j.authorizer);a.assert('The configured authorizer "'+j.authorizer+'" could not be found in the container!',!a.isEmpty(C));C.set("session",B);p.authorizer=C;e.session=B;if(!t){a.$.ajaxPrefilter("+*",p);a.$(document).ajaxError(e);t=true}}else{a.Logger.info("No authorizer was configured for Ember Simple Auth - specify one if backend requests need to be authorized.")}var A=function(){z.advanceReadiness()};B.restore().then(A,A)}});d("simple-auth/stores/base",["../utils/objects-are-equal","exports"],function(g,f){var e=g["default"];f["default"]=a.Object.extend(a.Evented,{persist:function(h){},restore:function(){return{}},clear:function(){}})});d("simple-auth/stores/ephemeral",["./base","exports"],function(g,f){var e=g["default"];f["default"]=e.extend({init:function(){this.clear()},persist:function(h){this._data=JSON.stringify(h||{})},restore:function(){return JSON.parse(this._data)||{}},clear:function(){delete this._data;this._data="{}"}})});d("simple-auth/stores/local-storage",["./base","../utils/objects-are-equal","../configuration","exports"],function(k,h,e,j){var f=k["default"];var i=h["default"];var g=e["default"];j["default"]=f.extend({key:"ember_simple_auth:session",init:function(){this.key=g.localStorageKey;this.bindToStorageEvents()},persist:function(l){l=JSON.stringify(l||{});localStorage.setItem(this.key,l);this._lastData=this.restore()},restore:function(){var l=localStorage.getItem(this.key);return JSON.parse(l)||{}},clear:function(){localStorage.removeItem(this.key);this._lastData={}},bindToStorageEvents:function(){var l=this;a.$(window).bind("storage",function(n){var m=l.restore();if(!i(m,l._lastData)){l._lastData=m;l.trigger("sessionDataUpdated",m)}})}})});d("simple-auth/utils/get-global-config",["exports"],function(f){var e=(typeof window!=="undefined")?window:{};f["default"]=function(g){return a.get(e,"ENV."+g)||{}}});d("simple-auth/utils/load-config",["exports"],function(e){e["default"]=function(f,g){return function(h,i){var j=a.Object.create(i);for(var k in this){if(this.hasOwnProperty(k)&&a.typeOf(this[k])!=="function"){this[k]=j.getWithDefault(k,f[k])}}if(g){g.apply(this,[h,i])}}}});d("simple-auth/utils/objects-are-equal",["exports"],function(f){f["default"]=function e(h,g){function i(j,l){var k;if(isNaN(j)&&isNaN(l)&&typeof j==="number"&&typeof l==="number"){return true}if(j===l){return true}if(!(j instanceof Object&&l instanceof Object)){return false}for(k in l){if(l.hasOwnProperty(k)!==j.hasOwnProperty(k)){return false}else{if(typeof l[k]!==typeof j[k]){return false}}}for(k in j){if(l.hasOwnProperty(k)!==j.hasOwnProperty(k)){return false}else{if(typeof l[k]!==typeof j[k]){return false}}switch(typeof(j[k])){case"object":if(!i(j[k],l[k])){return false}break;default:if(j[k]!==l[k]){return false}break}}return true}return i(h,g)}})})(this);