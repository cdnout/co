"use strict";var __decorate=this&&this.__decorate||function(e,t,o,r){var i,a=arguments.length,n=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,r);else for(var s=e.length-1;0<=s;s--)(i=e[s])&&(n=(a<3?i(n):3<a?i(t,o,n):i(t,o))||n);return 3<a&&n&&Object.defineProperty(t,o,n),n},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(exports,"__esModule",{value:!0});var context_1=require("../../context/context"),constants_1=require("../../constants"),gridOptionsWrapper_1=require("../../gridOptionsWrapper"),utils_1=require("../../utils"),ImmutableService=function(){function e(){}return e.prototype.postConstruct=function(){this.rowModel.getType()===constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE&&(this.clientSideRowModel=this.rowModel)},e.prototype.createTransactionForRowData=function(e){if(utils_1._.missing(this.clientSideRowModel))console.error("ag-Grid: ImmutableService only works with ClientSideRowModel");else{var i=this.gridOptionsWrapper.getRowNodeIdFunc();if(i&&!utils_1._.missing(i)){var a={remove:[],update:[],add:[]},n=this.clientSideRowModel.getCopyOfNodesMap(),s=this.gridOptionsWrapper.isSuppressMaintainUnsortedOrder()?null:{};return utils_1._.exists(e)&&e.forEach(function(e,t){var o=i(e),r=n[o];s&&(s[o]=t),r?(r.data!==e&&a.update.push(e),n[o]=void 0):a.add.push(e)}),utils_1._.iterateObject(n,function(e,t){t&&a.remove.push(t.data)}),[a,s]}console.error("ag-Grid: ImmutableService requires getRowNodeId() callback to be implemented, your row data need IDs!")}},__decorate([context_1.Autowired("rowModel"),__metadata("design:type",Object)],e.prototype,"rowModel",void 0),__decorate([context_1.Autowired("gridOptionsWrapper"),__metadata("design:type",gridOptionsWrapper_1.GridOptionsWrapper)],e.prototype,"gridOptionsWrapper",void 0),__decorate([context_1.PostConstruct,__metadata("design:type",Function),__metadata("design:paramtypes",[]),__metadata("design:returntype",void 0)],e.prototype,"postConstruct",null),__decorate([context_1.Bean("immutableService")],e)}();exports.ImmutableService=ImmutableService;