"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var ChangedPath=function(){function t(t,e){this.active=!0,this.nodeIdsToColumns={},this.mapToItems={},this.keepingColumns=t,this.pathRoot={rowNode:e,children:null},this.mapToItems[e.id]=this.pathRoot}return t.prototype.setInactive=function(){this.active=!1},t.prototype.isActive=function(){return this.active},t.prototype.depthFirstSearchChangedPath=function(t,e){if(t.children)for(var o=0;o<t.children.length;o++)this.depthFirstSearchChangedPath(t.children[o],e);e(t.rowNode)},t.prototype.depthFirstSearchEverything=function(t,e,o){if(t.childrenAfterGroup)for(var r=0;r<t.childrenAfterGroup.length;r++){var i=t.childrenAfterGroup[r];i.childrenAfterGroup?this.depthFirstSearchEverything(t.childrenAfterGroup[r],e,o):o&&e(i)}e(t)},t.prototype.forEachChangedNodeDepthFirst=function(t,e){void 0===e&&(e=!1),this.active?this.depthFirstSearchChangedPath(this.pathRoot,t):this.depthFirstSearchEverything(this.pathRoot.rowNode,t,e)},t.prototype.executeFromRootNode=function(t){t(this.pathRoot.rowNode)},t.prototype.createPathItems=function(t){for(var e=t,o=0;!this.mapToItems[e.id];){var r={rowNode:e,children:null};this.mapToItems[e.id]=r,o++,e=e.parent}return o},t.prototype.populateColumnsMap=function(t,e){var o=this;if(this.keepingColumns&&e)for(var r=t;r;)this.nodeIdsToColumns[r.id]||(this.nodeIdsToColumns[r.id]={}),e.forEach(function(t){return o.nodeIdsToColumns[r.id][t.getId()]=!0}),r=r.parent},t.prototype.linkPathItems=function(t,e){for(var o=t,r=0;r<e;r++){var i=this.mapToItems[o.id],n=this.mapToItems[o.parent.id];n.children||(n.children=[]),n.children.push(i),o=o.parent}},t.prototype.addParentNode=function(t,e){var o=this.createPathItems(t);this.linkPathItems(t,o),this.populateColumnsMap(t,e)},t.prototype.canSkip=function(t){return this.active&&!this.mapToItems[t.id]},t.prototype.getValueColumnsForNode=function(t,e){if(!this.keepingColumns)return e;var o=this.nodeIdsToColumns[t.id];return e.filter(function(t){return o[t.getId()]})},t.prototype.getNotValueColumnsForNode=function(t,e){if(!this.keepingColumns)return null;var o=this.nodeIdsToColumns[t.id];return e.filter(function(t){return!o[t.getId()]})},t}();exports.ChangedPath=ChangedPath;