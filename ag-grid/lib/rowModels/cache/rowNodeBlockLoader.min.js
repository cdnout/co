"use strict";var __decorate=this&&this.__decorate||function(t,o,e,c){var r,a=arguments.length,i=a<3?o:null===c?c=Object.getOwnPropertyDescriptor(o,e):c;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,o,e,c);else for(var n=t.length-1;0<=n;n--)(r=t[n])&&(i=(a<3?r(i):3<a?r(o,e,i):r(o,e))||i);return 3<a&&i&&Object.defineProperty(o,e,i),i},__metadata=this&&this.__metadata||function(t,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,o)},__param=this&&this.__param||function(e,c){return function(t,o){c(t,o,e)}};Object.defineProperty(exports,"__esModule",{value:!0});var rowNodeBlock_1=require("./rowNodeBlock"),logger_1=require("../../logger"),context_1=require("../../context/context"),utils_1=require("../../utils"),RowNodeBlockLoader=function(){function t(t,o){this.activeBlockLoadsCount=0,this.blocks=[],this.active=!0,this.maxConcurrentRequests=t,o&&0<o&&(this.checkBlockToLoadDebounce=utils_1._.debounce(this.performCheckBlocksToLoad.bind(this),o))}return t.prototype.setBeans=function(t){this.logger=t.create("RowNodeBlockLoader")},t.prototype.addBlock=function(t){this.blocks.push(t)},t.prototype.removeBlock=function(t){utils_1._.removeFromArray(this.blocks,t)},t.prototype.destroy=function(){this.active=!1},t.prototype.loadComplete=function(){this.activeBlockLoadsCount--},t.prototype.checkBlockToLoad=function(){this.checkBlockToLoadDebounce?this.checkBlockToLoadDebounce():this.performCheckBlocksToLoad()},t.prototype.performCheckBlocksToLoad=function(){var o;this.active&&(this.printCacheStatus(),this.activeBlockLoadsCount>=this.maxConcurrentRequests?this.logger.log("checkBlockToLoad: max loads exceeded"):(o=null,this.blocks.forEach(function(t){t.getState()===rowNodeBlock_1.RowNodeBlock.STATE_DIRTY&&(o=t)}),o?(o.load(),this.activeBlockLoadsCount++,this.logger.log("checkBlockToLoad: loading page "+o.getBlockNumber()),this.printCacheStatus()):this.logger.log("checkBlockToLoad: no pages to load")))},t.prototype.getBlockState=function(){var c={};return this.blocks.forEach(function(t){var o=t.getNodeIdPrefix(),e={blockNumber:t.getBlockNumber(),startRow:t.getStartRow(),endRow:t.getEndRow(),pageStatus:t.getState()};utils_1._.exists(o)?c[o+t.getBlockNumber()]=e:c[t.getBlockNumber()]=e}),c},t.prototype.printCacheStatus=function(){this.logger.isLogging()&&this.logger.log("printCacheStatus: activePageLoadsCount = "+this.activeBlockLoadsCount+", blocks = "+JSON.stringify(this.getBlockState()))},t.prototype.isLoading=function(){return 0<this.activeBlockLoadsCount},__decorate([__param(0,context_1.Qualifier("loggerFactory")),__metadata("design:type",Function),__metadata("design:paramtypes",[logger_1.LoggerFactory]),__metadata("design:returntype",void 0)],t.prototype,"setBeans",null),t}();exports.RowNodeBlockLoader=RowNodeBlockLoader;