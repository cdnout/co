"use strict";var __extends=this&&this.__extends||function(){var i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(e,t)};return function(e,t){function o(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),__decorate=this&&this.__decorate||function(e,t,o,i){var r,n=arguments.length,l=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,o):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,o,i);else for(var c=e.length-1;0<=c;c--)(r=e[c])&&(l=(n<3?r(l):3<n?r(t,o,l):r(t,o))||l);return 3<n&&l&&Object.defineProperty(t,o,l),l},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(exports,"__esModule",{value:!0});var agCheckbox_1=require("../../widgets/agCheckbox"),beanStub_1=require("../../context/beanStub"),context_1=require("../../context/context"),columnApi_1=require("../../columnController/columnApi"),gridApi_1=require("../../gridApi"),events_1=require("../../events"),eventService_1=require("../../eventService"),constants_1=require("../../constants"),selectionController_1=require("../../selectionController"),gridOptionsWrapper_1=require("../../gridOptionsWrapper"),SelectAllFeature=function(i){function e(e,t){var o=i.call(this)||this;o.cbSelectAllVisible=!1,o.processingEventFromCheckbox=!1,o.cbSelectAll=e;t=(o.column=t).getColDef();return o.filteredOnly=!!t&&!!t.headerCheckboxSelectionFilteredOnly,o}return __extends(e,i),e.prototype.postConstruct=function(){this.showOrHideSelectAll(),this.addDestroyableEventListener(this.eventService,events_1.Events.EVENT_DISPLAYED_COLUMNS_CHANGED,this.showOrHideSelectAll.bind(this)),this.addDestroyableEventListener(this.eventService,events_1.Events.EVENT_SELECTION_CHANGED,this.onSelectionChanged.bind(this)),this.addDestroyableEventListener(this.eventService,events_1.Events.EVENT_MODEL_UPDATED,this.onModelChanged.bind(this)),this.addDestroyableEventListener(this.cbSelectAll,agCheckbox_1.AgCheckbox.EVENT_CHANGED,this.onCbSelectAll.bind(this))},e.prototype.showOrHideSelectAll=function(){this.cbSelectAllVisible=this.isCheckboxSelection(),this.cbSelectAll.setDisplayed(this.cbSelectAllVisible),this.cbSelectAllVisible&&(this.checkRightRowModelType(),this.updateStateOfCheckbox())},e.prototype.onModelChanged=function(){this.cbSelectAllVisible&&this.updateStateOfCheckbox()},e.prototype.onSelectionChanged=function(){this.cbSelectAllVisible&&this.updateStateOfCheckbox()},e.prototype.getNextCheckboxState=function(e){return(0!==e.selected||0!==e.notSelected)&&(0<e.selected&&0<e.notSelected?null:0<e.selected)},e.prototype.updateStateOfCheckbox=function(){var e;this.processingEventFromCheckbox||(this.processingEventFromCheckbox=!0,e=this.getSelectionCount(),e=this.getNextCheckboxState(e),this.cbSelectAll.setValue(e),this.processingEventFromCheckbox=!1)},e.prototype.getSelectionCount=function(){function e(e){t.gridOptionsWrapper.isGroupSelectsChildren()&&e.group||(e.isSelected()?o++:e.selectable&&i++)}var t=this,o=0,i=0;return this.filteredOnly?this.gridApi.forEachNodeAfterFilter(e):this.gridApi.forEachNode(e),{notSelected:i,selected:o}},e.prototype.checkRightRowModelType=function(){var e=this.rowModel.getType();e===constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE||console.warn("ag-Grid: selectAllCheckbox is only available if using normal row model, you are using "+e)},e.prototype.onCbSelectAll=function(){this.processingEventFromCheckbox||this.cbSelectAllVisible&&(this.cbSelectAll.getValue()?this.selectionController.selectAllRowNodes(this.filteredOnly):this.selectionController.deselectAllRowNodes(this.filteredOnly))},e.prototype.isCheckboxSelection=function(){var e=this.column.getColDef().headerCheckboxSelection;return"function"==typeof e&&(e=e({column:this.column,colDef:this.column.getColDef(),columnApi:this.columnApi,api:this.gridApi})),!!e&&(this.gridOptionsWrapper.isRowModelServerSide()?(console.warn("headerCheckboxSelection is not supported for Server Side Row Model"),!1):this.gridOptionsWrapper.isRowModelInfinite()?(console.warn("headerCheckboxSelection is not supported for Infinite Row Model"),!1):!this.gridOptionsWrapper.isRowModelViewport()||(console.warn("headerCheckboxSelection is not supported for Viewport Row Model"),!1))},__decorate([context_1.Autowired("gridApi"),__metadata("design:type",gridApi_1.GridApi)],e.prototype,"gridApi",void 0),__decorate([context_1.Autowired("columnApi"),__metadata("design:type",columnApi_1.ColumnApi)],e.prototype,"columnApi",void 0),__decorate([context_1.Autowired("eventService"),__metadata("design:type",eventService_1.EventService)],e.prototype,"eventService",void 0),__decorate([context_1.Autowired("rowModel"),__metadata("design:type",Object)],e.prototype,"rowModel",void 0),__decorate([context_1.Autowired("selectionController"),__metadata("design:type",selectionController_1.SelectionController)],e.prototype,"selectionController",void 0),__decorate([context_1.Autowired("gridOptionsWrapper"),__metadata("design:type",gridOptionsWrapper_1.GridOptionsWrapper)],e.prototype,"gridOptionsWrapper",void 0),__decorate([context_1.PostConstruct,__metadata("design:type",Function),__metadata("design:paramtypes",[]),__metadata("design:returntype",void 0)],e.prototype,"postConstruct",null),e}(beanStub_1.BeanStub);exports.SelectAllFeature=SelectAllFeature;