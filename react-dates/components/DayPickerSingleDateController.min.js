"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _enzymeShallowEqual=_interopRequireDefault(require("enzyme-shallow-equal")),_slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray")),_defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_assertThisInitialized2=_interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized")),_inheritsLoose2=_interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose")),_react=_interopRequireDefault(require("react")),_propTypes=_interopRequireDefault(require("prop-types")),_reactMomentProptypes=_interopRequireDefault(require("react-moment-proptypes")),_airbnbPropTypes=require("airbnb-prop-types"),_moment=_interopRequireDefault(require("moment")),_object=_interopRequireDefault(require("object.values")),_isTouchDevice=_interopRequireDefault(require("is-touch-device")),_defaultPhrases=require("../defaultPhrases"),_getPhrasePropTypes=_interopRequireDefault(require("../utils/getPhrasePropTypes")),_isSameDay=_interopRequireDefault(require("../utils/isSameDay")),_isAfterDay=_interopRequireDefault(require("../utils/isAfterDay")),_getVisibleDays=_interopRequireDefault(require("../utils/getVisibleDays")),_toISODateString=_interopRequireDefault(require("../utils/toISODateString")),_modifiers=require("../utils/modifiers"),_ScrollableOrientationShape=_interopRequireDefault(require("../shapes/ScrollableOrientationShape")),_DayOfWeekShape=_interopRequireDefault(require("../shapes/DayOfWeekShape")),_CalendarInfoPositionShape=_interopRequireDefault(require("../shapes/CalendarInfoPositionShape")),_NavPositionShape=_interopRequireDefault(require("../shapes/NavPositionShape")),_constants=require("../constants"),_DayPicker=_interopRequireDefault(require("./DayPicker")),_getPooledMoment=_interopRequireDefault(require("../utils/getPooledMoment"));function ownKeys(t,e){var n,o=Object.keys(t);return Object.getOwnPropertySymbols&&(n=Object.getOwnPropertySymbols(t),e&&(n=n.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),o.push.apply(o,n)),o}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(Object(n),!0).forEach(function(e){(0,_defineProperty2.default)(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):ownKeys(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}var propTypes="production"!==process.env.NODE_ENV?(0,_airbnbPropTypes.forbidExtraProps)({date:_reactMomentProptypes.default.momentObj,onDateChange:_propTypes.default.func,focused:_propTypes.default.bool,onFocusChange:_propTypes.default.func,onClose:_propTypes.default.func,keepOpenOnDateSelect:_propTypes.default.bool,isOutsideRange:_propTypes.default.func,isDayBlocked:_propTypes.default.func,isDayHighlighted:_propTypes.default.func,renderMonthText:(0,_airbnbPropTypes.mutuallyExclusiveProps)(_propTypes.default.func,"renderMonthText","renderMonthElement"),renderMonthElement:(0,_airbnbPropTypes.mutuallyExclusiveProps)(_propTypes.default.func,"renderMonthText","renderMonthElement"),renderWeekHeaderElement:_propTypes.default.func,enableOutsideDays:_propTypes.default.bool,numberOfMonths:_propTypes.default.number,orientation:_ScrollableOrientationShape.default,withPortal:_propTypes.default.bool,initialVisibleMonth:_propTypes.default.func,firstDayOfWeek:_DayOfWeekShape.default,hideKeyboardShortcutsPanel:_propTypes.default.bool,daySize:_airbnbPropTypes.nonNegativeInteger,verticalHeight:_airbnbPropTypes.nonNegativeInteger,noBorder:_propTypes.default.bool,verticalBorderSpacing:_airbnbPropTypes.nonNegativeInteger,transitionDuration:_airbnbPropTypes.nonNegativeInteger,horizontalMonthPadding:_airbnbPropTypes.nonNegativeInteger,dayPickerNavigationInlineStyles:_propTypes.default.object,navPosition:_NavPositionShape.default,navPrev:_propTypes.default.node,navNext:_propTypes.default.node,renderNavPrevButton:_propTypes.default.func,renderNavNextButton:_propTypes.default.func,noNavButtons:_propTypes.default.bool,noNavNextButton:_propTypes.default.bool,noNavPrevButton:_propTypes.default.bool,onPrevMonthClick:_propTypes.default.func,onNextMonthClick:_propTypes.default.func,onOutsideClick:_propTypes.default.func,renderCalendarDay:_propTypes.default.func,renderDayContents:_propTypes.default.func,renderCalendarInfo:_propTypes.default.func,calendarInfoPosition:_CalendarInfoPositionShape.default,onBlur:_propTypes.default.func,isFocused:_propTypes.default.bool,showKeyboardShortcuts:_propTypes.default.bool,onTab:_propTypes.default.func,onShiftTab:_propTypes.default.func,monthFormat:_propTypes.default.string,weekDayFormat:_propTypes.default.string,phrases:_propTypes.default.shape((0,_getPhrasePropTypes.default)(_defaultPhrases.DayPickerPhrases)),dayAriaLabelFormat:_propTypes.default.string,isRTL:_propTypes.default.bool}):{},defaultProps={date:void 0,onDateChange:function(){},focused:!1,onFocusChange:function(){},onClose:function(){},keepOpenOnDateSelect:!1,isOutsideRange:function(){},isDayBlocked:function(){},isDayHighlighted:function(){},renderMonthText:null,renderWeekHeaderElement:null,enableOutsideDays:!1,numberOfMonths:1,orientation:_constants.HORIZONTAL_ORIENTATION,withPortal:!1,hideKeyboardShortcutsPanel:!1,initialVisibleMonth:null,firstDayOfWeek:null,daySize:_constants.DAY_SIZE,verticalHeight:null,noBorder:!1,verticalBorderSpacing:void 0,transitionDuration:void 0,horizontalMonthPadding:13,dayPickerNavigationInlineStyles:null,navPosition:_constants.NAV_POSITION_TOP,navPrev:null,navNext:null,renderNavPrevButton:null,renderNavNextButton:null,noNavButtons:!1,noNavNextButton:!1,noNavPrevButton:!1,onPrevMonthClick:function(){},onNextMonthClick:function(){},onOutsideClick:function(){},renderCalendarDay:void 0,renderDayContents:null,renderCalendarInfo:null,renderMonthElement:null,calendarInfoPosition:_constants.INFO_POSITION_BOTTOM,onBlur:function(){},isFocused:!1,showKeyboardShortcuts:!1,onTab:function(){},onShiftTab:function(){},monthFormat:"MMMM YYYY",weekDayFormat:"dd",phrases:_defaultPhrases.DayPickerPhrases,dayAriaLabelFormat:void 0,isRTL:!1},DayPickerSingleDateController=function(i){(0,_inheritsLoose2.default)(t,i);var e=t.prototype;function t(t){var n=i.call(this,t)||this;n.isTouchDevice=!1,n.today=(0,_moment.default)(),n.modifiers={today:function(e){return n.isToday(e)},blocked:function(e){return n.isBlocked(e)},"blocked-calendar":function(e){return t.isDayBlocked(e)},"blocked-out-of-range":function(e){return t.isOutsideRange(e)},"highlighted-calendar":function(e){return t.isDayHighlighted(e)},valid:function(e){return!n.isBlocked(e)},hovered:function(e){return n.isHovered(e)},selected:function(e){return n.isSelected(e)},"first-day-of-week":function(e){return n.isFirstDayOfWeek(e)},"last-day-of-week":function(e){return n.isLastDayOfWeek(e)}};var e=n.getStateForNewMonth(t),o=e.currentMonth,r=e.visibleDays;return n.state={hoverDate:null,currentMonth:o,visibleDays:r},n.onDayMouseEnter=n.onDayMouseEnter.bind((0,_assertThisInitialized2.default)(n)),n.onDayMouseLeave=n.onDayMouseLeave.bind((0,_assertThisInitialized2.default)(n)),n.onDayClick=n.onDayClick.bind((0,_assertThisInitialized2.default)(n)),n.onPrevMonthClick=n.onPrevMonthClick.bind((0,_assertThisInitialized2.default)(n)),n.onNextMonthClick=n.onNextMonthClick.bind((0,_assertThisInitialized2.default)(n)),n.onMonthChange=n.onMonthChange.bind((0,_assertThisInitialized2.default)(n)),n.onYearChange=n.onYearChange.bind((0,_assertThisInitialized2.default)(n)),n.onGetNextScrollableMonths=n.onGetNextScrollableMonths.bind((0,_assertThisInitialized2.default)(n)),n.onGetPrevScrollableMonths=n.onGetPrevScrollableMonths.bind((0,_assertThisInitialized2.default)(n)),n.getFirstFocusableDay=n.getFirstFocusableDay.bind((0,_assertThisInitialized2.default)(n)),n}return e[!_react.default.PureComponent&&"shouldComponentUpdate"]=function(e,t){return!(0,_enzymeShallowEqual.default)(this.props,e)||!(0,_enzymeShallowEqual.default)(this.state,t)},e.componentDidMount=function(){this.isTouchDevice=(0,_isTouchDevice.default)()},e.componentWillReceiveProps=function(e){var n=this,t=e.date,o=e.focused,r=e.isOutsideRange,i=e.isDayBlocked,a=e.isDayHighlighted,s=e.initialVisibleMonth,l=e.numberOfMonths,u=e.enableOutsideDays,d=this.props,c=d.isOutsideRange,f=d.isDayBlocked,h=d.isDayHighlighted,p=d.numberOfMonths,y=d.enableOutsideDays,b=d.initialVisibleMonth,D=d.focused,_=d.date,v=this.state.visibleDays,M=!1,g=!1,P=!1;r!==c&&(this.modifiers["blocked-out-of-range"]=function(e){return r(e)},M=!0),i!==f&&(this.modifiers["blocked-calendar"]=function(e){return i(e)},g=!0),a!==h&&(this.modifiers["highlighted-calendar"]=function(e){return a(e)},P=!0);var m,O,T=M||g||P;(l!==p||u!==y||s!==b&&!D&&o)&&(O=(m=this.getStateForNewMonth(e)).currentMonth,v=m.visibleDays,this.setState({currentMonth:O,visibleDays:v}));var S=o!==D,k={};t!==_&&(k=this.deleteModifier(k,_,"selected"),k=this.addModifier(k,t,"selected")),(S||T)&&(0,_object.default)(v).forEach(function(e){Object.keys(e).forEach(function(e){var t=(0,_getPooledMoment.default)(e);k=n.isBlocked(t)?n.addModifier(k,t,"blocked"):n.deleteModifier(k,t,"blocked"),(S||M)&&(k=r(t)?n.addModifier(k,t,"blocked-out-of-range"):n.deleteModifier(k,t,"blocked-out-of-range")),(S||g)&&(k=i(t)?n.addModifier(k,t,"blocked-calendar"):n.deleteModifier(k,t,"blocked-calendar")),(S||P)&&(k=a(t)?n.addModifier(k,t,"highlighted-calendar"):n.deleteModifier(k,t,"highlighted-calendar"))})});var C=(0,_moment.default)();(0,_isSameDay.default)(this.today,C)||(k=this.deleteModifier(k,this.today,"today"),k=this.addModifier(k,C,"today"),this.today=C),0<Object.keys(k).length&&this.setState({visibleDays:_objectSpread({},v,{},k)})},e.componentWillUpdate=function(){this.today=(0,_moment.default)()},e.onDayClick=function(e,t){var n,o,r,i,a;t&&t.preventDefault(),this.isBlocked(e)||(o=(n=this.props).onDateChange,r=n.keepOpenOnDateSelect,i=n.onFocusChange,a=n.onClose,o(e),r||(i({focused:!1}),a({date:e})))},e.onDayMouseEnter=function(e){var t,n,o,r;this.isTouchDevice||(n=(t=this.state).hoverDate,o=t.visibleDays,r=this.deleteModifier({},n,"hovered"),r=this.addModifier(r,e,"hovered"),this.setState({hoverDate:e,visibleDays:_objectSpread({},o,{},r)}))},e.onDayMouseLeave=function(){var e,t=this.state,n=t.hoverDate,o=t.visibleDays;!this.isTouchDevice&&n&&(e=this.deleteModifier({},n,"hovered"),this.setState({hoverDate:null,visibleDays:_objectSpread({},o,{},e)}))},e.onPrevMonthClick=function(){var e=this.props,t=e.onPrevMonthClick,n=e.numberOfMonths,o=e.enableOutsideDays,r=this.state,i=r.currentMonth,a=r.visibleDays,s={};Object.keys(a).sort().slice(0,n+1).forEach(function(e){s[e]=a[e]});var l=i.clone().subtract(1,"month"),u=(0,_getVisibleDays.default)(l,1,o);this.setState({currentMonth:l,visibleDays:_objectSpread({},s,{},this.getModifiers(u))},function(){t(l.clone())})},e.onNextMonthClick=function(){var e=this.props,t=e.onNextMonthClick,n=e.numberOfMonths,o=e.enableOutsideDays,r=this.state,i=r.currentMonth,a=r.visibleDays,s={};Object.keys(a).sort().slice(1).forEach(function(e){s[e]=a[e]});var l=i.clone().add(n,"month"),u=(0,_getVisibleDays.default)(l,1,o),d=i.clone().add(1,"month");this.setState({currentMonth:d,visibleDays:_objectSpread({},s,{},this.getModifiers(u))},function(){t(d.clone())})},e.onMonthChange=function(e){var t=this.props,n=t.numberOfMonths,o=t.enableOutsideDays,r=t.orientation===_constants.VERTICAL_SCROLLABLE,i=(0,_getVisibleDays.default)(e,n,o,r);this.setState({currentMonth:e.clone(),visibleDays:this.getModifiers(i)})},e.onYearChange=function(e){var t=this.props,n=t.numberOfMonths,o=t.enableOutsideDays,r=t.orientation===_constants.VERTICAL_SCROLLABLE,i=(0,_getVisibleDays.default)(e,n,o,r);this.setState({currentMonth:e.clone(),visibleDays:this.getModifiers(i)})},e.onGetNextScrollableMonths=function(){var e=this.props,t=e.numberOfMonths,n=e.enableOutsideDays,o=this.state,r=o.currentMonth,i=o.visibleDays,a=Object.keys(i).length,s=r.clone().add(a,"month"),l=(0,_getVisibleDays.default)(s,t,n,!0);this.setState({visibleDays:_objectSpread({},i,{},this.getModifiers(l))})},e.onGetPrevScrollableMonths=function(){var e=this.props,t=e.numberOfMonths,n=e.enableOutsideDays,o=this.state,r=o.currentMonth,i=o.visibleDays,a=r.clone().subtract(t,"month"),s=(0,_getVisibleDays.default)(a,t,n,!0);this.setState({currentMonth:a.clone(),visibleDays:_objectSpread({},i,{},this.getModifiers(s))})},e.getFirstFocusableDay=function(e){var t=this,n=this.props,o=n.date,r=n.numberOfMonths,i=e.clone().startOf("month");if(o&&(i=o.clone()),this.isBlocked(i)){for(var a=[],s=e.clone().add(r-1,"months").endOf("month"),l=i.clone();!(0,_isAfterDay.default)(l,s);)l=l.clone().add(1,"day"),a.push(l);var u=a.filter(function(e){return!t.isBlocked(e)&&(0,_isAfterDay.default)(e,i)});0<u.length&&(i=(0,_slicedToArray2.default)(u,1)[0])}return i},e.getModifiers=function(e){var n=this,o={};return Object.keys(e).forEach(function(t){o[t]={},e[t].forEach(function(e){o[t][(0,_toISODateString.default)(e)]=n.getModifiersForDay(e)})}),o},e.getModifiersForDay=function(t){var n=this;return new Set(Object.keys(this.modifiers).filter(function(e){return n.modifiers[e](t)}))},e.getStateForNewMonth=function(e){var t=this,n=e.initialVisibleMonth,o=e.date,r=e.numberOfMonths,i=e.orientation,a=e.enableOutsideDays,s=(n||(o?function(){return o}:function(){return t.today}))(),l=i===_constants.VERTICAL_SCROLLABLE;return{currentMonth:s,visibleDays:this.getModifiers((0,_getVisibleDays.default)(s,r,a,l))}},e.addModifier=function(e,t,n){return(0,_modifiers.addModifier)(e,t,n,this.props,this.state)},e.deleteModifier=function(e,t,n){return(0,_modifiers.deleteModifier)(e,t,n,this.props,this.state)},e.isBlocked=function(e){var t=this.props,n=t.isDayBlocked,o=t.isOutsideRange;return n(e)||o(e)},e.isHovered=function(e){var t=(this.state||{}).hoverDate;return(0,_isSameDay.default)(e,t)},e.isSelected=function(e){var t=this.props.date;return(0,_isSameDay.default)(e,t)},e.isToday=function(e){return(0,_isSameDay.default)(e,this.today)},e.isFirstDayOfWeek=function(e){var t=this.props.firstDayOfWeek;return e.day()===(t||_moment.default.localeData().firstDayOfWeek())},e.isLastDayOfWeek=function(e){var t=this.props.firstDayOfWeek;return e.day()===((t||_moment.default.localeData().firstDayOfWeek())+6)%7},e.render=function(){var e=this.props,t=e.numberOfMonths,n=e.orientation,o=e.monthFormat,r=e.renderMonthText,i=e.renderWeekHeaderElement,a=e.dayPickerNavigationInlineStyles,s=e.navPosition,l=e.navPrev,u=e.navNext,d=e.renderNavPrevButton,c=e.renderNavNextButton,f=e.noNavButtons,h=e.noNavPrevButton,p=e.noNavNextButton,y=e.onOutsideClick,b=e.onShiftTab,D=e.onTab,_=e.withPortal,v=e.focused,M=e.enableOutsideDays,g=e.hideKeyboardShortcutsPanel,P=e.daySize,m=e.firstDayOfWeek,O=e.renderCalendarDay,T=e.renderDayContents,S=e.renderCalendarInfo,k=e.renderMonthElement,C=e.calendarInfoPosition,N=e.isFocused,q=e.isRTL,B=e.phrases,I=e.dayAriaLabelFormat,R=e.onBlur,E=e.showKeyboardShortcuts,x=e.weekDayFormat,F=e.verticalHeight,j=e.noBorder,w=e.transitionDuration,L=e.verticalBorderSpacing,z=e.horizontalMonthPadding,A=this.state,V=A.currentMonth,W=A.visibleDays;return _react.default.createElement(_DayPicker.default,{orientation:n,enableOutsideDays:M,modifiers:W,numberOfMonths:t,onDayClick:this.onDayClick,onDayMouseEnter:this.onDayMouseEnter,onDayMouseLeave:this.onDayMouseLeave,onPrevMonthClick:this.onPrevMonthClick,onNextMonthClick:this.onNextMonthClick,onMonthChange:this.onMonthChange,onYearChange:this.onYearChange,onGetNextScrollableMonths:this.onGetNextScrollableMonths,onGetPrevScrollableMonths:this.onGetPrevScrollableMonths,monthFormat:o,withPortal:_,hidden:!v,hideKeyboardShortcutsPanel:g,initialVisibleMonth:function(){return V},firstDayOfWeek:m,onOutsideClick:y,dayPickerNavigationInlineStyles:a,navPosition:s,navPrev:l,navNext:u,renderNavPrevButton:d,renderNavNextButton:c,noNavButtons:f,noNavNextButton:p,noNavPrevButton:h,renderMonthText:r,renderWeekHeaderElement:i,renderCalendarDay:O,renderDayContents:T,renderCalendarInfo:S,renderMonthElement:k,calendarInfoPosition:C,isFocused:N,getFirstFocusableDay:this.getFirstFocusableDay,onBlur:R,onTab:D,onShiftTab:b,phrases:B,daySize:P,isRTL:q,showKeyboardShortcuts:E,weekDayFormat:x,dayAriaLabelFormat:I,verticalHeight:F,noBorder:j,transitionDuration:w,verticalBorderSpacing:L,horizontalMonthPadding:z})},t}(_react.default.PureComponent||_react.default.Component);(exports.default=DayPickerSingleDateController).propTypes="production"!==process.env.NODE_ENV?propTypes:{},DayPickerSingleDateController.defaultProps=defaultProps;