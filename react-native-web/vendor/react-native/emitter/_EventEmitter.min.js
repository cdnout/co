import invariant from"fbjs/lib/invariant";import EmitterSubscription from"./_EmitterSubscription";import EventSubscriptionVendor from"./_EventSubscriptionVendor";var sparseFilterPredicate=function(){return!0},EventEmitter=function(){function e(e){this._subscriber=e||new EventSubscriptionVendor}var r=e.prototype;return r.addListener=function(e,r,t){return this._subscriber.addSubscription(e,new EmitterSubscription(this,this._subscriber,r,t))},r.removeAllListeners=function(e){this._subscriber.removeAllSubscriptions(e)},r.removeSubscription=function(e){invariant(e.emitter===this,"Subscription does not belong to this emitter."),this._subscriber.removeSubscription(e)},r.listenerCount=function(e){e=this._subscriber.getSubscriptionsForType(e);return e?e.filter(sparseFilterPredicate).length:0},r.emit=function(e){var r=this._subscriber.getSubscriptionsForType(e);if(r){for(var t=arguments.length,i=new Array(1<t?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];for(var s=0,o=r.length;s<o;s++){var u=r[s];u&&u.listener&&u.listener.apply(u.context,i)}}},r.removeListener=function(e,r){console.error("EventEmitter.removeListener('"+e+"', ...): Method has been deprecated. Please instead use `remove()` on the subscription returned by `EventEmitter.addListener`.");var t=this._subscriber.getSubscriptionsForType(e);if(t)for(var i=0,n=t.length;i<n;i++){var s=t[i];s&&s.listener===r&&s.remove()}},e}();export default EventEmitter;