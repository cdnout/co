"use strict";function ownKeys(t,e){var n,i=Object.keys(t);return Object.getOwnPropertySymbols&&(n=Object.getOwnPropertySymbols(t),e&&(n=n.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),i.push.apply(i,n)),i}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(Object(n),!0).forEach(function(e){_defineProperty(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):ownKeys(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}import{AnimatedEvent,attachNativeEvent}from"./AnimatedEvent";import AnimatedImplementation from"./AnimatedImplementation";import AnimatedInterpolation from"./nodes/AnimatedInterpolation";import AnimatedNode from"./nodes/AnimatedNode";import AnimatedProps from"./nodes/AnimatedProps";import AnimatedValue from"./nodes/AnimatedValue";import AnimatedValueXY from"./nodes/AnimatedValueXY";import createAnimatedComponent from"./createAnimatedComponent";var emptyAnimation={start:function(){},stop:function(){},reset:function(){},_startNativeLoop:function(){},_isUsingNativeDriver:function(){return!1}},spring=function(e,t){var n=e;return _objectSpread(_objectSpread({},emptyAnimation),{},{start:function(e){n.setValue(t.toValue),e&&e({finished:!0})}})},timing=function(e,t){var n=e;return _objectSpread(_objectSpread({},emptyAnimation),{},{start:function(e){n.setValue(t.toValue),e&&e({finished:!0})}})},decay=function(e,t){return emptyAnimation},sequence=function(e){return emptyAnimation},parallel=function(e,t){return emptyAnimation},delay=function(e){return emptyAnimation},stagger=function(e,t){return emptyAnimation},loop=function(e,t){t=(void 0===t?{}:t).iterations;return emptyAnimation},event=function(e,t){return null};export default{Value:AnimatedValue,ValueXY:AnimatedValueXY,Interpolation:AnimatedInterpolation,Node:AnimatedNode,decay:decay,timing:timing,spring:spring,add:AnimatedImplementation.add,subtract:AnimatedImplementation.subtract,divide:AnimatedImplementation.divide,multiply:AnimatedImplementation.multiply,modulo:AnimatedImplementation.modulo,diffClamp:AnimatedImplementation.diffClamp,delay:delay,sequence:sequence,parallel:parallel,stagger:stagger,loop:loop,event:event,createAnimatedComponent:createAnimatedComponent,attachNativeEvent:attachNativeEvent,forkEvent:AnimatedImplementation.forkEvent,unforkEvent:AnimatedImplementation.unforkEvent,Event:AnimatedEvent,__PropsOnlyForTests:AnimatedProps};