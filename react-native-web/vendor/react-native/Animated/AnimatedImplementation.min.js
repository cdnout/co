"use strict";function ownKeys(t,n){var e,i=Object.keys(t);return Object.getOwnPropertySymbols&&(e=Object.getOwnPropertySymbols(t),n&&(e=e.filter(function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable})),i.push.apply(i,e)),i}function _objectSpread(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?ownKeys(Object(e),!0).forEach(function(n){_defineProperty(t,n,e[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):ownKeys(Object(e)).forEach(function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))})}return t}function _defineProperty(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}import{AnimatedEvent,attachNativeEvent}from"./AnimatedEvent";import AnimatedAddition from"./nodes/AnimatedAddition";import AnimatedDiffClamp from"./nodes/AnimatedDiffClamp";import AnimatedDivision from"./nodes/AnimatedDivision";import AnimatedInterpolation from"./nodes/AnimatedInterpolation";import AnimatedModulo from"./nodes/AnimatedModulo";import AnimatedMultiplication from"./nodes/AnimatedMultiplication";import AnimatedNode from"./nodes/AnimatedNode";import AnimatedProps from"./nodes/AnimatedProps";import AnimatedSubtraction from"./nodes/AnimatedSubtraction";import AnimatedTracking from"./nodes/AnimatedTracking";import AnimatedValue from"./nodes/AnimatedValue";import AnimatedValueXY from"./nodes/AnimatedValueXY";import DecayAnimation from"./animations/DecayAnimation";import SpringAnimation from"./animations/SpringAnimation";import TimingAnimation from"./animations/TimingAnimation";import createAnimatedComponent from"./createAnimatedComponent";var add=function(n,t){return new AnimatedAddition(n,t)},subtract=function(n,t){return new AnimatedSubtraction(n,t)},divide=function(n,t){return new AnimatedDivision(n,t)},multiply=function(n,t){return new AnimatedMultiplication(n,t)},modulo=function(n,t){return new AnimatedModulo(n,t)},diffClamp=function(n,t,e){return new AnimatedDiffClamp(n,t,e)},_combineCallbacks=function(n,t){return n&&t.onComplete?function(){t.onComplete&&t.onComplete.apply(t,arguments),n&&n.apply(void 0,arguments)}:n||t.onComplete},maybeVectorAnim=function(n,t,e){if(n instanceof AnimatedValueXY){var i,o=_objectSpread({},t),r=_objectSpread({},t);for(i in t){var a=t[i],c=a.x,a=a.y;void 0!==c&&void 0!==a&&(o[i]=c,r[i]=a)}var u=e(n.x,o),n=e(n.y,r);return parallel([u,n],{stopTogether:!1})}return null},spring=function n(t,e){function i(n,t,e){e=_combineCallbacks(e,t);var i=n,n=t;i.stopTracking(),t.toValue instanceof AnimatedNode?i.track(new AnimatedTracking(i,t.toValue,SpringAnimation,n,e)):i.animate(new SpringAnimation(n),e)}return maybeVectorAnim(t,e,n)||{start:function(n){i(t,e,n)},stop:function(){t.stopAnimation()},reset:function(){t.resetAnimation()},_startNativeLoop:function(n){n=_objectSpread(_objectSpread({},e),{},{iterations:n});i(t,n)},_isUsingNativeDriver:function(){return e.useNativeDriver||!1}}},timing=function n(t,e){function i(n,t,e){e=_combineCallbacks(e,t);var i=n,n=t;i.stopTracking(),t.toValue instanceof AnimatedNode?i.track(new AnimatedTracking(i,t.toValue,TimingAnimation,n,e)):i.animate(new TimingAnimation(n),e)}return maybeVectorAnim(t,e,n)||{start:function(n){i(t,e,n)},stop:function(){t.stopAnimation()},reset:function(){t.resetAnimation()},_startNativeLoop:function(n){n=_objectSpread(_objectSpread({},e),{},{iterations:n});i(t,n)},_isUsingNativeDriver:function(){return e.useNativeDriver||!1}}},decay=function n(t,e){function i(n,t,e){e=_combineCallbacks(e,t),n.stopTracking(),n.animate(new DecayAnimation(t),e)}return maybeVectorAnim(t,e,n)||{start:function(n){i(t,e,n)},stop:function(){t.stopAnimation()},reset:function(){t.resetAnimation()},_startNativeLoop:function(n){n=_objectSpread(_objectSpread({},e),{},{iterations:n});i(t,n)},_isUsingNativeDriver:function(){return e.useNativeDriver||!1}}},sequence=function(i){var o=0;return{start:function(t){function e(n){n.finished&&++o!==i.length?i[o].start(e):t&&t(n)}0===i.length?t&&t({finished:!0}):i[o].start(e)},stop:function(){o<i.length&&i[o].stop()},reset:function(){i.forEach(function(n,t){t<=o&&n.reset()}),o=0},_startNativeLoop:function(){throw new Error("Loops run using the native driver cannot contain Animated.sequence animations")},_isUsingNativeDriver:function(){return!1}}},parallel=function(o,n){var r=0,a={},c=!(n&&!1===n.stopTogether),u={start:function(i){r!==o.length?o.forEach(function(n,t){function e(n){if(a[t]=!0,++r===o.length)return r=0,void(i&&i(n));!n.finished&&c&&u.stop()}n?n.start(e):e({finished:!0})}):i&&i({finished:!0})},stop:function(){o.forEach(function(n,t){a[t]||n.stop(),a[t]=!0})},reset:function(){o.forEach(function(n,t){n.reset(),a[t]=!1,r=0})},_startNativeLoop:function(){throw new Error("Loops run using the native driver cannot contain Animated.parallel animations")},_isUsingNativeDriver:function(){return!1}};return u},delay=function(n){return timing(new AnimatedValue(0),{toValue:0,delay:n,duration:0,useNativeDriver:!1})},stagger=function(e,n){return parallel(n.map(function(n,t){return sequence([delay(e*t),n])}))},loop=function(i,n){var t=void 0===n?{}:n,n=t.iterations,o=void 0===n?-1:n,t=t.resetBeforeIteration,r=void 0===t||t,a=!1,c=0;return{start:function(t){function e(n){void 0===n&&(n={finished:!0}),a||c===o||!1===n.finished?t&&t(n):(c++,r&&i.reset(),i.start(e))}i&&0!==o?i._isUsingNativeDriver()?i._startNativeLoop(o):e():t&&t({finished:!0})},stop:function(){a=!0,i.stop()},reset:function(){c=0,a=!1,i.reset()},_startNativeLoop:function(){throw new Error("Loops run using the native driver cannot contain Animated.loop animations")},_isUsingNativeDriver:function(){return i._isUsingNativeDriver()}}};function forkEvent(n,t){return n?n instanceof AnimatedEvent?(n.__addListener(t),n):function(){"function"==typeof n&&n.apply(void 0,arguments),t.apply(void 0,arguments)}:t}function unforkEvent(n,t){n&&n instanceof AnimatedEvent&&n.__removeListener(t)}var event=function(n,t){t=new AnimatedEvent(n,t);return t.__isNative?t:t.__getHandler()};export default{Value:AnimatedValue,ValueXY:AnimatedValueXY,Interpolation:AnimatedInterpolation,Node:AnimatedNode,decay:decay,timing:timing,spring:spring,add:add,subtract:subtract,divide:divide,multiply:multiply,modulo:modulo,diffClamp:diffClamp,delay:delay,sequence:sequence,parallel:parallel,stagger:stagger,loop:loop,event:event,createAnimatedComponent:createAnimatedComponent,attachNativeEvent:attachNativeEvent,forkEvent:forkEvent,unforkEvent:unforkEvent,Event:AnimatedEvent,__PropsOnlyForTests:AnimatedProps};