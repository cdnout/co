"use strict";function ownKeys(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);t&&(i=i.filter(function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable})),e.push.apply(e,i)}return e}function _objectSpread(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(e),!0).forEach(function(t){_defineProperty(n,t,e[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):ownKeys(Object(e)).forEach(function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))})}return n}function _defineProperty(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}import{AnimatedEvent,attachNativeEvent}from"./AnimatedEvent";import AnimatedAddition from"./nodes/AnimatedAddition";import AnimatedDiffClamp from"./nodes/AnimatedDiffClamp";import AnimatedDivision from"./nodes/AnimatedDivision";import AnimatedInterpolation from"./nodes/AnimatedInterpolation";import AnimatedModulo from"./nodes/AnimatedModulo";import AnimatedMultiplication from"./nodes/AnimatedMultiplication";import AnimatedNode from"./nodes/AnimatedNode";import AnimatedProps from"./nodes/AnimatedProps";import AnimatedSubtraction from"./nodes/AnimatedSubtraction";import AnimatedTracking from"./nodes/AnimatedTracking";import AnimatedValue from"./nodes/AnimatedValue";import AnimatedValueXY from"./nodes/AnimatedValueXY";import DecayAnimation from"./animations/DecayAnimation";import SpringAnimation from"./animations/SpringAnimation";import TimingAnimation from"./animations/TimingAnimation";import createAnimatedComponent from"./createAnimatedComponent";var add=function(n,t){return new AnimatedAddition(n,t)},subtract=function(n,t){return new AnimatedSubtraction(n,t)},divide=function(n,t){return new AnimatedDivision(n,t)},multiply=function(n,t){return new AnimatedMultiplication(n,t)},modulo=function(n,t){return new AnimatedModulo(n,t)},diffClamp=function(n,t,e){return new AnimatedDiffClamp(n,t,e)},_combineCallbacks=function(n,t){return n&&t.onComplete?function(){t.onComplete&&t.onComplete.apply(t,arguments),n&&n.apply(void 0,arguments)}:n||t.onComplete},maybeVectorAnim=function(n,t,e){if(n instanceof AnimatedValueXY){var i=_objectSpread({},t),o=_objectSpread({},t);for(var r in t){var a=t[r],m=a.x,c=a.y;void 0!==m&&void 0!==c&&(i[r]=m,o[r]=c)}var u=e(n.x,i),s=e(n.y,o);return parallel([u,s],{stopTogether:!1})}return null},spring=function n(t,e){var i=function(n,t,e){e=_combineCallbacks(e,t);var i=n,o=t;i.stopTracking(),t.toValue instanceof AnimatedNode?i.track(new AnimatedTracking(i,t.toValue,SpringAnimation,o,e)):i.animate(new SpringAnimation(o),e)};return maybeVectorAnim(t,e,n)||{start:function(n){i(t,e,n)},stop:function(){t.stopAnimation()},reset:function(){t.resetAnimation()},_startNativeLoop:function(n){var o=_objectSpread(_objectSpread({},e),{},{iterations:n});i(t,o)},_isUsingNativeDriver:function(){return e.useNativeDriver||!1}}},timing=function n(t,e){var i=function(n,t,e){e=_combineCallbacks(e,t);var i=n,o=t;i.stopTracking(),t.toValue instanceof AnimatedNode?i.track(new AnimatedTracking(i,t.toValue,TimingAnimation,o,e)):i.animate(new TimingAnimation(o),e)};return maybeVectorAnim(t,e,n)||{start:function(n){i(t,e,n)},stop:function(){t.stopAnimation()},reset:function(){t.resetAnimation()},_startNativeLoop:function(n){var o=_objectSpread(_objectSpread({},e),{},{iterations:n});i(t,o)},_isUsingNativeDriver:function(){return e.useNativeDriver||!1}}},decay=function n(t,e){var i=function(n,t,e){e=_combineCallbacks(e,t);var i=n,o=t;i.stopTracking(),i.animate(new DecayAnimation(o),e)};return maybeVectorAnim(t,e,n)||{start:function(n){i(t,e,n)},stop:function(){t.stopAnimation()},reset:function(){t.resetAnimation()},_startNativeLoop:function(n){var o=_objectSpread(_objectSpread({},e),{},{iterations:n});i(t,o)},_isUsingNativeDriver:function(){return e.useNativeDriver||!1}}},sequence=function(n){var t=0;return{start:function(e){0===n.length?e&&e({finished:!0}):n[t].start(function i(o){o.finished&&++t!==n.length?n[t].start(i):e&&e(o)})},stop:function(){t<n.length&&n[t].stop()},reset:function(){n.forEach(function(n,e){e<=t&&n.reset()}),t=0},_startNativeLoop:function(){throw new Error("Loops run using the native driver cannot contain Animated.sequence animations")},_isUsingNativeDriver:function(){return!1}}},parallel=function(n,t){var e=0,i={},o=!(t&&!1===t.stopTogether),r={start:function(t){e!==n.length?n.forEach(function(a,m){var c=function(a){if(i[m]=!0,++e===n.length)return e=0,void(t&&t(a));!a.finished&&o&&r.stop()};a?a.start(c):c({finished:!0})}):t&&t({finished:!0})},stop:function(){n.forEach(function(n,t){!i[t]&&n.stop(),i[t]=!0})},reset:function(){n.forEach(function(n,t){n.reset(),i[t]=!1,e=0})},_startNativeLoop:function(){throw new Error("Loops run using the native driver cannot contain Animated.parallel animations")},_isUsingNativeDriver:function(){return!1}};return r},delay=function(n){return timing(new AnimatedValue(0),{toValue:0,delay:n,duration:0})},stagger=function(n,t){return parallel(t.map(function(t,e){return sequence([delay(n*e),t])}))},loop=function(n,t){var e=void 0===t?{}:t,i=e.iterations,o=void 0===i?-1:i,r=e.resetBeforeIteration,a=void 0===r||r,m=!1,c=0;return{start:function(t){n&&0!==o?n._isUsingNativeDriver()?n._startNativeLoop(o):function e(i){void 0===i&&(i={finished:!0}),m||c===o||!1===i.finished?t&&t(i):(c++,a&&n.reset(),n.start(e))}():t&&t({finished:!0})},stop:function(){m=!0,n.stop()},reset:function(){c=0,m=!1,n.reset()},_startNativeLoop:function(){throw new Error("Loops run using the native driver cannot contain Animated.loop animations")},_isUsingNativeDriver:function(){return n._isUsingNativeDriver()}}};function forkEvent(n,t){return n?n instanceof AnimatedEvent?(n.__addListener(t),n):function(){"function"==typeof n&&n.apply(void 0,arguments),t.apply(void 0,arguments)}:t}function unforkEvent(n,t){n&&n instanceof AnimatedEvent&&n.__removeListener(t)}var event=function(n,t){var e=new AnimatedEvent(n,t);return e.__isNative?e:e.__getHandler()},AnimatedImplementation={Value:AnimatedValue,ValueXY:AnimatedValueXY,Interpolation:AnimatedInterpolation,Node:AnimatedNode,decay:decay,timing:timing,spring:spring,add:add,subtract:subtract,divide:divide,multiply:multiply,modulo:modulo,diffClamp:diffClamp,delay:delay,sequence:sequence,parallel:parallel,stagger:stagger,loop:loop,event:event,createAnimatedComponent:createAnimatedComponent,attachNativeEvent:attachNativeEvent,forkEvent:forkEvent,unforkEvent:unforkEvent,Event:AnimatedEvent,__PropsOnlyForTests:AnimatedProps};export default AnimatedImplementation;