"use strict";function _extends(){return(_extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e}).apply(this,arguments)}function _inheritsLoose(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}function ownKeys(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),i.push.apply(i,n)}return i}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(i),!0).forEach(function(t){_defineProperty(e,t,i[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):ownKeys(Object(i)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))})}return e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}import deepDiffer from"../deepDiffer";import*as React from"react";import StyleSheet from"../../../exports/StyleSheet";import View from"../../../exports/View";import VirtualizedList from"../VirtualizedList";import invariant from"fbjs/lib/invariant";var defaultProps=_objectSpread({},VirtualizedList.defaultProps,{numColumns:1,removeClippedSubviews:!1}),FlatList=function(e){_inheritsLoose(i,e);var t=i.prototype;function i(t){var i;return(i=e.call(this,t)||this)._virtualizedListPairs=[],i._captureRef=function(e){i._listRef=e},i._getItem=function(e,t){var n=i.props.numColumns;if(n>1){for(var r=[],o=0;o<n;o++){var s=e[t*n+o];null!=s&&r.push(s)}return r}return e[t]},i._getItemCount=function(e){return e?Math.ceil(e.length/i.props.numColumns):0},i._keyExtractor=function(e,t){var n=i.props,r=n.keyExtractor,o=n.numColumns;return o>1?(invariant(Array.isArray(e),"FlatList: Encountered internal consistency error, expected each item to consist of an array with 1-%s columns; instead, received a single item.",o),e.map(function(e,i){return r(e,t*o+i)}).join(":")):r(e,t)},i._renderItem=function(e){var t=i.props,n=t.renderItem,r=t.numColumns,o=t.columnWrapperStyle;if(r>1){var s=e.item,a=e.index;return invariant(Array.isArray(s),"Expected array of items with numColumns > 1"),React.createElement(View,{style:StyleSheet.compose(styles.row,o)},s.map(function(t,i){var o=n({item:t,index:a*r+i,separators:e.separators});return null!=o?React.createElement(React.Fragment,{key:i},o):null}))}return n(e)},i._checkProps(i.props),i.props.viewabilityConfigCallbackPairs?i._virtualizedListPairs=i.props.viewabilityConfigCallbackPairs.map(function(e){return{viewabilityConfig:e.viewabilityConfig,onViewableItemsChanged:i._createOnViewableItemsChanged(e.onViewableItemsChanged)}}):i.props.onViewableItemsChanged&&i._virtualizedListPairs.push({viewabilityConfig:i.props.viewabilityConfig,onViewableItemsChanged:i._createOnViewableItemsChanged(i.props.onViewableItemsChanged)}),i}return t.scrollToEnd=function(e){this._listRef&&this._listRef.scrollToEnd(e)},t.scrollToIndex=function(e){this._listRef&&this._listRef.scrollToIndex(e)},t.scrollToItem=function(e){this._listRef&&this._listRef.scrollToItem(e)},t.scrollToOffset=function(e){this._listRef&&this._listRef.scrollToOffset(e)},t.recordInteraction=function(){this._listRef&&this._listRef.recordInteraction()},t.flashScrollIndicators=function(){this._listRef&&this._listRef.flashScrollIndicators()},t.getScrollResponder=function(){if(this._listRef)return this._listRef.getScrollResponder()},t.getNativeScrollRef=function(){if(this._listRef)return this._listRef.getScrollRef()},t.getScrollableNode=function(){if(this._listRef)return this._listRef.getScrollableNode()},t.setNativeProps=function(e){this._listRef&&this._listRef.setNativeProps(e)},t.componentDidUpdate=function(e){invariant(e.numColumns===this.props.numColumns,"Changing numColumns on the fly is not supported. Change the key prop on FlatList when changing the number of columns to force a fresh render of the component."),invariant(e.onViewableItemsChanged===this.props.onViewableItemsChanged,"Changing onViewableItemsChanged on the fly is not supported"),invariant(!deepDiffer(e.viewabilityConfig,this.props.viewabilityConfig),"Changing viewabilityConfig on the fly is not supported"),invariant(e.viewabilityConfigCallbackPairs===this.props.viewabilityConfigCallbackPairs,"Changing viewabilityConfigCallbackPairs on the fly is not supported"),this._checkProps(this.props)},t._checkProps=function(e){var t=e.getItem,i=e.getItemCount,n=e.horizontal,r=e.numColumns,o=e.columnWrapperStyle,s=e.onViewableItemsChanged,a=e.viewabilityConfigCallbackPairs;invariant(!t&&!i,"FlatList does not support custom data formats."),r>1?invariant(!n,"numColumns does not support horizontal."):invariant(!o,"columnWrapperStyle not supported for single column lists"),invariant(!(s&&a),"FlatList does not support setting both onViewableItemsChanged and viewabilityConfigCallbackPairs.")},t._pushMultiColumnViewable=function(e,t){var i=this.props,n=i.numColumns,r=i.keyExtractor;t.item.forEach(function(i,o){invariant(null!=t.index,"Missing index!");var s=t.index*n+o;e.push(_objectSpread({},t,{item:i,key:r(i,s),index:s}))})},t._createOnViewableItemsChanged=function(e){var t=this;return function(i){var n=t.props.numColumns;if(e)if(n>1){var r=[],o=[];i.viewableItems.forEach(function(e){return t._pushMultiColumnViewable(o,e)}),i.changed.forEach(function(e){return t._pushMultiColumnViewable(r,e)}),e({viewableItems:o,changed:r})}else e(i)}},t.render=function(){return React.createElement(VirtualizedList,_extends({},this.props,{renderItem:this._renderItem,getItem:this._getItem,getItemCount:this._getItemCount,keyExtractor:this._keyExtractor,ref:this._captureRef,viewabilityConfigCallbackPairs:this._virtualizedListPairs}))},i}(React.PureComponent);FlatList.defaultProps=defaultProps;var styles=StyleSheet.create({row:{flexDirection:"row"}});export default FlatList;