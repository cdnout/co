"use strict";exports.__esModule=!0,exports.default=void 0;var React=_interopRequireWildcard(require("react")),_StyleSheet=_interopRequireDefault(require("../StyleSheet")),_View=_interopRequireDefault(require("../View")),_useMergeRefs=_interopRequireDefault(require("../../modules/useMergeRefs"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return _getRequireWildcardCache=function(){return e},e}function _interopRequireWildcard(e){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache();if(t&&t.has(e))return t.get(e);var r,l,o={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(r in e)Object.prototype.hasOwnProperty.call(e,r)&&((l=i?Object.getOwnPropertyDescriptor(e,r):null)&&(l.get||l.set)?Object.defineProperty(o,r,l):o[r]=e[r]);return o.default=e,t&&t.set(e,o),o}function normalizeScrollEvent(e){return{nativeEvent:{contentOffset:{get x(){return e.target.scrollLeft},get y(){return e.target.scrollTop}},contentSize:{get height(){return e.target.scrollHeight},get width(){return e.target.scrollWidth}},layoutMeasurement:{get height(){return e.target.offsetHeight},get width(){return e.target.offsetWidth}}},timeStamp:Date.now()}}function shouldEmitScrollEvent(e,t){e=Date.now()-e;return 0<t&&t<=e}var ScrollViewBase=(0,React.forwardRef)(function(e,t){var r=e.accessibilityLabel,l=e.accessibilityRole,o=e.accessibilityState,i=e.children,n=e.importantForAccessibility,c=e.nativeID,a=e.onLayout,u=e.onScroll,s=e.onTouchMove,f=e.onWheel,d=e.pointerEvents,h=e.scrollEnabled,p=void 0===h||h,g=e.scrollEventThrottle,S=void 0===g?0:g,y=e.showsHorizontalScrollIndicator,v=e.showsVerticalScrollIndicator,h=e.style,g=e.dataSet,e=e.testID,R=(0,React.useRef)({isScrolling:!1,scrollLastTick:0}),b=(0,React.useRef)(null),_=(0,React.useRef)(null);function w(t){return function(e){p&&t&&t(e)}}function m(e){R.current.scrollLastTick=Date.now(),u&&u(normalizeScrollEvent(e))}v=!1===y||!1===v;return React.createElement(_View.default,{accessibilityLabel:r,accessibilityRole:l,accessibilityState:o,children:i,dataSet:g,importantForAccessibility:n,nativeID:c,onLayout:a,onScroll:function(t){var e;t.stopPropagation(),t.target===_.current&&(t.persist(),null!=b.current&&clearTimeout(b.current),b.current=setTimeout(function(){var e;e=t,R.current.isScrolling=!1,u&&u(normalizeScrollEvent(e))},100),R.current.isScrolling?shouldEmitScrollEvent(R.current.scrollLastTick,S)&&m(t):(e=t,R.current.isScrolling=!0,m(e)))},onTouchMove:w(s),onWheel:w(f),pointerEvents:d,ref:(0,_useMergeRefs.default)(_,t),style:[h,!p&&styles.scrollDisabled,v&&styles.hideScrollbar],testID:e})}),styles=_StyleSheet.default.create({scrollDisabled:{overflowX:"hidden",overflowY:"hidden",touchAction:"none"},hideScrollbar:{scrollbarWidth:"none"}}),_default=ScrollViewBase;exports.default=ScrollViewBase,module.exports=exports.default;