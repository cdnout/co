"use strict";exports.__esModule=!0,exports.default=void 0;var React=_interopRequireWildcard(require("react")),_pick=_interopRequireDefault(require("../../modules/pick")),_useMergeRefs=_interopRequireDefault(require("../../modules/useMergeRefs")),_usePressEvents=_interopRequireDefault(require("../../modules/usePressEvents"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return _getRequireWildcardCache=function(){return e},e}function _interopRequireWildcard(e){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache();if(t&&t.has(e))return t.get(e);var r,s,a={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(r in e)Object.prototype.hasOwnProperty.call(e,r)&&((s=i?Object.getOwnPropertyDescriptor(e,r):null)&&(s.get||s.set)?Object.defineProperty(a,r,s):a[r]=e[r]);return a.default=e,t&&t.set(e,a),a}var forwardPropsList={accessibilityDisabled:!0,accessibilityLabel:!0,accessibilityLiveRegion:!0,accessibilityRole:!0,accessibilityState:!0,accessibilityValue:!0,children:!0,disabled:!0,focusable:!0,nativeID:!0,onBlur:!0,onFocus:!0,onLayout:!0,testID:!0},pickProps=function(e){return(0,_pick.default)(e,forwardPropsList)};function TouchableWithoutFeedback(e,t){var r=e.delayPressIn,s=e.delayPressOut,a=e.delayLongPress,i=e.disabled,o=e.focusable,u=e.onLongPress,n=e.onPress,c=e.onPressIn,l=e.onPressOut,d=e.rejectResponderTermination,f=(0,React.useRef)(null),p=(0,React.useMemo)(function(){return{cancelable:!d,disabled:i,delayLongPress:a,delayPressStart:r,delayPressEnd:s,onLongPress:u,onPress:n,onPressStart:c,onPressEnd:l}},[i,r,s,a,u,n,c,l,d]),b=(0,_usePressEvents.default)(f,p),y=React.Children.only(e.children),p=[y.props.children],e=pickProps(e);e.accessibilityDisabled=i,e.focusable=!i&&!1!==o,e.ref=(0,_useMergeRefs.default)(t,f,y.ref);b=Object.assign(e,b);return React.cloneElement.apply(React,[y,b].concat(p))}var MemoedTouchableWithoutFeedback=React.memo(React.forwardRef(TouchableWithoutFeedback));MemoedTouchableWithoutFeedback.displayName="TouchableWithoutFeedback";var _default=MemoedTouchableWithoutFeedback;exports.default=_default,module.exports=exports.default;