function ownKeys(e,o){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter(function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable})),r.push.apply(r,t)}return r}function _objectSpread(e){for(var o=1;o<arguments.length;o++){var r=null!=arguments[o]?arguments[o]:{};o%2?ownKeys(Object(r),!0).forEach(function(o){_defineProperty(e,o,r[o])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ownKeys(Object(r)).forEach(function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(r,o))})}return e}function _defineProperty(e,o,r){return o in e?Object.defineProperty(e,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[o]=r,e}import*as React from"react";import{forwardRef,useContext,useRef}from"react";import createElement from"../createElement";import css from"../StyleSheet/css";import*as forwardedProps from"../../modules/forwardedProps";import pick from"../../modules/pick";import useElementLayout from"../../modules/useElementLayout";import useMergeRefs from"../../modules/useMergeRefs";import usePlatformMethods from"../../modules/usePlatformMethods";import useResponderEvents from"../../modules/useResponderEvents";import StyleSheet from"../StyleSheet";import TextAncestorContext from"./TextAncestorContext";var forwardPropsList=_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({},forwardedProps.defaultProps),forwardedProps.accessibilityProps),forwardedProps.clickProps),forwardedProps.focusProps),forwardedProps.keyboardProps),forwardedProps.mouseProps),forwardedProps.touchProps),forwardedProps.styleProps),{},{href:!0,lang:!0,pointerEvents:!0}),pickProps=function(e){return pick(e,forwardPropsList)},Text=forwardRef(function(e,o){var r=e.dir,t=e.hrefAttrs,n=e.numberOfLines,s=e.onClick,l=e.onLayout,a=e.onPress,p=e.onMoveShouldSetResponder,d=e.onMoveShouldSetResponderCapture,i=e.onResponderEnd,c=e.onResponderGrant,u=e.onResponderMove,S=e.onResponderReject,f=e.onResponderRelease,m=e.onResponderStart,R=e.onResponderTerminate,b=e.onResponderTerminationRequest,h=e.onScrollShouldSetResponder,y=e.onScrollShouldSetResponderCapture,P=e.onSelectionChangeShouldSetResponder,w=e.onSelectionChangeShouldSetResponderCapture,x=e.onStartShouldSetResponder,v=e.onStartShouldSetResponderCapture,j=e.selectable,O=useContext(TextAncestorContext),g=useRef(null),C=[classes.text,!0===O&&classes.textHasAncestor,1===n&&classes.textOneLine,null!=n&&n>1&&classes.textMultiLine],k=[e.style,null!=n&&n>1&&{WebkitLineClamp:n},!0===j&&styles.selectable,!1===j&&styles.notSelectable,a&&styles.pressable];useElementLayout(g,l),useResponderEvents(g,{onMoveShouldSetResponder:p,onMoveShouldSetResponderCapture:d,onResponderEnd:i,onResponderGrant:c,onResponderMove:u,onResponderReject:S,onResponderRelease:f,onResponderStart:m,onResponderTerminate:R,onResponderTerminationRequest:b,onScrollShouldSetResponder:h,onScrollShouldSetResponderCapture:y,onSelectionChangeShouldSetResponder:P,onSelectionChangeShouldSetResponderCapture:w,onStartShouldSetResponder:x,onStartShouldSetResponderCapture:v});var E=O?"span":"div",M=pickProps(e);if(M.classList=C,M.dir=r,O||(M.dir=null!=r?r:"auto"),M.onClick=function(e){null!=s&&s(e),null==s&&null!=a&&(e.stopPropagation(),a(e))},M.style=k,null!=e.href&&null!=t){var _=t.download,L=t.rel,T=t.target;null!=_&&(M.download=_),null!=L&&(M.rel=L),"string"==typeof T&&"_"!==T.charAt(0)&&(M.target="_"+T)}var A=usePlatformMethods(M),W=useMergeRefs(g,A,o);M.ref=W;var D=createElement(E,M);return O?D:React.createElement(TextAncestorContext.Provider,{value:!0},D)});Text.displayName="Text";var classes=css.create({text:{border:"0 solid black",boxSizing:"border-box",color:"black",display:"inline",font:"14px System",margin:0,padding:0,whiteSpace:"pre-wrap",wordWrap:"break-word"},textHasAncestor:{color:"inherit",font:"inherit",whiteSpace:"inherit"},textOneLine:{maxWidth:"100%",overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"},textMultiLine:{display:"-webkit-box",maxWidth:"100%",overflow:"hidden",textOverflow:"ellipsis",WebkitBoxOrient:"vertical"}}),styles=StyleSheet.create({notSelectable:{userSelect:"none"},selectable:{userSelect:"text"},pressable:{cursor:"pointer"}});export default Text;