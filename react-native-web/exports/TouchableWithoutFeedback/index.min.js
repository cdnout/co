"use strict";import*as React from"react";import{useMemo,useRef}from"react";import pick from"../../modules/pick";import useMergeRefs from"../../modules/useMergeRefs";import usePressEvents from"../../modules/usePressEvents";var forwardPropsList={accessibilityDisabled:!0,accessibilityLabel:!0,accessibilityLiveRegion:!0,accessibilityRole:!0,accessibilityState:!0,accessibilityValue:!0,children:!0,disabled:!0,focusable:!0,nativeID:!0,onBlur:!0,onFocus:!0,onLayout:!0,testID:!0},pickProps=function(e){return pick(e,forwardPropsList)};function TouchableWithoutFeedback(e,s){var o=e.delayPressIn,r=e.delayPressOut,a=e.delayLongPress,t=e.disabled,i=e.focusable,c=e.onLongPress,l=e.onPress,n=e.onPressIn,u=e.onPressOut,d=e.rejectResponderTermination,b=useRef(null),f=useMemo(function(){return{cancelable:!d,disabled:t,delayLongPress:a,delayPressStart:o,delayPressEnd:r,onLongPress:c,onPress:l,onPressStart:n,onPressEnd:u}},[t,o,r,a,c,l,n,u,d]),m=usePressEvents(b,f),p=React.Children.only(e.children),f=[p.props.children],e=pickProps(e);e.accessibilityDisabled=t,e.focusable=!t&&!1!==i,e.ref=useMergeRefs(s,b,p.ref);m=Object.assign(e,m);return React.cloneElement.apply(React,[p,m].concat(f))}var MemoedTouchableWithoutFeedback=React.memo(React.forwardRef(TouchableWithoutFeedback));MemoedTouchableWithoutFeedback.displayName="TouchableWithoutFeedback";export default MemoedTouchableWithoutFeedback;