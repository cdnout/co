"use strict";function _extends(){return(_extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var s,o=arguments[t];for(s in o)Object.prototype.hasOwnProperty.call(o,s)&&(e[s]=o[s])}return e}).apply(this,arguments)}function _objectWithoutPropertiesLoose(e,t){if(null==e)return{};for(var s,o={},n=Object.keys(e),r=0;r<n.length;r++)s=n[r],0<=t.indexOf(s)||(o[s]=e[s]);return o}import*as React from"react";import{useCallback,useMemo,useState,useRef}from"react";import useMergeRefs from"../../modules/useMergeRefs";import usePressEvents from"../../modules/usePressEvents";import StyleSheet from"../StyleSheet";import View from"../View";function TouchableOpacity(e,t){var s=e.activeOpacity,o=e.delayPressIn,n=e.delayPressOut,r=e.delayLongPress,a=e.disabled,l=e.focusable,i=e.onLongPress,u=e.onPress,c=e.onPressIn,y=e.onPressOut,d=e.rejectResponderTermination,f=e.style,p=_objectWithoutPropertiesLoose(e,["activeOpacity","delayPressIn","delayPressOut","delayLongPress","disabled","focusable","onLongPress","onPress","onPressIn","onPressOut","rejectResponderTermination","style"]),P=useRef(null),m=useMergeRefs(t,P),b=useState("0s"),e=b[0],h=b[1],t=useState(null),b=t[0],O=t[1],g=useCallback(function(e,t){O(e),h(t?t/1e3+"s":"0s")},[O,h]),R=useCallback(function(e){g(null!=s?s:.2,e)},[s,g]),S=useCallback(function(e){g(null,e)},[g]),t=useMemo(function(){return{cancelable:!d,disabled:a,delayLongPress:r,delayPressStart:o,delayPressEnd:n,onLongPress:i,onPress:u,onPressStart:function(e){var t=null!=e.dispatchConfig?"onResponderGrant"===e.dispatchConfig.registrationName:"keydown"===e.type;R(t?0:150),null!=c&&c(e)},onPressEnd:function(e){S(250),null!=y&&y(e)}}},[r,o,n,a,i,u,c,y,d,R,S]),t=usePressEvents(P,t);return React.createElement(View,_extends({},p,t,{accessibilityDisabled:a,focusable:!a&&!1!==l,ref:m,style:[styles.root,!a&&styles.actionable,f,null!=b&&{opacity:b},{transitionDuration:e}]}))}var styles=StyleSheet.create({root:{transitionProperty:"opacity",transitionDuration:"0.15s",userSelect:"none"},actionable:{cursor:"pointer",touchAction:"manipulation"}}),MemoedTouchableOpacity=React.memo(React.forwardRef(TouchableOpacity));MemoedTouchableOpacity.displayName="TouchableOpacity";export default MemoedTouchableOpacity;