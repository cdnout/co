function _extends(){return(_extends=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r,o=arguments[e];for(r in o)Object.prototype.hasOwnProperty.call(o,r)&&(t[r]=o[r])}return t}).apply(this,arguments)}function _objectWithoutPropertiesLoose(t,e){if(null==t)return{};for(var r,o={},n=Object.keys(t),i=0;i<n.length;i++)r=n[i],0<=e.indexOf(r)||(o[r]=t[r]);return o}function _inheritsLoose(t,e){t.prototype=Object.create(e.prototype),_setPrototypeOf(t.prototype.constructor=t,e)}function _setPrototypeOf(t,e){return(_setPrototypeOf=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}import*as React from"react";import View from"../View";var KeyboardAvoidingView=function(n){function t(){for(var e,t=arguments.length,r=new Array(t),o=0;o<t;o++)r[o]=arguments[o];return(e=n.call.apply(n,[this].concat(r))||this).frame=null,e.onLayout=function(t){e.frame=t.nativeEvent.layout},e}_inheritsLoose(t,n);var e=t.prototype;return e.relativeKeyboardHeight=function(t){var e=this.frame;if(!e||!t)return 0;t=t.screenY-(this.props.keyboardVerticalOffset||0);return Math.max(e.y+e.height-t,0)},e.onKeyboardChange=function(t){},e.render=function(){var t=this.props,t=(t.behavior,t.contentContainerStyle,t.keyboardVerticalOffset,_objectWithoutPropertiesLoose(t,["behavior","contentContainerStyle","keyboardVerticalOffset"]));return React.createElement(View,_extends({onLayout:this.onLayout},t))},t}(React.Component);export default KeyboardAvoidingView;