function _objectWithoutPropertiesLoose(e,o){if(null==e)return{};for(var r,t={},n=Object.keys(e),s=0;s<n.length;s++)r=n[s],0<=o.indexOf(r)||(t[r]=e[r]);return t}function ownKeys(o,e){var r,t=Object.keys(o);return Object.getOwnPropertySymbols&&(r=Object.getOwnPropertySymbols(o),e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(o,e).enumerable})),t.push.apply(t,r)),t}function _objectSpread(o){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(Object(r),!0).forEach(function(e){_defineProperty(o,e,r[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(o,Object.getOwnPropertyDescriptors(r)):ownKeys(Object(r)).forEach(function(e){Object.defineProperty(o,e,Object.getOwnPropertyDescriptor(r,e))})}return o}function _defineProperty(e,o,r){return o in e?Object.defineProperty(e,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[o]=r,e}import*as React from"react";import createElement from"../createElement";import*as forwardedProps from"../../modules/forwardedProps";import pick from"../../modules/pick";import useElementLayout from"../../modules/useElementLayout";import useMergeRefs from"../../modules/useMergeRefs";import usePlatformMethods from"../../modules/usePlatformMethods";import useResponderEvents from"../../modules/useResponderEvents";import StyleSheet from"../StyleSheet";import TextAncestorContext from"../Text/TextAncestorContext";import{useLocaleContext,getLocaleDirection}from"../../modules/useLocale";var forwardPropsList=_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({},forwardedProps.defaultProps),forwardedProps.accessibilityProps),forwardedProps.clickProps),forwardedProps.focusProps),forwardedProps.keyboardProps),forwardedProps.mouseProps),forwardedProps.touchProps),forwardedProps.styleProps),{},{href:!0,lang:!0,onScroll:!0,onWheel:!0,pointerEvents:!0}),pickProps=function(e){return pick(e,forwardPropsList)},View=React.forwardRef(function(e,o){var r=e.hrefAttrs,t=e.onLayout,n=e.onMoveShouldSetResponder,s=e.onMoveShouldSetResponderCapture,d=e.onResponderEnd,p=e.onResponderGrant,l=e.onResponderMove,a=e.onResponderReject,i=e.onResponderRelease,u=e.onResponderStart,c=e.onResponderTerminate,S=e.onResponderTerminationRequest,f=e.onScrollShouldSetResponder,R=e.onScrollShouldSetResponderCapture,h=e.onSelectionChangeShouldSetResponder,m=e.onSelectionChangeShouldSetResponderCapture,y=e.onStartShouldSetResponder,b=e.onStartShouldSetResponderCapture,P=_objectWithoutPropertiesLoose(e,["hrefAttrs","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture"]);"production"!==process.env.NODE_ENV&&React.Children.toArray(e.children).forEach(function(e){"string"==typeof e&&console.error("Unexpected text node: "+e+". A text node cannot be a child of a <View>.")});var w=React.useContext(TextAncestorContext),g=React.useRef(null),j=useLocaleContext().direction;useElementLayout(g,t),useResponderEvents(g,{onMoveShouldSetResponder:n,onMoveShouldSetResponderCapture:s,onResponderEnd:d,onResponderGrant:p,onResponderMove:l,onResponderReject:a,onResponderRelease:i,onResponderStart:u,onResponderTerminate:c,onResponderTerminationRequest:S,onScrollShouldSetResponder:f,onScrollShouldSetResponderCapture:R,onSelectionChangeShouldSetResponder:h,onSelectionChangeShouldSetResponderCapture:m,onStartShouldSetResponder:y,onStartShouldSetResponderCapture:b});y="div",b=null!=e.lang?getLocaleDirection(e.lang):null,b=e.dir||b,j=b||j,P=pickProps(P);P.dir=b,P.style=[styles.view$raw,w&&styles.inline,e.style],null!=e.href&&(y="a",null!=r&&(w=r.download,e=r.rel,v=r.target,null!=w&&(P.download=w),null!=e&&(P.rel=e),"string"==typeof v&&(P.target="_"!==v.charAt(0)?"_"+v:v)));var v=usePlatformMethods(P),o=useMergeRefs(g,v,o);return P.ref=o,createElement(y,P,{writingDirection:j})});View.displayName="View";var styles=StyleSheet.create({view$raw:{alignItems:"stretch",backgroundColor:"transparent",border:"0 solid black",boxSizing:"border-box",display:"flex",flexBasis:"auto",flexDirection:"column",flexShrink:0,listStyle:"none",margin:0,minHeight:0,minWidth:0,padding:0,position:"relative",textDecoration:"none",zIndex:0},inline:{display:"inline-flex"}});export default View;