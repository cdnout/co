import*as React from"react";import{forwardRef,useContext,useRef}from"react";import createElement from"../createElement";import css from"../StyleSheet/css";import pick from"../../modules/pick";import useElementLayout from"../../modules/useElementLayout";import useMergeRefs from"../../modules/useMergeRefs";import usePlatformMethods from"../../modules/usePlatformMethods";import useResponderEvents from"../../modules/useResponderEvents";import StyleSheet from"../StyleSheet";import TextAncestorContext from"../Text/TextAncestorContext";var forwardPropsList={accessibilityLabel:!0,accessibilityLiveRegion:!0,accessibilityRole:!0,accessibilityState:!0,accessibilityValue:!0,accessible:!0,children:!0,classList:!0,disabled:!0,importantForAccessibility:!0,nativeID:!0,onBlur:!0,onClick:!0,onClickCapture:!0,onContextMenu:!0,onFocus:!0,onKeyDown:!0,onKeyUp:!0,onTouchCancel:!0,onTouchCancelCapture:!0,onTouchEnd:!0,onTouchEndCapture:!0,onTouchMove:!0,onTouchMoveCapture:!0,onTouchStart:!0,onTouchStartCapture:!0,pointerEvents:!0,ref:!0,style:!0,testID:!0,dataSet:!0,onMouseDown:!0,onMouseEnter:!0,onMouseLeave:!0,onMouseMove:!0,onMouseOver:!0,onMouseOut:!0,onMouseUp:!0,onScroll:!0,onWheel:!0,href:!0,rel:!0,target:!0},pickProps=function(e){return pick(e,forwardPropsList)},View=forwardRef(function(e,o){var t=e.onLayout,n=e.onMoveShouldSetResponder,r=e.onMoveShouldSetResponderCapture,s=e.onResponderEnd,l=e.onResponderGrant,i=e.onResponderMove,a=e.onResponderReject,d=e.onResponderRelease,u=e.onResponderStart,p=e.onResponderTerminate,c=e.onResponderTerminationRequest,S=e.onScrollShouldSetResponder,R=e.onScrollShouldSetResponderCapture,m=e.onSelectionChangeShouldSetResponder,h=e.onSelectionChangeShouldSetResponderCapture,f=e.onStartShouldSetResponder,v=e.onStartShouldSetResponderCapture;"production"!==process.env.NODE_ENV&&React.Children.toArray(e.children).forEach(function(e){"string"==typeof e&&console.error("Unexpected text node: "+e+". A text node cannot be a child of a <View>.")});var C=useContext(TextAncestorContext),y=useRef(null);useElementLayout(y,t),useResponderEvents(y,{onMoveShouldSetResponder:n,onMoveShouldSetResponderCapture:r,onResponderEnd:s,onResponderGrant:l,onResponderMove:i,onResponderReject:a,onResponderRelease:d,onResponderStart:u,onResponderTerminate:p,onResponderTerminationRequest:c,onScrollShouldSetResponder:S,onScrollShouldSetResponderCapture:R,onSelectionChangeShouldSetResponder:m,onSelectionChangeShouldSetResponderCapture:h,onStartShouldSetResponder:f,onStartShouldSetResponderCapture:v});var M=StyleSheet.compose(C&&styles.inline,e.style),x=pickProps(e);x.classList=classList,x.style=M;var E=usePlatformMethods(x),T=useMergeRefs(y,E,o);return x.ref=T,createElement("div",x)});View.displayName="View";var classes=css.create({view:{alignItems:"stretch",border:"0 solid black",boxSizing:"border-box",display:"flex",flexBasis:"auto",flexDirection:"column",flexShrink:0,margin:0,minHeight:0,minWidth:0,padding:0,position:"relative",zIndex:0}}),classList=[classes.view],styles=StyleSheet.create({inline:{display:"inline-flex"}});export default View;