import invariant from"fbjs/lib/invariant";import ExecutionEnvironment from"fbjs/lib/ExecutionEnvironment";var canUseDOM=ExecutionEnvironment.canUseDOM,initialURL=canUseDOM?window.location.href:"",Linking=function(){function n(){var i=this;this._eventCallbacks={},this.addEventListener=function(n,t){i._eventCallbacks[n]?i._eventCallbacks[n].push(t):i._eventCallbacks[n]=[t]},this.removeEventListener=function(n,t){var e=i._eventCallbacks[n].filter(function(n){return n.toString()!==t.toString()});i._eventCallbacks[n]=e}}var t=n.prototype;return t._dispatchEvent=function(n){for(var t=arguments.length,e=new Array(1<t?t-1:0),i=1;i<t;i++)e[i-1]=arguments[i];var o=this._eventCallbacks[n];null!=o&&Array.isArray(o)&&o.map(function(n){n.apply(void 0,e)})},t.canOpenURL=function(){return Promise.resolve(!0)},t.getInitialURL=function(){return Promise.resolve(initialURL)},t.openURL=function(n){try{return open(n),this._dispatchEvent("onOpen",n),Promise.resolve()}catch(n){return Promise.reject(n)}},t._validateURL=function(n){invariant("string"==typeof n,"Invalid URL: should be a string. Was: "+n),invariant(n,"Invalid URL: cannot be empty")},n}(),open=function(n){canUseDOM&&(0===(n=new URL(n,window.location).toString()).indexOf("tel:")?window.location=n:window.open(n,"_blank","noopener"))};export default new Linking;