"use strict";function _extends(){return(_extends=Object.assign||function(e){for(var s=1;s<arguments.length;s++){var t,r=arguments[s];for(t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e}).apply(this,arguments)}function _objectWithoutPropertiesLoose(e,s){if(null==e)return{};for(var t,r={},n=Object.keys(e),l=0;l<n.length;l++)t=n[l],0<=s.indexOf(t)||(r[t]=e[t]);return r}import*as React from"react";import{useCallback,useMemo,useState,useRef}from"react";import useMergeRefs from"../../modules/useMergeRefs";import usePressEvents from"../../modules/usePressEvents";import StyleSheet from"../StyleSheet";import View from"../View";function createExtraStyles(e,s){return{child:{opacity:null!=e?e:.85},underlay:{backgroundColor:void 0===s?"black":s}}}function hasPressHandler(e){return null!=e.onPress||null!=e.onPressIn||null!=e.onPressOut||null!=e.onLongPress}function TouchableHighlight(e,s){var t=e.activeOpacity,r=e.children,n=e.delayPressIn,l=e.delayPressOut,o=e.delayLongPress,a=e.disabled,u=e.focusable,i=e.onHideUnderlay,c=e.onLongPress,d=e.onPress,y=e.onPressIn,h=e.onPressOut,f=e.onShowUnderlay,P=e.rejectResponderTermination,m=e.style,b=e.testOnly_pressed,p=e.underlayColor,g=_objectWithoutPropertiesLoose(e,["activeOpacity","children","delayPressIn","delayPressOut","delayLongPress","disabled","focusable","onHideUnderlay","onLongPress","onPress","onPressIn","onPressOut","onShowUnderlay","rejectResponderTermination","style","testOnly_pressed","underlayColor"]),S=useRef(null),O=useMergeRefs(s,S),R=useState(!0===b?createExtraStyles(t,p):null),s=R[0],v=R[1],H=useCallback(function(){hasPressHandler(e)&&(v(createExtraStyles(t,p)),null!=f&&f())},[t,f,e,p]),E=useCallback(function(){!0!==b&&hasPressHandler(e)&&(v(null),null!=i&&i())},[i,e,b]),R=useMemo(function(){return{cancelable:!P,disabled:a,delayLongPress:o,delayPressStart:n,delayPressEnd:l,onLongPress:c,onPress:d,onPressStart:function(e){H(),null!=y&&y(e)},onPressEnd:function(e){E(),null!=h&&h(e)}}},[o,n,l,a,c,d,y,h,P,H,E]),R=usePressEvents(S,R),r=React.Children.only(r);return React.createElement(View,_extends({},g,R,{accessibilityDisabled:a,focusable:!a&&!1!==u,ref:O,style:[styles.root,m,!a&&styles.actionable,s&&s.underlay]}),React.cloneElement(r,{style:StyleSheet.compose(r.props.style,s&&s.child)}))}var styles=StyleSheet.create({root:{userSelect:"none"},actionable:{cursor:"pointer",touchAction:"manipulation"}}),MemoedTouchableHighlight=React.memo(React.forwardRef(TouchableHighlight));MemoedTouchableHighlight.displayName="TouchableHighlight";export default MemoedTouchableHighlight;