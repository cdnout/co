import invariant from"fbjs/lib/invariant";import ExecutionEnvironment from"fbjs/lib/ExecutionEnvironment";var canUseDOM=ExecutionEnvironment.canUseDOM,dimensions={window:{fontScale:1,height:0,scale:1,width:0},screen:{fontScale:1,height:0,scale:1,width:0}},listeners={},Dimensions=function(){function n(){}return n.get=function(n){return invariant(dimensions[n],"No dimension set for key "+n),dimensions[n]},n.set=function(n){n&&(canUseDOM?invariant(!1,"Dimensions cannot be set in the browser"):(null!=n.screen&&(dimensions.screen=n.screen),null!=n.window&&(dimensions.window=n.window)))},n._update=function(){var n,e;canUseDOM&&(e=(n=window).document.documentElement,dimensions.window={fontScale:1,height:e.clientHeight,scale:n.devicePixelRatio||1,width:e.clientWidth},dimensions.screen={fontScale:1,height:n.screen.height,scale:n.devicePixelRatio||1,width:n.screen.width},Array.isArray(listeners.change)&&listeners.change.forEach(function(n){return n(dimensions)}))},n.addEventListener=function(n,e){var i=this;return listeners[n]=listeners[n]||[],listeners[n].push(e),{remove:function(){i.removeEventListener(n,e)}}},n.removeEventListener=function(n,e){Array.isArray(listeners[n])&&(listeners[n]=listeners[n].filter(function(n){return n!==e}))},n}();canUseDOM&&(Dimensions._update(),window.addEventListener("resize",Dimensions._update,!1));export{Dimensions as default};