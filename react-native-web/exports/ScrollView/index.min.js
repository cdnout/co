function ownKeys(o,e){var r,t=Object.keys(o);return Object.getOwnPropertySymbols&&(r=Object.getOwnPropertySymbols(o),e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(o,e).enumerable})),t.push.apply(t,r)),t}function _objectSpread(o){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(Object(r),!0).forEach(function(e){_defineProperty(o,e,r[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(o,Object.getOwnPropertyDescriptors(r)):ownKeys(Object(r)).forEach(function(e){Object.defineProperty(o,e,Object.getOwnPropertyDescriptor(r,e))})}return o}function _defineProperty(e,o,r){return o in e?Object.defineProperty(e,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[o]=r,e}function _extends(){return(_extends=Object.assign||function(e){for(var o=1;o<arguments.length;o++){var r,t=arguments[o];for(r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function _objectWithoutPropertiesLoose(e,o){if(null==e)return{};for(var r,t={},n=Object.keys(e),l=0;l<n.length;l++)r=n[l],0<=o.indexOf(r)||(t[r]=e[r]);return t}import createReactClass from"create-react-class";import dismissKeyboard from"../../modules/dismissKeyboard";import invariant from"fbjs/lib/invariant";import mergeRefs from"../../modules/mergeRefs";import ScrollResponder from"../../modules/ScrollResponder";import ScrollViewBase from"./ScrollViewBase";import StyleSheet from"../StyleSheet";import View from"../View";import React from"react";var emptyObject={},ScrollView=createReactClass({displayName:"ScrollView",mixins:[ScrollResponder.Mixin],getInitialState:function(){return this.scrollResponderMixinGetInitialState()},flashScrollIndicators:function(){this.scrollResponderFlashScrollIndicators()},getScrollResponder:function(){return this},getScrollableNode:function(){return this._scrollNodeRef},getInnerViewRef:function(){return this._innerViewRef},getInnerViewNode:function(){return this._innerViewRef},getNativeScrollRef:function(){return this._scrollNodeRef},scrollTo:function(e,o,r){var t;"number"==typeof e?console.warn("`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead."):(o=(t=e||emptyObject).x,e=t.y,r=t.animated),this.getScrollResponder().scrollResponderScrollTo({x:o||0,y:e||0,animated:!1!==r})},scrollToEnd:function(e){var o=!1!==(e&&e.animated),r=this.props.horizontal,t=this.getScrollResponder(),n=t.scrollResponderGetScrollableNode(),e=r?n.scrollWidth:0,n=r?0:n.scrollHeight;t.scrollResponderScrollTo({x:e,y:n,animated:o})},render:function(){var o,e=this.props,r=e.contentContainerStyle,t=e.horizontal,n=e.onContentSizeChange,l=e.refreshControl,s=e.stickyHeaderIndices,i=e.pagingEnabled,e=(e.forwardedRef,e.keyboardDismissMode,e.onScroll,_objectWithoutPropertiesLoose(e,["contentContainerStyle","horizontal","onContentSizeChange","refreshControl","stickyHeaderIndices","pagingEnabled","forwardedRef","keyboardDismissMode","onScroll"]));"production"!==process.env.NODE_ENV&&this.props.style&&(o=StyleSheet.flatten(this.props.style),a=["alignItems","justifyContent"].filter(function(e){return o&&void 0!==o[e]}),invariant(0===a.length,"ScrollView child layout ("+JSON.stringify(a)+") must be applied through the contentContainerStyle prop."));var a={};n&&(a={onLayout:this._handleContentOnLayout});var c=!t&&Array.isArray(s),n=c||i?React.Children.map(this.props.children,function(e,o){o=c&&-1<s.indexOf(o);return null!=e&&(o||i)?React.createElement(View,{style:StyleSheet.compose(o&&styles.stickyHeader,i&&styles.pagingEnabledChild)},e):e}):this.props.children,n=React.createElement(View,_extends({},a,{children:n,collapsable:!1,ref:this._setInnerViewRef,style:StyleSheet.compose(t&&styles.contentContainerHorizontal,r)})),r=t?styles.baseHorizontal:styles.baseVertical,t=t?styles.pagingEnabledHorizontal:styles.pagingEnabledVertical,r=_objectSpread(_objectSpread({},e),{},{style:[r,i&&t,this.props.style],onTouchStart:this.scrollResponderHandleTouchStart,onTouchMove:this.scrollResponderHandleTouchMove,onTouchEnd:this.scrollResponderHandleTouchEnd,onScrollBeginDrag:this.scrollResponderHandleScrollBeginDrag,onScrollEndDrag:this.scrollResponderHandleScrollEndDrag,onMomentumScrollBegin:this.scrollResponderHandleMomentumScrollBegin,onMomentumScrollEnd:this.scrollResponderHandleMomentumScrollEnd,onStartShouldSetResponder:this.scrollResponderHandleStartShouldSetResponder,onStartShouldSetResponderCapture:this.scrollResponderHandleStartShouldSetResponderCapture,onScrollShouldSetResponder:this.scrollResponderHandleScrollShouldSetResponder,onScroll:this._handleScroll,onResponderGrant:this.scrollResponderHandleResponderGrant,onResponderTerminationRequest:this.scrollResponderHandleTerminationRequest,onResponderTerminate:this.scrollResponderHandleTerminate,onResponderRelease:this.scrollResponderHandleResponderRelease,onResponderReject:this.scrollResponderHandleResponderReject}),t=ScrollViewBase;invariant(void 0!==t,"ScrollViewClass must not be undefined");n=React.createElement(t,_extends({},r,{ref:this._setScrollNodeRef}),n);return l?React.cloneElement(l,{style:r.style},n):n},_handleContentOnLayout:function(e){var o=e.nativeEvent.layout,e=o.width,o=o.height;this.props.onContentSizeChange(e,o)},_handleScroll:function(e){"production"!==process.env.NODE_ENV&&this.props.onScroll&&null==this.props.scrollEventThrottle&&console.log("You specified `onScroll` on a <ScrollView> but not `scrollEventThrottle`. You will only receive one event. Using `16` you get all the events but be aware that it may cause frame drops, use a bigger number if you don't need as much precision."),"on-drag"===this.props.keyboardDismissMode&&dismissKeyboard(),this.scrollResponderHandleScroll(e)},_setInnerViewRef:function(e){this._innerViewRef=e},_setScrollNodeRef:function(e){null!=(this._scrollNodeRef=e)&&(e.getScrollResponder=this.getScrollResponder,e.getInnerViewNode=this.getInnerViewNode,e.getInnerViewRef=this.getInnerViewRef,e.getNativeScrollRef=this.getNativeScrollRef,e.getScrollableNode=this.getScrollableNode,e.scrollTo=this.scrollTo,e.scrollToEnd=this.scrollToEnd,e.flashScrollIndicators=this.flashScrollIndicators,e.scrollResponderZoomTo=this.scrollResponderZoomTo,e.scrollResponderScrollNativeHandleToKeyboard=this.scrollResponderScrollNativeHandleToKeyboard),mergeRefs(this.props.forwardedRef)(e)}}),commonStyle={flexGrow:1,flexShrink:1,transform:[{translateZ:0}],WebkitOverflowScrolling:"touch"},styles=StyleSheet.create({baseVertical:_objectSpread(_objectSpread({},commonStyle),{},{flexDirection:"column",overflowX:"hidden",overflowY:"auto"}),baseHorizontal:_objectSpread(_objectSpread({},commonStyle),{},{flexDirection:"row",overflowX:"auto",overflowY:"hidden"}),contentContainerHorizontal:{flexDirection:"row"},stickyHeader:{position:"sticky",top:0,zIndex:10},pagingEnabledHorizontal:{scrollSnapType:"x mandatory"},pagingEnabledVertical:{scrollSnapType:"y mandatory"},pagingEnabledChild:{scrollSnapAlign:"start"}}),ForwardedScrollView=React.forwardRef(function(e,o){return React.createElement(ScrollView,_extends({},e,{forwardedRef:o}))});ForwardedScrollView.displayName="ScrollView";export default ForwardedScrollView;