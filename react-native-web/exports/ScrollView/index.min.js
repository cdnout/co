function ownKeys(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);o&&(r=r.filter(function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable})),t.push.apply(t,r)}return t}function _objectSpread(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?ownKeys(Object(t),!0).forEach(function(o){_defineProperty(e,o,t[o])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))})}return e}function _defineProperty(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function _extends(){return(_extends=Object.assign||function(e){for(var o=1;o<arguments.length;o++){var t=arguments[o];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function _objectWithoutPropertiesLoose(e,o){if(null==e)return{};var t,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],o.indexOf(t)>=0||(n[t]=e[t]);return n}import createReactClass from"create-react-class";import dismissKeyboard from"../../modules/dismissKeyboard";import invariant from"fbjs/lib/invariant";import ScrollResponder from"../../modules/ScrollResponder";import ScrollViewBase from"./ScrollViewBase";import StyleSheet from"../StyleSheet";import View from"../View";import React from"react";var emptyObject={},ScrollView=createReactClass({displayName:"ScrollView",mixins:[ScrollResponder.Mixin],getInitialState:function(){return this.scrollResponderMixinGetInitialState()},flashScrollIndicators:function(){this.scrollResponderFlashScrollIndicators()},setNativeProps:function(e){this._scrollNodeRef&&this._scrollNodeRef.setNativeProps(e)},getScrollResponder:function(){return this},getScrollableNode:function(){return this._scrollNodeRef},getInnerViewNode:function(){return this._innerViewRef},scrollTo:function(e,o,t){if("number"==typeof e)console.warn("`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.");else{var r=e||emptyObject;o=r.x,e=r.y,t=r.animated}this.getScrollResponder().scrollResponderScrollTo({x:o||0,y:e||0,animated:!1!==t})},scrollToEnd:function(e){var o=!1!==(e&&e.animated),t=this.props.horizontal,r=this.getScrollResponder(),n=r.scrollResponderGetScrollableNode(),l=t?n.scrollWidth:0,s=t?0:n.scrollHeight;r.scrollResponderScrollTo({x:l,y:s,animated:o})},render:function(){var e=this.props,o=e.contentContainerStyle,t=e.horizontal,r=e.onContentSizeChange,n=e.refreshControl,l=e.stickyHeaderIndices,s=e.pagingEnabled,i=(e.keyboardDismissMode,e.onScroll,_objectWithoutPropertiesLoose(e,["contentContainerStyle","horizontal","onContentSizeChange","refreshControl","stickyHeaderIndices","pagingEnabled","keyboardDismissMode","onScroll"]));if("production"!==process.env.NODE_ENV&&this.props.style){var a=StyleSheet.flatten(this.props.style),c=["alignItems","justifyContent"].filter(function(e){return a&&void 0!==a[e]});invariant(0===c.length,"ScrollView child layout ("+JSON.stringify(c)+") must be applied through the contentContainerStyle prop.")}var d={};r&&(d={onLayout:this._handleContentOnLayout});var p=!t&&Array.isArray(l),h=p||s?React.Children.map(this.props.children,function(e,o){var t=p&&l.indexOf(o)>-1;return null!=e&&(t||s)?React.createElement(View,{style:StyleSheet.compose(t&&styles.stickyHeader,s&&styles.pagingEnabledChild)},e):e}):this.props.children,u=React.createElement(View,_extends({},d,{children:h,collapsable:!1,ref:this._setInnerViewRef,style:StyleSheet.compose(t&&styles.contentContainerHorizontal,o)})),S=t?styles.baseHorizontal:styles.baseVertical,f=t?styles.pagingEnabledHorizontal:styles.pagingEnabledVertical,y=_objectSpread({},i,{style:[S,s&&f,this.props.style],onTouchStart:this.scrollResponderHandleTouchStart,onTouchMove:this.scrollResponderHandleTouchMove,onTouchEnd:this.scrollResponderHandleTouchEnd,onScrollBeginDrag:this.scrollResponderHandleScrollBeginDrag,onScrollEndDrag:this.scrollResponderHandleScrollEndDrag,onMomentumScrollBegin:this.scrollResponderHandleMomentumScrollBegin,onMomentumScrollEnd:this.scrollResponderHandleMomentumScrollEnd,onStartShouldSetResponder:this.scrollResponderHandleStartShouldSetResponder,onStartShouldSetResponderCapture:this.scrollResponderHandleStartShouldSetResponderCapture,onScrollShouldSetResponder:this.scrollResponderHandleScrollShouldSetResponder,onScroll:this._handleScroll,onResponderGrant:this.scrollResponderHandleResponderGrant,onResponderTerminationRequest:this.scrollResponderHandleTerminationRequest,onResponderTerminate:this.scrollResponderHandleTerminate,onResponderRelease:this.scrollResponderHandleResponderRelease,onResponderReject:this.scrollResponderHandleResponderReject}),m=ScrollViewBase;return invariant(void 0!==m,"ScrollViewClass must not be undefined"),n?React.cloneElement(n,{style:y.style},React.createElement(m,_extends({},y,{ref:this._setScrollNodeRef,style:S}),u)):React.createElement(m,_extends({},y,{ref:this._setScrollNodeRef}),u)},_handleContentOnLayout:function(e){var o=e.nativeEvent.layout,t=o.width,r=o.height;this.props.onContentSizeChange(t,r)},_handleScroll:function(e){"production"!==process.env.NODE_ENV&&this.props.onScroll&&null==this.props.scrollEventThrottle&&console.log("You specified `onScroll` on a <ScrollView> but not `scrollEventThrottle`. You will only receive one event. Using `16` you get all the events but be aware that it may cause frame drops, use a bigger number if you don't need as much precision."),"on-drag"===this.props.keyboardDismissMode&&dismissKeyboard(),this.scrollResponderHandleScroll(e)},_setInnerViewRef:function(e){this._innerViewRef=e},_setScrollNodeRef:function(e){this._scrollNodeRef=e}}),commonStyle={flexGrow:1,flexShrink:1,transform:[{translateZ:0}],WebkitOverflowScrolling:"touch"},styles=StyleSheet.create({baseVertical:_objectSpread({},commonStyle,{flexDirection:"column",overflowX:"hidden",overflowY:"auto"}),baseHorizontal:_objectSpread({},commonStyle,{flexDirection:"row",overflowX:"auto",overflowY:"hidden"}),contentContainerHorizontal:{flexDirection:"row"},stickyHeader:{position:"sticky",top:0,zIndex:10},pagingEnabledHorizontal:{scrollSnapType:"x mandatory"},pagingEnabledVertical:{scrollSnapType:"y mandatory"},pagingEnabledChild:{scrollSnapAlign:"start"}});export default ScrollView;