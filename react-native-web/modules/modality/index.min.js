import{canUseDOM}from"fbjs/lib/ExecutionEnvironment";import createEventHandle from"../createEventHandle";var previousModality,previousActiveModality,supportsPointerEvent=function(){return!("undefined"==typeof window||null==window.PointerEvent)},activeModality="keyboard",modality="keyboard",isEmulatingMouseEvents=!1,listeners=new Set,KEYBOARD="keyboard",MOUSE="mouse",TOUCH="touch",BLUR="blur",CONTEXTMENU="contextmenu",FOCUS="focus",KEYDOWN="keydown",MOUSEDOWN="mousedown",MOUSEMOVE="mousemove",MOUSEUP="mouseup",POINTERDOWN="pointerdown",POINTERMOVE="pointermove",SCROLL="scroll",SELECTIONCHANGE="selectionchange",TOUCHCANCEL="touchcancel",TOUCHMOVE="touchmove",TOUCHSTART="touchstart",VISIBILITYCHANGE="visibilitychange",bubbleOptions={passive:!0},captureOptions={capture:!0,passive:!0},addBlurListener=createEventHandle(BLUR,bubbleOptions),addFocusListener=createEventHandle(FOCUS,bubbleOptions),addVisibilityChangeListener=createEventHandle(VISIBILITYCHANGE,captureOptions),addKeyDownListener=createEventHandle(KEYDOWN,captureOptions),addPointerDownListener=createEventHandle(POINTERDOWN,captureOptions),addPointerMoveListener=createEventHandle(POINTERMOVE,captureOptions),addContextMenuListener=createEventHandle(CONTEXTMENU,captureOptions),addMouseDownListener=createEventHandle(MOUSEDOWN,captureOptions),addMouseMoveListener=createEventHandle(MOUSEMOVE,captureOptions),addMouseUpListener=createEventHandle(MOUSEUP,captureOptions),addScrollListener=createEventHandle(SCROLL,captureOptions),addSelectiomChangeListener=createEventHandle(SELECTIONCHANGE,captureOptions),addTouchCancelListener=createEventHandle(TOUCHCANCEL,captureOptions),addTouchMoveListener=createEventHandle(TOUCHMOVE,captureOptions),addTouchStartListener=createEventHandle(TOUCHSTART,captureOptions);function restoreModality(){null==previousModality&&null==previousActiveModality||(null!=previousModality&&(modality=previousModality,previousModality=null),null!=previousActiveModality&&(activeModality=previousActiveModality,previousActiveModality=null),callListeners())}function onBlurWindow(){previousModality=modality,previousActiveModality=activeModality,activeModality=KEYBOARD,modality=KEYBOARD,callListeners(),isEmulatingMouseEvents=!1}function onFocusWindow(){restoreModality()}function onKeyDown(e){e.metaKey||e.altKey||e.ctrlKey||modality!==KEYBOARD&&(modality=KEYBOARD,activeModality=KEYBOARD,callListeners())}function onVisibilityChange(){"hidden"!==document.visibilityState&&restoreModality()}function onPointerish(e){var t=e.type;if(supportsPointerEvent()){if(t===POINTERDOWN)return void(activeModality!==e.pointerType&&(modality=e.pointerType,activeModality=e.pointerType,callListeners()));if(t===POINTERMOVE)return void(modality!==e.pointerType&&(modality=e.pointerType,callListeners()))}else{if(isEmulatingMouseEvents||(t===MOUSEDOWN&&activeModality!==MOUSE&&(modality=MOUSE,activeModality=MOUSE,callListeners()),t===MOUSEMOVE&&modality!==MOUSE&&(modality=MOUSE,callListeners())),t===TOUCHSTART)return isEmulatingMouseEvents=!0,e.touches&&e.touches.length>1&&(isEmulatingMouseEvents=!1),void(activeModality!==TOUCH&&(modality=TOUCH,activeModality=TOUCH,callListeners()));t!==CONTEXTMENU&&t!==MOUSEUP&&t!==SELECTIONCHANGE&&t!==SCROLL&&t!==TOUCHCANCEL&&t!==TOUCHMOVE||(isEmulatingMouseEvents=!1)}}function callListeners(){var e={activeModality:activeModality,modality:modality};listeners.forEach(function(t){t(e)})}canUseDOM&&(addBlurListener(window,onBlurWindow),addFocusListener(window,onFocusWindow),addKeyDownListener(document,onKeyDown),addPointerDownListener(document,onPointerish),addPointerMoveListener(document,onPointerish),addVisibilityChangeListener(document,onVisibilityChange),addContextMenuListener(document,onPointerish),addMouseDownListener(document,onPointerish),addMouseMoveListener(document,onPointerish),addMouseUpListener(document,onPointerish),addTouchCancelListener(document,onPointerish),addTouchMoveListener(document,onPointerish),addTouchStartListener(document,onPointerish),addSelectiomChangeListener(document,onPointerish),addScrollListener(document,onPointerish));export function getActiveModality(){return activeModality};export function getModality(){return modality};export function addModalityListener(e){return listeners.add(e),function(){listeners.delete(e)}};export function testOnly_resetActiveModality(){isEmulatingMouseEvents=!1,activeModality=KEYBOARD,modality=KEYBOARD};