import*as React from"react";import*as ResponderSystem from"./ResponderSystem";var emptyObject={},idCounter=0;function useStable(e){var t=React.useRef(null);return null==t.current&&(t.current=e()),t.current}export default function useResponderEvents(c,S){void 0===S&&(S=emptyObject);var a=useStable(function(){return idCounter++}),p=React.useRef(!1);React.useEffect(function(){return ResponderSystem.attachListeners(),function(){ResponderSystem.removeNode(a)}},[a]),React.useEffect(function(){var e=S,t=e.onMoveShouldSetResponder,n=e.onMoveShouldSetResponderCapture,r=e.onScrollShouldSetResponder,o=e.onScrollShouldSetResponderCapture,u=e.onSelectionChangeShouldSetResponder,s=e.onSelectionChangeShouldSetResponderCapture,l=e.onStartShouldSetResponder,d=e.onStartShouldSetResponderCapture,e=c.current;null!=t||null!=n||null!=r||null!=o||null!=u||null!=s||null!=l||null!=d?(ResponderSystem.addNode(a,e,S),p.current=!0):p.current&&(ResponderSystem.removeNode(a),p.current=!1)},[S,c,a]),React.useDebugValue({isResponder:c.current===ResponderSystem.getResponderNode()}),React.useDebugValue(S)}