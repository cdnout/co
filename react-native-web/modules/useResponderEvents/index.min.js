import*as React from"react";import*as ResponderSystem from"./ResponderSystem";var emptyObject={},idCounter=0;function useStable(e){var t=React.useRef(null);return null==t.current&&(t.current=e()),t.current}export default function useResponderEvents(e,t){void 0===t&&(t=emptyObject);var n=useStable(function(){return idCounter++}),r=React.useRef(!1);React.useEffect(function(){return ResponderSystem.attachListeners(),function(){ResponderSystem.removeNode(n)}},[n]),React.useEffect(function(){var o=t,u=o.onMoveShouldSetResponder,s=o.onMoveShouldSetResponderCapture,l=o.onScrollShouldSetResponder,d=o.onScrollShouldSetResponderCapture,c=o.onSelectionChangeShouldSetResponder,S=o.onSelectionChangeShouldSetResponderCapture,a=o.onStartShouldSetResponder,p=o.onStartShouldSetResponderCapture,R=null!=u||null!=s||null!=l||null!=d||null!=c||null!=S||null!=a||null!=p,f=e.current;R?(ResponderSystem.addNode(n,f,t),r.current=!0):r.current&&(ResponderSystem.removeNode(n),r.current=!1)},[t,e,n]),React.useDebugValue({isResponder:e.current===ResponderSystem.getResponderNode()}),React.useDebugValue(t)};