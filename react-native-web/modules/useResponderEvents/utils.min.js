import isSelectionValid from"../../modules/isSelectionValid";var keyName="__reactResponderId";function getEventPath(e){return"selectionchange"===e.type?composedPathFallback(window.getSelection().anchorNode):null!=e.composedPath?e.composedPath():composedPathFallback(e.target)}function composedPathFallback(e){for(var t=[];null!=e&&e!==document.body;)t.push(e),e=e.parentNode;return t}function getResponderId(e){return null!=e?e[keyName]:null}export function setResponderId(e,t){null!=e&&(e[keyName]=t)};export function getResponderPaths(e){for(var t=[],n=[],o=getEventPath(e),r=0;r<o.length;r++){var a=o[r],l=getResponderId(a);null!=l&&(t.push(l),n.push(a))}return{idPath:t,nodePath:n}};export function getLowestCommonAncestor(e,t){var n=e.length,o=t.length;if(0===n||0===o||e[n-1]!==t[o-1])return null;var r=e[0],a=0,l=t[0],u=0;n-o>0&&(r=e[a=n-o],n=o),o-n>0&&(l=t[u=o-n],o=n);for(var c=n;c--;){if(r===l)return r;r=e[a++],l=t[u++]}return null};export function hasTargetTouches(e,t){if(!t||0===t.length)return!1;for(var n=0;n<t.length;n++){var o=t[n].target;if(null!=o&&e.contains(o))return!0}return!1};export function hasValidSelection(e){return"selectionchange"===e.type?isSelectionValid():"select"===e.type};export function isPrimaryPointerDown(e){var t=e.altKey,n=e.button,o=e.buttons,r=e.ctrlKey,a=e.type,l=!1===t&&!1===r;return!!("touchstart"===a||"touchmove"===a||"mousedown"===a&&(0===n||1===o)&&l||"mousemove"===a&&1===o&&l)};