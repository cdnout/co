import{canUseDOM}from"fbjs/lib/ExecutionEnvironment";import useLayoutEffect from"../useLayoutEffect";import UIManager from"../../exports/UIManager";var DOM_LAYOUT_HANDLER_NAME="__reactLayoutHandler",didWarn=!canUseDOM,resizeObserver=null;function getResizeObserver(){return canUseDOM&&void 0!==window.ResizeObserver?null==resizeObserver&&(resizeObserver=new window.ResizeObserver(function(e){e.forEach(function(e){var r=e.target,t=r[DOM_LAYOUT_HANDLER_NAME];"function"==typeof t&&UIManager.measure(r,function(r,n,o,u,i,s){var a={nativeEvent:{layout:{x:r,y:n,width:o,height:u,left:i,top:s}},timeStamp:Date.now()};Object.defineProperty(a.nativeEvent,"target",{enumerable:!0,get:function(){return e.target}}),t(a)})})})):didWarn||"production"!==process.env.NODE_ENV&&"test"!==process.env.NODE_ENV&&(console.warn("onLayout relies on ResizeObserver which is not supported by your browser. Please include a polyfill, e.g., https://github.com/que-etc/resize-observer-polyfill."),didWarn=!0),resizeObserver}export default function useElementLayout(e,r){var t=getResizeObserver();useLayoutEffect(function(){var t=e.current;null!=t&&(t[DOM_LAYOUT_HANDLER_NAME]=r)},[e,r]),useLayoutEffect(function(){var r=e.current;return null!=r&&null!=t&&("function"==typeof r[DOM_LAYOUT_HANDLER_NAME]?t.observe(r):t.unobserve(r)),function(){null!=r&&null!=t&&t.unobserve(r)}},[e,t])};